{"version":3,"file":"index.mjs","sources":["../src/utils/factory.ts","../src/utils/validation.ts"],"sourcesContent":["/**\n * Factory functions for creating wallet instances\n */\n\nimport { WalletEngine } from '../engine/WalletEngine';\nimport type { WalletConfig } from '../engine/types';\n\n/**\n * Create a new wallet engine instance\n */\nexport async function createWallet(config: Partial<WalletConfig> = {}): Promise<WalletEngine> {\n  const defaultConfig: WalletConfig = {\n    name: 'YAKKL Wallet',\n    version: '1.0.0',\n    embedded: false,\n    restrictions: [],\n    modDiscovery: true,\n    enableMods: true,\n    enableDiscovery: true,\n    storagePrefix: 'yakkl',\n    logLevel: 'info',\n    ...config\n  };\n\n  const engine = new WalletEngine(defaultConfig);\n  await engine.initialize();\n  \n  return engine;\n}","/**\n * Validation utilities for mods and other components\n */\n\nimport type { Mod, ModManifest } from '../mods/types';\n\n/**\n * Validate a mod implementation\n */\nexport function validateMod(mod: Mod): boolean {\n  try {\n    // Check required properties\n    if (!mod.manifest) {\n      throw new Error('Mod missing manifest');\n    }\n\n    if (!mod.manifest.id || !mod.manifest.name || !mod.manifest.version) {\n      throw new Error('Mod manifest missing required fields');\n    }\n\n    // Check required methods\n    const requiredMethods = ['initialize', 'destroy', 'isLoaded', 'isActive'];\n    for (const method of requiredMethods) {\n      if (typeof mod[method] !== 'function') {\n        throw new Error(`Mod missing required method: ${method}`);\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error('Mod validation failed:', error);\n    return false;\n  }\n}\n\n/**\n * Validate mod manifest\n */\nexport function validateManifest(manifest: ModManifest): boolean {\n  try {\n    if (!manifest.id || !manifest.name || !manifest.version) {\n      throw new Error('Manifest missing required fields');\n    }\n\n    if (typeof manifest.id !== 'string' || manifest.id.length === 0) {\n      throw new Error('Invalid manifest ID');\n    }\n\n    if (typeof manifest.name !== 'string' || manifest.name.length === 0) {\n      throw new Error('Invalid manifest name');\n    }\n\n    if (typeof manifest.version !== 'string' || !/^\\d+\\.\\d+\\.\\d+/.test(manifest.version)) {\n      throw new Error('Invalid manifest version');\n    }\n\n    return true;\n  } catch (error) {\n    console.error('Manifest validation failed:', error);\n    return false;\n  }\n}"],"names":["createWallet","config","defaultConfig","engine","WalletEngine","validateMod","mod","requiredMethods","method","error"],"mappings":";;;AAUsB,eAAAA,EAAaC,IAAgC,IAA2B;AAC5F,QAAMC,IAA8B;AAAA,IAClC,MAAM;AAAA,IACN,SAAS;AAAA,IACT,UAAU;AAAA,IACV,cAAc,CAAC;AAAA,IACf,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,iBAAiB;AAAA,IACjB,eAAe;AAAA,IACf,UAAU;AAAA,IACV,GAAGD;AAAA,EACL,GAEME,IAAS,IAAIC,EAAaF,CAAa;AAC7C,eAAMC,EAAO,WAAW,GAEjBA;AACT;ACnBO,SAASE,EAAYC,GAAmB;AACzC,MAAA;AAEE,QAAA,CAACA,EAAI;AACD,YAAA,IAAI,MAAM,sBAAsB;AAGpC,QAAA,CAACA,EAAI,SAAS,MAAM,CAACA,EAAI,SAAS,QAAQ,CAACA,EAAI,SAAS;AACpD,YAAA,IAAI,MAAM,sCAAsC;AAIxD,UAAMC,IAAkB,CAAC,cAAc,WAAW,YAAY,UAAU;AACxE,eAAWC,KAAUD;AACnB,UAAI,OAAOD,EAAIE,CAAM,KAAM;AACzB,cAAM,IAAI,MAAM,gCAAgCA,CAAM,EAAE;AAIrD,WAAA;AAAA,WACAC,GAAO;AACN,mBAAA,MAAM,0BAA0BA,CAAK,GACtC;AAAA,EAAA;AAEX;"}