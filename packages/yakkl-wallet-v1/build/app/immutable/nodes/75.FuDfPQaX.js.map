{"version":3,"file":"75.FuDfPQaX.js","sources":["../../../../../../src/routes/preview2/lib/components/mods/ModTestSuite.svelte","../../../../../../src/routes/preview2/mods/+page.svelte"],"sourcesContent":["<!--\n  ModTestSuite - Tests the mod system end-to-end\n  \n  This component provides a comprehensive test of the mod system:\n  - Core availability\n  - Mod discovery\n  - Mod loading\n  - Enhancement checking\n  - Component rendering\n-->\n\n<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { \n    isCoreAvailable, \n    initializeCore,\n    discoverMods, \n    loadMod, \n    mods, \n    discoveredMods,\n    checkEnhancements \n  } from '../../core/integration';\n  import { systemModRegistry } from '../../mods/registry';\n\n  let testResults = $state({\n    coreAvailable: false,\n    coreInitialized: false,\n    modsDiscovered: 0,\n    systemModsLoaded: 0,\n    enhancementsFound: 0,\n    networkManagerLoaded: false,\n    accountManagerLoaded: false,\n    componentTests: [],\n    errors: []\n  });\n\n  let testRunning = $state(false);\n  let testOutput = $state([]);\n\n  // Reactive stores\n  let loadedMods = $derived($mods);\n  let discovered = $derived($discoveredMods);\n\n  function log(message: string, type: 'info' | 'success' | 'error' | 'warning' = 'info') {\n    const timestamp = new Date().toLocaleTimeString();\n    testOutput = [...testOutput, { timestamp, message, type }];\n    console.log(`[ModTest] ${message}`);\n  }\n\n  async function runFullTest() {\n    testRunning = true;\n    testOutput = [];\n    testResults.errors = [];\n\n    try {\n      log('🧪 Starting comprehensive mod system test', 'info');\n\n      // Test 1: Core Availability\n      log('📋 Test 1: Core Availability');\n      testResults.coreAvailable = isCoreAvailable();\n      if (testResults.coreAvailable) {\n        log('✅ YAKKL Core is available', 'success');\n      } else {\n        log('⚠️ YAKKL Core not available, initializing...', 'warning');\n        try {\n          await initializeCore();\n          testResults.coreInitialized = true;\n          testResults.coreAvailable = isCoreAvailable();\n          log('✅ YAKKL Core initialized successfully', 'success');\n        } catch (error) {\n          log(`❌ Core initialization failed: ${error.message}`, 'error');\n          testResults.errors.push(`Core init: ${error.message}`);\n        }\n      }\n\n      // Test 2: System Mod Registry\n      log('📋 Test 2: System Mod Registry');\n      const availableMods = systemModRegistry.getAvailableMods();\n      log(`📦 Found ${availableMods.length} mods in registry`, 'info');\n      \n      for (const mod of availableMods) {\n        log(`   - ${mod.name} (${mod.id}) - ${mod.enabled ? 'enabled' : 'disabled'}`, 'info');\n      }\n\n      // Test 3: Mod Discovery\n      log('📋 Test 3: Mod Discovery');\n      try {\n        const discoveredMods = await discoverMods();\n        testResults.modsDiscovered = discoveredMods.length;\n        log(`🔍 Discovered ${discoveredMods.length} mods`, 'success');\n        \n        for (const mod of discoveredMods) {\n          const modName = mod.manifest?.name || mod.name || mod.id;\n          log(`   - ${modName}`, 'info');\n        }\n      } catch (error) {\n        log(`❌ Discovery failed: ${error.message}`, 'error');\n        testResults.errors.push(`Discovery: ${error.message}`);\n      }\n\n      // Test 4: System Mod Loading\n      log('📋 Test 4: System Mod Loading');\n      \n      // Test Network Manager\n      try {\n        const networkMod = await loadMod('system-network-manager');\n        if (networkMod) {\n          testResults.networkManagerLoaded = true;\n          testResults.systemModsLoaded++;\n          log('✅ Network Manager mod loaded', 'success');\n          \n          // Test mod interface\n          if (networkMod.isLoaded && networkMod.isLoaded()) {\n            log('   ✓ Network Manager is loaded', 'success');\n          }\n          if (networkMod.manifest) {\n            log(`   ✓ Manifest: ${networkMod.manifest.name} v${networkMod.manifest.version}`, 'success');\n          }\n        } else {\n          log('❌ Network Manager mod failed to load', 'error');\n          testResults.errors.push('Network Manager loading failed');\n        }\n      } catch (error) {\n        log(`❌ Network Manager error: ${error.message}`, 'error');\n        testResults.errors.push(`Network Manager: ${error.message}`);\n      }\n\n      // Test Account Manager\n      try {\n        const accountMod = await loadMod('system-account-manager');\n        if (accountMod) {\n          testResults.accountManagerLoaded = true;\n          testResults.systemModsLoaded++;\n          log('✅ Account Manager mod loaded', 'success');\n          \n          // Test mod interface\n          if (accountMod.isLoaded && accountMod.isLoaded()) {\n            log('   ✓ Account Manager is loaded', 'success');\n          }\n          if (accountMod.manifest) {\n            log(`   ✓ Manifest: ${accountMod.manifest.name} v${accountMod.manifest.version}`, 'success');\n          }\n        } else {\n          log('❌ Account Manager mod failed to load', 'error');\n          testResults.errors.push('Account Manager loading failed');\n        }\n      } catch (error) {\n        log(`❌ Account Manager error: ${error.message}`, 'error');\n        testResults.errors.push(`Account Manager: ${error.message}`);\n      }\n\n      // Test 5: Enhancement Discovery\n      log('📋 Test 5: Enhancement Discovery');\n      try {\n        const networkEnhancements = await checkEnhancements('network');\n        const accountEnhancements = await checkEnhancements('account');\n        const coreEnhancements = await checkEnhancements('wallet-core');\n        \n        testResults.enhancementsFound = networkEnhancements.length + accountEnhancements.length + coreEnhancements.length;\n        \n        log(`🔧 Found ${networkEnhancements.length} network enhancements`, 'info');\n        log(`👤 Found ${accountEnhancements.length} account enhancements`, 'info');\n        log(`⚙️ Found ${coreEnhancements.length} core enhancements`, 'info');\n        \n        if (testResults.enhancementsFound > 0) {\n          log('✅ Enhancement system working', 'success');\n        }\n      } catch (error) {\n        log(`❌ Enhancement check failed: ${error.message}`, 'error');\n        testResults.errors.push(`Enhancements: ${error.message}`);\n      }\n\n      // Test 6: Component System\n      log('📋 Test 6: Component System');\n      testResults.componentTests = [];\n      \n      for (const mod of loadedMods) {\n        if (mod.getComponent) {\n          try {\n            // Test network manager components\n            if (mod.manifest?.id === 'system-network-manager') {\n              const switcher = mod.getComponent('network-switcher-enhanced');\n              testResults.componentTests.push({\n                mod: 'Network Manager',\n                component: 'network-switcher-enhanced',\n                success: !!switcher\n              });\n              \n              const form = mod.getComponent('custom-network-form');\n              testResults.componentTests.push({\n                mod: 'Network Manager',\n                component: 'custom-network-form',\n                success: !!form\n              });\n            }\n            \n            // Test account manager components\n            if (mod.manifest?.id === 'system-account-manager') {\n              const switcher = mod.getComponent('account-switcher-enhanced');\n              testResults.componentTests.push({\n                mod: 'Account Manager',\n                component: 'account-switcher-enhanced',\n                success: !!switcher\n              });\n              \n              const wizard = mod.getComponent('account-creation-wizard');\n              testResults.componentTests.push({\n                mod: 'Account Manager',\n                component: 'account-creation-wizard',\n                success: !!wizard\n              });\n            }\n          } catch (error) {\n            log(`❌ Component test failed for ${mod.manifest?.name}: ${error.message}`, 'error');\n            testResults.errors.push(`Component ${mod.manifest?.id}: ${error.message}`);\n          }\n        }\n      }\n\n      const successfulComponents = testResults.componentTests.filter(t => t.success).length;\n      log(`🧩 Component tests: ${successfulComponents}/${testResults.componentTests.length} passed`, \n          successfulComponents === testResults.componentTests.length ? 'success' : 'warning');\n\n      // Test 7: Registry Statistics\n      log('📋 Test 7: Registry Statistics');\n      const stats = systemModRegistry.getStatistics();\n      log(`📊 Registry Stats:`, 'info');\n      log(`   - Total mods: ${stats.total}`, 'info');\n      log(`   - Enabled: ${stats.enabled}`, 'info');\n      log(`   - Loaded: ${stats.loaded}`, 'info');\n      log(`   - System mods: ${stats.system}`, 'info');\n      log(`   - Categories: ${Object.keys(stats.byCategory).join(', ')}`, 'info');\n\n      // Final Results\n      log('📋 Test Summary', 'info');\n      if (testResults.errors.length === 0) {\n        log('🎉 All tests passed successfully!', 'success');\n      } else {\n        log(`⚠️ Tests completed with ${testResults.errors.length} errors`, 'warning');\n      }\n\n    } catch (error) {\n      log(`💥 Test suite failed: ${error.message}`, 'error');\n      testResults.errors.push(`Test suite: ${error.message}`);\n    } finally {\n      testRunning = false;\n    }\n  }\n\n  function getLogIcon(type: string) {\n    switch (type) {\n      case 'success': return '✅';\n      case 'error': return '❌';\n      case 'warning': return '⚠️';\n      default: return 'ℹ️';\n    }\n  }\n\n  function getLogColor(type: string) {\n    switch (type) {\n      case 'success': return 'text-green-600 dark:text-green-400';\n      case 'error': return 'text-red-600 dark:text-red-400';\n      case 'warning': return 'text-yellow-600 dark:text-yellow-400';\n      default: return 'text-blue-600 dark:text-blue-400';\n    }\n  }\n\n  onMount(() => {\n    // Auto-run test on mount\n    runFullTest();\n  });\n</script>\n\n<div class=\"p-6 bg-white dark:bg-zinc-900 rounded-xl border border-zinc-200 dark:border-zinc-700\">\n  <div class=\"flex items-center justify-between mb-6\">\n    <div>\n      <h2 class=\"text-xl font-bold text-zinc-900 dark:text-white\">Mod System Test Suite</h2>\n      <p class=\"text-sm text-zinc-600 dark:text-zinc-400\">Comprehensive testing of mod loading, discovery, and enhancements</p>\n    </div>\n    \n    <button\n      onclick={runFullTest}\n      disabled={testRunning}\n      class=\"yakkl-btn-primary {testRunning ? 'opacity-50' : ''}\"\n    >\n      {#if testRunning}\n        <svg class=\"w-4 h-4 animate-spin mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n        </svg>\n        Running Tests...\n      {:else}\n        🧪 Run Tests\n      {/if}\n    </button>\n  </div>\n\n  <!-- Test Results Summary -->\n  <div class=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n    <div class=\"bg-zinc-50 dark:bg-zinc-800 p-4 rounded-lg\">\n      <div class=\"text-2xl font-bold text-zinc-900 dark:text-white\">\n        {testResults.coreAvailable ? '✅' : '❌'}\n      </div>\n      <div class=\"text-sm text-zinc-600 dark:text-zinc-400\">Core Available</div>\n    </div>\n    \n    <div class=\"bg-zinc-50 dark:bg-zinc-800 p-4 rounded-lg\">\n      <div class=\"text-2xl font-bold text-zinc-900 dark:text-white\">\n        {testResults.systemModsLoaded}\n      </div>\n      <div class=\"text-sm text-zinc-600 dark:text-zinc-400\">System Mods Loaded</div>\n    </div>\n    \n    <div class=\"bg-zinc-50 dark:bg-zinc-800 p-4 rounded-lg\">\n      <div class=\"text-2xl font-bold text-zinc-900 dark:text-white\">\n        {testResults.modsDiscovered}\n      </div>\n      <div class=\"text-sm text-zinc-600 dark:text-zinc-400\">Mods Discovered</div>\n    </div>\n    \n    <div class=\"bg-zinc-50 dark:bg-zinc-800 p-4 rounded-lg\">\n      <div class=\"text-2xl font-bold text-zinc-900 dark:text-white\">\n        {testResults.enhancementsFound}\n      </div>\n      <div class=\"text-sm text-zinc-600 dark:text-zinc-400\">Enhancements</div>\n    </div>\n  </div>\n\n  <!-- Component Test Results -->\n  {#if testResults.componentTests.length > 0}\n    <div class=\"mb-6\">\n      <h3 class=\"text-lg font-semibold text-zinc-900 dark:text-white mb-3\">Component Tests</h3>\n      <div class=\"space-y-2\">\n        {#each testResults.componentTests as test}\n          <div class=\"flex items-center justify-between p-3 bg-zinc-50 dark:bg-zinc-800 rounded-lg\">\n            <div>\n              <span class=\"font-medium text-zinc-900 dark:text-white\">{test.mod}</span>\n              <span class=\"text-zinc-600 dark:text-zinc-400\"> → {test.component}</span>\n            </div>\n            <div class=\"text-lg\">\n              {test.success ? '✅' : '❌'}\n            </div>\n          </div>\n        {/each}\n      </div>\n    </div>\n  {/if}\n\n  <!-- Errors -->\n  {#if testResults.errors.length > 0}\n    <div class=\"mb-6\">\n      <h3 class=\"text-lg font-semibold text-red-600 dark:text-red-400 mb-3\">Errors ({testResults.errors.length})</h3>\n      <div class=\"space-y-2\">\n        {#each testResults.errors as error}\n          <div class=\"p-3 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg\">\n            <span class=\"text-red-700 dark:text-red-300 text-sm\">{error}</span>\n          </div>\n        {/each}\n      </div>\n    </div>\n  {/if}\n\n  <!-- Test Output Log -->\n  <div>\n    <h3 class=\"text-lg font-semibold text-zinc-900 dark:text-white mb-3\">Test Output</h3>\n    <div class=\"bg-zinc-900 dark:bg-black rounded-lg p-4 max-h-96 overflow-y-auto\">\n      <div class=\"font-mono text-sm space-y-1\">\n        {#each testOutput as log}\n          <div class=\"flex items-start gap-2\">\n            <span class=\"text-zinc-500 text-xs mt-0.5\">{log.timestamp}</span>\n            <span class=\"text-lg leading-none\">{getLogIcon(log.type)}</span>\n            <span class={getLogColor(log.type)}>{log.message}</span>\n          </div>\n        {/each}\n        \n        {#if testRunning}\n          <div class=\"flex items-center gap-2 mt-4\">\n            <div class=\"w-2 h-2 bg-blue-500 rounded-full animate-pulse\"></div>\n            <span class=\"text-blue-400\">Running tests...</span>\n          </div>\n        {/if}\n      </div>\n    </div>\n  </div>\n</div>","<script lang=\"ts\">\n  import ModDashboard from \"../lib/components/mods/ModDashboard.svelte\";\n  import ModTestSuite from \"../lib/components/mods/ModTestSuite.svelte\";\n  \n  let activeTab = $state('dashboard');\n</script>\n\n<svelte:head>\n  <title>Mods - YAKKL Wallet Preview 2.0</title>\n</svelte:head>\n\n<div class=\"max-w-6xl mx-auto p-6\">\n  <!-- Header -->\n  <div class=\"mb-8\">\n    <h1 class=\"text-3xl font-bold text-zinc-900 dark:text-white mb-2\">Mods</h1>\n    <p class=\"text-zinc-600 dark:text-zinc-400\">\n      Extend your wallet with powerful plugins and enhancements\n    </p>\n  </div>\n\n  <!-- Tabs -->\n  <div class=\"flex gap-4 mb-6 border-b border-zinc-200 dark:border-zinc-700\">\n    <button\n      onclick={() => activeTab = 'dashboard'}\n      class=\"px-4 py-2 text-sm font-medium border-b-2 transition-colors {\n        activeTab === 'dashboard' \n          ? 'border-indigo-500 text-indigo-600 dark:text-indigo-400' \n          : 'border-transparent text-zinc-600 dark:text-zinc-400 hover:text-zinc-900 dark:hover:text-zinc-200'\n      }\"\n    >\n      📦 Mod Dashboard\n    </button>\n    <button\n      onclick={() => activeTab = 'test'}\n      class=\"px-4 py-2 text-sm font-medium border-b-2 transition-colors {\n        activeTab === 'test' \n          ? 'border-indigo-500 text-indigo-600 dark:text-indigo-400' \n          : 'border-transparent text-zinc-600 dark:text-zinc-400 hover:text-zinc-900 dark:hover:text-zinc-200'\n      }\"\n    >\n      🧪 Test Suite\n    </button>\n  </div>\n\n  <!-- Content -->\n  {#if activeTab === 'dashboard'}\n    <ModDashboard />\n  {:else}\n    <ModTestSuite />\n  {/if}\n</div>"],"names":["testResults","$.tag_proxy","coreAvailable","coreInitialized","modsDiscovered","systemModsLoaded","enhancementsFound","networkManagerLoaded","accountManagerLoaded","componentTests","errors","testRunning","$.tag","$.state","testOutput","$.proxy","loadedMods","$.derived","$mods","$discoveredMods","log","message","type","timestamp","Date","toLocaleTimeString","$.get","console","runFullTest","set","isCoreAvailable","initializeCore","error","push","availableMods","systemModRegistry","getAvailableMods","length","mod","name","id","enabled","discoveredMods","discoverMods","modName","_a","manifest","networkMod","loadMod","isLoaded","version","accountMod","networkEnhancements","checkEnhancements","accountEnhancements","coreEnhancements","getComponent","_b","switcher","component","success","form","_c","wizard","_d","_e","successfulComponents","filter","t","stats","getStatistics","total","loaded","system","Object","keys","byCategory","join","getLogIcon","getLogColor","onMount","$$render","consequent","alternate","$.index","$$anchor","test","$.set_text","text_5","text_6","text_7","consequent_1","consequent_2","each","node_3","$$index_2","$$array","text_10","text_12","consequent_3","text_1","set_text","text_2","text_3","text_4","on_click","_","activeTab","$.set","on_click_1","__1","$.strict_equals","set_class","button","button_1"],"mappings":"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"}