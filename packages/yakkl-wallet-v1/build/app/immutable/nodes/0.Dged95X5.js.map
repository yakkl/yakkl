{"version":3,"file":"0.Dged95X5.js","sources":["../../../../../../src/routes/+layout.ts","../../../../../../src/lib/components/SessionWarning.svelte","../../../../../../src/lib/components/SessionProvider.svelte","../../../../../../src/routes/+layout.svelte"],"sourcesContent":["// Top-level +layout.ts\nexport const prerender = true; // Must be here to create files. Do NOT use ssr = false because this will keep routes from working well\n\nimport { YAKKL_INTERNAL } from '$lib/common/constants';\nimport { isServerSide, wait } from '$lib/common/utils';\nimport type { Runtime } from 'webextension-polyfill';\nimport { handleLockDown } from '$lib/common/handlers';\nimport { log } from '$lib/common/logger-wrapper';\nimport { initializeBrowserAPI } from '$lib/browser-polyfill-wrapper';\n// Import but don't use at module level\nimport { browser_ext } from '$lib/common/environment';\n\nlet port: Runtime.Port | undefined;\n\n// Function to connect port - will only run in browser context during load\nasync function connectPort(): Promise<boolean> {\n\tif (!browser_ext) {\n\t\treturn false;\n\t}\n\n\ttry {\n\t\tport = browser_ext.runtime.connect({ name: YAKKL_INTERNAL });\n\t\tif (port) {\n\t\t\tport.onDisconnect.addListener(async (event) => {\n\t\t\t\thandleLockDown();\n\t\t\t\tport = undefined;\n\t\t\t\tif (event?.error) {\n\t\t\t\t\tlog.error('Port disconnect:', false, event.error?.message);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn true;\n\t\t}\n\t} catch (error) {\n\t\tlog.error('Port connection failed:', false, error);\n\t}\n\treturn false;\n}\n\n// This function will only be called during load, not during SSR\nasync function initializeExtension() {\n\ttry {\n\t\tlet connected = await connectPort();\n\t\tif (!connected) {\n\t\t\tlog.info('Port connection failed, retrying in 1 second...');\n\t\t\tawait wait(1000);\n\t\t\tconnected = await connectPort();\n\t\t}\n\t} catch (error) {\n\t\tlog.error('Extension initialization failed:', false, error);\n\t}\n}\n\n// Move the initialization to the load function to prevent SSR issues\nexport const load = async () => {\n\t// Skip extension initialization during SSR\n\tif (isServerSide()) {\n\t\treturn {};\n\t}\n\n\ttry {\n\t\t// Initialize the browser API\n\t\tconst browser = initializeBrowserAPI();\n\t\t// Only proceed with extension initialization if we have a browser API\n\t\tif (browser) {\n\t\t\tawait initializeExtension();\n\t\t}\n\t} catch (error) {\n\t\tlog.error('Error initializing extension:', false, error);\n\t}\n\treturn {};\n};\n","<!-- SessionWarning.svelte -->\n<script lang=\"ts\">\n\timport Modal from './Modal.svelte';\n\timport { log } from '$lib/common/logger-wrapper';\n\n\tinterface Props {\n\t\tshow: boolean;\n\t\ttimeRemaining: number; // in seconds\n\t\tonExtendSession: () => void;\n\t\tonLogoutNow: () => void;\n\t\tautoLogoutEnabled?: boolean;\n\t}\n\n\tlet {\n\t\tshow = $bindable(false),\n\t\ttimeRemaining,\n\t\tonExtendSession,\n\t\tonLogoutNow,\n\t\tautoLogoutEnabled = true\n\t}: Props = $props();\n\n\tlet countdownInterval: ReturnType<typeof setInterval> | null = null;\n\tlet localTimeRemaining = $state(timeRemaining);\n\n\t// Format time as MM:SS with input validation\n\tconst formattedTime = $derived(() => {\n\t\ttry {\n\t\t\t// Validate and sanitize input\n\t\t\tconst timeValue = localTimeRemaining || 0;\n\t\t\tconst validTimeRemaining = Math.max(0, Math.floor(timeValue));\n\t\t\tconst minutes = Math.floor(validTimeRemaining / 60);\n\t\t\tconst seconds = validTimeRemaining % 60;\n\t\t\treturn `${minutes}:${seconds.toString().padStart(2, '0')}`;\n\t\t} catch (error) {\n\t\t\tlog.error('Error formatting time:', false, error);\n\t\t\treturn '0:00';\n\t\t}\n\t});\n\n\tconst isUrgent = $derived(localTimeRemaining <= 30); // Last 30 seconds\n\tconst isCritical = $derived(localTimeRemaining <= 10); // Last 10 seconds\n\n\t// Update local countdown\n\t$effect(() => {\n\t\tlocalTimeRemaining = timeRemaining;\n\t});\n\n\t// Handle countdown and auto-logout\n\t$effect(() => {\n\t\tif (show && autoLogoutEnabled) {\n\t\t\tcountdownInterval = setInterval(() => {\n\t\t\t\tlocalTimeRemaining--;\n\n\t\t\t\tif (localTimeRemaining <= 0) {\n\t\t\t\t\tlog.warn('Session expired - auto logout', false);\n\t\t\t\t\thandleLogoutNow();\n\t\t\t\t}\n\t\t\t}, 1000);\n\n\t\t\treturn () => {\n\t\t\t\tif (countdownInterval) {\n\t\t\t\t\tclearInterval(countdownInterval);\n\t\t\t\t\tcountdownInterval = null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t});\n\n\t// Cleanup on component destruction\n\t$effect(() => {\n\t\treturn () => {\n\t\t\tif (countdownInterval) {\n\t\t\t\tclearInterval(countdownInterval);\n\t\t\t}\n\t\t};\n\t});\n\n\tfunction handleExtendSession() {\n\t\ttry {\n\t\t\tonExtendSession();\n\t\t\tshow = false;\n\t\t\tlog.debug('Session extended by user', false);\n\t\t} catch (error) {\n\t\t\tlog.error('Failed to extend session:', false, error);\n\t\t}\n\t}\n\n\tfunction handleLogoutNow() {\n\t\ttry {\n\t\t\tif (countdownInterval) {\n\t\t\t\tclearInterval(countdownInterval);\n\t\t\t\tcountdownInterval = null;\n\t\t\t}\n\t\t\tonLogoutNow();\n\t\t\tshow = false;\n\t\t\tlog.debug('User logged out via session warning', false);\n\t\t} catch (error) {\n\t\t\tlog.error('Failed to logout:', false, error);\n\t\t}\n\t}\n\n\t// Keyboard shortcuts\n\tfunction handleKeydown(event: KeyboardEvent) {\n\t\tif (!show) return;\n\n\t\tif (event.key === 'Enter') {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\thandleExtendSession();\n\t\t} else if (event.key === 'Escape') {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\thandleLogoutNow();\n\t\t}\n\t}\n</script>\n\n<svelte:window on:keydown={handleKeydown} />\n\n<Modal bind:show title=\"Session Expiring\" className=\"z-[800]\" preventClose={false} onClose={handleLogoutNow}>\n\t<div class=\"p-6 text-center space-y-6\">\n\t\t<!-- Warning icon and countdown -->\n\t\t<div class=\"flex flex-col items-center space-y-4\">\n\t\t\t<div class=\"relative\">\n\t\t\t\t<svg\n\t\t\t\t\tclass=\"w-16 h-16 {isCritical\n\t\t\t\t\t\t? 'text-red-500 animate-pulse'\n\t\t\t\t\t\t: isUrgent\n\t\t\t\t\t\t\t? 'text-orange-500 animate-bounce'\n\t\t\t\t\t\t\t: 'text-yellow-500'}\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\t\td=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\"\n\t\t\t\t\t/>\n\t\t\t\t</svg>\n\t\t\t\t{#if isCritical}\n\t\t\t\t\t<div class=\"absolute -top-1 -right-1 w-4 h-4 bg-red-500 rounded-full animate-ping\"></div>\n\t\t\t\t{/if}\n\t\t\t</div>\n\n\t\t\t<div class=\"text-center\">\n\t\t\t\t<h3 class=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-2\">\n\t\t\t\t\tYour session is about to expire\n\t\t\t\t</h3>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"text-3xl font-mono font-bold {isCritical\n\t\t\t\t\t\t? 'text-red-500'\n\t\t\t\t\t\t: isUrgent\n\t\t\t\t\t\t\t? 'text-orange-500'\n\t\t\t\t\t\t\t: 'text-yellow-600'}\"\n\t\t\t\t>\n\t\t\t\t\t{formattedTime}\n\t\t\t\t</div>\n\t\t\t\t<p class=\"text-sm text-gray-600 dark:text-gray-400 mt-2\">\n\t\t\t\t\t{isCritical\n\t\t\t\t\t\t? 'Logging out in seconds!'\n\t\t\t\t\t\t: isUrgent\n\t\t\t\t\t\t\t? 'Time is running out!'\n\t\t\t\t\t\t\t: 'You will be automatically logged out for security.'}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<!-- Session info -->\n\t\t<div class=\"bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg\">\n\t\t\t<p class=\"text-sm text-blue-800 dark:text-blue-200\">\n\t\t\t\tFor your security, we automatically log you out after periods of inactivity. You can extend\n\t\t\t\tyour session to continue working.\n\t\t\t</p>\n\t\t</div>\n\n\t\t<!-- Action buttons -->\n\t\t<div class=\"flex gap-4 justify-center\">\n\t\t\t<button\n\t\t\t\tonclick={handleLogoutNow}\n\t\t\t\tclass=\"px-6 py-3 text-sm font-medium text-gray-700 dark:text-gray-300 bg-gray-200 dark:bg-gray-700 rounded-lg hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors\"\n\t\t\t\ttitle=\"Logout Now (Esc)\"\n\t\t\t>\n\t\t\t\tLogout Now\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tonclick={handleExtendSession}\n\t\t\t\tclass=\"px-6 py-3 text-sm font-medium text-white bg-indigo-600 rounded-lg hover:bg-indigo-700 transition-colors shadow-md {isCritical\n\t\t\t\t\t? 'animate-pulse'\n\t\t\t\t\t: ''}\"\n\t\t\t\ttitle=\"Extend Session (Enter)\"\n\t\t\t>\n\t\t\t\tExtend Session (+30 min)\n\t\t\t</button>\n\t\t</div>\n\n\t\t<!-- Keyboard shortcuts hint -->\n\t\t<div class=\"text-xs text-gray-500 dark:text-gray-400 border-t pt-4\">\n\t\t\t<p>\n\t\t\t\tKeyboard shortcuts: <kbd class=\"px-1 py-0.5 bg-gray-200 dark:bg-gray-700 rounded text-xs\"\n\t\t\t\t\t>Enter</kbd\n\t\t\t\t>\n\t\t\t\tto extend, <kbd class=\"px-1 py-0.5 bg-gray-200 dark:bg-gray-700 rounded text-xs\">Esc</kbd> to\n\t\t\t\tlogout\n\t\t\t</p>\n\t\t</div>\n\t</div>\n</Modal>\n","<!-- SessionProvider.svelte -->\n<script lang=\"ts\">\n\timport { onMount } from 'svelte';\n\timport { goto } from '$app/navigation';\n\timport { authStore, showSessionWarning, sessionTimeRemaining } from '$lib/stores/auth-store';\n\timport SessionWarning from './SessionWarning.svelte';\n\timport { log } from '$lib/common/logger-wrapper';\n\timport { protectedContexts } from '$lib/common/globals';\n\timport { PATH_LOGOUT } from '$lib/common';\n\n\tinterface Props {\n\t\tchildren: any;\n\t}\n\n\tlet { children }: Props = $props();\n\tlet shouldShowSessionWarning = $state(false);\n\n\t// Check if current context needs session warnings\n\tfunction getCurrentContextType(): string {\n\t\ttry {\n\t\t\tif (typeof window === 'undefined') return 'unknown';\n\n\t\t\tconst pathname = window.location.pathname;\n\t\t\tconst href = window.location.href;\n\n\t\t\tif (pathname.includes('sidepanel') || href.includes('sidepanel')) {\n\t\t\t\treturn 'sidepanel';\n\t\t\t} else if (\n\t\t\t\tpathname.includes('index.html') ||\n\t\t\t\thref.includes('index.html') ||\n\t\t\t\tpathname === '/' ||\n\t\t\t\tpathname === ''\n\t\t\t) {\n\t\t\t\treturn 'popup-wallet';\n\t\t\t} else if (pathname.includes('dapp/popups') || href.includes('dapp/popups')) {\n\t\t\t\treturn 'popup-dapp';\n\t\t\t} else {\n\t\t\t\treturn 'popup-wallet'; // Default to popup-wallet for main extension\n\t\t\t}\n\t\t} catch (error) {\n\t\t\treturn 'unknown';\n\t\t}\n\t}\n\n\tfunction currentContextNeedsSessionWarning(): boolean {\n\t\tconst contextType = getCurrentContextType();\n\t\treturn protectedContexts.includes(contextType);\n\t}\n\n\tonMount(() => {\n\t\tshouldShowSessionWarning = currentContextNeedsSessionWarning();\n\t\tlog.debug('SessionProvider context check:', false, { \n\t\t\tcontextType: getCurrentContextType(), \n\t\t\tshouldShowSessionWarning \n\t\t});\n\t});\n\n\t// Handle session extension\n\tasync function handleExtendSession() {\n\t\ttry {\n\t\t\tawait authStore.extendSession(30); // Extend by 30 minutes\n\t\t\tlog.debug('Session extended via session provider', false);\n\t\t} catch (error) {\n\t\t\tlog.error('Failed to extend session:', false, error);\n\t\t}\n\t}\n\n\t// Handle logout\n\tasync function handleLogoutNow() {\n\t\ttry {\n\t\t\tawait authStore.logout();\n\t\t\tlog.debug('User logged out via session provider', false);\n\t\t\t// Navigate to logout page\n\t\t\tgoto(PATH_LOGOUT);\n\t\t} catch (error) {\n\t\t\tlog.error('Failed to logout:', false, error);\n\t\t\t// Still try to navigate even if logout fails\n\t\t\tgoto(PATH_LOGOUT);\n\t\t}\n\t}\n</script>\n\n<!-- Render children -->\n{@render children()}\n\n<!-- Global session warning modal - only show in protected contexts -->\n{#if shouldShowSessionWarning}\n\t<SessionWarning\n\t\tbind:show={$showSessionWarning}\n\t\ttimeRemaining={$sessionTimeRemaining}\n\t\tonExtendSession={handleExtendSession}\n\t\tonLogoutNow={handleLogoutNow}\n\t\tautoLogoutEnabled={true}\n\t/>\n{/if}\n","<script lang=\"ts\">\n\timport { onMount } from 'svelte';\n\timport { initializeBrowserAPI } from '$lib/browser-polyfill-wrapper';\n\timport '../app.css';\n\timport { browser_ext } from '$lib/common/environment';\n\timport { sessionToken, sessionExpiresAt, storeSessionToken } from '$lib/common/auth/session';\n\timport { get } from 'svelte/store';\n\timport { log } from '$lib/managers/Logger';\n\timport SessionProvider from '$lib/components/SessionProvider.svelte';\n\n\tlet { children } = $props();\n\n\tonMount(async () => {\n\t\ttry {\n\t\t\tbrowser_ext.runtime.onMessage.addListener((message: any): any => {\n\t\t\t\tif (message?.type === 'SESSION_TOKEN_BROADCAST') {\n\t\t\t\t\tstoreSessionToken(message.token, message.expiresAt);\n\t\t\t\t\tlog.info(\n\t\t\t\t\t\t'[Layout] Session token set:',\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t{ sessionToken, sessionExpiresAt },\n\t\t\t\t\t\tget(sessionToken),\n\t\t\t\t\t\tget(sessionExpiresAt)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t\tinitializeBrowserAPI();\n\t\t} catch (error) {\n\t\t\tlog.warn('Error initializing layout:', false, error);\n\t\t}\n\t});\n</script>\n\n<SessionProvider>\n\t{@render children?.()}\n</SessionProvider>\n"],"names":["prerender","port","async","connectPort","browser_ext","runtime","connect","name","YAKKL_INTERNAL","onDisconnect","addListener","event","handleLockDown","error","log","_a","message","initializeExtension","connected","info","wait","load","isServerSide","browser","initializeBrowserAPI","show","$.prop","$$props","autoLogoutEnabled","countdownInterval","localTimeRemaining","$.tag","$.state","$.proxy","timeRemaining","formattedTime","$.derived","timeValue","$.get","validTimeRemaining","Math","max","floor","minutes","seconds","toString","padStart","isUrgent","isCritical","$.user_effect","set","setInterval","$.update","warn","handleLogoutNow","clearInterval","handleExtendSession","debug","handleKeydown","$.strict_equals","key","preventDefault","stopPropagation","$$render","consequent","$.set_class","svg","div_5","set_text","text_1","shouldShowSessionWarning","getCurrentContextType","window","pathname","location","href","includes","currentContextNeedsSessionWarning","contextType","protectedContexts","onMount","authStore","extendSession","logout","goto","PATH_LOGOUT","$sessionTimeRemaining","$showSessionWarning","onMessage","type","storeSessionToken","token","expiresAt","sessionToken","sessionExpiresAt","get","log$1"],"mappings":"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"}