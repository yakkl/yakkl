var __defProp=Object.defineProperty;var __defNormalProp=(obj,key,value)=>key in obj?__defProp(obj,key,{enumerable:true,configurable:true,writable:true,value:value}):obj[key]=value;var __publicField=(obj,key,value)=>__defNormalProp(obj,typeof key!=="symbol"?key+"":key,value);import{W as Wallet,F as walletStore}from"./Cb2naUpm.js";import{g as get}from"./B2gA1VsD.js";import{l as log}from"./WDN37msH.js";const _WalletManager=class _WalletManager{static getInstance(providerNames,blockchainNames=["Ethereum"],chainId=1,apiKey=null,privateKey=null){try{if(!_WalletManager.instance){_WalletManager.instance=new Wallet(providerNames,blockchainNames,chainId,apiKey,privateKey);walletStore.set(_WalletManager.instance)}else{if(!_WalletManager.instance.getSigner()&&privateKey){_WalletManager.instance.setSigner(privateKey);walletStore.set(_WalletManager.instance)}}return _WalletManager.instance}catch(error){log.error("Failed to get Wallet instance:",false,error);throw error}}static clearInstance(){_WalletManager.instance=null;walletStore.set(null)}static setInstance(instance){this.clearInstance();_WalletManager.instance=instance;walletStore.set(instance)}static get wallet(){return get(walletStore)}};__publicField(_WalletManager,"instance",null);let WalletManager=_WalletManager;export{WalletManager as W};
//# sourceMappingURL=BJK8DTVo.js.map
