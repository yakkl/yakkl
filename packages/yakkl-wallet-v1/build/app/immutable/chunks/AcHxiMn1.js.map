{"version":3,"file":"AcHxiMn1.js","sources":["../../../../../../src/lib/common/locks.ts"],"sourcesContent":["import { STORAGE_YAKKL_CURRENTLY_SELECTED, STORAGE_YAKKL_SETTINGS } from './constants';\nimport { dateString } from './datetime';\nimport type { Settings, YakklCurrentlySelected } from './interfaces';\nimport { getObjectFromLocalStorage, setObjectInLocalStorage } from './storage';\nimport { yakklCurrentlySelectedStore, yakklSettingsStore } from './stores';\nimport { log } from '$lib/managers/Logger';\nimport { PlanType } from './types';\n\n// Will keep this for now but may want to deprecate it and use the new background script to handle locks\n\nexport async function setLocks(locked: boolean = true, planType: PlanType = PlanType.BASIC_MEMBER) {\n\ttry {\n\t\tlet dirty = false;\n\n\t\tconst yakklSettings = (await getObjectFromLocalStorage(STORAGE_YAKKL_SETTINGS)) as Settings;\n\t\tif (yakklSettings) {\n\t\t\tdirty = false;\n\t\t\tif (locked) {\n\t\t\t\tif (!yakklSettings.isLocked) {\n\t\t\t\t\tyakklSettings.isLocked = true;\n\t\t\t\t\tyakklSettings.lastAccessDate = dateString();\n\t\t\t\t\tif (planType) yakklSettings.plan.type = planType;\n\t\t\t\t\tawait setObjectInLocalStorage('settings', yakklSettings);\n\t\t\t\t\tdirty = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yakklSettings.isLocked) {\n\t\t\t\t\tyakklSettings.isLocked = false;\n\t\t\t\t\tyakklSettings.lastAccessDate = dateString();\n\t\t\t\t\tif (planType) yakklSettings.plan.type = planType;\n\t\t\t\t\tawait setObjectInLocalStorage('settings', yakklSettings);\n\t\t\t\t\tdirty = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (dirty) yakklSettingsStore.set(yakklSettings);\n\t\t}\n\n\t\tconst yakklCurrentlySelected = (await getObjectFromLocalStorage(\n\t\t\tSTORAGE_YAKKL_CURRENTLY_SELECTED\n\t\t)) as YakklCurrentlySelected;\n\t\tif (yakklCurrentlySelected) {\n\t\t\tdirty = false;\n\t\t\tif (locked) {\n\t\t\t\tif (!yakklCurrentlySelected.shortcuts.isLocked) {\n\t\t\t\t\tyakklCurrentlySelected.shortcuts.isLocked = true;\n\t\t\t\t\tawait setObjectInLocalStorage(STORAGE_YAKKL_CURRENTLY_SELECTED, yakklCurrentlySelected);\n\t\t\t\t\tdirty = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yakklCurrentlySelected.shortcuts.isLocked) {\n\t\t\t\t\tyakklCurrentlySelected.shortcuts.isLocked = false;\n\t\t\t\t\tawait setObjectInLocalStorage(STORAGE_YAKKL_CURRENTLY_SELECTED, yakklCurrentlySelected);\n\t\t\t\t\tdirty = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (dirty) yakklCurrentlySelectedStore.set(yakklCurrentlySelected);\n\t\t}\n\t} catch (error) {\n\t\tlog.error('Error setting locks:', false, error);\n\t}\n}\n"],"names":["async","setLocks","locked","planType","PlanType","BASIC_MEMBER","dirty","yakklSettings","getObjectFromLocalStorage","STORAGE_YAKKL_SETTINGS","isLocked","lastAccessDate","dateString","plan","type","setObjectInLocalStorage","yakklSettingsStore","set","yakklCurrentlySelected","STORAGE_YAKKL_CURRENTLY_SELECTED","shortcuts","yakklCurrentlySelectedStore","error","log"],"mappings":"0RAUAA,eAAsBC,SAASC,OAAkB,KAAMC,SAAqBC,SAASC,cAChF,IACH,IAAIC,MAAQ,MAEN,MAAAC,oBAAuBC,0BAA0BC,wBACvD,GAAIF,cAAe,CACVD,MAAA,MACR,GAAIJ,OAAQ,CACP,IAACK,cAAcG,SAAU,CAC5BH,cAAcG,SAAW,KACzBH,cAAcI,eAAiBC,aAC3B,GAAAT,SAAwBI,cAAAM,KAAKC,KAAOX,eAClCY,wBAAwB,WAAYR,eAClCD,MAAA,IAAA,CACT,KACM,CACN,GAAIC,cAAcG,SAAU,CAC3BH,cAAcG,SAAW,MACzBH,cAAcI,eAAiBC,aAC3B,GAAAT,SAAwBI,cAAAM,KAAKC,KAAOX,eAClCY,wBAAwB,WAAYR,eAClCD,MAAA,IAAA,CACT,CAEG,GAAAA,MAA0BU,mBAAAC,IAAIV,cAAa,CAGhD,MAAMW,6BAAgCV,0BACrCW,kCAED,GAAID,uBAAwB,CACnBZ,MAAA,MACR,GAAIJ,OAAQ,CACP,IAACgB,uBAAuBE,UAAUV,SAAU,CAC/CQ,uBAAuBE,UAAUV,SAAW,WACtCK,wBAAwBI,iCAAkCD,wBACxDZ,MAAA,IAAA,CACT,KACM,CACF,GAAAY,uBAAuBE,UAAUV,SAAU,CAC9CQ,uBAAuBE,UAAUV,SAAW,YACtCK,wBAAwBI,iCAAkCD,wBACxDZ,MAAA,IAAA,CACT,CAEG,GAAAA,MAAmCe,4BAAAJ,IAAIC,uBAAsB,QAE1DI,OACJC,IAAAD,MAAM,uBAAwB,MAAOA,MAAK,CAEhD"}