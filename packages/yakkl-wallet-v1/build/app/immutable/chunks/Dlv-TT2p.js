const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./DpKLkluw.js","./WDN37msH.js","./Cb2naUpm.js","./CgCfpVku.js","./B2gA1VsD.js","./BaS8d5lg.js","./BOosul_h.js"])))=>i.map(i=>d[i]);
var __defProp=Object.defineProperty;var __typeError=msg=>{throw TypeError(msg)};var __defNormalProp=(obj,key,value)=>key in obj?__defProp(obj,key,{enumerable:true,configurable:true,writable:true,value:value}):obj[key]=value;var __publicField=(obj,key,value)=>__defNormalProp(obj,typeof key!=="symbol"?key+"":key,value);var __accessCheck=(obj,member,msg)=>member.has(obj)||__typeError("Cannot "+msg);var __privateGet=(obj,member,getter)=>(__accessCheck(obj,member,"read from private field"),getter?getter.call(obj):member.get(obj));var __privateAdd=(obj,member,value)=>member.has(obj)?__typeError("Cannot add the same private member more than once"):member instanceof WeakSet?member.add(obj):member.set(obj,value);var __privateSet=(obj,member,value,setter)=>(__accessCheck(obj,member,"write to private field"),setter?setter.call(obj,value):member.set(obj,value),value);var __privateMethod=(obj,member,method)=>(__accessCheck(obj,member,"access private method"),method);var _id,_ref,_SwitchRootState_instances,toggle_fn,_sharedProps,_props,_root2,_shouldRender,_props2,_id2,_ref2,_props3;import{cy as assertArgument,cz as hexlify,cA as concat,cB as getBytes,cC as toUtf8Bytes,cD as getAddress,cE as toTwos,cF as zeroPadValue,cG as toBeArray,cH as dataLength,cI as zeroPadBytes,cJ as JsonRpcProvider,cK as Network,cL as defineProperties,cM as resolveProperties,cN as assert,cO as FetchRequest,cP as isObjectLike,cQ as baseGetTag,cR as isObject,cS as root$b,cT as sortedTokens,cU as toBigInt,r as formatUnits,bJ as formatDate,l as log,bd as YAKKL_FEE_BASIS_POINTS_DIVISOR,cV as YAKKL_FEE_BASIS_POINTS,cW as ABIs,cX as Contract,cY as ADDRESSES,cZ as ZeroAddress,c_ as YAKKL_GAS_ESTIMATE_MIN_USD,c$ as YAKKL_GAS_ESTIMATE_MULTIHOP_SWAP_DEFAULT,d0 as YAKKL_GAS_ESTIMATE_MULTIPLIER_BASIS_POINTS,a1 as EthereumBigNumber,t as parseUnits,d1 as EthersConverter,_ as __vitePreload,d2 as safeConvertToBigInt,h as getMiscStore,d3 as TIMER_SWAP_FETCH_PRICES_TIME,v as getProfile,x as isEncryptedData,z as decryptData,d4 as ETH_BASE_SWAP_GAS_UNITS,a0 as BigNumber,O as YAKKL_ZERO_ADDRESS,Z as yakklCurrentlySelectedStore}from"./Cb2naUpm.js";import{l as log$1,c as commonjsGlobal,g as getDefaultExportFromCjs}from"./WDN37msH.js";import"./CgCfpVku.js";import{p as push,h as tag,i as state,g as get,c as child,j as next,r as reset,s as sibling,t as template_effect,a as pop,f as first_child,e as set,F as FILENAME,aC as tag_proxy,ae as proxy,o as onMount,b as strict_equals,u as user_derived,ay as user_effect,n as noop$1,d as onDestroy,a7 as untrack,bv as to_array}from"./BaS8d5lg.js";import{n as formatPrice,p as formatQuantity,q as calculateFeeBasisPointsPercent,r as calculateFeeAmount,u as formatFeeToUSD,d as deepCopy}from"./CnIbzB-6.js";import{P as PriceManager}from"./CZAHYQZy.js";import"./z-nmOEXa.js";import"./Dw28gLPr.js";import"./D-aJ6pD4.js";import{c as check_target,l as legacy_api}from"./BXFaAXnq.js";import{a as add_locations}from"./3AhEABF_.js";import{s as set_text}from"./Cmwrv3PW.js";import{c as create_ownership_validator}from"./COgMMZ9C.js";import{i as if_block}from"./Q1yPWpQ-.js";import{a as append,f as from_html,c as comment,t as text}from"./Cm3jf07C.js";import{s as snippet,w as wrap_snippet}from"./d5hrMixo.js";import{d as delegate,e as event,b as apply}from"./DiU70Is3.js";import{p as prop,r as rest_props,s as spread_props}from"./BYboeQtC.js";import{s as setup_stores,a as store_get,d as store_mutate}from"./CViNpZsE.js";import{v as validate_store}from"./Dv9a3G0k.js";import{s as set_class}from"./DX_EEhpR.js";import{e as each,i as index}from"./DraJ8LN-.js";import{s as set_attribute,r as remove_input_defaults,d as attribute_effect,a as set_value,i as init_select,e as select_option}from"./DTBsVM-c.js";import{b as bind_value}from"./B6q982nR.js";import{d as derived,w as writable}from"./B2gA1VsD.js";import{e as convertTokenToUsd,f as convertUsdToTokenAmount,p as parseAmount}from"./BgnL0Zd7.js";import{c as component}from"./Dyu6WQ9w.js";import{e as createContext,u as useRefById,p as ENTER,S as SPACE,w as getDataRequired,x as getDataChecked,g as getDataDisabled,y as getAriaRequired,z as getAriaChecked,B as getDisabled,s as styleToString,C as getAriaHidden,D as srOnlyStyles,f as useId,n as noop,d as box,m as mergeProps,h as cn}from"./BMfkC98N.js";import"./Doq7snb5.js";import{i as init}from"./D9iNYspi.js";import{M as Modal}from"./UU1vCwIM.js";import{g as getTimerManager}from"./BKVO1wI8.js";import{E as ErrorNoAction}from"./2Ogrppv5.js";import{W as Warning}from"./DwnXGTX-.js";import{P as PincodeVerify}from"./Fc_LhyTR.js";import{C as Confirmation}from"./BWiVuumU.js";import{s as sendNotificationMessage}from"./Bmr6hs4q.js";import{b as bind_this}from"./BMXnoaUY.js";import{Q as QRCode}from"./C7pQqEHo.js";import{C as Copy}from"./D6ZwBv0_.js";const regexBytes=new RegExp("^bytes([0-9]+)$");const regexNumber=new RegExp("^(u?int)([0-9]*)$");const regexArray=new RegExp("^(.*)\\[([0-9]*)\\]$");function _pack(type,value,isArray){switch(type){case"address":if(isArray){return getBytes(zeroPadValue(value,32))}return getBytes(getAddress(value));case"string":return toUtf8Bytes(value);case"bytes":return getBytes(value);case"bool":value=!!value?"0x01":"0x00";if(isArray){return getBytes(zeroPadValue(value,32))}return getBytes(value)}let match=type.match(regexNumber);if(match){let signed=match[1]==="int";let size=parseInt(match[2]||"256");assertArgument((!match[2]||match[2]===String(size))&&size%8===0&&size!==0&&size<=256,"invalid number type","type",type);if(isArray){size=256}if(signed){value=toTwos(value,size)}return getBytes(zeroPadValue(toBeArray(value),size/8))}match=type.match(regexBytes);if(match){const size=parseInt(match[1]);assertArgument(String(size)===match[1]&&size!==0&&size<=32,"invalid bytes type","type",type);assertArgument(dataLength(value)===size,`invalid value for ${type}`,"value",value);if(isArray){return getBytes(zeroPadBytes(value,32))}return value}match=type.match(regexArray);if(match&&Array.isArray(value)){const baseType=match[1];const count=parseInt(match[2]||String(value.length));assertArgument(count===value.length,`invalid array length for ${type}`,"value",value);const result=[];value.forEach(function(value2){result.push(_pack(baseType,value2,true))});return getBytes(concat(result))}assertArgument(false,"invalid type","type",type)}function solidityPacked(types,values){assertArgument(types.length===values.length,"wrong number of values; expected ${ types.length }","values",values);const tight=[];types.forEach(function(type,index2){tight.push(_pack(type,values[index2]))});return hexlify(concat(tight))}const shown=new Set;function showThrottleMessage(service){if(shown.has(service)){return}shown.add(service);console.log("========= NOTICE =========");console.log(`Request-Rate Exceeded for ${service} (this message will not be repeated)`);console.log("");console.log("The default API keys for each service are provided as a highly-throttled,");console.log("community resource for low-traffic projects and early prototyping.");console.log("");console.log("While your application will continue to function, we highly recommended");console.log("signing up for your own API keys to improve performance, increase your");console.log("request rate/limit and enable other perks, such as metrics and advanced APIs.");console.log("");console.log("For more details: https://docs.ethers.org/api-keys/");console.log("==========================")}const defaultApiKey="_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC";function getHost(name){switch(name){case"mainnet":return"eth-mainnet.alchemyapi.io";case"goerli":return"eth-goerli.g.alchemy.com";case"sepolia":return"eth-sepolia.g.alchemy.com";case"arbitrum":return"arb-mainnet.g.alchemy.com";case"arbitrum-goerli":return"arb-goerli.g.alchemy.com";case"arbitrum-sepolia":return"arb-sepolia.g.alchemy.com";case"base":return"base-mainnet.g.alchemy.com";case"base-goerli":return"base-goerli.g.alchemy.com";case"base-sepolia":return"base-sepolia.g.alchemy.com";case"matic":return"polygon-mainnet.g.alchemy.com";case"matic-amoy":return"polygon-amoy.g.alchemy.com";case"matic-mumbai":return"polygon-mumbai.g.alchemy.com";case"optimism":return"opt-mainnet.g.alchemy.com";case"optimism-goerli":return"opt-goerli.g.alchemy.com";case"optimism-sepolia":return"opt-sepolia.g.alchemy.com"}assertArgument(false,"unsupported network","network",name)}class AlchemyProvider extends JsonRpcProvider{constructor(_network,apiKey){if(_network==null){_network="mainnet"}const network=Network.from(_network);if(apiKey==null){apiKey=defaultApiKey}const request=AlchemyProvider.getRequest(network,apiKey);super(request,network,{staticNetwork:network});__publicField(this,"apiKey");defineProperties(this,{apiKey:apiKey})}_getProvider(chainId){try{return new AlchemyProvider(chainId,this.apiKey)}catch(error){}return super._getProvider(chainId)}async _perform(req){if(req.method==="getTransactionResult"){const{trace:trace,tx:tx}=await resolveProperties({trace:this.send("trace_transaction",[req.hash]),tx:this.getTransaction(req.hash)});if(trace==null||tx==null){return null}let data;let error=false;try{data=trace[0].result.output;error=trace[0].error==="Reverted"}catch(error2){}if(data){assert(!error,"an error occurred during transaction executions","CALL_EXCEPTION",{action:"getTransactionResult",data:data,reason:null,transaction:tx,invocation:null,revert:null});return data}assert(false,"could not parse trace result","BAD_DATA",{value:trace})}return await super._perform(req)}isCommunityResource(){return this.apiKey===defaultApiKey}static getRequest(network,apiKey){if(apiKey==null){apiKey=defaultApiKey}const request=new FetchRequest(`https://${getHost(network.name)}/v2/${apiKey}`);request.allowGzip=true;if(apiKey===defaultApiKey){request.retryFunc=async(request2,response,attempt)=>{showThrottleMessage("alchemy");return true}}return request}}var symbolTag="[object Symbol]";function isSymbol(value){return typeof value=="symbol"||isObjectLike(value)&&baseGetTag(value)==symbolTag}var reWhitespace=/\s/;function trimmedEndIndex(string){var index2=string.length;while(index2--&&reWhitespace.test(string.charAt(index2))){}return index2}var reTrimStart=/^\s+/;function baseTrim(string){return string?string.slice(0,trimmedEndIndex(string)+1).replace(reTrimStart,""):string}var NAN=0/0;var reIsBadHex=/^[-+]0x[0-9a-f]+$/i;var reIsBinary=/^0b[01]+$/i;var reIsOctal=/^0o[0-7]+$/i;var freeParseInt=parseInt;function toNumber(value){if(typeof value=="number"){return value}if(isSymbol(value)){return NAN}if(isObject(value)){var other=typeof value.valueOf=="function"?value.valueOf():value;value=isObject(other)?other+"":other}if(typeof value!="string"){return value===0?value:+value}value=baseTrim(value);var isBinary=reIsBinary.test(value);return isBinary||reIsOctal.test(value)?freeParseInt(value.slice(2),isBinary?2:8):reIsBadHex.test(value)?NAN:+value}var now=function(){return root$b.Date.now()};var FUNC_ERROR_TEXT="Expected a function";var nativeMax=Math.max,nativeMin=Math.min;function debounce$1(func,wait,options){var lastArgs,lastThis,maxWait,result,timerId,lastCallTime,lastInvokeTime=0,leading=false,maxing=false,trailing=true;if(typeof func!="function"){throw new TypeError(FUNC_ERROR_TEXT)}wait=toNumber(wait)||0;if(isObject(options)){leading=!!options.leading;maxing="maxWait"in options;maxWait=maxing?nativeMax(toNumber(options.maxWait)||0,wait):maxWait;trailing="trailing"in options?!!options.trailing:trailing}function invokeFunc(time){var args=lastArgs,thisArg=lastThis;lastArgs=lastThis=void 0;lastInvokeTime=time;result=func.apply(thisArg,args);return result}function leadingEdge(time){lastInvokeTime=time;timerId=setTimeout(timerExpired,wait);return leading?invokeFunc(time):result}function remainingWait(time){var timeSinceLastCall=time-lastCallTime,timeSinceLastInvoke=time-lastInvokeTime,timeWaiting=wait-timeSinceLastCall;return maxing?nativeMin(timeWaiting,maxWait-timeSinceLastInvoke):timeWaiting}function shouldInvoke(time){var timeSinceLastCall=time-lastCallTime,timeSinceLastInvoke=time-lastInvokeTime;return lastCallTime===void 0||timeSinceLastCall>=wait||timeSinceLastCall<0||maxing&&timeSinceLastInvoke>=maxWait}function timerExpired(){var time=now();if(shouldInvoke(time)){return trailingEdge(time)}timerId=setTimeout(timerExpired,remainingWait(time))}function trailingEdge(time){timerId=void 0;if(trailing&&lastArgs){return invokeFunc(time)}lastArgs=lastThis=void 0;return result}function cancel(){if(timerId!==void 0){clearTimeout(timerId)}lastInvokeTime=0;lastArgs=lastCallTime=lastThis=timerId=void 0}function flush(){return timerId===void 0?result:trailingEdge(now())}function debounced(){var time=now(),isInvoking=shouldInvoke(time);lastArgs=arguments;lastThis=this;lastCallTime=time;if(isInvoking){if(timerId===void 0){return leadingEdge(lastCallTime)}if(maxing){clearTimeout(timerId);timerId=setTimeout(timerExpired,wait);return invokeFunc(lastCallTime)}}if(timerId===void 0){timerId=setTimeout(timerExpired,wait)}return result}debounced.cancel=cancel;debounced.flush=flush;return debounced}TokenDropdown[FILENAME]="src/lib/components/TokenDropdown.svelte";function toggleDropdown(_,disabled,isOpen,searchQuery){if(disabled())return;set(isOpen,!get(isOpen));if(get(isOpen)){set(searchQuery,"")}}var root_1$7=add_locations(from_html(`<img class="w-8 h-8 rounded-full"/> <div class="flex-1 flex flex-col ml-3"><span class="font-bold text-lg"> </span> <span class="text-sm text-gray-200 mt-0.5"> </span></div>`,1),TokenDropdown[FILENAME],[[45,3],[50,3,[[51,4],[52,4]]]]);var root_2$5=add_locations(from_html(`<span class="ml-3">Select Token</span>`),TokenDropdown[FILENAME],[[55,3]]);var on_click=(__1,selectToken,token)=>selectToken(get(token));var root_4$2=add_locations(from_html(`<li class="px-4 py-2 flex items-center space-x-3 hover:bg-gray-100 cursor-pointer transition duration-200"><img class="w-8 h-8 rounded-full"/> <div class="flex-1 flex flex-col"><span class="font-bold text-gray-800"> </span> <span class="text-sm text-gray-600"> </span></div></li>`),TokenDropdown[FILENAME],[[85,5,[[89,6],[90,6,[[91,7],[92,7]]]]]]);var root_5=add_locations(from_html(`<li class="px-4 py-2 text-gray-500">No tokens found</li>`),TokenDropdown[FILENAME],[[96,5]]);var root_3$3=add_locations(from_html(`<div class="absolute z-10 w-full bg-white dark:text-gray-600 rounded-md shadow-lg mt-2 p-2 border border-gray-200"><input type="text" placeholder="Search..." class="w-full px-4 py-2 mb-2 border border-gray-300 rounded-lg focus:outline-none focus:border-purple-500 focus:ring-1 focus:ring-purple-500 transition duration-200"/> <ul class="max-h-60 overflow-y-auto w-full"></ul></div>`),TokenDropdown[FILENAME],[[72,2,[[75,3],[81,3]]]]);var root$a=add_locations(from_html(`<div class="relative w-full max-w-sm mx-auto"><button><!> <svg xmlns="http://www.w3.org/2000/svg" class="ml-auto h-5 w-5 transition-transform duration-300" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg></button> <!></div>`),TokenDropdown[FILENAME],[[34,0,[[35,1,[[57,2,[[63,3]]]]]]]]);function TokenDropdown($$anchor,$$props){check_target(new.target);push($$props,true,TokenDropdown);const[$$stores,$$cleanup]=setup_stores();const $filteredTokens=()=>(validate_store(filteredTokens,"filteredTokens"),store_get(filteredTokens,"$filteredTokens",$$stores));let selectedToken=prop($$props,"selectedToken",7),disabled=prop($$props,"disabled",3,false);let isOpen=tag(state(false),"isOpen");let searchQuery=tag(state(""),"searchQuery");const filteredTokens=derived([sortedTokens],([$sortedTokens])=>get(searchQuery).trim()?$sortedTokens.filter(token=>token.symbol.toLowerCase().includes(get(searchQuery).toLowerCase())||token.name.toLowerCase().includes(get(searchQuery).toLowerCase())):$sortedTokens);function selectToken(token){if(disabled())return;selectedToken(token);$$props.onTokenSelect(token);set(isOpen,false);set(searchQuery,"")}function getLogoURL(logoURI){if(!logoURI||logoURI.startsWith("http://")||logoURI.startsWith("ipfs://")){return"/images/logoBullFav32x32.png"}return logoURI}var div=root$a();var button=child(div);button.__click=[toggleDropdown,disabled,isOpen,searchQuery];var node=child(button);{var consequent=$$anchor2=>{var fragment=root_1$7();var img=first_child(fragment);var div_1=sibling(img,2);var span=child(div_1);var text2=child(span,true);reset(span);var span_1=sibling(span,2);var text_1=child(span_1,true);reset(span_1);reset(div_1);template_effect($0=>{set_attribute(img,"src",$0);set_attribute(img,"alt",selectedToken().name);set_text(text2,selectedToken().symbol);set_text(text_1,selectedToken().name)},[()=>getLogoURL(selectedToken().logoURI)]);append($$anchor2,fragment)};var alternate=$$anchor2=>{var span_2=root_2$5();append($$anchor2,span_2)};if_block(node,$$render=>{var _a,_b;if(((_a=selectedToken())==null?void 0:_a.symbol)&&((_b=selectedToken())==null?void 0:_b.name))$$render(consequent);else $$render(alternate,false)})}next(2);reset(button);var node_1=sibling(button,2);{var consequent_1=$$anchor2=>{var div_2=root_3$3();var input=child(div_2);remove_input_defaults(input);var ul=sibling(input,2);each(ul,5,$filteredTokens,index,($$anchor3,token)=>{var li=root_4$2();li.__click=[on_click,selectToken,token];var img_1=child(li);var div_3=sibling(img_1,2);var span_3=child(div_3);var text_2=child(span_3,true);reset(span_3);var span_4=sibling(span_3,2);var text_3=child(span_4,true);reset(span_4);reset(div_3);reset(li);template_effect($0=>{set_attribute(img_1,"src",$0);set_attribute(img_1,"alt",get(token).name);set_text(text_2,get(token).symbol);set_text(text_3,get(token).name)},[()=>getLogoURL(get(token).logoURI)]);append($$anchor3,li)},$$anchor3=>{var li_1=root_5();append($$anchor3,li_1)});reset(ul);reset(div_2);bind_value(input,()=>get(searchQuery),$$value=>set(searchQuery,$$value));append($$anchor2,div_2)};if_block(node_1,$$render=>{if(get(isOpen)&&!disabled())$$render(consequent_1)})}reset(div);template_effect(()=>{set_class(button,1,`w-full flex items-center px-4 py-3\n      ${disabled()?"bg-gray-500 text-gray-200 cursor-not-allowed":"bg-purple-600 text-white hover:bg-purple-700"}\n      font-bold rounded-full transition duration-300 ease-in-out focus:outline-none`);button.disabled=disabled()});append($$anchor,div);var $$pop=pop({...legacy_api()});$$cleanup();return $$pop}delegate(["click"]);const isUsdModeStore=writable(false);SwapTokenPrice[FILENAME]="src/lib/components/SwapTokenPrice.svelte";var root_1$6=add_locations(from_html(`<span> </span>`),SwapTokenPrice[FILENAME],[[73,3]]);var root$9=add_locations(from_html(`<div><div class="flex justify-between items-center w-full"><div class="flex items-center gap-2"><span class="text-sm text-gray-600"> </span> <span class="text-sm font-semibold"> </span></div></div> <div class="flex justify-between items-center w-full text-xs text-gray-500"><!></div></div>`),SwapTokenPrice[FILENAME],[[61,0,[[62,1,[[63,2,[[64,3],[65,3]]]]],[71,1]]]]);function SwapTokenPrice($$anchor,$$props){check_target(new.target);push($$props,true,SwapTokenPrice);const[$$stores,$$cleanup]=setup_stores();const $swapPriceDataStore=()=>(validate_store($$props.swapPriceDataStore,"swapPriceDataStore"),store_get($$props.swapPriceDataStore,"$swapPriceDataStore",$$stores));let isUsdMode=tag_proxy(proxy(isUsdModeStore),"isUsdMode");let type=prop($$props,"type",3,"sell"),showLastUpdated=prop($$props,"showLastUpdated",3,false),className=prop($$props,"className",3,"");let price=tag(state(0),"price");let amount=tag(state(0n),"amount");let decimals=tag(state(0),"decimals");onMount(async()=>{swapPriceDataUpdated()});function swapPriceDataUpdated(){if(get(swapPriceData)){const tokenIn=get(swapPriceData).tokenIn;const tokenOut=get(swapPriceData).tokenOut;const amountIn=toBigInt(get(swapPriceData).amountIn);const amountOut=toBigInt(get(swapPriceData).amountOut);const marketPriceIn=get(swapPriceData).marketPriceIn;const marketPriceOut=get(swapPriceData).marketPriceOut;set(price,0);if(strict_equals(type(),"sell")){set(decimals,(tokenIn==null?void 0:tokenIn.decimals)||0,true);set(amount,amountIn,true);if(amountIn>0n&&marketPriceIn>0){set(price,parseFloat(formatUnits(amountIn,tokenIn.decimals))*marketPriceIn)}else{set(price,Math.abs(marketPriceIn),true)}}else if(strict_equals(type(),"buy")){set(decimals,(tokenOut==null?void 0:tokenOut.decimals)||0,true);set(amount,amountOut,true);if(amountOut>0n&&marketPriceOut>0){set(price,parseFloat(formatUnits(amountOut,tokenOut.decimals))*marketPriceOut)}else{set(price,Math.abs(marketPriceOut),true)}}}}function getSymbolPair(){var _a,_b;const inSymbol=((_a=get(swapPriceData).tokenIn)==null?void 0:_a.symbol)||"";const outSymbol=((_b=get(swapPriceData).tokenOut)==null?void 0:_b.symbol)||"";return inSymbol&&outSymbol?`${inSymbol}/${outSymbol}`:""}let swapPriceData=tag(user_derived($swapPriceDataStore),"swapPriceData");user_effect(()=>{if(get(swapPriceData)){swapPriceDataUpdated()}});var div=root$9();var div_1=child(div);var div_2=child(div_1);var span=child(div_2);var text2=child(span,true);reset(span);var span_1=sibling(span,2);var text_1=child(span_1,true);reset(span_1);reset(div_2);reset(div_1);var div_3=sibling(div_1,2);var node=child(div_3);{var consequent=$$anchor2=>{var span_2=root_1$6();var text_2=child(span_2);reset(span_2);template_effect($0=>set_text(text_2,`Last updated: ${$0??""}`),[()=>formatDate(get(swapPriceData).lastUpdated)]);append($$anchor2,span_2)};if_block(node,$$render=>{if(get(price)>0&&showLastUpdated()&&get(swapPriceData)&&get(swapPriceData).lastUpdated)$$render(consequent)})}reset(div_3);reset(div);template_effect(($0,$1)=>{set_class(div,1,`flex flex-col w-full gap-1 ${className()??""}`);set_text(text2,$0);set_text(text_1,$1)},[getSymbolPair,()=>isUsdMode?`${formatPrice(get(price))}`:`${formatQuantity(get(amount),get(decimals))}`]);append($$anchor,div);var $$pop=pop({...legacy_api()});$$cleanup();return $$pop}const ROOT_ATTR="data-switch-root";const THUMB_ATTR="data-switch-thumb";class SwitchRootState{constructor(props){__privateAdd(this,_SwitchRootState_instances);__privateAdd(this,_id);__privateAdd(this,_ref);__publicField(this,"checked");__publicField(this,"disabled");__publicField(this,"required");__publicField(this,"name");__publicField(this,"value");__privateAdd(this,_sharedProps,tag(user_derived(()=>({"data-disabled":getDataDisabled(this.disabled.current),"data-state":getDataChecked(this.checked.current),"data-required":getDataRequired(this.required.current)})),"SwitchRootState.sharedProps"));__privateAdd(this,_props,tag(user_derived(()=>({...this.sharedProps,id:__privateGet(this,_id).current,role:"switch",disabled:getDisabled(this.disabled.current),"aria-checked":getAriaChecked(this.checked.current),"aria-required":getAriaRequired(this.required.current),[ROOT_ATTR]:"",onclick:this.onclick,onkeydown:this.onkeydown})),"SwitchRootState.props"));this.checked=props.checked;this.disabled=props.disabled;this.required=props.required;this.name=props.name;this.value=props.value;__privateSet(this,_id,props.id);__privateSet(this,_ref,props.ref);useRefById({id:__privateGet(this,_id),ref:__privateGet(this,_ref)});this.onkeydown=this.onkeydown.bind(this);this.onclick=this.onclick.bind(this)}onkeydown(e){if(!(strict_equals(e.key,ENTER)||strict_equals(e.key,SPACE))||this.disabled.current)return;e.preventDefault();__privateMethod(this,_SwitchRootState_instances,toggle_fn).call(this)}onclick(_){if(this.disabled.current)return;__privateMethod(this,_SwitchRootState_instances,toggle_fn).call(this)}get sharedProps(){return get(__privateGet(this,_sharedProps))}set sharedProps(value){set(__privateGet(this,_sharedProps),value)}get props(){return get(__privateGet(this,_props))}set props(value){set(__privateGet(this,_props),value)}}_id=new WeakMap;_ref=new WeakMap;_SwitchRootState_instances=new WeakSet;toggle_fn=function(){this.checked.current=!this.checked.current};_sharedProps=new WeakMap;_props=new WeakMap;class SwitchInputState{constructor(root2){__privateAdd(this,_root2);__privateAdd(this,_shouldRender,tag(user_derived(()=>strict_equals(__privateGet(this,_root2).name.current,void 0,false)),"SwitchInputState.shouldRender"));__privateAdd(this,_props2,tag(user_derived(()=>({type:"checkbox",name:__privateGet(this,_root2).name.current,value:__privateGet(this,_root2).value.current,checked:__privateGet(this,_root2).checked.current,disabled:__privateGet(this,_root2).disabled.current,required:__privateGet(this,_root2).required.current,"aria-hidden":getAriaHidden(true),style:styleToString(srOnlyStyles)})),"SwitchInputState.props"));__privateSet(this,_root2,root2)}get shouldRender(){return get(__privateGet(this,_shouldRender))}set shouldRender(value){set(__privateGet(this,_shouldRender),value)}get props(){return get(__privateGet(this,_props2))}set props(value){set(__privateGet(this,_props2),value)}}_root2=new WeakMap;_shouldRender=new WeakMap;_props2=new WeakMap;class SwitchThumbState{constructor(props,root2){__privateAdd(this,_id2);__privateAdd(this,_ref2);__publicField(this,"root");__privateAdd(this,_props3,tag(user_derived(()=>({...this.root.sharedProps,id:__privateGet(this,_id2).current,[THUMB_ATTR]:""})),"SwitchThumbState.props"));this.root=root2;__privateSet(this,_id2,props.id);__privateSet(this,_ref2,props.ref);useRefById({id:__privateGet(this,_id2),ref:__privateGet(this,_ref2)})}get props(){return get(__privateGet(this,_props3))}set props(value){set(__privateGet(this,_props3),value)}}_id2=new WeakMap;_ref2=new WeakMap;_props3=new WeakMap;const[setSwitchRootContext,getSwitchRootContext]=createContext("Switch.Root");function useSwitchRoot(props){return setSwitchRootContext(new SwitchRootState(props))}function useSwitchInput(){return new SwitchInputState(getSwitchRootContext())}function useSwitchThumb(props){return new SwitchThumbState(props,getSwitchRootContext())}Switch_input[FILENAME]="/Users/hansjones/projects/lambdastack/yakkl/crypto/yakkl/node_modules/.pnpm/bits-ui@1.0.0-next.74_svelte@5.34.3/node_modules/bits-ui/dist/bits/switch/components/switch-input.svelte";var root_1$5=add_locations(from_html(`<input/>`),Switch_input[FILENAME],[[6,1]]);function Switch_input($$anchor,$$props){check_target(new.target);push($$props,false,Switch_input);const inputState=useSwitchInput();init();var fragment=comment();var node=first_child(fragment);{var consequent=$$anchor2=>{var input=root_1$5();remove_input_defaults(input);attribute_effect(input,()=>({...inputState.props}));append($$anchor2,input)};if_block(node,$$render=>{if(inputState.shouldRender)$$render(consequent)})}append($$anchor,fragment);return pop({...legacy_api()})}Switch$1[FILENAME]="/Users/hansjones/projects/lambdastack/yakkl/crypto/yakkl/node_modules/.pnpm/bits-ui@1.0.0-next.74_svelte@5.34.3/node_modules/bits-ui/dist/bits/switch/components/switch.svelte";var root_2$4=add_locations(from_html(`<button><!></button>`),Switch$1[FILENAME],[[49,1]]);var root$8=add_locations(from_html(`<!> <!>`,1),Switch$1[FILENAME],[]);function Switch$1($$anchor,$$props){check_target(new.target);push($$props,true,Switch$1);let ref=prop($$props,"ref",15,null),id=prop($$props,"id",19,useId),disabled=prop($$props,"disabled",3,false),required=prop($$props,"required",3,false),checked=prop($$props,"checked",15,false),value=prop($$props,"value",3,"on"),name=prop($$props,"name",19,()=>void 0),type=prop($$props,"type",3,"button"),onCheckedChange=prop($$props,"onCheckedChange",3,noop),controlledChecked=prop($$props,"controlledChecked",3,false),restProps=rest_props($$props,["$$slots","$$events","$$legacy","child","children","ref","id","disabled","required","checked","value","name","type","onCheckedChange","controlledChecked"],"restProps");const rootState=useSwitchRoot({checked:box.with(()=>checked(),v=>{var _a;if(controlledChecked()){onCheckedChange()(v)}else{checked(v);(_a=onCheckedChange())==null?void 0:_a(v)}}),disabled:box.with(()=>disabled()??false),required:box.with(()=>required()),value:box.with(()=>value()),name:box.with(()=>name()),id:box.with(()=>id()),ref:box.with(()=>ref(),v=>ref(v))});const mergedProps=tag(user_derived(()=>mergeProps(restProps,rootState.props,{type:type()})),"mergedProps");var fragment=root$8();var node=first_child(fragment);{var consequent=$$anchor2=>{var fragment_1=comment();var node_1=first_child(fragment_1);snippet(node_1,()=>$$props.child,()=>({props:get(mergedProps),checked:rootState.checked.current}));append($$anchor2,fragment_1)};var alternate=$$anchor2=>{var button=root_2$4();attribute_effect(button,()=>({...get(mergedProps)}));var node_2=child(button);snippet(node_2,()=>$$props.children??noop$1,()=>({checked:rootState.checked.current}));reset(button);append($$anchor2,button)};if_block(node,$$render=>{if($$props.child)$$render(consequent);else $$render(alternate,false)})}var node_3=sibling(node,2);Switch_input(node_3,{});append($$anchor,fragment);return pop({...legacy_api()})}Switch_thumb[FILENAME]="/Users/hansjones/projects/lambdastack/yakkl/crypto/yakkl/node_modules/.pnpm/bits-ui@1.0.0-next.74_svelte@5.34.3/node_modules/bits-ui/dist/bits/switch/components/switch-thumb.svelte";var root_2$3=add_locations(from_html(`<span><!></span>`),Switch_thumb[FILENAME],[[24,1]]);function Switch_thumb($$anchor,$$props){check_target(new.target);push($$props,true,Switch_thumb);let ref=prop($$props,"ref",15,null),id=prop($$props,"id",19,useId),restProps=rest_props($$props,["$$slots","$$events","$$legacy","child","children","ref","id"],"restProps");const thumbState=useSwitchThumb({id:box.with(()=>id()),ref:box.with(()=>ref(),v=>ref(v))});const mergedProps=tag(user_derived(()=>mergeProps(restProps,thumbState.props)),"mergedProps");var fragment=comment();var node=first_child(fragment);{var consequent=$$anchor2=>{var fragment_1=comment();var node_1=first_child(fragment_1);snippet(node_1,()=>$$props.child,()=>({props:get(mergedProps),checked:thumbState.root.checked.current}));append($$anchor2,fragment_1)};var alternate=$$anchor2=>{var span=root_2$3();attribute_effect(span,()=>({...get(mergedProps)}));var node_2=child(span);snippet(node_2,()=>$$props.children??noop$1,()=>({checked:thumbState.root.checked.current}));reset(span);append($$anchor2,span)};if_block(node,$$render=>{if($$props.child)$$render(consequent);else $$render(alternate,false)})}append($$anchor,fragment);return pop({...legacy_api()})}Switch[FILENAME]="src/lib/components/ui/switch/switch.svelte";function Switch($$anchor,$$props){check_target(new.target);push($$props,true,Switch);var $$ownership_validator=create_ownership_validator($$props);let ref=prop($$props,"ref",15,null),checked=prop($$props,"checked",15,false),restProps=rest_props($$props,["$$slots","$$events","$$legacy","ref","class","checked"],"restProps");var fragment=comment();var node=first_child(fragment);const expression=user_derived(()=>cn("focus-visible:ring-ring focus-visible:ring-offset-background data-[state=checked]:bg-primary data-[state=unchecked]:bg-input peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",$$props.class));component(node,()=>Switch$1,($$anchor2,$$component)=>{$$ownership_validator.binding("ref",$$component,ref);$$ownership_validator.binding("checked",$$component,checked);$$component($$anchor2,spread_props({get class(){return get(expression)}},()=>restProps,{get ref(){return ref()},set ref($$value){ref($$value)},get checked(){return checked()},set checked($$value){checked($$value)},children:wrap_snippet(Switch,($$anchor3,$$slotProps)=>{var fragment_1=comment();var node_1=first_child(fragment_1);const expression_1=user_derived(()=>cn("bg-slate-200 pointer-events-none block h-4 w-4 rounded-full shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-4 data-[state=unchecked]:translate-x-0"));component(node_1,()=>Switch_thumb,($$anchor4,$$component2)=>{$$component2($$anchor4,{get class(){return get(expression_1)}})});append($$anchor3,fragment_1)}),$$slots:{default:true}}))});append($$anchor,fragment);return pop({...legacy_api()})}ToggleSwitch[FILENAME]="src/lib/components/ToggleSwitch.svelte";var root$7=add_locations(from_html(`<div class="flex items-center"><span class="mr-2 text-sm w-10"> </span> <!></div>`),ToggleSwitch[FILENAME],[[18,0,[[19,1]]]]);function ToggleSwitch($$anchor,$$props){check_target(new.target);push($$props,true,ToggleSwitch);let labelOn=prop($$props,"labelOn",3,"USD"),labelOff=prop($$props,"labelOff",3,"Token"),disabled=prop($$props,"disabled",3,false);let checked=tag(state(proxy($$props.value)),"checked");user_effect(()=>{if(!disabled()){$$props.onChange(get(checked))}});var div=root$7();var span=child(div);var text2=child(span,true);reset(span);var node=sibling(span,2);Switch(node,{class:"peer inline-flex h-6 w-10 cursor-pointer items-center rounded-full border-2 border-purple-600 shadow-sm transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",get disabled(){return disabled()},get checked(){return get(checked)},set checked($$value){set(checked,$$value,true)}});reset(div);template_effect(()=>set_text(text2,get(checked)?labelOn():labelOff()));append($$anchor,div);return pop({...legacy_api()})}NumericInput[FILENAME]="src/lib/components/NumericInput.svelte";function handleInput(e,inputValue,onChange){const value2=e.currentTarget.value;if(!/^[0-9]*\.?[0-9]*$/.test(value2)){return}set(inputValue,value2,true);onChange()(value2)}var root$6=add_locations(from_html(`<input type="text"/>`),NumericInput[FILENAME],[[29,0]]);function NumericInput($$anchor,$$props){check_target(new.target);push($$props,true,NumericInput);const value=prop($$props,"value",3,""),placeholder=prop($$props,"placeholder",3,"0"),disabled=prop($$props,"disabled",3,false),errorClass=prop($$props,"errorClass",3,""),className=prop($$props,"className",3,""),onChange=prop($$props,"onChange",3,value2=>{}),onBlur=prop($$props,"onBlur",3,value2=>{});let inputValue=tag(state(proxy(value()||"")),"inputValue");user_effect(()=>{if(strict_equals(value(),get(inputValue),false)){set(inputValue,value())}});var input=root$6();remove_input_defaults(input);input.__input=[handleInput,inputValue,onChange];template_effect(()=>{set_attribute(input,"placeholder",placeholder());input.disabled=disabled();set_value(input,get(inputValue));set_class(input,1,`${className()??""} ${errorClass()??""}`)});event("blur",input,function(...$$args){apply(onBlur,this,$$args,NumericInput,[35,9])});append($$anchor,input);return pop({...legacy_api()})}delegate(["input"]);SellTokenPanel[FILENAME]="src/lib/components/SellTokenPanel.svelte";var root_1$4=add_locations(from_html(`<div class="text-red-500 dark:text-red-400 text-sm mt-1">Insufficient balance for this swap</div>`),SellTokenPanel[FILENAME],[[167,2]]);var root$5=add_locations(from_html(`<div><div class="flex justify-between items-center"><!> <!></div> <div class="flex justify-between items-center mt-2 text-sm"><div class="flex items-center"><!></div> <div class="flex flex-col items-end text-right"><!> <span> </span></div></div> <!></div>`),SellTokenPanel[FILENAME],[[122,0,[[126,1],[151,1,[[152,2],[161,2,[[163,3]]]]]]]]);function SellTokenPanel($$anchor,$$props){check_target(new.target);push($$props,true,SellTokenPanel);const[$$stores,$$cleanup]=setup_stores();const $isUsdModeStore=()=>(validate_store(isUsdModeStore,"isUsdModeStore"),store_get(isUsdModeStore,"$isUsdModeStore",$$stores));const $swapPriceDataStore=()=>(validate_store($$props.swapPriceDataStore,"swapPriceDataStore"),store_get($$props.swapPriceDataStore,"$swapPriceDataStore",$$stores));let disabled=prop($$props,"disabled",3,false),resetValues=prop($$props,"resetValues",15,false),insufficientBalance=prop($$props,"insufficientBalance",3,false),balance=prop($$props,"balance",3,"0"),lastModifiedPanel=prop($$props,"lastModifiedPanel",15,"sell");let tokenValue=tag(state(""),"tokenValue");let usdValue=tag(state(""),"usdValue");let displayValue=tag(state(""),"displayValue");user_effect(()=>{if(resetValues()){set(tokenValue,"");set(usdValue,"");set(displayValue,"");resetValues(false)}});user_effect(()=>{set(displayValue,$isUsdModeStore()?get(usdValue):get(tokenValue),true)});user_effect(()=>{if(strict_equals(lastModifiedPanel(),"buy")){const tokenAmount=formatUnits(toBigInt($swapPriceDataStore().amountIn),$swapPriceDataStore().tokenIn.decimals);if($isUsdModeStore()){try{const calculatedUsdAmount=convertTokenToUsd(Number(tokenAmount),$swapPriceDataStore().marketPriceIn);set(usdValue,calculatedUsdAmount.toString(),true);set(tokenValue,tokenAmount,true);set(displayValue,get(usdValue),true)}catch(error){log.error("Token to USD conversion error:",false,error)}}else{set(tokenValue,tokenAmount,true);set(displayValue,get(tokenValue),true);if($swapPriceDataStore().marketPriceIn>0){try{const calculatedUsdAmount=convertTokenToUsd(Number(tokenAmount),$swapPriceDataStore().marketPriceIn);set(usdValue,calculatedUsdAmount.toString(),true)}catch(error){log.error("Token to USD conversion error:",false,error)}}}}});const debouncedAmountChange=debounce$1(value=>{$$props.onAmountChange(value)},300);function handleAmountInput(value){lastModifiedPanel("sell");const marketPrice=$swapPriceDataStore().marketPriceIn||0;if(!value){set(tokenValue,"");set(usdValue,"");set(displayValue,"");debouncedAmountChange("");return}if($isUsdModeStore()){set(usdValue,value,true);if(marketPrice>0){try{const calculatedTokenAmount=convertUsdToTokenAmount(Number(value),marketPrice,$swapPriceDataStore().tokenIn.decimals);set(tokenValue,calculatedTokenAmount.toString(),true);debouncedAmountChange(get(tokenValue))}catch(error){log.error("USD to Token conversion error:",false,error);debouncedAmountChange("")}}}else{set(tokenValue,value,true);if(marketPrice>0){try{const calculatedUsdAmount=convertTokenToUsd(Number(value),marketPrice);set(usdValue,calculatedUsdAmount.toString(),true)}catch(error){log.error("Token to USD conversion error:",false,error)}}debouncedAmountChange(value)}}function handleTokenSelection(token){set(tokenValue,"");set(usdValue,"");set(displayValue,"");$$props.onTokenSelect(token)}function handleBlur(value){}var div=root$5();var div_1=child(div);var node=child(div_1);const expression=user_derived(()=>insufficientBalance()?"text-red-500 dark:text-red-400 ":"text-black dark:text-white ");const expression_1=user_derived(()=>disabled()?"cursor-not-allowed":"");NumericInput(node,{get value(){return get(displayValue)},onChange:handleAmountInput,onBlur:handleBlur,get disabled(){return disabled()},get className(){return`\n        bg-transparent\n        text-3xl\n        font-bold\n        w-1/2\n        mr-4\n        focus:outline-none\n        focus:border-b-2\n        focus:border-blue-500\n        ${get(expression)??""}\n        ${get(expression_1)??""}\n      `}});var node_1=sibling(node,2);TokenDropdown(node_1,{get disabled(){return disabled()},get selectedToken(){return $swapPriceDataStore().tokenIn},onTokenSelect:handleTokenSelection});reset(div_1);var div_2=sibling(div_1,2);var div_3=child(div_2);var node_2=child(div_3);ToggleSwitch(node_2,{get value(){return $isUsdModeStore()},labelOn:"USD",labelOff:"Token",className:"bg-purple-300",onChange:value=>isUsdModeStore.set(value)});reset(div_3);var div_4=sibling(div_3,2);var node_3=child(div_4);SwapTokenPrice(node_3,{get swapPriceDataStore(){return $$props.swapPriceDataStore},type:"sell"});var span=sibling(node_3,2);var text2=child(span);reset(span);reset(div_4);reset(div_2);var node_4=sibling(div_2,2);{var consequent=$$anchor2=>{var div_5=root_1$4();append($$anchor2,div_5)};if_block(node_4,$$render=>{if(insufficientBalance())$$render(consequent)})}reset(div);template_effect(()=>{set_class(div,1,`border border-gray-300 shadow-md p-4 rounded-lg bg-gray-50 dark:bg-gray-800\n  ${disabled()?" opacity-50 pointer-events-none":""}`);set_text(text2,`Balance: ${balance()??""}`)});append($$anchor,div);var $$pop=pop({...legacy_api()});$$cleanup();return $$pop}BuyTokenPanel[FILENAME]="src/lib/components/BuyTokenPanel.svelte";var root$4=add_locations(from_html(`<div><div class="flex justify-between items-center"><!> <!></div> <div class="flex justify-between items-center mt-2 text-sm"><!></div></div>`),BuyTokenPanel[FILENAME],[[64,0,[[68,1],[93,1]]]]);function BuyTokenPanel($$anchor,$$props){check_target(new.target);push($$props,true,BuyTokenPanel);const[$$stores,$$cleanup]=setup_stores();const $swapPriceDataStore=()=>(validate_store($$props.swapPriceDataStore,"swapPriceDataStore"),store_get($$props.swapPriceDataStore,"$swapPriceDataStore",$$stores));let disabled=prop($$props,"disabled",3,false),resetValues=prop($$props,"resetValues",15,false),lastModifiedPanel=prop($$props,"lastModifiedPanel",15,"sell");let userInput=tag(state(""),"userInput");let formattedAmount=tag(state(""),"formattedAmount");user_effect(()=>{if(resetValues()){set(userInput,"");set(formattedAmount,"");resetValues(false)}});user_effect(()=>{if(strict_equals(lastModifiedPanel(),"sell")){set(userInput,"");const tokenAmount=formatUnits(toBigInt($swapPriceDataStore().amountOut),$swapPriceDataStore().tokenOut.decimals);set(formattedAmount,tokenAmount,true)}});const debouncedAmountChange=debounce$1(value=>{$$props.onAmountChange(value)},300);function handleAmountInput(value){lastModifiedPanel("buy");if(!value){set(userInput,"");set(formattedAmount,"");debouncedAmountChange("");return}set(userInput,value,true);set(formattedAmount,value,true);debouncedAmountChange(value)}function handleTokenSelection(token){set(userInput,"");set(formattedAmount,"");$$props.onTokenSelect(token)}function handleBlur(value){if(!value){set(userInput,"");set(formattedAmount,"")}}var div=root$4();var div_1=child(div);var node=child(div_1);const expression=user_derived(()=>get(userInput)||get(formattedAmount));const expression_1=user_derived(()=>disabled()?"cursor-not-allowed":"");NumericInput(node,{get value(){return get(expression)},onChange:handleAmountInput,onBlur:handleBlur,get disabled(){return disabled()},get className(){return`\n        bg-transparent\n        text-3xl\n        font-bold\n        w-1/2\n        mr-4\n        focus:outline-none\n        focus:border-b-2\n        focus:border-blue-500\n        text-black dark:text-white\n        ${get(expression_1)??""}\n      `}});var node_1=sibling(node,2);TokenDropdown(node_1,{get disabled(){return disabled()},get selectedToken(){return $swapPriceDataStore().tokenOut},onTokenSelect:handleTokenSelection});reset(div_1);var div_2=sibling(div_1,2);var node_2=child(div_2);SwapTokenPrice(node_2,{get swapPriceDataStore(){return $$props.swapPriceDataStore},type:"buy"});reset(div_2);reset(div);template_effect(()=>set_class(div,1,`border border-gray-300 shadow-md p-4 rounded-lg bg-gray-50 dark:bg-gray-800\n  ${disabled()?" opacity-50 pointer-events-none":""}`));append($$anchor,div);var $$pop=pop({...legacy_api()});$$cleanup();return $$pop}SwapSettings[FILENAME]="src/lib/components/SwapSettings.svelte";function handleSlippageChange(event2,slippageTolerance,$$props){const value=Number(event2.target.value);set(slippageTolerance,value,true);$$props.onSlippageChange(value)}function handleDeadlineChange(event2,deadline,$$props){const value=Number(event2.target.value);set(deadline,value,true);$$props.onDeadlineChange(value)}function handlePoolFeeChange(event2,poolFee,$$props){const value=Number(event2.target.value);set(poolFee,value,true);$$props.onPoolFeeChange(value)}var root_1$3=add_locations(from_html(`<option> </option>`),SwapSettings[FILENAME],[[65,4]]);var root_2$2=add_locations(from_html(`<option> </option>`),SwapSettings[FILENAME],[[79,4]]);var root_3$2=add_locations(from_html(`<option> </option>`),SwapSettings[FILENAME],[[93,4]]);var root$3=add_locations(from_html(`<div><div><label for="slippage" class="block text-sm font-medium">Slippage</label> <select id="slippage" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md"></select></div> <div><label for="deadline" class="block text-sm font-medium">Deadline</label> <select id="deadline" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md"></select></div> <div><label for="poolFee" class="block text-sm font-medium">Pool Fee</label> <select id="poolFee" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md"></select></div></div>`),SwapSettings[FILENAME],[[55,0,[[56,1,[[57,2],[58,2]]],[70,1,[[71,2],[72,2]]],[84,1,[[85,2],[86,2]]]]]]);function SwapSettings($$anchor,$$props){check_target(new.target);push($$props,true,SwapSettings);const[$$stores,$$cleanup]=setup_stores();const $swapPriceDataStore=()=>(validate_store($$props.swapPriceDataStore,"swapPriceDataStore"),store_get($$props.swapPriceDataStore,"$swapPriceDataStore",$$stores));let className=prop($$props,"className",3,"text-gray-700");const slippageOptions=[.1,.5,1,3];const deadlineOptions=[10,20,30,60];const poolFeeOptions=[500,3e3,1e4];let swapPriceData=tag(user_derived($swapPriceDataStore),"swapPriceData");let slippageTolerance=tag(state(.5),"slippageTolerance");let deadline=tag(state(10),"deadline");let poolFee=tag(state(proxy($swapPriceDataStore().fee||3e3)),"poolFee");user_effect(()=>{if(get(swapPriceData)){if(strict_equals(get(swapPriceData).slippageTolerance,void 0,false)){set(slippageTolerance,get(swapPriceData).slippageTolerance,true)}if(strict_equals(get(swapPriceData).deadline,void 0,false)){set(deadline,get(swapPriceData).deadline,true)}if(strict_equals(get(swapPriceData).fee,void 0,false)){const newFee=poolFeeOptions.includes(get(swapPriceData).fee)?get(swapPriceData).fee:findClosestPoolFee(get(swapPriceData).fee);set(poolFee,newFee,true)}}});function findClosestPoolFee(fee){if(poolFeeOptions.includes(fee)){return fee}return poolFeeOptions.reduce((prev,curr)=>Math.abs(curr-fee)<Math.abs(prev-fee)?curr:prev)}var div=root$3();var div_1=child(div);var select=sibling(child(div_1),2);init_select(select,()=>get(slippageTolerance));var select_value;select.__change=[handleSlippageChange,slippageTolerance,$$props];each(select,21,()=>slippageOptions,index,($$anchor2,option)=>{var option_1=root_1$3();var option_1_value={};var text2=child(option_1);reset(option_1);template_effect(()=>{if(option_1_value!==(option_1_value=get(option))){option_1.value=(option_1.__value=get(option))??""}set_text(text2,`${get(option)??""}%`)});append($$anchor2,option_1)});reset(select);reset(div_1);var div_2=sibling(div_1,2);var select_1=sibling(child(div_2),2);init_select(select_1,()=>get(deadline));var select_1_value;select_1.__change=[handleDeadlineChange,deadline,$$props];each(select_1,21,()=>deadlineOptions,index,($$anchor2,option)=>{var option_2=root_2$2();var option_2_value={};var text_1=child(option_2);reset(option_2);template_effect(()=>{if(option_2_value!==(option_2_value=get(option))){option_2.value=(option_2.__value=get(option))??""}set_text(text_1,`${get(option)??""} minutes`)});append($$anchor2,option_2)});reset(select_1);reset(div_2);var div_3=sibling(div_2,2);var select_2=sibling(child(div_3),2);init_select(select_2,()=>get(poolFee));var select_2_value;select_2.__change=[handlePoolFeeChange,poolFee,$$props];each(select_2,21,()=>poolFeeOptions,index,($$anchor2,option)=>{var option_3=root_3$2();var option_3_value={};var text_2=child(option_3);reset(option_3);template_effect(()=>{if(option_3_value!==(option_3_value=get(option))){option_3.value=(option_3.__value=get(option))??""}set_text(text_2,`${get(option)/1e4}%`)});append($$anchor2,option_3)});reset(select_2);reset(div_3);reset(div);template_effect(()=>{set_class(div,1,`flex justify-between items-center space-x-4 ${className()??""}`);if(select_value!==(select_value=get(slippageTolerance))){select.value=(select.__value=get(slippageTolerance))??"",select_option(select,get(slippageTolerance))}if(select_1_value!==(select_1_value=get(deadline))){select_1.value=(select_1.__value=get(deadline))??"",select_option(select_1,get(deadline))}if(select_2_value!==(select_2_value=get(poolFee))){select_2.value=(select_2.__value=get(poolFee))??"",select_option(select_2,get(poolFee))}});append($$anchor,div);var $$pop=pop({...legacy_api()});$$cleanup();return $$pop}delegate(["change"]);SwapSummary[FILENAME]="src/lib/components/SwapSummary.svelte";var root_1$2=add_locations(from_html(`<div class="flex justify-between w-full"><span class="text-left truncate"><!></span></div> <div class="flex justify-between w-full"><span class="text-left truncate"> </span></div>`,1),SwapSummary[FILENAME],[[61,2,[[62,3]]],[73,2,[[74,3]]]]);var root_4$1=add_locations(from_html(`<div class="flex justify-between w-full"><span class="text-left truncate"> </span></div>`),SwapSummary[FILENAME],[[90,2,[[91,3]]]]);var root$2=add_locations(from_html(`<div class="space-y-2 text-sm text-gray-500"><!> <div class="flex justify-between items-center w-full"><div class="flex items-center space-x-2"><img src="/images/gas.svg" alt="Gas Estimate" class="w-3 h-3"/> <span> </span></div></div> <!></div>`),SwapSummary[FILENAME],[[58,0,[[81,1,[[82,2,[[83,3],[84,3]]]]]]]]);function SwapSummary($$anchor,$$props){check_target(new.target);push($$props,true,SwapSummary);const[$$stores,$$cleanup]=setup_stores();const $swapPriceDataStore=()=>(validate_store($$props.swapPriceDataStore,"swapPriceDataStore"),store_get($$props.swapPriceDataStore,"$swapPriceDataStore",$$stores));let disabled=prop($$props,"disabled",3,false);let exchangeRate=tag(state(0),"exchangeRate");let feeBasisPointsToPercent=tag(state("0.0000%"),"feeBasisPointsToPercent");let swapPriceData=tag(user_derived($swapPriceDataStore),"swapPriceData");let tokenOutPriceInUSD=tag(user_derived(()=>get(swapPriceData).tokenOutPriceInUSD||"--"),"tokenOutPriceInUSD");let gasEstimateInUSD=tag(user_derived(()=>get(swapPriceData).gasEstimateInUSD||"--"),"gasEstimateInUSD");user_effect(()=>{set(feeBasisPointsToPercent,get(swapPriceData)?calculateFeeBasisPointsPercent(get(swapPriceData).feeBasisPoints):"0.0000%",true)});user_effect(()=>{if(get(swapPriceData)&&toBigInt(get(swapPriceData).amountIn)>0n&&toBigInt(get(swapPriceData).amountOut)>0n){const tokenIn=get(swapPriceData).tokenIn;const tokenOut=get(swapPriceData).tokenOut;const amountInFormatted=parseFloat(formatUnits(toBigInt(get(swapPriceData).amountIn)||0n,tokenIn.decimals));const amountOutFormatted=parseFloat(formatUnits(toBigInt(get(swapPriceData).amountOut)||0n,tokenOut.decimals));if(amountInFormatted>0&&amountOutFormatted>0){set(exchangeRate,amountOutFormatted/amountInFormatted)}else{set(exchangeRate,0)}}else{set(exchangeRate,0)}});let feeAmountInUSD=tag(user_derived(()=>(()=>{if(get(swapPriceData)&&toBigInt(get(swapPriceData).amountIn)>0n&&get(swapPriceData).marketPriceIn>0&&get(swapPriceData).tokenIn&&get(swapPriceData).tokenIn.decimals&&get(swapPriceData).feeBasisPoints&&strict_equals(disabled(),false)){get(swapPriceData).feeBasisPoints/YAKKL_FEE_BASIS_POINTS_DIVISOR;const feeAmount=calculateFeeAmount(toBigInt(get(swapPriceData).amountIn),get(swapPriceData).feeBasisPoints);return formatFeeToUSD(feeAmount,get(swapPriceData).tokenIn.decimals,get(swapPriceData).marketPriceIn)}else{return disabled()?"":"Calculating..."}})()),"feeAmountInUSD");var div=root$2();var node=child(div);{var consequent_1=$$anchor2=>{var fragment=root_1$2();var div_1=first_child(fragment);var span=child(div_1);var node_1=child(span);{var consequent=$$anchor3=>{var text$1=text();template_effect($0=>set_text(text$1,`Exchange Rate: 1 ${get(swapPriceData).tokenOut.symbol??""} ≈ ${$0??""}\n\t\t\t\t\t${get(swapPriceData).tokenIn.symbol??""}`),[()=>(1/get(exchangeRate)).toFixed(6)]);append($$anchor3,text$1)};var alternate=$$anchor3=>{var text_1=text("Exchange Rate: ~N/A~");append($$anchor3,text_1)};if_block(node_1,$$render=>{if(get(exchangeRate)&&get(exchangeRate)>0)$$render(consequent);else $$render(alternate,false)})}reset(span);reset(div_1);var div_2=sibling(div_1,2);var span_1=child(div_2);var text_2=child(span_1);reset(span_1);reset(div_2);template_effect(()=>set_text(text_2,`Token Price (USD): ${get(tokenOutPriceInUSD)??""}`));append($$anchor2,fragment)};if_block(node,$$render=>{if(!disabled())$$render(consequent_1)})}var div_3=sibling(node,2);var div_4=child(div_3);var span_2=sibling(child(div_4),2);var text_3=child(span_2);reset(span_2);reset(div_4);reset(div_3);var node_2=sibling(div_3,2);{var consequent_2=$$anchor2=>{var div_5=root_4$1();var span_3=child(div_5);var text_4=child(span_3);reset(span_3);reset(div_5);template_effect(()=>set_text(text_4,`Fee (${get(feeBasisPointsToPercent)??""}): ≈ ${get(feeAmountInUSD)??""}`));append($$anchor2,div_5)};if_block(node_2,$$render=>{if(!disabled())$$render(consequent_2)})}reset(div);template_effect(()=>set_text(text_3,`Gas Fee ≈ ${get(gasEstimateInUSD)??""}`));append($$anchor,div);var $$pop=pop({...legacy_api()});$$cleanup();return $$pop}const abi$2=[{anonymous:false,inputs:[{indexed:true,internalType:"uint24",name:"fee",type:"uint24"},{indexed:true,internalType:"int24",name:"tickSpacing",type:"int24"}],name:"FeeAmountEnabled",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"oldOwner",type:"address"},{indexed:true,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"token0",type:"address"},{indexed:true,internalType:"address",name:"token1",type:"address"},{indexed:true,internalType:"uint24",name:"fee",type:"uint24"},{indexed:false,internalType:"int24",name:"tickSpacing",type:"int24"},{indexed:false,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{inputs:[{internalType:"address",name:"tokenA",type:"address"},{internalType:"address",name:"tokenB",type:"address"},{internalType:"uint24",name:"fee",type:"uint24"}],name:"createPool",outputs:[{internalType:"address",name:"pool",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"int24",name:"tickSpacing",type:"int24"}],name:"enableFeeAmount",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint24",name:"fee",type:"uint24"}],name:"feeAmountTickSpacing",outputs:[{internalType:"int24",name:"",type:"int24"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"tokenA",type:"address"},{internalType:"address",name:"tokenB",type:"address"},{internalType:"uint24",name:"fee",type:"uint24"}],name:"getPool",outputs:[{internalType:"address",name:"pool",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"setOwner",outputs:[],stateMutability:"nonpayable",type:"function"}];const IUniswapV3FactoryABI={abi:abi$2};const abi$1=[{inputs:[{components:[{internalType:"bytes",name:"path",type:"bytes"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMinimum",type:"uint256"}],internalType:"struct ISwapRouter.ExactInputParams",name:"params",type:"tuple"}],name:"exactInput",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"address",name:"tokenOut",type:"address"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMinimum",type:"uint256"},{internalType:"uint160",name:"sqrtPriceLimitX96",type:"uint160"}],internalType:"struct ISwapRouter.ExactInputSingleParams",name:"params",type:"tuple"}],name:"exactInputSingle",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"bytes",name:"path",type:"bytes"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"amountInMaximum",type:"uint256"}],internalType:"struct ISwapRouter.ExactOutputParams",name:"params",type:"tuple"}],name:"exactOutput",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"address",name:"tokenOut",type:"address"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"amountInMaximum",type:"uint256"},{internalType:"uint160",name:"sqrtPriceLimitX96",type:"uint160"}],internalType:"struct ISwapRouter.ExactOutputSingleParams",name:"params",type:"tuple"}],name:"exactOutputSingle",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"int256",name:"amount0Delta",type:"int256"},{internalType:"int256",name:"amount1Delta",type:"int256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"uniswapV3SwapCallback",outputs:[],stateMutability:"nonpayable",type:"function"}];const _format="hh-sol-artifact-1";const contractName="QuoterV2";const sourceName="contracts/lens/QuoterV2.sol";const abi=[{inputs:[{internalType:"address",name:"_factory",type:"address"},{internalType:"address",name:"_WETH9",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"WETH9",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"factory",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"path",type:"bytes"},{internalType:"uint256",name:"amountIn",type:"uint256"}],name:"quoteExactInput",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint160[]",name:"sqrtPriceX96AfterList",type:"uint160[]"},{internalType:"uint32[]",name:"initializedTicksCrossedList",type:"uint32[]"},{internalType:"uint256",name:"gasEstimate",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"address",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"uint160",name:"sqrtPriceLimitX96",type:"uint160"}],internalType:"struct IQuoterV2.QuoteExactInputSingleParams",name:"params",type:"tuple"}],name:"quoteExactInputSingle",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint160",name:"sqrtPriceX96After",type:"uint160"},{internalType:"uint32",name:"initializedTicksCrossed",type:"uint32"},{internalType:"uint256",name:"gasEstimate",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes",name:"path",type:"bytes"},{internalType:"uint256",name:"amountOut",type:"uint256"}],name:"quoteExactOutput",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint160[]",name:"sqrtPriceX96AfterList",type:"uint160[]"},{internalType:"uint32[]",name:"initializedTicksCrossedList",type:"uint32[]"},{internalType:"uint256",name:"gasEstimate",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"address",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"uint160",name:"sqrtPriceLimitX96",type:"uint160"}],internalType:"struct IQuoterV2.QuoteExactOutputSingleParams",name:"params",type:"tuple"}],name:"quoteExactOutputSingle",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint160",name:"sqrtPriceX96After",type:"uint160"},{internalType:"uint32",name:"initializedTicksCrossed",type:"uint32"},{internalType:"uint256",name:"gasEstimate",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"int256",name:"amount0Delta",type:"int256"},{internalType:"int256",name:"amount1Delta",type:"int256"},{internalType:"bytes",name:"path",type:"bytes"}],name:"uniswapV3SwapCallback",outputs:[],stateMutability:"view",type:"function"}];const bytecode="0x60c06040523480156200001157600080fd5b506040516200212c3803806200212c833981016040819052620000349162000070565b6001600160601b0319606092831b8116608052911b1660a052620000a7565b80516001600160a01b03811681146200006b57600080fd5b919050565b6000806040838503121562000083578182fd5b6200008e8362000053565b91506200009e6020840162000053565b90509250929050565b60805160601c60a05160601c612051620000db60003980610321525080610577528061095d5280610b9252506120516000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063c45a01551161005b578063c45a0155146100e6578063c6a5026a146100ee578063cdca175314610101578063fa461e33146101145761007d565b80632f80bb1d146100825780634aa4a4fc146100ae578063bd21704a146100c3575b600080fd5b610095610090366004611b2b565b610129565b6040516100a59493929190611eac565b60405180910390f35b6100b661031f565b6040516100a59190611def565b6100d66100d1366004611c49565b610343565b6040516100a59493929190611f54565b6100b6610575565b6100d66100fc366004611c49565b610599565b61009561010f366004611b2b565b610754565b610127610122366004611b91565b61092c565b005b6000606080600061013986610ae8565b67ffffffffffffffff8111801561014f57600080fd5b50604051908082528060200260200182016040528015610179578160200160208202803683370190505b50925061018586610ae8565b67ffffffffffffffff8111801561019b57600080fd5b506040519080825280602002602001820160405280156101c5578160200160208202803683370190505b50915060005b60008060006101d98a610b17565b92509250925060008060008061025c6040518060a001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018f81526020018762ffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815250610343565b9350935093509350828b898151811061027157fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050818a89815181106102b857fe5b63ffffffff90921660209283029190910190910152929b50968201966001909601958b926102e58e610b48565b156102fa576102f38e610b50565b9d5061030a565b8c9b505050505050505050610316565b505050505050506101cb565b92959194509250565b7f000000000000000000000000000000000000000000000000000000000000000081565b60208101518151606083015160009283928392839273ffffffffffffffffffffffffffffffffffffffff808216908416109284926103819290610b8b565b9050866080015173ffffffffffffffffffffffffffffffffffffffff16600014156103af5760408701516000555b60005a90508173ffffffffffffffffffffffffffffffffffffffff1663128acb0830856103df8c60400151610bc9565b6000038c6080015173ffffffffffffffffffffffffffffffffffffffff1660001461040e578c60800151610434565b8761042d5773fffd8963efd1fc6a506488495d951d5263988d25610434565b6401000276a45b8d602001518e606001518f6000015160405160200161045593929190611d89565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401610484959493929190611e10565b6040805180830381600087803b15801561049d57600080fd5b505af19250505080156104eb575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526104e891810190611b6e565b60015b610568573d808015610519576040519150601f19603f3d011682016040523d82523d6000602084013e61051e565b606091505b505a82039450886080015173ffffffffffffffffffffffffffffffffffffffff166000141561054c57600080555b610557818487610bfb565b97509750975097505050505061056e565b50505050505b9193509193565b7f000000000000000000000000000000000000000000000000000000000000000081565b60208101518151606083015160009283928392839273ffffffffffffffffffffffffffffffffffffffff808216908416109284926105d79290610b8b565b905060005a90508173ffffffffffffffffffffffffffffffffffffffff1663128acb0830856106098c60400151610bc9565b60808d015173ffffffffffffffffffffffffffffffffffffffff1615610633578c60800151610659565b876106525773fffd8963efd1fc6a506488495d951d5263988d25610659565b6401000276a45b8d600001518e606001518f6020015160405160200161067a93929190611d89565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016106a9959493929190611e10565b6040805180830381600087803b1580156106c257600080fd5b505af1925050508015610710575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261070d91810190611b6e565b60015b610568573d80801561073e576040519150601f19603f3d011682016040523d82523d6000602084013e610743565b606091505b505a82039450610557818487610bfb565b6000606080600061076486610ae8565b67ffffffffffffffff8111801561077a57600080fd5b506040519080825280602002602001820160405280156107a4578160200160208202803683370190505b5092506107b086610ae8565b67ffffffffffffffff811180156107c657600080fd5b506040519080825280602002602001820160405280156107f0578160200160208202803683370190505b50915060005b60008060006108048a610b17565b9250925092506000806000806108876040518060a001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018f81526020018762ffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815250610599565b9350935093509350828b898151811061089c57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050818a89815181106108e357fe5b63ffffffff90921660209283029190910190910152929b50968201966001909601958b926109108e610b48565b156102fa5761091e8e610b50565b9d50505050505050506107f6565b600083138061093b5750600082135b61094457600080fd5b600080600061095284610b17565b9250925092506109847f0000000000000000000000000000000000000000000000000000000000000000848484610ccf565b5060008060008089136109ca578573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610888a6000036109ff565b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161089896000035b9250925092506000610a12878787610b8b565b90506000808273ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610a5d57600080fd5b505afa158015610a71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a959190611c6b565b5050505050915091508515610abb57604051848152826020820152816040820152606081fd5b60005415610ad1576000548414610ad157600080fd5b604051858152826020820152816040820152606081fd5b805160177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec909101045b919050565b60008080610b258482610cee565b9250610b32846014610dee565b9050610b3f846017610cee565b91509193909250565b516042111590565b8051606090610b859083906017907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe901610ede565b92915050565b6000610bc17f0000000000000000000000000000000000000000000000000000000000000000610bbc8686866110c5565b611142565b949350505050565b60007f80000000000000000000000000000000000000000000000000000000000000008210610bf757600080fd5b5090565b6000806000806000808773ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610c4a57600080fd5b505afa158015610c5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c829190611c6b565b50939650610c9794508d935061127892505050565b91975095509050610cbf73ffffffffffffffffffffffffffffffffffffffff89168383611339565b9350869250505093509350935093565b6000610ce585610ce08686866110c5565b611991565b95945050505050565b600081826014011015610d6257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f746f416464726573735f6f766572666c6f770000000000000000000000000000604482015290519081900360640190fd5b8160140183511015610dd557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f416464726573735f6f75744f66426f756e64730000000000000000000000604482015290519081900360640190fd5b5001602001516c01000000000000000000000000900490565b600081826003011015610e6257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f746f55696e7432345f6f766572666c6f77000000000000000000000000000000604482015290519081900360640190fd5b8160030183511015610ed557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f746f55696e7432345f6f75744f66426f756e6473000000000000000000000000604482015290519081900360640190fd5b50016003015190565b60608182601f011015610f5257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b828284011015610fc357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b8183018451101561103557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e6473000000000000000000000000000000604482015290519081900360640190fd5b60608215801561105457604051915060008252602082016040526110bc565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561108d578051835260209283019201611075565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b6110cd6119fa565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161115611105579192915b506040805160608101825273ffffffffffffffffffffffffffffffffffffffff948516815292909316602083015262ffffff169181019190915290565b6000816020015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff161061118457600080fd5b508051602080830151604093840151845173ffffffffffffffffffffffffffffffffffffffff94851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b60008060008351606014611318576044845110156112cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c290611e75565b60405180910390fd5b600484019350838060200190518101906112e59190611bdf565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c29190611e62565b8380602001905181019061132c9190611d02565b9250925092509193909250565b60008060008060008060008060088b73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561138d57600080fd5b505afa1580156113a1573d6000803e3d6000fd5b505050506040513d60208110156113b757600080fd5b5051600290810b908c900b816113c957fe5b0560020b901d905060006101008c73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561141c57600080fd5b505afa158015611430573d6000803e3d6000fd5b505050506040513d602081101561144657600080fd5b5051600290810b908d900b8161145857fe5b0560020b8161146357fe5b079050600060088d73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156114b057600080fd5b505afa1580156114c4573d6000803e3d6000fd5b505050506040513d60208110156114da57600080fd5b5051600290810b908d900b816114ec57fe5b0560020b901d905060006101008e73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561153f57600080fd5b505afa158015611553573d6000803e3d6000fd5b505050506040513d602081101561156957600080fd5b5051600290810b908e900b8161157b57fe5b0560020b8161158657fe5b07905060008160ff166001901b8f73ffffffffffffffffffffffffffffffffffffffff16635339c296856040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b1580156115e757600080fd5b505afa1580156115fb573d6000803e3d6000fd5b505050506040513d602081101561161157600080fd5b5051161180156116a457508d73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561166257600080fd5b505afa158015611676573d6000803e3d6000fd5b505050506040513d602081101561168c57600080fd5b5051600290810b908d900b8161169e57fe5b0760020b155b80156116b557508b60020b8d60020b135b945060008360ff166001901b8f73ffffffffffffffffffffffffffffffffffffffff16635339c296876040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b15801561171557600080fd5b505afa158015611729573d6000803e3d6000fd5b505050506040513d602081101561173f57600080fd5b5051161180156117d257508d73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561179057600080fd5b505afa1580156117a4573d6000803e3d6000fd5b505050506040513d60208110156117ba57600080fd5b5051600290810b908e900b816117cc57fe5b0760020b155b80156117e357508b60020b8d60020b125b95508160010b8460010b128061180f57508160010b8460010b14801561180f57508060ff168360ff1611155b1561182557839950829750819850809650611832565b8199508097508398508296505b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff87161b9150505b8560010b8760010b13611969578560010b8760010b14156118a3577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff858103161c165b6000818c73ffffffffffffffffffffffffffffffffffffffff16635339c2968a6040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b1580156118fa57600080fd5b505afa15801561190e573d6000803e3d6000fd5b505050506040513d602081101561192457600080fd5b5051169050611932816119c1565b61ffff16989098019750506001909501947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61185e565b8115611976576001880397505b8215611983576001880397505b505050505050509392505050565b600061199d8383611142565b90503373ffffffffffffffffffffffffffffffffffffffff821614610b8557600080fd5b6000805b8215610b85577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8301909216916001016119c5565b604080516060810182526000808252602082018190529181019190915290565b600082601f830112611a2a578081fd5b8135611a3d611a3882611faf565b611f8b565b818152846020838601011115611a51578283fd5b816020850160208301379081016020019190915292915050565b8051600281900b8114610b1257600080fd5b600060a08284031215611a8e578081fd5b60405160a0810181811067ffffffffffffffff82111715611aab57fe5b6040529050808235611abc8161201f565b81526020830135611acc8161201f565b602082015260408381013590820152606083013562ffffff81168114611af157600080fd5b6060820152611b0260808401611b0e565b60808201525092915050565b8035610b128161201f565b805161ffff81168114610b1257600080fd5b60008060408385031215611b3d578182fd5b823567ffffffffffffffff811115611b53578283fd5b611b5f85828601611a1a565b95602094909401359450505050565b60008060408385031215611b80578182fd5b505080516020909101519092909150565b600080600060608486031215611ba5578081fd5b8335925060208401359150604084013567ffffffffffffffff811115611bc9578182fd5b611bd586828701611a1a565b9150509250925092565b600060208284031215611bf0578081fd5b815167ffffffffffffffff811115611c06578182fd5b8201601f81018413611c16578182fd5b8051611c24611a3882611faf565b818152856020838501011115611c38578384fd5b610ce5826020830160208601611fef565b600060a08284031215611c5a578081fd5b611c648383611a7d565b9392505050565b600080600080600080600060e0888a031215611c85578283fd5b8751611c908161201f565b9650611c9e60208901611a6b565b9550611cac60408901611b19565b9450611cba60608901611b19565b9350611cc860808901611b19565b925060a088015160ff81168114611cdd578283fd5b60c08901519092508015158114611cf2578182fd5b8091505092959891949750929550565b600080600060608486031215611d16578081fd5b835192506020840151611d288161201f565b9150611d3660408501611a6b565b90509250925092565b60008151808452611d57816020860160208601611fef565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b606093841b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000908116825260e89390931b7fffffff0000000000000000000000000000000000000000000000000000000000166014820152921b166017820152602b0190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b600073ffffffffffffffffffffffffffffffffffffffff8088168352861515602084015285604084015280851660608401525060a06080830152611e5760a0830184611d3f565b979650505050505050565b600060208252611c646020830184611d3f565b60208082526010908201527f556e6578706563746564206572726f7200000000000000000000000000000000604082015260600190565b600060808201868352602060808185015281875180845260a0860191508289019350845b81811015611f0257845173ffffffffffffffffffffffffffffffffffffffff1683529383019391830191600101611ed0565b505084810360408601528651808252908201925081870190845b81811015611f3e57825163ffffffff1685529383019391830191600101611f1c565b5050505060609290920192909252949350505050565b93845273ffffffffffffffffffffffffffffffffffffffff92909216602084015263ffffffff166040830152606082015260800190565b60405181810167ffffffffffffffff81118282101715611fa757fe5b604052919050565b600067ffffffffffffffff821115611fc357fe5b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60005b8381101561200a578181015183820152602001611ff2565b83811115612019576000848401525b50505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461204157600080fd5b5056fea164736f6c6343000706000a";const deployedBytecode="0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063c45a01551161005b578063c45a0155146100e6578063c6a5026a146100ee578063cdca175314610101578063fa461e33146101145761007d565b80632f80bb1d146100825780634aa4a4fc146100ae578063bd21704a146100c3575b600080fd5b610095610090366004611b2b565b610129565b6040516100a59493929190611eac565b60405180910390f35b6100b661031f565b6040516100a59190611def565b6100d66100d1366004611c49565b610343565b6040516100a59493929190611f54565b6100b6610575565b6100d66100fc366004611c49565b610599565b61009561010f366004611b2b565b610754565b610127610122366004611b91565b61092c565b005b6000606080600061013986610ae8565b67ffffffffffffffff8111801561014f57600080fd5b50604051908082528060200260200182016040528015610179578160200160208202803683370190505b50925061018586610ae8565b67ffffffffffffffff8111801561019b57600080fd5b506040519080825280602002602001820160405280156101c5578160200160208202803683370190505b50915060005b60008060006101d98a610b17565b92509250925060008060008061025c6040518060a001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018f81526020018762ffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815250610343565b9350935093509350828b898151811061027157fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050818a89815181106102b857fe5b63ffffffff90921660209283029190910190910152929b50968201966001909601958b926102e58e610b48565b156102fa576102f38e610b50565b9d5061030a565b8c9b505050505050505050610316565b505050505050506101cb565b92959194509250565b7f000000000000000000000000000000000000000000000000000000000000000081565b60208101518151606083015160009283928392839273ffffffffffffffffffffffffffffffffffffffff808216908416109284926103819290610b8b565b9050866080015173ffffffffffffffffffffffffffffffffffffffff16600014156103af5760408701516000555b60005a90508173ffffffffffffffffffffffffffffffffffffffff1663128acb0830856103df8c60400151610bc9565b6000038c6080015173ffffffffffffffffffffffffffffffffffffffff1660001461040e578c60800151610434565b8761042d5773fffd8963efd1fc6a506488495d951d5263988d25610434565b6401000276a45b8d602001518e606001518f6000015160405160200161045593929190611d89565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401610484959493929190611e10565b6040805180830381600087803b15801561049d57600080fd5b505af19250505080156104eb575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526104e891810190611b6e565b60015b610568573d808015610519576040519150601f19603f3d011682016040523d82523d6000602084013e61051e565b606091505b505a82039450886080015173ffffffffffffffffffffffffffffffffffffffff166000141561054c57600080555b610557818487610bfb565b97509750975097505050505061056e565b50505050505b9193509193565b7f000000000000000000000000000000000000000000000000000000000000000081565b60208101518151606083015160009283928392839273ffffffffffffffffffffffffffffffffffffffff808216908416109284926105d79290610b8b565b905060005a90508173ffffffffffffffffffffffffffffffffffffffff1663128acb0830856106098c60400151610bc9565b60808d015173ffffffffffffffffffffffffffffffffffffffff1615610633578c60800151610659565b876106525773fffd8963efd1fc6a506488495d951d5263988d25610659565b6401000276a45b8d600001518e606001518f6020015160405160200161067a93929190611d89565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016106a9959493929190611e10565b6040805180830381600087803b1580156106c257600080fd5b505af1925050508015610710575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261070d91810190611b6e565b60015b610568573d80801561073e576040519150601f19603f3d011682016040523d82523d6000602084013e610743565b606091505b505a82039450610557818487610bfb565b6000606080600061076486610ae8565b67ffffffffffffffff8111801561077a57600080fd5b506040519080825280602002602001820160405280156107a4578160200160208202803683370190505b5092506107b086610ae8565b67ffffffffffffffff811180156107c657600080fd5b506040519080825280602002602001820160405280156107f0578160200160208202803683370190505b50915060005b60008060006108048a610b17565b9250925092506000806000806108876040518060a001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018f81526020018762ffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815250610599565b9350935093509350828b898151811061089c57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050818a89815181106108e357fe5b63ffffffff90921660209283029190910190910152929b50968201966001909601958b926109108e610b48565b156102fa5761091e8e610b50565b9d50505050505050506107f6565b600083138061093b5750600082135b61094457600080fd5b600080600061095284610b17565b9250925092506109847f0000000000000000000000000000000000000000000000000000000000000000848484610ccf565b5060008060008089136109ca578573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610888a6000036109ff565b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161089896000035b9250925092506000610a12878787610b8b565b90506000808273ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610a5d57600080fd5b505afa158015610a71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a959190611c6b565b5050505050915091508515610abb57604051848152826020820152816040820152606081fd5b60005415610ad1576000548414610ad157600080fd5b604051858152826020820152816040820152606081fd5b805160177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec909101045b919050565b60008080610b258482610cee565b9250610b32846014610dee565b9050610b3f846017610cee565b91509193909250565b516042111590565b8051606090610b859083906017907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe901610ede565b92915050565b6000610bc17f0000000000000000000000000000000000000000000000000000000000000000610bbc8686866110c5565b611142565b949350505050565b60007f80000000000000000000000000000000000000000000000000000000000000008210610bf757600080fd5b5090565b6000806000806000808773ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610c4a57600080fd5b505afa158015610c5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c829190611c6b565b50939650610c9794508d935061127892505050565b91975095509050610cbf73ffffffffffffffffffffffffffffffffffffffff89168383611339565b9350869250505093509350935093565b6000610ce585610ce08686866110c5565b611991565b95945050505050565b600081826014011015610d6257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f746f416464726573735f6f766572666c6f770000000000000000000000000000604482015290519081900360640190fd5b8160140183511015610dd557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f416464726573735f6f75744f66426f756e64730000000000000000000000604482015290519081900360640190fd5b5001602001516c01000000000000000000000000900490565b600081826003011015610e6257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f746f55696e7432345f6f766572666c6f77000000000000000000000000000000604482015290519081900360640190fd5b8160030183511015610ed557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f746f55696e7432345f6f75744f66426f756e6473000000000000000000000000604482015290519081900360640190fd5b50016003015190565b60608182601f011015610f5257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b828284011015610fc357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b8183018451101561103557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e6473000000000000000000000000000000604482015290519081900360640190fd5b60608215801561105457604051915060008252602082016040526110bc565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561108d578051835260209283019201611075565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b6110cd6119fa565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161115611105579192915b506040805160608101825273ffffffffffffffffffffffffffffffffffffffff948516815292909316602083015262ffffff169181019190915290565b6000816020015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff161061118457600080fd5b508051602080830151604093840151845173ffffffffffffffffffffffffffffffffffffffff94851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b60008060008351606014611318576044845110156112cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c290611e75565b60405180910390fd5b600484019350838060200190518101906112e59190611bdf565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c29190611e62565b8380602001905181019061132c9190611d02565b9250925092509193909250565b60008060008060008060008060088b73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561138d57600080fd5b505afa1580156113a1573d6000803e3d6000fd5b505050506040513d60208110156113b757600080fd5b5051600290810b908c900b816113c957fe5b0560020b901d905060006101008c73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561141c57600080fd5b505afa158015611430573d6000803e3d6000fd5b505050506040513d602081101561144657600080fd5b5051600290810b908d900b8161145857fe5b0560020b8161146357fe5b079050600060088d73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156114b057600080fd5b505afa1580156114c4573d6000803e3d6000fd5b505050506040513d60208110156114da57600080fd5b5051600290810b908d900b816114ec57fe5b0560020b901d905060006101008e73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561153f57600080fd5b505afa158015611553573d6000803e3d6000fd5b505050506040513d602081101561156957600080fd5b5051600290810b908e900b8161157b57fe5b0560020b8161158657fe5b07905060008160ff166001901b8f73ffffffffffffffffffffffffffffffffffffffff16635339c296856040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b1580156115e757600080fd5b505afa1580156115fb573d6000803e3d6000fd5b505050506040513d602081101561161157600080fd5b5051161180156116a457508d73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561166257600080fd5b505afa158015611676573d6000803e3d6000fd5b505050506040513d602081101561168c57600080fd5b5051600290810b908d900b8161169e57fe5b0760020b155b80156116b557508b60020b8d60020b135b945060008360ff166001901b8f73ffffffffffffffffffffffffffffffffffffffff16635339c296876040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b15801561171557600080fd5b505afa158015611729573d6000803e3d6000fd5b505050506040513d602081101561173f57600080fd5b5051161180156117d257508d73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561179057600080fd5b505afa1580156117a4573d6000803e3d6000fd5b505050506040513d60208110156117ba57600080fd5b5051600290810b908e900b816117cc57fe5b0760020b155b80156117e357508b60020b8d60020b125b95508160010b8460010b128061180f57508160010b8460010b14801561180f57508060ff168360ff1611155b1561182557839950829750819850809650611832565b8199508097508398508296505b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff87161b9150505b8560010b8760010b13611969578560010b8760010b14156118a3577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff858103161c165b6000818c73ffffffffffffffffffffffffffffffffffffffff16635339c2968a6040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b1580156118fa57600080fd5b505afa15801561190e573d6000803e3d6000fd5b505050506040513d602081101561192457600080fd5b5051169050611932816119c1565b61ffff16989098019750506001909501947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61185e565b8115611976576001880397505b8215611983576001880397505b505050505050509392505050565b600061199d8383611142565b90503373ffffffffffffffffffffffffffffffffffffffff821614610b8557600080fd5b6000805b8215610b85577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8301909216916001016119c5565b604080516060810182526000808252602082018190529181019190915290565b600082601f830112611a2a578081fd5b8135611a3d611a3882611faf565b611f8b565b818152846020838601011115611a51578283fd5b816020850160208301379081016020019190915292915050565b8051600281900b8114610b1257600080fd5b600060a08284031215611a8e578081fd5b60405160a0810181811067ffffffffffffffff82111715611aab57fe5b6040529050808235611abc8161201f565b81526020830135611acc8161201f565b602082015260408381013590820152606083013562ffffff81168114611af157600080fd5b6060820152611b0260808401611b0e565b60808201525092915050565b8035610b128161201f565b805161ffff81168114610b1257600080fd5b60008060408385031215611b3d578182fd5b823567ffffffffffffffff811115611b53578283fd5b611b5f85828601611a1a565b95602094909401359450505050565b60008060408385031215611b80578182fd5b505080516020909101519092909150565b600080600060608486031215611ba5578081fd5b8335925060208401359150604084013567ffffffffffffffff811115611bc9578182fd5b611bd586828701611a1a565b9150509250925092565b600060208284031215611bf0578081fd5b815167ffffffffffffffff811115611c06578182fd5b8201601f81018413611c16578182fd5b8051611c24611a3882611faf565b818152856020838501011115611c38578384fd5b610ce5826020830160208601611fef565b600060a08284031215611c5a578081fd5b611c648383611a7d565b9392505050565b600080600080600080600060e0888a031215611c85578283fd5b8751611c908161201f565b9650611c9e60208901611a6b565b9550611cac60408901611b19565b9450611cba60608901611b19565b9350611cc860808901611b19565b925060a088015160ff81168114611cdd578283fd5b60c08901519092508015158114611cf2578182fd5b8091505092959891949750929550565b600080600060608486031215611d16578081fd5b835192506020840151611d288161201f565b9150611d3660408501611a6b565b90509250925092565b60008151808452611d57816020860160208601611fef565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b606093841b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000908116825260e89390931b7fffffff0000000000000000000000000000000000000000000000000000000000166014820152921b166017820152602b0190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b600073ffffffffffffffffffffffffffffffffffffffff8088168352861515602084015285604084015280851660608401525060a06080830152611e5760a0830184611d3f565b979650505050505050565b600060208252611c646020830184611d3f565b60208082526010908201527f556e6578706563746564206572726f7200000000000000000000000000000000604082015260600190565b600060808201868352602060808185015281875180845260a0860191508289019350845b81811015611f0257845173ffffffffffffffffffffffffffffffffffffffff1683529383019391830191600101611ed0565b505084810360408601528651808252908201925081870190845b81811015611f3e57825163ffffffff1685529383019391830191600101611f1c565b5050505060609290920192909252949350505050565b93845273ffffffffffffffffffffffffffffffffffffffff92909216602084015263ffffffff166040830152606082015260800190565b60405181810167ffffffffffffffff81118282101715611fa757fe5b604052919050565b600067ffffffffffffffff821115611fc357fe5b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60005b8381101561200a578181015183820152602001611ff2565b83811115612019576000848401525b50505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461204157600080fd5b5056fea164736f6c6343000706000a";const linkReferences={};const deployedLinkReferences={};const IQuoterV2ABI={_format:_format,contractName:contractName,sourceName:sourceName,abi:abi,bytecode:bytecode,deployedBytecode:deployedBytecode,linkReferences:linkReferences,deployedLinkReferences:deployedLinkReferences};class SwapManager{constructor(blockchain,provider,initialFeeBasisPoints=YAKKL_FEE_BASIS_POINTS){__publicField(this,"blockchain");__publicField(this,"provider");__publicField(this,"feeBasisPoints",YAKKL_FEE_BASIS_POINTS);__publicField(this,"priceManager");__publicField(this,"tokens",[]);__publicField(this,"preferredTokens",[]);__publicField(this,"stablecoinTokens",[]);this.blockchain=blockchain;this.provider=provider;this.feeBasisPoints=initialFeeBasisPoints<0?YAKKL_FEE_BASIS_POINTS:initialFeeBasisPoints;this.priceManager=new PriceManager}getChainId(){return this.blockchain.chainId}getMarketPrice(pair){return this.priceManager.getMarketPrice(pair)}getProvider(){return this.provider}getFeeBasisPoints(){return this.feeBasisPoints}setFeeBasisPoints(feeBasisPoints){this.feeBasisPoints=feeBasisPoints}calculateFee(amount){try{if(amount===0n||this.feeBasisPoints<=0)return 0n;return calculateFeeAmount(amount,this.feeBasisPoints)}catch(error){log.error("Error calculating fee:",false,error);return 0n}}}class Token{constructor(address,name,symbol,decimals,logoURI,description,chainId,isNative,isStablecoin,blockchain,provider,balance,privateKey,url){__publicField(this,"address");__publicField(this,"name");__publicField(this,"symbol");__publicField(this,"decimals");__publicField(this,"logoURI");__publicField(this,"description");__publicField(this,"chainId");__publicField(this,"isNative");__publicField(this,"isStablecoin");__publicField(this,"blockchain");__publicField(this,"provider");__publicField(this,"privateKey");__publicField(this,"url");__publicField(this,"balance",0n);this.address=address;this.name=name;this.symbol=symbol;this.decimals=decimals;this.logoURI=logoURI;this.description=description||`${name} token`;this.chainId=chainId||1;this.isNative=isNative||false;this.isStablecoin=isStablecoin||false;this.blockchain=blockchain;this.provider=provider;this.balance=balance||0n;this.privateKey=privateKey||"";this.url=url||""}toJSON(){var _a;return{address:this.address,name:this.name,symbol:this.symbol,decimals:this.decimals,balance:(_a=this.balance)==null?void 0:_a.toString(),logoURI:this.logoURI,description:this.description,chainId:this.chainId,isNative:this.isNative,isStablecoin:this.isStablecoin,url:this.url}}static fromSwapToken(swapToken,blockchain,provider,privateKey){return new ConcreteToken(swapToken.address,swapToken.name,swapToken.symbol,swapToken.decimals,swapToken.logoURI||"",swapToken.description||`${swapToken.name} token`,swapToken.chainId,swapToken.isNative||false,swapToken.isStablecoin||false,blockchain,provider,swapToken.balance||0n,privateKey,swapToken.url||"")}}class ConcreteToken extends Token{async getContract(){return this.blockchain.createContract(this.address,["function balanceOf(address account) view returns (uint256)","function transfer(address to, uint256 amount) returns (bool)"])}async getBalance(userAddress){const contract=await this.getContract();if(!contract)return 0n;this.balance=await contract.call("balanceOf",userAddress);return this.balance}async transfer(toAddress,amount){const contract=await this.getContract();if(!contract)throw new Error("Invalid contract");return await contract.sendTransaction("transfer",toAddress,amount)}}class EVMToken extends Token{constructor(address,name,symbol,decimals,logoURI,description=`${name} token`,chainId=1,isNative,isStablecoin,blockchain,provider,privateKey,url){super(address,name,symbol,decimals,logoURI,description,chainId,isNative,isStablecoin,blockchain,provider,privateKey,url);__publicField(this,"_contract",null)}async getContract(){if(!this._contract){this._contract=this.blockchain.createContract(this.address,ABIs.ERC20)}return this._contract}async getBalance(userAddress){const contract=await this.getContract();if(!contract)return 0n;return await contract.call("balanceOf",userAddress)}async transfer(toAddress,amount){const contract=await this.getContract();if(!contract)throw new Error("Invalid contract");const gasEstimate=await contract.estimateGas("transfer",toAddress,amount);const tx=await contract.populateTransaction("transfer",toAddress,amount);if(!tx)throw new Error("Invalid transaction");tx.gasLimit=gasEstimate;return await this.blockchain.sendTransaction(tx)}}const SUPPORTED_STABLECOINS=["USDC","USDT","DAI","BUSD"];class UniswapSwapManager extends SwapManager{constructor(blockchain,provider,initialFeeBasisPoints=YAKKL_FEE_BASIS_POINTS){super(blockchain,provider,initialFeeBasisPoints);__publicField(this,"routerContract",null);__publicField(this,"providerNative",null);__publicField(this,"signerNative",null);__publicField(this,"factory",null);this.initialize().then()}async initialize(){this.providerNative=await this.provider.getProvider();if(!this.providerNative)throw new Error("Ethereum native provider not initialized");this.signerNative=this.provider.getSignerNative();if(!this.signerNative)throw new Error("Ethereum native signer not initialized");this.factory=new Contract(ADDRESSES.UNISWAP_FACTORY,IUniswapV3FactoryABI.abi,this.providerNative);this.routerContract=new Contract(ADDRESSES.UNISWAP_V3_ROUTER,abi$1,this.signerNative);this.tokens=await this.fetchTokenList();this.preferredTokens=this.getPreferredTokens(this.tokens);this.tokens=this.tokens.filter(token=>!this.preferredTokens.includes(token)).sort((a,b)=>a.symbol.localeCompare(b.symbol));this.stablecoinTokens=this.tokens.filter(token=>token.isStablecoin)}dispose(){}getName(){return"Uniswap V3"}async checkIfPoolExists(tokenIn,tokenOut,fee){if(!this.factory)throw new Error("Factory contract not initialized");try{const poolAddress=await this.factory.getPool(tokenIn.address,tokenOut.address,fee);return poolAddress!==ZeroAddress}catch(error){return false}}async fetchTokenList(){try{const response=await fetch("https://tokens.uniswap.org");const data=await response.json();data.tokens.filter(token=>{var _a;return token.chainId===((_a=this.blockchain)==null?void 0:_a.getChainId())}).map(token=>{if(SUPPORTED_STABLECOINS.includes(token.symbol)){token.isStablecoin=true}return token});const eth={chainId:1,address:ADDRESSES.WETH,name:"Ethereum",symbol:"ETH",decimals:18,isNative:true,isStablecoin:false,logoURI:"/images/ethereum.svg"};data.tokens.unshift(eth);return data.tokens}catch(error){log.error("Error fetching token list:",false,error);return[]}}getPreferredTokens(tokens){const preferredTokenSymbols=["ETH","WETH","WBTC","USDC","USDT","DAI"];return preferredTokenSymbols.map(symbol=>tokens.find(token=>token.symbol===symbol)).filter(token=>token!==void 0)}async multiHopQuote(tokenIn,tokenOut,amount,fundingAddress,isExactIn=true,fee=3e3){const provider=new AlchemyProvider("mainnet","pBm4VA9q8Laz9x3bmXTNZ9m-ArxczEWk");const quoterV2ABI=[{inputs:[{internalType:"bytes",name:"path",type:"bytes"},{internalType:"uint256",name:"amountIn",type:"uint256"}],name:"quoteExactInput",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes",name:"path",type:"bytes"},{internalType:"uint256",name:"amountOut",type:"uint256"}],name:"quoteExactOutput",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"}],stateMutability:"nonpayable",type:"function"}];const quoterContract=new Contract(ADDRESSES.UNISWAP_V3_QUOTER,quoterV2ABI,provider);const tokenInAddress=tokenIn.address;const tokenOutAddress=tokenOut.address;const encodedPath=isExactIn?solidityPacked(["address","uint24","address","uint24","address"],[tokenInAddress,fee,ADDRESSES.WETH,fee,tokenOutAddress]):solidityPacked(["address","uint24","address","uint24","address"],[tokenOutAddress,fee,ADDRESSES.WETH,fee,tokenInAddress]);const amountInOrOut=toBigInt(amount);const multiHopParams={path:encodedPath,...isExactIn?{amountIn:amountInOrOut}:{amountOut:amountInOrOut}};try{let quoteAmount;if(isExactIn){quoteAmount=await quoterContract.quoteExactInput.staticCall(multiHopParams.path,amountInOrOut)}else{quoteAmount=await quoterContract.quoteExactOutput.staticCall(multiHopParams.path,amountInOrOut)}if(quoteAmount>0n){const gasEstimate=await this.getGasEstimateForSwap(tokenInAddress,tokenOutAddress,amountInOrOut,fundingAddress,fee);return await this.constructQuoteData(tokenIn,tokenOut,fundingAddress,amount,quoteAmount,fee,gasEstimate,true,0n,0,isExactIn)}}catch(error){const excludedProperties=["url","requestBody","requestMethod","accessList"];const formattedError=this.errorUniswap(error,excludedProperties);throw new Error(formattedError)}throw new Error("Token pools not found")}async getQuote(tokenIn,tokenOut,amount,fundingAddress,isExactIn=true,fee=3e3){const actualTokenIn=tokenIn.isNative?await this.getWETHToken():tokenIn;const actualTokenOut=tokenOut.isNative?await this.getWETHToken():tokenOut;switch(fee){case 500:case 3e3:case 1e4:break;default:fee=3e3;break}if(!(actualTokenIn==null?void 0:actualTokenIn.address)||!(actualTokenOut==null?void 0:actualTokenOut.address)||!amount){return{provider:this.getName(),lastUpdated:new Date,chainId:this.provider?this.provider.getChainId():1,tokenIn:tokenIn,tokenOut:tokenOut,fundingAddress:fundingAddress,quoteAmount:0n,feeAmount:0n,amountAfterFee:0n,amountIn:0n,amountOut:0n,exchangeRate:0,marketPriceIn:0,marketPriceOut:0,marketPriceGas:0,priceImpactRatio:0,path:[tokenIn.isNative?ZeroAddress:tokenIn.address,tokenOut.isNative?ZeroAddress:tokenOut.address],fee:fee,feeBasisPoints:this.feeBasisPoints,feeAmountPrice:0,feeAmountInUSD:"",gasEstimate:0n,gasEstimateInUSD:"",tokenOutPriceInUSD:"",slippageTolerance:.5,deadline:10,sqrtPriceX96After:0n,initializedTicksCrossed:0,multiHop:false,error:"Insufficient parameters for quote",isLoading:false}}if(!this.providerNative)throw new Error("Provider(s) not set");const availablePools=await this.getAvailablePools(actualTokenIn,actualTokenOut);let newFee=fee;if(!availablePools||!availablePools.includes(fee)){newFee=availablePools[0]}if(!availablePools||availablePools.length===0){try{return await this.multiHopQuote(tokenIn,tokenOut,amount,fundingAddress,isExactIn,newFee)}catch(error){log.error("Multi-hop quote failed:",false,error);throw new Error("No valid route exists for the provided tokens and amount")}}try{const params={tokenIn:actualTokenIn.address,tokenOut:actualTokenOut.address,fee:newFee,sqrtPriceLimitX96:0n,...isExactIn?{amountIn:amount}:{amount:amount}};const quoterContract=new Contract(ADDRESSES.UNISWAP_V3_QUOTER,IQuoterV2ABI.abi,this.providerNative);let quoteAmount;let sqrtPriceX96After=0n;let initializedTicksCrossed=0;let gasEstimate=0n;if(isExactIn){[quoteAmount,sqrtPriceX96After,initializedTicksCrossed,gasEstimate]=await quoterContract.quoteExactInputSingle.staticCall(params)}else{[quoteAmount,sqrtPriceX96After,initializedTicksCrossed,gasEstimate]=await quoterContract.quoteExactOutputSingle.staticCall(params)}if(quoteAmount>0n){return await this.constructQuoteData(tokenIn,tokenOut,fundingAddress,amount,quoteAmount,newFee,gasEstimate,false,sqrtPriceX96After,initializedTicksCrossed,isExactIn)}}catch(error){log.error("Direct pool quote failed, trying multi-hop:",false,error)}try{return await this.multiHopQuote(tokenIn,tokenOut,amount,fundingAddress,isExactIn,newFee)}catch(error){log.error("Multi-hop quote failed:",false,error);throw new Error("No valid route exists for the provided tokens and amount")}}async estimateSwapGas(swapRouterAddress,swapParams){return 0n}async getAvailablePools(tokenA,tokenB){const availablePools=[];const feeTiers=[500,3e3,1e4];for(const fee of feeTiers){try{const poolAddress=await this.getPoolAddress(tokenA,tokenB,fee);if(poolAddress!==ZeroAddress){availablePools.push(fee)}}catch(error){log.error(`Pool not found for tokens ${tokenA.symbol}/${tokenB.symbol} with fee ${fee}`)}}return availablePools}async getPoolAddress(tokenA,tokenB,fee){if(!this.factory)throw new Error("Factory contract not initialized");const[token0,token1]=[tokenA.address,tokenB.address].sort((a,b)=>a.toLowerCase()<b.toLowerCase()?-1:1);const poolAddress=await this.factory.getPool(token0,token1,fee);return poolAddress}async constructQuoteData(tokenIn,tokenOut,fundingAddress,amount,quoteAmount,fee,gasEstimate,multiHop,sqrtPriceX96After,initializedTicksCrossed,isExactIn){const feeAmount=this.calculateFee(isExactIn?quoteAmount:toBigInt(amount));const amountAfterFee=isExactIn?quoteAmount-feeAmount:quoteAmount+feeAmount;const formattedAmountIn=Number(formatUnits(isExactIn?toBigInt(amount):amountAfterFee,tokenIn.decimals));const formattedAmountOut=Number(formatUnits(isExactIn?amountAfterFee:toBigInt(amount),tokenOut.decimals));const exchangeRate=formattedAmountOut/formattedAmountIn;const priceIn=await this.getMarketPrice(`${tokenIn.symbol}-USD`);const priceOut=await this.getMarketPrice(`${tokenOut.symbol}-USD`);if(!priceIn||!priceOut){throw new Error("Failed to get price from provider")}const feeAmountInUSD=formatFeeToUSD(feeAmount,tokenOut.decimals,priceOut.price);const priceOutBigInt=BigInt(Math.round(priceOut.price*10**tokenOut.decimals));let gasEstimateInUSD="";let adjustedGasEstimate=0n;const gasPrice=await this.getMarketPrice(`ETH-USD`);if(gasEstimate>0n){adjustedGasEstimate=gasEstimate*(10000n+YAKKL_GAS_ESTIMATE_MULTIPLIER_BASIS_POINTS)/10000n;const gasEstimateInEther=adjustedGasEstimate*10n**9n;const gasEstimateInEtherNumber=Number(gasEstimateInEther)/10**18;const ethPriceInUSD=gasPrice.price;const gasCostInUSD=gasEstimateInEtherNumber*ethPriceInUSD;gasEstimateInUSD=gasCostInUSD>YAKKL_GAS_ESTIMATE_MIN_USD?formatPrice(gasCostInUSD):formatPrice(YAKKL_GAS_ESTIMATE_MIN_USD)}return{provider:this.getName(),lastUpdated:new Date,chainId:this.getChainId(),tokenIn:tokenIn,tokenOut:tokenOut,fundingAddress:fundingAddress,quoteAmount:quoteAmount,feeAmount:feeAmount,amountAfterFee:amountAfterFee,amountIn:isExactIn?amount:quoteAmount,amountOut:isExactIn?amountAfterFee:amount,exchangeRate:exchangeRate,marketPriceIn:priceIn.price,marketPriceOut:priceOut.price,marketPriceGas:gasPrice.price,priceImpactRatio:0,path:[tokenIn.isNative?ZeroAddress:tokenIn.address,tokenOut.isNative?ZeroAddress:tokenOut.address],fee:fee,feeBasisPoints:this.feeBasisPoints,feeAmountPrice:Number(feeAmount)*priceOut.price/formattedAmountOut,feeAmountInUSD:feeAmountInUSD,gasEstimate:adjustedGasEstimate,gasEstimateInUSD:gasEstimateInUSD,tokenOutPriceInUSD:formatPrice(Number(priceOutBigInt)/10**tokenOut.decimals),slippageTolerance:.5,deadline:10,sqrtPriceX96After:sqrtPriceX96After,initializedTicksCrossed:initializedTicksCrossed,multiHop:multiHop,error:null,isLoading:false}}async getGasEstimateForSwap(tokenIn,tokenOut,amountIn,fundingAddress,fee){if(!this.providerNative){throw new Error("Ethereum provider not initialized")}const swapRouterABI=["function exactInput((bytes path,uint256 amountIn,uint256 amountOutMinimum,address recipient,uint256 deadline)) external payable returns (uint256 amountOut)"];const provider=new JsonRpcProvider(await this.provider.getProviderURL());const swapRouter=new Contract(ADDRESSES.UNISWAP_V3_ROUTER,swapRouterABI,provider);const encodedPath=solidityPacked(["address","uint24","address","uint24","address"],[tokenIn,fee,ADDRESSES.WETH,fee,tokenOut]);const recipient=fundingAddress;const deadline=Math.floor(Date.now()/1e3)+60*20;const amountOutMinimum=0;const swapParams={path:encodedPath,amountIn:amountIn.toString(),amountOutMinimum:amountOutMinimum,recipient:recipient,deadline:deadline};try{const tx=await swapRouter.exactInput.populateTransaction(swapParams);tx.from=recipient;const isNativeInput=tokenIn.toLowerCase()===ZeroAddress.toLowerCase();if(isNativeInput){tx.value=BigInt(amountIn.toString())}let gasEstimate;try{const estimatedGas=await provider.estimateGas({...tx,from:recipient});gasEstimate=BigInt(estimatedGas.toString())}catch(estimateError){const baseGasLimit=YAKKL_GAS_ESTIMATE_MULTIHOP_SWAP_DEFAULT;gasEstimate=BigInt(baseGasLimit)}const gasEstimateBigInt=gasEstimate;const adjustedGasEstimate=gasEstimateBigInt*(10000n+YAKKL_GAS_ESTIMATE_MULTIPLIER_BASIS_POINTS)/10000n;return adjustedGasEstimate}catch(error){const fallbackGasLimit=BigInt(YAKKL_GAS_ESTIMATE_MULTIHOP_SWAP_DEFAULT);return fallbackGasLimit}}async getPoolInfo(tokenIn,tokenOut,fee=3e3){throw new Error("Not implemented yet")}returnError(message){return{provider:this.getName(),price:0,lastUpdated:new Date,status:404,message:message}}errorUniswap(error,excludeProps=[]){const cleanObject=(obj,exclude)=>{if(!obj||typeof obj!=="object"){return obj}const cleaned=Array.isArray(obj)?[...obj]:{...obj};for(const key in cleaned){if(exclude.includes(key)){delete cleaned[key]}else if(typeof cleaned[key]==="string"){try{const parsed=JSON.parse(cleaned[key]);cleaned[key]=parsed}catch{}}else if(typeof cleaned[key]==="object"){cleaned[key]=cleanObject(cleaned[key],exclude)}}return cleaned};const cleanedError=cleanObject(error,excludeProps);return JSON.stringify(cleanedError,null,2)}async getTokenReserve(token,poolAddress){const balance=await token.getBalance(poolAddress);return balance?balance.toString():"0"}async getTokenUSDPrice(token){try{const price=await this.getMarketPrice(token.symbol+"-USD");return price.price}catch(error){log.error("Error getting token price. Defaulting to 0:",false,error);return 0}}async calculateTVL(tokenA,tokenB,poolAddress){const[reserveA,reserveB]=await Promise.all([this.getTokenReserve(tokenA,poolAddress),this.getTokenReserve(tokenB,poolAddress)]);const[priceA,priceB]=await Promise.all([this.getTokenUSDPrice(tokenA),this.getTokenUSDPrice(tokenB)]);const valueA=Number(reserveA)/10**tokenA.decimals*priceA;const valueB=Number(reserveB)/10**tokenB.decimals*priceB;return valueA+valueB}getRouterAddress(){return this.routerContract.target}async getWETHToken(){const chainId=this.getChainId();const wethAddress=chainId===1?ADDRESSES.WETH:ADDRESSES.WETH_SEPOLIA;return new EVMToken(wethAddress,"Wrapped Ether","WETH",18,"/images/ethereum.svg","Wrapped version of Ether",chainId,false,false,this.blockchain,this.provider)}async populateSwapTransaction(tokenIn,tokenOut,amountIn,amountOutMin,recipient,deadline,fee=3e3,estimateOnly=false){const params={tokenIn:tokenIn.address,tokenOut:tokenOut.address,fee:fee,recipient:recipient,deadline:deadline,amountIn:toBigInt(amountIn),amountOutMinimum:toBigInt(amountOutMin),sqrtPriceLimitX96:0};if(!this.routerContract)throw new Error("Router contract not initialized");const populatedTx=await this.routerContract.exactInputSingle.populateTransaction(params);if(estimateOnly){const signer=this.provider.getSigner();if(!signer)throw new Error("No signer available");const gasEstimate=await this.provider.estimateGas({from:await signer.getAddress(),to:this.routerContract.target,data:populatedTx.data,quantity:tokenIn.isNative?amountIn:0n,chainId:this.getChainId()});return gasEstimate}return{to:this.routerContract.target,data:populatedTx.data,quantity:tokenIn.isNative?amountIn:0n,from:params.recipient,chainId:this.getChainId()}}async populateMultiHopSwapTransaction(tokenIn,tokenOut,amountIn,amountOutMin,recipient,deadline){const params={path:[tokenIn.address,ADDRESSES.WETH,tokenOut.address],recipient:recipient,deadline:deadline,amountIn:EthereumBigNumber.from(amountIn).toBigInt()??0n,amountOutMinimum:EthereumBigNumber.from(amountOutMin).toBigInt()??0n};if(!this.routerContract)throw new Error("Router contract not initialized");const populatedTx=await this.routerContract.exactInput.populateTransaction(params);return{to:this.routerContract.target,data:populatedTx.data,quantity:tokenIn.isNative?amountIn:0,from:params.recipient,chainId:this.getChainId()}}async checkAllowance(token,fundingAddress){try{if(!token||token.isNative||!fundingAddress||!this.providerNative){return 0n}const tokenContract=new Contract(token.address,["function allowance(address,address) view returns (uint256)"],this.providerNative);if(!tokenContract){throw new Error("Token contract not initialized")}const allowance=await tokenContract.allowance(fundingAddress,this.getRouterAddress());return toBigInt(allowance)}catch(error){log.error("Error checking allowance:",false,error);return 0n}}async approveToken(token,amount){if(!this.blockchain){throw new Error("Blockchain not initialized")}if(!this.signerNative){throw new Error("Signer not initialized")}if(!token.address||token.address===ZeroAddress){throw new Error("Invalid token address")}const routerAddress=this.getRouterAddress();if(!routerAddress||routerAddress===ZeroAddress){throw new Error("Invalid router address")}const tokenContract=new Contract(token.address,["function approve(address,uint256) public returns (bool)"],this.signerNative);if(!tokenContract){throw new Error("Token contract not initialized")}try{const parsedAmount=parseUnits(amount,token.decimals);if(!parsedAmount){throw new Error("Failed to parse amount")}const gasLimit=1e5;const maxPriorityFeePerGas=parseUnits("1.5","gwei");const maxFeePerGas=parseUnits("20","gwei");const tx=await tokenContract.approve(routerAddress,parsedAmount,{chainId:this.getChainId()||1,type:2,gasLimit:gasLimit,maxPriorityFeePerGas:maxPriorityFeePerGas,maxFeePerGas:maxFeePerGas});const receipt=await tx.wait();if(receipt.status!==1){throw new Error("Token approval transaction failed")}if(receipt.logs.length>0){const eventFragment=tokenContract.interface.getEvent("Approval");const log2=receipt.logs.find(log3=>log3.topics[0]===(eventFragment==null?void 0:eventFragment.topicHash))}return EthersConverter.ethersTransactionReceiptToTransactionReceipt(receipt)}catch(error){log.error("Token approval error:",false,error);throw error}}async executeSwap(params){try{const{tokenIn:tokenIn,tokenOut:tokenOut,amount:amount,fee:fee,slippage:slippage,deadline:deadline,recipient:recipient,gasLimit:gasLimit,maxPriorityFeePerGas:maxPriorityFeePerGas,maxFeePerGas:maxFeePerGas}=params;const quote=await this.getQuote(tokenIn,tokenOut,amount,recipient);if(!quote||quote.error)throw new Error(quote&&quote.error?quote.error:"Failed to get quote for excute swap");const minOut=toBigInt(quote.amountOut)*BigInt(1e3-Math.floor(slippage*10))/1000n;let tx;if(quote.multiHop){tx=await this.populateMultiHopSwapTransaction(tokenIn,tokenOut,amount,minOut,recipient,Math.floor(Date.now()/1e3)+deadline*60)}else{tx=await this.populateSwapTransaction(tokenIn,tokenOut,amount,minOut,recipient,Math.floor(Date.now()/1e3)+deadline*60,fee)}if(typeof tx==="bigint"){throw new Error("Received gas estimate instead of transaction request")}tx.type=2;tx.gasLimit=toBigInt(gasLimit);tx.maxPriorityFeePerGas=toBigInt(maxPriorityFeePerGas);tx.maxFeePerGas=toBigInt(maxFeePerGas);return await this.provider.sendTransaction(tx)}catch(error){log.error("Error executing swap:",false,error);throw error}}async executeFullSwap(params){try{const tx=await this.executeSwap(params);if(!tx){throw new Error("Failed to execute swap - 1")}const swapReceipt=await tx.wait();if(!swapReceipt){throw new Error("Failed to get transaction receipt - 2")}const feeReceipt=await this.distributeFee(params.tokenOut,params.feeAmount,params.feeRecipient,params.gasLimit,params.maxPriorityFeePerGas,params.maxFeePerGas);return[swapReceipt,feeReceipt]}catch(error){log.error("Error executing FULL swap:",false,error);throw error}}async distributeFee(tokenOut,feeAmount,feeRecipient,gasLimit,maxPriorityFeePerGas,maxFeePerGas){if(!this.provider){throw new Error("Provider not initialized")}if(!tokenOut.address&&!tokenOut.isNative){throw new Error("Fee distribution only works with ERC20 tokens")}if(!feeRecipient){throw new Error("Fee recipient address is required")}if(!feeAmount){throw new Error("Fee amount is required")}let priorityFee=toBigInt(maxPriorityFeePerGas);const maxFee=toBigInt(maxFeePerGas);if(priorityFee>maxFee){priorityFee=maxFee}if(tokenOut.isNative){try{const signer=this.provider.getSigner();if(!signer){throw new Error("Signer not available")}const txRequest={to:feeRecipient,value:toBigInt(feeAmount),from:await signer.getAddress(),chainId:this.getChainId(),gasLimit:toBigInt(gasLimit),maxPriorityFeePerGas:priorityFee,maxFeePerGas:maxFee,type:2};const tx=await this.provider.sendTransaction(txRequest);const receipt=await tx.wait();try{const gasUsed=toBigInt(receipt.gasUsed)||0n;const cummulativeGasUsed=receipt.cumulativeGasUsed?toBigInt(receipt.cumulativeGasUsed.toString()):0n;const effectiveGasPrice=receipt.effectiveGasPrice?toBigInt(receipt.effectiveGasPrice.toString()):0n;const gasCost=gasUsed*effectiveGasPrice}catch(error){log.error("Error calculating gas cost (informational-transaction):",false,error)}return receipt}catch(error){log.error("Fee distribution failed (transaction):",false,error);throw error}}try{const tokenContract=new Contract(tokenOut.address,["function transfer(address recipient, uint256 amount) public returns (bool)"],this.signerNative);const tx=await tokenContract.transfer(feeRecipient,feeAmount,{gasLimit:toBigInt(gasLimit),maxPriorityFeePerGas:toBigInt(maxPriorityFeePerGas),maxFeePerGas:toBigInt(maxFeePerGas)});const receipt=await tx.wait();try{const gasUsed=toBigInt(receipt.gasUsed)||0n;const cummulativeGasUsed=toBigInt(receipt.cumulativeGasUsed.toString())||0n;const effectiveGasPrice=receipt.effectiveGasPrice?toBigInt(receipt.effectiveGasPrice.toString()):0n;const gasCost=gasUsed*effectiveGasPrice}catch(error){log.error("Error calculating gas cost (informational-transfer):",false,error)}return receipt}catch(error){log.error("Fee distribution failed (transfer):",false,error);throw error}}async wrapETH(amount,recipient){if(!this.signerNative)throw new Error("Ethereum signer not initialized");if(!recipient)throw new Error("Recipient address is required");if(!amount)throw new Error("Amount is required");try{const wethContract=new Contract(ADDRESSES.WETH,["function deposit() public payable"],this.signerNative);let tx;if(recipient!==await this.signerNative.getAddress()){tx=await wethContract.deposit({value:amount,from:recipient})}else{tx=await wethContract.deposit({value:amount})}const receipt=await tx.wait();return await EthersConverter.ethersTransactionReceiptToTransactionReceipt(receipt)}catch(error){log.error("Error wrapping ETH:",false,error);throw error}}async unwrapWETH(amount,recipient){if(!this.signerNative)throw new Error("Ethereum signer not initialized");if(!recipient)throw new Error("Recipient address is required");if(!amount)throw new Error("Amount is required");try{const wethContract=new Contract(ADDRESSES.WETH,["function withdraw(uint256 amount) public","function transfer(address to, uint256 value) public returns (bool)"],this.signerNative);const tx=await wethContract.withdraw(amount);const receiptTrans=await tx.wait();if(!receiptTrans||receiptTrans.status!==1){throw new Error("Failed to withdraw WETH")}if(recipient!==await this.signerNative.getAddress()){const txTransfer=await this.signerNative.sendTransaction({to:recipient,value:toBigInt(amount)});const receipt=await txTransfer.wait();if(!receipt||receipt.status!==1){throw new Error("Failed to transfer ETH to recipient")}return receipt?await EthersConverter.ethersTransactionReceiptToTransactionReceipt(receipt):null}else{return receiptTrans}}catch(error){log.error("Error unwrapping WETH:",false,error);throw error}}}function shouldShowErrorToUser(error){const errorMessage=(error==null?void 0:error.message)||(error==null?void 0:error.toString())||"";const networkErrors=["missing response","timeout","TIMEOUT","SERVER_ERROR","NETWORK_ERROR","Failed to fetch","fetch","Connection failed","Request timeout","eth_getBalance","call revert exception","alchemy.com","infura.io","requestBody","serverError","code=SERVER_ERROR","version=web/","JsonRpcError","RPC Error","getBalance","Balance fetch"];return!networkErrors.some(pattern=>errorMessage.toLowerCase().includes(pattern.toLowerCase()))}async function getTokenBalance(token,address,provider,tokenService){var _a;try{if(!token)return 0n;if(token.isNative){if(!provider)return 0n;const retBal2=await provider.getBalance(address);token.balance=retBal2;const{balanceCacheManager:balanceCacheManager}=await __vitePreload(async()=>{const{balanceCacheManager:balanceCacheManager2}=await import("./DpKLkluw.js");return{balanceCacheManager:balanceCacheManager2}},true?__vite__mapDeps([0,1]):void 0,import.meta.url);const{yakklPricingStore:yakklPricingStore}=await __vitePreload(async()=>{const{yakklPricingStore:yakklPricingStore2}=await import("./Cb2naUpm.js").then(n=>n.dg);return{yakklPricingStore:yakklPricingStore2}},true?__vite__mapDeps([2,1,3,4,5,6]):void 0,import.meta.url);const{get:get2}=await __vitePreload(async()=>{const{get:get3}=await import("./BOosul_h.js").then(n=>n.i);return{get:get3}},true?__vite__mapDeps([6,4,5]):void 0,import.meta.url);const currentPrice=(_a=get2(yakklPricingStore))==null?void 0:_a.price;if(currentPrice){balanceCacheManager.setCachedBalance(address,retBal2,currentPrice)}return retBal2}if(!tokenService)return 0n;const retBal=await tokenService.getBalance(token.address,address);token.balance=retBal;return retBal}catch(error){if(shouldShowErrorToUser(error)){log$1.error("getTokenBalance - error",false,error)}return 0n}}var isObject_1;var hasRequiredIsObject;function requireIsObject(){if(hasRequiredIsObject)return isObject_1;hasRequiredIsObject=1;function isObject2(value){var type=typeof value;return value!=null&&(type=="object"||type=="function")}isObject_1=isObject2;return isObject_1}var _freeGlobal;var hasRequired_freeGlobal;function require_freeGlobal(){if(hasRequired_freeGlobal)return _freeGlobal;hasRequired_freeGlobal=1;var freeGlobal=typeof commonjsGlobal=="object"&&commonjsGlobal&&commonjsGlobal.Object===Object&&commonjsGlobal;_freeGlobal=freeGlobal;return _freeGlobal}var _root;var hasRequired_root;function require_root(){if(hasRequired_root)return _root;hasRequired_root=1;var freeGlobal=require_freeGlobal();var freeSelf=typeof self=="object"&&self&&self.Object===Object&&self;var root2=freeGlobal||freeSelf||Function("return this")();_root=root2;return _root}var now_1;var hasRequiredNow;function requireNow(){if(hasRequiredNow)return now_1;hasRequiredNow=1;var root2=require_root();var now2=function(){return root2.Date.now()};now_1=now2;return now_1}var _trimmedEndIndex;var hasRequired_trimmedEndIndex;function require_trimmedEndIndex(){if(hasRequired_trimmedEndIndex)return _trimmedEndIndex;hasRequired_trimmedEndIndex=1;var reWhitespace2=/\s/;function trimmedEndIndex2(string){var index2=string.length;while(index2--&&reWhitespace2.test(string.charAt(index2))){}return index2}_trimmedEndIndex=trimmedEndIndex2;return _trimmedEndIndex}var _baseTrim;var hasRequired_baseTrim;function require_baseTrim(){if(hasRequired_baseTrim)return _baseTrim;hasRequired_baseTrim=1;var trimmedEndIndex2=require_trimmedEndIndex();var reTrimStart2=/^\s+/;function baseTrim2(string){return string?string.slice(0,trimmedEndIndex2(string)+1).replace(reTrimStart2,""):string}_baseTrim=baseTrim2;return _baseTrim}var _Symbol;var hasRequired_Symbol;function require_Symbol(){if(hasRequired_Symbol)return _Symbol;hasRequired_Symbol=1;var root2=require_root();var Symbol2=root2.Symbol;_Symbol=Symbol2;return _Symbol}var _getRawTag;var hasRequired_getRawTag;function require_getRawTag(){if(hasRequired_getRawTag)return _getRawTag;hasRequired_getRawTag=1;var Symbol2=require_Symbol();var objectProto=Object.prototype;var hasOwnProperty=objectProto.hasOwnProperty;var nativeObjectToString=objectProto.toString;var symToStringTag=Symbol2?Symbol2.toStringTag:void 0;function getRawTag(value){var isOwn=hasOwnProperty.call(value,symToStringTag),tag2=value[symToStringTag];try{value[symToStringTag]=void 0;var unmasked=true}catch(e){}var result=nativeObjectToString.call(value);if(unmasked){if(isOwn){value[symToStringTag]=tag2}else{delete value[symToStringTag]}}return result}_getRawTag=getRawTag;return _getRawTag}var _objectToString;var hasRequired_objectToString;function require_objectToString(){if(hasRequired_objectToString)return _objectToString;hasRequired_objectToString=1;var objectProto=Object.prototype;var nativeObjectToString=objectProto.toString;function objectToString(value){return nativeObjectToString.call(value)}_objectToString=objectToString;return _objectToString}var _baseGetTag;var hasRequired_baseGetTag;function require_baseGetTag(){if(hasRequired_baseGetTag)return _baseGetTag;hasRequired_baseGetTag=1;var Symbol2=require_Symbol(),getRawTag=require_getRawTag(),objectToString=require_objectToString();var nullTag="[object Null]",undefinedTag="[object Undefined]";var symToStringTag=Symbol2?Symbol2.toStringTag:void 0;function baseGetTag2(value){if(value==null){return value===void 0?undefinedTag:nullTag}return symToStringTag&&symToStringTag in Object(value)?getRawTag(value):objectToString(value)}_baseGetTag=baseGetTag2;return _baseGetTag}var isObjectLike_1;var hasRequiredIsObjectLike;function requireIsObjectLike(){if(hasRequiredIsObjectLike)return isObjectLike_1;hasRequiredIsObjectLike=1;function isObjectLike2(value){return value!=null&&typeof value=="object"}isObjectLike_1=isObjectLike2;return isObjectLike_1}var isSymbol_1;var hasRequiredIsSymbol;function requireIsSymbol(){if(hasRequiredIsSymbol)return isSymbol_1;hasRequiredIsSymbol=1;var baseGetTag2=require_baseGetTag(),isObjectLike2=requireIsObjectLike();var symbolTag2="[object Symbol]";function isSymbol2(value){return typeof value=="symbol"||isObjectLike2(value)&&baseGetTag2(value)==symbolTag2}isSymbol_1=isSymbol2;return isSymbol_1}var toNumber_1;var hasRequiredToNumber;function requireToNumber(){if(hasRequiredToNumber)return toNumber_1;hasRequiredToNumber=1;var baseTrim2=require_baseTrim(),isObject2=requireIsObject(),isSymbol2=requireIsSymbol();var NAN2=0/0;var reIsBadHex2=/^[-+]0x[0-9a-f]+$/i;var reIsBinary2=/^0b[01]+$/i;var reIsOctal2=/^0o[0-7]+$/i;var freeParseInt2=parseInt;function toNumber2(value){if(typeof value=="number"){return value}if(isSymbol2(value)){return NAN2}if(isObject2(value)){var other=typeof value.valueOf=="function"?value.valueOf():value;value=isObject2(other)?other+"":other}if(typeof value!="string"){return value===0?value:+value}value=baseTrim2(value);var isBinary=reIsBinary2.test(value);return isBinary||reIsOctal2.test(value)?freeParseInt2(value.slice(2),isBinary?2:8):reIsBadHex2.test(value)?NAN2:+value}toNumber_1=toNumber2;return toNumber_1}var debounce_1;var hasRequiredDebounce;function requireDebounce(){if(hasRequiredDebounce)return debounce_1;hasRequiredDebounce=1;var isObject2=requireIsObject(),now2=requireNow(),toNumber2=requireToNumber();var FUNC_ERROR_TEXT2="Expected a function";var nativeMax2=Math.max,nativeMin2=Math.min;function debounce2(func,wait,options){var lastArgs,lastThis,maxWait,result,timerId,lastCallTime,lastInvokeTime=0,leading=false,maxing=false,trailing=true;if(typeof func!="function"){throw new TypeError(FUNC_ERROR_TEXT2)}wait=toNumber2(wait)||0;if(isObject2(options)){leading=!!options.leading;maxing="maxWait"in options;maxWait=maxing?nativeMax2(toNumber2(options.maxWait)||0,wait):maxWait;trailing="trailing"in options?!!options.trailing:trailing}function invokeFunc(time){var args=lastArgs,thisArg=lastThis;lastArgs=lastThis=void 0;lastInvokeTime=time;result=func.apply(thisArg,args);return result}function leadingEdge(time){lastInvokeTime=time;timerId=setTimeout(timerExpired,wait);return leading?invokeFunc(time):result}function remainingWait(time){var timeSinceLastCall=time-lastCallTime,timeSinceLastInvoke=time-lastInvokeTime,timeWaiting=wait-timeSinceLastCall;return maxing?nativeMin2(timeWaiting,maxWait-timeSinceLastInvoke):timeWaiting}function shouldInvoke(time){var timeSinceLastCall=time-lastCallTime,timeSinceLastInvoke=time-lastInvokeTime;return lastCallTime===void 0||timeSinceLastCall>=wait||timeSinceLastCall<0||maxing&&timeSinceLastInvoke>=maxWait}function timerExpired(){var time=now2();if(shouldInvoke(time)){return trailingEdge(time)}timerId=setTimeout(timerExpired,remainingWait(time))}function trailingEdge(time){timerId=void 0;if(trailing&&lastArgs){return invokeFunc(time)}lastArgs=lastThis=void 0;return result}function cancel(){if(timerId!==void 0){clearTimeout(timerId)}lastInvokeTime=0;lastArgs=lastCallTime=lastThis=timerId=void 0}function flush(){return timerId===void 0?result:trailingEdge(now2())}function debounced(){var time=now2(),isInvoking=shouldInvoke(time);lastArgs=arguments;lastThis=this;lastCallTime=time;if(isInvoking){if(timerId===void 0){return leadingEdge(lastCallTime)}if(maxing){clearTimeout(timerId);timerId=setTimeout(timerExpired,wait);return invokeFunc(lastCallTime)}}if(timerId===void 0){timerId=setTimeout(timerExpired,wait)}return result}debounced.cancel=cancel;debounced.flush=flush;return debounced}debounce_1=debounce2;return debounce_1}var debounceExports=requireDebounce();const debounce=getDefaultExportFromCjs(debounceExports);class GasToken extends Token{constructor(name,symbol,blockchain,provider,fundingAddress=null,chainId=1,decimals=18,logoURI="/images/logoBullFav.svg",contractAddress=""){super(contractAddress,name,symbol,decimals,logoURI,`${name} YAKKL native gas token`,chainId,true,false,blockchain,provider);__publicField(this,"priceManager");__publicField(this,"fundingAddress",null);__publicField(this,"fundingPair",null);__publicField(this,"lastPrice",null);__publicField(this,"lastPriceCheck",0);__publicField(this,"lastBalanceCheck",0);this.priceManager=new PriceManager;this.fundingAddress=fundingAddress;if(this.fundingAddress)this.getBalance(this.fundingAddress).then(balance=>{this.balance=balance;this.lastBalanceCheck=Date.now()});this.fundingPair=`${symbol}-USD`}async getContract(){return null}async getBalance(userAddress){if(!userAddress)return 0n;if(this.blockchain){this.balance=await this.blockchain.getBalance(userAddress);this.lastBalanceCheck=Date.now()}else{this.balance=0n}return this.balance}async getMarketPrice(pair=this.fundingPair){try{if(!pair){log$1.error("GasToken - getMarketPrice - pair is invalid (null)");throw new Error("Invalid pair for market price check")}const price=await this.priceManager.getMarketPrice(pair);this.lastPrice=price;this.lastPriceCheck=Date.now();return price}catch(error){log$1.errorStack("GasToken - getMarketPrice",false,error);throw error}}async hasSufficientBalance(userAddress,amount){this.balance=await this.getBalance(userAddress);return this.balance>=amount}async transfer(toAddress,amount){throw new Error("Not implemented")}async getSponsoredGasEstimate(transaction){const gasEstimate=await this.provider.estimateGas(transaction);const isSponsored=await this.checkSponsorshipEligibility(transaction.from);if(isSponsored){return gasEstimate/2n}return gasEstimate}async checkSponsorshipEligibility(userAddress){return true}}function validateObject(data,rules){const validateValue=(value,rule)=>{if(value===void 0||value===null){return!rule.required}let bigIntValue;if(rule.type){switch(rule.type){case"number":if(typeof value!=="number"||isNaN(value))return false;break;case"bigint":case"bignumberish":bigIntValue=safeConvertToBigInt(value);if(bigIntValue===void 0)return false;value=bigIntValue;break;case"string":if(typeof value!=="string")return false;break;case"boolean":if(typeof value!=="boolean")return false;break;case"array":if(!Array.isArray(value))return false;break;case"object":if(typeof value!=="object"||value===null)return false;break}}if(rule.min!==void 0){if(typeof rule.min==="number"&&value<rule.min)return false;if(rule.type==="bigint"||rule.type==="bignumberish"){const minBigInt=safeConvertToBigInt(rule.min);const valueBigInt=safeConvertToBigInt(value);if(minBigInt===void 0||valueBigInt===void 0)return false;if(valueBigInt<minBigInt)return false}}if(rule.max!==void 0){if(typeof rule.max==="number"&&value>rule.max)return false;if(rule.type==="bigint"||rule.type==="bignumberish"){const maxBigInt=safeConvertToBigInt(rule.max);const valueBigInt=safeConvertToBigInt(value);if(maxBigInt===void 0||valueBigInt===void 0)return false;if(valueBigInt>maxBigInt)return false}}if(rule.equals!==void 0&&value!==rule.equals)return false;if(rule.notEquals!==void 0&&value===rule.notEquals)return false;if(rule.oneOf!==void 0&&!rule.oneOf.includes(value))return false;if(rule.notOneOf!==void 0&&rule.notOneOf.includes(value))return false;if(rule.customValidation&&!rule.customValidation(value))return false;return true};for(const[key,rule]of Object.entries(rules)){const value=data[key];if(!validateValue(value,rule)){let errorMessage=`Invalid ${key}: `;if(value===void 0||value===null){errorMessage+=rule.required?"is required":"is missing but not required"}else{const currentRule=rule;if(currentRule.min!==void 0)errorMessage+=`must be at least ${currentRule.min}`;if(currentRule.max!==void 0)errorMessage+=`must be at most ${currentRule.max}`;if(currentRule.equals!==void 0)errorMessage+=`must equal ${currentRule.equals}`;if(currentRule.notEquals!==void 0)errorMessage+=`cannot equal ${currentRule.notEquals}`;if(currentRule.oneOf!==void 0)errorMessage+=`must be one of ${currentRule.oneOf.join(", ")}`;if(currentRule.notOneOf!==void 0)errorMessage+=`cannot be one of ${currentRule.notOneOf.join(", ")}`}return{isValid:false,error:errorMessage}}}return{isValid:true,error:""}}function validateSwapQuote(quote){return validateObject(quote,{amountIn:{required:true,type:"bignumberish",min:0n,customValidation:amount=>{const bigIntAmount=safeConvertToBigInt(amount);return bigIntAmount!==void 0&&bigIntAmount>0n}},amountOut:{required:true,type:"bignumberish",min:0n,customValidation:amount=>{const bigIntAmount=safeConvertToBigInt(amount);return bigIntAmount!==void 0&&bigIntAmount>0n}},tokenIn:{required:true,type:"object",customValidation:token=>!!(token&&token.address&&token.symbol)},tokenOut:{required:true,type:"object",customValidation:token=>!!(token&&token.address&&token.symbol)},fee:{oneOf:[500,3e3,1e4]}})}Swap[FILENAME]="src/lib/components/Swap.svelte";async function switchTokens(_,$swapStateStore,swapStateStore,updateSwapPriceData,handleSellAmountChange,handleBuyAmountChange){($$value=>{var $$array=to_array($$value,2);store_mutate(swapStateStore,untrack($swapStateStore).tokenIn=$$array[0],untrack($swapStateStore));store_mutate(swapStateStore,untrack($swapStateStore).tokenOut=$$array[1],untrack($swapStateStore))})([$swapStateStore().tokenOut,$swapStateStore().tokenIn]);($$value=>{var $$array_1=to_array($$value,2);store_mutate(swapStateStore,untrack($swapStateStore).fromAmount=$$array_1[0],untrack($swapStateStore));store_mutate(swapStateStore,untrack($swapStateStore).toAmount=$$array_1[1],untrack($swapStateStore))})([$swapStateStore().toAmount,$swapStateStore().fromAmount]);updateSwapPriceData({tokenIn:$swapStateStore().tokenIn,tokenOut:$swapStateStore().tokenOut,amountIn:$swapStateStore().toAmount?parseAmount($swapStateStore().toAmount,$swapStateStore().tokenIn.decimals):0n,amountOut:$swapStateStore().fromAmount?parseAmount($swapStateStore().fromAmount,$swapStateStore().tokenOut.decimals):0n});if($swapStateStore().tokenIn&&$swapStateStore().tokenOut){if($swapStateStore().fromAmount)await handleSellAmountChange($swapStateStore().fromAmount);else if($swapStateStore().toAmount)await handleBuyAmountChange($swapStateStore().toAmount)}}function handleConfirmSwap(__1,showWarning,warningValue,showConfirmation){set(showWarning,false);set(warningValue,"");set(showConfirmation,true)}var root_2$1=add_locations(from_html(`<div class="w-full bg-red-50 border border-red-200 rounded-lg p-3"><div class="flex items-center justify-center"><svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-red-500 mr-2" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path></svg> <div class="text-red-500 text-center overflow-x-auto max-w-full"><span class="whitespace-nowrap"> </span></div></div></div>`),Swap[FILENAME],[[783,3,[[784,4,[[785,5,[[791,6]]],[797,5,[[798,6]]]]]]]]);var root_3$1=add_locations(from_html(`<span class="whitespace-nowrap">This swap requires multiple hops to complete.</span>`),Swap[FILENAME],[[808,6]]);var root_4=add_locations(from_html(`<span class="whitespace-nowrap">This swap requires a single hop to complete.</span>`),Swap[FILENAME],[[810,6]]);var root_6=add_locations(from_html(`<div class="w-full bg-blue-400 border border-blue-800 rounded-lg p-3"><div class="flex items-center justify-center"><div class="text-blue-700 text-center overflow-x-auto max-w-full"><span class="whitespace-nowrap">ETH-WETH swap is a simple wrap so no additional information needed.</span></div></div></div>`),Swap[FILENAME],[[834,3,[[835,4,[[836,5,[[837,6]]]]]]]]);var root_1$1=add_locations(from_html(`<div class="p-6 space-y-4"><span>Sell</span> <!>  <button class="mx-auto block bg-gray-200 p-2 rounded-full transform transition-transform hover:rotate-180"><svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-600" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4"></path></svg></button> <span>Buy</span> <!> <!> <div class="w-full bg-blue-400 border border-blue-800 rounded-lg p-3"><div class="flex items-center justify-center"><div class="text-blue-700 text-center overflow-x-auto max-w-full"><!></div></div></div> <!> <!> <button class="w-full px-4 py-2 text-sm font-medium text-gray-700 bg-gray-200 rounded-lg hover:bg-gray-300 transition-colors flex items-center justify-center"><svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path></svg> Reset Swap</button> <button class="w-full px-4 py-3 text-lg font-medium text-white bg-blue-600 rounded-lg shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"><!></button> <button class="w-full px-4 py-3 text-lg font-medium text-white bg-red-500 rounded-lg shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-400">Cancel</button></div>`),Swap[FILENAME],[[734,1,[[736,2],[750,2,[[754,3,[[761,4]]]]],[771,2],[804,2,[[805,3,[[806,4]]]]],[849,2,[[853,3,[[860,4]]]]],[871,2],[890,2]]]]);var root$1=add_locations(from_html(`<!> <!> <!> <!> <!>`,1),Swap[FILENAME],[]);function Swap($$anchor,$$props){check_target(new.target);push($$props,true,Swap);var $$ownership_validator=create_ownership_validator($$props);const[$$stores,$$cleanup]=setup_stores();const $swapStateStore=()=>(validate_store(swapStateStore,"swapStateStore"),store_get(swapStateStore,"$swapStateStore",$$stores));const $swapPriceDataStore=()=>(validate_store(swapPriceDataStore,"swapPriceDataStore"),store_get(swapPriceDataStore,"$swapPriceDataStore",$$stores));const $uiStateStore=()=>(validate_store(uiStateStore,"uiStateStore"),store_get(uiStateStore,"$uiStateStore",$$stores));const $insufficientBalanceStore=()=>(validate_store(insufficientBalanceStore,"insufficientBalanceStore"),store_get(insufficientBalanceStore,"$insufficientBalanceStore",$$stores));let show=prop($$props,"show",15,false),className=prop($$props,"className",3,"text-gray-600 z-[699]"),onSwap=prop($$props,"onSwap",3,()=>{});const SUPPORTED_STABLECOINS2=["USDC","USDT","DAI","BUSD"];let gasToken=tag(state(void 0),"gasToken");let initialToken={chainId:1,address:"",name:"",symbol:"",decimals:0,balance:0n,logoURI:"",isNative:false,isStablecoin:false};const initialSwapPriceData={provider:"Uniswap V3",lastUpdated:new Date,chainId:1,tokenIn:initialToken,tokenOut:initialToken,quoteAmount:0n,fundingAddress:"",feeAmount:0n,amountAfterFee:0n,amountIn:0n,amountOut:0n,exchangeRate:0n,marketPriceIn:0,marketPriceOut:0,marketPriceGas:0,priceImpactRatio:0,path:[],fee:0,feeBasisPoints:YAKKL_FEE_BASIS_POINTS,feeAmountPrice:0,feeAmountInUSD:"",gasEstimate:0n,gasEstimateInUSD:"",tokenOutPriceInUSD:"",multiHop:false,slippageTolerance:.5,deadline:10,error:null,isLoading:false};const swapPriceDataStore=writable(initialSwapPriceData);const insufficientBalanceStore=writable(false);let swapStateStore=writable({tokenIn:initialToken,tokenOut:initialToken,fromAmount:"",toAmount:"",fromBalance:"0",error:"",deadline:10,slippageTolerance:.5,poolFee:3e3,multiHop:false});let uiStateStore=writable({resetValues:false,isLoading:false,isSwapping:false});let lastModifiedPanel=tag(state("sell"),"lastModifiedPanel");let swapManagerName="";let isEthWethSwap=tag(state(false),"isEthWethSwap");let showVerify=tag(state(false),"showVerify");let showError=tag(state(false),"showError");let errorValue=tag(state(""),"errorValue");let showWarning=tag(state(false),"showWarning");let warningValue=tag(state(""),"warningValue");let showConfirmation=tag(state(false),"showConfirmation");let pincodeVerified=false;onMount(async()=>{try{reset$1();const yakklMiscStore=getMiscStore();if(!yakklMiscStore){log.info("User is not logged in yet, so no swap is possible.");return}set(gasToken,new GasToken("YAKKL GasToken","ETH",$$props.blockchain,$$props.provider,$$props.fundingAddress),true);if(get(gasToken)){const price=await get(gasToken).getMarketPrice();updateSwapPriceData({marketPriceGas:price.price})}getTimerManager().addTimer("swap_fetchPrices",fetchPrices,TIMER_SWAP_FETCH_PRICES_TIME);getTimerManager().startTimer("swap_fetchPrices")}catch(error){log.error("Error initializing swap:",false,error);store_mutate(swapStateStore,untrack($swapStateStore).error="Failed to initialize swap. Please try again.",untrack($swapStateStore))}});onDestroy(()=>{const yakklMiscStore=getMiscStore();if(yakklMiscStore){getTimerManager().stopTimer("swap_fetchPrices");debouncedGetQuote.cancel();debouncedCheckBalance.cancel();debouncedGetMarketPrice.cancel();reset$1()}});const quoteTrigger=derived([swapStateStore],([$swapStateStore2])=>{const{deadline:deadline,slippageTolerance:slippageTolerance,poolFee:poolFee}=$swapStateStore2;return{deadline:deadline,slippageTolerance:slippageTolerance,poolFee:poolFee}});user_effect(()=>{if(quoteTrigger){debouncedGetQuote()}});user_effect(()=>{store_mutate(swapStateStore,untrack($swapStateStore).multiHop=$swapPriceDataStore().multiHop,untrack($swapStateStore))});user_effect(()=>{const{tokenIn:tokenIn,tokenOut:tokenOut}=$swapPriceDataStore();if(strict_equals(tokenIn.symbol,"ETH")&&strict_equals(tokenOut.symbol,"WETH")||strict_equals(tokenIn.symbol,"WETH")&&strict_equals(tokenOut.symbol,"ETH")||strict_equals(tokenIn.symbol,"ETH")&&strict_equals(tokenOut.symbol,"ETH")||strict_equals(tokenIn.symbol,"WETH")&&strict_equals(tokenOut.symbol,"WETH")){set(isEthWethSwap,true)}else{set(isEthWethSwap,false)}});user_effect(()=>{(async()=>{const{tokenIn:tokenIn,fromAmount:fromAmount}=$swapStateStore();if(tokenIn&&fromAmount){await debouncedCheckBalance(tokenIn,fromAmount,$$props.fundingAddress);if(get(gasToken)&&strict_equals($swapPriceDataStore().marketPriceGas,0)){await debouncedGetGasTokenPrice()}if(tokenIn.symbol&&$$props.swapManager&&strict_equals($swapPriceDataStore().marketPriceIn,0)){await debouncedGetMarketPrice(tokenIn)}}})()});user_effect(()=>{(async()=>{if($swapStateStore().tokenOut&&$swapStateStore().toAmount){if($swapStateStore().tokenOut.symbol&&strict_equals($swapPriceDataStore().marketPriceOut,0)){await debouncedGetMarketPrice($swapStateStore().tokenOut)}}})()});const debouncedGetQuote=debounce(async()=>{await getQuote()},300);const debouncedCheckBalance=debounce(checkBalance,300);const debouncedGetGasTokenPrice=debounce(async()=>{const price=await get(gasToken).getMarketPrice();if(strict_equals($swapPriceDataStore().marketPriceGas,0)){updateSwapPriceData({marketPriceGas:price.price})}},500);const debouncedGetMarketPrice=debounce(async token=>{const price=await $$props.swapManager.getMarketPrice(`${token.symbol}-USD`);if(price.price>0){updateSwapPriceData({marketPriceIn:price.price})}},500);async function fetchPrices(){if(get(gasToken)){try{const price=await get(gasToken).getMarketPrice();updateSwapPriceData({marketPriceGas:price.price})}catch(error){log.error("Error fetching gas price:",false,error)}}if($swapStateStore().tokenIn&&$swapStateStore().tokenIn.symbol&&$$props.swapManager){try{const price=await $$props.swapManager.getMarketPrice(`${$swapStateStore().tokenIn.symbol}-USD`);updateSwapPriceData({marketPriceIn:price.price})}catch(error){log.error("Error fetching market price:",false,error)}}if($swapStateStore().tokenOut&&$swapStateStore().tokenOut.symbol&&$$props.swapManager){try{const price=await $$props.swapManager.getMarketPrice(`${$swapStateStore().tokenOut.symbol}-USD`);updateSwapPriceData({marketPriceOut:price.price})}catch(error){log.error("Error fetching market price:",false,error)}}}async function handleSellAmountChange(amount){store_mutate(swapStateStore,untrack($swapStateStore).error="",untrack($swapStateStore));store_mutate(swapStateStore,untrack($swapStateStore).fromAmount=amount,untrack($swapStateStore));set(lastModifiedPanel,"sell");if(strict_equals(amount,".",false)&&isNaN(parseFloat(amount))){log.info("Swap - Invalid sell amount:",false,amount);store_mutate(swapStateStore,untrack($swapStateStore).fromAmount="",untrack($swapStateStore));updateSwapPriceData({amountIn:0n,amountOut:0n});return}try{const parsedAmount=parseAmount(amount,$swapStateStore().tokenIn.decimals);updateSwapPriceData({amountIn:parsedAmount});if($swapStateStore().tokenIn&&$swapStateStore().tokenOut){await getQuote(true)}}catch(error){log.error("Error handling sell amount change:",false,error);store_mutate(swapStateStore,untrack($swapStateStore).error="Failed to process sell amount",untrack($swapStateStore))}}async function handleBuyAmountChange(amount){store_mutate(swapStateStore,untrack($swapStateStore).error="",untrack($swapStateStore));store_mutate(swapStateStore,untrack($swapStateStore).toAmount=amount,untrack($swapStateStore));set(lastModifiedPanel,"buy");if(strict_equals(amount,".",false)&&isNaN(parseFloat(amount))){store_mutate(swapStateStore,untrack($swapStateStore).toAmount="",untrack($swapStateStore));updateSwapPriceData({amountOut:0n});return}try{const parsedAmount=parseAmount(amount,$swapStateStore().tokenOut.decimals);updateSwapPriceData({amountOut:parsedAmount});if($swapStateStore().tokenIn&&$swapStateStore().tokenOut)await getQuote(false)}catch(error){log.error("Error handling buy amount change:",false,error);store_mutate(swapStateStore,untrack($swapStateStore).error="Failed to process buy amount",untrack($swapStateStore))}}async function handleTokenSelect(token,type){store_mutate(swapStateStore,untrack($swapStateStore).error="",untrack($swapStateStore));const otherToken=strict_equals(type,"sell")?$swapStateStore().tokenOut:$swapStateStore().tokenIn;if(otherToken.symbol&&areTokensEqual(token,otherToken)){store_mutate(swapStateStore,untrack($swapStateStore).error=`Cannot swap ${token.symbol} for itself`,untrack($swapStateStore));return}if(token.isStablecoin||SUPPORTED_STABLECOINS2.includes(token.symbol)){store_mutate(swapStateStore,untrack($swapStateStore).poolFee=500,untrack($swapStateStore));token.isStablecoin=true;updateSwapPriceData({fee:$swapStateStore().poolFee})}if(!token.balance||toBigInt(token.balance)<=0n){token.balance=await getTokenBalance(token,$$props.fundingAddress,$$props.provider,$$props.tokenService)}const formattedBalance=formatUnits(toBigInt(token.balance),token.decimals);if(strict_equals(type,"sell")){store_mutate(swapStateStore,untrack($swapStateStore).tokenIn=token,untrack($swapStateStore));updateSwapPriceData({tokenIn:token});store_mutate(swapStateStore,untrack($swapStateStore).fromBalance=formattedBalance,untrack($swapStateStore))}else{store_mutate(swapStateStore,untrack($swapStateStore).tokenOut=token,untrack($swapStateStore));updateSwapPriceData({tokenOut:token})}if($swapStateStore().tokenIn&&$swapStateStore().tokenOut){if(strict_equals(get(lastModifiedPanel),"sell")&&$swapStateStore().fromAmount){await handleSellAmountChange($swapStateStore().fromAmount)}else if(strict_equals(get(lastModifiedPanel),"buy")&&$swapStateStore().toAmount){await handleBuyAmountChange($swapStateStore().toAmount)}}}function updateSwapPriceData(newData){swapPriceDataStore.update(currentData=>({...currentData,...newData}))}async function checkBalance(token,amount,fundingAddress2){try{if(!token||!amount||!fundingAddress2){insufficientBalanceStore.set(false);return false}const balance=await getTokenBalance(token,fundingAddress2,$$props.provider,$$props.tokenService);const formattedBalance=formatUnits(balance,token.decimals);if(strict_equals(formattedBalance,$swapStateStore().fromBalance,false)){store_mutate(swapStateStore,untrack($swapStateStore).fromBalance=formattedBalance,untrack($swapStateStore));token.balance=balance}const requiredAmount=parseAmount(amount,token.decimals);const isInsufficient=balance<requiredAmount;insufficientBalanceStore.set(isInsufficient);return isInsufficient}catch(error){insufficientBalanceStore.set(false);log.error("Error checking balance:",false,error);return false}}async function validateBalance(){try{if(!$swapStateStore().tokenIn||!$swapStateStore().fromAmount||!$$props.fundingAddress)return false;const balance=await getTokenBalance($swapStateStore().tokenIn,$$props.fundingAddress,$$props.provider,$$props.tokenService);const swapAmount=parseUnits($swapStateStore().fromAmount,$swapStateStore().tokenIn.decimals);if($swapStateStore().tokenIn.isNative){const gasEstimate=$swapPriceDataStore().gasEstimate||0n;const totalRequiredAmount=swapAmount+(BigNumber.toBigInt(gasEstimate)||0n);if(balance<totalRequiredAmount){store_mutate(swapStateStore,untrack($swapStateStore).error=`Insufficient ${$swapStateStore().tokenIn.symbol} balance. Need ${formatUnits(totalRequiredAmount,$swapStateStore().tokenIn.decimals)} ${$swapStateStore().tokenIn.symbol}, but have ${formatUnits(balance,$swapStateStore().tokenIn.decimals)} ${$swapStateStore().tokenIn.symbol}`,untrack($swapStateStore));return false}}else{const totalRequiredAmount=swapAmount;if(balance<totalRequiredAmount){store_mutate(swapStateStore,untrack($swapStateStore).error=`Insufficient ${$swapStateStore().tokenIn.symbol} balance. Need ${formatUnits(totalRequiredAmount,$swapStateStore().tokenIn.decimals)} ${$swapStateStore().tokenIn.symbol}, but have ${formatUnits(balance,$swapStateStore().tokenIn.decimals)} ${$swapStateStore().tokenIn.symbol}`,untrack($swapStateStore));return false}}return true}catch(error){log.error("Error validating balance:",false,error);store_mutate(swapStateStore,untrack($swapStateStore).error="Failed to validate balance. Please try again.",untrack($swapStateStore));return false}}async function getQuote(isExactIn=true){if(!$swapStateStore().tokenIn.symbol||!$swapStateStore().tokenOut.symbol||!$swapStateStore().fromAmount&&!$swapStateStore().toAmount)return;if(areTokensEqual($swapStateStore().tokenIn,$swapStateStore().tokenOut)){store_mutate(swapStateStore,untrack($swapStateStore).error=`Cannot swap ${$swapStateStore().tokenIn.symbol} for itself`,untrack($swapStateStore));return}if(get(isEthWethSwap)){updateSwapPriceData({feeAmount:0n});return}try{store_mutate(uiStateStore,untrack($uiStateStore).isLoading=true,untrack($uiStateStore));const amount=isExactIn?parseAmount($swapStateStore().fromAmount,$swapStateStore().tokenIn.decimals):parseAmount($swapStateStore().toAmount,$swapStateStore().tokenOut.decimals);store_mutate(swapStateStore,untrack($swapStateStore).slippageTolerance=$swapPriceDataStore().slippageTolerance||.5,untrack($swapStateStore));store_mutate(swapStateStore,untrack($swapStateStore).deadline=$swapPriceDataStore().deadline||10,untrack($swapStateStore));store_mutate(swapStateStore,untrack($swapStateStore).poolFee=$swapPriceDataStore().fee||3e3,untrack($swapStateStore));const quote=await $$props.swapManager.getQuote(Token.fromSwapToken($swapStateStore().tokenIn,$$props.blockchain,$$props.provider),Token.fromSwapToken($swapStateStore().tokenOut,$$props.blockchain,$$props.provider),amount,$$props.fundingAddress,isExactIn,$swapStateStore().poolFee);if(!quote||quote.error){store_mutate(swapStateStore,untrack($swapStateStore).error="No valid pool found for this token pair. Try a different combination.",untrack($swapStateStore));return}if(quote){quote.slippageTolerance=$swapStateStore().slippageTolerance;quote.deadline=$swapStateStore().deadline}if(isExactIn){const amountOut=quote.amountOut??0n;store_mutate(swapStateStore,untrack($swapStateStore).toAmount=formatUnits(toBigInt(amountOut),$swapStateStore().tokenOut.decimals),untrack($swapStateStore))}else{const amountIn=quote.amountIn??0n;store_mutate(swapStateStore,untrack($swapStateStore).fromAmount=formatUnits(toBigInt(amountIn),$swapStateStore().tokenIn.decimals),untrack($swapStateStore))}updateSwapPriceData(quote)}catch(error){log.error("Quote Error:",false,error);store_mutate(swapStateStore,untrack($swapStateStore).error=`Failed to get quote: ${error}`,untrack($swapStateStore));store_mutate(swapStateStore,untrack($swapStateStore).toAmount="",untrack($swapStateStore))}finally{store_mutate(uiStateStore,untrack($uiStateStore).isLoading=false,untrack($uiStateStore))}}async function validateQuote(){let returnCode=false;if(!$swapStateStore().tokenIn||!$swapStateStore().tokenOut||!$swapStateStore().fromAmount||!$swapStateStore().toAmount||!$$props.fundingAddress||!$$props.swapManager){store_mutate(swapStateStore,untrack($swapStateStore).error="Invalid swap parameters",untrack($swapStateStore));return returnCode}if(areTokensEqual($swapStateStore().tokenIn,$swapStateStore().tokenOut)){store_mutate(swapStateStore,untrack($swapStateStore).error=`Cannot swap ${$swapStateStore().tokenIn.symbol} for itself`,untrack($swapStateStore));return returnCode}if(!$swapPriceDataStore()){store_mutate(swapStateStore,untrack($swapStateStore).error="Failed to get quote",untrack($swapStateStore));return returnCode}if($swapPriceDataStore().error){store_mutate(swapStateStore,untrack($swapStateStore).error=$swapPriceDataStore().error,untrack($swapStateStore));return returnCode}if($insufficientBalanceStore()){store_mutate(swapStateStore,untrack($swapStateStore).error=`Insufficient balance for the given swap. You need ETH for gas fees and enough ${$swapStateStore().tokenIn.symbol} to sell/swap.`,untrack($swapStateStore));return returnCode}if(!(await validateBalance())){store_mutate(swapStateStore,untrack($swapStateStore).error="Insufficient balance for the given swap",untrack($swapStateStore));return}const results=validateSwapQuote($swapPriceDataStore());if(results.error){store_mutate(swapStateStore,untrack($swapStateStore).error=results.error,untrack($swapStateStore));log.error("Validation error:",false,$swapStateStore().error);return returnCode}return true}function areTokensEqual(token1,token2){const isEthVariant=symbol=>["ETH","WETH"].includes(symbol);if(token1.address&&token2.address){return strict_equals(token1.address.toLowerCase(),token2.address.toLowerCase())}else if(token1.symbol&&token2.symbol){if(isEthVariant(token1.symbol)&&isEthVariant(token2.symbol)){return strict_equals(token1.symbol,token2.symbol)}return strict_equals(token1.symbol,token2.symbol)}return false}async function swapTokens(){try{if(!pincodeVerified){set(showVerify,true);return}if(get(isEthWethSwap)){updateSwapPriceData({feeAmount:0n});if(strict_equals($swapStateStore().tokenIn.symbol,"ETH")&&strict_equals($swapStateStore().tokenOut.symbol,"WETH")){const receipt=await $$props.swapManager.wrapETH(parseUnits($swapStateStore().fromAmount,$swapStateStore().tokenIn.decimals),$$props.fundingAddress)}else if(strict_equals($swapStateStore().tokenIn.symbol,"WETH")&&strict_equals($swapStateStore().tokenOut.symbol,"ETH")){const receipt=await $$props.swapManager.unwrapWETH(parseUnits($swapStateStore().fromAmount,$swapStateStore().tokenIn.decimals),$$props.fundingAddress)}return}store_mutate(uiStateStore,untrack($uiStateStore).isSwapping=true,untrack($uiStateStore));store_mutate(swapStateStore,untrack($swapStateStore).error="",untrack($swapStateStore));if(!(await validateQuote())){store_mutate(uiStateStore,untrack($uiStateStore).isSwapping=false,untrack($uiStateStore));return}const tokenInInstance=Token.fromSwapToken($swapPriceDataStore().tokenIn,$$props.blockchain,$$props.provider);const tokenOutInstance=Token.fromSwapToken($swapPriceDataStore().tokenOut,$$props.blockchain,$$props.provider);if(!$swapPriceDataStore().tokenIn.isNative){const allowance=await $$props.swapManager.checkAllowance(tokenInInstance,$$props.fundingAddress);const requiredAmount=parseUnits($swapStateStore().fromAmount,tokenInInstance.decimals);if(allowance<requiredAmount){const receipt=await $$props.swapManager.approveToken(tokenInInstance,$swapStateStore().fromAmount)}}const{maxFeePerGas:maxFeePerGas,maxPriorityFeePerGas:maxPriorityFeePerGas}=await getCurrentGasPrices();const params={tokenIn:tokenInInstance,tokenOut:tokenOutInstance,amount:parseUnits($swapStateStore().fromAmount,$swapPriceDataStore().tokenIn.decimals),fee:$swapPriceDataStore().fee||$swapStateStore().poolFee,slippage:$swapPriceDataStore().slippageTolerance||$swapStateStore().slippageTolerance,deadline:$swapPriceDataStore().deadline||$swapStateStore().deadline,recipient:$swapPriceDataStore().fundingAddress,feeRecipient:"aifees.eth",feeAmount:$swapPriceDataStore().feeAmount||0n,gasLimit:toBigInt($swapPriceDataStore().gasEstimate)||ETH_BASE_SWAP_GAS_UNITS,maxFeePerGas:maxFeePerGas,maxPriorityFeePerGas:maxPriorityFeePerGas};const[receiptTrans,receiptFee]=await $$props.swapManager.executeFullSwap(params);onSwap()($$props.fundingAddress,$swapStateStore().tokenIn,$swapStateStore().tokenOut,parseUnits($swapStateStore().fromAmount,$swapStateStore().tokenIn.decimals),parseUnits($swapStateStore().toAmount,$swapStateStore().tokenOut.decimals));store_mutate(swapStateStore,untrack($swapStateStore).error="",untrack($swapStateStore));await sendNotificationMessage("Swap completed successfully","Your swap has been completed successfully.");reset$1();show(false)}catch(err){store_mutate(uiStateStore,untrack($uiStateStore).isSwapping=false,untrack($uiStateStore));log.error("Error executing swap:",err);store_mutate(swapStateStore,untrack($swapStateStore).error=`Failed to execute swap: ${err.message}`,untrack($swapStateStore))}}async function getCurrentGasPrices(){try{const feeData=await $$props.provider.getFeeData();return{maxFeePerGas:toBigInt(feeData.maxFeePerGas),maxPriorityFeePerGas:toBigInt(feeData.maxPriorityFeePerGas)}}catch(error){return{maxFeePerGas:parseUnits("30","gwei"),maxPriorityFeePerGas:parseUnits("1","gwei")}}}function reset$1(){set(showConfirmation,false);set(showError,false);set(errorValue,"");set(showWarning,false);set(warningValue,"");pincodeVerified=false;set(showVerify,false);store_mutate(swapStateStore,untrack($swapStateStore).tokenIn=initialToken,untrack($swapStateStore));store_mutate(swapStateStore,untrack($swapStateStore).tokenOut=initialToken,untrack($swapStateStore));store_mutate(swapStateStore,untrack($swapStateStore).fromAmount="",untrack($swapStateStore));store_mutate(swapStateStore,untrack($swapStateStore).toAmount="",untrack($swapStateStore));store_mutate(swapStateStore,untrack($swapStateStore).fromBalance="0",untrack($swapStateStore));store_mutate(swapStateStore,untrack($swapStateStore).poolFee=3e3,untrack($swapStateStore));store_mutate(swapStateStore,untrack($swapStateStore).error="",untrack($swapStateStore));set(lastModifiedPanel,"sell");insufficientBalanceStore.set(false);swapPriceDataStore.set(initialSwapPriceData);store_mutate(uiStateStore,untrack($uiStateStore).resetValues=true,untrack($uiStateStore))}function handleCancelSwap(){set(showConfirmation,false)}function handleConfirm(){set(showConfirmation,false);set(showWarning,false);set(warningValue,"");handleSwap()}function handleSwap(){pincodeVerified=false;set(showWarning,false);set(warningValue,"");set(showVerify,true)}function handleClose(){set(showConfirmation,false);set(showError,false);set(errorValue,"");set(showWarning,false);set(warningValue,"");pincodeVerified=false;set(showVerify,false)}function handleReject(rejection="You have rejected or Pincode was not validated. No swap transaction was sent."){try{set(showConfirmation,false);set(showVerify,false);set(showError,false);pincodeVerified=false;set(showWarning,true);set(warningValue,rejection,true)}catch(e){log.error(e)}}async function handleVerified(pincode){try{let profile=await verifyWithPin(pincode,pincodeVerified);if(strict_equals(profile,null)){throw"Profile was not found."}pincodeVerified=true;set(showVerify,false);await swapTokens()}catch(e){log.error(e)}}async function verifyWithPin(pincode,pincodeVerified2){try{const yakklMiscStore=getMiscStore();let profile=await getProfile();if(strict_equals(profile,null)){pincodeVerified2=false;throw"Profile was not found."}let profileEncrypted=null;if(isEncryptedData(profile.data)){profileEncrypted=deepCopy(profile);await decryptData(profile==null?void 0:profile.data,yakklMiscStore).then(result=>{profile.data=result})}if(strict_equals(profile.data.pincode,pincode,false)&&strict_equals(pincodeVerified2,false)){pincodeVerified2=false;throw"PINCODE was not verified."}if(strict_equals(pincode,profile.data.pincode)){profile=null;return profileEncrypted}else{pincodeVerified2=false;throw"PINCODE did not match."}}catch(e){log.error(e);pincodeVerified2=false;return null}}function handleCloseModal(){reset$1();show(false)}var fragment=root$1();var node=first_child(fragment);Confirmation(node,{className:"z-[990]",onConfirm:handleConfirm,onReject:handleCancelSwap,get show(){return get(showConfirmation)},set show($$value){set(showConfirmation,$$value,true)}});var node_1=sibling(node,2);PincodeVerify(node_1,{className:"text-gray-600 z-[990]",onRejected:handleReject,onVerified:handleVerified,get show(){return get(showVerify)},set show($$value){set(showVerify,$$value,true)}});var node_2=sibling(node_1,2);ErrorNoAction(node_2,{className:"z-[999]",get value(){return get(errorValue)},handle:handleClose,get show(){return get(showError)},set show($$value){set(showError,$$value,true)}});var node_3=sibling(node_2,2);Warning(node_3,{className:"z-[999]",get value(){return get(warningValue)},handle:handleClose,get show(){return get(showWarning)},set show($$value){set(showWarning,$$value,true)}});var node_4=sibling(node_3,2);{$$ownership_validator.binding("show",Modal,show);Modal(node_4,{title:"Swap",get className(){return className()},onClose:handleCloseModal,get show(){return show()},set show($$value){show($$value)},children:wrap_snippet(Swap,($$anchor2,$$slotProps)=>{var div=root_1$1();var node_5=sibling(child(div),2);SellTokenPanel(node_5,{get swapPriceDataStore(){return swapPriceDataStore},disabled:false,get insufficientBalance(){return $insufficientBalanceStore()},get balance(){return $swapStateStore().fromBalance},onTokenSelect:token=>handleTokenSelect(token,"sell"),onAmountChange:handleSellAmountChange,get resetValues(){return $uiStateStore().resetValues},set resetValues($$value){store_mutate(uiStateStore,untrack($uiStateStore).resetValues=$$value,untrack($uiStateStore))},get lastModifiedPanel(){return get(lastModifiedPanel)},set lastModifiedPanel($$value){set(lastModifiedPanel,$$value,true)}});var button=sibling(node_5,2);button.__click=[switchTokens,$swapStateStore,swapStateStore,updateSwapPriceData,handleSellAmountChange,handleBuyAmountChange];var node_6=sibling(button,4);BuyTokenPanel(node_6,{get swapPriceDataStore(){return swapPriceDataStore},disabled:false,onTokenSelect:token=>handleTokenSelect(token,"buy"),onAmountChange:handleBuyAmountChange,get resetValues(){return $uiStateStore().resetValues},set resetValues($$value){store_mutate(uiStateStore,untrack($uiStateStore).resetValues=$$value,untrack($uiStateStore))},get lastModifiedPanel(){return get(lastModifiedPanel)},set lastModifiedPanel($$value){set(lastModifiedPanel,$$value,true)}});var node_7=sibling(node_6,2);{var consequent=$$anchor3=>{var div_1=root_2$1();var div_2=child(div_1);var div_3=sibling(child(div_2),2);var span=child(div_3);var text2=child(span,true);reset(span);reset(div_3);reset(div_2);reset(div_1);template_effect(()=>set_text(text2,$swapStateStore().error));append($$anchor3,div_1)};if_block(node_7,$$render=>{if($swapStateStore().error&&!get(isEthWethSwap))$$render(consequent)})}var div_4=sibling(node_7,2);var div_5=child(div_4);var div_6=child(div_5);var node_8=child(div_6);{var consequent_1=$$anchor3=>{var span_1=root_3$1();append($$anchor3,span_1)};var alternate=$$anchor3=>{var span_2=root_4();append($$anchor3,span_2)};if_block(node_8,$$render=>{if($swapStateStore().multiHop)$$render(consequent_1);else $$render(alternate,false)})}reset(div_6);reset(div_5);reset(div_4);var node_9=sibling(div_4,2);{var consequent_2=$$anchor3=>{SwapSettings($$anchor3,{get swapPriceDataStore(){return swapPriceDataStore},onSlippageChange:value=>store_mutate(swapStateStore,untrack($swapStateStore).slippageTolerance=value,untrack($swapStateStore)),onDeadlineChange:value=>store_mutate(swapStateStore,untrack($swapStateStore).deadline=value,untrack($swapStateStore)),onPoolFeeChange:value=>{var _a,_b;store_mutate(swapStateStore,untrack($swapStateStore).poolFee=value,untrack($swapStateStore));if((((_a=$swapStateStore().tokenIn)==null?void 0:_a.isStablecoin)||((_b=$swapStateStore().tokenOut)==null?void 0:_b.isStablecoin))&&swapManagerName.includes("uniswap")){store_mutate(swapStateStore,untrack($swapStateStore).poolFee=500,untrack($swapStateStore))}updateSwapPriceData({fee:$swapStateStore().poolFee})}})};var alternate_1=$$anchor3=>{var div_7=root_6();append($$anchor3,div_7)};if_block(node_9,$$render=>{if(strict_equals(get(isEthWethSwap),false))$$render(consequent_2);else $$render(alternate_1,false)})}var node_10=sibling(node_9,2);SwapSummary(node_10,{get swapPriceDataStore(){return swapPriceDataStore},get disabled(){return get(isEthWethSwap)}});var button_1=sibling(node_10,2);button_1.__click=reset$1;var button_2=sibling(button_1,2);button_2.__click=[handleConfirmSwap,showWarning,warningValue,showConfirmation];var node_11=child(button_2);{var consequent_3=$$anchor3=>{var text_1=text();template_effect(()=>set_text(text_1,$uiStateStore().isLoading?"Loading...":$uiStateStore().isSwapping?"Swapping...":"Swap"));append($$anchor3,text_1)};var alternate_2=$$anchor3=>{var text_2=text();template_effect(()=>set_text(text_2,$uiStateStore().isLoading?"Loading...":strict_equals($swapStateStore().tokenIn.symbol,"WETH")?"Unwrap":"Wrap"));append($$anchor3,text_2)};if_block(node_11,$$render=>{if(!get(isEthWethSwap))$$render(consequent_3);else $$render(alternate_2,false)})}reset(button_2);var button_3=sibling(button_2,2);button_3.__click=handleCloseModal;reset(div);template_effect(()=>button_2.disabled=!$swapStateStore().tokenIn||!$swapStateStore().tokenOut||!$swapStateStore().fromAmount||!$swapStateStore().toAmount);append($$anchor2,div)}),$$slots:{default:true}})}append($$anchor,fragment);var $$pop=pop({...legacy_api()});$$cleanup();return $$pop}delegate(["click"]);QR[FILENAME]="src/lib/components/QR.svelte";var root=add_locations(from_html(`<div class="flex mx-auto justify-center w-full h-full svelte-x2f3mp"></div>`),QR[FILENAME],[[21,0]]);function QR($$anchor,$$props){check_target(new.target);push($$props,true,QR);const width=220;const height=220;let node=tag(state(void 0),"node");onMount(()=>{const options={text:$$props.qrText,width:220,height:220,quietZone:20,logo:"/images/logoBullFav48x48.png",logoBackgroundTransparent:true};new QRCode(get(node),options)});var div=root();bind_this(div,$$value=>set(node,$$value),()=>get(node));append($$anchor,div);return pop({get width(){return width},get height(){return height},...legacy_api()})}Receive[FILENAME]="src/lib/components/Receive.svelte";var root_2=add_locations(from_html(`<div class="bg-gradient-to-br from-purple-50 to-indigo-50 rounded-xl p-6 mb-6 text-center"><div class="mb-6"><!></div> <h3 class="text-lg font-semibold text-gray-800 mb-2">Your Wallet Address</h3> <p class="text-sm text-gray-600 mb-4">Share this address to receive payments</p></div> <div class="bg-white rounded-lg border border-gray-200 shadow-sm"><div class="flex items-center justify-between p-4"><div class="flex-1 min-w-0 mr-3"><div class="text-xs font-medium text-gray-500 uppercase tracking-wide mb-1">Ethereum Address</div> <p class="text-sm font-mono text-gray-900 truncate" id="eth-address"> </p></div> <div class="flex-shrink-0"><!></div></div></div> <div class="mt-4 p-4 bg-blue-50 rounded-lg border border-blue-200"><div class="flex items-center"><div class="flex-shrink-0"><svg class="w-5 h-5 text-blue-600" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path></svg></div> <div class="ml-3"><p class="text-sm text-blue-800"><span class="font-medium">Scan the QR code</span> with your mobile wallet or <span class="font-medium">copy the address</span> to receive payments</p></div></div></div>`,1),Receive[FILENAME],[[20,3,[[21,4],[24,4],[25,4]]],[29,3,[[30,4,[[31,5,[[32,6],[35,6]]],[39,5]]]]],[46,3,[[47,4,[[48,5,[[49,6,[[50,7]]]]],[53,5,[[54,6,[[55,7],[56,7]]]]]]]]]]);var root_3=add_locations(from_html(`<div class="text-center py-12"><div class="w-16 h-16 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center"><svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg></div> <h3 class="text-lg font-semibold text-gray-700 mb-2">No Portfolio Accounts</h3> <p class="text-gray-500">Create at least one Portfolio account to receive payments</p></div>`),Receive[FILENAME],[[63,3,[[64,4,[[65,5,[[66,6]]]]],[69,4],[70,4]]]]);var root_1=add_locations(from_html(`<div class="p-6"><!></div>`),Receive[FILENAME],[[17,1]]);function Receive($$anchor,$$props){check_target(new.target);push($$props,true,Receive);var $$ownership_validator=create_ownership_validator($$props);const[$$stores,$$cleanup]=setup_stores();const $yakklCurrentlySelectedStore=()=>(validate_store(yakklCurrentlySelectedStore,"yakklCurrentlySelectedStore"),store_get(yakklCurrentlySelectedStore,"$yakklCurrentlySelectedStore",$$stores));let show=prop($$props,"show",15,false),address=prop($$props,"address",15,""),title=prop($$props,"title",3,"Receive");onMount(()=>{if($yakklCurrentlySelectedStore()&&strict_equals($yakklCurrentlySelectedStore().shortcuts.address,YAKKL_ZERO_ADDRESS,false)){address($yakklCurrentlySelectedStore().shortcuts.address)}});{$$ownership_validator.binding("show",Modal,show);Modal($$anchor,{get title(){return title()},get show(){return show()},set show($$value){show($$value)},children:wrap_snippet(Receive,($$anchor2,$$slotProps)=>{var div=root_1();var node=child(div);{var consequent=$$anchor3=>{var fragment_1=root_2();var div_1=first_child(fragment_1);var div_2=child(div_1);var node_1=child(div_2);QR(node_1,{get qrText(){return address()}});reset(div_2);next(4);reset(div_1);var div_3=sibling(div_1,2);var div_4=child(div_3);var div_5=child(div_4);var p=sibling(child(div_5),2);var text2=child(p,true);reset(p);reset(div_5);var div_6=sibling(div_5,2);var node_2=child(div_6);const expression=user_derived(()=>({value:address()}));Copy(node_2,{get target(){return get(expression)},className:"p-2 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors"});reset(div_6);reset(div_4);reset(div_3);next(2);template_effect(()=>{set_attribute(p,"title",address());set_text(text2,address())});append($$anchor3,fragment_1)};var alternate=$$anchor3=>{var div_7=root_3();append($$anchor3,div_7)};if_block(node,$$render=>{if($yakklCurrentlySelectedStore()&&strict_equals($yakklCurrentlySelectedStore().shortcuts.address,YAKKL_ZERO_ADDRESS,false))$$render(consequent);else $$render(alternate,false)})}reset(div);append($$anchor2,div)}),$$slots:{default:true}})}var $$pop=pop({...legacy_api()});$$cleanup();return $$pop}export{Receive as R,Swap as S,UniswapSwapManager as U,getTokenBalance as g};
//# sourceMappingURL=Dlv-TT2p.js.map
