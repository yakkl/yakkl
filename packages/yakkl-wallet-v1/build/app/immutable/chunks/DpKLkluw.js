var __defProp=Object.defineProperty;var __defNormalProp=(obj,key,value)=>key in obj?__defProp(obj,key,{enumerable:true,configurable:true,writable:true,value:value}):obj[key]=value;var __publicField=(obj,key,value)=>__defNormalProp(obj,typeof key!=="symbol"?key+"":key,value);import{l as log}from"./WDN37msH.js";const _BalanceCacheManager=class _BalanceCacheManager{constructor(){__publicField(this,"CACHE_KEY","yakkl_balance_cache");__publicField(this,"CACHE_DURATION",15*60*1e3);__publicField(this,"STALE_DURATION",10*60*1e3);__publicField(this,"cache",new Map);this.loadFromStorage()}static getInstance(){if(!_BalanceCacheManager.instance){_BalanceCacheManager.instance=new _BalanceCacheManager}return _BalanceCacheManager.instance}getCachedBalance(address){const cached=this.cache.get(address.toLowerCase());if(!cached)return null;const age=Date.now()-cached.timestamp;if(age>this.CACHE_DURATION){this.cache.delete(address.toLowerCase());this.saveToStorage();return null}return cached}isStale(address){const cached=this.cache.get(address.toLowerCase());if(!cached)return false;const age=Date.now()-cached.timestamp;return age>this.STALE_DURATION}setCachedBalance(address,balance,price){const cacheData={address:address.toLowerCase(),balance:balance,timestamp:Date.now(),price:price};this.cache.set(address.toLowerCase(),cacheData);this.saveToStorage();log.debug("[BalanceCacheManager] Cached balance for address:",false,{address:address.toLowerCase(),balance:balance.toString(),price:price})}clearCache(){this.cache.clear();localStorage.removeItem(this.CACHE_KEY);log.info("[BalanceCacheManager] Cache cleared")}clearCachedBalance(address){this.cache.delete(address.toLowerCase());this.saveToStorage()}updatePriceForAllEntries(newPrice){let updated=0;for(const[address,data]of this.cache.entries()){if(data.price!==newPrice){this.cache.set(address,{...data,price:newPrice,timestamp:Date.now()});updated++}}if(updated>0){this.saveToStorage();log.info(`[BalanceCacheManager] Updated price for ${updated} cached entries to ${newPrice}`)}}getCachedAddresses(){return Array.from(this.cache.keys())}cleanupExpired(){const now=Date.now();let cleaned=0;for(const[address,data]of this.cache.entries()){if(now-data.timestamp>this.CACHE_DURATION){this.cache.delete(address);cleaned++}}if(cleaned>0){this.saveToStorage();log.info(`[BalanceCacheManager] Cleaned up ${cleaned} expired entries`)}}preloadBalances(addresses){const preloaded=new Map;for(const address of addresses){const cached=this.getCachedBalance(address);if(cached){preloaded.set(address.toLowerCase(),cached)}}log.debug(`[BalanceCacheManager] Preloaded ${preloaded.size}/${addresses.length} balances from cache`);return preloaded}loadFromStorage(){try{const stored=localStorage.getItem(this.CACHE_KEY);if(stored){const parsed=JSON.parse(stored);this.cache=new Map(Object.entries(parsed).map(([address,data])=>[address,{...data,balance:BigInt(data.balance)}]));this.cleanupExpired();log.debug(`[BalanceCacheManager] Loaded ${this.cache.size} entries from storage`)}}catch(error){log.warn("[BalanceCacheManager] Failed to load cache from storage:",false,error);this.cache=new Map}}saveToStorage(){try{const serializable=Object.fromEntries(Array.from(this.cache.entries()).map(([address,data])=>[address,{...data,balance:data.balance.toString()}]));localStorage.setItem(this.CACHE_KEY,JSON.stringify(serializable))}catch(error){log.warn("[BalanceCacheManager] Failed to save cache to storage:",false,error)}}getCacheStats(){const now=Date.now();let fresh=0;let stale=0;let expired=0;for(const data of this.cache.values()){const age=now-data.timestamp;if(age>this.CACHE_DURATION){expired++}else if(age>this.STALE_DURATION){stale++}else{fresh++}}return{totalEntries:this.cache.size,freshEntries:fresh,staleEntries:stale,expiredEntries:expired}}};__publicField(_BalanceCacheManager,"instance",null);let BalanceCacheManager=_BalanceCacheManager;const balanceCacheManager=BalanceCacheManager.getInstance();export{BalanceCacheManager,balanceCacheManager};
//# sourceMappingURL=DpKLkluw.js.map
