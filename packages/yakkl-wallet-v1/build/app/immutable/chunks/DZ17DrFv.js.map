{"version":3,"file":"DZ17DrFv.js","sources":["../../../../../../../../node_modules/.pnpm/svelte@5.34.3/node_modules/svelte/src/internal/shared/clone.js","../../../../../../../../node_modules/.pnpm/svelte@5.34.3/node_modules/svelte/src/internal/client/dev/console-log.js"],"sourcesContent":["/** @import { Snapshot } from './types' */\nimport { DEV } from 'esm-env';\nimport * as w from './warnings.js';\nimport { get_prototype_of, is_array, object_prototype } from './utils.js';\n\n/**\n * In dev, we keep track of which properties could not be cloned. In prod\n * we don't bother, but we keep a dummy array around so that the\n * signature stays the same\n * @type {string[]}\n */\nconst empty = [];\n\n/**\n * @template T\n * @param {T} value\n * @param {boolean} [skip_warning]\n * @returns {Snapshot<T>}\n */\nexport function snapshot(value, skip_warning = false) {\n\tif (DEV && !skip_warning) {\n\t\t/** @type {string[]} */\n\t\tconst paths = [];\n\n\t\tconst copy = clone(value, new Map(), '', paths);\n\t\tif (paths.length === 1 && paths[0] === '') {\n\t\t\t// value could not be cloned\n\t\t\tw.state_snapshot_uncloneable();\n\t\t} else if (paths.length > 0) {\n\t\t\t// some properties could not be cloned\n\t\t\tconst slice = paths.length > 10 ? paths.slice(0, 7) : paths.slice(0, 10);\n\t\t\tconst excess = paths.length - slice.length;\n\n\t\t\tlet uncloned = slice.map((path) => `- <value>${path}`).join('\\n');\n\t\t\tif (excess > 0) uncloned += `\\n- ...and ${excess} more`;\n\n\t\t\tw.state_snapshot_uncloneable(uncloned);\n\t\t}\n\n\t\treturn copy;\n\t}\n\n\treturn clone(value, new Map(), '', empty);\n}\n\n/**\n * @template T\n * @param {T} value\n * @param {Map<T, Snapshot<T>>} cloned\n * @param {string} path\n * @param {string[]} paths\n * @param {null | T} original The original value, if `value` was produced from a `toJSON` call\n * @returns {Snapshot<T>}\n */\nfunction clone(value, cloned, path, paths, original = null) {\n\tif (typeof value === 'object' && value !== null) {\n\t\tvar unwrapped = cloned.get(value);\n\t\tif (unwrapped !== undefined) return unwrapped;\n\n\t\tif (value instanceof Map) return /** @type {Snapshot<T>} */ (new Map(value));\n\t\tif (value instanceof Set) return /** @type {Snapshot<T>} */ (new Set(value));\n\n\t\tif (is_array(value)) {\n\t\t\tvar copy = /** @type {Snapshot<any>} */ (Array(value.length));\n\t\t\tcloned.set(value, copy);\n\n\t\t\tif (original !== null) {\n\t\t\t\tcloned.set(original, copy);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < value.length; i += 1) {\n\t\t\t\tvar element = value[i];\n\t\t\t\tif (i in value) {\n\t\t\t\t\tcopy[i] = clone(element, cloned, DEV ? `${path}[${i}]` : path, paths);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn copy;\n\t\t}\n\n\t\tif (get_prototype_of(value) === object_prototype) {\n\t\t\t/** @type {Snapshot<any>} */\n\t\t\tcopy = {};\n\t\t\tcloned.set(value, copy);\n\n\t\t\tif (original !== null) {\n\t\t\t\tcloned.set(original, copy);\n\t\t\t}\n\n\t\t\tfor (var key in value) {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tcopy[key] = clone(value[key], cloned, DEV ? `${path}.${key}` : path, paths);\n\t\t\t}\n\n\t\t\treturn copy;\n\t\t}\n\n\t\tif (value instanceof Date) {\n\t\t\treturn /** @type {Snapshot<T>} */ (structuredClone(value));\n\t\t}\n\n\t\tif (typeof (/** @type {T & { toJSON?: any } } */ (value).toJSON) === 'function') {\n\t\t\treturn clone(\n\t\t\t\t/** @type {T & { toJSON(): any } } */ (value).toJSON(),\n\t\t\t\tcloned,\n\t\t\t\tDEV ? `${path}.toJSON()` : path,\n\t\t\t\tpaths,\n\t\t\t\t// Associate the instance with the toJSON clone\n\t\t\t\tvalue\n\t\t\t);\n\t\t}\n\t}\n\n\tif (value instanceof EventTarget) {\n\t\t// can't be cloned\n\t\treturn /** @type {Snapshot<T>} */ (value);\n\t}\n\n\ttry {\n\t\treturn /** @type {Snapshot<T>} */ (structuredClone(value));\n\t} catch (e) {\n\t\tif (DEV) {\n\t\t\tpaths.push(path);\n\t\t}\n\n\t\treturn /** @type {Snapshot<T>} */ (value);\n\t}\n}\n","import { STATE_SYMBOL } from '#client/constants';\nimport { snapshot } from '../../shared/clone.js';\nimport * as w from '../warnings.js';\nimport { untrack } from '../runtime.js';\n\n/**\n * @param {string} method\n * @param  {...any} objects\n */\nexport function log_if_contains_state(method, ...objects) {\n\tuntrack(() => {\n\t\ttry {\n\t\t\tlet has_state = false;\n\t\t\tconst transformed = [];\n\n\t\t\tfor (const obj of objects) {\n\t\t\t\tif (obj && typeof obj === 'object' && STATE_SYMBOL in obj) {\n\t\t\t\t\ttransformed.push(snapshot(obj, true));\n\t\t\t\t\thas_state = true;\n\t\t\t\t} else {\n\t\t\t\t\ttransformed.push(obj);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (has_state) {\n\t\t\t\tw.console_log_state(method);\n\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log('%c[snapshot]', 'color: grey', ...transformed);\n\t\t\t}\n\t\t} catch {}\n\t});\n\n\treturn objects;\n}\n"],"names":["empty","snapshot","value","skip_warning","paths","copy","clone","Map","length","state_snapshot_uncloneable","slice","excess","uncloned","map","path","join","w.state_snapshot_uncloneable","cloned","original","unwrapped","get","Set","is_array","Array","set","i","element","get_prototype_of","object_prototype","key","Date","structuredClone","toJSON","EventTarget","e","push","log_if_contains_state","method","objects","untrack","has_state","transformed","obj","STATE_SYMBOL","w.console_log_state","console","log"],"mappings":"2MAWA,MAAMA,MAAQ,GAQP,SAASC,SAASC,MAAOC,aAAe,OAC9C,IAAYA,aAAc,CAEzB,MAAMC,MAAQ,GAEd,MAAMC,KAAOC,MAAMJ,UAAWK,IAAO,GAAIH,OACzC,GAAIA,MAAMI,SAAW,GAAKJ,MAAM,KAAO,GAAI,CAEZK,4BACjC,MAAA,GAAaL,MAAMI,OAAS,EAAG,CAE5B,MAAME,MAAQN,MAAMI,OAAS,GAAKJ,MAAMM,MAAM,EAAG,GAAKN,MAAMM,MAAM,EAAG,IAC/D,MAAAC,OAASP,MAAMI,OAASE,MAAMF,OAEhC,IAAAI,SAAWF,MAAMG,IAAKC,MAAS,YAAYA,QAAQC,KAAK,MACxD,GAAAJ,OAAS,EAAeC,UAAA,cAAcD,cAE1CK,2BAA6BJ,SAChC,CAES,OAAAP,IACT,CAEC,OAAOC,MAAMJ,MAAO,IAAIK,IAAO,GAAIP,MACpC,CAWA,SAASM,MAAMJ,MAAOe,OAAQH,KAAMV,MAAOc,SAAW,MACrD,UAAWhB,QAAU,UAAYA,QAAU,KAAM,CAC5C,IAAAiB,UAAYF,OAAOG,IAAIlB,OACvB,GAAAiB,mBAAgC,OAAAA,UAEpC,GAAIjB,iBAAiBK,IAAK,OAAA,IAAuCA,IAAIL,OACrE,GAAIA,iBAAiBmB,IAAK,OAAA,IAAuCA,IAAInB,OAEjE,GAAAoB,SAASpB,OAAQ,CAChB,IAAAG,KAAqCkB,MAAMrB,MAAMM,QAC9CS,OAAAO,IAAItB,MAAOG,MAElB,GAAIa,WAAa,KAAM,CACfD,OAAAO,IAAIN,SAAUb,KACzB,CAEG,IAAA,IAASoB,EAAI,EAAGA,EAAIvB,MAAMM,OAAQiB,GAAK,EAAG,CACrC,IAAAC,QAAUxB,MAAMuB,GACpB,GAAIA,KAAKvB,MAAO,CACVG,KAAAoB,GAAKnB,MAAMoB,QAAST,OAAc,GAAGH,QAAQW,KAAarB,MACpE,CACA,CAEU,OAAAC,IACV,CAEM,GAAAsB,iBAAiBzB,SAAW0B,iBAAkB,CAEjDvB,KAAO,CAAE,EACFY,OAAAO,IAAItB,MAAOG,MAElB,GAAIa,WAAa,KAAM,CACfD,OAAAO,IAAIN,SAAUb,KACzB,CAEG,IAAA,IAASwB,OAAO3B,MAAO,CAEtBG,KAAKwB,KAAOvB,MAAMJ,MAAM2B,KAAMZ,OAAc,GAAGH,QAAQe,MAAczB,MACzE,CAEU,OAAAC,IACV,CAEE,GAAIH,iBAAiB4B,KAAM,CAC1B,OAAmCC,gBAAgB7B,MACtD,CAEM,UAA8CA,MAAO8B,SAAY,WAAY,CACzE,OAAA1B,MACiCJ,MAAO8B,SAC9Cf,OACM,GAAGH,gBACTV,MAEAF,MAEJ,CACA,CAEC,GAAIA,iBAAiB+B,YAAa,CAEjC,OAAA,KACF,CAEK,IACH,OAAmCF,gBAAgB7B,MACnD,OAAQgC,GACC,CACR9B,MAAM+B,KAAKrB,KACd,CAEE,OAAA,KACF,CACA,CCtHO,SAASsB,sBAAsBC,UAAWC,SAChDC,QAAQ,KACH,IACH,IAAIC,UAAY,MAChB,MAAMC,YAAc,GAEpB,IAAA,MAAWC,OAAOJ,QAAS,CAC1B,GAAII,YAAcA,MAAQ,UAAYC,gBAAgBD,IAAK,CAC1DD,YAAYN,KAAKlC,SAASyC,IAAK,OACnBF,UAAA,IACjB,KAAW,CACNC,YAAYN,KAAKO,IACtB,CACA,CAEG,GAAIF,UAAW,CACdI,kBAAoBP,QAGpBQ,QAAQC,IAAI,eAAgB,iBAAkBL,YAClD,CACA,CAAU,MAAA,IAGF,OAAAH,OACR","x_google_ignoreList":[0,1]}