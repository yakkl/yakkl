import{c as check_target,l as legacy_api}from"./BXFaAXnq.js";import{p as push,c as child,j as next,r as reset,t as template_effect,a as pop,F as FILENAME,h as tag,o as onMount,i as state,e as set,g as get,b as strict_equals,s as sibling,a7 as untrack}from"./BaS8d5lg.js";import{a as add_locations}from"./3AhEABF_.js";import{a as append,f as from_html}from"./Cm3jf07C.js";import{i as if_block}from"./Q1yPWpQ-.js";import{s as set_class}from"./DX_EEhpR.js";import{p as prop}from"./BYboeQtC.js";import{s as set_text}from"./Cmwrv3PW.js";import{c as create_ownership_validator}from"./COgMMZ9C.js";import{w as wrap_snippet}from"./d5hrMixo.js";import{r as remove_input_defaults,b as bind_select_value}from"./DTBsVM-c.js";import{d as delegate,b as apply,c as remove_textarea_child,e as event}from"./DiU70Is3.js";import{b as bind_value,a as bind_checked}from"./B6q982nR.js";import{s as setup_stores,a as store_get,d as store_mutate}from"./CViNpZsE.js";import{v as validate_store}from"./Dv9a3G0k.js";import{b as browserSvelte}from"./CgCfpVku.js";import{C as getYakklCurrentlySelected,x as isEncryptedData,z as decryptData,v as getProfile,ba as yakklAccount,aE as DEFAULT_PERSONA,aw as AccountTypeCategory,ab as dateString,V as VERSION,R as encryptData,o as getYakklAccounts,ay as NetworkType,am as setProfileStorage,az as setYakklAccountsStorage,ak as setYakklCurrentlySelectedStorage,h as getMiscStore,aZ as getYakklWatchList,aO as setYakklWatchListStorage,g as getSettings}from"./Cb2naUpm.js";import{g as getWallet}from"./Bsa3XR3h.js";import{d as deepCopy,j as getSymbol}from"./CnIbzB-6.js";import{c as createForm}from"./CEKklR__.js";import"./Doq7snb5.js";import{c as create$3,a as create$6,d as create$7}from"./B4Ku5_Cd.js";import{l as log}from"./WDN37msH.js";import{b as addressExist}from"./BgnL0Zd7.js";import{W as WalletManager}from"./BJK8DTVo.js";import{M as Modal}from"./UU1vCwIM.js";SkeletonBalance[FILENAME]="src/lib/components/SkeletonBalance.svelte";var root_1$2=add_locations(from_html(`<div class="h-3 bg-gray-200 rounded w-16 mb-1 svelte-1876ar4"></div>`),SkeletonBalance[FILENAME],[[7,2]]);var root$2=add_locations(from_html(`<div><!> <div class="h-4 bg-gray-300 rounded w-20 svelte-1876ar4"></div></div>`),SkeletonBalance[FILENAME],[[5,0,[[9,1]]]]);function SkeletonBalance($$anchor,$$props){check_target(new.target);push($$props,true,SkeletonBalance);let className=prop($$props,"className",3,""),showLabel=prop($$props,"showLabel",3,true);var div=root$2();var node=child(div);{var consequent=$$anchor2=>{var div_1=root_1$2();append($$anchor2,div_1)};if_block(node,$$render=>{if(showLabel())$$render(consequent)})}next(2);reset(div);template_effect(()=>set_class(div,1,`animate-pulse ${className()??""}`,"svelte-1876ar4"));append($$anchor,div);return pop({...legacy_api()})}ImportPrivateKey[FILENAME]="src/lib/components/ImportPrivateKey.svelte";function resetForm(_,updateInitialValues){updateInitialValues({accountName:"",alias:"",prvKey:""})}var root_2$1=add_locations(from_html(`<p class="mt-2 text-sm text-red-600"> </p>`),ImportPrivateKey[FILENAME],[[239,6]]);var root_3$1=add_locations(from_html(`<p class="mt-2 text-sm text-red-600"> </p>`),ImportPrivateKey[FILENAME],[[266,6]]);var root_4$1=add_locations(from_html(`<p class="mt-4 text-sm text-red-600"> </p>`),ImportPrivateKey[FILENAME],[[290,4]]);var root_1$1=add_locations(from_html(`<div class="p-6 border-t border-gray-500 dark:border-gray-300"><p class="text-sm text-red-500 dark:text-red-300 mb-4">Please be careful! <strong>This private key is important!</strong> A bad actor could take the content of your wallet if they have access to your private key!</p> <form class="space-y-4"><div><label for="accountName" class="block text-sm font-medium text-gray-700 dark:text-gray-200">Account Name</label> <input type="text" id="accountName" class="mt-1 block w-full rounded-md border-gray-500 dark:border-gray-50 shadow-sm focus:border-indigo-500 focus:ring-indigo-700 sm:text-sm"/> <!></div> <div><label for="alias" class="block text-sm font-medium text-gray-700 dark:text-gray-200">Alias (Optional)</label> <input type="text" id="alias" class="mt-1 block w-full rounded-md border-gray-500 dark:border-gray-50 shadow-sm focus:border-indigo-500 focus:ring-indigo-700 sm:text-sm"/></div> <div><label for="prvKey" class="block text-sm font-medium text-gray-700 dark:text-gray-200">Private Key</label> <textarea id="prvKey" rows="3" class="mt-1 block w-full rounded-md border-gray-500 dark:border-gray-50 shadow-sm focus:border-indigo-500 focus:ring-indigo-700 sm:text-sm"></textarea> <!></div> <div class="pt-5"><div class="flex justify-end space-x-4"><button type="button" class="rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">Cancel</button> <button type="button" class="rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">Reset</button> <button type="submit" class="rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">Import</button></div></div></form> <!></div>`),ImportPrivateKey[FILENAME],[[220,2,[[221,3,[[222,23]]],[225,3,[[226,4,[[227,5],[231,5]]],[242,4,[[243,5],[246,5]]],[254,4,[[255,5],[258,5]]],[269,4,[[270,5,[[271,6],[276,6],[281,6]]]]]]]]]]);var root$1=add_locations(from_html(`<div><!></div>`),ImportPrivateKey[FILENAME],[[218,0]]);function ImportPrivateKey($$anchor,$$props){check_target(new.target);push($$props,true,ImportPrivateKey);var $$ownership_validator=create_ownership_validator($$props);const[$$stores,$$cleanup]=setup_stores();const $form=()=>(validate_store(form,"form"),store_get(form,"$form",$$stores));const $errors=()=>(validate_store(errors,"errors"),store_get(errors,"$errors",$$stores));let wallet;let currentlySelected;let yakklMiscStore;let chainId=1;let error=tag(state(""),"error");let showConfetti=tag(state(false),"showConfetti");let show=prop($$props,"show",15,false),className=prop($$props,"className",3,"text-gray-600 z-[999]"),onComplete=prop($$props,"onComplete",3,()=>{show(false)}),onCancel=prop($$props,"onCancel",11,()=>{show(false)});onMount(async()=>{try{yakklMiscStore=getMiscStore();if(yakklMiscStore){currentlySelected=await getYakklCurrentlySelected();wallet=WalletManager.getInstance(["Alchemy"],["Ethereum"],currentlySelected.shortcuts.chainId??1,"pBm4VA9q8Laz9x3bmXTNZ9m-ArxczEWk")}}catch(e){log.error(`Error decrypting data: ${e}`)}});const{form:form,errors:errors,handleChange:handleChange,handleSubmit:handleSubmit,updateInitialValues:updateInitialValues}=createForm({initialValues:{accountName:"",alias:"",prvKey:""},validationSchema:create$3().shape({accountName:create$6().required("Please enter your account name for the address"),alias:create$6(),prvKey:create$6().required("Please paste or enter your Private Key for the address you are importing")}),onSubmit:async data=>{try{await handleImport(data.accountName,data.alias,data.prvKey)}catch(e){set(error,`Following error occurred: ${e}`);log.error(get(error))}}});async function checkIfAccountExists(name,address,alias){const yakklAccounts=await getYakklAccounts();const result=yakklAccounts.find(x=>{if(strict_equals(x.address,address)||strict_equals(x.name,name)||alias&&strict_equals(x.alias,alias))return true});if(result){return true}const{exists:exists,table:table}=await addressExist(address);return exists}async function handleImport(accountName,alias,prvKey){if(browserSvelte){if(!prvKey.trim()){set(error,"Please enter a valid private key.");return}if(!accountName.trim()){set(error,"Please enter a valid account name.");return}if(prvKey.startsWith("0x")){prvKey=prvKey.substring(2)}if(await checkIfAccountExists(accountName,await getWallet(prvKey).getAddress(),alias)){set(error,"Account already exists. Please enter a different account name, alias, or private key.");return}set(showConfetti,true);if(!currentlySelected)currentlySelected=await getYakklCurrentlySelected();if(isEncryptedData(currentlySelected.data)){await decryptData(currentlySelected.data,yakklMiscStore).then(result=>{currentlySelected.data=result})}let profile=currentlySelected.data.profile;const yakklAccount$1=yakklAccount;if(profile){profile=deepCopy(currentlySelected.data.profile)}else{profile=await getProfile();currentlySelected.data.profile=profile}if(isEncryptedData(profile.data)){await decryptData(profile.data,yakklMiscStore).then(result=>{profile.data=result})}if(strict_equals(profile.data,void 0,false)&&profile.data.meta){profile.data.meta={}}currentlySelected.shortcuts.type="Mainnet";currentlySelected.shortcuts.chainId=chainId;const walletNew=getWallet(prvKey);yakklAccount$1.id=currentlySelected.id;yakklAccount$1.persona=(currentlySelected==null?void 0:currentlySelected.persona)||DEFAULT_PERSONA;yakklAccount$1.blockchain=currentlySelected.shortcuts.network.blockchain;yakklAccount$1.data.privateKey=prvKey;yakklAccount$1.data.path="";yakklAccount$1.quantity=0n;yakklAccount$1.address=await walletNew.getAddress();yakklAccount$1.name=accountName;yakklAccount$1.alias=alias;yakklAccount$1.description="Imported account using private key";await wallet.getBalance(yakklAccount$1.address).then(result=>{if(result)yakklAccount$1.quantity=result}).catch(e=>{log.error(`Import: error getting balance: ${e}`)});yakklAccount$1.index=-1;yakklAccount$1.accountType=AccountTypeCategory.IMPORTED;yakklAccount$1.primaryAccount=null;yakklAccount$1.class="Default";yakklAccount$1.includeInPortfolio=true;yakklAccount$1.createDate=dateString();yakklAccount$1.updateDate=dateString();yakklAccount$1.version=VERSION;if(!isEncryptedData(yakklAccount$1.data)){await encryptData(yakklAccount$1.data,yakklMiscStore).then(result=>{yakklAccount$1.data=result}).catch(e=>{log.error(`Import: error encrypting account data: ${e}`)})}currentlySelected.data.account=yakklAccount$1;currentlySelected.data.primaryAccount=null;let yakklAccounts=await getYakklAccounts();if(!Array.isArray(yakklAccounts)){yakklAccounts=[]}if(profile.data){if(strict_equals(profile.data.importedAccounts,void 0)||strict_equals(profile.data.importedAccounts,null)||!Array.isArray(profile.data.importedAccounts)){profile.data.importedAccounts=[]}}profile.data.importedAccounts.push(yakklAccount$1);if(!isEncryptedData(profile.data)){await encryptData(profile.data,yakklMiscStore).then(result=>{profile.data=result})}currentlySelected.data.profile=profile;currentlySelected.shortcuts.quantity=!yakklAccount$1.quantity?"0.0":yakklAccount$1.quantity;currentlySelected.shortcuts.address=yakklAccount$1.address;currentlySelected.shortcuts.accountName=accountName;currentlySelected.shortcuts.alias=alias;currentlySelected.shortcuts.accountType=AccountTypeCategory.IMPORTED;currentlySelected.shortcuts.primary=null;currentlySelected.shortcuts.network.blockchain=yakklAccount$1.blockchain;currentlySelected.shortcuts.network.chainId=chainId;currentlySelected.shortcuts.network.name="Mainnet";currentlySelected.shortcuts.network.explorer="https://etherscan.io";currentlySelected.shortcuts.network.type=NetworkType.MAINNET;currentlySelected.shortcuts.network.decimals=18;currentlySelected.shortcuts.network.symbol=getSymbol(yakklAccount$1.blockchain);yakklAccounts.push(yakklAccount$1);await setProfileStorage(profile);await setYakklAccountsStorage(yakklAccounts);await setYakklCurrentlySelectedStorage(currentlySelected);onComplete()(yakklAccount$1);show(false)}}function closeModal(){show(false)}var div=root$1();var node=child(div);{$$ownership_validator.binding("show",Modal,show);Modal(node,{title:"Import Account",onClose:closeModal,onCancel:onCancel(),get className(){return className()},get show(){return show()},set show($$value){show($$value)},children:wrap_snippet(ImportPrivateKey,($$anchor2,$$slotProps)=>{var div_1=root_1$1();var form_1=sibling(child(div_1),2);var div_2=child(form_1);var input=sibling(child(div_2),2);remove_input_defaults(input);input.__change=function(...$$args){apply(()=>handleChange,this,$$args,ImportPrivateKey,[236,16])};var node_1=sibling(input,2);{var consequent=$$anchor3=>{var p=root_2$1();var text=child(p,true);reset(p);template_effect(()=>set_text(text,$errors().accountName));append($$anchor3,p)};if_block(node_1,$$render=>{if($errors().accountName)$$render(consequent)})}reset(div_2);var div_3=sibling(div_2,2);var input_1=sibling(child(div_3),2);remove_input_defaults(input_1);input_1.__change=function(...$$args){apply(()=>handleChange,this,$$args,ImportPrivateKey,[251,16])};reset(div_3);var div_4=sibling(div_3,2);var textarea=sibling(child(div_4),2);remove_textarea_child(textarea);textarea.__change=function(...$$args){apply(()=>handleChange,this,$$args,ImportPrivateKey,[263,16])};var node_2=sibling(textarea,2);{var consequent_1=$$anchor3=>{var p_1=root_3$1();var text_1=child(p_1,true);reset(p_1);template_effect(()=>set_text(text_1,$errors().prvKey));append($$anchor3,p_1)};if_block(node_2,$$render=>{if($errors().prvKey)$$render(consequent_1)})}reset(div_4);var div_5=sibling(div_4,2);var div_6=child(div_5);var button=child(div_6);button.__click=function(...$$args){apply(onCancel,this,$$args,ImportPrivateKey,[274,16])};var button_1=sibling(button,2);button_1.__click=[resetForm,updateInitialValues];next(2);reset(div_6);reset(div_5);reset(form_1);var node_3=sibling(form_1,2);{var consequent_2=$$anchor3=>{var p_2=root_4$1();var text_2=child(p_2,true);reset(p_2);template_effect(()=>set_text(text_2,get(error)));append($$anchor3,p_2)};if_block(node_3,$$render=>{if(get(error))$$render(consequent_2)})}reset(div_1);event("submit",form_1,function(...$$args){apply(()=>handleSubmit,this,$$args,ImportPrivateKey,[225,19])});bind_value(input,()=>$form().accountName,$$value=>store_mutate(form,untrack($form).accountName=$$value,untrack($form)));bind_value(input_1,()=>$form().alias,$$value=>store_mutate(form,untrack($form).alias=$$value,untrack($form)));bind_value(textarea,()=>$form().prvKey,$$value=>store_mutate(form,untrack($form).prvKey=$$value,untrack($form)));append($$anchor2,div_1)}),$$slots:{default:true}})}reset(div);template_effect(()=>set_class(div,1,`relative ${className()??""}`));append($$anchor,div);var $$pop=pop({...legacy_api()});$$cleanup();return $$pop}delegate(["change","click"]);ImportWatchAccount[FILENAME]="src/lib/components/ImportWatchAccount.svelte";var root_2=add_locations(from_html(`<p class="mt-2 text-sm text-red-600"> </p>`),ImportWatchAccount[FILENAME],[[195,6]]);var root_3=add_locations(from_html(`<p class="mt-2 text-sm text-red-600"> </p>`),ImportWatchAccount[FILENAME],[[211,6]]);var root_4=add_locations(from_html(`<p class="mt-4 text-sm text-red-600"> </p>`),ImportWatchAccount[FILENAME],[[275,4]]);var root_1=add_locations(from_html(`<div class="p-6"><p class="text-sm text-green-500 mb-4">This is a <strong>WATCH - ONLY address</strong>. This means that you will not be able to\n\t\t\t\tperform any transactions with this specific address in YAKKL. You can <strong>Import</strong> this address if you have your private key using the Import option. This \`watch-only\` address\n\t\t\t\tallows you to keep track of <strong>ALL</strong> of your crypto in one wallet and have a complete\n\t\t\t\tportfolio view. For example, if you have an account with a centralized exchange like Coinbase,\n\t\t\t\tKraken, Binance, etc. You can also use this feature to keep track of addresses belonging to others\n\t\t\t\t(e.g, \`whales\`, \`market makers\`) and be alerted on activities (useful for staying aware of potential\n\t\t\t\tmarket moves).</p> <form class="space-y-4"><div><label for="blockchain" class="block text-sm font-medium text-gray-700 dark:text-gray-200">Blockchain</label> <select id="blockchain" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"><option>Ethereum</option><option>Polygon</option></select></div> <div><label for="address" class="block text-sm font-medium text-gray-700 dark:text-gray-200">Address</label> <input type="text" id="address" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"/> <!></div> <div><label for="addressName" class="block text-sm font-medium text-gray-700 dark:text-gray-200">Address Name</label> <input type="text" id="addressName" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"/> <!></div> <div class="flex items-center"><input type="checkbox" id="includeInPortfolio" class="h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded"/> <label for="includeInPortfolio" class="ml-2 block text-sm text-gray-700 dark:text-gray-200">Include this account in your portfolio totals?</label></div> <div><label for="addressAlias" class="block text-sm font-medium text-gray-700 dark:text-gray-200">Address Alias (optional)</label> <input type="text" id="addressAlias" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"/></div> <div><label for="url" class="block text-sm font-medium text-gray-700 dark:text-gray-200">Explorer URL - checking address data (optional)</label> <input type="text" id="url" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"/></div> <div class="pt-5"><div class="flex justify-end space-x-4"><button type="button" class="rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">Cancel</button> <button type="button" class="rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">Reset</button> <button type="submit" class="rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">Save</button></div></div></form> <!></div>`),ImportWatchAccount[FILENAME],[[156,2,[[157,3,[[158,14],[160,4],[162,32]]],[168,3,[[169,4,[[170,5],[173,5,[[179,6],[180,6]]]]],[183,4,[[184,5],[187,5]]],[198,4,[[199,5],[203,5]]],[214,4,[[215,5],[222,5]]],[228,4,[[229,5],[234,5]]],[242,4,[[243,5],[246,5]]],[254,4,[[255,5,[[256,6],[261,6],[266,6]]]]]]]]]]);var root=add_locations(from_html(`<div><!></div>`),ImportWatchAccount[FILENAME],[[154,0]]);function ImportWatchAccount($$anchor,$$props){check_target(new.target);push($$props,true,ImportWatchAccount);var $$ownership_validator=create_ownership_validator($$props);const[$$stores,$$cleanup]=setup_stores();const $form=()=>(validate_store(form,"form"),store_get(form,"$form",$$stores));const $errors=()=>(validate_store(errors,"errors"),store_get(errors,"$errors",$$stores));let show=prop($$props,"show",15,false),className=prop($$props,"className",3,"z-[999]"),onCancel=prop($$props,"onCancel",3,()=>{}),onComplete=prop($$props,"onComplete",3,()=>{});let currentlySelected;let yakklMiscStore;let yakklSettingsStore;let error=tag(state(""),"error");onMount(async()=>{currentlySelected=await getYakklCurrentlySelected();yakklMiscStore=getMiscStore();await getYakklWatchList();yakklSettingsStore=await getSettings()});const{form:form,errors:errors,handleChange:handleChange,handleSubmit:handleSubmit,updateInitialValues:updateInitialValues}=createForm({initialValues:{blockchain:"Ethereum",address:"",addressName:"",includeInPortfolio:false,addressAlias:"",url:""},validationSchema:create$3().shape({blockchain:create$6().required("Please enter the crypto account network (watch-only)"),address:create$6().required("Please enter the crypto account (watch-only)"),addressName:create$6().required("Please enter the account name (e.g., address alias)"),includeInPortfolio:create$7().required("Please select if you want to include this account in your portfolio totals"),addressAlias:create$6().optional(),url:create$6().optional()}),onSubmit:async data=>{try{await handleAddWatch(data)}catch(e){set(error,`Error adding watch-only account: ${e}`)}}});async function handleAddWatch(data){let watchList=[];if(isEncryptedData(currentlySelected.data)){await decryptData(currentlySelected.data,yakklMiscStore).then(result=>{currentlySelected.data=result})}let profile=deepCopy(currentlySelected.data.profile);if(isEncryptedData(profile.data)){await decryptData(profile.data,yakklMiscStore).then(result=>{profile.data=result})}if(profile.data.watchList.length>0){if(profile.data.watchList.find(watch2=>strict_equals(watch2.address,data.address)&&strict_equals(watch2.blockchain,data.blockchain))){set(error,"This account already exists for the given profile.");return}}const currentDate=dateString();const watch={id:profile.id,blockchain:data.blockchain,name:data.addressName,tags:[],quantity:0n,includeInPortfolio:data.includeInPortfolio,explorer:data.url,address:data.address,addressAlias:data.addressAlias,version:VERSION,createDate:currentDate,updateDate:currentDate};profile.data.watchList.push(watch);await encryptData(profile.data,yakklMiscStore).then(async result=>{profile.data=result;await setProfileStorage(profile)});currentlySelected.data.profile=deepCopy(profile);await setYakklCurrentlySelectedStorage(currentlySelected);watchList=await getYakklWatchList();if((watchList==null?void 0:watchList.length)>0){if(watchList.find(account=>strict_equals(account.address,data.address)&&strict_equals(account.blockchain,data.blockchain))){set(error,"This account already exists.");return}}watchList.push({id:profile.id,name:data.addressName,tags:[],quantity:"0.0",includeInPortfolio:data.includeInPortfolio,explorer:data.url,address:data.address,addressAlias:data.addressAlias,blockchain:data.blockchain,version:strict_equals(yakklSettingsStore,null,false)?yakklSettingsStore.version:VERSION,createDate:currentDate,updateDate:currentDate});await setYakklWatchListStorage(watchList);onComplete()(watch);resetForm2();show(false)}function closeModal(){onCancel()();resetForm2();show(false)}function resetForm2(){updateInitialValues({blockchain:"Ethereum",address:"",addressName:"",includeInPortfolio:false,addressAlias:"",url:""})}var div=root();var node=child(div);{$$ownership_validator.binding("show",Modal,show);Modal(node,{title:"Add Watch-Only Address",onClose:closeModal,get show(){return show()},set show($$value){show($$value)},children:wrap_snippet(ImportWatchAccount,($$anchor2,$$slotProps)=>{var div_1=root_1();var form_1=sibling(child(div_1),2);var div_2=child(form_1);var select=sibling(child(div_2),2);select.__change=function(...$$args){apply(()=>handleChange,this,$$args,ImportWatchAccount,[177,16])};var option=child(select);option.value=option.__value="Ethereum";var option_1=sibling(option);option_1.value=option_1.__value="Polygon";reset(select);reset(div_2);var div_3=sibling(div_2,2);var input=sibling(child(div_3),2);remove_input_defaults(input);input.__change=function(...$$args){apply(()=>handleChange,this,$$args,ImportWatchAccount,[192,16])};var node_1=sibling(input,2);{var consequent=$$anchor3=>{var p=root_2();var text=child(p,true);reset(p);template_effect(()=>set_text(text,$errors().address));append($$anchor3,p)};if_block(node_1,$$render=>{if($errors().address)$$render(consequent)})}reset(div_3);var div_4=sibling(div_3,2);var input_1=sibling(child(div_4),2);remove_input_defaults(input_1);input_1.__change=function(...$$args){apply(()=>handleChange,this,$$args,ImportWatchAccount,[208,16])};var node_2=sibling(input_1,2);{var consequent_1=$$anchor3=>{var p_1=root_3();var text_1=child(p_1,true);reset(p_1);template_effect(()=>set_text(text_1,$errors().addressName));append($$anchor3,p_1)};if_block(node_2,$$render=>{if($errors().addressName)$$render(consequent_1)})}reset(div_4);var div_5=sibling(div_4,2);var input_2=child(div_5);remove_input_defaults(input_2);input_2.__change=function(...$$args){apply(()=>handleChange,this,$$args,ImportWatchAccount,[220,16])};next(2);reset(div_5);var div_6=sibling(div_5,2);var input_3=sibling(child(div_6),2);remove_input_defaults(input_3);input_3.__change=function(...$$args){apply(()=>handleChange,this,$$args,ImportWatchAccount,[239,16])};reset(div_6);var div_7=sibling(div_6,2);var input_4=sibling(child(div_7),2);remove_input_defaults(input_4);input_4.__change=function(...$$args){apply(()=>handleChange,this,$$args,ImportWatchAccount,[251,16])};reset(div_7);var div_8=sibling(div_7,2);var div_9=child(div_8);var button=child(div_9);button.__click=closeModal;var button_1=sibling(button,2);button_1.__click=resetForm2;next(2);reset(div_9);reset(div_8);reset(form_1);var node_3=sibling(form_1,2);{var consequent_2=$$anchor3=>{var p_2=root_4();var text_2=child(p_2,true);reset(p_2);template_effect(()=>set_text(text_2,get(error)));append($$anchor3,p_2)};if_block(node_3,$$render=>{if(get(error))$$render(consequent_2)})}reset(div_1);event("submit",form_1,function(...$$args){apply(()=>handleSubmit,this,$$args,ImportWatchAccount,[168,19])});bind_select_value(select,()=>$form().blockchain,$$value=>store_mutate(form,untrack($form).blockchain=$$value,untrack($form)));bind_value(input,()=>$form().address,$$value=>store_mutate(form,untrack($form).address=$$value,untrack($form)));bind_value(input_1,()=>$form().addressName,$$value=>store_mutate(form,untrack($form).addressName=$$value,untrack($form)));bind_checked(input_2,()=>$form().includeInPortfolio,$$value=>store_mutate(form,untrack($form).includeInPortfolio=$$value,untrack($form)));bind_value(input_3,()=>$form().addressAlias,$$value=>store_mutate(form,untrack($form).addressAlias=$$value,untrack($form)));bind_value(input_4,()=>$form().url,$$value=>store_mutate(form,untrack($form).url=$$value,untrack($form)));append($$anchor2,div_1)}),$$slots:{default:true}})}reset(div);template_effect(()=>set_class(div,1,`relative ${className()??""}`));append($$anchor,div);var $$pop=pop({...legacy_api()});$$cleanup();return $$pop}delegate(["change","click"]);export{ImportWatchAccount as I,SkeletonBalance as S,ImportPrivateKey as a};
//# sourceMappingURL=3fXJKFcU.js.map
