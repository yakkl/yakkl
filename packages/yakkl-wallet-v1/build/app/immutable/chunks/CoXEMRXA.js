var __defProp=Object.defineProperty;var __defNormalProp=(obj,key,value)=>key in obj?__defProp(obj,key,{enumerable:true,configurable:true,writable:true,value:value}):obj[key]=value;var __publicField=(obj,key,value)=>__defNormalProp(obj,typeof key!=="symbol"?key+"":key,value);import{c as check_target,l as legacy_api}from"./BXFaAXnq.js";import{p as push,h as tag,i as state,ae as proxy,f as first_child,a as pop,u as user_derived,F as FILENAME,c as child,s as sibling,b as strict_equals,g as get,r as reset,t as template_effect,e as set,j as next}from"./BaS8d5lg.js";import{a as add_locations}from"./3AhEABF_.js";import{s as set_text}from"./Cmwrv3PW.js";import{i as if_block}from"./Q1yPWpQ-.js";import{e as each,i as index}from"./DraJ8LN-.js";import{c as comment,a as append,f as from_html}from"./Cm3jf07C.js";import{v as validate_store}from"./Dv9a3G0k.js";import{d as delegate,b as apply}from"./DiU70Is3.js";import{s as set_class}from"./DX_EEhpR.js";import{s as set_style}from"./D1JcdFy3.js";import{p as prop}from"./BYboeQtC.js";import{s as setup_stores,a as store_get}from"./CViNpZsE.js";import{l as log_if_contains_state}from"./DZ17DrFv.js";import{d as derived,w as writable}from"./B2gA1VsD.js";import{g as getSettings}from"./Cb2naUpm.js";var PlanType=(PlanType2=>{PlanType2["Basic"]="basic_member";PlanType2["Pro"]="yakkl_pro";PlanType2["Enterprise"]="enterprise";PlanType2["Private"]="yakkl_private";return PlanType2})(PlanType||{});const BASIC_FEATURES=["view_balance","send_tokens","receive_tokens","swap_tokens","buy_crypto","sell_crypto","view_transactions","basic_security","import_wallet","export_keys","hardware_wallet","basic_tokens","basic_networks","basic_features"];const PRO_FEATURES=[...BASIC_FEATURES,"advanced_analytics","portfolio_tracking","price_alerts","ai_assistant","staking","yield_farming","all_tokens","testnet_access","priority_support","bulk_transactions","api_access","custom_rpc","advanced_security","multi_sig"];const ENTERPRISE_FEATURES=[...PRO_FEATURES,"white_label","custom_branding","dedicated_support","custom_features"];const PRIVATE_FEATURES=[...ENTERPRISE_FEATURES,"private_key_backup","secure_recovery","air_gapped_signing","hardware_integration","zero_knowledge_proofs"];const PAYMENT_FEATURES=["buy_crypto_card","buy_crypto_bank","crypto_payment","subscription_management"];const FEATURES={[PlanType.Basic]:BASIC_FEATURES,[PlanType.Pro]:PRO_FEATURES,[PlanType.Enterprise]:ENTERPRISE_FEATURES,[PlanType.Private]:PRIVATE_FEATURES,PAYMENT:PAYMENT_FEATURES};const PLAN_FEATURES={BASIC:BASIC_FEATURES,PRO:PRO_FEATURES,ENTERPRISE:ENTERPRISE_FEATURES,PRIVATE:PRIVATE_FEATURES};function hasFeature(userPlan,feature){const planFeatures=FEATURES[userPlan];return(planFeatures==null?void 0:planFeatures.includes(feature))??false}function getFeaturesForPlan(plan){return FEATURES[plan]??FEATURES[PlanType.Basic]}function isTrialUser(trialEndsAt){if(!trialEndsAt)return false;return new Date(trialEndsAt)>new Date}function createPlanStore(){const{subscribe:subscribe,set:set2,update:update}=writable({plan:{type:PlanType.Basic,features:getFeaturesForPlan(PlanType.Basic)},loading:false});return{subscribe:subscribe,async loadPlan(){var _a,_b,_c;update(state2=>({...state2,loading:true}));try{const settings=await getSettings();const planType=((_a=settings==null?void 0:settings.plan)==null?void 0:_a.type)||PlanType.Basic;const trialEndsAt=(_b=settings==null?void 0:settings.plan)==null?void 0:_b.trialEndsAt;const onTrial=isTrialUser(trialEndsAt);const effectivePlan=onTrial?PlanType.Pro:planType;set2({plan:{type:effectivePlan,trialEndsAt:trialEndsAt,subscriptionId:(_c=settings==null?void 0:settings.plan)==null?void 0:_c.subscriptionId,features:getFeaturesForPlan(effectivePlan)},loading:false})}catch(error){set2({plan:{type:PlanType.Basic,features:getFeaturesForPlan(PlanType.Basic)},loading:false})}},canUseFeature(feature){let planState={plan:{type:PlanType.Basic}};subscribe(state2=>{planState=state2})();return hasFeature(planState.plan.type,feature)},async upgradeTo(newPlan){update(state2=>({...state2,loading:true}));try{await new Promise(resolve=>setTimeout(resolve,1e3));const settings=await getSettings();if(settings){const updatedSettings={...settings,plan:{...settings.plan,type:newPlan,trialEndsAt:null,subscriptionId:`sub_${Date.now()}`,updatedAt:(new Date).toISOString()}};localStorage.setItem("yakkl:plan",JSON.stringify({type:newPlan,subscriptionId:updatedSettings.plan.subscriptionId,upgradedAt:updatedSettings.plan.updatedAt}))}update(state2=>({...state2,plan:{type:newPlan,features:getFeaturesForPlan(newPlan),subscriptionId:`sub_${Date.now()}`,trialEndsAt:null},loading:false}));console.log(`✅ Successfully upgraded to ${newPlan}`)}catch(error){console.error("Upgrade failed:",error);update(state2=>({...state2,loading:false}));throw error}},async downgradeTo(newPlan){update(state2=>({...state2,loading:true}));try{await new Promise(resolve=>setTimeout(resolve,1e3));update(state2=>({...state2,plan:{type:newPlan,features:getFeaturesForPlan(newPlan),subscriptionId:null,trialEndsAt:null},loading:false}))}catch(error){console.error("Downgrade failed:",error);update(state2=>({...state2,loading:false}));throw error}},async startTrial(trialDays=14){update(state2=>({...state2,loading:true}));try{const trialEndsAt=new Date;trialEndsAt.setDate(trialEndsAt.getDate()+trialDays);update(state2=>({...state2,plan:{type:PlanType.Pro,features:getFeaturesForPlan(PlanType.Pro),trialEndsAt:trialEndsAt.toISOString(),subscriptionId:null},loading:false}));console.log(`✅ Started ${trialDays}-day trial`)}catch(error){console.error("Failed to start trial:",error);update(state2=>({...state2,loading:false}));throw error}},getUpgradeOptions(currentPlan2){const plans=[PlanType.Basic,PlanType.Pro,PlanType.Enterprise,PlanType.Private];const currentIndex=plans.indexOf(currentPlan2);return plans.slice(currentIndex+1)},getPlanStatus(){let planState={plan:{type:PlanType.Basic}};subscribe(state2=>{planState=state2})();const trialActive=isTrialUser(planState.plan.trialEndsAt);const hasSubscription=!!planState.plan.subscriptionId;return{current:planState.plan.type,onTrial:trialActive,hasSubscription:hasSubscription,canUpgrade:planState.plan.type!==PlanType.Private,trialEndsAt:planState.plan.trialEndsAt}},reset(){set2({plan:{type:PlanType.Basic,features:getFeaturesForPlan(PlanType.Basic)},loading:false})}}}const planStore=createPlanStore();const currentPlan=derived(planStore,$store=>$store.plan.type);const isProUser=derived(planStore,$store=>$store.plan.type===PlanType.Pro||$store.plan.type===PlanType.Enterprise);const isOnTrial=derived(planStore,$store=>isTrialUser($store.plan.trialEndsAt));derived(planStore,$store=>$store.plan.features);function canUseFeature$1(feature){return planStore.canUseFeature(feature)}const plan_store=Object.freeze(Object.defineProperty({__proto__:null,canUseFeature:canUseFeature$1,currentPlan:currentPlan,isOnTrial:isOnTrial,isProUser:isProUser,planStore:planStore},Symbol.toStringTag,{value:"Module"}));class Logger{constructor(prefix="[YAKKL]"){__publicField(this,"prefix");this.prefix=prefix}debug(...args){}info(...args){}warn(...args){console.warn(this.prefix,...args)}error(...args){console.error(this.prefix,...args)}child(childPrefix){return new Logger(`${this.prefix} ${childPrefix}`)}}const log=new Logger;class FeatureManager{constructor(){__publicField(this,"currentPlan",PlanType.Basic);__publicField(this,"enabledFeatures",new Set);this.updateFeatures()}setPlan(plan){if(this.currentPlan!==plan){this.currentPlan=plan;this.updateFeatures();log.debug(`Plan updated to: ${plan}`)}}canUse(feature){return this.enabledFeatures.has(feature)}getEnabledFeatures(){return Array.from(this.enabledFeatures)}getCurrentPlan(){return this.currentPlan}hasAccess(requiredPlan){const planHierarchy={[PlanType.Basic]:0,[PlanType.Pro]:1,[PlanType.Enterprise]:2,[PlanType.Private]:3};const currentLevel=planHierarchy[this.currentPlan];const requiredLevel=planHierarchy[requiredPlan];return currentLevel>=requiredLevel}updateFeatures(){this.enabledFeatures.clear();const planFeatures=this.getPlanFeatures(this.currentPlan);planFeatures.forEach(feature=>this.enabledFeatures.add(feature))}getPlanFeatures(plan){switch(plan){case PlanType.Basic:return PLAN_FEATURES.BASIC;case PlanType.Pro:return PLAN_FEATURES.PRO;case PlanType.Enterprise:return PLAN_FEATURES.ENTERPRISE;case PlanType.Private:return PLAN_FEATURES.PRIVATE;default:log.warn(`Unknown plan type: ${plan}, defaulting to Basic`);return PLAN_FEATURES.BASIC}}}const featureManager=new FeatureManager;const canUseFeature=feature=>featureManager.canUse(feature);Upgrade[FILENAME]="src/routes/preview2/lib/components/Upgrade.svelte";function confirmUpgrade(_,processUpgrade){processUpgrade()}function goBack(__1,upgradeStep){set(upgradeStep,"overview")}var on_click=(__2,show)=>show(false);var root_3=add_locations(from_html(`<div class="text-right"><span class="text-xs text-orange-600 dark:text-orange-400">Trial</span> <div class="text-xs text-zinc-500"> </div></div>`),Upgrade[FILENAME],[[191,16,[[192,18],[193,18]]]]);var on_click_1=(__3,handleSelectPlan,planType)=>handleSelectPlan(get(planType));var root_5=add_locations(from_html(`<div class="text-xs text-zinc-500">/month</div>`),Upgrade[FILENAME],[[228,22]]);var root_6=add_locations(from_html(`<div class="flex items-center text-sm text-zinc-600 dark:text-zinc-400"><svg class="w-4 h-4 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path></svg> </div>`),Upgrade[FILENAME],[[235,20,[[236,22,[[237,24]]]]]]);var root_4=add_locations(from_html(`<div class="border border-zinc-200 dark:border-zinc-700 rounded-lg p-4 hover:border-indigo-300 dark:hover:border-indigo-600 cursor-pointer transition-colors"><div class="flex items-center justify-between mb-3"><div class="flex items-center"><span class="text-2xl mr-3"> </span> <div><h4 class="font-medium text-zinc-900 dark:text-white"> </h4> <p class="text-sm text-zinc-600 dark:text-zinc-400"> </p></div></div> <div class="text-right"><div class="text-lg font-bold text-zinc-900 dark:text-white"> </div> <!></div></div> <div class="grid grid-cols-2 gap-2"></div></div>`),Upgrade[FILENAME],[[205,14,[[209,16,[[210,18,[[211,20],[212,20,[[213,22],[216,22]]]]],[223,18,[[224,20]]]]],[233,16]]]]);var root_2=add_locations(from_html(`<div class="text-center mb-6"><div><span class="text-2xl"> </span></div> <h3 class="text-lg font-medium text-zinc-900 dark:text-white">Upgrade Your YAKKL Wallet</h3> <p class="mt-2 text-sm text-zinc-600 dark:text-zinc-400"> </p></div> <div class="bg-zinc-50 dark:bg-zinc-800 rounded-lg p-4 mb-6"><div class="flex items-center justify-between"><div><span class="text-sm font-medium text-zinc-900 dark:text-white">Current Plan:</span> <span class="ml-2 px-2 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 text-xs rounded-full"> </span></div> <!></div></div> <div class="space-y-4 mb-6"></div>`,1),Upgrade[FILENAME],[[169,10,[[170,12,[[171,14]]],[173,12],[176,12]]],[182,10,[[183,12,[[184,14,[[185,16],[186,16]]]]]]],[202,10]]);var root_9=add_locations(from_html(`<div class="flex items-center text-sm text-zinc-600 dark:text-zinc-400"><svg class="w-4 h-4 text-green-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path></svg> </div>`),Upgrade[FILENAME],[[277,14,[[278,16,[[279,18]]]]]]);var root_8=add_locations(from_html(`<div class="text-center mb-6"><div><span class="text-2xl"> </span></div> <h3 class="text-lg font-medium text-zinc-900 dark:text-white"> </h3> <p class="mt-2 text-sm text-zinc-600 dark:text-zinc-400">Review your plan selection</p></div> <div><div class="text-center"><div class="text-3xl font-bold mb-2"> </div> <div class="text-sm opacity-80"> </div></div></div> <div class="space-y-3 mb-6"><h4 class="font-medium text-zinc-900 dark:text-white">Included Features:</h4> <!></div>`,1),Upgrade[FILENAME],[[249,10,[[250,12,[[251,14]]],[253,12],[256,12]]],[262,10,[[263,12,[[264,14],[267,14]]]]],[274,10,[[275,12]]]]);var root_11=add_locations(from_html(`<div class="text-center"><div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-indigo-100 dark:bg-indigo-900 mb-4"><svg class="w-6 h-6 text-indigo-600 dark:text-indigo-400 animate-spin" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path></svg></div> <h3 class="text-lg font-medium text-zinc-900 dark:text-white mb-4">Processing Upgrade</h3> <div class="w-full max-w-md mx-auto mb-4"><div class="flex mb-2 items-center justify-between"><span class="text-xs font-semibold text-indigo-600 dark:text-indigo-400"> </span> <span class="text-xs font-semibold text-indigo-600 dark:text-indigo-400"> </span></div> <div class="overflow-hidden h-2 text-xs flex rounded bg-indigo-200 dark:bg-indigo-800"><div class="shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-indigo-500 transition-all duration-300"></div></div></div></div>`),Upgrade[FILENAME],[[288,10,[[289,12,[[290,14,[[291,16]]]]],[294,12],[299,12,[[300,14,[[301,16],[304,16]]],[308,14,[[309,16]]]]]]]]);var root_13=add_locations(from_html(`<div class="text-center"><div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100 dark:bg-green-900 mb-4"><svg class="w-6 h-6 text-green-600 dark:text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path></svg></div> <h3 class="text-lg font-medium text-zinc-900 dark:text-white mb-2">Upgrade Successful!</h3> <p class="text-sm text-zinc-600 dark:text-zinc-400 mb-4"> </p> <div class="text-xs text-zinc-500">Redirecting to your wallet...</div></div>`),Upgrade[FILENAME],[[319,10,[[320,12,[[321,14,[[322,16]]]]],[325,12],[328,12],[331,12]]]]);var root_14=add_locations(from_html(`<div class="flex justify-end space-x-3"><button class="px-4 py-2 text-sm font-medium text-zinc-700 dark:text-zinc-300 bg-white dark:bg-zinc-800 border border-zinc-300 dark:border-zinc-600 rounded-md hover:bg-zinc-50 dark:hover:bg-zinc-700">Cancel</button></div>`),Upgrade[FILENAME],[[339,10,[[340,12]]]]);var root_16=add_locations(from_html(`<div class="flex justify-between"><button class="px-4 py-2 text-sm font-medium text-zinc-700 dark:text-zinc-300 bg-white dark:bg-zinc-800 border border-zinc-300 dark:border-zinc-600 rounded-md hover:bg-zinc-50 dark:hover:bg-zinc-700">Back</button> <div class="space-x-3"><button class="px-4 py-2 text-sm font-medium text-zinc-700 dark:text-zinc-300 bg-white dark:bg-zinc-800 border border-zinc-300 dark:border-zinc-600 rounded-md hover:bg-zinc-50 dark:hover:bg-zinc-700">Cancel</button> <button class="px-4 py-2 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-md hover:bg-indigo-700">Upgrade Now</button></div></div>`),Upgrade[FILENAME],[[348,10,[[349,12],[355,12,[[356,14],[362,14]]]]]]);var root_1=add_locations(from_html(`<div class="fixed inset-0 z-50 overflow-y-auto"><div class="flex min-h-screen items-end justify-center px-4 pt-4 pb-20 text-center sm:block sm:p-0"><button class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-label="Close modal"></button> <div class="relative inline-block align-bottom bg-white dark:bg-zinc-900 rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-2xl sm:w-full sm:p-6"><!> <!></div></div></div>`),Upgrade[FILENAME],[[159,2,[[160,4,[[162,6],[165,6]]]]]]);function Upgrade($$anchor,$$props){check_target(new.target);push($$props,true,Upgrade);const[$$stores,$$cleanup]=setup_stores();const $currentPlan=()=>(validate_store(currentPlan,"currentPlan"),store_get(currentPlan,"$currentPlan",$$stores));const $isOnTrial=()=>(validate_store(isOnTrial,"isOnTrial"),store_get(isOnTrial,"$isOnTrial",$$stores));const $planStore=()=>(validate_store(planStore,"planStore"),store_get(planStore,"$planStore",$$stores));let show=prop($$props,"show",15,false),onComplete=prop($$props,"onComplete",3,()=>{}),onCancel=prop($$props,"onCancel",3,()=>{show(false)});prop($$props,"className",3,"");let plan=tag(user_derived($currentPlan),"plan");let trial=tag(user_derived($isOnTrial),"trial");let upgradeStep=tag(state("overview"),"upgradeStep");let isProcessing=tag(state(false),"isProcessing");let progress=tag(state(0),"progress");let selectedPlan=tag(state(proxy(PlanType.Pro)),"selectedPlan");let statusMessage=tag(state(""),"statusMessage");const planFeatures={[PlanType.Basic]:["Basic wallet functionality","Up to 3 accounts","Standard networks","Community support"],[PlanType.Pro]:["Unlimited accounts","Advanced analytics","Custom networks","Pro mods & extensions","Priority support","Early access features","Enhanced security","DeFi integrations","Portfolio tracking","Advanced trading tools"],[PlanType.Enterprise]:["Everything in Pro","Multi-signature support","White label solutions","Custom integrations","Dedicated support","SLA guarantees","Advanced compliance","Audit trails","Team management","Enterprise SSO"],[PlanType.Private]:["Everything in Enterprise","Maximum privacy features","Secure enclaves","Anonymous transactions","Private node access","Enhanced encryption","Compliance tools","Advanced forensics","Private cloud deployment"]};const planPricing={[PlanType.Basic]:{monthly:0,yearly:0},[PlanType.Pro]:{monthly:9.99,yearly:99.99},[PlanType.Enterprise]:{monthly:49.99,yearly:499.99},[PlanType.Private]:{monthly:199.99,yearly:1999.99}};const planColors={[PlanType.Basic]:"from-gray-500 to-gray-600",[PlanType.Pro]:"from-indigo-500 to-purple-600",[PlanType.Enterprise]:"from-yellow-500 to-orange-600",[PlanType.Private]:"from-red-500 to-pink-600"};function getAvailableUpgrades(){const plans=[PlanType.Basic,PlanType.Pro,PlanType.Enterprise,PlanType.Private];const currentIndex=plans.indexOf(get(plan));return plans.slice(currentIndex+1)}function formatPlanName(planType){return planType.replace(/_/g," ").split(" ").map(word=>word.charAt(0).toUpperCase()+word.slice(1).toLowerCase()).join(" ")}function getPlanIcon(planType){switch(planType){case PlanType.Basic:return"🌟";case PlanType.Pro:return"💎";case PlanType.Enterprise:return"🏢";case PlanType.Private:return"🔒";default:return"📦"}}async function processUpgrade(){set(upgradeStep,"processing");set(isProcessing,true);set(progress,0);set(statusMessage,"Initiating upgrade...");try{const steps=[{message:"Validating plan selection...",duration:1e3},{message:"Processing payment...",duration:2e3},{message:"Updating account permissions...",duration:1500},{message:"Enabling new features...",duration:1e3},{message:"Finalizing upgrade...",duration:500}];let totalDuration=steps.reduce((sum,step)=>sum+step.duration,0);let elapsed=0;for(const step of steps){set(statusMessage,step.message,true);const startProgress=elapsed/totalDuration*100;const endProgress=(elapsed+step.duration)/totalDuration*100;const progressInterval=setInterval(()=>{set(progress,Math.min(get(progress)+2,endProgress),true)},50);await new Promise(resolve=>setTimeout(resolve,step.duration));clearInterval(progressInterval);elapsed+=step.duration;set(progress,endProgress)}await planStore.upgradeTo(get(selectedPlan));set(upgradeStep,"success");set(progress,100);set(statusMessage,"Upgrade completed successfully!");setTimeout(()=>{onComplete()();show(false)},2e3)}catch(error){console.error(...log_if_contains_state("error","Upgrade failed:",error));set(statusMessage,"Upgrade failed. Please try again.");set(isProcessing,false);set(upgradeStep,"overview")}}function handleSelectPlan(planType){set(selectedPlan,planType,true);set(upgradeStep,"selecting")}var fragment=comment();var node=first_child(fragment);{var consequent_10=$$anchor2=>{var div=root_1();var div_1=child(div);var button=child(div_1);button.__click=[on_click,show];var div_2=sibling(button,2);var node_1=child(div_2);{var consequent_2=$$anchor3=>{var fragment_1=root_2();var div_3=first_child(fragment_1);var div_4=child(div_3);var span=child(div_4);var text=child(span,true);reset(span);reset(div_4);var p=sibling(div_4,4);var text_1=child(p);reset(p);reset(div_3);var div_5=sibling(div_3,2);var div_6=child(div_5);var div_7=child(div_6);var span_1=sibling(child(div_7),2);var text_2=child(span_1,true);reset(span_1);reset(div_7);var node_2=sibling(div_7,2);{var consequent=$$anchor4=>{var div_8=root_3();var div_9=sibling(child(div_8),2);var text_3=child(div_9,true);reset(div_9);reset(div_8);template_effect($0=>set_text(text_3,$0),[()=>$planStore().plan.trialEndsAt?new Date($planStore().plan.trialEndsAt).toLocaleDateString():"Soon"]);append($$anchor4,div_8)};if_block(node_2,$$render=>{if(get(trial))$$render(consequent)})}reset(div_6);reset(div_5);var div_10=sibling(div_5,2);each(div_10,21,getAvailableUpgrades,index,($$anchor4,planType)=>{var div_11=root_4();const pricing=user_derived(()=>planPricing[get(planType)]);get(pricing);div_11.__click=[on_click_1,handleSelectPlan,planType];var div_12=child(div_11);var div_13=child(div_12);var span_2=child(div_13);var text_4=child(span_2,true);reset(span_2);var div_14=sibling(span_2,2);var h4=child(div_14);var text_5=child(h4,true);reset(h4);var p_1=sibling(h4,2);var text_6=child(p_1);reset(p_1);reset(div_14);reset(div_13);var div_15=sibling(div_13,2);var div_16=child(div_15);var text_7=child(div_16,true);reset(div_16);var node_3=sibling(div_16,2);{var consequent_1=$$anchor5=>{var div_17=root_5();append($$anchor5,div_17)};if_block(node_3,$$render=>{if(get(pricing).monthly>0)$$render(consequent_1)})}reset(div_15);reset(div_12);var div_18=sibling(div_12,2);each(div_18,21,()=>planFeatures[get(planType)].slice(0,4),index,($$anchor5,feature)=>{var div_19=root_6();var text_8=sibling(child(div_19));reset(div_19);template_effect(()=>set_text(text_8,` ${get(feature)??""}`));append($$anchor5,div_19)});reset(div_18);reset(div_11);template_effect(($0,$1)=>{set_text(text_4,$0);set_text(text_5,$1);set_text(text_6,`Perfect for ${strict_equals(get(planType),PlanType.Pro)?"advanced users":strict_equals(get(planType),PlanType.Enterprise)?"businesses":"maximum privacy"}`);set_text(text_7,get(pricing).monthly>0?`$${get(pricing).monthly}`:"Free")},[()=>getPlanIcon(get(planType)),()=>formatPlanName(get(planType))]);append($$anchor4,div_11)});reset(div_10);template_effect(($0,$1)=>{set_class(div_4,1,`mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-gradient-to-br ${planColors[get(selectedPlan)]??""} mb-4`);set_text(text,$0);set_text(text_1,`${get(trial)?"Your trial is ending soon. ":""}Choose a plan that fits your needs`);set_text(text_2,$1)},[()=>getPlanIcon(get(selectedPlan)),()=>formatPlanName(get(plan))]);append($$anchor3,fragment_1)};var alternate=($$anchor3,$$elseif)=>{{var consequent_3=$$anchor4=>{var fragment_2=root_8();var div_20=first_child(fragment_2);var div_21=child(div_20);var span_3=child(div_21);var text_9=child(span_3,true);reset(span_3);reset(div_21);var h3=sibling(div_21,2);var text_10=child(h3);reset(h3);next(2);reset(div_20);var div_22=sibling(div_20,2);var div_23=child(div_22);var div_24=child(div_23);var text_11=child(div_24);reset(div_24);var div_25=sibling(div_24,2);var text_12=child(div_25);reset(div_25);reset(div_23);reset(div_22);var div_26=sibling(div_22,2);var node_4=sibling(child(div_26),2);each(node_4,17,()=>planFeatures[get(selectedPlan)],index,($$anchor5,feature)=>{var div_27=root_9();var text_13=sibling(child(div_27));reset(div_27);template_effect(()=>set_text(text_13,` ${get(feature)??""}`));append($$anchor5,div_27)});reset(div_26);template_effect(($0,$1)=>{set_class(div_21,1,`mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-gradient-to-br ${planColors[get(selectedPlan)]??""} mb-4`);set_text(text_9,$0);set_text(text_10,`${$1??""} Plan`);set_class(div_22,1,`bg-gradient-to-br ${planColors[get(selectedPlan)]??""} rounded-lg p-6 text-white mb-6`);set_text(text_11,`$${planPricing[get(selectedPlan)].monthly??""}/month`);set_text(text_12,`or $${planPricing[get(selectedPlan)].yearly??""}/year (save 17%)`)},[()=>getPlanIcon(get(selectedPlan)),()=>formatPlanName(get(selectedPlan))]);append($$anchor4,fragment_2)};var alternate_1=($$anchor4,$$elseif2)=>{{var consequent_4=$$anchor5=>{var div_28=root_11();var div_29=sibling(child(div_28),4);var div_30=child(div_29);var span_4=child(div_30);var text_14=child(span_4,true);reset(span_4);var span_5=sibling(span_4,2);var text_15=child(span_5);reset(span_5);reset(div_30);var div_31=sibling(div_30,2);var div_32=child(div_31);reset(div_31);reset(div_29);reset(div_28);template_effect($0=>{set_text(text_14,get(statusMessage));set_text(text_15,`${$0??""}%`);set_style(div_32,`width: ${get(progress)??""}%`)},[()=>Math.round(get(progress))]);append($$anchor5,div_28)};var alternate_2=($$anchor5,$$elseif3)=>{{var consequent_5=$$anchor6=>{var div_33=root_13();var p_2=sibling(child(div_33),4);var text_16=child(p_2);reset(p_2);next(2);reset(div_33);template_effect($0=>set_text(text_16,`Welcome to ${$0??""}! Your new features are now available.`),[()=>formatPlanName(get(selectedPlan))]);append($$anchor6,div_33)};if_block($$anchor5,$$render=>{if(strict_equals(get(upgradeStep),"success"))$$render(consequent_5)},$$elseif3)}};if_block($$anchor4,$$render=>{if(strict_equals(get(upgradeStep),"processing"))$$render(consequent_4);else $$render(alternate_2,false)},$$elseif2)}};if_block($$anchor3,$$render=>{if(strict_equals(get(upgradeStep),"selecting"))$$render(consequent_3);else $$render(alternate_1,false)},$$elseif)}};if_block(node_1,$$render=>{if(strict_equals(get(upgradeStep),"overview"))$$render(consequent_2);else $$render(alternate,false)})}var node_5=sibling(node_1,2);{var consequent_6=$$anchor3=>{var div_34=root_14();var button_1=child(div_34);button_1.__click=function(...$$args){apply(onCancel,this,$$args,Upgrade,[341,23])};reset(div_34);append($$anchor3,div_34)};var alternate_3=($$anchor3,$$elseif)=>{{var consequent_7=$$anchor4=>{var div_35=root_16();var button_2=child(div_35);button_2.__click=[goBack,upgradeStep];var div_36=sibling(button_2,2);var button_3=child(div_36);button_3.__click=function(...$$args){apply(onCancel,this,$$args,Upgrade,[357,25])};var button_4=sibling(button_3,2);button_4.__click=[confirmUpgrade,processUpgrade];reset(div_36);reset(div_35);append($$anchor4,div_35)};var alternate_4=($$anchor4,$$elseif2)=>{{var consequent_8=$$anchor5=>{};var alternate_5=($$anchor5,$$elseif3)=>{{var consequent_9=$$anchor6=>{};if_block($$anchor5,$$render=>{if(strict_equals(get(upgradeStep),"success"))$$render(consequent_9)},$$elseif3)}};if_block($$anchor4,$$render=>{if(strict_equals(get(upgradeStep),"processing"))$$render(consequent_8);else $$render(alternate_5,false)},$$elseif2)}};if_block($$anchor3,$$render=>{if(strict_equals(get(upgradeStep),"selecting"))$$render(consequent_7);else $$render(alternate_4,false)},$$elseif)}};if_block(node_5,$$render=>{if(strict_equals(get(upgradeStep),"overview"))$$render(consequent_6);else $$render(alternate_3,false)})}reset(div_2);reset(div_1);reset(div);append($$anchor2,div)};if_block(node,$$render=>{if(show())$$render(consequent_10)})}append($$anchor,fragment);var $$pop=pop({...legacy_api()});$$cleanup();return $$pop}delegate(["click"]);export{PlanType as P,Upgrade as U,currentPlan as a,isProUser as b,canUseFeature$1 as c,canUseFeature as d,plan_store as e,isOnTrial as i,planStore as p};
//# sourceMappingURL=CoXEMRXA.js.map
