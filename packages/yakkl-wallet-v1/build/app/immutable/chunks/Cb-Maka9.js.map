{"version":3,"file":"Cb-Maka9.js","sources":["../../../../../../src/routes/preview2/lib/stores/ui.store.ts"],"sourcesContent":["import { writable } from 'svelte/store';\n\ninterface UIState {\n  modals: {\n    send: boolean;\n    receive: boolean;\n    swap: boolean;\n    buy: boolean;\n    aiHelp: boolean;\n    settings: boolean;\n  };\n  theme: 'light' | 'dark' | 'auto';\n  sidebarCollapsed: boolean;\n  notifications: Notification[];\n  loading: {\n    global: boolean;\n    message?: string;\n  };\n}\n\ninterface Notification {\n  id: string;\n  type: 'success' | 'error' | 'warning' | 'info';\n  title: string;\n  message: string;\n  timestamp: number;\n  duration?: number; // Auto-dismiss time in ms\n  actions?: Array<{\n    label: string;\n    action: () => void;\n  }>;\n}\n\nfunction createUIStore() {\n  const { subscribe, set, update } = writable<UIState>({\n    modals: {\n      send: false,\n      receive: false,\n      swap: false,\n      buy: false,\n      aiHelp: false,\n      settings: false\n    },\n    theme: 'auto',\n    sidebarCollapsed: false,\n    notifications: [],\n    loading: {\n      global: false\n    }\n  });\n\n  return {\n    subscribe,\n    \n    // Modal management\n    openModal(modal: keyof UIState['modals']) {\n      update(state => ({\n        ...state,\n        modals: {\n          ...state.modals,\n          [modal]: true\n        }\n      }));\n    },\n\n    closeModal(modal: keyof UIState['modals']) {\n      update(state => ({\n        ...state,\n        modals: {\n          ...state.modals,\n          [modal]: false\n        }\n      }));\n    },\n\n    closeAllModals() {\n      update(state => ({\n        ...state,\n        modals: {\n          send: false,\n          receive: false,\n          swap: false,\n          buy: false,\n          aiHelp: false,\n          settings: false\n        }\n      }));\n    },\n\n    // Theme management\n    setTheme(theme: 'light' | 'dark' | 'auto') {\n      update(state => ({\n        ...state,\n        theme\n      }));\n      \n      // Apply theme to document\n      this.applyTheme(theme);\n    },\n\n    applyTheme(theme: 'light' | 'dark' | 'auto') {\n      const root = document.documentElement;\n      \n      if (theme === 'auto') {\n        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n        root.classList.toggle('dark', prefersDark);\n      } else {\n        root.classList.toggle('dark', theme === 'dark');\n      }\n    },\n\n    // Notification management\n    addNotification(notification: Omit<Notification, 'id' | 'timestamp'>) {\n      const id = `notif_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      const newNotification: Notification = {\n        ...notification,\n        id,\n        timestamp: Date.now()\n      };\n\n      update(state => ({\n        ...state,\n        notifications: [...state.notifications, newNotification]\n      }));\n\n      // Auto-dismiss if duration is set\n      if (notification.duration) {\n        setTimeout(() => {\n          this.removeNotification(id);\n        }, notification.duration);\n      }\n\n      return id;\n    },\n\n    removeNotification(id: string) {\n      update(state => ({\n        ...state,\n        notifications: state.notifications.filter(n => n.id !== id)\n      }));\n    },\n\n    clearAllNotifications() {\n      update(state => ({\n        ...state,\n        notifications: []\n      }));\n    },\n\n    // Loading management\n    setGlobalLoading(loading: boolean, message?: string) {\n      update(state => ({\n        ...state,\n        loading: {\n          global: loading,\n          message\n        }\n      }));\n    },\n\n    // Sidebar management\n    toggleSidebar() {\n      update(state => ({\n        ...state,\n        sidebarCollapsed: !state.sidebarCollapsed\n      }));\n    },\n\n    setSidebarCollapsed(collapsed: boolean) {\n      update(state => ({\n        ...state,\n        sidebarCollapsed: collapsed\n      }));\n    },\n\n    // Success/Error helpers\n    showSuccess(title: string, message: string, duration: number = 5000) {\n      return this.addNotification({\n        type: 'success',\n        title,\n        message,\n        duration\n      });\n    },\n\n    showError(title: string, message: string, duration?: number) {\n      return this.addNotification({\n        type: 'error',\n        title,\n        message,\n        duration // No auto-dismiss for errors by default\n      });\n    },\n\n    showWarning(title: string, message: string, duration: number = 8000) {\n      return this.addNotification({\n        type: 'warning',\n        title,\n        message,\n        duration\n      });\n    },\n\n    showInfo(title: string, message: string, duration: number = 6000) {\n      return this.addNotification({\n        type: 'info',\n        title,\n        message,\n        duration\n      });\n    },\n\n    // Transaction feedback helpers\n    showTransactionPending(txHash: string) {\n      return this.addNotification({\n        type: 'info',\n        title: 'Transaction Sent',\n        message: `Transaction pending: ${txHash.slice(0, 10)}...`,\n        actions: [\n          {\n            label: 'View on Explorer',\n            action: () => {\n              // Open block explorer\n              window.open(`https://etherscan.io/tx/${txHash}`, '_blank');\n            }\n          }\n        ]\n      });\n    },\n\n    showTransactionSuccess(txHash: string) {\n      return this.addNotification({\n        type: 'success',\n        title: 'Transaction Confirmed',\n        message: `Transaction successful: ${txHash.slice(0, 10)}...`,\n        duration: 8000,\n        actions: [\n          {\n            label: 'View on Explorer',\n            action: () => {\n              window.open(`https://etherscan.io/tx/${txHash}`, '_blank');\n            }\n          }\n        ]\n      });\n    },\n\n    showTransactionFailed(txHash: string) {\n      return this.addNotification({\n        type: 'error',\n        title: 'Transaction Failed',\n        message: `Transaction failed: ${txHash.slice(0, 10)}...`,\n        actions: [\n          {\n            label: 'View on Explorer',\n            action: () => {\n              window.open(`https://etherscan.io/tx/${txHash}`, '_blank');\n            }\n          }\n        ]\n      });\n    }\n  };\n}\n\nexport const uiStore = createUIStore();\n\n// Derived stores for specific UI elements\nexport const modals = {\n  send: { subscribe: (callback: (value: boolean) => void) => uiStore.subscribe(state => callback(state.modals.send)) },\n  receive: { subscribe: (callback: (value: boolean) => void) => uiStore.subscribe(state => callback(state.modals.receive)) },\n  swap: { subscribe: (callback: (value: boolean) => void) => uiStore.subscribe(state => callback(state.modals.swap)) },\n  buy: { subscribe: (callback: (value: boolean) => void) => uiStore.subscribe(state => callback(state.modals.buy)) },\n  aiHelp: { subscribe: (callback: (value: boolean) => void) => uiStore.subscribe(state => callback(state.modals.aiHelp)) },\n  settings: { subscribe: (callback: (value: boolean) => void) => uiStore.subscribe(state => callback(state.modals.settings)) }\n};"],"names":["createUIStore","subscribe","set","update","writable","modals","send","receive","swap","buy","aiHelp","settings","theme","sidebarCollapsed","notifications","loading","global","openModal","modal","state","closeModal","closeAllModals","setTheme","this","applyTheme","root","document","documentElement","prefersDark","window","matchMedia","matches","classList","toggle","addNotification","notification","id","Date","now","Math","random","toString","substr","newNotification","timestamp","duration","setTimeout","removeNotification","filter","n","clearAllNotifications","setGlobalLoading","message","toggleSidebar","setSidebarCollapsed","collapsed","showSuccess","title","type","showError","showWarning","showInfo","showTransactionPending","txHash","slice","actions","label","action","open","showTransactionSuccess","showTransactionFailed","uiStore"],"mappings":"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"}