import{p as push,s as store_get,a as push_element,b as pop_element,v as ensure_array_like,f as attr_class,g as stringify,e as escape_html,u as unsubscribe_stores,k as bind_props,c as pop}from"./index2.js";import{d as derived,w as writable}from"./index.js";import{d as getSettings}from"./encryption.js";import{F as FILENAME}from"./utils.js";var PlanType=(PlanType2=>{PlanType2["Basic"]="basic_member";PlanType2["Pro"]="yakkl_pro";PlanType2["Enterprise"]="enterprise";PlanType2["Private"]="yakkl_private";return PlanType2})(PlanType||{});const BASIC_FEATURES=["view_balance","send_tokens","receive_tokens","swap_tokens","buy_crypto","sell_crypto","view_transactions","basic_security","import_wallet","export_keys","hardware_wallet","basic_tokens","basic_networks","basic_features"];const PRO_FEATURES=[...BASIC_FEATURES,"advanced_analytics","portfolio_tracking","price_alerts","ai_assistant","staking","yield_farming","all_tokens","testnet_access","priority_support","bulk_transactions","api_access","custom_rpc","advanced_security","multi_sig"];const ENTERPRISE_FEATURES=[...PRO_FEATURES,"white_label","custom_branding","dedicated_support","custom_features"];const PRIVATE_FEATURES=[...ENTERPRISE_FEATURES,"private_key_backup","secure_recovery","air_gapped_signing","hardware_integration","zero_knowledge_proofs"];const PAYMENT_FEATURES=["buy_crypto_card","buy_crypto_bank","crypto_payment","subscription_management"];const FEATURES={[PlanType.Basic]:BASIC_FEATURES,[PlanType.Pro]:PRO_FEATURES,[PlanType.Enterprise]:ENTERPRISE_FEATURES,[PlanType.Private]:PRIVATE_FEATURES,PAYMENT:PAYMENT_FEATURES};const PLAN_FEATURES={BASIC:BASIC_FEATURES,PRO:PRO_FEATURES,ENTERPRISE:ENTERPRISE_FEATURES,PRIVATE:PRIVATE_FEATURES};function hasFeature(userPlan,feature){const planFeatures=FEATURES[userPlan];return planFeatures?.includes(feature)??false}function getFeaturesForPlan(plan){return FEATURES[plan]??FEATURES[PlanType.Basic]}function isTrialUser(trialEndsAt){if(!trialEndsAt)return false;return new Date(trialEndsAt)>new Date}function createPlanStore(){const{subscribe:subscribe,set:set,update:update}=writable({plan:{type:PlanType.Basic,features:getFeaturesForPlan(PlanType.Basic)},loading:false});return{subscribe:subscribe,async loadPlan(){update(state=>({...state,loading:true}));try{const settings=await getSettings();const planType=settings?.plan?.type||PlanType.Basic;const trialEndsAt=settings?.plan?.trialEndsAt;const onTrial=isTrialUser(trialEndsAt);const effectivePlan=onTrial?PlanType.Pro:planType;set({plan:{type:effectivePlan,trialEndsAt:trialEndsAt,subscriptionId:settings?.plan?.subscriptionId,features:getFeaturesForPlan(effectivePlan)},loading:false})}catch(error){set({plan:{type:PlanType.Basic,features:getFeaturesForPlan(PlanType.Basic)},loading:false})}},canUseFeature(feature){let planState={plan:{type:PlanType.Basic}};subscribe(state=>{planState=state})();return hasFeature(planState.plan.type,feature)},async upgradeTo(newPlan){update(state=>({...state,loading:true}));try{await new Promise(resolve=>setTimeout(resolve,1e3));const settings=await getSettings();if(settings){const updatedSettings={...settings,plan:{...settings.plan,type:newPlan,trialEndsAt:null,subscriptionId:`sub_${Date.now()}`,updatedAt:(new Date).toISOString()}};localStorage.setItem("yakkl:plan",JSON.stringify({type:newPlan,subscriptionId:updatedSettings.plan.subscriptionId,upgradedAt:updatedSettings.plan.updatedAt}))}update(state=>({...state,plan:{type:newPlan,features:getFeaturesForPlan(newPlan),subscriptionId:`sub_${Date.now()}`,trialEndsAt:null},loading:false}));console.log(`✅ Successfully upgraded to ${newPlan}`)}catch(error){console.error("Upgrade failed:",error);update(state=>({...state,loading:false}));throw error}},async downgradeTo(newPlan){update(state=>({...state,loading:true}));try{await new Promise(resolve=>setTimeout(resolve,1e3));update(state=>({...state,plan:{type:newPlan,features:getFeaturesForPlan(newPlan),subscriptionId:null,trialEndsAt:null},loading:false}))}catch(error){console.error("Downgrade failed:",error);update(state=>({...state,loading:false}));throw error}},async startTrial(trialDays=14){update(state=>({...state,loading:true}));try{const trialEndsAt=new Date;trialEndsAt.setDate(trialEndsAt.getDate()+trialDays);update(state=>({...state,plan:{type:PlanType.Pro,features:getFeaturesForPlan(PlanType.Pro),trialEndsAt:trialEndsAt.toISOString(),subscriptionId:null},loading:false}));console.log(`✅ Started ${trialDays}-day trial`)}catch(error){console.error("Failed to start trial:",error);update(state=>({...state,loading:false}));throw error}},getUpgradeOptions(currentPlan2){const plans=[PlanType.Basic,PlanType.Pro,PlanType.Enterprise,PlanType.Private];const currentIndex=plans.indexOf(currentPlan2);return plans.slice(currentIndex+1)},getPlanStatus(){let planState={plan:{type:PlanType.Basic}};subscribe(state=>{planState=state})();const trialActive=isTrialUser(planState.plan.trialEndsAt);const hasSubscription=!!planState.plan.subscriptionId;return{current:planState.plan.type,onTrial:trialActive,hasSubscription:hasSubscription,canUpgrade:planState.plan.type!==PlanType.Private,trialEndsAt:planState.plan.trialEndsAt}},reset(){set({plan:{type:PlanType.Basic,features:getFeaturesForPlan(PlanType.Basic)},loading:false})}}}const planStore=createPlanStore();const currentPlan=derived(planStore,$store=>$store.plan.type);const isProUser=derived(planStore,$store=>$store.plan.type===PlanType.Pro||$store.plan.type===PlanType.Enterprise);const isOnTrial=derived(planStore,$store=>isTrialUser($store.plan.trialEndsAt));derived(planStore,$store=>$store.plan.features);function canUseFeature$1(feature){return planStore.canUseFeature(feature)}const plan_store=Object.freeze(Object.defineProperty({__proto__:null,canUseFeature:canUseFeature$1,currentPlan:currentPlan,isOnTrial:isOnTrial,isProUser:isProUser,planStore:planStore},Symbol.toStringTag,{value:"Module"}));class Logger{prefix;constructor(prefix="[YAKKL]"){this.prefix=prefix}debug(...args){}info(...args){}warn(...args){console.warn(this.prefix,...args)}error(...args){console.error(this.prefix,...args)}child(childPrefix){return new Logger(`${this.prefix} ${childPrefix}`)}}const log=new Logger;class FeatureManager{currentPlan=PlanType.Basic;enabledFeatures=new Set;constructor(){this.updateFeatures()}setPlan(plan){if(this.currentPlan!==plan){this.currentPlan=plan;this.updateFeatures();log.debug(`Plan updated to: ${plan}`)}}canUse(feature){return this.enabledFeatures.has(feature)}getEnabledFeatures(){return Array.from(this.enabledFeatures)}getCurrentPlan(){return this.currentPlan}hasAccess(requiredPlan){const planHierarchy={[PlanType.Basic]:0,[PlanType.Pro]:1,[PlanType.Enterprise]:2,[PlanType.Private]:3};const currentLevel=planHierarchy[this.currentPlan];const requiredLevel=planHierarchy[requiredPlan];return currentLevel>=requiredLevel}updateFeatures(){this.enabledFeatures.clear();const planFeatures=this.getPlanFeatures(this.currentPlan);planFeatures.forEach(feature=>this.enabledFeatures.add(feature))}getPlanFeatures(plan){switch(plan){case PlanType.Basic:return PLAN_FEATURES.BASIC;case PlanType.Pro:return PLAN_FEATURES.PRO;case PlanType.Enterprise:return PLAN_FEATURES.ENTERPRISE;case PlanType.Private:return PLAN_FEATURES.PRIVATE;default:log.warn(`Unknown plan type: ${plan}, defaulting to Basic`);return PLAN_FEATURES.BASIC}}}const featureManager=new FeatureManager;const canUseFeature=feature=>featureManager.canUse(feature);Upgrade[FILENAME]="src/routes/preview2/lib/components/Upgrade.svelte";function Upgrade($$payload,$$props){push(Upgrade);var $$store_subs;let{show:show=false,onComplete:onComplete=()=>{},onCancel:onCancel=()=>{show=false},className:className=""}=$$props;let plan=store_get($$store_subs??={},"$currentPlan",currentPlan);let trial=store_get($$store_subs??={},"$isOnTrial",isOnTrial);let selectedPlan=PlanType.Pro;const planFeatures={[PlanType.Basic]:["Basic wallet functionality","Up to 3 accounts","Standard networks","Community support"],[PlanType.Pro]:["Unlimited accounts","Advanced analytics","Custom networks","Pro mods & extensions","Priority support","Early access features","Enhanced security","DeFi integrations","Portfolio tracking","Advanced trading tools"],[PlanType.Enterprise]:["Everything in Pro","Multi-signature support","White label solutions","Custom integrations","Dedicated support","SLA guarantees","Advanced compliance","Audit trails","Team management","Enterprise SSO"],[PlanType.Private]:["Everything in Enterprise","Maximum privacy features","Secure enclaves","Anonymous transactions","Private node access","Enhanced encryption","Compliance tools","Advanced forensics","Private cloud deployment"]};const planPricing={[PlanType.Basic]:{monthly:0,yearly:0},[PlanType.Pro]:{monthly:9.99,yearly:99.99},[PlanType.Enterprise]:{monthly:49.99,yearly:499.99},[PlanType.Private]:{monthly:199.99,yearly:1999.99}};const planColors={[PlanType.Basic]:"from-gray-500 to-gray-600",[PlanType.Pro]:"from-indigo-500 to-purple-600",[PlanType.Enterprise]:"from-yellow-500 to-orange-600",[PlanType.Private]:"from-red-500 to-pink-600"};function getAvailableUpgrades(){const plans=[PlanType.Basic,PlanType.Pro,PlanType.Enterprise,PlanType.Private];const currentIndex=plans.indexOf(plan);return plans.slice(currentIndex+1)}function formatPlanName(planType){return planType.replace(/_/g," ").split(" ").map(word=>word.charAt(0).toUpperCase()+word.slice(1).toLowerCase()).join(" ")}function getPlanIcon(planType){switch(planType){case PlanType.Basic:return"🌟";case PlanType.Pro:return"💎";case PlanType.Enterprise:return"🏢";case PlanType.Private:return"🔒";default:return"📦"}}if(show){$$payload.out+="\x3c!--[--\x3e";$$payload.out+=`<div class="fixed inset-0 z-50 overflow-y-auto">`;push_element($$payload,"div",159,2);$$payload.out+=`<div class="flex min-h-screen items-end justify-center px-4 pt-4 pb-20 text-center sm:block sm:p-0">`;push_element($$payload,"div",160,4);$$payload.out+=`<button class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-label="Close modal">`;push_element($$payload,"button",162,6);$$payload.out+=`</button>`;pop_element();$$payload.out+=` <div class="relative inline-block align-bottom bg-white dark:bg-zinc-900 rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-2xl sm:w-full sm:p-6">`;push_element($$payload,"div",165,6);{$$payload.out+="\x3c!--[--\x3e";const each_array=ensure_array_like(getAvailableUpgrades());$$payload.out+=`<div class="text-center mb-6">`;push_element($$payload,"div",169,10);$$payload.out+=`<div${attr_class(`mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-gradient-to-br ${stringify(planColors[selectedPlan])} mb-4`)}>`;push_element($$payload,"div",170,12);$$payload.out+=`<span class="text-2xl">`;push_element($$payload,"span",171,14);$$payload.out+=`${escape_html(getPlanIcon(selectedPlan))}</span>`;pop_element();$$payload.out+=`</div>`;pop_element();$$payload.out+=` <h3 class="text-lg font-medium text-zinc-900 dark:text-white">`;push_element($$payload,"h3",173,12);$$payload.out+=`Upgrade Your YAKKL Wallet</h3>`;pop_element();$$payload.out+=` <p class="mt-2 text-sm text-zinc-600 dark:text-zinc-400">`;push_element($$payload,"p",176,12);$$payload.out+=`${escape_html(trial?"Your trial is ending soon. ":"")}Choose a plan that fits your needs</p>`;pop_element();$$payload.out+=`</div>`;pop_element();$$payload.out+=` <div class="bg-zinc-50 dark:bg-zinc-800 rounded-lg p-4 mb-6">`;push_element($$payload,"div",182,10);$$payload.out+=`<div class="flex items-center justify-between">`;push_element($$payload,"div",183,12);$$payload.out+=`<div>`;push_element($$payload,"div",184,14);$$payload.out+=`<span class="text-sm font-medium text-zinc-900 dark:text-white">`;push_element($$payload,"span",185,16);$$payload.out+=`Current Plan:</span>`;pop_element();$$payload.out+=` <span class="ml-2 px-2 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 text-xs rounded-full">`;push_element($$payload,"span",186,16);$$payload.out+=`${escape_html(formatPlanName(plan))}</span>`;pop_element();$$payload.out+=`</div>`;pop_element();$$payload.out+=` `;if(trial){$$payload.out+="\x3c!--[--\x3e";$$payload.out+=`<div class="text-right">`;push_element($$payload,"div",191,16);$$payload.out+=`<span class="text-xs text-orange-600 dark:text-orange-400">`;push_element($$payload,"span",192,18);$$payload.out+=`Trial</span>`;pop_element();$$payload.out+=` <div class="text-xs text-zinc-500">`;push_element($$payload,"div",193,18);$$payload.out+=`${escape_html(store_get($$store_subs??={},"$planStore",planStore).plan.trialEndsAt?new Date(store_get($$store_subs??={},"$planStore",planStore).plan.trialEndsAt).toLocaleDateString():"Soon")}</div>`;pop_element();$$payload.out+=`</div>`;pop_element()}else{$$payload.out+="\x3c!--[!--\x3e"}$$payload.out+=`\x3c!--]--\x3e</div>`;pop_element();$$payload.out+=`</div>`;pop_element();$$payload.out+=` <div class="space-y-4 mb-6">`;push_element($$payload,"div",202,10);$$payload.out+=`\x3c!--[--\x3e`;for(let $$index_1=0,$$length=each_array.length;$$index_1<$$length;$$index_1++){let planType=each_array[$$index_1];const pricing=planPricing[planType];const each_array_1=ensure_array_like(planFeatures[planType].slice(0,4));$$payload.out+=`<div class="border border-zinc-200 dark:border-zinc-700 rounded-lg p-4 hover:border-indigo-300 dark:hover:border-indigo-600 cursor-pointer transition-colors">`;push_element($$payload,"div",205,14);$$payload.out+=`<div class="flex items-center justify-between mb-3">`;push_element($$payload,"div",209,16);$$payload.out+=`<div class="flex items-center">`;push_element($$payload,"div",210,18);$$payload.out+=`<span class="text-2xl mr-3">`;push_element($$payload,"span",211,20);$$payload.out+=`${escape_html(getPlanIcon(planType))}</span>`;pop_element();$$payload.out+=` <div>`;push_element($$payload,"div",212,20);$$payload.out+=`<h4 class="font-medium text-zinc-900 dark:text-white">`;push_element($$payload,"h4",213,22);$$payload.out+=`${escape_html(formatPlanName(planType))}</h4>`;pop_element();$$payload.out+=` <p class="text-sm text-zinc-600 dark:text-zinc-400">`;push_element($$payload,"p",216,22);$$payload.out+=`Perfect for ${escape_html(planType===PlanType.Pro?"advanced users":planType===PlanType.Enterprise?"businesses":"maximum privacy")}</p>`;pop_element();$$payload.out+=`</div>`;pop_element();$$payload.out+=`</div>`;pop_element();$$payload.out+=` <div class="text-right">`;push_element($$payload,"div",223,18);$$payload.out+=`<div class="text-lg font-bold text-zinc-900 dark:text-white">`;push_element($$payload,"div",224,20);$$payload.out+=`${escape_html(pricing.monthly>0?`$${pricing.monthly}`:"Free")}</div>`;pop_element();$$payload.out+=` `;if(pricing.monthly>0){$$payload.out+="\x3c!--[--\x3e";$$payload.out+=`<div class="text-xs text-zinc-500">`;push_element($$payload,"div",228,22);$$payload.out+=`/month</div>`;pop_element()}else{$$payload.out+="\x3c!--[!--\x3e"}$$payload.out+=`\x3c!--]--\x3e</div>`;pop_element();$$payload.out+=`</div>`;pop_element();$$payload.out+=` <div class="grid grid-cols-2 gap-2">`;push_element($$payload,"div",233,16);$$payload.out+=`\x3c!--[--\x3e`;for(let $$index=0,$$length2=each_array_1.length;$$index<$$length2;$$index++){let feature=each_array_1[$$index];$$payload.out+=`<div class="flex items-center text-sm text-zinc-600 dark:text-zinc-400">`;push_element($$payload,"div",235,20);$$payload.out+=`<svg class="w-4 h-4 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">`;push_element($$payload,"svg",236,22);$$payload.out+=`<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7">`;push_element($$payload,"path",237,24);$$payload.out+=`</path>`;pop_element();$$payload.out+=`</svg>`;pop_element();$$payload.out+=` ${escape_html(feature)}</div>`;pop_element()}$$payload.out+=`\x3c!--]--\x3e</div>`;pop_element();$$payload.out+=`</div>`;pop_element()}$$payload.out+=`\x3c!--]--\x3e</div>`;pop_element()}$$payload.out+=`\x3c!--]--\x3e `;{$$payload.out+="\x3c!--[--\x3e";$$payload.out+=`<div class="flex justify-end space-x-3">`;push_element($$payload,"div",339,10);$$payload.out+=`<button class="px-4 py-2 text-sm font-medium text-zinc-700 dark:text-zinc-300 bg-white dark:bg-zinc-800 border border-zinc-300 dark:border-zinc-600 rounded-md hover:bg-zinc-50 dark:hover:bg-zinc-700">`;push_element($$payload,"button",340,12);$$payload.out+=`Cancel</button>`;pop_element();$$payload.out+=`</div>`;pop_element()}$$payload.out+=`\x3c!--]--\x3e</div>`;pop_element();$$payload.out+=`</div>`;pop_element();$$payload.out+=`</div>`;pop_element()}else{$$payload.out+="\x3c!--[!--\x3e"}$$payload.out+=`\x3c!--]--\x3e`;if($$store_subs)unsubscribe_stores($$store_subs);bind_props($$props,{show:show});pop()}Upgrade.render=function(){throw new Error("Component.render(...) is no longer valid in Svelte 5. See https://svelte.dev/docs/svelte/v5-migration-guide#Components-are-no-longer-classes for more information")};export{PlanType as P,Upgrade as U,currentPlan as a,isProUser as b,canUseFeature$1 as c,canUseFeature as d,plan_store as e,isOnTrial as i,planStore as p};
//# sourceMappingURL=Upgrade2.js.map
