{"version":3,"file":"utilities.js","sources":["../../../../src/lib/utilities/map.ts","../../../../src/lib/utilities/utilities.ts"],"sourcesContent":["// Current codes\nexport const map = {\n\tAD: 'EUR',\n\tAE: 'AED',\n\tAF: 'AFN',\n\tAG: 'XCD',\n\tAI: 'XCD',\n\tAL: 'ALL',\n\tAM: 'AMD',\n\tAO: 'AOA',\n\tAR: 'ARS',\n\tAS: 'USD',\n\tAT: 'EUR',\n\tAU: 'AUD',\n\tAW: 'AWG',\n\tAX: 'EUR',\n\tAZ: 'AZN',\n\tBA: 'BAM',\n\tBB: 'BBD',\n\tBD: 'BDT',\n\tBE: 'EUR',\n\tBF: 'XOF',\n\tBG: 'BGN',\n\tBH: 'BHD',\n\tBI: 'BIF',\n\tBJ: 'XOF',\n\tBL: 'EUR',\n\tBM: 'BMD',\n\tBN: 'BND',\n\tBO: 'BOB',\n\tBQ: 'USD',\n\tBR: 'BRL',\n\tBS: 'BSD',\n\tBT: 'BTN',\n\tBV: 'NOK',\n\tBW: 'BWP',\n\tBY: 'BYN',\n\tBZ: 'BZD',\n\tCA: 'CAD',\n\tCC: 'AUD',\n\tCD: 'CDF',\n\tCF: 'XAF',\n\tCG: 'XAF',\n\tCH: 'CHF',\n\tCI: 'XOF',\n\tCK: 'NZD',\n\tCL: 'CLP',\n\tCM: 'XAF',\n\tCN: 'CNY',\n\tCO: 'COP',\n\tCR: 'CRC',\n\tCU: 'CUP',\n\tCV: 'CVE',\n\tCW: 'ANG',\n\tCX: 'AUD',\n\tCY: 'EUR',\n\tCZ: 'CZK',\n\tDE: 'EUR',\n\tDJ: 'DJF',\n\tDK: 'DKK',\n\tDM: 'XCD',\n\tDO: 'DOP',\n\tDZ: 'DZD',\n\tEC: 'USD',\n\tEE: 'EUR',\n\tEG: 'EGP',\n\tEH: 'MAD',\n\tER: 'ERN',\n\tES: 'EUR',\n\tET: 'ETB',\n\tFI: 'EUR',\n\tFJ: 'FJD',\n\tFK: 'FKP',\n\tFM: 'USD',\n\tFO: 'DKK',\n\tFR: 'EUR',\n\tGA: 'XAF',\n\tGB: 'GBP',\n\tGD: 'XCD',\n\tGE: 'GEL',\n\tGF: 'EUR',\n\tGG: 'GBP',\n\tGH: 'GHS',\n\tGI: 'GIP',\n\tGL: 'DKK',\n\tGM: 'GMD',\n\tGN: 'GNF',\n\tGP: 'EUR',\n\tGQ: 'XAF',\n\tGR: 'EUR',\n\tGS: 'GBP',\n\tGT: 'GTQ',\n\tGU: 'USD',\n\tGW: 'XOF',\n\tGY: 'GYD',\n\tHK: 'HKD',\n\tHM: 'AUD',\n\tHN: 'HNL',\n\tHR: 'HRK',\n\tHT: 'HTG',\n\tHU: 'HUF',\n\tID: 'IDR',\n\tIE: 'EUR',\n\tIL: 'ILS',\n\tIM: 'GBP',\n\tIN: 'INR',\n\tIO: 'USD',\n\tIQ: 'IQD',\n\tIR: 'IRR',\n\tIS: 'ISK',\n\tIT: 'EUR',\n\tJE: 'GBP',\n\tJM: 'JMD',\n\tJO: 'JOD',\n\tJP: 'JPY',\n\tKE: 'KES',\n\tKG: 'KGS',\n\tKH: 'KHR',\n\tKI: 'AUD',\n\tKM: 'KMF',\n\tKN: 'XCD',\n\tKP: 'KPW',\n\tKR: 'KRW',\n\tKW: 'KWD',\n\tKY: 'KYD',\n\tKZ: 'KZT',\n\tLA: 'LAK',\n\tLB: 'LBP',\n\tLC: 'XCD',\n\tLI: 'CHF',\n\tLK: 'LKR',\n\tLR: 'LRD',\n\tLS: 'LSL',\n\tLT: 'EUR',\n\tLU: 'EUR',\n\tLV: 'EUR',\n\tLY: 'LYD',\n\tMA: 'MAD',\n\tMC: 'EUR',\n\tMD: 'MDL',\n\tME: 'EUR',\n\tMF: 'EUR',\n\tMG: 'MGA',\n\tMH: 'USD',\n\tMK: 'MKD',\n\tML: 'XOF',\n\tMM: 'MMK',\n\tMN: 'MNT',\n\tMO: 'MOP',\n\tMP: 'USD',\n\tMQ: 'EUR',\n\tMR: 'MRO',\n\tMS: 'XCD',\n\tMT: 'EUR',\n\tMU: 'MUR',\n\tMV: 'MVR',\n\tMW: 'MWK',\n\tMX: 'MXN',\n\tMY: 'MYR',\n\tMZ: 'MZN',\n\tNA: 'NAD',\n\tNC: 'XPF',\n\tNE: 'XOF',\n\tNF: 'AUD',\n\tNG: 'NGN',\n\tNI: 'NIO',\n\tNL: 'EUR',\n\tNO: 'NOK',\n\tNP: 'NPR',\n\tNR: 'AUD',\n\tNU: 'NZD',\n\tNZ: 'NZD',\n\tOM: 'OMR',\n\tPA: 'PAB',\n\tPE: 'PEN',\n\tPF: 'XPF',\n\tPG: 'PGK',\n\tPH: 'PHP',\n\tPK: 'PKR',\n\tPL: 'PLN',\n\tPM: 'EUR',\n\tPN: 'NZD',\n\tPR: 'USD',\n\tPS: 'ILS',\n\tPT: 'EUR',\n\tPW: 'USD',\n\tPY: 'PYG',\n\tQA: 'QAR',\n\tRE: 'EUR',\n\tRO: 'RON',\n\tRS: 'RSD',\n\tRU: 'RUB',\n\tRW: 'RWF',\n\tSA: 'SAR',\n\tSB: 'SBD',\n\tSC: 'SCR',\n\tSD: 'SDG',\n\tSE: 'SEK',\n\tSG: 'SGD',\n\tSH: 'SHP',\n\tSI: 'EUR',\n\tSJ: 'NOK',\n\tSK: 'EUR',\n\tSL: 'SLL',\n\tSM: 'EUR',\n\tSN: 'XOF',\n\tSO: 'SOS',\n\tSR: 'SRD',\n\tST: 'STD',\n\tSV: 'SVC',\n\tSX: 'ANG',\n\tSY: 'SYP',\n\tSZ: 'SZL',\n\tTC: 'USD',\n\tTD: 'XAF',\n\tTF: 'EUR',\n\tTG: 'XOF',\n\tTH: 'THB',\n\tTJ: 'TJS',\n\tTK: 'NZD',\n\tTL: 'USD',\n\tTM: 'TMT',\n\tTN: 'TND',\n\tTO: 'TOP',\n\tTR: 'TRY',\n\tTT: 'TTD',\n\tTV: 'AUD',\n\tTW: 'TWD',\n\tTZ: 'TZS',\n\tUA: 'UAH',\n\tUG: 'UGX',\n\tUM: 'USD',\n\tUS: 'USD',\n\tUY: 'UYU',\n\tUZ: 'UZS',\n\tVA: 'EUR',\n\tVC: 'XCD',\n\tVE: 'VEF',\n\tVG: 'USD',\n\tVI: 'USD',\n\tVN: 'VND',\n\tVU: 'VUV',\n\tWF: 'XPF',\n\tWS: 'WST',\n\tYE: 'YER',\n\tYT: 'EUR',\n\tZA: 'ZAR',\n\tZM: 'ZMW',\n\tZW: 'ZWL'\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-ts-comment */\n\n/* eslint-disable no-debugger */\nimport { get } from 'svelte/store';\nimport ClipboardJS from 'clipboard'; // 'clipboard?client'\nimport {\n\tPLATFORM_TYPES,\n\tDEFAULT_UPGRADE_LABEL,\n\tYAKKL_FEE_BASIS_POINTS_DIVISOR,\n\tTIMELINES\n} from '$lib/common/constants';\nimport { map } from './map';\nimport { type BigNumberishLegacy, type TokenChange } from '$lib/common';\nimport { encodeJSON } from '$lib/common/misc';\nimport type { BigNumberish } from '$lib/common/bignumber';\nimport { yakklVersionStore } from '$lib/common/stores';\nimport { Utils } from 'alchemy-sdk';\nimport { ethers as ethersv6 } from 'ethers-v6';\nimport { browserSvelte, browser_ext } from '$lib/common/environment';\nimport { log } from '$lib/managers/Logger';\nimport { UnifiedTimerManager } from '$lib/managers/UnifiedTimerManager';\n\nexport function getTokenChange(changeArray: TokenChange[], timeline: string): number | null {\n\tif (!changeArray) {\n\t\treturn null;\n\t}\n\n\tif (!TIMELINES.includes(timeline as any)) {\n\t\tthrow new Error(`Invalid timeline: ${timeline}`);\n\t}\n\n\tconst foundChange = changeArray.find((change) => change.timeline === timeline);\n\treturn foundChange ? foundChange.percentChange : null;\n}\n\nexport function calculateFeeAmount(tokenAmount: bigint, feeBasisPoints: number): bigint {\n\t// Convert the fee basis points to an integer for calculation.\n\tconst feeBasisPointsInt = BigInt(Math.round(feeBasisPoints * 100));\n\t// Multiply token amount by fee basis points and divide by the divisor to get the fee.\n\tconst feeAmount =\n\t\t(tokenAmount * feeBasisPointsInt) / BigInt(YAKKL_FEE_BASIS_POINTS_DIVISOR * 100);\n\treturn feeAmount;\n}\n\nexport function formatFeeToUSD(\n\tfeeAmount: bigint,\n\ttokenDecimals: number,\n\tmarketPrice: number\n): string {\n\t// Normalize the fee amount by token decimals.\n\tconst normalizedFeeAmount = Number(feeAmount) / Math.pow(10, tokenDecimals);\n\t// Calculate the fee in USD.\n\tconst feeValueUSD = normalizedFeeAmount * marketPrice;\n\t// Format the fee value in USD.\n\treturn feeValueUSD.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\n}\n\nexport function calculateFeeBasisPointsPercent(feeBasisPoints: number): string {\n\tconst value = `${(feeBasisPoints / 100).toFixed(4)}%`;\n\treturn value;\n}\n\n// decimal values like .04\n// Can use ethersv6.parseUnits('0.04', 18) to convert to wei\nexport function convertToBigInt(amount: string, decimals: number): bigint {\n\tif (!amount || parseFloat(amount) <= 0) {\n\t\tthrow new Error('Invalid approval amount');\n\t}\n\n\t// Parse the string amount to a float\n\tconst parsedAmount = parseFloat(amount);\n\t// Multiply by 10^decimals to get the integer representation\n\tconst factor = 10 ** decimals;\n\tconst convertedAmount = parsedAmount * factor;\n\n\t// Convert to BigInt\n\treturn BigInt(Math.floor(convertedAmount)); // Use Math.floor to avoid rounding issues\n}\n\nexport function formatQuantity(amount: bigint, decimals: number): string {\n\tif (amount === 0n) return '0';\n\tconst formattedValue = ethersv6.formatUnits(amount, decimals);\n\n\t// Optional: Remove trailing zeros after the decimal point\n\tconst [integerPart, decimalPart] = formattedValue.split('.');\n\tif (!decimalPart) return integerPart;\n\n\tconst trimmedDecimal = decimalPart.replace(/0+$/, '');\n\treturn trimmedDecimal ? `${integerPart}.${trimmedDecimal}` : integerPart;\n}\n\nexport function formatPrice(price: number): string {\n\ttry {\n\t\tconst formattedPrice = new Intl.NumberFormat('en-US', {\n\t\t\tstyle: 'currency',\n\t\t\tcurrency: 'USD',\n\t\t\tminimumFractionDigits: 2,\n\t\t\tmaximumFractionDigits: 2\n\t\t}).format(price);\n\n\t\treturn formattedPrice;\n\t} catch (error) {\n\t\tlog.error('formatPrice - SwapTokenPrice and price to format:', false, error, price);\n\t\treturn price.toString();\n\t}\n}\n\nexport function formatBasisPointsToPercentage(basisPoints: number): string {\n\t// Convert basis points to percentage by dividing by 1000\n\tconst percentage = basisPoints / 1000;\n\t// Format to three decimal places and trim any trailing zeros\n\treturn `${percentage.toFixed(3).replace(/\\.?0+$/, '')}%`;\n}\n\n// gets or sets a default value safely\nexport function getOrDefault<T>(value: T | undefined, defaultValue: T): T {\n\treturn value === undefined ? defaultValue : value;\n}\n\n/** Example usage for getOrDefault\nfunction updateProfile(p: Profile) {\n  p.subIndex = getOrDefault(p.subIndex, 0) + 1;\n  p.name = getOrDefault(p.name, 'Unknown User');\n  p.description = getOrDefault(p.description, 'No Description');\n  p.lastLogin = new Date();\n  p.isActive = getOrDefault(p.isActive, false);\n}\n**/\n\nexport function safeConvertBigIntToNumber(bigIntValue: bigint): number {\n\tif (\n\t\tbigIntValue < BigInt(Number.MIN_SAFE_INTEGER) ||\n\t\tbigIntValue > BigInt(Number.MAX_SAFE_INTEGER)\n\t) {\n\t\tthrow new Error('BigInt value is outside the safe integer range');\n\t}\n\treturn Number(bigIntValue);\n}\n\n// Function to get the currency code for the user's locale\nexport function getCurrencyCodeForUserLocale(): string | undefined {\n\tconst options = new Intl.NumberFormat(navigator.language, {\n\t\tstyle: 'currency',\n\t\tcurrency: 'USD'\n\t}).resolvedOptions();\n\treturn options.currency;\n}\n\n// Increments a property on an object safely. If maxValue is provided, the property will not be incremented beyond that value.\nexport function incrementProperty<T extends object, K extends keyof T>(\n\tobj: T,\n\tproperty: K,\n\tincrementValue: number = 1,\n\tmaxValue: number = -1\n): void {\n\tincrementValue = Math.abs(incrementValue); // Ensure incrementValue is always positive\n\tif (typeof obj[property] === 'number') {\n\t\tlet newValue = ((obj[property] as unknown as number) ?? 0) + incrementValue;\n\t\tif (maxValue !== -1 && newValue > maxValue) {\n\t\t\tnewValue = maxValue;\n\t\t}\n\t\tobj[property] = newValue as any;\n\t} else {\n\t\tobj[property] = incrementValue as any;\n\t}\n}\n\n/** Example usage for incrementProperty\nincrementProperty(profile, 'subIndex');  // Increments by 1 by default\nlog.error(profile.subIndex); // Should print 6\n\nincrementProperty(profile, 'subIndex', -2);  // Increments by 2 (absolute value)\nlog.error(profile.subIndex); // Should print 8\n\nincrementProperty(profile, 'subIndex', 5, 10);  // Attempts to increment by 5, should respect max value of 10\nlog.error(profile.subIndex); // Should print 10\n\nincrementProperty(profile, 'subIndex', 5, -1);  // Attempts to increment by 5, no max value limit\nlog.error(profile.subIndex); // Should print 15\n**/\n\n// Decrements a property on an object safely. If ensureNonNegative is true, the property will not be decremented below 0.\nexport function decrementProperty<T extends object, K extends keyof T>(\n\tobj: T,\n\tproperty: K,\n\tdecrementValue: number = 1,\n\tensureNonNegative: boolean = true\n): void {\n\tdecrementValue = Math.abs(decrementValue); // Ensure decrementValue is always positive\n\tif (typeof obj[property] === 'number') {\n\t\tlet newValue = ((obj[property] as unknown as number) ?? 0) - decrementValue;\n\t\tif (ensureNonNegative && newValue < 0) {\n\t\t\tnewValue = 0;\n\t\t}\n\t\tobj[property] = newValue as any;\n\t} else {\n\t\tobj[property] = ensureNonNegative ? (0 as any) : (-decrementValue as any);\n\t}\n}\n\n/** Example usage for decrementProperty\n ecrementProperty(profile, 'subIndex');  // Decrements by 1 by default\nlog.error(profile.subIndex); // Should print 14\n\ndecrementProperty(profile, 'subIndex', -2);  // Decrements by 2 (absolute value)\nlog.error(profile.subIndex); // Should print 12\n\ndecrementProperty(profile, 'subIndex', 5);  // Attempts to decrement by 5, should ensure non-negative value\nlog.error(profile.subIndex); // Should print 7\n\n// Decrementing without ensuring non-negative value\ndecrementProperty(profile, 'subIndex', 10, false);  // Decrements by 10, allows negative value\nlog.error(profile.subIndex); // Should print -3\n**/\n\n// Ensures that the object has all the properties from the defaults object, and sets them to the default value if they are missing.\nexport function ensureDefaults<T extends object>(obj: T, defaults: Partial<T>): T {\n\tfor (const key in defaults) {\n\t\tif (obj[key] === undefined) {\n\t\t\tobj[key] = defaults[key]!;\n\t\t}\n\t}\n\treturn obj;\n}\n\n// Set default values\n/* Example usage for ensureDefaults\nprofile = ensureDefaults(profile, {\n  subIndex: 0,\n  name: 'Unknown',\n  description: '',\n  lastLogin: new Date(),\n  isActive: true,\n});\n*/\n\n// For null or undefined properties, set them to the value passed. Use this to set values for properties that are null or undefined.\nexport function setDefinedProperty<T extends object, K extends keyof T>(\n\ttarget: T | undefined,\n\tproperty: K,\n\tvalue: T[K] | undefined\n): void {\n\tif (target && value !== undefined) {\n\t\ttarget[property] = value;\n\t}\n}\n\nexport function blockContextMenu() {\n\t// Blocks the context menu from popping up\n\twindow.addEventListener('contextmenu', function (e) {\n\t\tlog.debug('Context menu blocked');\n\t\te.stopPropagation(); // Allow event propagation but prevent menu\n\t\te.preventDefault();\n\t});\n\n\t// Blocks combo keys in the browser from pulling up the context menu\n\twindow.onkeydown = function (e) {\n\t\t// disable F12 key\n\t\tif (e.code == 'F12') {\n\t\t\t//123) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// disable I key\n\t\tif (((e.ctrlKey && e.shiftKey) || e.altKey) && e.code == 'KeyI') {\n\t\t\t//keyCode == 73){\n\t\t\treturn false;\n\t\t}\n\n\t\t// disable J key\n\t\tif (((e.ctrlKey && e.shiftKey) || e.altKey) && e.code == 'KeyJ') {\n\t\t\t//keyCode == 74) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// disable C key\n\t\tif (((e.ctrlKey && e.shiftKey) || e.altKey) && e.code == 'KeyC') {\n\t\t\t//keyCode == 67) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// disable U key\n\t\tif ((e.ctrlKey || e.altKey) && e.code == 'KeyU') {\n\t\t\t//keyCode == 85) {\n\t\t\treturn false;\n\t\t}\n\n\t\te.stopPropagation();\n\t};\n}\n\nconst timerManager = UnifiedTimerManager.getInstance();\n\nexport function blockWindowResize(width: number, height: number) {\n\twindow.addEventListener('resize', function () {\n\t\ttimerManager.stopTimeout('resize-debounce');\n\t\ttimerManager.removeTimeout('resize-debounce');\n\t\ttimerManager.addTimeout(\n\t\t\t'resize-debounce',\n\t\t\t() => {\n\t\t\t\tconsole.log('🔲 Resizing window');\n\t\t\t\twindow.resizeTo(width, height);\n\t\t\t},\n\t\t\t500\n\t\t);\n\t\ttimerManager.startTimeout('resize-debounce');\n\t});\n}\n\nexport function extractFQDN(url: string) {\n\tif (!url) return undefined;\n\tconst parsedUrl = new URL(url);\n\treturn parsedUrl.hostname;\n}\n\nexport function checkUpgrade() {\n\ttry {\n\t\tconst yakklVersion = get(yakklVersionStore);\n\t\tif (yakklVersion) {\n\t\t\tconst key = yakklVersion.substring(DEFAULT_UPGRADE_LABEL.length).trim().toUpperCase();\n\t\t\tif (key) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t} catch (e: any) {\n\t\treturn false;\n\t}\n}\n\n// Move these\n// TODO: May want to cycle through Networks and Network.types - Don't forget to add Polygon and others here!!\n/**\n * @param {number} chainId\n */\nexport function getNetworkInfo(chainId: number) {\n\tlet blockchain;\n\tlet type;\n\tlet explorer;\n\n\tswitch (chainId) {\n\t\tcase 1301:\n\t\t\tblockchain = 'Unichain';\n\t\t\ttype = 'Testnet';\n\t\t\texplorer = 'https://sepolia.uniscan.xyz/';\n\t\t\tbreak;\n\t\tcase 11155111:\n\t\t\tblockchain = 'Ethereum';\n\t\t\ttype = 'Sepolia';\n\t\t\texplorer = 'https://sepolia.etherscan.io';\n\t\t\tbreak;\n\t\tcase 1:\n\t\tdefault:\n\t\t\tblockchain = 'Ethereum';\n\t\t\ttype = 'Mainnet';\n\t\t\texplorer = 'https://etherscan.io';\n\t\t\tbreak;\n\t}\n\n\treturn { blockchain, type, explorer };\n}\n\n// TODO: May want to cycle through Networks and Network.types - Don't forget to add Polygon and others here!!\nexport function getChainId(type: string) {\n\tlet chainId = 1;\n\n\tswitch (type.toLowerCase()) {\n\t\tcase 'mainnet':\n\t\t\tchainId = 1;\n\t\t\tbreak;\n\t\tcase 'sepolia':\n\t\t\tchainId = 11155111;\n\t\t\tbreak;\n\t}\n\n\treturn chainId;\n}\n\n// Not using now...\n// export async function getCreateProviders(key: string) {\n//   try {\n//     const yakklProviders = [];\n//     const yakklProv = [];\n\n//     const jsonURL = browser_ext.runtime.getURL('providers.json');\n\n//     fetch(jsonURL)\n//       .then((response) => response.json())\n//       .then(async (json) => {\n//         for (const provider of  json) {\n//           if (provider) {\n//             yakklProv.push(provider);\n//             await encryptData(provider.data, key).then(result => {\n//               provider.data = result;\n//             });\n//             yakklProviders.push(provider);\n//           }\n//         }\n\n//         await setYakklProvidersStorage(yakklProviders);\n//         yakklProvidersStore.set(yakklProv);\n//       });\n//   } catch (e) {\n//     log.error(e);\n//   }\n// }\n\nexport async function createHash(val: string) {\n\treturn await crypto.subtle\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t// @ts-ignore\n\t\t.digest('SHA-256', new TextEncoder('utf-8').encode(val))\n\t\t.then((h) => {\n\t\t\tconst hexes = [],\n\t\t\t\tview = new DataView(h);\n\t\t\tfor (let i = 0; i < view.byteLength; i += 4)\n\t\t\t\thexes.push(('00000000' + view.getUint32(i).toString(16)).slice(-8));\n\n\t\t\treturn hexes.join('');\n\t\t});\n}\n\n// Ideal for JSON Serialization and Deserialization that handles BigInt. If more complex objects need cloning then use a library like lodash (cloneDeep) or rfdc\n// Another option is to use the structuredClone function when it is available natively in the browser.\n// Do not use this for objects that have functions or circular references.\n// Do not use this on boolean - it will return null.\nexport function deepCopy<T>(obj: T) {\n\tif (!obj) return null;\n\treturn JSON.parse(encodeJSON(obj));\n\n\t// We can remove the above line and uncomment below when needed. Also import { cloneDeep } from 'lodash'; OR import cloneDeep from 'lodash/cloneDeep';\n\t// if (isJSONSerializable(obj)) {\n\t//   return JSON.parse(encodeJSON(obj)) as T;\n\t// } else {\n\t//   return cloneDeep(obj);\n\t// }\n}\n\nexport function formatValue(blockchain: string, value: any): string {\n\tif (blockchain.toLowerCase() === 'ethereum') {\n\t\treturn formatEther(value);\n\t}\n\t// Maybe use a switch statement later when the other blockchains are added\n\treturn value; // fallback to\n}\n\nexport function formatEther(wei: BigNumberish): string {\n\tif (wei) {\n\t\treturn Utils.formatEther(wei as bigint | string);\n\t} else {\n\t\treturn '0.0';\n\t}\n}\n\n// Convert to wei\nexport function parseUnits(value: string, type: BigNumberishLegacy): BigNumberish {\n\treturn Utils.parseUnits(value, type).toBigInt(); // May want to use ethers v6.x instead of Alchemy's ethers v5.x. BN.js is no longer used in ethers v6.x\n}\n\nexport function parseEther(ether: string): BigNumberish {\n\treturn parseUnits(ether, 18);\n}\n\n// Convert from wei\n/**\n * @param {import(\"alchemy-sdk\").BigNumberish} value\n * @param {import(\"alchemy-sdk\").BigNumberish} type\n */\nexport function formatUnits(value: BigNumberish, type: BigNumberish) {\n\treturn Utils.formatUnits(value as bigint | string, type as bigint | string); // TODO: Watch this\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function getSymbol(blockchain: string): string {\n\tlet symbol = '';\n\n\ttry {\n\t\tsymbol = 'ETH'; // TODO: Need to go through Networks and Network.types and merge with how we are now doing abstract blockchains!\n\t\t//   const networks = get(yakklNetworksStore);\n\t\t//   for (const network of networks) {\n\t\t//     if (network.name.toLowerCase() === blockchain.toLowerCase()) {\n\t\t//         symbol = network.symbol;\n\t\t//         break;\n\t\t//     }\n\t\t//  }\n\t} catch (e) {\n\t\tlog.error(e);\n\t}\n\n\treturn symbol;\n}\n\n// Return the currency symbol based on the locale and currency code\nexport const getCurrencySymbol = (locale: string, currency: any) =>\n\t(0)\n\t\t.toLocaleString(locale, {\n\t\t\tstyle: 'currency',\n\t\t\tcurrency,\n\t\t\tminimumFractionDigits: 0,\n\t\t\tmaximumFractionDigits: 0\n\t\t})\n\t\t.replace(/\\d/g, '')\n\t\t.trim();\n\nexport function truncate(val: string, len = 20, suffix = '...') {\n\tif (val.length > len) {\n\t\treturn val.substring(0, len) + suffix;\n\t}\n\treturn val;\n}\n\n// Returns an array of words\nexport function splitWords(str: string, delimiter = ' '): string[] {\n\treturn str.split(delimiter);\n}\n\n// Opens a tab in the browser\nexport function handleOpenInTab(url: string): void {\n\tif (browserSvelte) {\n\t\tbrowser_ext.tabs.create({ url: url });\n\t}\n}\n\nexport async function isOnline(url = window.location.origin) {\n\tlet value = false;\n\n\ttry {\n\t\tif (!window.navigator.onLine) return value;\n\n\t\t// Check to verify first\n\t\tconst response = await fetch(url, { method: 'HEAD' });\n\n\t\tvalue = response.ok;\n\t} catch (e) {\n\t\tlog.error(e);\n\t\tvalue = false;\n\t}\n\n\treturn value;\n}\n\nexport function changeBackground(id: string, image: { src: string }) {\n\ttry {\n\t\t// document.getElementById().innerHTML=\"\";\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t// @ts-ignore\n\t\tdocument.getElementById(id).style.backgroundImage = \"url('\" + image.src + \"')\";\n\t\t// document.getElementById('display').style.backgroundSize=\"cover\";\n\t\t// document.getElementById('display').style.backgroundPosition=\"center center\";\n\t} catch (e) {\n\t\tlog.error(e);\n\t}\n}\n\nexport function timeoutClipboard(ms: number, redactText: string = '<redacted>') {\n\ttry {\n\t\tif (browserSvelte) {\n\t\t\ttimerManager.addTimeout(\n\t\t\t\t'clipboard-timeout',\n\t\t\t\t() => {\n\t\t\t\t\tClipboardJS.copy(redactText);\n\t\t\t\t},\n\t\t\t\tms\n\t\t\t);\n\t\t\ttimerManager.startTimeout('clipboard-timeout');\n\t\t}\n\t} catch (e) {\n\t\tlog.error(e);\n\t}\n}\n\nexport async function setIconLock() {\n\ttry {\n\t\tif (browserSvelte) {\n\t\t\tawait browser_ext.action.setIcon({\n\t\t\t\tpath: {\n\t\t\t\t\t16: '/images/logoBullLock16x16.png',\n\t\t\t\t\t32: '/images/logoBullLock32x32.png',\n\t\t\t\t\t48: '/images/logoBullLock48x48.png',\n\t\t\t\t\t128: '/images/logoBullLock128x128.png'\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t} catch (e) {\n\t\tlog.error(e);\n\t}\n}\n\nexport async function setIconUnlock() {\n\ttry {\n\t\tif (browserSvelte) {\n\t\t\tawait browser_ext.action.setIcon({\n\t\t\t\tpath: {\n\t\t\t\t\t16: '/images/logoBull16x16.png',\n\t\t\t\t\t32: '/images/logoBull32x32.png',\n\t\t\t\t\t48: '/images/logoBull48x48.png',\n\t\t\t\t\t128: '/images/logoBull128x128.png'\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t} catch (e) {\n\t\tlog.error(e);\n\t}\n}\n\nexport async function setBadgeText(text: string = '') {\n\ttry {\n\t\tif (browserSvelte) {\n\t\t\tawait browser_ext.action.setBadgeText({ text: text });\n\t\t}\n\t} catch (e) {\n\t\tlog.error(e);\n\t}\n}\n\nexport function getPlatform() {\n\tconst { navigator } = window;\n\tconst { userAgent } = navigator;\n\n\tif (userAgent.includes('Firefox')) {\n\t\treturn PLATFORM_TYPES.FIREFOX;\n\t} else if ('brave' in navigator) {\n\t\treturn PLATFORM_TYPES.BRAVE;\n\t} else if (userAgent.includes('Edg/')) {\n\t\treturn PLATFORM_TYPES.EDGE;\n\t} else if (userAgent.includes('OPR')) {\n\t\treturn PLATFORM_TYPES.OPERA;\n\t}\n\treturn PLATFORM_TYPES.CHROME;\n}\n\nexport function getCurrencyCode(locale: string) {\n\ttry {\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t// @ts-ignore\n\t\tconst countryCode = getCountryCode(locale).toUpperCase();\n\t\tif (countryCode in map) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t// @ts-ignore\n\t\t\treturn map[countryCode];\n\t\t}\n\t\treturn null;\n\t} catch (e) {\n\t\tlog.error(e);\n\t\treturn null;\n\t}\n}\n\n// Not exported\nconst getCountryCode = function (localeString: string) {\n\ttry {\n\t\tlet components = localeString.split('_');\n\t\tif (components.length == 2) {\n\t\t\treturn components.pop();\n\t\t}\n\t\tcomponents = localeString.split('-');\n\t\tif (components.length == 2) {\n\t\t\treturn components.pop();\n\t\t}\n\t\treturn localeString;\n\t} catch (e) {\n\t\tlog.error(e);\n\t\treturn null;\n\t}\n};\n\n// TODO: hex.substr... is deprecated\nexport function hexToString(str1: string, Ox = true) {\n\ttry {\n\t\tconst hex = Ox ? str1.toString().slice(2) : str1.toString(); // If 0x prefix then remove it\n\t\tlet str = '';\n\t\tfor (let n = 0; n < hex.length; n += 2) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t// @ts-ignore\n\t\t\tstr += String.fromCharCode(parseInt(hex.substr(n, 2), 16));\n\t\t}\n\t\treturn str;\n\t} catch (e) {\n\t\tlog.error(e);\n\t\treturn null;\n\t}\n}\n\nexport function hexToBigInt(str1: string) {\n\ttry {\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t// @ts-ignore\n\t\treturn BigInt(hexToString(str1));\n\t} catch (e) {\n\t\tlog.error(e);\n\t\treturn null;\n\t}\n}\n\nexport function autoscroll(node: HTMLElement) {\n\tfunction scrollToBottom() {\n\t\tnode.scrollTop = node.scrollHeight;\n\t}\n\tconst observer = new MutationObserver(scrollToBottom);\n\tobserver.observe(node, { childList: true });\n\treturn {\n\t\tdestroy() {\n\t\t\tobserver.disconnect();\n\t\t}\n\t};\n}\n\n/**\n * Returns an Error if extension.runtime.lastError is present\n * this is a workaround for the non-standard error object that's used\n *\n * @returns {Error|undefined}\n */\nexport function checkForError(): Error | undefined {\n\tif (browserSvelte) {\n\t\tconst { lastError } = browser_ext && browser_ext.runtime ? browser_ext.runtime : null;\n\t\tif (!lastError) {\n\t\t\treturn undefined;\n\t\t}\n\t\t// if it quacks like an Error, its an Error\n\t\t// if (lastError && lastError.message) {\n\t\t//   return new Error(lastError.message);\n\t\t// }\n\t\t// repair incomplete error object (eg chromium v77)\n\t\treturn new Error(lastError.message);\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\n// export const isLocalhost = Boolean(\n//   window.location.hostname === 'localhost' ||\n//     // [::1] is the IPv6 localhost address.\n//     window.location.hostname === '[::1]' ||\n//     // 127.0.0.1/8 is considered localhost for IPv4.\n//     window.location.hostname.match(\n//       /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n//     )\n// )\n\n// exports.getLocales = function(currencyCode) {\n//   currencyCode = currencyCode.toUpperCase();\n//   var locales = [];\n//   for (var countryCode in map) {\n//       if (map[countryCode] === currencyCode) {\n//           locales.push(countryCode);\n//       }\n//   }\n//   return locales;\n// }\n\n// try/catch\n// async function GetImageData(imagePath) {\n//     let response = await fetch(chrome.runtime.getURL(imagePath));\n//     let blob = await response.blob();\n//     let imageBitmap = await createImageBitmap(blob);\n//     let osc = new OffscreenCanvas(imageBitmap.width, imageBitmap.height);\n//     let ctx = osc.getContext('2d');\n//     ctx.drawImage(imageBitmap, 0, 0);\n\n//     return ctx.getImageData(0, 0, osc.width, osc.height);\n// }\n"],"names":["map","AD","AE","AF","AG","AI","AL","AM","AO","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","ST","SV","SX","SY","SZ","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","YE","YT","ZA","ZM","ZW","getTokenChange","changeArray","timeline","TIMELINES","includes","Error","foundChange","find","change","percentChange","calculateFeeAmount","tokenAmount","feeBasisPoints","feeBasisPointsInt","BigInt","Math","round","feeAmount","YAKKL_FEE_BASIS_POINTS_DIVISOR","formatFeeToUSD","tokenDecimals","marketPrice","normalizedFeeAmount","Number","pow","feeValueUSD","toLocaleString","style","currency","formatQuantity","amount","decimals","formattedValue","ethersv6","formatUnits","integerPart","decimalPart","split","trimmedDecimal","replace","formatPrice","price","formattedPrice","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","error","log","toString","incrementProperty","obj","property","incrementValue","maxValue","abs","newValue","timerManager","UnifiedTimerManager","getInstance","blockWindowResize","width","height","window","addEventListener","stopTimeout","removeTimeout","addTimeout","console","resizeTo","startTimeout","getChainId","type","chainId","toLowerCase","deepCopy","JSON","parse","encodeJSON","formatValue","blockchain","value","formatEther","wei","Utils","getSymbol","symbol","e","getCurrencySymbol","locale","trim","truncate","val","len","suffix","length","substring","splitWords","str","delimiter","async","setIconLock","browserSvelte","browser_ext","action","setIcon","path","setIconUnlock","setBadgeText","text","getCurrencyCode","countryCode","getCountryCode","toUpperCase","localeString","components","pop"],"mappings":"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"}