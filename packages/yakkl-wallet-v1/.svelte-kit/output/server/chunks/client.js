import"clsx";import{n as noop}from"./utils.js";import"./exports.js";import"vite-plugin-node-polyfills/shims/buffer";import{w as writable}from"./index.js";function get(key,parse=JSON.parse){try{return parse(sessionStorage[key])}catch{}}const SNAPSHOT_KEY="sveltekit:snapshot";const SCROLL_KEY="sveltekit:scroll";function create_updated_store(){const{set:set,subscribe:subscribe}=writable(false);{return{subscribe:subscribe,check:async()=>false}}}const is_legacy=noop.toString().includes("$$")||/function \w+\(\) \{\}/.test(noop.toString());if(is_legacy){({data:{},form:null,error:null,params:{},route:{id:null},state:{},status:-1,url:new URL("https://example.com")})}get(SCROLL_KEY)??{};get(SNAPSHOT_KEY)??{};const stores={updated:create_updated_store()};function goto(url,opts={}){{throw new Error("Cannot call goto(...) on the server")}}{const console_warn=console.warn;console.warn=function warn(...args){if(args.length===1&&/<(Layout|Page|Error)(_[\w$]+)?> was created (with unknown|without expected) prop '(data|form)'/.test(args[0])){return}console_warn(...args)}}export{goto as g,stores as s};
//# sourceMappingURL=client.js.map
