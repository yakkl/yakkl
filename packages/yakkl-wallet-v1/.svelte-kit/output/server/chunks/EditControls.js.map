{"version":3,"file":"EditControls.js","sources":["../../../../src/lib/components/EditControls.svelte"],"sourcesContent":["<!-- EditControls.svelte -->\n<script lang=\"ts\">\n\timport { Edit2Icon, TrashIcon, ClipboardIcon } from 'svelte-feather-icons';\n\timport { fade } from 'svelte/transition';\n\timport { onDestroy } from 'svelte';\n\timport { UnifiedTimerManager } from '$lib/managers/UnifiedTimerManager';\n\n\tinterface Props {\n\t\tonEdit?: () => void;\n\t\tonDelete?: () => void;\n\t\tonCopy?: () => void;\n\t\tcontrols?: string[];\n\t\thasBalance?: boolean;\n\t}\n\n\tlet {\n\t\tonEdit = () => {},\n\t\tonDelete = () => {},\n\t\tonCopy = () => {},\n\t\tcontrols = ['copy', 'edit', 'delete'],\n\t\thasBalance = false\n\t}: Props = $props();\n\n\tlet copied = $state(false);\n\tlet edited = $state(false);\n\tlet deleted = $state(false);\n\tlet hoverText = $state('');\n\n\tconst timerManager = UnifiedTimerManager.getInstance();\n\n\tfunction handleCopy(event: MouseEvent) {\n\t\tevent.stopPropagation();\n\t\tonCopy();\n\t\tcopied = true;\n\t\ttimerManager.addTimeout(\n\t\t\t'copy-feedback',\n\t\t\t() => {\n\t\t\t\tcopied = false;\n\t\t\t},\n\t\t\t1000\n\t\t);\n\t\ttimerManager.startTimeout('copy-feedback');\n\t}\n\n\tfunction handleEdit(event: MouseEvent) {\n\t\tevent.stopPropagation();\n\t\tonEdit();\n\t\tedited = true;\n\t\ttimerManager.addTimeout(\n\t\t\t'edit-feedback',\n\t\t\t() => {\n\t\t\t\tedited = false;\n\t\t\t},\n\t\t\t1000\n\t\t);\n\t\ttimerManager.startTimeout('edit-feedback');\n\t}\n\n\tfunction handleDelete(event: MouseEvent) {\n\t\tevent.stopPropagation();\n\t\tonDelete();\n\t\tdeleted = true;\n\t\ttimerManager.addTimeout(\n\t\t\t'delete-feedback',\n\t\t\t() => {\n\t\t\t\tdeleted = false;\n\t\t\t},\n\t\t\t1000\n\t\t);\n\t\ttimerManager.startTimeout('delete-feedback');\n\t}\n\n\tfunction showHoverText(text: string) {\n\t\t// Prevent reactive loops by checking if text actually changed\n\t\tif (hoverText === text) return;\n\t\t\n\t\thoverText = text;\n\t\t\n\t\t// Clean up existing timeout to prevent conflicts\n\t\ttimerManager.stopTimeout('hover-text');\n\t\ttimerManager.removeTimeout('hover-text');\n\t\t\n\t\t// Only add new timeout if text is not empty\n\t\tif (text) {\n\t\t\ttimerManager.addTimeout(\n\t\t\t\t'hover-text',\n\t\t\t\t() => {\n\t\t\t\t\thoverText = '';\n\t\t\t\t},\n\t\t\t\t1000\n\t\t\t);\n\t\t\ttimerManager.startTimeout('hover-text');\n\t\t}\n\t}\n\n\t// Cleanup all timers when component is destroyed\n\tonDestroy(() => {\n\t\ttimerManager.stopTimeout('copy-feedback');\n\t\ttimerManager.removeTimeout('copy-feedback');\n\t\ttimerManager.stopTimeout('edit-feedback');\n\t\ttimerManager.removeTimeout('edit-feedback');\n\t\ttimerManager.stopTimeout('delete-feedback');\n\t\ttimerManager.removeTimeout('delete-feedback');\n\t\ttimerManager.stopTimeout('hover-text');\n\t\ttimerManager.removeTimeout('hover-text');\n\t});\n</script>\n\n<div\n\tclass=\"absolute top-2 right-2 flex items-center space-x-2 bg-white rounded-full p-1 shadow-md z-10\"\n>\n\t{#if controls.includes('copy')}\n\t\t<button\n\t\t\ttype=\"button\"\n\t\t\tclass=\"text-gray-400 hover:text-gray-500 focus:outline-none relative\"\n\t\t\tonclick={handleCopy}\n\t\t\tonmouseenter={() => showHoverText('Copy')}\n\t\t\tonmouseleave={() => (hoverText = '')}\n\t\t>\n\t\t\t{#if copied}\n\t\t\t\t<div class=\"text-green-500\" transition:fade={{ duration: 200 }}>\n\t\t\t\t\t<ClipboardIcon class=\"h-5 w-5\" />\n\t\t\t\t</div>\n\t\t\t{:else}\n\t\t\t\t<ClipboardIcon class=\"h-5 w-5\" />\n\t\t\t{/if}\n\t\t\t{#if hoverText === 'Copy'}\n\t\t\t\t<div\n\t\t\t\t\tclass=\"absolute top-full mt-2 left-1/2 transform -translate-x-1/2 bg-gray-800 text-white text-xs px-2 py-1 rounded shadow-md\"\n\t\t\t\t\ttransition:fade={{ duration: 200 }}\n\t\t\t\t>\n\t\t\t\t\tCopy\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t</button>\n\t{/if}\n\t{#if controls.includes('edit')}\n\t\t<button\n\t\t\ttype=\"button\"\n\t\t\tclass=\"text-gray-400 hover:text-gray-500 focus:outline-none relative\"\n\t\t\tonclick={handleEdit}\n\t\t\tonmouseenter={() => showHoverText('Edit')}\n\t\t\tonmouseleave={() => (hoverText = '')}\n\t\t>\n\t\t\t{#if edited}\n\t\t\t\t<div class=\"text-blue-500\" transition:fade={{ duration: 200 }}>\n\t\t\t\t\t<Edit2Icon class=\"h-5 w-5\" />\n\t\t\t\t</div>\n\t\t\t{:else}\n\t\t\t\t<Edit2Icon class=\"h-5 w-5\" />\n\t\t\t{/if}\n\t\t\t{#if hoverText === 'Edit'}\n\t\t\t\t<div\n\t\t\t\t\tclass=\"absolute top-full mt-2 left-1/2 transform -translate-x-1/2 bg-gray-800 text-white text-xs px-2 py-1 rounded shadow-md\"\n\t\t\t\t\ttransition:fade={{ duration: 200 }}\n\t\t\t\t>\n\t\t\t\t\tEdit\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t</button>\n\t{/if}\n\t{#if controls.includes('delete')}\n\t\t<button\n\t\t\ttype=\"button\"\n\t\t\tclass=\"{hasBalance\n\t\t\t\t? 'text-red-500 hover:text-red-600'\n\t\t\t\t: 'text-gray-400 hover:text-gray-500'} focus:outline-none relative\"\n\t\t\tonclick={handleDelete}\n\t\t\tonmouseenter={() => showHoverText('Delete')}\n\t\t\tonmouseleave={() => (hoverText = '')}\n\t\t>\n\t\t\t{#if deleted}\n\t\t\t\t<div class=\"text-red-500\" transition:fade={{ duration: 200 }}>\n\t\t\t\t\t<TrashIcon class=\"h-5 w-5\" />\n\t\t\t\t</div>\n\t\t\t{:else}\n\t\t\t\t<TrashIcon class=\"h-5 w-5\" />\n\t\t\t{/if}\n\t\t\t{#if hoverText === 'Delete'}\n\t\t\t\t<div\n\t\t\t\t\tclass=\"absolute top-full mt-2 left-1/2 transform -translate-x-1/2 bg-gray-800 text-white text-xs px-2 py-1 rounded shadow-md\"\n\t\t\t\t\ttransition:fade={{ duration: 200 }}\n\t\t\t\t>\n\t\t\t\t\tDelete\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t</button>\n\t{/if}\n</div>\n"],"names":["onEdit","onDelete","onCopy","controls","hasBalance","timerManager","UnifiedTimerManager","getInstance","onDestroy","stopTimeout","removeTimeout","includes"],"mappings":"wcAgBEA,OAAA,OAAgBC,SAChBA,SAAA,OAAkBC,OAClBA,OAAA,OAAgBC,SAChBA,SAAY,CAAA,OAAQ,OAAQ,UAAQC,WACpCA,WAAa,eAQR,MAAAC,aAAeC,oBAAoBC,cAoEzCC,UAAgB,KACfH,aAAaI,YAAY,iBACzBJ,aAAaK,cAAc,iBAC3BL,aAAaI,YAAY,iBACzBJ,aAAaK,cAAc,iBAC3BL,aAAaI,YAAY,mBACzBJ,aAAaK,cAAc,mBAC3BL,aAAaI,YAAY,cACzBJ,aAAaK,cAAc,8KAOvB,GAAAP,SAASQ,SAAS,QAAM,mcAyBxB,GAAAR,SAASQ,SAAS,QAAM,gcAyBxB,GAAAR,SAASQ,SAAS,UAAQ,gGAGrBP,WACL,kCACA"}