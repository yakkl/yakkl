{"version":3,"file":"ExportPrivateKey.js","sources":["../../../../src/lib/components/ExportPrivateKey.svelte"],"sourcesContent":["<!-- ExportPrivateKey.svelte -->\n<script lang=\"ts\">\n\timport { browserSvelte } from '$lib/utilities/browserSvelte.ts.tmp';\n\timport { getYakklCurrentlySelected, yakklMiscStore } from '$lib/common/stores';\n\timport { onMount } from 'svelte';\n\timport { decryptData } from '$lib/common/encryption';\n\timport {\n\t\tisEncryptedData,\n\t\ttype AccountData,\n\t\ttype CurrentlySelectedData,\n\t\ttype EncryptedData,\n\t\ttype YakklCurrentlySelected\n\t} from '$lib/common';\n\timport PincodeVerify from './PincodeVerify.svelte';\n\timport Modal from './Modal.svelte';\n\timport { log } from '$lib/managers/Logger';\n\timport Copy from './Copy.svelte';\n\n\tinterface Props {\n\t\tshow?: boolean;\n\t\tclassName?: string;\n\t\tonVerify?: () => void;\n\t}\n\n\tlet { show = $bindable(false), className = 'z-[999]', onVerify = () => {} }: Props = $props();\n\n\tlet privateKey = $state('');\n\tlet address: string = $state();\n\tlet showPincodeModal = $state(false);\n\tlet showPrivateKeyModal = $state(false);\n\tlet currentlySelected: YakklCurrentlySelected;\n\n\tonMount(async () => {\n\t\tif (browserSvelte) {\n\t\t\tcurrentlySelected = await getYakklCurrentlySelected();\n\t\t\taddress = currentlySelected.shortcuts.address;\n\t\t}\n\t});\n\n\tasync function verifyPincode(pincode: string) {\n\t\ttry {\n\t\t\tlet account;\n\n\t\t\tif (isEncryptedData(currentlySelected.data)) {\n\t\t\t\tawait decryptData(currentlySelected.data, $yakklMiscStore).then((result) => {\n\t\t\t\t\tcurrentlySelected.data = result as CurrentlySelectedData;\n\t\t\t\t});\n\t\t\t}\n\t\t\taccount = (currentlySelected.data as CurrentlySelectedData).account;\n\n\t\t\tif (isEncryptedData(account && account.data)) {\n\t\t\t\tawait decryptData(account!.data as EncryptedData, $yakklMiscStore).then((result) => {\n\t\t\t\t\taccount!.data = result as AccountData;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tprivateKey = (account!.data as AccountData).privateKey;\n\t\t\tshowPincodeModal = false;\n\t\t\tshowPrivateKeyModal = true;\n\t\t\tshow = false;\n\n\t\t\tonVerify(); // Call the onVerify callback - currently does not do anything except set the modal to false\n\t\t} catch (e) {\n\t\t\tlog.error('Error verifying pincode:', e);\n\t\t}\n\t}\n\n\tfunction closeModal() {\n\t\tshow = false;\n\t}\n</script>\n\n<div class=\"relative {className}\">\n\t<PincodeVerify bind:show={showPincodeModal} onVerified={verifyPincode} />\n\n\t<Modal\n\t\tbind:show={showPrivateKeyModal}\n\t\ttitle=\"Private Key\"\n\t\tonClose={() => (showPrivateKeyModal = false)}\n\t>\n\t\t<div class=\"p-6\">\n\t\t\t<p class=\"text-sm text-red-500 mb-4\">\n\t\t\t\tPlease be careful! <strong>Your PRIVATE KEY should remain PRIVATE</strong>. A bad actor\n\t\t\t\tcould take the content of your wallet if they have access to the PRIVATE KEY! Copy the\n\t\t\t\tPRIVATE KEY and store it somewhere safe!!\n\t\t\t</p>\n\t\t\t<div class=\"mb-4\">\n\t\t\t\t<!-- svelte-ignore a11y_label_has_associated_control -->\n\t\t\t\t<label class=\"block text-sm font-medium text-gray-700 dark:text-gray-200\">Address</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclass=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm bg-gray-100 text-gray-700 cursor-not-allowed\"\n\t\t\t\t\tvalue={address}\n\t\t\t\t\treadonly\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div class=\"mb-4\">\n\t\t\t\t<!-- svelte-ignore a11y_label_has_associated_control -->\n\t\t\t\t<label class=\"block text-sm font-medium text-gray-700 dark:text-gray-200\">Private Key</label\n\t\t\t\t>\n\t\t\t\t<div class=\"mt-1 flex\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclass=\"flex-1 block w-full rounded-none rounded-l-md border-gray-300 bg-gray-100 cursor-not-allowed focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n\t\t\t\t\t\tvalue={privateKey}\n\t\t\t\t\t\treadonly\n\t\t\t\t\t/>\n\t\t\t\t\t<Copy\n\t\t\t\t\t\tclassName=\"relative -ml-px inline-flex items-center space-x-2 rounded-r-md border border-gray-300 bg-gray-50 px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100 focus:border-indigo-500 focus:outline-none focus:ring-1 focus:ring-indigo-500\"\n\t\t\t\t\t\ttarget={{\n\t\t\t\t\t\t\tvalue: privateKey,\n\t\t\t\t\t\t\ttimeout: 20000,\n\t\t\t\t\t\t\tredactText: 'PRIVATE-KEY-REDACTED'\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"mt-6 flex justify-end space-x-4\">\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclass=\"px-4 py-2 text-sm font-medium text-white bg-red-600 rounded-md shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n\t\t\t\t\tonclick={() => {\n\t\t\t\t\t\tshowPrivateKeyModal = false;\n\t\t\t\t\t}}>Close</button\n\t\t\t\t>\n\t\t\t</div>\n\t\t</div>\n\t</Modal>\n\n\t<Modal bind:show title=\"Export Private Key\" onClose={closeModal}>\n\t\t<div class=\"p-6\">\n\t\t\t<p class=\"text-sm text-gray-700 dark:text-gray-200 mb-4\">\n\t\t\t\tTo export the private key of your account, please verify your pincode first.\n\t\t\t</p>\n\t\t\t<div class=\"mt-6 flex justify-end space-x-4\">\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclass=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n\t\t\t\t\tonclick={closeModal}>Cancel</button\n\t\t\t\t>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclass=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n\t\t\t\t\tonclick={() => {\n\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\tshowPincodeModal = true;\n\t\t\t\t\t}}>Continue</button\n\t\t\t\t>\n\t\t\t</div>\n\t\t</div>\n\t</Modal>\n</div>\n"],"names":["show","className","onVerify","privateKey","address","showPincodeModal","showPrivateKeyModal","currentlySelected","async","verifyPincode","pincode","account","isEncryptedData","data","decryptData","$.store_get","$$store_subs","yakklMiscStore","then","result","e","log","error","closeModal","$$value","onClose"],"mappings":"gtBAwBOA,KAAiB,MAAAC,UAAQA,UAAY,UAAAC,SAAWA,SAAA,gBAElD,IAAAC,WAAoB,GACpB,IAAAC,aAAA,EACA,IAAAC,iBAA0B,MAC1B,IAAAC,oBAA6B,MAC7B,IAAAC,kBASWC,eAAAC,cAAcC,SACxB,IACC,IAAAC,QAEA,GAAAC,gBAAgBL,kBAAkBM,MAAO,OACtCC,YAAYP,kBAAkBM,KAAuBE,UAAAC,eAAA,GAAA,kBAAAC,iBAAAC,KAAMC,SAChEZ,kBAAkBM,KAAOM,QAE3B,CACAR,QAAWJ,kBAAkBM,KAA+BF,WAExDC,gBAAgBD,SAAWA,QAAQE,MAAO,OACvCC,YAAYH,QAASE,KAAwCE,UAAAC,eAAA,GAAA,kBAAAC,iBAAAC,KAAMC,SACxER,QAASE,KAAOM,QAElB,CAEAhB,WAAcQ,QAASE,KAAqBV,WACzBE,iBAAA,MACGC,oBAAA,KACfN,KAAA,MAEPE,UACD,OAASkB,GACJC,IAAAC,MAAM,2BAA4BF,EACvC,CACD,UAESG,aACDvB,KAAA,KACR,oIAGqBC,0FACmCQ,yBAA9B,OAAAJ,oCAAgBA,iBAAAmB,kGAKzBC,QAAA,IAAAnB,oBAAsB,iBAF3B,OAAAA,uCAAmBA,oBAAAkB,ijCAgBpBpB,ipBAYCD,iiCA0ByCoB"}