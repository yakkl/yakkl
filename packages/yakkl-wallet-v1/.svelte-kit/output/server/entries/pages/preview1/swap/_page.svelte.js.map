{"version":3,"file":"_page.svelte.js","sources":["../../../../../../../src/routes/preview1/swap/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n\timport { goto } from '$app/navigation';\n\timport { fade, fly } from 'svelte/transition';\n\timport { onMount } from 'svelte';\n\timport Header from '../components/Header.svelte';\n\timport BackButton from '../components/BackButton.svelte';\n\n\t// Swap state\n\tlet fromAsset = $state({\n\t\tsymbol: 'ETH',\n\t\tname: 'Ethereum',\n\t\tbalance: '0.1736',\n\t\tvalue: '$40.28',\n\t\ticon: '⟐',\n\t\tprice: 2320.50\n\t});\n\n\tlet toAsset = $state({\n\t\tsymbol: 'USDT',\n\t\tname: 'Tether USD',\n\t\tbalance: '297.92',\n\t\tvalue: '$297.92',\n\t\ticon: '₮',\n\t\tprice: 1.00\n\t});\n\n\tlet fromAmount = $state('');\n\tlet toAmount = $state('');\n\tlet slippage = $state(0.5);\n\tlet showSlippageSettings = $state(false);\n\n\t// Mock available tokens\n\tlet availableTokens = $state([\n\t\t{ symbol: 'ETH', name: 'Ethereum', balance: '0.1736', icon: '⟐', price: 2320.50 },\n\t\t{ symbol: 'USDT', name: 'Tether USD', balance: '297.92', icon: '₮', price: 1.00 },\n\t\t{ symbol: 'USDC', name: 'USD Coin', balance: '150.00', icon: '💵', price: 1.00 },\n\t\t{ symbol: 'PEPE', name: 'Pepe', balance: '1432.37', icon: '🐸', price: 0.000012 },\n\t\t{ symbol: 'UNI', name: 'Uniswap', balance: '25.50', icon: '🦄', price: 8.45 }\n\t]);\n\n\tlet swapRate = $derived(\n\t\tfromAsset && toAsset ? fromAsset.price / toAsset.price : 0\n\t);\n\n\tlet estimatedGas = $state('$3.21');\n\tlet priceImpact = $state('0.1%');\n\tlet minimumReceived = $derived(\n\t\ttoAmount ? (parseFloat(toAmount) * (1 - slippage / 100)).toFixed(6) : '0'\n\t);\n\n\tlet showFromSelector = $state(false);\n\tlet showToSelector = $state(false);\n\n\t// Calculate to amount when from amount changes\n\t$effect(() => {\n\t\tif (fromAmount && swapRate) {\n\t\t\tconst calculated = parseFloat(fromAmount) * swapRate;\n\t\t\ttoAmount = calculated.toFixed(6);\n\t\t} else if (!fromAmount) {\n\t\t\ttoAmount = '';\n\t\t}\n\t});\n\n\tfunction swapTokens() {\n\t\tconst temp = fromAsset;\n\t\tfromAsset = toAsset;\n\t\ttoAsset = temp;\n\t\t\n\t\t// Clear amounts\n\t\tfromAmount = '';\n\t\ttoAmount = '';\n\t}\n\n\tfunction selectFromToken(token: any) {\n\t\tfromAsset = { ...token, balance: token.balance, value: `$${(parseFloat(token.balance) * token.price).toFixed(2)}` };\n\t\tshowFromSelector = false;\n\t\tfromAmount = '';\n\t\ttoAmount = '';\n\t}\n\n\tfunction selectToToken(token: any) {\n\t\ttoAsset = { ...token, balance: token.balance, value: `$${(parseFloat(token.balance) * token.price).toFixed(2)}` };\n\t\tshowToSelector = false;\n\t\tfromAmount = '';\n\t\ttoAmount = '';\n\t}\n\n\tfunction setMaxAmount() {\n\t\tfromAmount = fromAsset.balance;\n\t}\n\n\tfunction handleSwap() {\n\t\t// TODO: Implement actual swap\n\t\tconsole.log('Swapping:', { fromAsset, toAsset, fromAmount, toAmount, slippage });\n\t\talert('Swap executed successfully!');\n\t\tgoto('/new-wallet');\n\t}\n\n\tfunction goBack() {\n\t\tgoto('/new-wallet');\n\t}\n\n\tlet isValidSwap = $derived(\n\t\tfromAmount && \n\t\ttoAmount && \n\t\tparseFloat(fromAmount) > 0 && \n\t\tparseFloat(fromAmount) <= parseFloat(fromAsset.balance)\n\t);\n</script>\n\n<svelte:head>\n\t<title>Swap - YAKKL Smart Wallet</title>\n</svelte:head>\n\n<div class=\"flex flex-col h-screen bg-background\">\n\t<Header />\n\t\n\t<main class=\"flex-1 overflow-auto p-4 space-y-6\">\n\t\t<div class=\"flex items-center justify-between\">\n\t\t\t<div class=\"flex items-center space-x-4\">\n\t\t\t\t<BackButton onclick={goBack} />\n\t\t\t\t<div>\n\t\t\t\t\t<h1 class=\"text-xl font-semibold text-text-primary\">Swap Tokens</h1>\n\t\t\t\t\t<p class=\"text-sm text-text-muted\">Exchange one token for another</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t<!-- Slippage Settings -->\n\t\t\t<button\n\t\t\t\tonclick={() => showSlippageSettings = !showSlippageSettings}\n\t\t\t\tclass=\"p-2 rounded-button hover:bg-surface transition-colors\"\n\t\t\t\taria-label=\"Slippage settings\"\n\t\t\t>\n\t\t\t\t<svg class=\"w-5 h-5 text-text-secondary\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n\t\t\t\t</svg>\n\t\t\t</button>\n\t\t</div>\n\n\t\t<!-- Slippage Settings Panel -->\n\t\t{#if showSlippageSettings}\n\t\t\t<div \n\t\t\t\tclass=\"bg-surface rounded-card p-4 border border-border\"\n\t\t\t\tin:fly={{ y: -10, duration: 200 }}\n\t\t\t\tout:fly={{ y: -10, duration: 150 }}\n\t\t\t>\n\t\t\t\t<h3 class=\"font-medium text-text-primary mb-3\">Slippage Tolerance</h3>\n\t\t\t\t<div class=\"grid grid-cols-4 gap-2 mb-3\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tonclick={() => slippage = 0.1}\n\t\t\t\t\t\tclass=\"py-2 text-sm font-medium rounded-button transition-all {slippage === 0.1 ? 'bg-primary-500 text-white' : 'bg-background text-text-secondary hover:bg-surface'}\"\n\t\t\t\t\t>\n\t\t\t\t\t\t0.1%\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonclick={() => slippage = 0.5}\n\t\t\t\t\t\tclass=\"py-2 text-sm font-medium rounded-button transition-all {slippage === 0.5 ? 'bg-primary-500 text-white' : 'bg-background text-text-secondary hover:bg-surface'}\"\n\t\t\t\t\t>\n\t\t\t\t\t\t0.5%\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonclick={() => slippage = 1.0}\n\t\t\t\t\t\tclass=\"py-2 text-sm font-medium rounded-button transition-all {slippage === 1.0 ? 'bg-primary-500 text-white' : 'bg-background text-text-secondary hover:bg-surface'}\"\n\t\t\t\t\t>\n\t\t\t\t\t\t1.0%\n\t\t\t\t\t</button>\n\t\t\t\t\t<input\n\t\t\t\t\t\tbind:value={slippage}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tstep=\"0.1\"\n\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\tmax=\"50\"\n\t\t\t\t\t\tclass=\"py-2 px-2 text-sm text-center bg-background border border-border rounded-button focus:ring-2 focus:ring-primary-500 focus:border-transparent\"\n\t\t\t\t\t\tplaceholder=\"Custom\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<p class=\"text-xs text-text-muted\">\n\t\t\t\t\tYour transaction will revert if the price changes unfavorably by more than this percentage.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t{/if}\n\n\t\t<!-- From Token -->\n\t\t<div class=\"space-y-2\">\n\t\t\t<div class=\"flex justify-between items-center\">\n\t\t\t\t<label class=\"text-sm font-medium text-text-primary\">From</label>\n\t\t\t\t<span class=\"text-xs text-text-muted\">\n\t\t\t\t\tBalance: {fromAsset.balance} {fromAsset.symbol}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"bg-surface rounded-card p-4\">\n\t\t\t\t<div class=\"flex items-center justify-between mb-3\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tonclick={() => showFromSelector = !showFromSelector}\n\t\t\t\t\t\tclass=\"flex items-center space-x-2 hover:bg-background rounded-button p-2 transition-all group\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class=\"w-8 h-8 bg-primary-100 rounded-full flex items-center justify-center\">\n\t\t\t\t\t\t\t{fromAsset.icon}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"text-left\">\n\t\t\t\t\t\t\t<p class=\"font-medium text-text-primary\">{fromAsset.symbol}</p>\n\t\t\t\t\t\t\t<p class=\"text-xs text-text-muted\">{fromAsset.name}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<svg class=\"w-4 h-4 text-text-muted group-hover:text-primary-500 transition-colors\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\" />\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t\n\t\t\t\t\t<button\n\t\t\t\t\t\tonclick={setMaxAmount}\n\t\t\t\t\t\tclass=\"text-xs font-medium text-primary-500 hover:text-primary-600 transition-colors bg-primary-50 px-2 py-1 rounded\"\n\t\t\t\t\t>\n\t\t\t\t\t\tMAX\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<input\n\t\t\t\t\tbind:value={fromAmount}\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tstep=\"any\"\n\t\t\t\t\tplaceholder=\"0.0\"\n\t\t\t\t\tclass=\"w-full text-2xl bg-transparent border-none outline-none text-text-primary placeholder-text-muted\"\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t{#if fromAmount}\n\t\t\t\t\t<p class=\"text-sm text-text-muted mt-1\">\n\t\t\t\t\t\t≈ ${(parseFloat(fromAmount) * fromAsset.price).toFixed(2)}\n\t\t\t\t\t</p>\n\t\t\t\t{/if}\n\t\t\t</div>\n\n\t\t\t{#if showFromSelector}\n\t\t\t\t<div \n\t\t\t\t\tclass=\"bg-surface-elevated rounded-card border border-border p-2 space-y-1 max-h-60 overflow-y-auto\"\n\t\t\t\t\tin:fly={{ y: -10, duration: 200 }}\n\t\t\t\t\tout:fly={{ y: -10, duration: 150 }}\n\t\t\t\t>\n\t\t\t\t\t{#each availableTokens as token (token.symbol)}\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonclick={() => selectFromToken(token)}\n\t\t\t\t\t\t\tclass=\"w-full flex items-center justify-between p-3 rounded-button hover:bg-background transition-all {token.symbol === fromAsset.symbol ? 'bg-primary-50 text-primary-700' : ''}\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div class=\"flex items-center space-x-3\">\n\t\t\t\t\t\t\t\t<div class=\"w-8 h-8 bg-primary-100 rounded-full flex items-center justify-center\">\n\t\t\t\t\t\t\t\t\t{token.icon}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"text-left\">\n\t\t\t\t\t\t\t\t\t<p class=\"font-medium\">{token.symbol}</p>\n\t\t\t\t\t\t\t\t\t<p class=\"text-xs text-text-muted\">{token.name}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"text-right\">\n\t\t\t\t\t\t\t\t<p class=\"text-sm font-medium\">{token.balance}</p>\n\t\t\t\t\t\t\t\t<p class=\"text-xs text-text-muted\">${(parseFloat(token.balance) * token.price).toFixed(2)}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t{/each}\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\n\t\t<!-- Swap Button -->\n\t\t<div class=\"flex justify-center\">\n\t\t\t<button\n\t\t\t\tonclick={swapTokens}\n\t\t\t\tclass=\"p-3 bg-surface hover:bg-surface-elevated rounded-full transition-all group border-2 border-border\"\n\t\t\t>\n\t\t\t\t<svg class=\"w-5 h-5 text-text-secondary group-hover:text-primary-500 transition-colors\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4\" />\n\t\t\t\t</svg>\n\t\t\t</button>\n\t\t</div>\n\n\t\t<!-- To Token -->\n\t\t<div class=\"space-y-2\">\n\t\t\t<div class=\"flex justify-between items-center\">\n\t\t\t\t<label class=\"text-sm font-medium text-text-primary\">To</label>\n\t\t\t\t<span class=\"text-xs text-text-muted\">\n\t\t\t\t\tBalance: {toAsset.balance} {toAsset.symbol}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"bg-surface rounded-card p-4\">\n\t\t\t\t<div class=\"flex items-center justify-between mb-3\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tonclick={() => showToSelector = !showToSelector}\n\t\t\t\t\t\tclass=\"flex items-center space-x-2 hover:bg-background rounded-button p-2 transition-all group\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class=\"w-8 h-8 bg-primary-100 rounded-full flex items-center justify-center\">\n\t\t\t\t\t\t\t{toAsset.icon}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"text-left\">\n\t\t\t\t\t\t\t<p class=\"font-medium text-text-primary\">{toAsset.symbol}</p>\n\t\t\t\t\t\t\t<p class=\"text-xs text-text-muted\">{toAsset.name}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<svg class=\"w-4 h-4 text-text-muted group-hover:text-primary-500 transition-colors\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\" />\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<input\n\t\t\t\t\tbind:value={toAmount}\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tstep=\"any\"\n\t\t\t\t\tplaceholder=\"0.0\"\n\t\t\t\t\treadonly\n\t\t\t\t\tclass=\"w-full text-2xl bg-transparent border-none outline-none text-text-primary placeholder-text-muted cursor-not-allowed\"\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t{#if toAmount}\n\t\t\t\t\t<p class=\"text-sm text-text-muted mt-1\">\n\t\t\t\t\t\t≈ ${(parseFloat(toAmount) * toAsset.price).toFixed(2)}\n\t\t\t\t\t</p>\n\t\t\t\t{/if}\n\t\t\t</div>\n\n\t\t\t{#if showToSelector}\n\t\t\t\t<div \n\t\t\t\t\tclass=\"bg-surface-elevated rounded-card border border-border p-2 space-y-1 max-h-60 overflow-y-auto\"\n\t\t\t\t\tin:fly={{ y: -10, duration: 200 }}\n\t\t\t\t\tout:fly={{ y: -10, duration: 150 }}\n\t\t\t\t>\n\t\t\t\t\t{#each availableTokens as token (token.symbol)}\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonclick={() => selectToToken(token)}\n\t\t\t\t\t\t\tclass=\"w-full flex items-center justify-between p-3 rounded-button hover:bg-background transition-all {token.symbol === toAsset.symbol ? 'bg-primary-50 text-primary-700' : ''}\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div class=\"flex items-center space-x-3\">\n\t\t\t\t\t\t\t\t<div class=\"w-8 h-8 bg-primary-100 rounded-full flex items-center justify-center\">\n\t\t\t\t\t\t\t\t\t{token.icon}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"text-left\">\n\t\t\t\t\t\t\t\t\t<p class=\"font-medium\">{token.symbol}</p>\n\t\t\t\t\t\t\t\t\t<p class=\"text-xs text-text-muted\">{token.name}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"text-right\">\n\t\t\t\t\t\t\t\t<p class=\"text-sm font-medium\">{token.balance}</p>\n\t\t\t\t\t\t\t\t<p class=\"text-xs text-text-muted\">${(parseFloat(token.balance) * token.price).toFixed(2)}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t{/each}\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\n\t\t<!-- Swap Details -->\n\t\t{#if fromAmount && toAmount}\n\t\t\t<div class=\"bg-surface rounded-card p-4 space-y-3\" in:fade={{ duration: 200 }}>\n\t\t\t\t<h3 class=\"text-sm font-medium text-text-primary\">Swap Details</h3>\n\t\t\t\t\n\t\t\t\t<div class=\"space-y-2 text-sm\">\n\t\t\t\t\t<div class=\"flex justify-between\">\n\t\t\t\t\t\t<span class=\"text-text-secondary\">Rate</span>\n\t\t\t\t\t\t<span class=\"text-text-primary\">\n\t\t\t\t\t\t\t1 {fromAsset.symbol} = {swapRate.toFixed(6)} {toAsset.symbol}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"flex justify-between\">\n\t\t\t\t\t\t<span class=\"text-text-secondary\">Price Impact</span>\n\t\t\t\t\t\t<span class=\"text-success\">{priceImpact}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"flex justify-between\">\n\t\t\t\t\t\t<span class=\"text-text-secondary\">Network Fee</span>\n\t\t\t\t\t\t<span class=\"text-text-primary\">{estimatedGas}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"flex justify-between\">\n\t\t\t\t\t\t<span class=\"text-text-secondary\">Slippage Tolerance</span>\n\t\t\t\t\t\t<span class=\"text-text-primary\">{slippage}%</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"flex justify-between border-t border-border-light pt-2\">\n\t\t\t\t\t\t<span class=\"text-text-secondary\">Minimum Received</span>\n\t\t\t\t\t\t<span class=\"text-text-primary font-medium\">\n\t\t\t\t\t\t\t{minimumReceived} {toAsset.symbol}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t{/if}\n\n\t\t<!-- Swap Button -->\n\t\t<div class=\"pb-4\">\n\t\t\t<button\n\t\t\t\tonclick={handleSwap}\n\t\t\t\tdisabled={!isValidSwap}\n\t\t\t\tclass=\"w-full py-4 bg-primary-500 hover:bg-primary-600 disabled:bg-border disabled:text-text-muted text-white font-medium rounded-card transition-all disabled:cursor-not-allowed\"\n\t\t\t>\n\t\t\t\t{!fromAmount ? 'Enter Amount' : !isValidSwap ? 'Insufficient Balance' : 'Swap Tokens'}\n\t\t\t</button>\n\t\t</div>\n\t</main>\n</div>"],"names":["fromAsset","symbol","name","balance","icon","toAsset","fromAmount","toAmount","goBack","goto","$$payload","out","$.escape"],"mappings":"0cAQK,IAAAA,UAAA,CACHC,OAAQ,MACRC,KAAM,WACNC,QAAS,SAETC,KAAM,KAIH,IAAAC,QAAA,CACHJ,OAAQ,OACRC,KAAM,aACNC,QAAS,SAETC,KAAM,KAIH,IAAAE,WAAoB,GACpB,IAAAC,SAAkB,YAuEbC,SACUC,MACnB,yiBAoBwBD,yrEAoEVE,UAAAC,KAAA,YAAAC,YAAAZ,UAAUG,YAAUS,YAAAZ,UAAUC,wjBAWrCS,UAAAC,KAAA,GAAAC,YAAAZ,UAAUI,uMAG+BM,UAAAC,KAAA,GAAAC,YAAAZ,UAAUC,oHAChBS,UAAAC,KAAA,GAAAC,YAAAZ,UAAUE,uzBAgBpCI,umDA6DFI,UAAAC,KAAA,YAAAC,YAAAP,QAAQF,YAAUS,YAAAP,QAAQJ,wjBAWjCS,UAAAC,KAAA,GAAAC,YAAAP,QAAQD,uMAGiCM,UAAAC,KAAA,GAAAC,YAAAP,QAAQJ,oHACdS,UAAAC,KAAA,GAAAC,YAAAP,QAAQH,mlBASlCK,8nBAuFS,mOAGpBG,UAAAC,KAAA,GAAAC,YAAa"}