{"version":3,"file":"_layout.svelte.js","sources":["../../../../../../src/routes/preview1/+layout.svelte"],"sourcesContent":["<script lang=\"ts\">\n\timport { onMount } from 'svelte';\n\timport { browser } from '$app/environment';\n\timport '../../lib/themes/wallet-theme.css';\n\n\t// Theme management\n\tlet currentTheme = $state('system');\n\tlet effectiveTheme = $state('light');\n\n\t// Initialize theme\n\tonMount(() => {\n\t\tif (browser) {\n\t\t\t// Get saved theme preference\n\t\t\tconst savedTheme = localStorage.getItem('yakkl-new-wallet-theme') || 'system';\n\t\t\tcurrentTheme = savedTheme;\n\t\t\tapplyTheme(savedTheme);\n\n\t\t\t// Listen for system theme changes\n\t\t\tconst mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n\t\t\tmediaQuery.addListener(handleSystemThemeChange);\n\t\t\t\n\t\t\treturn () => {\n\t\t\t\tmediaQuery.removeListener(handleSystemThemeChange);\n\t\t\t};\n\t\t}\n\t});\n\n\tfunction handleSystemThemeChange(e: MediaQueryListEvent) {\n\t\tif (currentTheme === 'system') {\n\t\t\teffectiveTheme = e.matches ? 'dark' : 'light';\n\t\t\tupdateDocumentTheme();\n\t\t}\n\t}\n\n\tfunction applyTheme(theme: string) {\n\t\tif (!browser) return;\n\t\t\n\t\tcurrentTheme = theme;\n\t\tlocalStorage.setItem('yakkl-new-wallet-theme', theme);\n\n\t\tif (theme === 'system') {\n\t\t\tconst isDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n\t\t\teffectiveTheme = isDark ? 'dark' : 'light';\n\t\t} else {\n\t\t\teffectiveTheme = theme;\n\t\t}\n\n\t\tupdateDocumentTheme();\n\t}\n\n\tfunction updateDocumentTheme() {\n\t\tif (!browser) return;\n\t\t\n\t\tconst html = document.documentElement;\n\t\t\n\t\t// Remove existing theme classes\n\t\thtml.removeAttribute('data-theme');\n\t\thtml.classList.remove('dark', 'light');\n\t\t\n\t\t// Apply new theme\n\t\tif (effectiveTheme === 'dark') {\n\t\t\thtml.setAttribute('data-theme', 'dark');\n\t\t\thtml.classList.add('dark');\n\t\t} else {\n\t\t\thtml.setAttribute('data-theme', 'light');\n\t\t\thtml.classList.add('light');\n\t\t}\n\t}\n\n\t// Export theme functions for child components\n\texport function toggleTheme() {\n\t\tconst themes = ['light', 'dark', 'system'];\n\t\tconst currentIndex = themes.indexOf(currentTheme);\n\t\tconst nextTheme = themes[(currentIndex + 1) % themes.length];\n\t\tapplyTheme(nextTheme);\n\t}\n\n\texport function setTheme(theme: 'light' | 'dark' | 'system') {\n\t\tapplyTheme(theme);\n\t}\n\n\t// Make theme state available to child components\n\texport { currentTheme, effectiveTheme };\n</script>\n\n<div class=\"new-wallet min-h-screen transition-colors duration-200\">\n\t<main class=\"mx-auto max-w-wallet min-h-wallet\">\n\t\t<slot />\n\t</main>\n</div>\n\n<style>\n\t:global(html) {\n\t\tscroll-behavior: smooth;\n\t}\n\t\n\t:global(body) {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tfont-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n\t}\n\n\t/* Ensure smooth transitions */\n\t:global(*) {\n\t\ttransition-property: background-color, border-color, color, fill, stroke;\n\t\ttransition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\t\ttransition-duration: 150ms;\n\t}\n</style>"],"names":["currentTheme","effectiveTheme","toggleTheme","setTheme","theme"],"mappings":"oRAMK,IAAAA,aAAsB,SACtB,IAAAC,eAAwB,iBA+DZC,cAKhB,CAEgB,SAAAC,SAASC,OAEzB"}