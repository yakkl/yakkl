{"version":3,"file":"_page.svelte.js","sources":["../../../../../../../../../../src/routes/(wallet)/accounts/ethereum/transactions/send/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n\timport { browserSvelte } from '$lib/common/environment';\n\timport {\n\t\tyakklGasTransStore,\n\t\tyakklPricingStore,\n\t\tyakklContactsStore,\n\t\tgetYakklContacts,\n\t\tyakklConnectionStore,\n\t\tgetProfile,\n\t\tgetMiscStore,\n\t\tyakklCurrentlySelectedStore,\n\t\tgetYakklCurrentlySelected\n\t} from '$lib/common/stores';\n\timport { decryptData } from '$lib/common/encryption';\n\timport { createForm } from 'svelte-forms-lib';\n\timport * as yup from 'yup';\n\timport { Tabs, TabItem, Timeline, TimelineItem, Spinner, Button, Hr } from 'flowbite-svelte';\n\timport { handleOpenInTab, formatValue, getChainId, deepCopy } from '$lib/utilities/utilities';\n\timport { getLengthInBytes, wait } from '$lib/common/utils';\n\timport { onDestroy, onMount } from 'svelte';\n\timport {\n\t\tETH_BASE_EOA_GAS_UNITS,\n\t\tETH_BASE_SCA_GAS_UNITS,\n\t\tTIMER_CHECK_GAS_PRICE_INTERVAL_TIME\n\t} from '$lib/common/constants';\n\timport { startCheckGasPrices, stopCheckGasPrices, debounce } from '$lib/utilities/gas';\n\timport ErrorNoAction from '$lib/components/ErrorNoAction.svelte';\n\timport Warning from '$lib/components/Warning.svelte';\n\timport WalletManager from '$lib/managers/WalletManager';\n\timport type { Wallet } from '$lib/managers/Wallet';\n\timport { isEthereum } from '$lib/managers/BlockchainGuards';\n\timport {\n\t\tBigNumber,\n\t\tisEncryptedData,\n\t\tparseJsonRpcError,\n\t\ttoHex,\n\t\ttype AccountData,\n\t\ttype Currency,\n\t\ttype CurrentlySelectedData,\n\t\ttype Profile,\n\t\ttype ProfileData,\n\t\ttype TransactionRequest,\n\t\ttype TransactionResponse,\n\t\ttype YakklContact,\n\t\ttype YakklCurrentlySelected\n\t} from '$lib/common';\n\timport type { BigNumberish } from '$lib/common/bignumber';\n\timport { EthereumBigNumber } from '$lib/common/bignumber-ethereum';\n\timport type {\n\t\tTransactionState,\n\t\tGasState,\n\t\tUIState,\n\t\tValueState,\n\t\tConfigState\n\t} from '$lib/common/stateInterfaces';\n\timport { log } from '$lib/common/logger-wrapper';\n\n\t// Toast\n\timport { Toast } from 'flowbite-svelte';\n\timport { slide } from 'svelte/transition';\n\timport Contacts from '$lib/components/Contacts.svelte';\n\timport PincodeVerify from '$lib/components/PincodeVerify.svelte';\n\timport { EOA_FALLBACK_GAS } from '$lib/common/gas-types';\n\t// import { EthereumGasProvider } from '$lib/managers/providers/fees/ethereum/EthereumGasProvider';\n\n\t// Toast\n\n\t// EIP-6969 - A proposal of giving back some of the gas fees to developers.\n\t// Article in Blockworks - https://blockworks.co/news/ethereum-proposal-developers-revenuers\n\n\tlet wallet: Wallet;\n\n\tlet currentlySelected: YakklCurrentlySelected | null;\n\tlet yakklMiscStore: string;\n\tlet profile: Profile | null;\n\tlet txGasLimit: BigNumberish = 21000n;\n\tlet historyCount = 10; // The maximum amount of history transaction to retrieve;\n\n\tlet amountTab;\n\tlet feesTab;\n\tlet activityTab;\n\n\tlet pincode = '';\n\n\tlet toAddress: string;\n\tlet toAddressValue = 0n;\n\n\tlet maxFeePerGasOverride: BigNumberish = 0n;\n\tlet maxPriorityFeePerGasOverride: BigNumberish = 0n;\n\tlet riskFactorMaxFee: number = 0; //1; //2;  // gwei - We add this to maxFeePerGas that comes back from the provider\n\tlet riskFactorPriorityFee: number = 0; //.25;  // Adding a little more incentive for the validators\n\n\tlet greaterThan0 = true;\n\tlet hexData: string; // Optional hex data to send with the transfer\n\tlet checkGasPricesProvider = 'blocknative';\n\tlet checkGasPricesInterval = TIMER_CHECK_GAS_PRICE_INTERVAL_TIME; // ms\n\tlet value: BigNumberish = 0n;\n\tlet txmaxPriorityFeePerGas = '0.0';\n\n\t////////////////////\n\n\t// let blockchain: string = $state('Ethereum');\n\t// let address: string = $state('');\n\t// let txStatus = $state('');\n\t// let txBlockchain = $state('Ethereum');\n\t// let txNetworkTypeName = $state('Mainnet');\n\t// let txURL = $state('');\n\t// let\ttxHash = $state('');\n\t// let\ttxToAddress = $state('');\n\t// let\ttxValue = $state('0.0');\n\t// let\ttxmaxFeePerGas = $state('0.0');\n\t// let txGasPercentIncrease = $state(0);\n\t// let txGasLimitIncrease = $state(0); // This increases the intrinsic gas limit by the amount specified. It is based on the size of optional data * 68. So, if 100 wordsof data is sent then the gas limit will increase by 6800. This is to help to prevent out of gas errors for when the user sends option hex data with the transaction.\n\t// let\ttxNonce = $state(0);\n\t// let\ttxStartTimestamp = $state('');\n\t// let txHistoryTransactions: any[] = $state([]);\n\t// let recipientPays = $state(false); // This is for the future when we allow the user to select who pays the gas fees\n\t// let amountTabOpen = $state(true);\n\t// let feesTabOpen = $state(false);\n\t// let activityTabOpen = $state(false);\n\t// let errorFields = $state(false); // Turns the amount tab red if there is an error\n\t// let toAddressValueUSD = $state('0');\n\t// let gasEstimate = $state(0);\n\t// let gasEstimateUSD = $state('');\n\t// let maxFeePerGas: BigNumberish = $state(0n);\n\t// let maxPriorityFeePerGas: BigNumberish = $state(0n);\n\t// let gasBase = $state(0);\n\t// let gasBaseUSD = $state('$0.00');\n\t// let gasTotalEstimateUSD = $state('');\n\t// let gasTrend = $state('flat');\n\t// let trendColor = $state('text-yellow-500');\n\t// let lastTrendValue: number = $state(0);\n\t// let lowGas: number = $state(0);\n\t// let lowGasUSD = $state(\"$0.00\");\n\t// let marketGas: number = $state(0);\n\t// let marketGasUSD = $state(\"$0.00\");\n\t// let priorityGas: number = $state(0);\n\t// let priorityGasUSD = $state(\"$0.00\");\n\t// let lowPriorityFee: BigNumberish = $state(0n);\n\t// let marketPriorityFee: BigNumberish = $state(0n);\n\t// let priorityPriorityFee: BigNumberish = $state(0n);\n\t// let selectedGas = $state('market');  // If 'custom' then the user updated the value themselves so don't override with a warning.\n\t// let totalUSD = $state('0');\n\t// let smartContract = $state(false);\n\t// let valueType = $state('crypto'); // Other value is 'fiat'. This represents if the user want to enter how much in crypto or how much in fiat money. Example, .0004551 or $50.00\n\t// let valueCrypto = $state('0.0'); // Maintains the crypto value of the valueUSD\n\t// let valueUSD = $state('0.0'); // Maintains the currency equivalent of the valueCrypto\n\t// let error = $state(false);\n\t// let errorValue: string = $state();\n\t// let warning = $state(false);\n\t// let warningValue: string = $state();\n\t// let showContacts = $state(false);\n\t// let showVerify = $state(false);\n\t// let currencyLabel: string = $state();\n\t// let currencyFormat: Intl.NumberFormat = $state();\n\n\t// Look for key in the response body: {\"jsonrpc\":\"2.0\",\"id\":44,\"error\":{\"code\":-32000,\"message\":\"transaction underpriced: gas tip cap 0, minimum needed 1\"}}\n\t// processing response error (body=\"{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"id\\\":44,\\\"error\\\":{\\\"code\\\":-32000,\\\"message\\\":\\\"transaction underpriced: gas tip cap 0, minimum needed 1\\\"}}\", error={\"code\":-32000}, requestBody=...)\n\n\t////////////////////\n\n\tlet priorityClass = $state('border border-gray-100 ');\n\tlet marketClass = $state('border-white border-2 animate-pulse ');\n\tlet lowClass = $state('border border-gray-100 ');\n\tlet unitPrice: number = $state(0);\n\tlet blockNumber: number = $state();\n\tlet estimatedTransactionCount: number = $state();\n\tlet gasLimit: number = $state(21000); //BigNumberish;\n\tlet gasEstimateUSDNumber: number = $state();\n\tlet gasTotalEstimateUSDNumber: any = $state();\n\n\tlet transactionState = $state<TransactionState>({\n\t\tblockchain: 'Ethereum',\n\t\taddress: '',\n\t\ttxStatus: '',\n\t\ttxHash: '',\n\t\ttxToAddress: '',\n\t\ttxQuantity: '0.0',\n\t\ttxmaxFeePerGas: '0.0',\n\t\ttxmaxPriorityFeePerGas: '0.0',\n\t\ttxGasLimit: 21000n,\n\t\ttxNonce: 0,\n\t\ttxStartTimestamp: '',\n\t\ttxHistoryTransactions: [],\n\t\thistoryCount: 10,\n\t\ttxBlockchain: 'Ethereum',\n\t\ttxNetworkTypeName: 'Mainnet',\n\t\ttxURL: '',\n\t\ttxGasPercentIncrease: 0,\n\t\ttxGasLimitIncrease: 0,\n\t\trecipientPays: false\n\t});\n\n\tlet gasState = $state<GasState>({\n\t\tgasEstimate: 0,\n\t\tgasEstimateUSD: '',\n\t\tmaxFeePerGas: 0,\n\t\tmaxPriorityFeePerGas: 0,\n\t\tgasBase: 0,\n\t\tgasBaseUSD: '$0.00',\n\t\tgasTrend: 'flat',\n\t\ttrendColor: 'text-yellow-500',\n\t\tlowGas: 0,\n\t\tlowGasUSD: '$0.00',\n\t\tmarketGas: 0,\n\t\tmarketGasUSD: '$0.00',\n\t\tpriorityGas: 0,\n\t\tpriorityGasUSD: '$0.00',\n\t\tselectedGas: 'market',\n\t\tgasTotalEstimateUSD: '',\n\t\tlastTrendValue: 0,\n\t\tlowPriorityFee: 0,\n\t\tmarketPriorityFee: 0,\n\t\tpriorityPriorityFee: 0\n\t});\n\n\tlet uiState = $state<UIState>({\n\t\tamountTabOpen: true,\n\t\tfeesTabOpen: false,\n\t\tactivityTabOpen: false,\n\t\terrorFields: false,\n\t\tshowConfirm: false,\n\t\tshowContacts: false,\n\t\tshowVerify: false,\n\t\terror: false,\n\t\terrorValue: undefined, // Deprecate\n\t\twarning: false,\n\t\twarningValue: undefined, // Deprecate\n\t\tmessage: undefined // Use this for all messages\n\t});\n\n\tlet valueState = $state<ValueState>({\n\t\ttoAddressValueUSD: '0',\n\t\tvalue: 0n,\n\t\tvalueType: 'crypto',\n\t\tvalueCrypto: '0.0',\n\t\tvalueUSD: '0.0',\n\t\ttotalUSD: '0',\n\t\tcurrencyLabel: '',\n\t\tcurrencyFormat: undefined,\n\t\tsmartContract: false\n\t});\n\n\tlet configState = $state<ConfigState>({\n\t\tcheckGasPricesProvider: 'blocknative',\n\t\tcheckGasPricesInterval: 10,\n\t\triskFactorMaxFee: 0,\n\t\triskFactorPriorityFee: 0\n\t});\n\n\t//////// Toast\n\tlet toastStatus = $state(false);\n\tlet toastCounter = 3;\n\tlet toastMessage = $state('Success');\n\tlet toastType = 'success'; // 'success', 'warning', 'error'\n\n\tfunction toastTrigger(count = 3, msg = 'Success') {\n\t\ttoastStatus = true;\n\t\ttoastCounter = count;\n\t\ttoastMessage = msg;\n\t\ttimeout();\n\t}\n\n\tfunction timeout(): NodeJS.Timeout | void {\n\t\tif (--toastCounter > 0) return setTimeout(timeout, 1000);\n\t\ttoastStatus = false;\n\t}\n\n\t// For tracking down Heisenberg like bug from some 3rd party library\n\tlet mountTime: number;\n\tlet updateCount = 0;\n\n\tonMount(async () => {\n\t\ttry {\n\t\t\tmountTime = Date.now();\n\t\t\tlog.info('Send component mounted', true, {\n\t\t\t\ttimestamp: mountTime,\n\t\t\t\tlocation: window.location.href\n\t\t\t});\n\n\t\t\tif (browserSvelte) {\n\t\t\t\tyakklMiscStore = getMiscStore();\n\t\t\t\tcurrentlySelected = $yakklCurrentlySelectedStore;\n\t\t\t\tif (!currentlySelected) {\n\t\t\t\t\tclearValues();\n\t\t\t\t\tcurrentlySelected = await getYakklCurrentlySelected();\n\t\t\t\t\tif (!currentlySelected) {\n\t\t\t\t\t\tthrow 'No currently selected account found.';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlog.setBackend('localStorage');\n\n\t\t\t\twallet = WalletManager.getInstance(\n\t\t\t\t\t['Alchemy'],\n\t\t\t\t\t['Ethereum'],\n\t\t\t\t\tcurrentlySelected!.shortcuts.network.chainId ?? 1,\n\t\t\t\t\timport.meta.env.VITE_ALCHEMY_API_KEY_ETHEREUM\n\t\t\t\t);\n\n\t\t\t\tvalueState.currencyLabel =\n\t\t\t\t\t(currentlySelected!.preferences.currency as Currency).code ?? 'USD';\n\t\t\t\tvalueState.currencyFormat = Intl.NumberFormat(\n\t\t\t\t\tcurrentlySelected!.preferences.locale ?? 'en-US',\n\t\t\t\t\t{ style: 'currency', currency: valueState.currencyLabel }\n\t\t\t\t);\n\n\t\t\t\ttransactionState.blockchain = currentlySelected!.shortcuts.network.blockchain;\n\t\t\t\ttransactionState.address = currentlySelected!.shortcuts.address;\n\n\t\t\t\tstartGasPricingChecks();\n\t\t\t\thandleRecycle();\n\t\t\t\tloadContacts();\n\t\t\t\tcheckValue();\n\n\t\t\t\t// May can remove this later if we still want to enable all tabs\n\t\t\t\tamountTab = document.getElementById('amount') as HTMLButtonElement;\n\t\t\t\tamountTab.disabled = false;\n\n\t\t\t\tactivityTab = document.getElementById('activity') as HTMLButtonElement;\n\t\t\t\tactivityTab.disabled = false;\n\n\t\t\t\tfeesTab = document.getElementById('fees') as HTMLButtonElement;\n\t\t\t\tfeesTab.disabled = false; //true;\n\n\t\t\t\tvalueState.valueType = 'crypto';\n\t\t\t\t(document.getElementById('showCrypto') as HTMLInputElement).checked = true;\n\t\t\t\t(document.getElementById('showUSD') as HTMLInputElement).checked = false;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tlog.error('Send - onMount', true, e);\n\t\t\tuiState.errorValue = e as string;\n\t\t\tuiState.error = true; // This 'should' show an error message but being in the onMount it may not.\n\t\t}\n\t});\n\n\tonDestroy(() => {\n\t\ttry {\n\t\t\tlog.info('Send component destroying', true, {\n\t\t\t\tupdateCount,\n\t\t\t\tlifetime: Date.now() - mountTime\n\t\t\t});\n\n\t\t\tclearValues(); // Clear all values\n\t\t\tstopCheckGasPrices();\n\t\t} catch (e) {\n\t\t\tlog.error('Send - onDestroy:', true, e);\n\t\t}\n\t});\n\n\tfunction clearValues() {\n\t\ttry {\n\t\t\tclearVerificationValues();\n\t\t\ttoAddressValue = 0n;\n\t\t\tvalueState.valueCrypto = '0.0';\n\t\t\tvalueState.valueUSD = '0.0';\n\t\t\t$form.toAddress = toAddress = '';\n\t\t\t$form.toAddressValue = '';\n\t\t\t$form.hexData = hexData = '';\n\t\t\t$form.maxPriorityFeePerGasOverride = (gasState.maxPriorityFeePerGas = 0).toString();\n\t\t\t$form.maxFeePerGasOverride = (gasState.maxFeePerGas = 0).toString();\n\t\t\tuiState.amountTabOpen = true;\n\t\t\tuiState.feesTabOpen = false;\n\t\t\tuiState.errorFields = false;\n\t\t\ttransactionState.txNetworkTypeName = 'Mainnet';\n\t\t\ttransactionState.txURL = '';\n\t\t\ttransactionState.txHash = '';\n\t\t\ttransactionState.txToAddress = '';\n\t\t\ttransactionState.txQuantity = '0.0';\n\t\t\ttransactionState.txGasPercentIncrease = 0; // This is a percentage increase to the gas fee to aid in unblocking transactions and must be an integer and not a float\n\t\t\ttransactionState.txmaxFeePerGas = '0.0';\n\t\t\ttxmaxPriorityFeePerGas = '0.0';\n\t\t\ttxGasLimit = 21000n;\n\t\t\ttransactionState.txGasLimitIncrease = 0;\n\t\t\ttransactionState.txNonce = 0;\n\t\t\ttransactionState.recipientPays = false;\n\t\t\ttransactionState.txStartTimestamp = '';\n\t\t\ttransactionState.txHistoryTransactions = [];\n\t\t\tvalueState.valueType = 'crypto';\n\t\t} catch (e) {\n\t\t\tlog.error('Send - clearValues', true, e);\n\t\t}\n\t}\n\n\t// Simply clear only the popup verfication values\n\tfunction clearVerificationValues() {\n\t\tif (browserSvelte) {\n\t\t\ttry {\n\t\t\t\tpincode = '';\n\t\t\t} catch (e) {\n\t\t\t\tlog.error('Send - clearVerificationValues', true, e);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync function checkValue() {\n\t\ttry {\n\t\t\tif (browserSvelte) {\n\t\t\t\ttry {\n\t\t\t\t\tcurrentlySelected = $yakklCurrentlySelectedStore;\n\t\t\t\t\tvalue = currentlySelected!.shortcuts.quantity ?? 0n;\n\n\t\t\t\t\tif ((value.valueOf() as bigint) <= 0n) {\n\t\t\t\t\t\tgreaterThan0 = false;\n\t\t\t\t\t\tuiState.error = true;\n\t\t\t\t\t\tuiState.errorValue = `The current account, ${currentlySelected!.shortcuts.address}, has a 0 balance - there are insufficient funds in this account.`;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tuiState.error = true;\n\t\t\t\t\tuiState.errorValue = e as string;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tlog.error('Send - checkValue', true, e);\n\t\t}\n\t}\n\n\tfunction validateDOMState() {\n\t\t// Check for any detached elements or common issues\n\t\tconst tabs = document.querySelectorAll('[role=\"tab\"]');\n\t\tconst panels = document.querySelectorAll('[role=\"tabpanel\"]');\n\t\tif (tabs.length !== panels.length) {\n\t\t\tthrow new Error('Tab/Panel mismatch detected');\n\t\t}\n\t}\n\n\tfunction startGasPricingChecks() {\n\t\ttry {\n\t\t\tstartCheckGasPrices(checkGasPricesProvider, checkGasPricesInterval);\n\t\t} catch (e) {\n\t\t\tlog.error('Send - startGasPricingChecks', true, e);\n\t\t\tclearVerificationValues();\n\t\t}\n\t}\n\n\t// Allows for dynamic update on changes to value fields\n\tasync function onBlur(e: any) {\n\t\ttry {\n\t\t\ttoAddress = $form.toAddress;\n\n\t\t\tif ($form.toAddress) {\n\t\t\t\t// Checks to see if address belongs to a smart contract. If so, then it will have a larger base gas fee.\n\t\t\t\tconst blockchain = wallet.getBlockchain();\n\t\t\t\tif (blockchain.isSmartContractSupported()) {\n\t\t\t\t\tvalueState.smartContract = (await blockchain.isSmartContract($form.toAddress)) ?? false;\n\t\t\t\t} else {\n\t\t\t\t\tvalueState.smartContract = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (valueState.valueType !== 'fiat') {\n\t\t\t\tvalueState.valueUSD = valueState.currencyFormat\n\t\t\t\t\t? valueState.currencyFormat.format(Number($form.toAddressValue) * Number(unitPrice))\n\t\t\t\t\t: '0.00'; // Fixed to 2 decimal places but may need to pull from locale\n\t\t\t} else {\n\t\t\t\tvalueState.valueCrypto = Number(\n\t\t\t\t\tNumber($form.toAddressValue) / Number(unitPrice)\n\t\t\t\t).toString();\n\t\t\t}\n\n\t\t\tvalueState.toAddressValueUSD = valueState.valueUSD;\n\t\t\tvalueState.totalUSD = valueState.currencyFormat\n\t\t\t\t? valueState.currencyFormat.format(Number(valueState.valueUSD) + gasTotalEstimateUSDNumber)\n\t\t\t\t: '0.00';\n\t\t} catch (e) {\n\t\t\tlog.error('Send - onBlur', true, e);\n\t\t}\n\t}\n\n\tconst { form, errors, handleChange, handleSubmit } = createForm({\n\t\tinitialValues: {\n\t\t\ttoAddress: '',\n\t\t\ttoAddressValue: '',\n\t\t\tmaxPriorityFeePerGasOverride: '0',\n\t\t\tmaxFeePerGasOverride: '0',\n\t\t\thexData: ''\n\t\t},\n\t\tvalidationSchema: yup.object().shape({\n\t\t\ttoAddress: yup\n\t\t\t\t.string()\n\t\t\t\t.required('Please enter the crypto address you wish to send to')\n\t\t\t\t.matches(/^(0x)?[0-9a-fA-F]{40}$|^.*\\.eth$/, 'Must be a valid address or ENS name'),\n\t\t\ttoAddressValue: yup\n\t\t\t\t.string()\n\t\t\t\t.trim()\n\t\t\t\t.required('Please enter the amount of ETH you wish to send')\n\t\t\t\t.matches(/^[0-9.]{1,}$/, 'Only numbers are allowed since this is a value field'),\n\t\t\thexData: yup.string().optional(),\n\t\t\tmaxPriorityFeePerGasOverride: yup\n\t\t\t\t.string()\n\t\t\t\t.trim()\n\t\t\t\t.required(\n\t\t\t\t\t'Please enter or accept the amount of estimate Gas Fees for this transaction in gwei'\n\t\t\t\t)\n\t\t\t\t.matches(/^[0-9.]{1,}$/, 'Only numbers are allowed since this is a value field'),\n\t\t\tmaxFeePerGasOverride: yup\n\t\t\t\t.string()\n\t\t\t\t.trim()\n\t\t\t\t.required(\n\t\t\t\t\t'Please enter or accept the max Gas Fee you are willing to pay for this transaction in gwei'\n\t\t\t\t)\n\t\t\t\t.matches(/^[0-9.]{1,}$/, 'Only numbers are allowed since this is a value field')\n\t\t}),\n\t\tonSubmit: async (data) => {\n\t\t\ttry {\n\t\t\t\tuiState.showVerify = true; // Show the PincodeVerify modal and let it follow the process from there\n\t\t\t} catch (e) {\n\t\t\t\tlog.error('Send - onSubmit', true, e);\n\t\t\t\tuiState.errorValue = e as string;\n\t\t\t\tuiState.error = true;\n\t\t\t}\n\t\t}\n\t});\n\n\t// Not currently used\n\t// An option at a later time would be to create a confirmation stack where all confirmation where checked here and then if needed it would be added to a stack. The stack would be cycled through and any non-continuing would stop before verification to all the user to correct it\n\tfunction checkForConfirms(data: any) {\n\t\tif (data.toAddress === $yakklCurrentlySelectedStore.shortcuts.address) {\n\t\t\t// Use the warning Values\n\t\t\tuiState.message =\n\t\t\t\t\"The 'To' address is the same as the 'From' address. This will result in a transaction cancel like transaction with no value being sent. However, gas fees are ALWAYS paid!\";\n\t\t\tuiState.showConfirm = true;\n\t\t\treturn;\n\t\t}\n\t}\n\n\tfunction isChecked(id: string) {\n\t\tif (browserSvelte) {\n\t\t\ttry {\n\t\t\t\tconst element = document.getElementById(id) as HTMLInputElement;\n\t\t\t\tif (element) {\n\t\t\t\t\treturn element.checked;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tlog.error('Send - isChecked', true, e);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// $form validation - not pincode validation\n\tasync function validate(data: any, bypassWarning = false) {\n\t\ttry {\n\t\t\tlet address = data.toAddress;\n\t\t\tlet resolvedAddr = null;\n\n\t\t\t// Always need to verify verification values to be safe\n\t\t\tlet profile = await getProfile();\n\t\t\tif (!profile) {\n\t\t\t\tthrow 'No profile found';\n\t\t\t}\n\n\t\t\t// NOTE: Need to implement the confirmation stack\n\t\t\t// Warn if from and to address are the same\n\t\t\t// if (address === transactionState.address && !bypassWarning) {\n\t\t\t//   uiState.warningValue = \"The 'To' address is the same as the 'From' address. This will result in a transaction cancel like transaction with no value being sent. However, gas fees are ALWAYS paid! Do you wish to continue?\";\n\t\t\t//   uiState.warning = true;\n\t\t\t//   return;\n\t\t\t// }\n\n\t\t\tmaxPriorityFeePerGasOverride = BigNumber.from(data.maxPriorityFeePerGasOverride);\n\t\t\tmaxFeePerGasOverride = BigNumber.from(data.maxFeePerGasOverride);\n\n\t\t\ttoAddressValue = EthereumBigNumber.fromEther(\n\t\t\t\tvalueState.valueType != 'fiat' ? data.toAddressValue : valueState.valueCrypto\n\t\t\t).toBigInt() as bigint;\n\n\t\t\tif (data.hexData && data.hexData.length > 0) {\n\t\t\t\tif (data.hexData !== '0x') {\n\t\t\t\t\thexData = toHex(data.hexData);\n\t\t\t\t} else {\n\t\t\t\t\thexData = data.hexData;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdata.hexData = hexData = '0x';\n\t\t\t}\n\n\t\t\tconst blockchain = wallet.getBlockchain();\n\t\t\tif (isEthereum(blockchain)) {\n\t\t\t\tresolvedAddr = await blockchain.resolveName(address);\n\t\t\t} else {\n\t\t\t\t// Handle cases where the blockchain is not Ethereum\n\t\t\t}\n\n\t\t\tif (resolvedAddr) {\n\t\t\t\taddress = resolvedAddr;\n\t\t\t}\n\n\t\t\tif (!blockchain.isAddress(address)) {\n\t\t\t\tuiState.warningValue = `Wallet Address ${address} is not a valid address. This can be verified on a platform like https://etherscan.io. A valid toAddress is required.`;\n\t\t\t\tuiState.warning = true;\n\t\t\t\tclearVerificationValues();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttoAddress = address;\n\n\t\t\t// Double check the gas fees:\n\t\t\t// If the gas fees are too low then we need to increase them\n\t\t\t// NOTE: Once the new GasProvider is implemented, this will most likely be removed\n\t\t\tif (gasState.maxFeePerGas === 0) {\n\t\t\t\tgasState.maxFeePerGas = BigNumber.from(EOA_FALLBACK_GAS.GWEI.NORMAL.MAX_FEE).toNumber();\n\t\t\t}\n\t\t\tif (gasState.maxPriorityFeePerGas === 0) {\n\t\t\t\tgasState.maxPriorityFeePerGas = BigNumber.from(\n\t\t\t\t\tEOA_FALLBACK_GAS.GWEI.NORMAL.PRIORITY_FEE\n\t\t\t\t).toNumber();\n\t\t\t}\n\n\t\t\tconst feePerGas: number = BigNumber.from(gasState.maxFeePerGas).toNumber() as number;\n\t\t\tif (feePerGas < gasState.gasEstimate) {\n\t\t\t\tuiState.warningValue =\n\t\t\t\t\t'The transaction Max Fee Per Gas Unit is LESS than the estimated Gas Fee. This may result in a slow transaction or no transaction at all. Keeping the Max Fee Per Gas Unit equal or greater than the estimated Gas Fee increases the possibility of a faster transaction time.';\n\t\t\t\tclearVerificationValues();\n\t\t\t\tuiState.warning = true;\n\t\t\t} else {\n\t\t\t\t// Sending to yourself with $0 amount is a good way to cancel a transaction if it has not gone through!\n\t\t\t\t// By sending to yourself, you can cancel a pending transaction. Gas fees are ALWAYS paid!\n\t\t\t\tif (greaterThan0) {\n\t\t\t\t\tif ($yakklConnectionStore) {\n\t\t\t\t\t\thandleProgress('amountTab', 'activityTab');\n\t\t\t\t\t\tawait processTransaction(); // This is the STARTING POINT! Accept the defaults for now\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclearVerificationValues();\n\t\t\t\t\t\tuiState.warningValue =\n\t\t\t\t\t\t\t'Your Internet connection appears to be down at the moment. Try again later.';\n\t\t\t\t\t\tuiState.warning = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclearVerificationValues();\n\t\t\t\t\tuiState.errorValue = 'There are insufficient funds for this transaction.';\n\t\t\t\t\tuiState.error = true;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tlog.error('Send - validate', true, e);\n\t\t\tclearVerificationValues();\n\t\t\tuiState.errorValue = e as string;\n\t\t\tuiState.error = true;\n\t\t}\n\t}\n\n\tasync function loadContacts() {\n\t\ttry {\n\t\t\t$yakklContactsStore = await getYakklContacts(); // Don't really need this now. The $yakklContactsStore is already set in the store\n\t\t} catch (e) {\n\t\t\tlog.error('Send - loadContacts', true, e);\n\t\t\tclearVerificationValues();\n\t\t}\n\t}\n\n\tasync function loadTransactionHistory(\n\t\tnetworkType: string,\n\t\taddress: string,\n\t\thistoryCount: number\n\t) {\n\t\ttry {\n\t\t\tlet subDomainName = $yakklCurrentlySelectedStore?.shortcuts.network.explorer; //txNetworkTypeName.toLowerCase() !== 'mainnet' ? txNetworkTypeName.toLowerCase() + '.' : '';\n\t\t\tlet apiSubDomainName =\n\t\t\t\ttransactionState.txNetworkTypeName.toLowerCase() !== 'mainnet'\n\t\t\t\t\t? 'api-' + transactionState.txNetworkTypeName.toLowerCase()\n\t\t\t\t\t: 'api';\n\n\t\t\tcurrentlySelected = $yakklCurrentlySelectedStore;\n\t\t\tconst etherscanUrl = `https://${apiSubDomainName}.etherscan.io/api?module=account&action=txlist&address=${address}&startblock=0&endblock=99999999&page=1&offset=${historyCount}&sort=desc&apikey=${import.meta.env.VITE_ETHERSCAN_API_KEY}`; // TODO: Change this to send to our edges and change keys\n\n\t\t\tif (!$yakklConnectionStore) {\n\t\t\t\tthrow 'Warning. Your Internet connection appears to be down. Try again later.';\n\t\t\t}\n\n\t\t\tconst response = await fetch(etherscanUrl);\n\t\t\tconst contentType = response.headers.get('content-type');\n\n\t\t\tlet data: any;\n\t\t\tif (contentType && contentType.includes('application/json')) {\n\t\t\t\tdata = await response.json();\n\t\t\t} else if (contentType && contentType.includes('text/html')) {\n\t\t\t\tdata = await response.text();\n\t\t\t\t// throw new Error(`Received HTML instead of JSON: ${data}`);\n\t\t\t\tlog.error('Send - Received HTML instead of JSON:', true, data);\n\t\t\t} else {\n\t\t\t\t// throw new Error('Unsupported content type: ' + contentType);\n\t\t\t\tlog.error('Send - Unsupported content type:', true, contentType);\n\t\t\t}\n\n\t\t\t// Throw error if there is an error in the data - later\n\n\t\t\ttransactionState.txHistoryTransactions = [];\n\t\t\tfor (let element of data.result) {\n\t\t\t\tlet yakklHistory = {\n\t\t\t\t\tid: currentlySelected!.id,\n\t\t\t\t\ttype: 'etherscan',\n\t\t\t\t\tchainId: getChainId(networkType),\n\t\t\t\t\tformattedTimestamp: new Date(parseInt(element.timeStamp) * 1000),\n\t\t\t\t\texplorer: subDomainName + '/tx/' + element.hash, //'https://' + subDomainName + 'etherscan.io/tx/' + element.hash,\n\t\t\t\t\tblockNumber: element.blockNumber, // From here down comes from etherscan. Above here is our data\n\t\t\t\t\ttimestamp: element.timeStamp,\n\t\t\t\t\thash: element.hash,\n\t\t\t\t\tnonce: element.nonce,\n\t\t\t\t\tblockHash: element.blockHash,\n\t\t\t\t\ttransactionIndex: element.transactionIndex,\n\t\t\t\t\tfrom: element.from,\n\t\t\t\t\tto: element.to,\n\t\t\t\t\tvalue: formatValue(transactionState.blockchain, element.value), // TODO: Change this to support EthereumBigNumber\n\t\t\t\t\tgas: element.gas,\n\t\t\t\t\tgasPrice: element.gasPrice,\n\t\t\t\t\tisError: element.isError,\n\t\t\t\t\ttxtreceipt_status: element.txreceipt_status,\n\t\t\t\t\tinput: element.input,\n\t\t\t\t\tcontractAddress: element.contractAddress,\n\t\t\t\t\tcumulativeGasUsed: element.cumulativeGasUsed,\n\t\t\t\t\tgasUsed: element.gasUsed,\n\t\t\t\t\tconfirmations: element.confirmations,\n\t\t\t\t\tmethodId: element.methodId,\n\t\t\t\t\tfunctionName: element.functionName\n\t\t\t\t};\n\n\t\t\t\t// Example of a history transaction for Sepolia:\n\t\t\t\t// {\n\t\t\t\t// \tblockNumber: \"3844890\",\n\t\t\t\t// \ttimeStamp: \"1688751360\",\n\t\t\t\t// \thash: \"0x9f0a3aa982ffd0637e59207fdca8852ea27bb60c6d312c3562d23fda906032e4\",\n\t\t\t\t// \tnonce: \"0\",\n\t\t\t\t// \tblockHash: \"0x8fbdee9b285695bd4c11a73623f5461a8c0d82709cae26dd3558976d597c6df7\",\n\t\t\t\t// \ttransactionIndex: \"16\",\n\t\t\t\t// \tfrom: \"0xb14a122382cd291f13dbc233abdedbca226fa93e\",\n\t\t\t\t// \tto: \"0xef9bdacbf5cd84bc66df3a2dc0c8bf22e221cb34\",\n\t\t\t\t// \tvalue: \"15000000000000000\",\n\t\t\t\t// \tgas: \"21000\",\n\t\t\t\t// \tgasPrice: \"600000010\",\n\t\t\t\t// \tisError: \"0\",\n\t\t\t\t// \ttxreceipt_status: \"1\",\n\t\t\t\t// \tinput: \"0x\",\n\t\t\t\t// \tcontractAddress: \"\",\n\t\t\t\t// \tcumulativeGasUsed: \"10684268\",\n\t\t\t\t// \tgasUsed: \"21000\",\n\t\t\t\t// \tconfirmations: \"2514084\",\n\t\t\t\t// \tmethodId: \"0x\",\n\t\t\t\t// \tfunctionName: \"\"\n\t\t\t\t// },\n\n\t\t\t\ttransactionState.txHistoryTransactions.push(yakklHistory);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tlog.error('Send - loadTransactionHistory', true, e);\n\t\t\tuiState.errorValue = e as string;\n\t\t\tuiState.error = true;\n\t\t\tclearVerificationValues();\n\t\t}\n\t}\n\n\tfunction handleClose() {\n\t\ttry {\n\t\t\tuiState.error = false;\n\t\t\tuiState.warning = false;\n\t\t} catch (e) {\n\t\t\tlog.error('Send - handleClose', true, e);\n\t\t}\n\t}\n\n\t// Returns the profile if the pincode is correct or null if it is not\n\tasync function verifyWithPin(pin: string): Promise<Profile | null> {\n\t\ttry {\n\t\t\t// If no pin passed then it has not be set by the user yet via PincodeVerify.\n\t\t\tif (!pin) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet profile: Profile | null = await getProfile();\n\t\t\tif (profile === null) {\n\t\t\t\tthrow 'Profile was not found.';\n\t\t\t}\n\n\t\t\tlet profileEncrypted = null;\n\n\t\t\tif (isEncryptedData(profile.data)) {\n\t\t\t\tprofileEncrypted = deepCopy(profile);\n\t\t\t\tawait decryptData(profile?.data, yakklMiscStore).then((result) => {\n\t\t\t\t\t(profile as Profile).data = result as ProfileData;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (pin === (profile.data as ProfileData).pincode) {\n\t\t\t\tprofile = null;\n\t\t\t\treturn profileEncrypted;\n\t\t\t} else {\n\t\t\t\tthrow 'PINCODE did not match. Please try again.';\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tlog.error('Send - verifyWithPin', true, e);\n\t\t\tuiState.errorValue = e as string;\n\t\t\tuiState.error = true;\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// unblockIncrease is a percentage increase (100 is added to it and then multiplied)\n\t// It MUST be as an integer and not a float. Example, 10% increase would be 10 and not .10\n\n\tasync function processTransaction(\n\t\tunblockIncrease = 0,\n\t\tnonce = -1,\n\t\thash: string = '',\n\t\tcancel = false,\n\t\teoa = true\n\t) {\n\t\ttry {\n\t\t\tcurrentlySelected = deepCopy($yakklCurrentlySelectedStore); // Allows for a deep copy of the store that does not impact the actual store\n\n\t\t\tprofile = await verifyWithPin(deepCopy(pincode)); // Verifies one more time. deepCopy is used to ensure that the pincode has not changed\n\t\t\tif (!profile) {\n\t\t\t\tthrow 'Unable to verify your PINCODE. Please try again.'; //YAKKL pincode not valid. Please try again.';\n\t\t\t}\n\n\t\t\t// Create a transaction object\n\t\t\t// Override values are set at submit time so we use those\n\t\t\t// If cancel = true then have from and to be the same address, value = 0 and increase gas\n\n\t\t\tconst priorityFeePerGas = Math.max(\n\t\t\t\tNumber(gasState.maxPriorityFeePerGas),\n\t\t\t\tNumber(maxPriorityFeePerGasOverride)\n\t\t\t); // EthereumBigNumber.max(maxPriorityFeePerGas, maxPriorityFeePerGasOverride).toString(); //BigNumber.max(maxPriorityFeePerGas, maxPriorityFeePerGasOverride));\n\t\t\tlet feePerGas = Math.max(Number(gasState.maxFeePerGas), Number(maxFeePerGasOverride)); //EthereumBigNumber.max(maxFeePerGas, maxFeePerGasOverride);\n\n\t\t\t// Check unblockIncrease and add it to the maxFeePerGasOverride\n\t\t\tif (unblockIncrease > 0) {\n\t\t\t\ttransactionState.txGasPercentIncrease += unblockIncrease;\n\t\t\t\tfeePerGas = Math.max(\n\t\t\t\t\tNumber(gasState.maxFeePerGas) * ((100 + transactionState.txGasPercentIncrease) / 100),\n\t\t\t\t\tNumber(gasState.maxFeePerGas)\n\t\t\t\t); // In gwei, bumps up the gas fee by the percentage to aid in unblocking transactions\n\t\t\t}\n\n\t\t\tconst transaction: TransactionRequest = {\n\t\t\t\ttype: 2,\n\t\t\t\tfrom: transactionState.address ? transactionState.address : '',\n\t\t\t\tto: cancel === false ? toAddress : currentlySelected!.shortcuts.address, // Allows for sending to yourself to cancel a transaction\n\t\t\t\tquantity: cancel === true ? 0n : EthereumBigNumber.toWei(toAddressValue).value, //parseEther(toAddressValue.toString()), // If cancel is true then set value to 0\n\t\t\t\tchainId: currentlySelected!.shortcuts.network.chainId,\n\t\t\t\tgasLimit: gasLimit,\n\t\t\t\tmaxPriorityFeePerGas: EthereumBigNumber.toGwei(priorityFeePerGas).value, //parseUnits(priorityFeePerGas.toString(), 'gwei'),   // In gwei\n\t\t\t\tmaxFeePerGas: EthereumBigNumber.toGwei(feePerGas).value, // parseUnits(feePerGas.toString(), 'gwei'),\n\t\t\t\tdata: hexData.length > 0 ? hexData : '0x',\n\t\t\t\thash: hash,\n\t\t\t\tnonce: nonce\n\t\t\t};\n\n\t\t\t// Double check the gas fees:\n\t\t\t// If the gas fees are too low then we need to increase them\n\t\t\t// If the gas fees are too high then we need to decrease them\n\t\t\t// We can do gas estimate from the provider and/or set minimums for EOAs\n\n\t\t\t// const gasProvider = new EthereumGasProvider(provider, blockchain, priceProvider);\n\t\t\t// const normalEstimate = await gasProvider.getEOATransferGasEstimate(\n\t\t\t//       recipientAddress,\n\t\t\t//       amount,\n\t\t\t//       { speed: TransactionSpeed.NORMAL }\n\t\t\t// );\n\n\t\t\t// NOTE: In next release, add GasProvider features including new UI and the following will most likely be removed\n\t\t\t// Fallback if the gas estimate is not available\n\t\t\tif (!transaction.gasLimit) {\n\t\t\t\ttransaction.gasLimit = EOA_FALLBACK_GAS.LIMITS.BASE;\n\t\t\t}\n\t\t\tif (!transaction.maxFeePerGas) {\n\t\t\t\ttransaction.maxFeePerGas = EOA_FALLBACK_GAS.GWEI.NORMAL.MAX_FEE;\n\t\t\t}\n\t\t\tif (!transaction.maxPriorityFeePerGas) {\n\t\t\t\ttransaction.maxPriorityFeePerGas = EOA_FALLBACK_GAS.GWEI.NORMAL.PRIORITY_FEE;\n\t\t\t}\n\n\t\t\t// let hexTransaction = convertToHexStrings(transaction,['type', 'nonce']);\n\t\t\t// All 'tx' prefix variables are available for the UI and misc\n\t\t\ttransactionState.txBlockchain = transactionState.blockchain;\n\t\t\ttransactionState.txNetworkTypeName = currentlySelected!.shortcuts.network.name;\n\n\t\t\ttransactionState.txURL =\n\t\t\t\t$yakklCurrentlySelectedStore?.shortcuts.network.explorer +\n\t\t\t\t'/address/' +\n\t\t\t\ttransactionState.address;\n\t\t\ttransactionState.txHash = transaction.hash ?? '';\n\t\t\ttransactionState.txToAddress = transaction.to ?? '';\n\t\t\ttransactionState.txQuantity = transaction.quantity?.toString() ?? '0.0';\n\t\t\ttransactionState.txmaxFeePerGas = transaction.maxFeePerGas?.toString() ?? '0';\n\t\t\ttxmaxPriorityFeePerGas = transaction.maxPriorityFeePerGas?.toString() ?? '0';\n\t\t\ttxGasLimit = transaction.gasLimit as bigint;\n\t\t\ttransactionState.txNonce = Number(transaction.nonce);\n\t\t\ttransactionState.txStartTimestamp = Date.now().toString();\n\n\t\t\tlet privateKey: string | null | undefined = null;\n\n\t\t\tif (isEncryptedData(currentlySelected?.data)) {\n\t\t\t\tlet result = await decryptData(currentlySelected?.data, yakklMiscStore);\n\t\t\t\tlet data = result as CurrentlySelectedData;\n\t\t\t\tif (isEncryptedData(data.account?.data)) {\n\t\t\t\t\tlet result = await decryptData(data.account.data, yakklMiscStore);\n\t\t\t\t\tlet accountData = result as AccountData;\n\t\t\t\t\tprivateKey = accountData.privateKey;\n\t\t\t\t} else {\n\t\t\t\t\tprivateKey = data ? data?.account?.data.privateKey : null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprivateKey = currentlySelected?.data\n\t\t\t\t\t? ((currentlySelected?.data as CurrentlySelectedData).account?.data as AccountData)\n\t\t\t\t\t\t\t.privateKey\n\t\t\t\t\t: null;\n\t\t\t}\n\n\t\t\tif (privateKey === null) {\n\t\t\t\tthrow 'Private key was not obtained';\n\t\t\t}\n\n\t\t\tawait wallet.setSigner(privateKey!);\n\n\t\t\tconst tx: TransactionResponse = await wallet.sendTransaction(transaction);\n\n\t\t\tclearVerificationValues(); // Clear verification values as soon as possible\n\t\t\tif (tx) {\n\t\t\t\ttoastTrigger(2, 'Sending to the blockchain...');\n\t\t\t\ttransactionState.txStatus = 'pending';\n\t\t\t\ttransactionState.txHash = tx.hash;\n\n\t\t\t\ttransactionState.txURL = $yakklCurrentlySelectedStore?.shortcuts.network.explorer + '/tx/';\n\t\t\t\ttransactionState.txURL += tx.hash;\n\n\t\t\t\ttransactionState.txNonce = Number(tx.nonce);\n\n\t\t\t\tconst result = await tx.wait();\n\t\t\t\ttransactionState.txStatus = 'mined';\n\n\t\t\t\ttoastTrigger(2, 'Success - Processed on the Blockchain!');\n\t\t\t\twait(2000); // So that Etherscan has time to update\n\t\t\t\thandleRecycle(); // Adds transactions again to the store OR we need to remove txTransactions etc from clearValues()\n\t\t\t\tclearValues();\n\t\t\t} else {\n\t\t\t\tthrow 'No transaction was returned. Something went wrong.';\n\t\t\t}\n\t\t} catch (e: any) {\n\t\t\t// Verify if the error is a response error and if so, process it for a more accurate error message\n\n\t\t\tconst errorValue = parseJsonRpcError(e);\n\n\t\t\tlog.warn(e);\n\t\t\tlog.error('Send - processTransaction', true, errorValue);\n\n\t\t\tuiState.errorValue = errorValue.message; //e?.message ?? e;\n\t\t\tuiState.error = true;\n\t\t} finally {\n\t\t\tlog.info('processTransaction: Clearing verification values.');\n\t\t\tclearVerificationValues();\n\t\t}\n\t}\n\n\t// May want to remove this if we still want to keep all tabs open\n\tfunction handleProgress(currentTab: string, nextTab: string) {\n\t\tswitch (currentTab) {\n\t\t\tcase 'amountTab':\n\t\t\t\tuiState.amountTabOpen = false;\n\t\t\t\tbreak;\n\n\t\t\tcase 'activityTab':\n\t\t\t\tuiState.activityTabOpen = false;\n\t\t\t\tbreak;\n\n\t\t\tcase 'feesTab':\n\t\t\t\tuiState.feesTabOpen = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tswitch (nextTab) {\n\t\t\tcase 'amountTab':\n\t\t\t\tuiState.amountTabOpen = true;\n\t\t\t\tbreak;\n\n\t\t\tcase 'activityTab':\n\t\t\t\tuiState.activityTabOpen = true;\n\t\t\t\tbreak;\n\n\t\t\tcase 'feesTab':\n\t\t\t\tuiState.feesTabOpen = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tfunction handleCurrentTab(currentTab: string) {\n\t\tswitch (currentTab) {\n\t\t\tcase 'amountTab':\n\t\t\t\tuiState.amountTabOpen = true;\n\t\t\t\tuiState.feesTabOpen = false;\n\t\t\t\tuiState.activityTabOpen = false;\n\t\t\t\tbreak;\n\n\t\t\tcase 'feesTab':\n\t\t\t\tuiState.amountTabOpen = false;\n\t\t\t\tuiState.feesTabOpen = true;\n\t\t\t\tuiState.activityTabOpen = false;\n\t\t\t\tbreak;\n\n\t\t\tcase 'activityTab':\n\t\t\t\tuiState.activityTabOpen = true;\n\t\t\t\tuiState.amountTabOpen = false;\n\t\t\t\tuiState.feesTabOpen = false;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tfunction handleMax() {\n\t\t// May need to reduce based on estimated fees\n\t\ttry {\n\t\t\t$form.toAddressValue =\n\t\t\t\tEthereumBigNumber.toEtherString($yakklCurrentlySelectedStore!.shortcuts.quantity) ?? '0.0';\n\t\t} catch (e) {\n\t\t\tlog.error('Send - handleMax', true, e);\n\t\t\tclearVerificationValues();\n\t\t}\n\t}\n\n\tfunction handleCancelReset() {\n\t\ttry {\n\t\t\tclearValues(); // This resets but not cancels a transaction that is already being processed\n\t\t} catch (e) {\n\t\t\tlog.error('Send - handleCancelReset', true, e);\n\t\t}\n\t}\n\n\tfunction handleGasSelect(select: string) {\n\t\ttry {\n\t\t\tlet selectedClass = 'border-2 animate-pulse ';\n\t\t\tlet nonSelectedClass = 'border ';\n\n\t\t\tgasState.selectedGas = select;\n\n\t\t\tpriorityClass = nonSelectedClass;\n\t\t\tmarketClass = nonSelectedClass;\n\t\t\tlowClass = nonSelectedClass;\n\n\t\t\tif (select === 'priority') {\n\t\t\t\tpriorityClass = selectedClass;\n\t\t\t\tgasState.maxPriorityFeePerGas = gasState.priorityPriorityFee;\n\t\t\t\tgasState.maxFeePerGas = gasState.priorityGas;\n\t\t\t} else if (select === 'low') {\n\t\t\t\tlowClass = selectedClass;\n\t\t\t\tgasState.maxPriorityFeePerGas = gasState.lowPriorityFee;\n\t\t\t\tgasState.maxFeePerGas = gasState.lowGas;\n\t\t\t} else {\n\t\t\t\tmarketClass = selectedClass;\n\t\t\t\tgasState.maxPriorityFeePerGas = gasState.marketPriorityFee;\n\t\t\t\tgasState.maxFeePerGas = gasState.marketGas;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tlog.error('Send - handleGasSelect', true, e);\n\t\t\tclearVerificationValues();\n\t\t}\n\t}\n\n\tfunction handleContact(contact: YakklContact) {\n\t\ttry {\n\t\t\ttoAddress = $form.toAddress = contact.address;\n\t\t\tuiState.showContacts = false;\n\t\t} catch (e) {\n\t\t\tlog.error('Send - handleContact', true, e);\n\t\t\tclearVerificationValues();\n\t\t}\n\t}\n\n\t// increase is a percent like 10% = 10 and not .10\n\tasync function handleSpeedUp(increase = 10, nonce: number, hash: string) {\n\t\ttry {\n\t\t\tawait processTransaction(increase, nonce, hash, false);\n\t\t\t// processTransaction - keep from and to the same, keep value the same and raise maxFeePerGas & raise maxPriorityFeePerGas (optional for priorityfee) higher so that the validators take it! NOTE: Gas fee is ALWAYS charged!!\n\t\t} catch (e) {\n\t\t\tlog.error('Send - handleSpeedUp', true, e);\n\t\t\tclearVerificationValues();\n\t\t}\n\t}\n\n\t// increase is a percent like 10% = 10 and not .10\n\t// Default is 20 = (10 * 2)\n\t// NOTE: This is a cancel transaction and not a speed up (see last param of processTransaction)\n\tfunction handleCancel(increase = 10, nonce: number, hash: string) {\n\t\ttry {\n\t\t\tprocessTransaction(increase * 2, nonce, hash, true); // setting cancel = true (last param) will send a cancel transaction\n\t\t} catch (e) {\n\t\t\tlog.error('Send - handleCancel', true, e);\n\t\t\tclearVerificationValues();\n\t\t}\n\t}\n\n\tfunction handleOpenAddress(url: string) {\n\t\ttry {\n\t\t\tlet URL = url.toLowerCase();\n\t\t\tif (transactionState.txNetworkTypeName.toLowerCase() !== 'mainnet') {\n\t\t\t\tif (URL.includes(transactionState.txNetworkTypeName.toLowerCase() + '.')) {\n\t\t\t\t\tURL = url;\n\t\t\t\t} else {\n\t\t\t\t\tURL = url.replace(\n\t\t\t\t\t\t'https://',\n\t\t\t\t\t\t'https://' + transactionState.txNetworkTypeName.toLowerCase() + '.'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\thandleOpenInTab(URL);\n\t\t} catch (e) {\n\t\t\tlog.error('Send - handleOpenAddress', true, e);\n\t\t} finally {\n\t\t\tclearVerificationValues();\n\t\t}\n\t}\n\n\t// function handleRecycle() {\n\tconst handleRecycle = debounce(async () => {\n\t\ttry {\n\t\t\t// Let this finish when it finishes\n\t\t\tloadTransactionHistory(\n\t\t\t\t$yakklCurrentlySelectedStore!.shortcuts.network.type,\n\t\t\t\t$yakklCurrentlySelectedStore!.shortcuts.address,\n\t\t\t\thistoryCount\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tclearVerificationValues();\n\t\t\tlog.error('Send - debounce', true, e);\n\t\t}\n\t});\n\n\tfunction handleSendRequest() {\n\t\tuiState.showVerify = true;\n\t}\n\n\t// The calling function should compute the increase and then call this function. For example, count the wordsin the data field, multiply by 68 and then call this function\n\tfunction handleIncreaseGasLimit(increase: number) {\n\t\ttry {\n\t\t\tif (increase > 0) {\n\t\t\t\ttransactionState.txGasLimitIncrease = increase;\n\t\t\t\tgasLimit = gasLimit + transactionState.txGasLimitIncrease;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tlog.error('Send - handleIncreaseGasLimit', true, e);\n\t\t}\n\t}\n\n\t// First verfication for the pincode. The second verification is done in the processTransaction function\n\tfunction handlePin(pin: string) {\n\t\ttry {\n\t\t\tpincode = pin; // Set global pincode\n\t\t\thandleApprove();\n\t\t} catch (e) {\n\t\t\tlog.error('Send - handlePin', true, e);\n\t\t\thandleReject();\n\t\t}\n\t}\n\n\tasync function handleApprove() {\n\t\ttry {\n\t\t\tuiState.showVerify = false;\n\t\t\tuiState.showConfirm = false;\n\t\t\tawait validate($form); // Validates form data and then calls processTransaction\n\t\t} catch (e) {\n\t\t\tlog.error('Send - handleApprove', true, e);\n\t\t\tclearVerificationValues();\n\t\t}\n\t}\n\n\tfunction handleReject() {\n\t\ttry {\n\t\t\tuiState.showVerify = false;\n\t\t\tuiState.showConfirm = false;\n\t\t\tuiState.warning = true;\n\t\t\tuiState.warningValue =\n\t\t\t\t'Transaction failed - You have rejected or Pincode was not validated. No transaction was sent.';\n\t\t} catch (e) {\n\t\t\tlog.error('Send - handleReject', true, e);\n\t\t\tclearValues(); // Clear everything out on reject. Leave the values so the user can try again.\n\t\t}\n\t}\n\n\tfunction handleSetFiatValue() {\n\t\t$form.toAddressValue = valueState.valueUSD;\n\t\tvalueState.valueType = 'fiat';\n\t}\n\n\tfunction handleSetCryptoValue() {\n\t\t$form.toAddressValue = valueState.valueCrypto;\n\t\tvalueState.valueType = 'crypto';\n\t}\n\n\t$effect(() => {\n\t\tif (\n\t\t\t$errors.toAddress ||\n\t\t\t$errors.hexData ||\n\t\t\t$errors.maxFeePerGasOverride ||\n\t\t\t$errors.maxPriorityFeePerGasOverride ||\n\t\t\t$errors.toAddressValue\n\t\t) {\n\t\t\tuiState.errorFields = true;\n\t\t} else {\n\t\t\tuiState.errorFields = false;\n\t\t}\n\t});\n\n\t$effect(() => {\n\t\ttry {\n\t\t\t// Assume currently selected address changed\n\t\t\tif (!transactionState) {\n\t\t\t\tthrow new Error('transactionState is not defined');\n\t\t\t}\n\t\t\ttransactionState.address = $yakklCurrentlySelectedStore.shortcuts.address;\n\t\t\ttransactionState.txNetworkTypeName =\n\t\t\t\t$yakklCurrentlySelectedStore!.shortcuts.network.name ?? 'Mainnet';\n\t\t\ttransactionState.txBlockchain =\n\t\t\t\t$yakklCurrentlySelectedStore!.shortcuts.network.blockchain ?? 'Ethereum';\n\t\t} catch (e) {\n\t\t\tlog.error('Send - effect', true, e);\n\t\t}\n\t});\n\n\t$effect(() => {\n\t\ttry {\n\t\t\tstartGasPricingChecks(); // It will start the interval if not already. If it already exists then it will return\n\t\t\tif (!valueState) {\n\t\t\t\tthrow new Error('valueState is not defined');\n\t\t\t}\n\n\t\t\tif (!gasState) {\n\t\t\t\tthrow new Error('gasState is not defined');\n\t\t\t}\n\n\t\t\tif (!transactionState) {\n\t\t\t\tthrow new Error('transactionState is not defined');\n\t\t\t}\n\n\t\t\tif (!uiState) {\n\t\t\t\tthrow new Error('uiState is not defined');\n\t\t\t}\n\n\t\t\tgasLimit =\n\t\t\t\tvalueState.smartContract === true ? ETH_BASE_SCA_GAS_UNITS : ETH_BASE_EOA_GAS_UNITS; // These are the norms for gas units it takes for the different eth transactions\n\t\t\tif ($form.hexData) {\n\t\t\t\thandleIncreaseGasLimit(getLengthInBytes($form.hexData) * 68); // 68 may need to be more dynamic in the future. This is for EOA transactions that have hex data\n\t\t\t} else {\n\t\t\t\tgasLimit =\n\t\t\t\t\tvalueState.smartContract === true ? ETH_BASE_SCA_GAS_UNITS : ETH_BASE_EOA_GAS_UNITS;\n\t\t\t\ttransactionState.txGasLimitIncrease = 0;\n\t\t\t}\n\n\t\t\t// $yakklGasTransStore and $yakklPricingStore are used to get the gas prices and the current price of ether or other crypto used for gas fees.\n\t\t\t// These types of stores can be used as is and do not need to be set in the store. They are used to get the values from the store. The others do need to be set due to the way the store is used.\n\t\t\t// unitPrice = $yakklPricingStore?.price.valueOf() as number ?? 0;\n\t\t\tunitPrice = $yakklPricingStore?.price ?? 0;\n\n\t\t\tif (valueState.valueType !== 'fiat') {\n\t\t\t\tvalueState.valueUSD = Number(Number($form.toAddressValue) * unitPrice).toFixed(2); // Fixed to 2 decimal places but may need to pull from locale\n\t\t\t} else {\n\t\t\t\tvalueState.valueCrypto = Number(Number($form.toAddressValue) / unitPrice).toString();\n\t\t\t}\n\n\t\t\tif ($yakklGasTransStore) {\n\t\t\t\tblockNumber = $yakklGasTransStore.results.blockNumber;\n\t\t\t\testimatedTransactionCount = $yakklGasTransStore.results.estimatedTransactionCount;\n\n\t\t\t\tconst nextTrendValue = Math.round($yakklGasTransStore.results.gasFeeTrend.baseFeePerGasAvg);\n\n\t\t\t\tgasState.lowPriorityFee =\n\t\t\t\t\t$yakklGasTransStore.results.actual.slow.maxPriorityFeePerGas + riskFactorPriorityFee;\n\t\t\t\tgasState.marketPriorityFee =\n\t\t\t\t\t$yakklGasTransStore.results.actual.fast.maxPriorityFeePerGas + riskFactorPriorityFee;\n\t\t\t\tgasState.priorityPriorityFee =\n\t\t\t\t\t$yakklGasTransStore.results.actual.fastest.maxPriorityFeePerGas + riskFactorPriorityFee;\n\n\t\t\t\tgasState.lowGas = $yakklGasTransStore.results.actual.slow.maxFeePerGas + riskFactorMaxFee;\n\t\t\t\tgasState.marketGas =\n\t\t\t\t\t$yakklGasTransStore.results.actual.fast.maxFeePerGas + riskFactorMaxFee;\n\t\t\t\tgasState.priorityGas =\n\t\t\t\t\t$yakklGasTransStore.results.actual.fastest.maxFeePerGas + riskFactorMaxFee;\n\n\t\t\t\tgasState.lowGasUSD = valueState.currencyFormat\n\t\t\t\t\t? valueState.currencyFormat.format(\n\t\t\t\t\t\t\tNumber(gasLimit * ((gasState.lowGas * 1) / 10 ** 9) * (unitPrice * 1))\n\t\t\t\t\t\t)\n\t\t\t\t\t: '0.00';\n\t\t\t\tgasState.marketGasUSD = valueState.currencyFormat\n\t\t\t\t\t? valueState.currencyFormat.format(\n\t\t\t\t\t\t\tNumber(gasLimit * ((gasState.marketGas * 1) / 10 ** 9) * (unitPrice * 1))\n\t\t\t\t\t\t)\n\t\t\t\t\t: '0.00';\n\t\t\t\tgasState.priorityGasUSD = valueState.currencyFormat\n\t\t\t\t\t? valueState.currencyFormat.format(\n\t\t\t\t\t\t\tNumber(gasLimit * ((gasState.priorityGas * 1) / 10 ** 9) * (unitPrice * 1))\n\t\t\t\t\t\t)\n\t\t\t\t\t: '0.00';\n\n\t\t\t\tgasState.gasBase = $yakklGasTransStore.results.actual.baseFeePerGas;\n\t\t\t\tgasState.gasBaseUSD = valueState.currencyFormat\n\t\t\t\t\t? valueState.currencyFormat.format(\n\t\t\t\t\t\t\tNumber(gasLimit * ((gasState.gasBase * 1) / 10 ** 9) * (unitPrice * 1))\n\t\t\t\t\t\t)\n\t\t\t\t\t: '0.00';\n\n\t\t\t\tswitch (gasState.selectedGas) {\n\t\t\t\t\tcase 'priority':\n\t\t\t\t\t\tgasState.maxFeePerGas = gasState.priorityGas;\n\t\t\t\t\t\tgasState.maxPriorityFeePerGas = gasState.priorityPriorityFee;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'low':\n\t\t\t\t\t\tgasState.maxFeePerGas = gasState.lowGas;\n\t\t\t\t\t\tgasState.maxPriorityFeePerGas = gasState.lowPriorityFee;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault: // market\n\t\t\t\t\t\tgasState.maxFeePerGas = gasState.marketGas;\n\t\t\t\t\t\tgasState.maxPriorityFeePerGas = gasState.marketPriorityFee;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tgasState.gasEstimate = Number(gasState.gasBase) + Number(gasState.maxPriorityFeePerGas); // Base fee + validator tip\n\n\t\t\t\thandleGasSelect(gasState.selectedGas);\n\n\t\t\t\tif (gasState.lastTrendValue !== 0) {\n\t\t\t\t\tif (nextTrendValue > gasState.lastTrendValue) {\n\t\t\t\t\t\tgasState.gasTrend = 'higher';\n\t\t\t\t\t\tgasState.trendColor = 'text-red-500';\n\t\t\t\t\t} else if (nextTrendValue < gasState.lastTrendValue) {\n\t\t\t\t\t\tgasState.gasTrend = 'lower';\n\t\t\t\t\t\tgasState.trendColor = 'text-green-500';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgasState.gasTrend = 'flat';\n\t\t\t\t\t\tgasState.trendColor = 'text-yellow-500';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgasState.lastTrendValue = nextTrendValue;\n\t\t\t\t// gasState.maxPriorityFeePerGas = gasState.maxPriorityFeePerGas;\n\t\t\t\t// maxFeePerGas = Math.round(maxFeePerGas);\n\t\t\t}\n\n\t\t\tif (gasState.gasEstimate) {\n\t\t\t\tgasEstimateUSDNumber =\n\t\t\t\t\tgasLimit * (((gasState.gasEstimate * 1) / 10 ** 9) * (Number(unitPrice) * 1));\n\t\t\t\tgasState.gasEstimateUSD = valueState.currencyFormat\n\t\t\t\t\t? valueState.currencyFormat.format(gasEstimateUSDNumber)\n\t\t\t\t\t: '0.00';\n\n\t\t\t\tgasTotalEstimateUSDNumber =\n\t\t\t\t\tgasLimit * (((gasState.gasEstimate * 1) / 10 ** 9) * (Number(unitPrice) * 1));\n\t\t\t\tgasState.gasTotalEstimateUSD = valueState.currencyFormat\n\t\t\t\t\t? valueState.currencyFormat.format(gasTotalEstimateUSDNumber)\n\t\t\t\t\t: '0.00';\n\n\t\t\t\tvalueState.toAddressValueUSD = valueState.currencyFormat\n\t\t\t\t\t? valueState.currencyFormat.format(Number(valueState.valueUSD))\n\t\t\t\t\t: '0.00';\n\t\t\t\tvalueState.totalUSD = valueState.currencyFormat\n\t\t\t\t\t? valueState.currencyFormat.format(\n\t\t\t\t\t\t\tNumber(valueState.valueUSD) + gasTotalEstimateUSDNumber\n\t\t\t\t\t\t)\n\t\t\t\t\t: '0.00';\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tlog.error('Send - effect', true, e);\n\t\t}\n\t});\n</script>\n\n<PincodeVerify\n\tbind:show={uiState.showVerify}\n\tonVerified={handlePin}\n\tonRejected={handleReject}\n\tclassName=\"text-gray-600\"\n/>\n\n<ErrorNoAction bind:show={uiState.error} value={uiState.errorValue} handle={handleClose} />\n<Warning bind:show={uiState.warning} value={uiState.warningValue} />\n<Contacts bind:show={uiState.showContacts} onContactSelect={handleContact} />\n\n<Toast color=\"indigo\" transition={slide} bind:toastStatus>\n\t{#if toastType === 'success'}\n\t\t<svg\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\tfill=\"none\"\n\t\t\tviewBox=\"0 0 24 24\"\n\t\t\tstroke-width=\"1.5\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tclass=\"w-6 h-6\"\n\t\t>\n\t\t\t<path\n\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\td=\"M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n\t\t\t/>\n\t\t</svg>\n\t{/if}\n\t{toastMessage}\n</Toast>\n\n<div class=\"text-center min-h-[75rem] -mt-1\">\n\t<div class=\"top-[.75rem] right-[1.5rem]\">\n\t\t<!-- svelte-ignore a11y_click_events_have_key_events -->\n\t\t<!-- svelte-ignore a11y_interactive_supports_focus -->\n\t\t<span\n\t\t\trole=\"button\"\n\t\t\tonclick={handleCancelReset}\n\t\t\tclass=\"inline-flex items-center rounded-full btn-tiny bg-secondary btn-primary hover:bg-secondary/50 px-2\"\n\t\t\t>Cancel/Reset</span\n\t\t>\n\t</div>\n\t<h2 class=\"text-xl tracking-tight font-extrabold text-gray-100 dark:text-white mt-1\">\n\t\t<span class=\"lg:inline\">Send/Transfer {transactionState.blockchain}</span>\n\t</h2>\n\n\t<hr class=\"mb-0.5 mt-0.5\" />\n\t<form class=\"\" onsubmit={handleSubmit}>\n\t\t<Tabs\n\t\t\tdefaultClass=\"flex flex-wrap justify-center space-x-2 h-9\"\n\t\t\tactiveClasses=\"px-4 text-white border-b-2 animate-pulse text-lg border-purple-300 mt-2 font-extrabold dark:text-blue-500 dark:border-blue-500\"\n\t\t\tcontentClass=\"\"\n\t\t\tinactiveClasses=\"px-4 border-b-2 border-transparent text-md text-gray-100 font-semibold hover:text-purple-200 hover:border-purple-200 dark:hover:text-gray-300 dark:text-gray-400\"\n\t\t>\n\t\t\t<TabItem\n\t\t\t\tid=\"amount\"\n\t\t\t\topen={uiState.amountTabOpen}\n\t\t\t\ton:click={() => {\n\t\t\t\t\thandleCurrentTab('amountTab');\n\t\t\t\t}}\n\t\t\t\tstyle={uiState.errorFields ? 'color:red' : uiState.errorFields ? 'color:red' : ''}\n\t\t\t\ttitle=\"Send\"\n\t\t\t>\n\t\t\t\t<div class=\"border rounded-lg border-gray-200 px-4 py-2 mt-2\">\n\t\t\t\t\t<span class=\"text-gray-300 text-md -mt-1 font-bold\">Send To</span>\n\t\t\t\t\t<div class=\"mt-2 text-left\">\n\t\t\t\t\t\t<div class=\"flex flex-row\">\n\t\t\t\t\t\t\t<div class=\"flex-col w-full\">\n\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y_click_events_have_key_events -->\n\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y_interactive_supports_focus -->\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\t\t\t\tonclick={() => (uiState.showContacts = true)}\n\t\t\t\t\t\t\t\t\tclass=\"flex flex-row mb-1\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span class=\"text-xs text-gray-100 mr-2 font-bold flex flex-col\"\n\t\t\t\t\t\t\t\t\t\t>Receiving Address</span\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\t\t\tviewBox=\"0 0 512 512\"\n\t\t\t\t\t\t\t\t\t\t\tclass=\"w-4 h-4 fill-gray-100 outline-gray-100 flex flex-col\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\t\t\td=\"M384 48c8.8 0 16 7.2 16 16V448c0 8.8-7.2 16-16 16H96c-8.8 0-16-7.2-16-16V64c0-8.8 7.2-16 16-16H384zM96 0C60.7 0 32 28.7 32 64V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64H96zM240 256a64 64 0 1 0 0-128 64 64 0 1 0 0 128zm-32 32c-44.2 0-80 35.8-80 80c0 8.8 7.2 16 16 16H336c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80H208zM512 80c0-8.8-7.2-16-16-16s-16 7.2-16 16v64c0 8.8 7.2 16 16 16s16-7.2 16-16V80zM496 192c-8.8 0-16 7.2-16 16v64c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16zm16 144c0-8.8-7.2-16-16-16s-16 7.2-16 16v64c0 8.8 7.2 16 16 16s16-7.2 16-16V336z\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid=\"toAddress\"\n\t\t\t\t\t\t\t\t\tclass=\"placeholder:italic block w-full px-4 md:py-2 py-1 leading-7 text-sm font-normal\n\t\t\t\t\t\t\t\t\t\ttext-gray-700 bg-gray-100 bg-clip-padding border border-solid border-gray-300\n\t\t\t\t\t\t\t\t\t\trounded-md transition ease-in-out m-0 focus:text-gray-700 focus:bg-white\n\t\t\t\t\t\t\t\t\t\tfocus:border-blue-600 focus:outline-none\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Address of recipient\"\n\t\t\t\t\t\t\t\t\tautocomplete=\"off\"\n\t\t\t\t\t\t\t\t\tbind:value={$form.toAddress}\n\t\t\t\t\t\t\t\t\tonchange={handleChange}\n\t\t\t\t\t\t\t\t\tonblur={onBlur}\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{#if $errors.toAddress}\n\t\t\t\t\t\t\t\t\t<small class=\"text-red-600 font-bold animate-pulse\">{$errors.toAddress}</small>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t{#if valueState.smartContract}\n\t\t\t\t\t\t\t\t\t<small class=\" text-green-500 font-bold animate-pulse\"\n\t\t\t\t\t\t\t\t\t\t>*This is a smart contract address</small\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"flex flex-row mt-2\">\n\t\t\t\t\t\t\t<div class=\"flex-col w-full\">\n\t\t\t\t\t\t\t\t<span class=\"text-xs text-gray-100 font-bold mb-1 mr-[2px]\">Send Amount</span>\n\t\t\t\t\t\t\t\t<span class=\"text-xs text-gray-100 mb-1\">(Show as ETH</span>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid=\"showCrypto\"\n\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\tname=\"show_how\"\n\t\t\t\t\t\t\t\t\tclass=\"radio radio-primary radio-xs mb-1\"\n\t\t\t\t\t\t\t\t\tonclick={handleSetCryptoValue}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span class=\"text-xs text-gray-100 mb-1\">Show as {valueState.currencyLabel}</span>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid=\"showUSD\"\n\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\tname=\"show_how\"\n\t\t\t\t\t\t\t\t\tclass=\"radio radio-primary radio-xs mb-1\"\n\t\t\t\t\t\t\t\t\tonclick={handleSetFiatValue}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span class=\"text-xs text-gray-100 mb-1\">)</span>\n\t\t\t\t\t\t\t\t<div class=\"flex flex-row\">\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tid=\"toAddressValue\"\n\t\t\t\t\t\t\t\t\t\tclass=\"placeholder:italic block w-full px-4 md:py-2 py-1 leading-7 text-md font-normal\n\t\t\t\t\t\t\t\t\t\t\ttext-gray-700 bg-gray-100 bg-clip-padding border border-solid border-gray-300\n\t\t\t\t\t\t\t\t\t\t\trounded-md transition ease-in-out m-0 focus:text-gray-700 focus:bg-white\n\t\t\t\t\t\t\t\t\t\t\tfocus:border-blue-600 focus:outline-none\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Send amount\"\n\t\t\t\t\t\t\t\t\t\tautocomplete=\"off\"\n\t\t\t\t\t\t\t\t\t\tbind:value={$form.toAddressValue}\n\t\t\t\t\t\t\t\t\t\tonchange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonblur={onBlur}\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{#if $errors.toAddressValue}\n\t\t\t\t\t\t\t\t\t\t<small class=\"text-red-600 font-bold animate-pulse\"\n\t\t\t\t\t\t\t\t\t\t\t>{$errors.toAddressValue}</small\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"flex flex-row justify-between mt-1\">\n\t\t\t\t\t\t\t\t\t<div class=\"mt-0\">\n\t\t\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y_click_events_have_key_events -->\n\t\t\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y_interactive_supports_focus -->\n\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tonclick={handleMax}\n\t\t\t\t\t\t\t\t\t\t\tclass=\"inline-flex items-center rounded-full bg-blue-100 hover:bg-blue-200 px-2.5 py-0.5 text-[10px]/3 font-normal text-blue-800\"\n\t\t\t\t\t\t\t\t\t\t\t>Send MAX ETH</span\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"flex flex-col\">\n\t\t\t\t\t\t\t\t\t\t<span class=\"text-xs text-gray-200 font-bold ml-3\"\n\t\t\t\t\t\t\t\t\t\t\t>Estimated gas/net fees: {gasState.gasEstimateUSD}</span\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<span class=\"text-xs text-gray-200 font-bold ml-3\"\n\t\t\t\t\t\t\t\t\t\t\t>Estimated value: {valueState.toAddressValueUSD}</span\n\t\t\t\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t\t\t{#if transactionState.recipientPays}\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"flex flex-row -ml-1 mt-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"mr-1 h-3 w-3 cursor-pointer appearance-none rounded-sm border border-blue-800 bg-white bg-contain bg-center bg-no-repeat align-top transition duration-200 checked:border-blue-600 checked:bg-blue-600 focus:outline-none\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"recipientFees\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"inline-block text-xs/3 text-orange-500 dark:text-white font-bold\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor=\"recipientFees\">Recipient pays fees! (experimental)</label\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<!-- <div class=\"hidden hover:show\"> -->\n\t\t\t\t\t\t\t\t<!-- <span class=\"text-xs text-gray-100 font-bold mb-1\">Data (optional - also used by Smart Contracts)</span>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tid=\"hexData\"\n\t\t\t\t\t\t\t\t\t\t\tclass=\"placeholder:italic block w-full px-4 md:py-2 py-1 leading-7 text-md font-normal\n\t\t\t\t\t\t\t\t\t\t\ttext-gray-700 bg-gray-100 bg-clip-padding border border-solid border-gray-300\n\t\t\t\t\t\t\t\t\t\t\trounded-md transition ease-in-out m-0 focus:text-gray-700 focus:bg-white\n\t\t\t\t\t\t\t\t\t\t\tfocus:border-blue-600 focus:outline-none\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Optional data in hex format\"\n\t\t\t\t\t\t\t\t\t\t\tautocomplete=\"off\"\n\t\t\t\t\t\t\t\t\t\t\tbind:value={$form.hexData}\n\t\t\t\t\t\t\t\t\t\t\ton:change={handleChange}\n\t\t\t\t\t\t\t\t\t\t\ton:blur={onBlur} />\n\t\t\t\t\t\t\t\t\t\t{#if $errors.hexData}\n\t\t\t\t\t\t\t\t\t\t\t<small class=\"text-red-600 font-bold animate-pulse\">{$errors.hexData}</small>\n\t\t\t\t\t\t\t\t\t\t{/if} -->\n\t\t\t\t\t\t\t\t<!-- </div> -->\n\n\t\t\t\t\t\t\t\t{#if valueState.totalUSD !== '0'}\n\t\t\t\t\t\t\t\t\t<div class=\"w-full text-center mt-1\">\n\t\t\t\t\t\t\t\t\t\t<span class=\"font-bold text-sm text-gray-100\"\n\t\t\t\t\t\t\t\t\t\t\t>Total estimated Amount: {valueState.totalUSD}</span\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"mt-2\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"send\"\n\t\t\t\t\t\tonclick={handleSendRequest}\n\t\t\t\t\t\tclass=\"inline-block h-10 px-7 md:py-3 py-2 mt-.5 bg-emerald-400 text-white font-bold\n\t\t\t\t\t\t\ttext-large leading-snug uppercase rounded-md shadow-md hover:bg-emerald-500\n\t\t\t\t\t\t\thover:shadow-md focus:shadow-md focus:outline-none focus:ring-0\n\t\t\t\t\t\t\ttransition duration-150 ease-in-out w-full\"\n\t\t\t\t\t\tdata-mdb-ripple=\"true\"\n\t\t\t\t\t\tdata-mdb-ripple-color=\"light\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class=\"inline-flex items-center align-middle\">\n\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\t\tclass=\"h-4 w-4 mr-2 ml-2 font-bold\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\t\t\t\td=\"M4.5 19.5l15-15m0 0H8.25m11.25 0v11.25\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t<span>SEND</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</TabItem>\n\n\t\t\t<TabItem\n\t\t\t\tid=\"activity\"\n\t\t\t\topen={uiState.activityTabOpen}\n\t\t\t\ton:click={() => {\n\t\t\t\t\thandleCurrentTab('activityTab');\n\t\t\t\t}}\n\t\t\t\ttitle=\"Activity\"\n\t\t\t>\n\t\t\t\t<!-- Total with all fees added should go here -->\n\t\t\t\t{#if valueState.totalUSD !== '0'}\n\t\t\t\t\t<div class=\"w-full text-center mt-2\">\n\t\t\t\t\t\t<span class=\"font-bold text-lg text-gray-100\"\n\t\t\t\t\t\t\t>Total estimated amount: {valueState.totalUSD}</span\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\n\t\t\t\t<!-- Status window -->\n\t\t\t\t<!-- svelte-ignore unknown_code -->\n\t\t\t\t<div class=\"my-2 border border-white rounded-md w-full h-[8rem] text-white\">\n\t\t\t\t\t<div class=\"text-left m-1 text-md break-all\">\n\t\t\t\t\t\t<p>Most recent transaction history for: {transactionState.address}</p>\n\t\t\t\t\t\t<p>Blockchain: {transactionState.txBlockchain}</p>\n\t\t\t\t\t\t<p>Network type: {transactionState.txNetworkTypeName}</p>\n\t\t\t\t\t\t<p>Chain ID: {$yakklCurrentlySelectedStore?.shortcuts.chainId}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<!-- svelte-ignore a11y_interactive_supports_focus -->\n\t\t\t\t\t<!-- svelte-ignore a11y_click_events_have_key_events -->\n\t\t\t\t\t<div\n\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\tid=\"reload\"\n\t\t\t\t\t\tonclick={handleRecycle}\n\t\t\t\t\t\tclass=\"inline-flex items-center rounded-full btn-tiny bg-secondary btn-primary hover:bg-secondary/50 px-2\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\tstroke-width=\"1.5\"\n\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\tclass=\"w-4 h-4 mr-1\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\t\t\td=\"M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3.181 3.182m0-4.991v4.99\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t\tREFRESH LIST\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"m-4 mr-1 text-left text-base-content\">\n\t\t\t\t\t<Timeline>\n\t\t\t\t\t\t<!-- order=\"vertical\"> -->\n\t\t\t\t\t\t{#if transactionState.txStatus === 'pending'}\n\t\t\t\t\t\t\t<TimelineItem>\n\t\t\t\t\t\t\t\t<h3\n\t\t\t\t\t\t\t\t\tclass=\"flex items-center text-lg font-semibold text-base-content animate-pulse dark:text-white\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tPending Transaction\n\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t<time\n\t\t\t\t\t\t\t\t\tclass=\"block mb-2 text-xs font-normal leading-none text-gray-400 dark:text-gray-500\"\n\t\t\t\t\t\t\t\t\t>{new Date(parseInt(transactionState.txStartTimestamp))}</time\n\t\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t<div class=\"w-full break-all\">\n\t\t\t\t\t\t\t\t\t<p class=\"text-sm font-semibold text-white\">\n\t\t\t\t\t\t\t\t\t\tSending/Transferring: {transactionState.txQuantity}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<p class=\"text-sm -mt-1 font-semibold text-white\">To:</p>\n\t\t\t\t\t\t\t\t\t<p class=\"text-xs mt-0.5 font-normal text-white\">\n\t\t\t\t\t\t\t\t\t\t{transactionState.txToAddress}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<p class=\"mt-1 text-sm font-semibold text-white\">Transaction hash:</p>\n\t\t\t\t\t\t\t\t\t<p class=\"mt-0.5 text-xs font-normal text-white\">\n\t\t\t\t\t\t\t\t\t\t{transactionState.txHash}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<p class=\"text-xs font-semibold text-white mt-1\">\n\t\t\t\t\t\t\t\t\t\tTransaction nonce: {transactionState.txNonce}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<p class=\"text-sm font-normal text-gray-400 dark:text-gray-500\">\n\t\t\t\t\t\t\t\t\t\tTransaction Gas Fee vs Current Network Gas Fee:\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<p class=\"text-sm font-normal text-gray-400 dark:text-gray-500\">\n\t\t\t\t\t\t\t\t\t\t{transactionState.txmaxFeePerGas} gwei -- {Math.round(\n\t\t\t\t\t\t\t\t\t\t\tNumber(gasState.maxFeePerGas)\n\t\t\t\t\t\t\t\t\t\t)} gwei{#if Number(gasState.maxFeePerGas) > Number(transactionState.txmaxFeePerGas)}:\n\t\t\t\t\t\t\t\t\t\t\tNetwork congested - May need to increase Gas Fee (click Speed Up) or continue\n\t\t\t\t\t\t\t\t\t\t\tto wait on network.{/if}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"flex flex-row mt-1\">\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\t\t\t\tpill={true}\n\t\t\t\t\t\t\t\t\t\ton:click={() =>\n\t\t\t\t\t\t\t\t\t\t\thandleSpeedUp(\n\t\t\t\t\t\t\t\t\t\t\t\ttransactionState.txGasPercentIncrease > 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t? transactionState.txGasPercentIncrease\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 10,\n\t\t\t\t\t\t\t\t\t\t\t\ttransactionState.txNonce,\n\t\t\t\t\t\t\t\t\t\t\t\ttransactionState.txHash\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\tclass=\"mr-2\">Speed Up</Button\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\t\t\t\tpill={true}\n\t\t\t\t\t\t\t\t\t\tcolor=\"alternative\"\n\t\t\t\t\t\t\t\t\t\ton:click={() =>\n\t\t\t\t\t\t\t\t\t\t\thandleCancel(\n\t\t\t\t\t\t\t\t\t\t\t\ttransactionState.txGasPercentIncrease > 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t? transactionState.txGasPercentIncrease\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 10,\n\t\t\t\t\t\t\t\t\t\t\t\ttransactionState.txNonce,\n\t\t\t\t\t\t\t\t\t\t\t\ttransactionState.txHash\n\t\t\t\t\t\t\t\t\t\t\t)}>Cancel</Button\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tclass=\"ml-2\"\n\t\t\t\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\t\t\t\tpill={true}\n\t\t\t\t\t\t\t\t\t\tcolor=\"light\"\n\t\t\t\t\t\t\t\t\t\ton:click={() => handleOpenInTab(transactionState.txURL)}>Details ></Button\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</TimelineItem>\n\t\t\t\t\t\t{/if}\n\n\t\t\t\t\t\t{#await transactionState.txHistoryTransactions}\n\t\t\t\t\t\t\t<div class=\"flex flex-row justify-center items-center\">\n\t\t\t\t\t\t\t\t<Spinner color=\"yellow\" size={6} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{:then _}\n\t\t\t\t\t\t\t{#each transactionState.txHistoryTransactions as transaction}\n\t\t\t\t\t\t\t\t<TimelineItem>\n\t\t\t\t\t\t\t\t\t<div class=\"ml-4\">\n\t\t\t\t\t\t\t\t\t\t{#if transaction.status === 'pending'}\n\t\t\t\t\t\t\t\t\t\t\t<h3 class=\"flex items-center text-lg font-semibold text-white\">\n\t\t\t\t\t\t\t\t\t\t\t\tPending Transaction\n\t\t\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t\t{:else if transaction.from === transactionState.address.toLowerCase() && transaction.to !== transactionState.address.toLowerCase()}\n\t\t\t\t\t\t\t\t\t\t\t<h3 class=\"flex items-center text-lg font-semibold text-white\">\n\t\t\t\t\t\t\t\t\t\t\t\tSend Transaction\n\t\t\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t\t{:else if transaction.to === transactionState.address.toLowerCase() && transaction.from !== transactionState.address.toLowerCase()}\n\t\t\t\t\t\t\t\t\t\t\t<h3 class=\"flex items-center text-lg font-semibold text-white\">\n\t\t\t\t\t\t\t\t\t\t\t\tReceive Transaction\n\t\t\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t\t{:else if transaction.from === transactionState.address.toLowerCase() && transaction.to === transactionState.address.toLowerCase()}\n\t\t\t\t\t\t\t\t\t\t\t<h3 class=\"flex items-center text-lg font-semibold text-white\">\n\t\t\t\t\t\t\t\t\t\t\t\tSend/Receive/Cancel Transaction\n\t\t\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t\t\t<h3 class=\"flex items-center text-lg font-semibold text-white\">Error</h3>\n\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t<time\n\t\t\t\t\t\t\t\t\t\t\tclass=\"block mb-2 text-xs font-normal leading-none text-gray-300 dark:text-gray-200\"\n\t\t\t\t\t\t\t\t\t\t\t>{transaction.formattedTimestamp}</time\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div class=\"w-full break-all ml-4\">\n\t\t\t\t\t\t\t\t\t\t<p class=\"text-sm font-semibold text-white\">\n\t\t\t\t\t\t\t\t\t\t\t{#if transaction.from === transaction.to}\n\t\t\t\t\t\t\t\t\t\t\t\tCanceled or non-value transaction: {transaction.value}\n\t\t\t\t\t\t\t\t\t\t\t{:else if transaction.to === transactionState.address}\n\t\t\t\t\t\t\t\t\t\t\t\tReceive transaction: {transaction.value}\n\t\t\t\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t\t\t\tSend transaction: {transaction.value}\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p class=\"text-sm -mt-1 font-semibold text-white\">\n\t\t\t\t\t\t\t\t\t\t\t{#if transaction.to === transactionState.address}\n\t\t\t\t\t\t\t\t\t\t\t\tFrom:\n\t\t\t\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t\t\t\tTo:\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p class=\"text-xs mt-0.5 font-normal text-white\">\n\t\t\t\t\t\t\t\t\t\t\t{#if transaction.to === transactionState.address}\n\t\t\t\t\t\t\t\t\t\t\t\t{transaction.from}\n\t\t\t\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t\t\t\t{transaction.to}\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p class=\"mt-1 text-sm font-semibold text-white\">Transaction hash:</p>\n\t\t\t\t\t\t\t\t\t\t<p class=\"mt-0.5 text-xs font-normal text-white\">\n\t\t\t\t\t\t\t\t\t\t\t{transaction.hash}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p class=\"text-xs font-semibold text-white mt-1\">\n\t\t\t\t\t\t\t\t\t\t\tTransaction nonce: {transaction.nonce}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{#if transactionState.txStatus === 'pending'}\n\t\t\t\t\t\t\t\t\t\t<div class=\"flex flex-row mt-1\">\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\t\t\t\t\t\tpill={true}\n\t\t\t\t\t\t\t\t\t\t\t\ton:click={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleSpeedUp(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransactionState.txGasPercentIncrease,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransaction.nonce,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransaction.hash\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"mr-2\">Speed Up</Button\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\t\t\t\t\t\tpill={true}\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"alternative\"\n\t\t\t\t\t\t\t\t\t\t\t\ton:click={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleCancel(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransactionState.txGasPercentIncrease,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransaction.nonce,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransaction.hash\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}>Cancel</Button\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t\t<div class=\"flex flex-row mt-1\">\n\t\t\t\t\t\t\t\t\t\t\t{#if $yakklCurrentlySelectedStore && $yakklCurrentlySelectedStore?.shortcuts.network.explorer.length > 0}\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tpill={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"light\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ton:click={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleOpenInTab(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$yakklCurrentlySelectedStore\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? $yakklCurrentlySelectedStore?.shortcuts.network.explorer +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'/tx/' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransaction.hash\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}>Details ></Button\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t\t\t\t<Button size=\"xs\" pill={true} color=\"light\">N/A</Button>\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t</TimelineItem>\n\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t{/await}\n\t\t\t\t\t</Timeline>\n\n\t\t\t\t\t<Hr class=\"my-4 mx-auto md:my-10 w-48 h-1\" />\n\t\t\t\t\t<!-- svelte-ignore a11y_click_events_have_key_events -->\n\t\t\t\t\t<!-- svelte-ignore a11y_interactive_supports_focus -->\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"text-center mt-1 w-full flex flex-col mx-0\"\n\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\tonclick={() =>\n\t\t\t\t\t\t\thandleOpenAddress(\n\t\t\t\t\t\t\t\t$yakklCurrentlySelectedStore?.shortcuts.network.explorer +\n\t\t\t\t\t\t\t\t\t'/address/' +\n\t\t\t\t\t\t\t\t\ttransactionState.address\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class=\"flex flex-row\">\n\t\t\t\t\t\t\t<div class=\"flex flex-col\">FULL history for this account can be found here:</div>\n\t\t\t\t\t\t\t<div class=\"flex flex-col\">\n\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\t\t\tstroke-width=\"1.5\"\n\t\t\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\t\t\tclass=\"ml-1 w-4 h-4\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\t\t\t\t\td=\"M13.5 6H5.25A2.25 2.25 0 003 8.25v10.5A2.25 2.25 0 005.25 21h10.5A2.25 2.25 0 0018 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</TabItem>\n\n\t\t\t<TabItem\n\t\t\t\tid=\"fees\"\n\t\t\t\topen={uiState.feesTabOpen}\n\t\t\t\ton:click={() => {\n\t\t\t\t\thandleCurrentTab('feesTab');\n\t\t\t\t}}\n\t\t\t\tstyle={$errors.maxPriorityFeePerGasOverride\n\t\t\t\t\t? 'color:red'\n\t\t\t\t\t: $errors.maxFeePerGasOverride\n\t\t\t\t\t\t? 'color:red'\n\t\t\t\t\t\t: ''}\n\t\t\t\ttitle=\"Fees\"\n\t\t\t>\n\t\t\t\t<!-- <Popover class=\"text-sm z-10\" triggeredBy=\"#maxPriorityFeePerGasOverride\" placement=\"top\">\n\t\t\t\t\t\t<h3 class=\"font-semibold text-gray-900 dark:text-white\">Estimated Gas Fee</h3>\n\t\t\t\t\t\t<div class=\"grid grid-cols-4 gap-2\">\n\t\t\t\t\t\t\t\t<div class=\"h-1 bg-orange-300 dark:bg-orange-400\"></div>\n\t\t\t\t\t\t\t\t<div class=\"h-1 bg-orange-300 dark:bg-orange-400\"></div>\n\t\t\t\t\t\t\t\t<div class=\"h-1 bg-orange-300 dark:bg-orange-400\"></div>\n\t\t\t\t\t\t\t\t<div class=\"h-1 bg-orange-300 dark:bg-orange-400\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<p class=\"py-2\">The default value is the estimated Gas Fee from the blockchain. The Gas Fee is a transaction cost that can vary based on network traffic and validators. This fee can be edited if you desired. Any lower fee entered could poorly impact the transaction processing time.</p>\n\t\t\t\t\t</Popover>\n\n\t\t\t\t\t<Popover class=\"text-sm z-10\" triggeredBy=\"#maxFeePerGasOverride\" placement=\"top\">\n\t\t\t\t\t\t<h3 class=\"font-semibold text-gray-900 dark:text-white\">Gas Fee Limit (MAX)</h3>\n\t\t\t\t\t\t<div class=\"grid grid-cols-4 gap-2\">\n\t\t\t\t\t\t\t\t<div class=\"h-1 bg-orange-300 dark:bg-orange-400\"></div>\n\t\t\t\t\t\t\t\t<div class=\"h-1 bg-orange-300 dark:bg-orange-400\"></div>\n\t\t\t\t\t\t\t\t<div class=\"h-1 bg-orange-300 dark:bg-orange-400\"></div>\n\t\t\t\t\t\t\t\t<div class=\"h-1 bg-orange-300 dark:bg-orange-400\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<p class=\"py-2\">The default value is the same as the estimated Gas Fee from the blockchain. Any fee lower than the Gas Estimate value could poorly impact the transaction processing time or potentially reverse the transaction.</p>\n\t\t\t\t\t</Popover> -->\n\n\t\t\t\t<div class=\"border rounded-lg border-gray-200 p-2 mt-4\">\n\t\t\t\t\t<div class=\"w-full text-center mb-1\">\n\t\t\t\t\t\t<span class=\"font-bold text-sm text-gray-100\"\n\t\t\t\t\t\t\t>(Optional) Advanced breakdown of fees</span\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\t\t\t\t\t<!-- svelte-ignore a11y_click_events_have_key_events -->\n\t\t\t\t\t<!-- svelte-ignore a11y_interactive_supports_focus -->\n\t\t\t\t\t<div\n\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\tonclick={() =>\n\t\t\t\t\t\t\thandleOpenInTab('https://www.blocknative.com/gas-estimator?utm_source=yakkl')}\n\t\t\t\t\t\tclass=\"flex flex-row mb-2 -mt-1 text-gray-100 items-center justify-center\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class=\"flex flex-row underline\">Transaction \"Gas\" Fee Tracker</div>\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\tstroke-width=\"1.5\"\n\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\tclass=\"flex flex-row ml-2 w-4 h-4\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\t\t\td=\"M13.5 6H5.25A2.25 2.25 0 003 8.25v10.5A2.25 2.25 0 005.25 21h10.5A2.25 2.25 0 0018 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{#if valueState.totalUSD !== '0'}\n\t\t\t\t\t\t<div class=\"w-full text-center mb-1\">\n\t\t\t\t\t\t\t<span class=\"font-bold text-lg text-gray-100\"\n\t\t\t\t\t\t\t\t>Total estimated amount: {valueState.totalUSD}</span\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\n\t\t\t\t\t<div class=\"grid grid-cols-3 gap-2 text-gray-100\">\n\t\t\t\t\t\t<!-- svelte-ignore a11y_click_events_have_key_events -->\n\t\t\t\t\t\t<!-- svelte-ignore a11y_interactive_supports_focus -->\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tid=\"priority\"\n\t\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\t\tonclick={() => {\n\t\t\t\t\t\t\t\thandleGasSelect('priority');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tclass=\"{priorityClass} border-green-500 rounded-md shadow h-[10rem]\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div class=\"flex flex-col items-center justify-center\">\n\t\t\t\t\t\t\t\t<div class=\"flex-row\">\n\t\t\t\t\t\t\t\t\t<!-- Maybe an icon -->\n\t\t\t\t\t\t\t\t\t<span class=\"flex-row font-bold text-lg\">Priority</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"text-md font-medium\">\n\t\t\t\t\t\t\t\t\t<span>priority fee</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"text-lg\">\n\t\t\t\t\t\t\t\t\t{Number(gasState.priorityPriorityFee).toFixed(2)} gwei\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"text-md font-medium\">\n\t\t\t\t\t\t\t\t\t<span>max fee</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"text-xl\">\n\t\t\t\t\t\t\t\t\t{Math.round(gasState.priorityGas)} gwei\n\t\t\t\t\t\t\t\t\t<!-- {priorityGas / (10 ** 9)} gwei -->\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"text-sm text-gray-100\">\n\t\t\t\t\t\t\t\t\test. {gasState.priorityGasUSD}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"text-xs text-green-500 font-semibold\">99% Probability</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<!-- svelte-ignore a11y_click_events_have_key_events -->\n\t\t\t\t\t\t<!-- svelte-ignore a11y_interactive_supports_focus -->\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tid=\"market\"\n\t\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\t\tonclick={() => {\n\t\t\t\t\t\t\t\thandleGasSelect('market');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tclass=\"{marketClass} border-yellow-500 rounded-md shadow-xl h-[10rem]\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div class=\"flex flex-col items-center justify-center\">\n\t\t\t\t\t\t\t\t<div class=\"flex-row\">\n\t\t\t\t\t\t\t\t\t<!-- Maybe an icon -->\n\t\t\t\t\t\t\t\t\t<span class=\"flex-row font-bold text-lg\">Market</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"text-md font-medium\">\n\t\t\t\t\t\t\t\t\t<span>priority fee</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"text-lg\">\n\t\t\t\t\t\t\t\t\t{Number(gasState.marketPriorityFee).toFixed(2)} gwei\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"text-md font-medium\">\n\t\t\t\t\t\t\t\t\t<span>max fee</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"text-xl\">\n\t\t\t\t\t\t\t\t\t{Math.round(gasState.marketGas)} gwei\n\t\t\t\t\t\t\t\t\t<!-- {marketGas / (10 ** 9)} gwei -->\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"text-sm text-gray-100\">\n\t\t\t\t\t\t\t\t\test. {gasState.marketGasUSD}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"text-xs text-yellow-500 font-semibold\">90% Probability</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<!-- svelte-ignore a11y_click_events_have_key_events -->\n\t\t\t\t\t\t<!-- svelte-ignore a11y_interactive_supports_focus -->\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tid=\"low\"\n\t\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\t\tonclick={() => {\n\t\t\t\t\t\t\t\thandleGasSelect('low');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tclass=\"{lowClass} border-amber-500 rounded-md shadow h-[10rem]\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div class=\"flex flex-col items-center justify-center\">\n\t\t\t\t\t\t\t\t<div class=\"flex-row\">\n\t\t\t\t\t\t\t\t\t<!-- Maybe an icon -->\n\t\t\t\t\t\t\t\t\t<span class=\"flex-row font-bold text-lg\">Low</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"text-md font-medium\">\n\t\t\t\t\t\t\t\t\t<span>priority fee</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"text-lg\">\n\t\t\t\t\t\t\t\t\t{Number(gasState.lowPriorityFee).toFixed(2)} gwei\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"text-md font-medium\">\n\t\t\t\t\t\t\t\t\t<span>max fee</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"text-xl\">\n\t\t\t\t\t\t\t\t\t{Math.round(gasState.lowGas)} gwei\n\t\t\t\t\t\t\t\t\t<!-- {lowGas / (10 ** 9)} gwei -->\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"text-sm text-gray-100\">\n\t\t\t\t\t\t\t\t\test. {gasState.lowGasUSD}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"text-xs text-amber-500 font-semibold\">70% probability</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"w-full text-center mt-2\">\n\t\t\t\t\t\t<span class=\"text-gray-300 text-xs font-semibold\"\n\t\t\t\t\t\t\t>Fee cost trend since last check: <span class={gasState.trendColor}\n\t\t\t\t\t\t\t\t>{gasState.gasTrend}</span\n\t\t\t\t\t\t\t></span\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"w-full text-left mt-1 border border-yellow-300 rounded-md\">\n\t\t\t\t\t\t<div class=\"w-full text-left ml-1\">\n\t\t\t\t\t\t\t<span class=\"text-yellow-300 text-xs font-semibold\"\n\t\t\t\t\t\t\t\t>Base fee: {Number(gasState.gasBase).toFixed(2)} gwei - {gasState.gasBaseUSD}</span\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"w-full text-left mt-1 ml-1\">\n\t\t\t\t\t\t<span class=\"text-gray-300 text-xs font-semibold\"\n\t\t\t\t\t\t\t>Current blockchain number: {blockNumber}</span\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"w-full text-left mt-1 ml-1\">\n\t\t\t\t\t\t<span class=\"text-gray-300 text-xs font-semibold\"\n\t\t\t\t\t\t\t>Estimated transaction count for block: {estimatedTransactionCount}</span\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"w-full text-left mt-1 border border-green-300 rounded-md\">\n\t\t\t\t\t\t<div class=\"w-full text-left\">\n\t\t\t\t\t\t\t<span class=\"text-green-300 text-xs font-semibold\"\n\t\t\t\t\t\t\t\t>Priority fee: {Number(gasState.maxPriorityFeePerGas).toFixed(2)}</span\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"w-full text-left\">\n\t\t\t\t\t\t\t<span class=\"text-green-300 text-xs font-semibold\"\n\t\t\t\t\t\t\t\t>Max fee limit: {Math.round(Number(gasState.maxFeePerGas))}</span\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"w-full text-left mt-1 border border-amber-300 rounded-md\">\n\t\t\t\t\t\t<div class=\"w-full text-center mb-1\">\n\t\t\t\t\t\t\t<span class=\"font-bold text-xs text-gray-100\"\n\t\t\t\t\t\t\t\t>Overrides will be used instead of above dynamic numbers</span\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"flex flex-row mt-2 ml-1 mb-1\">\n\t\t\t\t\t\t\t<div class=\"flex flex-col w-[49%] text-center\">\n\t\t\t\t\t\t\t\t<span class=\"text-gray-300 text-xs font-bold\">Priority fee (tip) - gwei</span>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid=\"maxPriorityFeePerGasOverride\"\n\t\t\t\t\t\t\t\t\tclass=\"placeholder:italic block mt-2 px-4 md:py-2 py-1 leading-5 text-md font-normal\n\t\t\t\t\t\t\t\t\t\ttext-gray-700 bg-gray-100 bg-clip-padding border border-solid border-gray-300\n\t\t\t\t\t\t\t\t\t\trounded-md transition ease-in-out m-0 focus:text-gray-700 focus:bg-white\n\t\t\t\t\t\t\t\t\t\tfocus:border-blue-600 focus:outline-none\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Est. Gas Fee\"\n\t\t\t\t\t\t\t\t\tautocomplete=\"off\"\n\t\t\t\t\t\t\t\t\tbind:value={$form.maxPriorityFeePerGasOverride}\n\t\t\t\t\t\t\t\t\tonchange={handleChange}\n\t\t\t\t\t\t\t\t\tonblur={onBlur}\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"flex flex-col w-[49%] text-center\">\n\t\t\t\t\t\t\t\t<span class=\"text-gray-300 text-xs font-bold\">Max fee limit - gwei</span>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid=\"maxFeePerGasOverride\"\n\t\t\t\t\t\t\t\t\tclass=\"placeholder:italic block ml-2 mt-2 px-4 md:py-2 py-1 leading-5 text-md font-normal\n\t\t\t\t\t\t\t\t\t\ttext-gray-700 bg-gray-100 bg-clip-padding border border-solid border-gray-300\n\t\t\t\t\t\t\t\t\t\trounded-md transition ease-in-out m-0 focus:text-gray-700 focus:bg-white\n\t\t\t\t\t\t\t\t\t\tfocus:border-blue-600 focus:outline-none\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Gas Fee Limit\"\n\t\t\t\t\t\t\t\t\tautocomplete=\"off\"\n\t\t\t\t\t\t\t\t\tbind:value={$form.maxFeePerGasOverride}\n\t\t\t\t\t\t\t\t\tonchange={handleChange}\n\t\t\t\t\t\t\t\t\tonblur={onBlur}\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{#if $errors.maxPriorityFeePerGasOverride}\n\t\t\t\t\t\t\t<small class=\"text-red-600 font-bold animate-pulse\"\n\t\t\t\t\t\t\t\t>{$errors.maxPriorityFeePerGasOverride}</small\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t{#if $errors.maxFeePerGasOverride}\n\t\t\t\t\t\t\t<small class=\"text-red-600 font-bold animate-pulse\"\n\t\t\t\t\t\t\t\t>{$errors.maxFeePerGasOverride}</small\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"flex flex-row mt-2\">\n\t\t\t\t\t\t<div class=\"text-left flex flex-col\">\n\t\t\t\t\t\t\t<p class=\"text-xs text-gray-200 font-bold\">\n\t\t\t\t\t\t\t\tTotal gwei: {Number(gasState.gasEstimate).toFixed(2)}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p class=\"text-xs text-gray-200 font-bold\">\n\t\t\t\t\t\t\t\tTotal estimated fees: {gasState.gasTotalEstimateUSD}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</TabItem>\n\t\t</Tabs>\n\t</form>\n</div>\n"],"names":["wallet","currentlySelected","yakklMiscStore","profile","txGasLimit","historyCount","pincode","toAddress","toAddressValue","maxFeePerGasOverride","maxPriorityFeePerGasOverride","greaterThan0","hexData","txmaxPriorityFeePerGas","priorityClass","marketClass","lowClass","blockNumber","estimatedTransactionCount","gasLimit","transactionState","blockchain","address","txStatus","txHash","txToAddress","txQuantity","txmaxFeePerGas","txNonce","txStartTimestamp","txHistoryTransactions","txBlockchain","txNetworkTypeName","txURL","txGasPercentIncrease","txGasLimitIncrease","recipientPays","gasState","gasEstimate","gasEstimateUSD","maxFeePerGas","maxPriorityFeePerGas","gasBase","gasBaseUSD","gasTrend","trendColor","lowGas","lowGasUSD","marketGas","marketGasUSD","priorityGas","priorityGasUSD","selectedGas","gasTotalEstimateUSD","lastTrendValue","lowPriorityFee","marketPriorityFee","priorityPriorityFee","uiState","amountTabOpen","feesTabOpen","activityTabOpen","errorFields","showConfirm","showContacts","showVerify","error","errorValue","warning","warningValue","message","valueState","toAddressValueUSD","value","valueType","valueCrypto","valueUSD","totalUSD","currencyLabel","currencyFormat","smartContract","toastStatus","toastCounter","toastMessage","toastTrigger","count","msg","timeout","setTimeout","mountTime","updateCount","onDestroy","log","info","lifetime","Date","now","clearValues","stopCheckGasPrices","e","clearVerificationValues","$.store_mutate","$$store_subs","form","$.store_get","toString","browserSvelte","errors","createForm","initialValues","validationSchema","yup","object","shape","string","required","matches","trim","optional","onSubmit","async","data","validate","bypassWarning","resolvedAddr","getProfile","BigNumber","from","EthereumBigNumber","fromEther","toBigInt","length","toHex","getBlockchain","isEthereum","resolveName","isAddress","EOA_FALLBACK_GAS","GWEI","NORMAL","MAX_FEE","toNumber","PRIORITY_FEE","feePerGas","yakklConnectionStore","handleProgress","processTransaction","loadTransactionHistory","networkType","subDomainName","yakklCurrentlySelectedStore","shortcuts","network","explorer","apiSubDomainName","toLowerCase","etherscanUrl","response","fetch","contentType","headers","get","includes","json","text","element","result","yakklHistory","id","type","chainId","getChainId","formattedTimestamp","parseInt","timeStamp","hash","timestamp","nonce","blockHash","transactionIndex","to","formatValue","gas","gasPrice","isError","txtreceipt_status","txreceipt_status","input","contractAddress","cumulativeGasUsed","gasUsed","confirmations","methodId","functionName","push","handleClose","verifyWithPin","pin","profileEncrypted","isEncryptedData","deepCopy","decryptData","then","profile2","unblockIncrease","cancel","eoa","priorityFeePerGas","Math","max","Number","transaction","quantity","toWei","toGwei","LIMITS","BASE","name","privateKey","account","accountData","setSigner","tx","sendTransaction","wait","handleRecycle","parseJsonRpcError","warn","currentTab","nextTab","handleContact","contact","debounce","handlePin","handleApprove","handleReject","$$value","slide","$$payload","out","$.escape","open","$$payload6","round","_","each_array","$.ensure_array_like","$$index","status","style","$$payload4","toFixed","$.attr_class","$.clsx"],"mappings":"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"}