{"version":3,"file":"_page.svelte.js","sources":["../../../../../../../../../../src/lib/managers/networks/ethereum/createPortfolioAccount.ts","../../../../../../../../../../src/routes/(wallet)/accounts/ethereum/create/primary/+page.svelte"],"sourcesContent":["/* eslint-disable prefer-const */\n\nimport { ethers as ethersv6 } from 'ethers-v6';\nimport {\n\tsetSettingsStorage,\n\tgetSettings,\n\tsetProfileStorage,\n\tgetYakklCurrentlySelected,\n\tsetYakklCurrentlySelectedStorage,\n\tsetYakklPrimaryAccountsStorage,\n\tgetYakklPrimaryAccounts,\n\tgetYakklAccounts,\n\tsetYakklAccountsStorage\n} from '$lib/common/stores';\nimport { encryptData, decryptData } from '$lib/common/encryption';\nimport { DEFAULT_DERIVED_PATH_ETH, DEFAULT_PERSONA } from '$lib/common/constants';\nimport type {\n\tCurrentlySelectedData,\n\tMetaData,\n\tProfileData,\n\tYakklAccount,\n\tProfile,\n\tYakklPrimaryAccount,\n\tAccountData,\n\tPrimaryAccountData\n} from '$lib/common/interfaces';\nimport { deepCopy, getSymbol } from '$lib/utilities';\nimport { isEncryptedData, isMetaData, isProfileData, isString } from '$lib/common/misc';\nimport { dateString } from '$lib/common/datetime';\nimport { AccountTypeCategory, NetworkType } from '$lib/common/types';\nimport { VERSION } from '$lib/common/constants';\nimport { log } from '$lib/managers/Logger';\nimport { addressExist } from '$lib/common/utils';\n\nexport async function createPortfolioAccount(yakklMiscStore: string, profile: Profile) {\n\ttry {\n\t\tif (!yakklMiscStore) {\n\t\t\tthrow 'The User was not defined.';\n\t\t}\n\n\t\tlet yakklSettings = await getSettings();\n\t\tif (!yakklSettings) {\n\t\t\t// noop but could load the defaults. For now we will error out!\n\t\t\tthrow 'The settings data has not been initialized. This could be due to not yet registered or data could be incomplete which requires registering again. If unable to re-register then uninstall and reinstall. No Ethereum data will be impacted.';\n\t\t}\n\n\t\tlet yakklCurrentlySelected = await getYakklCurrentlySelected();\n\t\tif (!yakklCurrentlySelected) {\n\t\t\tthrow 'No currently selected account found.';\n\t\t}\n\n\t\tif (isEncryptedData(yakklCurrentlySelected.data)) {\n\t\t\tawait decryptData(yakklCurrentlySelected.data, yakklMiscStore).then((result) => {\n\t\t\t\tyakklCurrentlySelected.data = result as CurrentlySelectedData;\n\t\t\t});\n\t\t}\n\n\t\tlet currentlySelectedData: CurrentlySelectedData =\n\t\t\tyakklCurrentlySelected.data as CurrentlySelectedData;\n\t\tlet derivedPath = DEFAULT_DERIVED_PATH_ETH; // Account gets created with '/0/0' appended to represent the first\n\t\tlet chainId = yakklCurrentlySelected.shortcuts.chainId; // Was 1\n\t\tif (!chainId) {\n\t\t\tchainId = 1;\n\t\t}\n\n\t\tconst preferences = profile.preferences;\n\t\tlet accountName: string | null = null;\n\n\t\tif (isEncryptedData(profile.data)) {\n\t\t\tawait decryptData(profile.data, yakklMiscStore).then((result) => {\n\t\t\t\tprofile.data = result as ProfileData;\n\t\t\t});\n\t\t}\n\n\t\tif (isProfileData(profile.data) && isMetaData(profile.data.meta)) {\n\t\t\tconst meta = profile.data.meta as MetaData;\n\t\t\tif (isString(meta.accountName)) {\n\t\t\t\taccountName = meta.accountName;\n\t\t\t}\n\t\t}\n\n\t\tlet index: number = 0;\n\n\t\tif (isProfileData(profile.data)) {\n\t\t\tindex = profile.data.accountIndex ?? 0;\n\t\t} else {\n\t\t\tindex = 0;\n\t\t}\n\n\t\tderivedPath = `${DEFAULT_DERIVED_PATH_ETH}${index}'/0/0`;\n\t\tif (accountName === null) {\n\t\t\taccountName = `Portfolio Level Account ${index + 1}`;\n\t\t}\n\n\t\tconst entropy = ethersv6.randomBytes(32);\n\t\tconst randomMnemonic = ethersv6.Mnemonic.fromEntropy(entropy);\n\t\tconst ethWallet = ethersv6.HDNodeWallet.fromMnemonic(randomMnemonic, derivedPath);\n\n\t\t// Check if address already exists in accounts or primary accounts\n\t\tconst { exists, table } = await addressExist(ethWallet.address);\n\t\tif (exists) {\n\t\t\tthrow `The Ethereum Wallet (Portfolio Account) was not able to be created. Address already exists in ${table}. Please try again.`;\n\t\t}\n\n\t\tif (!ethWallet) {\n\t\t\tthrow 'The Ethereum Wallet (Portfolio Account) was not able to be created. Please try again.';\n\t\t}\n\n\t\tconst currentDate = dateString();\n\t\tconst address = ethWallet.address;\n\t\t(profile.data as ProfileData).accountIndex = index + 1; // PortfolioAccount index for path\n\n\t\tconst accountData: AccountData = {\n\t\t\textendedKey: ethWallet.extendedKey,\n\t\t\tprivateKey: ethWallet.privateKey,\n\t\t\tpublicKey: ethWallet.publicKey,\n\t\t\tpublicKeyUncompressed: ethWallet.publicKey,\n\t\t\tpath: derivedPath, // ethWallet.path,\n\t\t\tpathIndex: index,\n\t\t\tfingerPrint: ethWallet.fingerprint,\n\t\t\tparentFingerPrint: ethWallet.parentFingerprint,\n\t\t\tchainCode: ethWallet.chainCode,\n\t\t\tassignedTo: [] // Who are the parties that have responsibility for this account\n\t\t};\n\n\t\tconst yakklAccount: YakklAccount = {\n\t\t\tid: profile.id,\n\t\t\tindex: index,\n\t\t\tblockchain: 'Ethereum',\n\t\t\tsmartContract: false,\n\t\t\taddress: address,\n\t\t\talias: '',\n\t\t\taccountType: AccountTypeCategory.PRIMARY,\n\t\t\tname: accountName,\n\t\t\tdescription: '',\n\t\t\tprimaryAccount: null, // If subaccount then it must be a valid primaryaccount else undefined\n\t\t\tdata: accountData,\n\t\t\tquantity: 0n,\n\t\t\tclass: 'Default', // This is only used for enterprise like environments. It can be used for departments like 'Finance', 'Accounting', '<whatever>'\n\t\t\tlevel: 'L1',\n\t\t\tisSigner: true,\n\t\t\tavatar: '', // Default is identityicon but can be changed to user/account avatar\n\t\t\ttags: ['Ethereum', 'primary'],\n\t\t\tincludeInPortfolio: true, // This only applys to the value in this primary account and not any of the derived accounts from this primary account\n\t\t\tconnectedDomains: [],\n\t\t\tversion: VERSION,\n\t\t\tcreateDate: currentDate,\n\t\t\tupdateDate: currentDate\n\t\t};\n\n\t\tconst yakklPrimaryAccountData: PrimaryAccountData = {\n\t\t\tprivateKey: ethWallet.privateKey,\n\t\t\tpublicKey: ethWallet.publicKey,\n\t\t\tpath: derivedPath, //ethWallet.path ? ethWallet.path : derivedPath,\n\t\t\tpathIndex: index,\n\t\t\tfingerPrint: ethWallet.fingerprint,\n\t\t\tparentFingerPrint: ethWallet.parentFingerprint,\n\t\t\tchainCode: ethWallet.chainCode,\n\t\t\textendedKey: ethWallet.extendedKey,\n\t\t\tmnemonic: ethWallet.mnemonic?.phrase,\n\t\t\tentropy: entropy,\n\t\t\tpassword: ethWallet.mnemonic?.password,\n\t\t\tpublicKeyUncompressed: ethWallet.publicKey,\n\t\t\twordCount: ethWallet.mnemonic?.phrase.split(' ').length,\n\t\t\twordListLocale: ethWallet.mnemonic?.wordlist.locale\n\t\t};\n\n\t\tconst yakklPrimaryAccount = {\n\t\t\tid: yakklAccount.id,\n\t\t\tname: yakklAccount.name,\n\t\t\taddress: yakklAccount.address,\n\t\t\tquantity: yakklAccount.quantity,\n\t\t\tindex: index, // for the primary account path index\n\t\t\tdata: yakklPrimaryAccountData,\n\t\t\taccount: yakklAccount, // yakklAccount.primaryAccount is always undefined here since it is the primary account\n\t\t\tsubIndex: 0, // for the subaccount derived path index\n\t\t\tsubAccounts: [] as YakklAccount[], // Always empty since the primary account is the start of the tree\n\t\t\tcreateDate: yakklAccount.createDate,\n\t\t\tupdateDate: yakklAccount.updateDate,\n\t\t\tversion: VERSION\n\t\t};\n\n\t\tlet yakklPrimaryAccountEnc = deepCopy(yakklPrimaryAccount) as YakklPrimaryAccount;\n\t\tif (!isEncryptedData(yakklPrimaryAccountEnc.data)) {\n\t\t\tawait encryptData(yakklPrimaryAccountEnc.data, yakklMiscStore).then((result) => {\n\t\t\t\tyakklPrimaryAccountEnc.data = result;\n\t\t\t});\n\t\t}\n\n\t\tif (!isEncryptedData(yakklPrimaryAccountEnc.data)) {\n\t\t\tthrow new Error('Primary Account Data is not of type EncryptedData');\n\t\t}\n\n\t\tyakklPrimaryAccountEnc.account = yakklAccount;\n\t\tif (!isEncryptedData(yakklPrimaryAccountEnc.account.data)) {\n\t\t\tawait encryptData(yakklPrimaryAccountEnc.account.data, yakklMiscStore).then((result) => {\n\t\t\t\tyakklPrimaryAccountEnc.account.data = result;\n\t\t\t});\n\t\t\tyakklAccount.data = yakklPrimaryAccountEnc.account.data;\n\t\t}\n\n\t\tlet yakklPrimaryAccounts: YakklPrimaryAccount[] = await getYakklPrimaryAccounts();\n\t\tif (!yakklPrimaryAccounts) {\n\t\t\tyakklPrimaryAccounts = [];\n\t\t}\n\t\tyakklPrimaryAccounts.push(yakklPrimaryAccountEnc);\n\n\t\tif (isProfileData(profile.data)) {\n\t\t\tif (!isEncryptedData(profile.data)) {\n\t\t\t\tif (!profile.data.primaryAccounts) {\n\t\t\t\t\tprofile.data.primaryAccounts = [];\n\t\t\t\t}\n\t\t\t\tprofile.data.primaryAccounts.push(yakklPrimaryAccountEnc);\n\t\t\t} else {\n\t\t\t\tthrow new Error('Profile Data is of type EncryptedData and should be of type ProfileData');\n\t\t\t}\n\t\t}\n\n\t\tlet yakklAccounts: YakklAccount[] = await getYakklAccounts();\n\t\tif (!yakklAccounts) {\n\t\t\tyakklAccounts = [];\n\t\t}\n\n\t\tyakklPrimaryAccountEnc.account.primaryAccount = null; // Indicates that this is the primary account since it has no parent\n\n\t\tyakklAccounts.push(yakklPrimaryAccountEnc.account);\n\n\t\t// TODO: May want to remove this - no longer needed\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t//@ts-ignore\n\t\tawait ethWallet.signMessage(yakklMiscStore).then((result) => {\n\t\t\tif (isProfileData(profile.data) && !isEncryptedData(profile.data)) {\n\t\t\t\tprofile.data.sig = result;\n\t\t\t} else {\n\t\t\t\t// Need to maybe error out here\n\t\t\t}\n\t\t});\n\n\t\tconst profileEnc: Profile = deepCopy(profile); // Need deep copy...\n\n\t\tif (!isEncryptedData(profileEnc.data)) {\n\t\t\tawait encryptData(profileEnc.data, yakklMiscStore).then((result) => {\n\t\t\t\tprofileEnc.data = result;\n\t\t\t});\n\t\t}\n\n\t\tyakklSettings.init = true;\n\t\tyakklSettings.isLocked = false;\n\n\t\tyakklCurrentlySelected.version = VERSION;\n\t\tyakklCurrentlySelected.preferences.locale = preferences.locale;\n\t\tyakklCurrentlySelected.preferences.currency = preferences.currency;\n\n\t\tyakklCurrentlySelected.shortcuts.init = true;\n\t\tyakklCurrentlySelected.shortcuts.isLocked = false;\n\t\tyakklCurrentlySelected.shortcuts.blockchain = yakklAccount.blockchain;\n\t\tyakklCurrentlySelected.shortcuts.symbol = getSymbol(yakklAccount.blockchain);\n\t\tyakklCurrentlySelected.shortcuts.chainId = chainId;\n\n\t\t// May want to set to the default network and set the networks and then change the values as needed\n\t\tyakklCurrentlySelected.shortcuts.network.blockchain = yakklAccount.blockchain;\n\t\tyakklCurrentlySelected.shortcuts.network.chainId = chainId; // Defaults to mainnet\n\t\tyakklCurrentlySelected.shortcuts.network.name = 'Mainnet'; // Defaults to mainnet - should change to read from getNetworkName(chainId)\n\t\tyakklCurrentlySelected.shortcuts.network.explorer = 'https://etherscan.io'; // Defaults to etherscan\n\t\tyakklCurrentlySelected.shortcuts.network.type = NetworkType.MAINNET; // Defaults to mainnet\n\t\tyakklCurrentlySelected.shortcuts.network.decimals = 18; // Defaults to 18\n\t\tyakklCurrentlySelected.shortcuts.network.symbol = getSymbol(yakklAccount.blockchain);\n\n\t\tyakklCurrentlySelected.shortcuts.profile.name = (profile.data as ProfileData).name; // Name type\n\t\tyakklCurrentlySelected.shortcuts.profile.email = (profile.data as ProfileData).email;\n\t\tyakklCurrentlySelected.shortcuts.primary = yakklPrimaryAccountEnc;\n\t\tyakklCurrentlySelected.shortcuts.address = yakklPrimaryAccountEnc.address;\n\t\tyakklCurrentlySelected.shortcuts.accountName = yakklPrimaryAccountEnc.account.name;\n\t\tyakklCurrentlySelected.shortcuts.accountType = AccountTypeCategory.PRIMARY;\n\t\tyakklCurrentlySelected.shortcuts.alias = yakklPrimaryAccountEnc.account.alias;\n\t\tyakklCurrentlySelected.shortcuts.smartContract = false;\n\n\t\tcurrentlySelectedData.primaryAccount = yakklPrimaryAccountEnc;\n\t\t(currentlySelectedData as CurrentlySelectedData).account = yakklPrimaryAccountEnc.account;\n\n\t\tyakklCurrentlySelected.id = profile.id;\n\t\tyakklCurrentlySelected.persona = profile?.persona || DEFAULT_PERSONA;\n\t\tyakklCurrentlySelected.createDate = yakklPrimaryAccountEnc.account.createDate;\n\t\tyakklCurrentlySelected.updateDate = yakklPrimaryAccountEnc.account.updateDate;\n\n\t\tyakklCurrentlySelected.data = currentlySelectedData;\n\n\t\tif (!isEncryptedData(yakklCurrentlySelected.data)) {\n\t\t\tawait encryptData(yakklCurrentlySelected.data, yakklMiscStore).then((result) => {\n\t\t\t\tyakklCurrentlySelected.data = result;\n\t\t\t});\n\t\t}\n\n\t\tawait setYakklAccountsStorage(yakklAccounts);\n\t\tawait setYakklPrimaryAccountsStorage(yakklPrimaryAccounts);\n\t\tawait setSettingsStorage(yakklSettings);\n\t\tawait setProfileStorage(profileEnc); // Note: Calling function will need to refresh the profile data to be current with these changes\n\t\tawait setYakklCurrentlySelectedStorage(yakklCurrentlySelected);\n\n\t\t// PrimaryAccountReturnValues\n\t\treturn Promise.resolve({\n\t\t\tcurrentlySelected: yakklCurrentlySelected,\n\t\t\tprimaryAccount: yakklPrimaryAccountEnc\n\t\t});\n\t} catch (e) {\n\t\tlog.error('The Portfolio Account was not able to be created.', false, e);\n\t\treturn Promise.reject(e);\n\t}\n}\n","<script lang=\"ts\">\n\timport { browserSvelte } from '$lib/common/environment';\n\timport { Button, Modal, Spinner } from 'flowbite-svelte';\n\timport { getProfile, getMiscStore, getSettings } from '$lib/common/stores';\n\timport { yakklRegisteredData } from '$lib/models/dataModels';\n\timport {\n\t\tdecryptData,\n\t\ttype Profile,\n\t\ttype ProfileData,\n\t\ttype PrimaryAccountData,\n\t\ttype YakklPrimaryAccount,\n\t\tisEncryptedData,\n\t\ttype PrimaryAccountReturnValues,\n\t\ttype Settings,\n\t\ttype EmergencyKitAccountData,\n\t\tPlanType\n\t} from '$lib/common';\n\timport { DEFAULT_DERIVED_PATH_ETH, VERSION, PATH_WELCOME, DEFAULT_TITLE } from '$lib/common';\n\timport { goto } from '$app/navigation';\n\timport { createPortfolioAccount } from '$lib/managers/networks/ethereum/createPortfolioAccount';\n\timport { onMount } from 'svelte';\n\timport { EmergencyKitManager } from '$lib/managers/EmergencyKitManager';\n\timport { sendNotificationMessage } from '$lib/common/notifications';\n\t// import { jsPDF } from \"jspdf\";\n\n\tlet settings: Settings | null;\n\tlet yakklMiscStore: string = getMiscStore();\n\tlet profile: Profile;\n\tlet blockchain: string;\n\n\tlet id: string;\n\tlet registered = yakklRegisteredData;\n\tlet email = $state('');\n\tlet userName = $state('');\n\tlet accountName = $state('Account 1');\n\t// let encryptDownload = true;\n\tlet passwordWarning = $state(false);\n\tlet printPassword = $state(true);\n\tlet successDialog = $state(false);\n\tlet wordCount = $state(0);\n\tlet address = $state('');\n\tlet privateKey = $state('');\n\tlet mnemonic = $state('');\n\tlet pincode;\n\tlet createDate: string;\n\tlet updateDate: string;\n\tlet displayDate: Date = $state();\n\tlet derivedPath = $state(DEFAULT_DERIVED_PATH_ETH); // Account gets created with '/0/0' appended to represent the first\n\tlet network: string = $state('');\n\tlet planType: PlanType = $state(PlanType.BASIC_MEMBER);\n\tlet msgType = 'WARNING';\n\tlet warning = $state(false);\n\tlet warningValue: string;\n\tlet error = $state(false);\n\tlet errorValue: string = $state('');\n\n\tonMount(async () => {\n\t\tif (browserSvelte) {\n\t\t\tsettings = await getSettings();\n\t\t\tif (settings === null) {\n\t\t\t\tthrow 'Settings data does not seem to be valid. Please register or re-register. Thank you.';\n\t\t\t}\n\n\t\t\tyakklMiscStore = getMiscStore();\n\n\t\t\tid = settings.id;\n\t\t\tplanType = settings.plan.type ?? PlanType.BASIC_MEMBER;\n\t\t}\n\t});\n\n\tasync function createAccount() {\n\t\ttry {\n\t\t\tprofile = (await getProfile()) as Profile;\n\n\t\t\tif (!yakklMiscStore) {\n\t\t\t\tyakklMiscStore = getMiscStore();\n\t\t\t}\n\n\t\t\tif (!profile || !yakklMiscStore) {\n\t\t\t\tthrow 'Profile data does not seem to be valid. Please register or re-register. Thank you.';\n\t\t\t}\n\n\t\t\tlet profileData: ProfileData | null = null;\n\t\t\tif (isEncryptedData(profile.data)) {\n\t\t\t\tawait decryptData(profile.data, yakklMiscStore).then((result) => {\n\t\t\t\t\tprofileData = result as ProfileData;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthrow 'Profile data appears to be encrypted. Please try again. Thank you.';\n\t\t\t}\n\n\t\t\tuserName = profile.userName;\n\t\t\tpincode = profileData!.pincode;\n\t\t\tregistered = profileData!.registered;\n\t\t\temail = profileData!.email;\n\n\t\t\tawait createPortfolioAccount(yakklMiscStore, profile)\n\t\t\t\t.then(async (result) => {\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst primaryAccountValues: PrimaryAccountReturnValues =\n\t\t\t\t\t\t\t\tresult as PrimaryAccountReturnValues;\n\n\t\t\t\t\t\t\tif (!primaryAccountValues.currentlySelected || !primaryAccountValues.primaryAccount) {\n\t\t\t\t\t\t\t\tthrow 'Portfolio account was not created. Please try again. Thank you.';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\taccountName = primaryAccountValues.currentlySelected.shortcuts.accountName;\n\n\t\t\t\t\t\t\tid = primaryAccountValues.currentlySelected.id;\n\n\t\t\t\t\t\t\tnetwork = blockchain =\n\t\t\t\t\t\t\t\tprimaryAccountValues.currentlySelected.shortcuts.network.blockchain;\n\t\t\t\t\t\t\taddress = primaryAccountValues.currentlySelected.shortcuts.address;\n\t\t\t\t\t\t\tcreateDate = primaryAccountValues.primaryAccount.createDate;\n\t\t\t\t\t\t\tupdateDate = createDate;\n\n\t\t\t\t\t\t\tlet yakklPrimaryAccount: YakklPrimaryAccount = primaryAccountValues.primaryAccount;\n\t\t\t\t\t\t\tlet primaryData = yakklPrimaryAccount.data;\n\n\t\t\t\t\t\t\tif (isEncryptedData(yakklPrimaryAccount.data)) {\n\t\t\t\t\t\t\t\tawait decryptData(yakklPrimaryAccount.data, yakklMiscStore).then((result) => {\n\t\t\t\t\t\t\t\t\tprimaryData = result as PrimaryAccountData;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\twordCount = (primaryData as PrimaryAccountData).wordCount as number;\n\t\t\t\t\t\t\tprivateKey = (primaryData as PrimaryAccountData).privateKey;\n\t\t\t\t\t\t\tmnemonic = (primaryData as PrimaryAccountData).mnemonic as string;\n\n\t\t\t\t\t\t\tderivedPath = (primaryData as PrimaryAccountData).path as string;\n\t\t\t\t\t\t\tdisplayDate = new Date(createDate);\n\n\t\t\t\t\t\t\tsendNotificationMessage(\n\t\t\t\t\t\t\t\t'Primary Address Created!',\n\t\t\t\t\t\t\t\t'Your primary address has been created. Please print and store your emergency kit in a safe place.  🔐 DO NOT share this information with anyone! Thank you.'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tsuccessDialog = true;\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tthrow `Wallet was created but the following occured: ${e}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tthrow `${e}`;\n\t\t\t\t});\n\t\t} catch (e) {\n\t\t\terror = true;\n\t\t\terrorValue = `${e}`;\n\t\t\tconsole.log(errorValue);\n\t\t}\n\t}\n\n\tasync function handlePrintPwd(e: any) {\n\t\tpasswordWarning = false;\n\t\tprintPassword = true;\n\t\tprintKit();\n\t}\n\n\tasync function handlePrint(e: any) {\n\t\tpasswordWarning = false;\n\t\tprintPassword = false;\n\t\tprintKit();\n\t}\n\n\tasync function handlePrinting(e: any) {\n\t\t// TBD - Print pwd but do not show it on screen\n\t\t// passwordWarning = true;\n\t\thandlePrintPwd(e);\n\t}\n\n\tfunction printKit() {\n\t\tif (browserSvelte) {\n\t\t\ttry {\n\t\t\t\twindow.print();\n\t\t\t} catch (e) {\n\t\t\t\terrorValue = `Your Wallet did not initialize for the following reason: ${e}`;\n\t\t\t\tconsole.log(errorValue);\n\t\t\t}\n\n\t\t\t// let doc = new jsPDF(); //'p', 'pt', 'letter');\n\n\t\t\t// doc.setFontSize(22);\n\t\t\t// doc.text(20, 20, `${asset} - Account Secrets Emergency Kit`);\n\n\t\t\t// doc.setFontSize(16);\n\t\t\t// doc.text(20, 30, \"Guard this information and put it in a safe place! Print, write down password and store in safe location.\");\n\n\t\t\t// doc.save(\"Test.pdf\");\n\t\t\t// pdf.html(document.getElementById(\"printPDF\"), {\n\t\t\t//   callback: function (pdf) {\n\t\t\t//     var iframe = document.createElement('iframe');\n\t\t\t//     iframe.setAttribute('style', 'position:absolute;top:0;left:0;height:100%; width:428px');\n\t\t\t//     document.body.appendChild(iframe);\n\t\t\t//     iframe.src = pdf.output('datauristring');\n\t\t\t//   }\n\t\t\t// });\n\t\t}\n\t}\n\n\tasync function handleDownload() {\n\t\tlet ekAccountData: EmergencyKitAccountData = {\n\t\t\tid: id,\n\t\t\tregistered: registered,\n\t\t\temail: email,\n\t\t\tuserName: userName,\n\t\t\tblockchain: blockchain,\n\t\t\tportfolioAddress: address,\n\t\t\tportfolioName: accountName,\n\t\t\tprivateKey: privateKey,\n\t\t\tmnemonic: mnemonic,\n\t\t\tcreateDate: createDate,\n\t\t\tupdateDate: updateDate,\n\t\t\tversion: VERSION,\n\t\t\thash: ''\n\t\t};\n\n\t\tconst emergencyKit = await EmergencyKitManager.createEmergencyKit(\n\t\t\t[ekAccountData],\n\t\t\ttrue,\n\t\t\tyakklMiscStore\n\t\t);\n\t\tawait EmergencyKitManager.downloadEmergencyKit(emergencyKit);\n\t}\n</script>\n\n<svelte:head>\n\t<title>\n\t\t{DEFAULT_TITLE}\n\t</title>\n</svelte:head>\n\n<!-- <ErrorModal error={error} errorMessage={errorValue} nextStep={() => {error=false; goto(PATH_ACCOUNTS)}} /> -->\n<div class=\"modal\" class:modal-open={error}>\n\t<div class=\"modal-box relative\">\n\t\t<!-- <label for=\"my-modal-3\" class=\"btn btn-sm btn-circle absolute right-2 top-2\">✕</label> -->\n\t\t<h3 class=\"text-lg font-bold\">ERROR!</h3>\n\t\t<p class=\"py-4\">{errorValue}</p>\n\t\t<div class=\"modal-action\">\n\t\t\t<button\n\t\t\t\tclass=\"btn\"\n\t\t\t\tonclick={() => {\n\t\t\t\t\terror = false;\n\t\t\t\t\tgoto(PATH_WELCOME);\n\t\t\t\t}}>Close</button\n\t\t\t>\n\t\t</div>\n\t</div>\n</div>\n\n<div class=\"modal\" class:modal-open={warning}>\n\t<div class=\"modal-box relative\">\n\t\t<!-- <label for=\"my-modal-3\" class=\"btn btn-sm btn-circle absolute right-2 top-2\">✕</label> -->\n\t\t<h3 class=\"text-lg font-bold\">{msgType}</h3>\n\t\t<p class=\"py-4\">{warningValue}</p>\n\t\t<div class=\"modal-action\">\n\t\t\t<button\n\t\t\t\tclass=\"btn\"\n\t\t\t\tonclick={() => {\n\t\t\t\t\twarning = false;\n\t\t\t\t\tgoto(PATH_WELCOME);\n\t\t\t\t}}>Close</button\n\t\t\t>\n\t\t</div>\n\t</div>\n</div>\n\n<div class=\"modal\" class:modal-open={passwordWarning}>\n\t<div class=\"modal-box relative\">\n\t\t<!-- <label for=\"my-modal-3\" class=\"btn btn-sm btn-circle absolute right-2 top-2\">✕</label> -->\n\t\t<h3 class=\"text-lg font-bold\">WARNING</h3>\n\t\t<p class=\"py-4\">Do you wish to continue?</p>\n\t\t<div class=\"modal-action\">\n\t\t\t<button class=\"btn\" onclick={handlePrintPwd}>Yes, I'm sure!</button>\n\t\t\t<button class=\"btn\" onclick={handlePrint}>No</button>\n\t\t</div>\n\t</div>\n</div>\n\n<Modal bind:open={successDialog} autoclose>\n\t<div class=\"text-center\">\n\t\t<svg\n\t\t\taria-hidden=\"true\"\n\t\t\tclass=\"mx-auto mb-4 w-14 h-14 text-green-600 dark:text-gray-200 fill-green-400\"\n\t\t\tfill=\"none\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tviewBox=\"0 0 24 24\"\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t>\n\t\t\t<path\n\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\td=\"M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm13.36-1.814a.75.75 0 10-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 00-1.06 1.06l2.25 2.25a.75.75 0 001.14-.094l3.75-5.25z\"\n\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t/>\n\t\t</svg>\n\n\t\t<h3 class=\"mb-2 text-lg font-normal text-green-700 dark:text-gray-400\">\n\t\t\t<span class=\"font-bold\">SUCCESS - </span> Wallet Created!\n\t\t</h3>\n\t\t<div class=\"text-left\">\n\t\t\t<h3 class=\"mb-1 text-lg font-bold text-green-900\">(ONLY available for Pro version)</h3>\n\t\t\t<h4 class=\"mb-1 text-lg font-normal text-green-700\">Next steps:</h4>\n\t\t\t<p class=\"mb-5 text-md font-normal text-green-900\">\n\t\t\t\t<span class=\"font-bold\"\n\t\t\t\t\t>1. Click the Print button (if you have a secure printer you can trust).</span\n\t\t\t\t> This printout will be your emergency kit. Store it somewhere safe! Do not let anyone see it\n\t\t\t\tbecause it contains sensitive information!\n\t\t\t</p>\n\t\t\t<p class=\"mb-5 text-md font-normal text-green-900\">\n\t\t\t\t<span class=\"font-bold\">2. Click the Download button.</span> This will download this same emergency\n\t\t\t\tkit in a file format but it will be fully encrypted using your credentials that you just created!\n\t\t\t\tIt's a good idea to store the encrypted file on an encrypted and secure USB drive (not a cold\n\t\t\t\twallet - that is something different). Put the secured file and/or encrypted USB drive somewhere\n\t\t\t\tsafe like your hardcopy emergency kit!\n\t\t\t</p>\n\t\t\t<p class=\"mb-5 text-md font-normal text-green-600\">\n\t\t\t\t<span class=\"font-bold\">3. Click the Close button.</span> This will close the credentials page\n\t\t\t\tand you're now ready to use YAKKL with confidence.\n\t\t\t</p>\n\t\t</div>\n\t\t<div class=\"text-center\">\n\t\t\t<p class=\"mb-5 text-md font-bold text-green-600\">\n\t\t\t\tIf you are new to the Crypto world then be sure to checkout 'Getting Started' at the Yakkl\n\t\t\t\tUniversity. You can find a link at the top of any page.\n\t\t\t</p>\n\t\t\t<p class=\"mb-5 text-md font-bold text-green-600\">Super excited to have you onboard!</p>\n\t\t\t<p class=\"mb-5 text-md font-bold text-green-600\">Let us know how we can help!</p>\n\t\t</div>\n\t\t<Button on:click={() => (successDialog = false)} color=\"green\">Close</Button>\n\t</div>\n</Modal>\n\n{#await createAccount().then()}\n\t<div\n\t\tclass=\"m-2 border-2 border-base-300 rounded-lg bg-base-100 text-base-content justify-center align-middle\"\n\t>\n\t\t<div class=\"text-center\">\n\t\t\t<span class=\"font-bold mt-10 text-xl\">Creating {network} Portfolio Account...</span>\n\t\t</div>\n\t\t<div class=\"text-center mt-10\" data-size={10}><Spinner /></div>\n\t</div>\n{:then _}\n\t<!-- {#if accountName} -->\n\t<div class=\"print:hidden min-h-[40rem] mx-2\">\n\t\t<div class=\"relative mt-1\">\n\t\t\t<main\n\t\t\t\tclass=\"p-2 max-h-[900px] rounded-xl bg-base-100 overflow-scroll border-2 border-stone-700 border-r-stone-700/75 border-b-slate-700/75\"\n\t\t\t>\n\t\t\t\t<div class=\"mt-[.35rem] ml-1 py-[8px] flex fixed top-0 bg-base-100 print:hidden\">\n\t\t\t\t\t<!-- {#if registered.type === 'Pro' && registered.key} -->\n\t\t\t\t\t<Button class=\"btn-accent btn-sm inline-flex\" on:click={handlePrinting}>\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\tstroke-width=\"1.5\"\n\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\tclass=\"w-4 h-4 mr-2\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\t\t\td=\"M6.72 13.829c-.24.03-.48.062-.72.096m.72-.096a42.415 42.415 0 0110.56 0m-10.56 0L6.34 18m10.94-4.171c.24.03.48.062.72.096m-.72-.096L17.66 18m0 0l.229 2.523a1.125 1.125 0 01-1.12 1.227H7.231c-.662 0-1.18-.568-1.12-1.227L6.34 18m11.318 0h1.091A2.25 2.25 0 0021 15.75V9.456c0-1.081-.768-2.015-1.837-2.175a48.055 48.055 0 00-1.913-.247M6.34 18H5.25A2.25 2.25 0 013 15.75V9.456c0-1.081.768-2.015 1.837-2.175a48.041 48.041 0 011.913-.247m10.5 0a48.536 48.536 0 00-10.5 0m10.5 0V3.375c0-.621-.504-1.125-1.125-1.125h-8.25c-.621 0-1.125.504-1.125 1.125v3.659M18 10.5h.008v.008H18V10.5zm-3 0h.008v.008H15V10.5z\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t1. Print\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button class=\"ml-5 mr-5 inline-flex btn-accent btn-sm\" on:click={handleDownload}>\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\tstroke-width=\"1.5\"\n\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\tclass=\"w-4 h-4 mr-2\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\t\t\td=\"M9 8.25H7.5a2.25 2.25 0 00-2.25 2.25v9a2.25 2.25 0 002.25 2.25h9a2.25 2.25 0 002.25-2.25v-9a2.25 2.25 0 00-2.25-2.25H15M9 12l3 3m0 0l3-3m-3 3V2.25\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t2. Download\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tid=\"close\"\n\t\t\t\t\t\tclass=\"inline-flex btn-accent btn-sm\"\n\t\t\t\t\t\ton:click={() => goto(PATH_WELCOME)}>3. Close</Button\n\t\t\t\t\t>\n\t\t\t\t\t<!-- {:else}\n        <div class=\"block btn btn-accent\">\n          <span class=\"text-xs font-bold\">Emergency Kit only available for Pro version</span>\n          <Button id=\"close\" class=\"inline-flex\" on:click={() => goto(PATH_WELCOME)}>Close</Button>\n        </div>\n        {/if} -->\n\t\t\t\t</div>\n\n\t\t\t\t<div\n\t\t\t\t\tclass=\"print:hidden m-1 mt-12 mb-[12rem] rounded-t-lg bg-base-100 text-base-content overflow-scroll\"\n\t\t\t\t>\n\t\t\t\t\t<h4 class=\"text-center font-extrabold text-lg mt-5\">VERY IMPORTANT!</h4>\n\t\t\t\t\t<h4 class=\"text-center font-extrabold text-lg mb-4\">\n\t\t\t\t\t\tPRINT THIS PAGE and/or COPY YOUR SECRET PHRASE SOMEWHERE SAFE!\n\t\t\t\t\t</h4>\n\n\t\t\t\t\t<div class=\"ml-2 mr-2 text-center\">\n\t\t\t\t\t\t<h3 class=\"text-lg font-medium leading-6\">{network} - Account Secrets Emergency Kit</h3>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<h4 class=\"block mt-1 text-sm\">Print and guard this information!</h4>\n\t\t\t\t\t\t<h4 class=\"block text-sm\">Put this document in a safe place!</h4>\n\t\t\t\t\t\t<h4 class=\"block text-sm\">\n\t\t\t\t\t\t\tYour PASSWORD will not show on the screen, but will show on the print out! Handle\n\t\t\t\t\t\t\tSecurely!\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t<h4 class=\"block text-sm text-primary\">Portfolio Account</h4>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"mt-5 border-t mx-1 border-gray-400 break-words overflow-x-scroll\">\n\t\t\t\t\t\t<dl class=\"divide-y divide-gray-400\">\n\t\t\t\t\t\t\t<div class=\"py-4 grid grid-cols-5 bg-gray-100\">\n\t\t\t\t\t\t\t\t<dt class=\"text-xs ml-1 text-gray-700 mt-1\">USERNAME</dt>\n\t\t\t\t\t\t\t\t<dd class=\"text-xl font-extrabold font-mono text-gray-700 col-span-4 ml-4 mt-0\">\n\t\t\t\t\t\t\t\t\t{userName}\n\t\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"py-4 grid grid-cols-5 bg-white\">\n\t\t\t\t\t\t\t\t<dt class=\"text-xs ml-1 text-gray-700 mt-1\">\n\t\t\t\t\t\t\t\t\tPASSWORD{printPassword ? '' : ' (write it down)'}\n\t\t\t\t\t\t\t\t</dt>\n\t\t\t\t\t\t\t\t<dd\n\t\t\t\t\t\t\t\t\tclass=\"text-xl font-extrabold font-mono text-gray-700 col-span-4 ml-4 mt-0 break-all\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tREDACTED\n\t\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"py-4 grid grid-cols-5 bg-gray-100\">\n\t\t\t\t\t\t\t\t<dt class=\"text-xs ml-1 text-gray-700 mt-1\">\n\t\t\t\t\t\t\t\t\tPINCODE{printPassword ? '' : ' (write it down)'}\n\t\t\t\t\t\t\t\t</dt>\n\t\t\t\t\t\t\t\t<dd\n\t\t\t\t\t\t\t\t\tclass=\"text-xl font-extrabold font-mono text-gray-700 col-span-4 ml-4 mt-0 break-all\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tREDACTED\n\t\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"py-4 grid grid-cols-5 bg-white\">\n\t\t\t\t\t\t\t\t<dt class=\"text-xs ml-1 text-gray-700 mt-1\">ACCOUNT NAME</dt>\n\t\t\t\t\t\t\t\t<dd class=\"text-xl font-extrabold font-mono text-gray-700 col-span-4 ml-4 mt-0\">\n\t\t\t\t\t\t\t\t\t{accountName}\n\t\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"py-4 grid grid-cols-5 bg-gray-100\">\n\t\t\t\t\t\t\t\t<dt class=\"text-xs ml-1 text-gray-700 mt-1\">PRIMARY ADDRESS</dt>\n\t\t\t\t\t\t\t\t<dd\n\t\t\t\t\t\t\t\t\tclass=\"text-xl font-extrabold font-mono text-gray-700 col-span-4 ml-4 mt-0 break-all\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{address}\n\t\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"py-4 grid grid-cols-5 bg-white\">\n\t\t\t\t\t\t\t\t<dt class=\"text-xs ml-1 text-gray-700 mt-1\">PRIVATE KEY</dt>\n\t\t\t\t\t\t\t\t<dd\n\t\t\t\t\t\t\t\t\tclass=\"text-xl font-extrabold font-mono text-gray-700 col-span-4 ml-4 mt-0 break-all\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{privateKey}\n\t\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"py-4 grid grid-cols-5 bg-gray-100\">\n\t\t\t\t\t\t\t\t<dt class=\"text-xs ml-1 text-gray-700 mt-1\">SECRET PHRASE!</dt>\n\t\t\t\t\t\t\t\t<dd\n\t\t\t\t\t\t\t\t\tclass=\"text-lg font-extrabold font-mono text-gray-700 col-span-4 ml-4 mt-0 break-normal\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{mnemonic}\n\t\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"py-4 grid grid-cols-5 bg-white\">\n\t\t\t\t\t\t\t\t<dt class=\"text-xs ml-1 text-gray-700 mt-1\">DERIVED PATH (internal)</dt>\n\t\t\t\t\t\t\t\t<dd\n\t\t\t\t\t\t\t\t\tclass=\"text-xl font-extrabold font-mono text-gray-700 col-span-4 mt-0 break-all\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{derivedPath}\n\t\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"py-4 grid grid-cols-5 bg-gray-100\">\n\t\t\t\t\t\t\t\t<dt class=\"text-xs ml-1 text-gray-700 mt-1\">DATE CREATED</dt>\n\t\t\t\t\t\t\t\t<dd class=\"text-lg font-extrabold font-mono text-gray-700 col-span-4 ml-4 mt-0\">\n\t\t\t\t\t\t\t\t\t{displayDate}\n\t\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"py-4 grid grid-cols-5 bg-white\">\n\t\t\t\t\t\t\t\t<dt class=\"text-xs ml-1 text-gray-700 mt-1\">EMAIL</dt>\n\t\t\t\t\t\t\t\t<dd class=\"text-lg font-extrabold font-mono text-gray-700 col-span-4 ml-4 mt-0\">\n\t\t\t\t\t\t\t\t\t{email}\n\t\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</dl>\n\t\t\t\t\t</div>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<span class=\"block mt-5 text-base text-gray-300 justify-center relative\"\n\t\t\t\t\t\t><span class=\"font-bold\">VERY IMPORTANT:</span> NEVER GIVE ANYONE THE INFORMATION ON THIS\n\t\t\t\t\t\tPAGE (except for CRYPTO ADDRESS since it is public)! NO ONE FROM YAKKL WILL EVER ASK FOR\n\t\t\t\t\t\tYOUR PRIVATE KEY, PASSWORD, OR SECRET PHRASE! If anyone, any site, or any project ever asks\n\t\t\t\t\t\tfor anything other than your public crypto address then THEY MOST LIKELY ARE SCAMMERS! A\n\t\t\t\t\t\tscammer's website will look good, they may show a good number of social media followers,\n\t\t\t\t\t\tor some \"influencer\" may recommend them (maybe not even knowing). But, if they ask for anything\n\t\t\t\t\t\texcept your crypto address then treat them like a scammer to stay safe!</span\n\t\t\t\t\t>\n\t\t\t\t\t<br />\n\t\t\t\t\t<span class=\"block mt-2 text-base text-gray-300 justify-center relative\"\n\t\t\t\t\t\t><span class=\"font-bold\">IMPORTANT:</span> The {wordCount} words MUST be in the order above!\n\t\t\t\t\t\tDO NOT mix the order up if you need to enter them to recover your account!</span\n\t\t\t\t\t>\n\t\t\t\t\t<br />\n\t\t\t\t\t<span class=\"block mt-2 text-base text-gray-300 justify-center relative\"\n\t\t\t\t\t\t><span class=\"font-bold\">IMPORTANT:</span> To safely destroy this document, redact and shred\n\t\t\t\t\t\tor burn it!</span\n\t\t\t\t\t>\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t</div>\n\t</div>\n\n\t<!-- {#if registered.type === 'Pro' && registered.key} -->\n\t<!-- Will need to change back or adjust after pre-launch! -->\n\t<div class=\"hidden print:block\">\n\t\t<div class=\"ml-1 mr-1 mb-[10rem] print:ml-0 print:mr-0 w-[1000px] bg-white overflow-scroll\">\n\t\t\t<h4 class=\"text-center font-extrabold text-lg text-gray-900 m-4 print:hidden\">\n\t\t\t\tVERY IMPORTANT! PRINT THIS PAGE and/or COPY YOUR SECRET PHRASE SOMEWHERE SAFE!\n\t\t\t</h4>\n\t\t\t<div id=\"printPDF\">\n\t\t\t\t<!-- TBD - Need to look into bringing down logo, make larger, raise text -->\n\t\t\t\t<div class=\"items-center w-full text-center\">\n\t\t\t\t\t<!-- svelte-ignore a11y_missing_attribute -->\n\t\t\t\t\t<img class=\"w-24 h-24 z-10 ml-5\" src=\"/images/logoBullFav128x128.png\" />\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"w-full text-center\">\n\t\t\t\t\t<h1 class=\"text-lg print:text-2xl font-medium leading-6 text-gray-900\">\n\t\t\t\t\t\t{network} - Portfolio Account Emergency Kit\n\t\t\t\t\t</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\t<h3 class=\"block mt-1 text-sm print:text-lg text-gray-700\">\n\t\t\t\t\t\tPrint and guard this information!\n\t\t\t\t\t</h3>\n\t\t\t\t\t<h3 class=\"block mt-1 text-sm print:text-lg text-gray-700\">\n\t\t\t\t\t\tPut this document in a safe place!\n\t\t\t\t\t</h3>\n\t\t\t\t\t<h4 class=\"block text-sm text-primary\">Portfolio Account</h4>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"mt-5 border-t border-gray-400\">\n\t\t\t\t\t<dl class=\"divide-y divide-gray-400\">\n\t\t\t\t\t\t<div class=\"py-4 grid grid-cols-5 bg-gray-100\">\n\t\t\t\t\t\t\t<dt class=\"text-sm ml-3 font-medium text-gray-500 mt-1\">USERNAME</dt>\n\t\t\t\t\t\t\t<dd class=\"text-xl font-extrabold font-mono text-gray-900 col-span-4 mt-0\">\n\t\t\t\t\t\t\t\t{userName}\n\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"py-4 grid grid-cols-5 bg-white\">\n\t\t\t\t\t\t\t<dt class=\"text-sm ml-3 text-gray-500 mt-1\">\n\t\t\t\t\t\t\t\tPASSWORD{printPassword ? '' : ' (write it down)'}\n\t\t\t\t\t\t\t</dt>\n\t\t\t\t\t\t\t{#if printPassword === true}\n\t\t\t\t\t\t\t\t<dd\n\t\t\t\t\t\t\t\t\tclass=\"text-xl font-extrabold font-mono text-transparent print:text-gray-900 col-span-4 mt-0\"\n\t\t\t\t\t\t\t\t></dd>\n\t\t\t\t\t\t\t\t<!-- {password}</dd> -->\n\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t<dd class=\" text-sm text-gray-900 col-span-4 mt-0\"></dd>\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"py-4 grid grid-cols-5 bg-gray-100\">\n\t\t\t\t\t\t\t<dt class=\"text-sm ml-3 text-gray-500 mt-1\">\n\t\t\t\t\t\t\t\tPINCODE{printPassword ? '' : ' (write it down)'}\n\t\t\t\t\t\t\t</dt>\n\t\t\t\t\t\t\t{#if printPassword === true}\n\t\t\t\t\t\t\t\t<dd\n\t\t\t\t\t\t\t\t\tclass=\"text-xl font-extrabold font-mono text-transparent print:text-gray-900 col-span-4 mt-0\"\n\t\t\t\t\t\t\t\t></dd>\n\t\t\t\t\t\t\t\t<!-- {pincode}</dd> -->\n\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t<dd class=\" text-sm text-gray-900 col-span-4 mt-0\">\n\t\t\t\t\t\t\t\t\t<!-- <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-4 h-4\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10\" />\n                  </svg> -->\n\t\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"py-4 grid grid-cols-5 bg-white\">\n\t\t\t\t\t\t\t<dt class=\"text-sm ml-3 font-medium text-gray-500 mt-1\">ACCOUNT NAME</dt>\n\t\t\t\t\t\t\t<dd class=\"text-xl font-extrabold font-mono text-gray-900 col-span-4 mt-0\">\n\t\t\t\t\t\t\t\t{accountName}\n\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"py-4 grid grid-cols-5 bg-gray-100\">\n\t\t\t\t\t\t\t<dt class=\"text-sm ml-3 font-medium text-gray-500 mt-1\">PUBLIC ADDRESS</dt>\n\t\t\t\t\t\t\t<dd class=\"text-xl font-extrabold font-mono text-gray-900 col-span-4 mt-0\">\n\t\t\t\t\t\t\t\t{address}\n\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"py-4 grid grid-cols-5 bg-white\">\n\t\t\t\t\t\t\t<dt class=\"text-sm ml-3 font-medium text-gray-500 mt-1\">PRIVATE KEY</dt>\n\t\t\t\t\t\t\t<dd class=\"text-xl font-extrabold font-mono text-gray-900 col-span-4 mt-0\">\n\t\t\t\t\t\t\t\t{privateKey}\n\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"py-4 grid grid-cols-5 bg-gray-100\">\n\t\t\t\t\t\t\t<dt class=\"text-sm ml-3 font-medium text-gray-500 mt-1\">SECRET PHRASE!</dt>\n\t\t\t\t\t\t\t<dd class=\"text-lg font-extrabold font-mono text-gray-900 col-span-4 mt-0\">\n\t\t\t\t\t\t\t\t{mnemonic}\n\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"py-4 grid grid-cols-5 bg-white\">\n\t\t\t\t\t\t\t<dt class=\"text-sm ml-3 font-medium text-gray-500 mt-1\">DERIVED PATH (internal)</dt>\n\t\t\t\t\t\t\t<dd class=\"text-xl font-extrabold font-mono text-gray-900 col-span-4 mt-0 break-all\">\n\t\t\t\t\t\t\t\t{derivedPath}\n\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"py-4 grid grid-cols-5 bg-gray-100\">\n\t\t\t\t\t\t\t<dt class=\"text-sm ml-3 font-medium text-gray-500 mt-1\">DATE CREATED</dt>\n\t\t\t\t\t\t\t<dd class=\"text-lg font-extrabold font-mono text-gray-900 col-span-4 mt-0\">\n\t\t\t\t\t\t\t\t{displayDate}\n\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"py-4 grid grid-cols-5 bg-white\">\n\t\t\t\t\t\t\t<dt class=\"text-sm ml-3 font-medium text-gray-500 mt-1\">EMAIL</dt>\n\t\t\t\t\t\t\t<dd class=\"text-lg font-extrabold font-mono text-gray-900 col-span-4 mt-0\">\n\t\t\t\t\t\t\t\t{email}\n\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</dl>\n\t\t\t\t</div>\n\t\t\t\t<hr />\n\t\t\t\t<span class=\"block mt-5 text-base text-gray-900 justify-center relative\"\n\t\t\t\t\t><span class=\"font-bold\">VERY IMPORTANT:</span> NEVER GIVE ANYONE THE INFORMATION ON THIS\n\t\t\t\t\tPAGE (except for PUBLIC ADDRESS since it is public)!\n\t\t\t\t\t<span class=\"underline\"\n\t\t\t\t\t\t>NO ONE FROM YAKKL WILL EVER ASK FOR YOUR PRIVATE KEY, PASSWORD, OR SECRET PHRASE!</span\n\t\t\t\t\t> If anyone, any site, or any project ever asks for anything other than your public crypto\n\t\t\t\t\taddress then THEY MOST LIKELY ARE SCAMMERS! A scammer's website will look good, they may show\n\t\t\t\t\ta good number of social media followers, or some \"influencer\" may recommend them (maybe not\n\t\t\t\t\teven knowing). But, if they ask for anything except your crypto address then treat them like\n\t\t\t\t\ta scammer to stay safe!</span\n\t\t\t\t>\n\t\t\t\t<br />\n\t\t\t\t<span class=\"block mt-2 text-base text-gray-900 justify-center relative\"\n\t\t\t\t\t><span class=\"font-bold\">IMPORTANT:</span> The {wordCount} words MUST be in the order above!\n\t\t\t\t\tDO NOT mix the order up if you need to enter them to recover your account!</span\n\t\t\t\t>\n\t\t\t\t<br />\n\t\t\t\t<span class=\"block mt-2 text-base text-gray-900 justify-center relative\"\n\t\t\t\t\t><span class=\"font-bold\">IMPORTANT:</span> To safely destroy this document, redact and shred\n\t\t\t\t\tor burn it!</span\n\t\t\t\t>\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<div class=\"w-full text-center\">\n\t\t\t\t\tYAKKL® Smart Wallet - Version {VERSION}\n\t\t\t\t\t{planType} - https://yakkl.com\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<!-- {:else}\n  <div class=\"hidden print:block\">\n    <div class=\"ml-1 mr-1 mb-[10rem] print:ml-0 print:mr-0 w-[1000px] bg-white overscroll-none overflow-scroll\">\n      <div id=\"printPDF\"> -->\n\n\t<!-- TBD - Need to look into bringing down logo, make larger, raise text -->\n\t<!-- <div class=\"items-center\"> -->\n\t<!-- svelte-ignore a11y_missing_attribute -->\n\t<!-- <img class=\"w-24 h-24 z-10 ml-5\" src=\"/images/logo128x128.png\">\n        </div>\n\n        <div class=\"w-full text-center\">\n          <h3 class=\"text-lg print:text-2xl font-medium leading-6 text-gray-900\">{network} - Account Secrets Emergency Kit</h3>\n          <br/>\n          <h4 class=\"block mt-1 text-sm print:text-lg text-gray-700\">This feature is only available with the Pro version.</h4>\n          <h4 class=\"block mt-1 text-sm print:hidden text-gray-700\">Upgrade to Pro for this and many other features!</h4>\n        </div>\n\n      </div>\n    </div>\n  </div>\n  {/if} -->\n\n\t<!-- {/if} -->\n{/await}\n"],"names":["async","createPortfolioAccount","yakklMiscStore","profile","yakklSettings","getSettings","yakklCurrentlySelected","getYakklCurrentlySelected","isEncryptedData","data","decryptData","then","result","currentlySelectedData","derivedPath","DEFAULT_DERIVED_PATH_ETH","chainId","shortcuts","preferences","accountName","isProfileData","isMetaData","meta","isString","index","accountIndex","entropy","ethersv6","randomBytes","randomMnemonic","Mnemonic","fromEntropy","ethWallet","HDNodeWallet","fromMnemonic","exists","table","addressExist","address","currentDate","dateString","accountData","extendedKey","privateKey","publicKey","publicKeyUncompressed","path","pathIndex","fingerPrint","fingerprint","parentFingerPrint","parentFingerprint","chainCode","assignedTo","yakklAccount","id","blockchain","smartContract","alias","accountType","AccountTypeCategory","PRIMARY","name","description","primaryAccount","quantity","class","level","isSigner","avatar","tags","includeInPortfolio","connectedDomains","version","VERSION","createDate","updateDate","yakklPrimaryAccountData","mnemonic","phrase","password","wordCount","split","length","wordListLocale","wordlist","locale","yakklPrimaryAccount","account","subIndex","subAccounts","yakklPrimaryAccountEnc","deepCopy","encryptData","Error","yakklPrimaryAccounts","getYakklPrimaryAccounts","push","primaryAccounts","yakklAccounts","getYakklAccounts","signMessage","sig","profileEnc","init","isLocked","currency","symbol","getSymbol","network","explorer","type","NetworkType","MAINNET","decimals","email","primary","persona","DEFAULT_PERSONA","setYakklAccountsStorage","setYakklPrimaryAccountsStorage","setSettingsStorage","setProfileStorage","setYakklCurrentlySelectedStorage","Promise","resolve","currentlySelected","e","log","error","reject","getMiscStore","registered","yakklRegisteredData","userName","passwordWarning","successDialog","pincode","displayDate","planType","PlanType","BASIC_MEMBER","warning","warningValue","errorValue","createAccount","getProfile","profileData","primaryAccountValues","primaryData","Date","sendNotificationMessage","catch","console","DEFAULT_TITLE","$$value","_"],"mappings":"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"}