{"version":3,"file":"_layout.svelte.js","sources":["../../../../../../src/lib/common/computeTokenValue.ts","../../../../../../src/lib/common/shared/BrowserAccessor.ts","../../../../../../src/lib/components/Share.svelte","../../../../../../src/lib/components/ImageBar.svelte","../../../../../../src/lib/common/token-analytics.ts","../../../../../../src/lib/components/OffcanvasMainMenu.svelte","../../../../../../src/lib/components/Avatar.svelte","../../../../../../src/lib/components/Profile.svelte","../../../../../../src/lib/components/Settings.svelte","../../../../../../src/lib/components/Watcher.svelte","../../../../../../src/lib/components/WatchList.svelte","../../../../../../src/lib/components/OffcanvasProfileMenu.svelte","../../../../../../src/lib/components/Header.svelte","../../../../../../src/lib/api/api-gpt.ts","../../../../../../src/lib/components/Chatbot.svelte","../../../../../../src/lib/components/ChatbotModal.svelte","../../../../../../src/lib/components/Buy.svelte","../../../../../../src/lib/components/Footer.svelte","../../../../../../src/lib/components/InAppNotifications.svelte","../../../../../../src/lib/components/TokenForm.svelte","../../../../../../src/lib/components/TokenListEnhanced.svelte","../../../../../../src/lib/components/TokensEnhanced.svelte","../../../../../../src/lib/common/stores/tokenTotals.ts","../../../../../../src/lib/components/icons/TokensIcon.svelte","../../../../../../src/lib/components/PortfolioTotal.svelte","../../../../../../src/lib/components/Card.svelte","../../../../../../src/routes/(wallet)/+layout.svelte"],"sourcesContent":["import type { TokenData } from './interfaces';\n\n/**\n * Computes the balance and value of a token.\n * @param token The token data object\n * @returns { balance: number, value: number }\n */\n\nexport function computeTokenValue(token: TokenData): { balance: number; value: number } {\n\tlet balance = token?.balance ? Number(token.balance) : 0; // Direct conversion\n\n\tconst price = token?.price?.price ?? 0;\n\tconst value = balance * price;\n\n\treturn { balance, value };\n}\n","// $lib/shared/BrowserAccessor.ts\nimport type { Runtime, Tabs, Alarms } from 'webextension-polyfill';\nimport { log } from '$lib/managers/Logger';\nimport type { ExtendedBrowser } from '../types/browser-extensions';\nimport { browser_ext } from '../environment';\n\n// Interfaces for local use (to avoid namespace issues)\ninterface ChromeRuntimeConnectInfo {\n\tname?: string;\n}\n// Chrome types are now imported automatically from the .d.ts file\n\n/**\n * Describes the execution context of the extension\n */\nexport enum ExtensionContext {\n\tUNKNOWN = 'unknown',\n\tBACKGROUND = 'background',\n\tPOPUP = 'popup',\n\tCONTENT_SCRIPT = 'content_script',\n\tOPTIONS = 'options',\n\tDEVTOOLS = 'devtools',\n\tSIDEPANEL = 'sidepanel'\n}\n\n/**\n * A robust utility class for accessing browser extension APIs\n * across different contexts (background, popup, etc.)\n */\nexport class BrowserAccessor {\n\tprivate static instance: BrowserAccessor;\n\tprivate browserApi: ExtendedBrowser | null = null;\n\tprivate currentContext: ExtensionContext = ExtensionContext.UNKNOWN;\n\tprivate initialized = false;\n\tprivate initPromise: Promise<ExtendedBrowser | null> | null = null;\n\t/**\n\t * Private constructor - use getInstance()\n\t */\n\tprivate constructor() {\n\t\t// Intentionally empty - initialization happens on demand\n\t}\n\n\t/**\n\t * Get the singleton instance\n\t */\n\tpublic static getInstance(): BrowserAccessor {\n\t\tif (!BrowserAccessor.instance) {\n\t\t\tBrowserAccessor.instance = new BrowserAccessor();\n\t\t}\n\t\treturn BrowserAccessor.instance;\n\t}\n\n\t/**\n\t * Check if we're in a service worker context\n\t */\n\tprivate isInServiceWorker(): boolean {\n\t\ttry {\n\t\t\t// Check if the ServiceWorkerGlobalScope exists\n\t\t\treturn (\n\t\t\t\ttypeof self !== 'undefined' &&\n\t\t\t\ttypeof (self as any).ServiceWorkerGlobalScope !== 'undefined' &&\n\t\t\t\tself instanceof (self as any).ServiceWorkerGlobalScope\n\t\t\t);\n\t\t} catch (error) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Check if Chrome APIs are available\n\t */\n\tprivate hasChromeApis(): boolean {\n\t\treturn typeof chrome !== 'undefined' && !!chrome && !!chrome.runtime;\n\t}\n\n\t/**\n\t * Detect which extension context we're running in\n\t */\n\tprivate async detectContext(): Promise<ExtensionContext> {\n\t\t// Skip if not in a browser\n\t\tif (typeof window === 'undefined' && typeof self === 'undefined') {\n\t\t\treturn ExtensionContext.UNKNOWN;\n\t\t}\n\n\t\ttry {\n\t\t\t// Check for background context - service worker\n\t\t\tconst isServiceWorker = this.isInServiceWorker();\n\n\t\t\t// Check for extension APIs\n\t\t\tconst hasExtensionApi = this.hasChromeApis();\n\n\t\t\t// For UI contexts we need to check window\n\t\t\tconst isWindow = typeof window !== 'undefined';\n\n\t\t\t// Check specific UI contexts if window exists\n\t\t\tconst isPopup =\n\t\t\t\tisWindow &&\n\t\t\t\t(window.location.pathname.includes('popup.html') ||\n\t\t\t\t\tdocument.body?.dataset.context === 'popup');\n\n\t\t\tconst isOptions =\n\t\t\t\tisWindow &&\n\t\t\t\t(window.location.pathname.includes('options.html') ||\n\t\t\t\t\tdocument.body?.dataset.context === 'options');\n\n\t\t\tconst hasDevtools =\n\t\t\t\ttypeof chrome !== 'undefined' && typeof (chrome as any).devtools !== 'undefined';\n\n\t\t\t// Content scripts run in web pages\n\t\t\tconst isContentScript =\n\t\t\t\tisWindow && hasExtensionApi && window.location.protocol.startsWith('http');\n\n\t\t\tif ((await this.resolveExecutionContext()) === 'sidepanel') {\n\t\t\t\treturn ExtensionContext.SIDEPANEL;\n\t\t\t}\n\n\t\t\tif (isServiceWorker && hasExtensionApi) {\n\t\t\t\treturn ExtensionContext.BACKGROUND;\n\t\t\t} else if (isPopup) {\n\t\t\t\treturn ExtensionContext.POPUP;\n\t\t\t} else if (isOptions) {\n\t\t\t\treturn ExtensionContext.OPTIONS;\n\t\t\t} else if (hasDevtools) {\n\t\t\t\treturn ExtensionContext.DEVTOOLS;\n\t\t\t} else if (isContentScript) {\n\t\t\t\treturn ExtensionContext.CONTENT_SCRIPT;\n\t\t\t} else if (hasExtensionApi) {\n\t\t\t\t// If we can't specifically identify, but have extension APIs\n\t\t\t\treturn ExtensionContext.POPUP; // Default to popup for UI contexts\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tlog.error('Error detecting context:', false, error);\n\t\t}\n\n\t\treturn ExtensionContext.UNKNOWN;\n\t}\n\n\tasync resolveExecutionContext(): Promise<'popup' | 'sidepanel'> {\n\t\ttry {\n\t\t\tconst win = await browser_ext.windows.getCurrent();\n\t\t\tif (!win || !win.type) {\n\t\t\t\treturn import.meta.env.VITE_YAKKL_TYPE;\n\t\t\t}\n\n\t\t\tif (win.type === 'popup') return 'popup';\n\t\t\tif (win.type === 'normal') return 'sidepanel';\n\n\t\t\treturn import.meta.env.VITE_YAKKL_TYPE;\n\t\t} catch (err) {\n\t\t\tconsole.warn('Error resolving execution context:', err);\n\t\t\treturn import.meta.env.VITE_YAKKL_TYPE;\n\t\t}\n\t}\n\n\t/**\n\t * Initialize the browser API - respects the context it's running in\n\t * Returns a promise that resolves to the browser API or null\n\t */\n\tpublic async initialize(): Promise<ExtendedBrowser | null> {\n\t\t// Return existing result if already initialized\n\t\tif (this.initialized) {\n\t\t\treturn this.browserApi;\n\t\t}\n\n\t\t// Return existing promise if already initializing\n\t\tif (this.initPromise) {\n\t\t\treturn this.initPromise;\n\t\t}\n\n\t\t// Skip if not in a browser\n\t\tif (typeof window === 'undefined' && typeof self === 'undefined') {\n\t\t\tthis.initialized = true;\n\t\t\treturn null;\n\t\t}\n\n\t\t// Create a single initialization promise\n\t\tthis.initPromise = (async () => {\n\t\t\ttry {\n\t\t\t\t// Detect which context we're in\n\t\t\t\tthis.currentContext = await this.detectContext();\n\t\t\t\tlog.info(`Initializing browser API in ${this.currentContext} context`);\n\n\t\t\t\t// Try to get browser API based on context\n\t\t\t\tif (this.currentContext !== ExtensionContext.UNKNOWN) {\n\t\t\t\t\t// First try global browser (from script tag)\n\t\t\t\t\tif (typeof window !== 'undefined' && (window as any).browser) {\n\t\t\t\t\t\tthis.browserApi = (window as any).browser as ExtendedBrowser;\n\t\t\t\t\t\tlog.info('Using global browser API from window.browser');\n\t\t\t\t\t}\n\t\t\t\t\t// Then try chrome namespace with polyfill\n\t\t\t\t\telse if (this.hasChromeApis()) {\n\t\t\t\t\t\t// In background context, we need to be careful with the polyfill\n\t\t\t\t\t\tif (this.currentContext === ExtensionContext.BACKGROUND) {\n\t\t\t\t\t\t\t// In background context, we can directly import\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tlog.info('Loaded browser API via dynamic import in background');\n\t\t\t\t\t\t\t\tconst polyfill = await import('webextension-polyfill');\n\t\t\t\t\t\t\t\tthis.browserApi = polyfill.default as ExtendedBrowser;\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\tlog.error('Failed to import polyfill in background:', false, e);\n\t\t\t\t\t\t\t\t// Fallback to chrome APIs if needed\n\t\t\t\t\t\t\t\tthis.browserApi = this.createChromeShim();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// For UI contexts, use the global or chrome\n\t\t\t\t\t\t\tthis.browserApi = (window as any).browser || this.createChromeShim();\n\t\t\t\t\t\t\tlog.info('Using global browser API or chrome shim');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!this.browserApi) {\n\t\t\t\t\tlog.warn(`No browser API available in ${this.currentContext} context`);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tlog.error('Failed to initialize browser API:', false, error);\n\t\t\t\tthis.browserApi = null;\n\t\t\t} finally {\n\t\t\t\tthis.initialized = true;\n\t\t\t\tthis.initPromise = null;\n\t\t\t}\n\n\t\t\treturn this.browserApi;\n\t\t})();\n\n\t\treturn this.initPromise;\n\t}\n\n\t/**\n\t * Get the browser API instance with lazy initialization\n\t */\n\tpublic async getBrowser(): Promise<ExtendedBrowser | null> {\n\t\tif (!this.initialized && !this.initPromise) {\n\t\t\tawait this.initialize();\n\t\t}\n\t\treturn this.browserApi;\n\t}\n\n\t/**\n\t * Get the browser API synchronously - may return null if not initialized\n\t * Consider using getBrowser() for more reliable access\n\t */\n\tpublic getBrowserSync(): ExtendedBrowser | null {\n\t\tif (!this.initialized && !this.initPromise) {\n\t\t\t// Start initialization but don't wait for it\n\t\t\tthis.initialize().catch((e) => {\n\t\t\t\tlog.error('Async initialization failed:', false, e);\n\t\t\t});\n\t\t}\n\t\treturn this.browserApi;\n\t}\n\n\t/**\n\t * Get the current extension context\n\t */\n\tpublic async getContext(): Promise<ExtensionContext> {\n\t\tif (this.currentContext === ExtensionContext.UNKNOWN) {\n\t\t\tthis.currentContext = await this.detectContext();\n\t\t}\n\t\treturn this.currentContext;\n\t}\n\n\t/**\n\t * Set the browser API explicitly (useful for testing or special contexts)\n\t */\n\tpublic setBrowser(browser: ExtendedBrowser): void {\n\t\tthis.browserApi = browser;\n\t\tthis.initialized = true;\n\t}\n\n\t/**\n\t * Check if a specific Chrome API is available\n\t */\n\tpublic hasChromeApi(apiName: string): boolean {\n\t\tif (!this.hasChromeApis()) return false;\n\n\t\tswitch (apiName) {\n\t\t\tcase 'sidePanel':\n\t\t\t\treturn typeof (chrome as any).sidePanel !== 'undefined';\n\t\t\tcase 'tabs':\n\t\t\t\treturn typeof (chrome as any).tabs !== 'undefined';\n\t\t\tcase 'alarms':\n\t\t\t\treturn typeof (chrome as any).alarms !== 'undefined';\n\t\t\tcase 'idle':\n\t\t\t\treturn typeof (chrome as any).idle !== 'undefined';\n\t\t\tcase 'notifications':\n\t\t\t\treturn typeof (chrome as any).notifications !== 'undefined';\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Perform a browser API operation safely with proper typing\n\t */\n\tpublic async performOperation<T>(\n\t\toperation: (browser: ExtendedBrowser) => Promise<T> | T,\n\t\tfallback: T\n\t): Promise<T> {\n\t\tconst browser = await this.getBrowser();\n\n\t\tif (!browser) {\n\t\t\treturn fallback;\n\t\t}\n\n\t\ttry {\n\t\t\treturn await operation(browser);\n\t\t} catch (error) {\n\t\t\tlog.error('Browser operation failed:', false, error);\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\t/**\n\t * Create a chrome API shim that mimics the browser API\n\t * This is a fallback when the polyfill isn't available\n\t */\n\tprivate createChromeShim(): ExtendedBrowser {\n\t\tif (!this.hasChromeApis()) {\n\t\t\tlog.warn('Chrome APIs not available for creating shim');\n\t\t\treturn {} as ExtendedBrowser;\n\t\t}\n\n\t\t// Create an empty object to serve as our browser implementation\n\t\tconst browser = {} as any;\n\n\t\t// Add runtime API if available\n\t\tif (chrome?.runtime) {\n\t\t\tbrowser.runtime = {\n\t\t\t\tsendMessage: (message: any): Promise<any> => {\n\t\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\tchrome.runtime.sendMessage(message, (response: any) => {\n\t\t\t\t\t\t\tif (chrome.runtime.lastError) {\n\t\t\t\t\t\t\t\treject(chrome.runtime.lastError);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tconnect: (connectInfo?: any): Runtime.Port => {\n\t\t\t\t\tconst port = chrome.runtime.connect(connectInfo as any);\n\t\t\t\t\treturn port as unknown as Runtime.Port;\n\t\t\t\t}\n\t\t\t\t// Add other runtime methods as needed\n\t\t\t};\n\n\t\t\t// Add event listeners\n\t\t\t// if (chrome.runtime.onMessage) {\n\t\t\t//   browser.runtime.onMessage = {\n\t\t\t//     addListener: chrome.runtime.onMessage.addListener.bind(chrome.runtime.onMessage),\n\t\t\t//     removeListener: chrome.runtime.onMessage.removeListener.bind(chrome.runtime.onMessage),\n\t\t\t//     hasListener: chrome.runtime.onMessage.hasListener.bind(chrome.runtime.onMessage)\n\t\t\t//   };\n\t\t\t// }\n\t\t}\n\n\t\t// Add storage API if available\n\t\tif (chrome?.storage) {\n\t\t\tbrowser.storage = {\n\t\t\t\tlocal: {\n\t\t\t\t\tget: (\n\t\t\t\t\t\tkeys: string | string[] | Record<string, any> | null\n\t\t\t\t\t): Promise<Record<string, any>> => {\n\t\t\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\t\tchrome.storage.local.get(keys as any, (result: { [key: string]: any }) => {\n\t\t\t\t\t\t\t\tif (chrome.runtime.lastError) {\n\t\t\t\t\t\t\t\t\treject(chrome.runtime.lastError);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tset: (items: Record<string, any>): Promise<void> => {\n\t\t\t\t\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\t\t\t\t\tchrome.storage.local.set(items, () => {\n\t\t\t\t\t\t\t\tif (chrome.runtime.lastError) {\n\t\t\t\t\t\t\t\t\treject(chrome.runtime.lastError);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tremove: (keys: string | string[]): Promise<void> => {\n\t\t\t\t\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\t\t\t\t\tchrome.storage.local.remove(keys, () => {\n\t\t\t\t\t\t\t\tif (chrome.runtime.lastError) {\n\t\t\t\t\t\t\t\t\treject(chrome.runtime.lastError);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tclear: (): Promise<void> => {\n\t\t\t\t\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\t\t\t\t\tchrome.storage.local.clear(() => {\n\t\t\t\t\t\t\t\tif (chrome.runtime.lastError) {\n\t\t\t\t\t\t\t\t\treject(chrome.runtime.lastError);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t// Add sidePanel API if available\n\t\tif (chrome?.sidePanel) {\n\t\t\tbrowser.sidePanel = {\n\t\t\t\tsetPanelBehavior: (options: { openPanelOnActionClick: boolean }): Promise<void> => {\n\t\t\t\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tchrome.sidePanel.setPanelBehavior(options);\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\topen: (options: { tabId: number }): Promise<void> => {\n\t\t\t\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tchrome.sidePanel.open(options);\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t// Add tabs API if available\n\t\tif (chrome?.tabs) {\n\t\t\t// Create a minimal tabs implementation with the methods you actually use\n\t\t\tconst tabsImpl: Partial<Tabs.Static> = {\n\t\t\t\tquery: (queryInfo: any): Promise<Tabs.Tab[]> => {\n\t\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\tchrome.tabs.query(queryInfo, (tabs) => {\n\t\t\t\t\t\t\tif (chrome.runtime.lastError) {\n\t\t\t\t\t\t\t\treject(chrome.runtime.lastError);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresolve(tabs as unknown as Tabs.Tab[]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tget: (tabId: number): Promise<Tabs.Tab> => {\n\t\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\tchrome.tabs.get(tabId, (tab) => {\n\t\t\t\t\t\t\tif (chrome.runtime.lastError) {\n\t\t\t\t\t\t\t\treject(chrome.runtime.lastError);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresolve(tab as unknown as Tabs.Tab);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tgetCurrent: (): Promise<Tabs.Tab | undefined> => {\n\t\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\tchrome.tabs.getCurrent((tab) => {\n\t\t\t\t\t\t\tif (chrome.runtime.lastError) {\n\t\t\t\t\t\t\t\treject(chrome.runtime.lastError);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresolve(tab as unknown as Tabs.Tab);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// Add only the methods you actually use\n\t\t\t};\n\n\t\t\t// Add the implementation to the browser object\n\t\t\tbrowser.tabs = tabsImpl;\n\t\t}\n\n\t\t// Add alarms API if available\n\t\tif (chrome?.alarms) {\n\t\t\t// Create a minimal alarms implementation with the methods you actually use\n\t\t\tconst alarmsImpl: Partial<Alarms.Static> = {\n\t\t\t\t// Fix the create method to match both overloads\n\t\t\t\tcreate: function (\n\t\t\t\t\tnameOrInfo: string | Alarms.CreateAlarmInfoType,\n\t\t\t\t\tmaybeInfo?: Alarms.CreateAlarmInfoType\n\t\t\t\t): void {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (typeof nameOrInfo === 'string') {\n\t\t\t\t\t\t\t// First overload: create(name, alarmInfo)\n\t\t\t\t\t\t\tif (maybeInfo) {\n\t\t\t\t\t\t\t\tchrome.alarms.create(nameOrInfo, maybeInfo as any);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Chrome requires alarmInfo, even if empty\n\t\t\t\t\t\t\t\tchrome.alarms.create(nameOrInfo, {});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Second overload: create(alarmInfo)\n\t\t\t\t\t\t\t// Chrome requires name parameter, use empty string as default\n\t\t\t\t\t\t\tchrome.alarms.create('', nameOrInfo as any);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tlog.error('Error creating alarm:', false, error);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tclear: (name?: string): Promise<boolean> => {\n\t\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\tchrome.alarms.clear(name, (wasCleared) => {\n\t\t\t\t\t\t\tif (chrome.runtime.lastError) {\n\t\t\t\t\t\t\t\treject(chrome.runtime.lastError);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresolve(wasCleared);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t},\n\n\t\t\t\tclearAll: (): Promise<boolean> => {\n\t\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\tchrome.alarms.clearAll((wasCleared) => {\n\t\t\t\t\t\t\tif (chrome.runtime.lastError) {\n\t\t\t\t\t\t\t\treject(chrome.runtime.lastError);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresolve(wasCleared);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// Add only the methods you actually use\n\t\t\t};\n\n\t\t\t// Get alarm by name\n\t\t\tget: (name?: string): Promise<Alarms.Alarm | undefined> => {\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tif (!chrome?.alarms) {\n\t\t\t\t\t\treject(new Error('Chrome alarms API not available'));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tchrome.alarms.get(name, (alarm) => {\n\t\t\t\t\t\tif (chrome.runtime.lastError) {\n\t\t\t\t\t\t\treject(chrome.runtime.lastError);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresolve(alarm as unknown as Alarms.Alarm);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t// Get all alarms\n\t\t\tgetAll: (): Promise<Alarms.Alarm[]> => {\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tif (!chrome?.alarms) {\n\t\t\t\t\t\treject(new Error('Chrome alarms API not available'));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tchrome.alarms.getAll((alarms) => {\n\t\t\t\t\t\tif (chrome.runtime.lastError) {\n\t\t\t\t\t\t\treject(chrome.runtime.lastError);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresolve(alarms as unknown as Alarms.Alarm[]);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t// Create a stub for onAlarm if needed\n\t\t\tif (chrome.alarms.onAlarm) {\n\t\t\t\talarmsImpl.onAlarm = {\n\t\t\t\t\taddListener: (listener: (alarm: Alarms.Alarm) => void) => {\n\t\t\t\t\t\tchrome.alarms.onAlarm.addListener(listener as any);\n\t\t\t\t\t},\n\t\t\t\t\tremoveListener: (listener: (alarm: Alarms.Alarm) => void) => {\n\t\t\t\t\t\tchrome.alarms.onAlarm.removeListener(listener as any);\n\t\t\t\t\t},\n\t\t\t\t\thasListener: (listener: (alarm: Alarms.Alarm) => void) => {\n\t\t\t\t\t\treturn chrome.alarms.onAlarm.hasListener(listener as any);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Add the implementation to the browser object\n\t\t\tbrowser.alarms = alarmsImpl as Alarms.Static;\n\t\t}\n\n\t\t// Add other APIs as needed using the same pattern\n\n\t\tconst browser_ext = browser as ExtendedBrowser;\n\n\t\treturn browser_ext;\n\t}\n}\n","<script lang=\"ts\">\n\timport { log } from '$lib/managers/Logger';\n\timport { handleOpenInTab } from '$lib/utilities';\n\timport { Popover } from 'flowbite-svelte';\n\n\tinterface Props {\n\t\t[key: string]: any;\n\t}\n\n\tlet { ...rest }: Props = $props();\n\n\tasync function handleShare(event: MouseEvent): Promise<void> {\n\t\tevent.preventDefault(); // Modern way to prevent default\n\n\t\tconst target = event.currentTarget as HTMLElement;\n\t\tconst id = target?.dataset?.id;\n\n\t\tif (!id) {\n\t\t\tlog.error('No ID found');\n\t\t\treturn;\n\t\t}\n\n\t\tlet message: string;\n\t\tlet url: string = '';\n\n\t\tif (id === 'twitter') {\n\t\t\tmessage =\n\t\t\t\t'Spreading the love! @yakklcrypto YAKKL® Smart Wallet is awesome! Their website is: https://yakkl.com and you can download the Smart Wallet at the Chrome Browser Extension store: ';\n\t\t\turl = encodeURI(\n\t\t\t\t`https://twitter.com/intent/tweet?hashtags=crypto,yakkl,bitcoin,ethereum&via=yakklcrypto&original_referer=https://yakkl.com&ref_src=YAKKL&url=https://chrome.google.com/webstore/detail/dpmfhilhjlhhakpbieclcghochdofeao/&text=${message}`\n\t\t\t);\n\t\t} else if (id === 'linkedin') {\n\t\t\tmessage =\n\t\t\t\t\"Can't wait to share the love of YAKKL® Smart Wallet! Download the best Crypto Smart Wallet at (Google Chrome Store) https://chrome.google.com/webstore/detail/dpmfhilhjlhhakpbieclcghochdofeao/. The website is: https://yakkl.com.\";\n\t\t\turl = encodeURI(\n\t\t\t\t`https://www.linkedin.com/sharing/share-offsite?url=https://yakkl.com/?utm_source=linkedin&utm_medium=share&title=${message}`\n\t\t\t);\n\t\t}\n\n\t\tif (url) {\n\t\t\thandleOpenInTab(url);\n\t\t}\n\t}\n</script>\n\n<Popover\n\ttriggeredBy=\"#share\"\n\tplacement=\"bottom-start\"\n\tclass=\"w-[200px] text-sm font-normal text-gray-900 bg-white dark:text-gray-400 dark:border-gray-600 dark:bg-gray-800 z-100\"\n>\n\t<div class=\"p-1 block\">\n\t\t<div class=\"flex text-center justify-center m-2 ml-0 w-full\">\n\t\t\t<svg\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\tclass=\"w-6 h-6 fill-red-700 animate-pulse\"\n\t\t\t>\n\t\t\t\t<path\n\t\t\t\t\td=\"M11.645 20.91l-.007-.003-.022-.012a15.247 15.247 0 01-.383-.218 25.18 25.18 0 01-4.244-3.17C4.688 15.36 2.25 12.174 2.25 8.25 2.25 5.322 4.714 3 7.688 3A5.5 5.5 0 0112 5.052 5.5 5.5 0 0116.313 3c2.973 0 5.437 2.322 5.437 5.25 0 3.925-2.438 7.111-4.739 9.256a25.175 25.175 0 01-4.244 3.17 15.247 15.247 0 01-.383.219l-.022.012-.007.004-.003.001a.752.752 0 01-.704 0l-.003-.001z\"\n\t\t\t\t/>\n\t\t\t</svg>\n\t\t\t<p class=\"ml-1 text-sm font-bold text-center text-purple-600\">SHARE THE LOVE!</p>\n\t\t</div>\n\n\t\t<!-- Social Media Buttons -->\n\t\t<button\n\t\t\tid=\"twitter\"\n\t\t\tdata-id=\"twitter\"\n\t\t\tonclick={handleShare}\n\t\t\tclass=\"flex flex-row rounded-md ml-6 text-base font-semibold text-gray-900 dark:text-wwhite hover:bg-gray-200 w-full text-left\"\n\t\t>\n\t\t\t<svg\n\t\t\t\tviewBox=\"0 0 1200 1227\"\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\tclass=\"flex flex-col w-5 h-5 mt-[.1rem] mr-1 bg-black\"\n\t\t\t>\n\t\t\t\t<path\n\t\t\t\t\td=\"M714.163 519.284L1160.89 0H1055.03L667.137 450.887L357.328 0H0L468.492 681.821L0 1226.37H105.866L515.491 750.218L842.672 1226.37H1200L714.137 519.284H714.163ZM569.165 687.828L521.697 619.934L144.011 79.6944H306.615L611.412 515.685L658.88 583.579L1055.08 1150.3H892.476L569.165 687.854V687.828Z\"\n\t\t\t\t\tfill=\"white\"\n\t\t\t\t/>\n\t\t\t</svg>\n\t\t\t<span\n\t\t\t\tclass=\"ml-3 flex flex-col text-base font-semibold text-gray-900 dark:text-base-content hover:text-slate-600 dark:hover:text-gray-900\"\n\t\t\t\t>X (twitter)</span\n\t\t\t>\n\t\t</button>\n\n\t\t<button\n\t\t\tid=\"linkedin\"\n\t\t\tdata-id=\"linkedin\"\n\t\t\tonclick={handleShare}\n\t\t\tclass=\"my-1 flex flex-row rounded-md ml-6 text-base font-semibold text-gray-900 dark:text-white hover:bg-gray-200 w-full text-left\"\n\t\t>\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" class=\"flex flex-col w-6 h-6\">\n\t\t\t\t<path\n\t\t\t\t\td=\"M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z\"\n\t\t\t\t/>\n\t\t\t</svg>\n\t\t\t<span\n\t\t\t\tclass=\"ml-3 flex flex-col text-base font-semibold text-gray-900 dark:text-base-content hover:text-slate-600 dark:hover:text-gray-900\"\n\t\t\t\t>LinkedIn</span\n\t\t\t>\n\t\t</button>\n\t</div>\n</Popover>\n\n<!-- Share Button -->\n<!-- svelte-ignore a11y_consider_explicit_label -->\n<button\n\tid=\"share\"\n\tonclick={handleShare}\n\t{...rest}\n\tclass=\"bg-transparent border-none p-0 cursor-pointer\"\n>\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"currentColor\"\n\t\tclass=\"w-7 h-7 fill-gray-100 hover:fill-gray-400\"\n\t>\n\t\t<path\n\t\t\tfill-rule=\"evenodd\"\n\t\t\td=\"M15.75 4.5a3 3 0 11.825 2.066l-8.421 4.679a3.002 3.002 0 010 1.51l8.421 4.679a3 3 0 11-.729 1.31l-8.421-4.678a3 3 0 110-4.132l8.421-4.679a3 3 0 01-.096-.755z\"\n\t\t\tclip-rule=\"evenodd\"\n\t\t/>\n\t</svg>\n\t<!-- <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-7 h-7 fill-gray-100 hover:fill-gray-400\">\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5m-13.5-9L12 3m0 0 4.5 4.5M12 3v13.5\" />\n  </svg> -->\n</button>\n","<script lang=\"ts\">\n\tinterface Props {\n\t\tchildren?: import('svelte').Snippet;\n\t}\n\n\tlet { children }: Props = $props();\n</script>\n\n<!-- inset-x-0 -->\n<!-- 40px is small bar and 100px is for larger view -->\n<div\n\tid=\"imgHeader\"\n\tclass=\"visible print:hidden relative top-0 h-[65px] bg-cover bg-[url('/images/background_gradient_2.png')] mx-2 mt-2 rounded-lg\"\n>\n\t{@render children?.()}\n</div>\n","// token-analytics.ts - Basic vs Pro token data interfaces and utilities\n\nimport type { TokenData } from './interfaces';\n\nexport interface BasicTokenAnalytics {\n\tsymbol: string;\n\tbalance: string | bigint;\n\tcurrentPrice: number;\n\tvalue: number;\n\tname: string;\n\taddress: string;\n\tdecimals: number;\n\tlogoURI?: string;\n}\n\nexport interface ProTokenAnalytics extends BasicTokenAnalytics {\n\tpriceChange24h: number;\n\tpriceChange7d: number;\n\tpriceChange30d: number;\n\tsparkline: number[];\n\tmarketCap: number;\n\tvolume24h: number;\n\tcirculatingSupply: number;\n\ttotalSupply: number;\n\tcustomAlerts: TokenAlert[];\n\tyieldOpportunities: YieldOpportunity[];\n\triskScore: number;\n\tliquidityScore: number;\n\ttaxImplications: TaxInfo;\n\tsocialSentiment: SocialSentiment;\n\ttechnicalIndicators: TechnicalIndicators;\n\tcorrelations: TokenCorrelation[];\n}\n\nexport interface TokenAlert {\n\tid: string;\n\ttype: 'price_above' | 'price_below' | 'volume_spike' | 'market_cap_change';\n\tvalue: number;\n\tisActive: boolean;\n\tcreatedAt: string;\n}\n\nexport interface YieldOpportunity {\n\tprotocol: string;\n\tapy: number;\n\ttvl: number;\n\triskLevel: 'low' | 'medium' | 'high';\n\tdescription: string;\n}\n\nexport interface TaxInfo {\n\tcostBasis?: number;\n\tunrealizedGainLoss?: number;\n\tholdingPeriod?: number;\n\ttaxLot?: TaxLot[];\n}\n\nexport interface TaxLot {\n\tpurchaseDate: string;\n\tamount: number;\n\tprice: number;\n\tcostBasis: number;\n}\n\nexport interface SocialSentiment {\n\tscore: number; // -1 to 1\n\tmentions24h: number;\n\ttrendingScore: number;\n\tnewsEvents: NewsEvent[];\n}\n\nexport interface NewsEvent {\n\ttitle: string;\n\tsummary: string;\n\tsentiment: 'positive' | 'negative' | 'neutral';\n\tsource: string;\n\tpublishedAt: string;\n}\n\nexport interface TechnicalIndicators {\n\trsi: number;\n\tmacd: {\n\t\tsignal: number;\n\t\thistogram: number;\n\t\tmacd: number;\n\t};\n\tmovingAverages: {\n\t\tma7: number;\n\t\tma25: number;\n\t\tma50: number;\n\t\tma200: number;\n\t};\n\tsupport: number[];\n\tresistance: number[];\n}\n\nexport interface TokenCorrelation {\n\tsymbol: string;\n\tcorrelation: number; // -1 to 1\n\ttimeframe: '24h' | '7d' | '30d';\n}\n\nexport interface FeatureDifferentiation {\n\tbasic: {\n\t\ttokenVisibility: 'all';\n\t\tpriceUpdates: '5min_auto';\n\t\tanalytics: 'basic_only';\n\t\tswapFees: 'standard';\n\t\tportfolioRefresh: 'manual';\n\t};\n\tpro: {\n\t\ttokenVisibility: 'all';\n\t\tpriceUpdates: 'real_time';\n\t\tanalytics: 'full_suite';\n\t\tswapFees: 'optimized';\n\t\tportfolioRefresh: 'auto_and_manual';\n\t\tmevProtection: true;\n\t\tbatchOperations: true;\n\t\tcustomGrouping: true;\n\t\tmultiCurrency: true;\n\t\tadvancedCharts: true;\n\t\tyieldFarming: true;\n\t\ttaxReporting: true;\n\t\tpriceAlerts: true;\n\t\tsocialSentiment: true;\n\t\triskAnalytics: true;\n\t};\n}\n\n/**\n * Transforms a basic TokenData to BasicTokenAnalytics\n */\nexport function toBasicAnalytics(token: TokenData): BasicTokenAnalytics {\n\treturn {\n\t\tsymbol: token.symbol,\n\t\tbalance: token.balance.toString() || '0',\n\t\tcurrentPrice: token.price?.price || 0,\n\t\tvalue: calculateTokenValue(token),\n\t\tname: token.name,\n\t\taddress: token.address,\n\t\tdecimals: token.decimals || 18,\n\t\tlogoURI: token.logoURI\n\t};\n}\n\n/**\n * Transforms a TokenData to ProTokenAnalytics (with mock enhanced data for demo)\n */\nexport function toProAnalytics(token: TokenData): ProTokenAnalytics {\n\tconst basic = toBasicAnalytics(token);\n\n\t// In a real implementation, this data would come from various APIs\n\treturn {\n\t\t...basic,\n\t\tpriceChange24h: generateMockPriceChange(),\n\t\tpriceChange7d: generateMockPriceChange(),\n\t\tpriceChange30d: generateMockPriceChange(),\n\t\tsparkline: generateMockSparkline(),\n\t\tmarketCap: generateMockMarketCap(),\n\t\tvolume24h: generateMockVolume(),\n\t\tcirculatingSupply: 1000000000,\n\t\ttotalSupply: 1000000000,\n\t\tcustomAlerts: [],\n\t\tyieldOpportunities: generateMockYieldOps(),\n\t\triskScore: Math.random() * 10,\n\t\tliquidityScore: Math.random() * 10,\n\t\ttaxImplications: {},\n\t\tsocialSentiment: generateMockSentiment(),\n\t\ttechnicalIndicators: generateMockTechnicals(),\n\t\tcorrelations: generateMockCorrelations()\n\t};\n}\n\n/**\n * Calculates the USD value of a token holding\n */\nexport function calculateTokenValue(token: TokenData): number {\n\tif (!token.balance || !token.price?.price) return 0;\n\n\tlet balanceNum: number;\n\tif (typeof token.balance === 'bigint') {\n\t\tbalanceNum = Number(token.balance) / Math.pow(10, token.decimals || 18);\n\t} else {\n\t\tbalanceNum = Number(token.balance);\n\t}\n\n\treturn balanceNum * token.price.price;\n}\n\n/**\n * Determines if a user should see Pro features\n */\nexport function shouldShowProFeatures(userPlan: string): boolean {\n\treturn userPlan !== 'basic_member';\n}\n\n// Mock data generators for demo purposes\nfunction generateMockPriceChange(): number {\n\treturn (Math.random() - 0.5) * 20; // -10% to +10%\n}\n\nfunction generateMockSparkline(): number[] {\n\tconst points = [];\n\tlet current = 100;\n\tfor (let i = 0; i < 24; i++) {\n\t\tcurrent += (Math.random() - 0.5) * 5;\n\t\tpoints.push(current);\n\t}\n\treturn points;\n}\n\nfunction generateMockMarketCap(): number {\n\treturn Math.random() * 10000000000; // Up to 10B\n}\n\nfunction generateMockVolume(): number {\n\treturn Math.random() * 1000000000; // Up to 1B\n}\n\nfunction generateMockYieldOps(): YieldOpportunity[] {\n\treturn [\n\t\t{\n\t\t\tprotocol: 'Compound',\n\t\t\tapy: 5.2,\n\t\t\ttvl: 1000000,\n\t\t\triskLevel: 'low',\n\t\t\tdescription: 'Supply tokens to earn interest'\n\t\t},\n\t\t{\n\t\t\tprotocol: 'Uniswap V3',\n\t\t\tapy: 12.8,\n\t\t\ttvl: 500000,\n\t\t\triskLevel: 'medium',\n\t\t\tdescription: 'Provide liquidity in concentrated range'\n\t\t}\n\t];\n}\n\nfunction generateMockSentiment(): SocialSentiment {\n\treturn {\n\t\tscore: (Math.random() - 0.5) * 2,\n\t\tmentions24h: Math.floor(Math.random() * 1000),\n\t\ttrendingScore: Math.random() * 100,\n\t\tnewsEvents: []\n\t};\n}\n\nfunction generateMockTechnicals(): TechnicalIndicators {\n\treturn {\n\t\trsi: Math.random() * 100,\n\t\tmacd: {\n\t\t\tsignal: Math.random() * 2 - 1,\n\t\t\thistogram: Math.random() * 2 - 1,\n\t\t\tmacd: Math.random() * 2 - 1\n\t\t},\n\t\tmovingAverages: {\n\t\t\tma7: Math.random() * 1000,\n\t\t\tma25: Math.random() * 1000,\n\t\t\tma50: Math.random() * 1000,\n\t\t\tma200: Math.random() * 1000\n\t\t},\n\t\tsupport: [Math.random() * 1000, Math.random() * 800],\n\t\tresistance: [Math.random() * 1200, Math.random() * 1500]\n\t};\n}\n\nfunction generateMockCorrelations(): TokenCorrelation[] {\n\treturn [\n\t\t{ symbol: 'ETH', correlation: 0.8, timeframe: '30d' },\n\t\t{ symbol: 'BTC', correlation: 0.6, timeframe: '30d' }\n\t];\n}\n","<script lang=\"ts\">\n\timport { goto } from '$app/navigation';\n\timport { PATH_LOGOUT } from '$lib/common';\n\timport {\n\t\tshowEmergencyKit,\n\t\tshowEmergencyKitExport,\n\t\tshowEmergencyKitImport\n\t} from '$lib/common/stores/ui';\n\timport { onMount, onDestroy } from 'svelte';\n\timport { getSettings } from '$lib/common/stores';\n\timport { shouldShowProFeatures } from '$lib/common/token-analytics';\n\timport { PlanType } from '$lib/common/types';\n\timport type { Settings } from '$lib/common/interfaces';\n\timport SimpleTooltip from './SimpleTooltip.svelte';\n\n\tlet settings: Settings | null = $state(null);\n\tlet isProUser = $state(false);\n\tlet offcanvasElement: HTMLElement;\n\tlet isHoveringMenu = $state(false);\n\tlet hoverTimeout: number | null = null;\n\n\tonMount(async () => {\n\t\tsettings = await getSettings();\n\t\tisProUser = shouldShowProFeatures(settings?.plan?.type || PlanType.BASIC_MEMBER);\n\t\t\n\t\t// Add click outside listener (browser only)\n\t\tif (typeof window !== 'undefined') {\n\t\t\tsetupClickOutsideListener();\n\t\t}\n\t});\n\n\tonDestroy(() => {\n\t\t// Cleanup event listeners (browser only)\n\t\tif (typeof window !== 'undefined' && typeof document !== 'undefined') {\n\t\t\tdocument.removeEventListener('click', handleClickOutside);\n\t\t}\n\t\t// Cleanup hover timeout\n\t\tif (hoverTimeout) {\n\t\t\tclearTimeout(hoverTimeout);\n\t\t}\n\t});\n\n\tfunction setupClickOutsideListener() {\n\t\tif (typeof document !== 'undefined') {\n\t\t\tdocument.addEventListener('click', handleClickOutside);\n\t\t}\n\t}\n\n\tfunction handleClickOutside(event: MouseEvent) {\n\t\tif (!offcanvasElement) return;\n\t\t\n\t\tconst target = event.target as HTMLElement;\n\t\tconst isOffcanvasVisible = offcanvasElement.classList.contains('show');\n\t\t\n\t\t// Check if click is outside the offcanvas and not on a trigger button\n\t\tconst isClickOutside = !offcanvasElement.contains(target);\n\t\tconst isNotTrigger = !target.closest('[data-bs-toggle=\"offcanvas\"][data-bs-target=\"#offcanvasMainMenu\"]');\n\t\t\n\t\tif (isOffcanvasVisible && isClickOutside && isNotTrigger) {\n\t\t\tcloseOffcanvas();\n\t\t}\n\t}\n\n\tfunction closeOffcanvas() {\n\t\tif (typeof window !== 'undefined' && window.bootstrap) {\n\t\t\tconst offcanvasInstance = window.bootstrap.Offcanvas.getInstance(offcanvasElement);\n\t\t\tif (offcanvasInstance) {\n\t\t\t\toffcanvasInstance.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleMenuMouseEnter() {\n\t\tisHoveringMenu = true;\n\t\tif (hoverTimeout) {\n\t\t\tclearTimeout(hoverTimeout);\n\t\t\thoverTimeout = null;\n\t\t}\n\t}\n\n\tfunction handleMenuMouseLeave() {\n\t\tisHoveringMenu = false;\n\t\t// Start timeout to close menu when mouse leaves\n\t\thoverTimeout = setTimeout(() => {\n\t\t\tcloseOffcanvas();\n\t\t}, 500) as unknown as number; // 500ms delay when leaving menu\n\t}\n\n\tfunction handleLogout() {\n\t\tgoto(PATH_LOGOUT);\n\t}\n\n\tfunction openExportKit() {\n\t\tif (!isProUser) return;\n\t\tshowEmergencyKitExport.set(true);\n\t\tshowEmergencyKitImport.set(false);\n\t\tshowEmergencyKit.set(true);\n\t}\n\n\tfunction openImportKit() {\n\t\tif (!isProUser) return;\n\t\tshowEmergencyKitExport.set(false);\n\t\tshowEmergencyKitImport.set(true);\n\t\tshowEmergencyKit.set(true);\n\t}\n</script>\n\n<div\n\tbind:this={offcanvasElement}\n\tclass=\"z-100 offcanvas offcanvas-start top-0 left-0 fixed bottom-auto flex flex-col min-w-[200px] max-w-[280px] font-sans antialiased invisible bg-clip-padding shadow-sm outline-none transition duration-300 ease-in-out border-none rounded-r-md bg-primary text-base-content\"\n\ttabindex=\"-1\"\n\tid=\"offcanvasMainMenu\"\n\taria-labelledby=\"offcanvasMainMenuLabel\"\n\trole=\"dialog\"\n\taria-modal=\"true\"\n\tonmouseenter={handleMenuMouseEnter}\n\tonmouseleave={handleMenuMouseLeave}\n>\n\t<!-- Header -->\n\t<div class=\"offcanvas-header flex items-center justify-between px-4 pt-2 pb-2 bg-primary-200\">\n\t\t<h5 class=\"offcanvas-title font-semibold\" id=\"offcanvasMainMenuLabel\">Menu</h5>\n\t\t<button\n\t\t\ttype=\"button\"\n\t\t\tclass=\"text-base-content opacity-60 hover:opacity-100\"\n\t\t\tdata-bs-dismiss=\"offcanvas\"\n\t\t\taria-label=\"Close\"\n\t\t>\n\t\t\t<svg\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\tclass=\"w-5 h-5\"\n\t\t\t\tfill=\"none\"\n\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\tstroke=\"currentColor\"\n\t\t\t\tstroke-width=\"2\"\n\t\t\t>\n\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n\t\t\t</svg>\n\t\t</button>\n\t</div>\n\n\t<hr class=\"my-1 border-base-content/20\" />\n\n\t<!-- Menu Items -->\n\t<ul class=\"px-2 space-y-1\">\n\t\t<li data-bs-dismiss={isProUser ? \"offcanvas\" : \"\"}>\n\t\t\t{#if isProUser}\n\t\t\t\t<button\n\t\t\t\t\tonclick={openExportKit}\n\t\t\t\t\tclass=\"w-full text-left px-4 py-2 rounded-md text-sm hover:bg-primary-100 transition flex items-center gap-2\"\n\t\t\t\t>\n\t\t\t\t\t<svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t<path d=\"M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4M12,6A6,6 0 0,0 6,12A6,6 0 0,0 12,18A6,6 0 0,0 18,12A6,6 0 0,0 12,6M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8Z\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t\tExport Emergency Kit\n\t\t\t\t</button>\n\t\t\t{:else}\n\t\t\t\t<SimpleTooltip content=\"Upgrade to Pro for full Emergency Kit features\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tdisabled\n\t\t\t\t\t\tclass=\"w-full text-left px-4 py-2 rounded-md text-sm text-gray-400 cursor-not-allowed flex items-center gap-2\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t<path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t\tExport Emergency Kit\n\t\t\t\t\t\t<div class=\"w-3 h-3 bg-gradient-to-r from-indigo-400 to-purple-400 rounded-full flex items-center justify-center ml-auto\">\n\t\t\t\t\t\t\t<svg class=\"w-2 h-2 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n\t\t\t\t\t\t\t\t<path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</button>\n\t\t\t\t</SimpleTooltip>\n\t\t\t{/if}\n\t\t</li>\n\t\t<li data-bs-dismiss={isProUser ? \"offcanvas\" : \"\"}>\n\t\t\t{#if isProUser}\n\t\t\t\t<button\n\t\t\t\t\tonclick={openImportKit}\n\t\t\t\t\tclass=\"w-full text-left px-4 py-2 rounded-md text-sm hover:bg-primary-100 transition flex items-center gap-2\"\n\t\t\t\t>\n\t\t\t\t\t<svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t<path d=\"M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4M12,6A6,6 0 0,0 6,12A6,6 0 0,0 12,18A6,6 0 0,0 18,12A6,6 0 0,0 12,6M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8Z\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t\tImport Emergency Kit\n\t\t\t\t</button>\n\t\t\t{:else}\n\t\t\t\t<SimpleTooltip content=\"Upgrade to Pro for full Emergency Kit features\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tdisabled\n\t\t\t\t\t\tclass=\"w-full text-left px-4 py-2 rounded-md text-sm text-gray-400 cursor-not-allowed flex items-center gap-2\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t<path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t\tImport Emergency Kit\n\t\t\t\t\t\t<div class=\"w-3 h-3 bg-gradient-to-r from-indigo-400 to-purple-400 rounded-full flex items-center justify-center ml-auto\">\n\t\t\t\t\t\t\t<svg class=\"w-2 h-2 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n\t\t\t\t\t\t\t\t<path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</button>\n\t\t\t\t</SimpleTooltip>\n\t\t\t{/if}\n\t\t</li>\n\t\t<li data-bs-dismiss=\"offcanvas\">\n\t\t\t<a\n\t\t\t\thref=\"https://yakkl.com/university/support?utm_source=yakkl&utm_medium=extension&utm_campaign=extension&utm_content=menu&utm_term=help\"\n\t\t\t\tclass=\"block px-4 py-2 rounded-md text-sm hover:bg-primary-100 transition\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noreferrer\"\n\t\t\t>\n\t\t\t\t❓ Help Center\n\t\t\t</a>\n\t\t</li>\n\t\t<li data-bs-dismiss=\"offcanvas\">\n\t\t\t<button\n\t\t\t\tonclick={handleLogout}\n\t\t\t\tclass=\"w-full text-left px-4 py-2 rounded-md text-sm text-red-600 hover:text-red-800 hover:bg-primary-100 transition\"\n\t\t\t>\n\t\t\t\t🔒 Lock & Logout\n\t\t\t</button>\n\t\t</li>\n\t\t<li data-bs-dismiss=\"offcanvas\">\n\t\t\t<button\n\t\t\t\tonclick={handleLogout}\n\t\t\t\tclass=\"w-full text-left px-4 py-2 rounded-md text-sm hover:bg-primary-100 transition\"\n\t\t\t>\n\t\t\t\t🧨 Exit YAKKL\n\t\t\t</button>\n\t\t</li>\n\t</ul>\n\n\t<hr class=\"my-1 border-base-content/20\" />\n\n\t<div class=\"text-center py-2 bg-primary\">\n\t\t<a\n\t\t\tclass=\"text-sm font-semibold text-base-content hover:underline\"\n\t\t\thref=\"https://yakkl.com/?utm_source=yakkl&utm_medium=extension&utm_campaign=extension&utm_content=menu&utm_term=extension\"\n\t\t\ttarget=\"_blank\"\n\t\t\trel=\"noreferrer\"\n\t\t>\n\t\t\tyakkl.com\n\t\t</a>\n\t</div>\n</div>\n","<script lang=\"ts\">\n\tconst props = $props<{\n\t\tuserName?: string;\n\t\turl?: string;\n\t\tclassName?: string;\n\t\tariaLabel?: string;\n\t}>();\n\n\tconst initial = props.userName?.charAt(0)?.toUpperCase() ?? '?';\n\n\t// Default styles (can be extended or overridden by props.className)\n\tconst defaultClasses =\n\t\t'w-10 h-10 rounded-full ring-2 ring-offset-1 flex items-center justify-center text-sm font-bold uppercase bg-primary-300 text-base-content';\n</script>\n\n{#if props.url}\n\t<img\n\t\tsrc={props.url}\n\t\talt={props.ariaLabel ?? 'User avatar'}\n\t\tclass={`object-cover ${props.className ?? defaultClasses}`}\n\t\tloading=\"lazy\"\n\t/>\n{:else}\n\t<div\n\t\tclass={props.className ?? defaultClasses}\n\t\taria-label={props.ariaLabel ?? 'User avatar'}\n\t\trole=\"img\"\n\t>\n\t\t{initial}\n\t</div>\n{/if}\n","<!-- Profile.svelte -->\n<script lang=\"ts\">\n\timport { createForm } from 'svelte-forms-lib';\n\timport * as yup from 'yup';\n\timport Modal from './Modal.svelte';\n\timport Avatar from './Avatar.svelte';\n\timport ErrorNoAction from './ErrorNoAction.svelte';\n\timport { getProfile, setProfileStorage, yakklMiscStore } from '$lib/common/stores';\n\timport { log } from '$lib/common/logger-wrapper';\n\timport type { Profile, ProfileData } from '$lib/common/interfaces';\n\timport { decryptData, encryptData } from '$lib/common/encryption';\n\timport { isEncryptedData } from '$lib/common/misc';\n\timport { identicon } from '$lib/utilities';\n\n\tinterface Props {\n\t\tshow?: boolean;\n\t\tonClose?: () => void;\n\t\tonComplete?: () => void;\n\t}\n\n\tlet {\n\t\tshow = $bindable(false),\n\t\tonClose = () => (show = false),\n\t\tonComplete = () => {}\n\t}: Props = $props();\n\n\tlet profile: Profile | null = $state(null);\n\tlet profileData: ProfileData | null = $state(null);\n\tlet isLoading = $state(false);\n\tlet isSaving = $state(false);\n\tlet error = $state('');\n\tlet success = $state('');\n\tlet previewAvatarUrl = $state('');\n\tlet hasChanges = $state(false);\n\tlet showError = $state(false);\n\tlet errorValue = $state('');\n\n\t// Form validation schema\n\tconst validationSchema = yup.object().shape({\n\t\tuserName: yup\n\t\t\t.string()\n\t\t\t.required('Username is required')\n\t\t\t.min(3, 'Username must be at least 3 characters')\n\t\t\t.max(30, 'Username must be less than 30 characters')\n\t\t\t.matches(/^[a-zA-Z0-9_-]+$/, 'Username can only contain letters, numbers, underscores, and dashes'),\n\t\tfirstName: yup\n\t\t\t.string()\n\t\t\t.required('First name is required')\n\t\t\t.min(1, 'First name is required')\n\t\t\t.max(50, 'First name must be less than 50 characters'),\n\t\tlastName: yup\n\t\t\t.string()\n\t\t\t.required('Last name is required')\n\t\t\t.min(1, 'Last name is required')\n\t\t\t.max(50, 'Last name must be less than 50 characters'),\n\t\temail: yup\n\t\t\t.string()\n\t\t\t.email('Must be a valid email address')\n\t\t\t.required('Email address is required'),\n\t\tbio: yup\n\t\t\t.string()\n\t\t\t.max(500, 'Bio must be less than 500 characters')\n\t\t\t.optional(),\n\t\twebsite: yup\n\t\t\t.string()\n\t\t\t.url('Must be a valid URL')\n\t\t\t.optional()\n\t\t\t.nullable()\n\t\t\t.transform((value) => (value === '' ? null : value)),\n\t\tavatarUrl: yup\n\t\t\t.string()\n\t\t\t.url('Must be a valid URL')\n\t\t\t.optional()\n\t\t\t.nullable()\n\t\t\t.transform((value) => (value === '' ? null : value))\n\t});\n\n\t// Initialize form\n\tconst { form, errors, isValid, touched, updateField } = createForm({\n\t\tinitialValues: {\n\t\t\tuserName: '',\n\t\t\tfirstName: '',\n\t\t\tlastName: '',\n\t\t\temail: '',\n\t\t\tbio: '',\n\t\t\twebsite: '',\n\t\t\tavatarUrl: ''\n\t\t},\n\t\tvalidationSchema,\n\t\tonSubmit: async (values) => {\n\t\t\tawait saveProfile(values);\n\t\t}\n\t});\n\n\t// Custom submit handler for Svelte 5\n\tasync function handleFormSubmit(event: Event) {\n\t\tevent.preventDefault();\n\t\t\n\t\t// Validate the form\n\t\tif (!$isValid) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// Call saveProfile directly with form values\n\t\tawait saveProfile($form);\n\t}\n\n\t// Load profile data on mount and when modal opens\n\t$effect(() => {\n\t\tif (show) {\n\t\t\tloadProfileData();\n\t\t}\n\t});\n\n\t// Track form changes\n\t$effect(() => {\n\t\tif (profile && profileData && !isLoading) {\n\t\t\tconst currentValues = $form;\n\t\t\t// Only track changes if form has been properly initialized\n\t\t\tconst originalValues = {\n\t\t\t\tuserName: profile.userName || '',\n\t\t\t\tfirstName: profileData.name?.first || '',\n\t\t\t\tlastName: profileData.name?.last || '',\n\t\t\t\temail: profileData.email || '',\n\t\t\t\tbio: profileData?.bio as string || '',\n\t\t\t\twebsite: profileData?.website as string || '',\n\t\t\t\tavatarUrl: profileData?.avatarUrl as string || ''\n\t\t\t};\n\n\t\t\thasChanges =\n\t\t\t\tcurrentValues.userName !== originalValues.userName ||\n\t\t\t\tcurrentValues.firstName !== originalValues.firstName ||\n\t\t\t\tcurrentValues.lastName !== originalValues.lastName ||\n\t\t\t\tcurrentValues.email !== originalValues.email ||\n\t\t\t\tcurrentValues.bio !== originalValues.bio ||\n\t\t\t\tcurrentValues.website !== originalValues.website ||\n\t\t\t\tcurrentValues.avatarUrl !== originalValues.avatarUrl;\n\n\t\t} else {\n\t\t\thasChanges = false;\n\t\t}\n\t});\n\n\t// Update preview avatar when URL changes\n\t$effect(() => {\n\t\tconst avatarUrl = $form.avatarUrl;\n\t\tif (avatarUrl && avatarUrl.trim() !== '') {\n\t\t\tpreviewAvatarUrl = avatarUrl;\n\t\t} else {\n\t\t\tpreviewAvatarUrl = profileData?.avatarUrl as string || identicon(profile?.userName || 'default');\n\t\t}\n\t});\n\n\tasync function loadProfileData() {\n\t\tisLoading = true;\n\t\terror = '';\n\n\t\ttry {\n\t\t\tprofile = await getProfile();\n\t\t\tif (!profile) {\n\t\t\t\terror = 'Profile not found';\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Decrypt profile data if encrypted\n\t\t\tif (isEncryptedData(profile.data)) {\n\t\t\t\tconst miscStore = $yakklMiscStore;\n\t\t\t\tif (!miscStore) {\n\t\t\t\t\terror = 'Unable to decrypt profile data';\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tprofileData = await decryptData(profile.data, miscStore) as ProfileData;\n\t\t\t} else {\n\t\t\t\tprofileData = profile.data as ProfileData;\n\t\t\t}\n\n\t\t\t// Update form with profile data\n\t\t\tupdateField('userName', profile.userName || '');\n\t\t\tupdateField('firstName', profileData.name?.first || '');\n\t\t\tupdateField('lastName', profileData.name?.last || '');\n\t\t\tupdateField('email', profileData.email || '');\n\t\t\tupdateField('bio', profileData?.bio as string || '');\n\t\t\tupdateField('website', profileData?.website as string || '');\n\t\t\tupdateField('avatarUrl', profileData?.avatarUrl as string || '');\n\n\t\t} catch (e) {\n\t\t\tlog.error('Error loading profile data:', false, e);\n\t\t\terror = 'Failed to load profile data';\n\t\t} finally {\n\t\t\tisLoading = false;\n\t\t}\n\t}\n\n\tasync function saveProfile(values: any) {\n\n\t\tif (!profile || !profileData) {\n\t\t\terror = 'Profile data not loaded';\n\t\t\treturn;\n\t\t}\n\n\t\tisSaving = true;\n\t\terror = '';\n\t\tsuccess = '';\n\n\t\ttry {\n\t\t\tlog.info('[Profile] Starting save with values:', false, values);\n\t\t\tlog.info('[Profile] Current state:', false, {\n\t\t\t\tprofile: !!profile,\n\t\t\t\tprofileData: !!profileData,\n\t\t\t\tmiscStore: !!$yakklMiscStore\n\t\t\t});\n\n\t\t\t// Check if we can encrypt before proceeding\n\t\t\tconst miscStore = $yakklMiscStore;\n\t\t\tif (!miscStore) {\n\t\t\t\tconst errorMsg = 'Unable to encrypt profile data - missing encryption key';\n\t\t\t\tlog.error('[Profile] ' + errorMsg, false);\n\t\t\t\terror = errorMsg;\n\t\t\t\terrorValue = errorMsg;\n\t\t\t\tshowError = true;\n\t\t\t\tisSaving = false;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Update profile data\n\t\t\tconst updatedProfileData: ProfileData = {\n\t\t\t\t...profileData,\n\t\t\t\tname: {\n\t\t\t\t\tid: profile.id,\n\t\t\t\t\tpersona: profile.persona,\n\t\t\t\t\tfirst: values.firstName || '',\n\t\t\t\t\tlast: values.lastName || ''\n\t\t\t\t},\n\t\t\t\temail: values.email || '',\n\t\t\t\tbio: values.bio || '',\n\t\t\t\twebsite: values.website || '',\n\t\t\t\tavatarUrl: values.avatarUrl || ''\n\t\t\t};\n\n\t\t\tlog.info('[Profile] Created updated profile data:', false, updatedProfileData);\n\n\t\t\t// Update profile\n\t\t\tconst updatedProfile: Profile = {\n\t\t\t\t...profile,\n\t\t\t\tuserName: values.userName,\n\t\t\t\tdata: updatedProfileData,\n\t\t\t\tupdateDate: new Date().toISOString()\n\t\t\t};\n\n\t\t\tlog.info('[Profile] Created updated profile:', false, {\n\t\t\t\tuserName: updatedProfile.userName,\n\t\t\t\tupdateDate: updatedProfile.updateDate\n\t\t\t});\n\n\t\t\t// Encrypt the data\n\t\t\tlog.info('[Profile] Starting encryption...');\n\t\t\ttry {\n\t\t\t\tupdatedProfile.data = await encryptData(updatedProfileData, miscStore);\n\t\t\t\tlog.info('[Profile] Encryption successful');\n\t\t\t} catch (encryptError: any) {\n\t\t\t\tconst errorMsg = 'Failed to encrypt profile data: ' + encryptError.message;\n\t\t\t\tlog.error('[Profile] Encryption failed:', false, encryptError);\n\t\t\t\terror = errorMsg;\n\t\t\t\terrorValue = errorMsg;\n\t\t\t\tshowError = true;\n\t\t\t\tisSaving = false;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Save to storage\n\t\t\tlog.info('[Profile] Starting storage save...');\n\t\t\ttry {\n\t\t\t\tawait setProfileStorage(updatedProfile);\n\t\t\t\tlog.info('[Profile] Storage save successful');\n\t\t\t} catch (saveError: any) {\n\t\t\t\tconst errorMsg = 'Failed to save profile to storage: ' + saveError.message;\n\t\t\t\tlog.error('[Profile] Storage failed:', false, saveError);\n\t\t\t\terror = errorMsg;\n\t\t\t\terrorValue = errorMsg;\n\t\t\t\tshowError = true;\n\t\t\t\tisSaving = false;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Update the local profile and profileData references to reflect saved state\n\t\t\t// Keep profile.data unencrypted for local comparison purposes\n\t\t\tprofile = {\n\t\t\t\t...updatedProfile,\n\t\t\t\tdata: updatedProfileData\n\t\t\t};\n\t\t\tprofileData = updatedProfileData;\n\n\t\t\tsuccess = 'Profile updated successfully!';\n\t\t\thasChanges = false;\n\n\t\t\tlog.info('[Profile] Profile saved successfully, state updated:', false, {\n\t\t\t\thasChanges,\n\t\t\t\tprofile: profile.userName,\n\t\t\t\tprofileData: profileData.name\n\t\t\t});\n\n\t\t\t// Call completion callback\n\t\t\tonComplete();\n\n\t\t\t// Close modal with a small delay to ensure state updates complete\n\t\t\tlog.info('[Profile] Preparing to close modal after successful save');\n\t\t\t\n\t\t\t// Use setTimeout to ensure state updates are complete\n\t\t\tsetTimeout(() => {\n\t\t\t\tshow = false;\n\t\t\t\tisSaving = false;\n\t\t\t}, 100);\n\n\t\t} catch (e: any) {\n\t\t\tconst errorMsg = 'Failed to save profile changes: ' + e.message;\n\t\t\tlog.error('[Profile] Unexpected error saving profile:', false, e);\n\t\t\terror = errorMsg;\n\t\t\terrorValue = errorMsg;\n\t\t\tshowError = true;\n\t\t\tisSaving = false;\n\t\t}\n\t}\n\n\tfunction handleClose() {\n\t\tif (hasChanges) {\n\t\t\tif (confirm('You have unsaved changes. Are you sure you want to close?')) {\n\t\t\t\tshow = false;\n\t\t\t\tonClose();\n\t\t\t}\n\t\t} else {\n\t\t\tshow = false;\n\t\t\tonClose();\n\t\t}\n\t}\n\n\tfunction resetForm() {\n\t\tif (profile && profileData) {\n\t\t\tupdateField('userName', profile.userName || '');\n\t\t\tupdateField('firstName', profileData.name?.first || '');\n\t\t\tupdateField('lastName', profileData.name?.last || '');\n\t\t\tupdateField('email', profileData.email || '');\n\t\t\tupdateField('bio', profileData?.bio as string || '');\n\t\t\tupdateField('website', profileData?.website as string || '');\n\t\t\tupdateField('avatarUrl', profileData?.avatarUrl as string || '');\n\t\t}\n\t}\n\n\tfunction handleErrorClose() {\n\t\tshowError = false;\n\t\terror = '';\n\t\terrorValue = '';\n\t}\n</script>\n\n<Modal bind:show title=\"Profile\" onClose={handleClose} className=\"max-w-2xl\">\n\t<div class=\"space-y-6 p-6\">\n\t\t{#if isLoading}\n\t\t\t<div class=\"flex items-center justify-center py-8\">\n\t\t\t\t<div class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600\"></div>\n\t\t\t\t<span class=\"ml-2 text-gray-600\">Loading profile...</span>\n\t\t\t</div>\n\t\t{:else}\n\t\t\t<form onsubmit={handleFormSubmit} class=\"space-y-6\">\n\t\t\t\t<!-- Avatar Section -->\n\t\t\t\t<div class=\"flex flex-col items-center space-y-4\">\n\t\t\t\t\t<div class=\"text-center\">\n\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\turl={previewAvatarUrl}\n\t\t\t\t\t\t\tuserName={$form.firstName || $form.userName}\n\t\t\t\t\t\t\tclassName=\"w-24 h-24 rounded-full ring-4 ring-offset-2 ring-indigo-500\"\n\t\t\t\t\t\t\tariaLabel=\"Profile Avatar\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"w-full\">\n\t\t\t\t\t\t<label for=\"avatarUrl\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n\t\t\t\t\t\t\tAvatar URL (optional)\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"avatarUrl\"\n\t\t\t\t\t\t\ttype=\"url\"\n\t\t\t\t\t\t\tbind:value={$form.avatarUrl}\n\t\t\t\t\t\t\tplaceholder=\"https://example.com/your-avatar.jpg\"\n\t\t\t\t\t\t\tclass=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n\t\t\t\t\t\t\tclass:border-red-500={$errors.avatarUrl && $touched.avatarUrl}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{#if $errors.avatarUrl && $touched.avatarUrl}\n\t\t\t\t\t\t\t<p class=\"mt-1 text-sm text-red-600\">{$errors.avatarUrl}</p>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Basic Information -->\n\t\t\t\t<div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label for=\"userName\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n\t\t\t\t\t\t\tUsername <span class=\"text-red-500\">*</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"userName\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tbind:value={$form.userName}\n\t\t\t\t\t\t\tplaceholder=\"your_username\"\n\t\t\t\t\t\t\tclass=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n\t\t\t\t\t\t\tclass:border-red-500={$errors.userName && $touched.userName}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{#if $errors.userName && $touched.userName}\n\t\t\t\t\t\t\t<p class=\"mt-1 text-sm text-red-600\">{$errors.userName}</p>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label for=\"email\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n\t\t\t\t\t\t\tEmail <span class=\"text-red-500\">*</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\tbind:value={$form.email}\n\t\t\t\t\t\t\tplaceholder=\"your@email.com\"\n\t\t\t\t\t\t\tclass=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n\t\t\t\t\t\t\tclass:border-red-500={$errors.email && $touched.email}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{#if $errors.email && $touched.email}\n\t\t\t\t\t\t\t<p class=\"mt-1 text-sm text-red-600\">{$errors.email}</p>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label for=\"firstName\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n\t\t\t\t\t\t\tFirst Name <span class=\"text-red-500\">*</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"firstName\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tbind:value={$form.firstName}\n\t\t\t\t\t\t\tplaceholder=\"John\"\n\t\t\t\t\t\t\tclass=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n\t\t\t\t\t\t\tclass:border-red-500={$errors.firstName && $touched.firstName}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{#if $errors.firstName && $touched.firstName}\n\t\t\t\t\t\t\t<p class=\"mt-1 text-sm text-red-600\">{$errors.firstName}</p>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label for=\"lastName\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n\t\t\t\t\t\t\tLast Name <span class=\"text-red-500\">*</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"lastName\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tbind:value={$form.lastName}\n\t\t\t\t\t\t\tplaceholder=\"Doe\"\n\t\t\t\t\t\t\tclass=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n\t\t\t\t\t\t\tclass:border-red-500={$errors.lastName && $touched.lastName}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{#if $errors.lastName && $touched.lastName}\n\t\t\t\t\t\t\t<p class=\"mt-1 text-sm text-red-600\">{$errors.lastName}</p>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Optional Fields -->\n\t\t\t\t<div>\n\t\t\t\t\t<label for=\"website\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n\t\t\t\t\t\tWebsite (optional)\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"website\"\n\t\t\t\t\t\ttype=\"url\"\n\t\t\t\t\t\tbind:value={$form.website}\n\t\t\t\t\t\tplaceholder=\"https://your-website.com\"\n\t\t\t\t\t\tclass=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n\t\t\t\t\t\tclass:border-red-500={$errors.website && $touched.website}\n\t\t\t\t\t/>\n\t\t\t\t\t{#if $errors.website && $touched.website}\n\t\t\t\t\t\t<p class=\"mt-1 text-sm text-red-600\">{$errors.website}</p>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<label for=\"bio\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n\t\t\t\t\t\tBio (optional)\n\t\t\t\t\t</label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tid=\"bio\"\n\t\t\t\t\t\tbind:value={$form.bio}\n\t\t\t\t\t\trows=\"3\"\n\t\t\t\t\t\tplaceholder=\"Tell us about yourself...\"\n\t\t\t\t\t\tclass=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n\t\t\t\t\t\tclass:border-red-500={$errors.bio && $touched.bio}\n\t\t\t\t\t></textarea>\n\t\t\t\t\t{#if $errors.bio && $touched.bio}\n\t\t\t\t\t\t<p class=\"mt-1 text-sm text-red-600\">{$errors.bio}</p>\n\t\t\t\t\t{/if}\n\t\t\t\t\t<p class=\"mt-1 text-sm text-gray-500\">{($form.bio || '').length}/500 characters</p>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Status Messages -->\n\t\t\t\t{#if error}\n\t\t\t\t\t<div class=\"rounded-md bg-red-50 p-4\">\n\t\t\t\t\t\t<p class=\"text-sm font-medium text-red-800\">{error}</p>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\n\t\t\t\t{#if success}\n\t\t\t\t\t<div class=\"rounded-md bg-green-50 p-4\">\n\t\t\t\t\t\t<p class=\"text-sm font-medium text-green-800\">{success}</p>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\n\t\t\t\t<!-- Form Actions -->\n\t\t\t\t<div class=\"flex justify-between pt-5\">\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tonclick={resetForm}\n\t\t\t\t\t\tclass=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n\t\t\t\t\t\tdisabled={!hasChanges || isSaving}\n\t\t\t\t\t>\n\t\t\t\t\t\tReset\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<div class=\"flex space-x-3\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tonclick={handleClose}\n\t\t\t\t\t\t\tclass=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n\t\t\t\t\t\t\tdisabled={isSaving}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tclass=\"px-4 py-2 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n\t\t\t\t\t\t\tdisabled={!$isValid || !hasChanges || isSaving}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{#if isSaving}\n\t\t\t\t\t\t\t\t<span class=\"flex items-center\">\n\t\t\t\t\t\t\t\t\t<div class=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n\t\t\t\t\t\t\t\t\tSaving...\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\tSave Changes\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Last Updated Info -->\n\t\t\t\t{#if profile?.updateDate}\n\t\t\t\t\t<div class=\"text-xs text-gray-500 text-center pt-2 border-t\">\n\t\t\t\t\t\tLast updated: {new Date(profile.updateDate).toLocaleString()}\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t</form>\n\t\t{/if}\n\t</div>\n</Modal>\n\n<ErrorNoAction\n\tbind:show={showError}\n\tvalue={errorValue}\n\ttitle=\"Profile Save Error\"\n\tonClose={handleErrorClose}\n/>\n","<!-- Settings.svelte -->\n<script lang=\"ts\">\n\timport { createForm } from 'svelte-forms-lib';\n\timport * as yup from 'yup';\n\timport Modal from './Modal.svelte';\n\timport { getSettings, setSettings, getProfile, setProfileStorage } from '$lib/common/stores';\n\timport { log } from '$lib/managers/Logger';\n\timport { onMount } from 'svelte';\n\timport type { Settings, Profile } from '$lib/common/interfaces';\n\timport { SystemTheme, PlanType } from '$lib/common/types';\n\n\tinterface Props {\n\t\tshow?: boolean;\n\t\tonClose?: () => void;\n\t\tonComplete?: () => void;\n\t}\n\n\tlet {\n\t\tshow = $bindable(false),\n\t\tonClose = () => (show = false),\n\t\tonComplete = () => {}\n\t}: Props = $props();\n\n\tlet settings: Settings | null = $state(null);\n\tlet profile: Profile | null = $state(null);\n\tlet isLoading = $state(false);\n\tlet isSaving = $state(false);\n\tlet error = $state('');\n\tlet success = $state('');\n\tlet hasChanges = $state(false);\n\n\t// Available options\n\tconst themeOptions = [\n\t\t{ value: SystemTheme.SYSTEM, label: 'System' },\n\t\t{ value: SystemTheme.LIGHT, label: 'Light' },\n\t\t{ value: SystemTheme.DARK, label: 'Dark' }\n\t];\n\n\tconst currencyOptions = [\n\t\t{ value: 'USD', label: 'US Dollar (USD)' },\n\t\t{ value: 'EUR', label: 'Euro (EUR)' },\n\t\t{ value: 'GBP', label: 'British Pound (GBP)' },\n\t\t{ value: 'JPY', label: 'Japanese Yen (JPY)' },\n\t\t{ value: 'CAD', label: 'Canadian Dollar (CAD)' },\n\t\t{ value: 'AUD', label: 'Australian Dollar (AUD)' },\n\t\t{ value: 'CHF', label: 'Swiss Franc (CHF)' },\n\t\t{ value: 'CNY', label: 'Chinese Yuan (CNY)' }\n\t];\n\n\tconst localeOptions = [\n\t\t{ value: 'en-US', label: 'English (US)' },\n\t\t{ value: 'en-GB', label: 'English (UK)' },\n\t\t{ value: 'es-ES', label: 'Spanish' },\n\t\t{ value: 'fr-FR', label: 'French' },\n\t\t{ value: 'de-DE', label: 'German' },\n\t\t{ value: 'it-IT', label: 'Italian' },\n\t\t{ value: 'pt-PT', label: 'Portuguese' },\n\t\t{ value: 'ja-JP', label: 'Japanese' },\n\t\t{ value: 'ko-KR', label: 'Korean' },\n\t\t{ value: 'zh-CN', label: 'Chinese (Simplified)' },\n\t\t{ value: 'zh-TW', label: 'Chinese (Traditional)' }\n\t];\n\n\tconst idleDelayOptions = [\n\t\t{ value: 60, label: '1 minute' },\n\t\t{ value: 300, label: '5 minutes' },\n\t\t{ value: 600, label: '10 minutes' },\n\t\t{ value: 900, label: '15 minutes' },\n\t\t{ value: 1800, label: '30 minutes' },\n\t\t{ value: 3600, label: '1 hour' },\n\t\t{ value: 0, label: 'Never' }\n\t];\n\n\t// Form validation schema\n\tconst validationSchema = yup.object().shape({\n\t\tshowTestNetworks: yup.boolean(),\n\t\ttheme: yup.string().oneOf(Object.values(SystemTheme)),\n\t\tlocale: yup.string().required('Locale is required'),\n\t\tcurrency: yup.string().required('Currency is required'),\n\t\tidleDelayInterval: yup.number().min(0, 'Idle delay must be 0 or positive'),\n\t\tidleAutoLock: yup.boolean(),\n\t\tidleAutoLockCycle: yup.number().min(60, 'Auto-lock cycle must be at least 1 minute'),\n\t\tshowHints: yup.boolean(),\n\t\ttrialCountdownPinned: yup.boolean()\n\t});\n\n\t// Initialize form\n\tconst { form, errors, isValid, touched, updateField } = createForm({\n\t\tinitialValues: {\n\t\t\tshowTestNetworks: false,\n\t\t\ttheme: SystemTheme.SYSTEM,\n\t\t\tlocale: 'en-US',\n\t\t\tcurrency: 'USD',\n\t\t\tidleDelayInterval: 300,\n\t\t\tidleAutoLock: true,\n\t\t\tidleAutoLockCycle: 180,\n\t\t\tshowHints: true,\n\t\t\ttrialCountdownPinned: false\n\t\t},\n\t\tvalidationSchema,\n\t\tonSubmit: async (values) => {\n\t\t\tawait saveSettings(values);\n\t\t}\n\t});\n\n\t// Custom submit handler for Svelte 5\n\tasync function handleFormSubmit(event: Event) {\n\t\tevent.preventDefault();\n\t\t\n\t\t// Validate the form\n\t\tif (!$isValid) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// Call saveSettings directly with form values\n\t\tawait saveSettings($form);\n\t}\n\n\t// Load settings data on mount and when modal opens\n\t$effect(() => {\n\t\tif (show) {\n\t\t\tloadSettingsData();\n\t\t}\n\t});\n\n\t// Track form changes\n\t$effect(() => {\n\t\tif (settings && profile && !isLoading) {\n\t\t\tconst currentValues = $form;\n\t\t\t// Only track changes if form has been properly initialized\n\t\t\tconst originalValues = {\n\t\t\t\tshowTestNetworks: profile.preferences?.showTestNetworks ?? false,\n\t\t\t\ttheme: profile.preferences?.dark ?? SystemTheme.SYSTEM,\n\t\t\t\tlocale: profile.preferences?.locale ?? 'en-US',\n\t\t\t\tcurrency: profile.preferences?.currency?.code ?? 'USD',\n\t\t\t\tidleDelayInterval: profile.preferences?.idleDelayInterval ?? 300,\n\t\t\t\tidleAutoLock: profile.preferences?.idleAutoLock ?? true,\n\t\t\t\tidleAutoLockCycle: profile.preferences?.idleAutoLockCycle ?? 180,\n\t\t\t\tshowHints: settings.showHints ?? true,\n\t\t\t\ttrialCountdownPinned: settings.trialCountdownPinned ?? false\n\t\t\t};\n\n\t\t\thasChanges = \n\t\t\t\tcurrentValues.showTestNetworks !== originalValues.showTestNetworks ||\n\t\t\t\tcurrentValues.theme !== originalValues.theme ||\n\t\t\t\tcurrentValues.locale !== originalValues.locale ||\n\t\t\t\tcurrentValues.currency !== originalValues.currency ||\n\t\t\t\tcurrentValues.idleDelayInterval !== originalValues.idleDelayInterval ||\n\t\t\t\tcurrentValues.idleAutoLock !== originalValues.idleAutoLock ||\n\t\t\t\tcurrentValues.idleAutoLockCycle !== originalValues.idleAutoLockCycle ||\n\t\t\t\tcurrentValues.showHints !== originalValues.showHints ||\n\t\t\t\tcurrentValues.trialCountdownPinned !== originalValues.trialCountdownPinned;\n\t\t} else {\n\t\t\thasChanges = false;\n\t\t}\n\t});\n\n\tasync function loadSettingsData() {\n\t\tisLoading = true;\n\t\terror = '';\n\t\t\n\t\ttry {\n\t\t\t// Load both settings and profile (for preferences)\n\t\t\t[settings, profile] = await Promise.all([\n\t\t\t\tgetSettings(),\n\t\t\t\tgetProfile()\n\t\t\t]);\n\n\t\t\tif (!settings) {\n\t\t\t\terror = 'Settings not found';\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!profile) {\n\t\t\t\terror = 'Profile not found';\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Update form with current settings and preferences\n\t\t\tupdateField('showTestNetworks', profile.preferences?.showTestNetworks ?? false);\n\t\t\tupdateField('theme', profile.preferences?.dark ?? SystemTheme.SYSTEM);\n\t\t\tupdateField('locale', profile.preferences?.locale ?? 'en-US');\n\t\t\tupdateField('currency', profile.preferences?.currency?.code ?? 'USD');\n\t\t\tupdateField('idleDelayInterval', profile.preferences?.idleDelayInterval ?? 300);\n\t\t\tupdateField('idleAutoLock', profile.preferences?.idleAutoLock ?? true);\n\t\t\tupdateField('idleAutoLockCycle', profile.preferences?.idleAutoLockCycle ?? 180);\n\t\t\tupdateField('showHints', settings.showHints ?? true);\n\t\t\tupdateField('trialCountdownPinned', settings.trialCountdownPinned ?? false);\n\n\t\t} catch (e) {\n\t\t\tlog.error('Error loading settings data:', false, e);\n\t\t\terror = 'Failed to load settings data';\n\t\t} finally {\n\t\t\tisLoading = false;\n\t\t}\n\t}\n\n\tasync function saveSettings(values: any) {\n\t\tif (!settings || !profile) {\n\t\t\terror = 'Settings data not loaded';\n\t\t\treturn;\n\t\t}\n\n\t\tisSaving = true;\n\t\terror = '';\n\t\tsuccess = '';\n\n\t\ttry {\n\t\t\t// Update settings\n\t\t\tconst updatedSettings: Settings = {\n\t\t\t\t...settings,\n\t\t\t\tshowHints: values.showHints,\n\t\t\t\ttrialCountdownPinned: values.trialCountdownPinned,\n\t\t\t\tupdateDate: new Date().toISOString()\n\t\t\t};\n\n\t\t\t// Update preferences in profile\n\t\t\tconst updatedProfile: Profile = {\n\t\t\t\t...profile,\n\t\t\t\tpreferences: {\n\t\t\t\t\t...profile.preferences,\n\t\t\t\t\tshowTestNetworks: values.showTestNetworks,\n\t\t\t\t\tdark: values.theme,\n\t\t\t\t\tlocale: values.locale,\n\t\t\t\t\tcurrency: {\n\t\t\t\t\t\t...profile.preferences.currency,\n\t\t\t\t\t\tcode: values.currency\n\t\t\t\t\t},\n\t\t\t\t\tidleDelayInterval: values.idleDelayInterval,\n\t\t\t\t\tidleAutoLock: values.idleAutoLock,\n\t\t\t\t\tidleAutoLockCycle: values.idleAutoLockCycle,\n\t\t\t\t\tupdateDate: new Date().toISOString()\n\t\t\t\t},\n\t\t\t\tupdateDate: new Date().toISOString()\n\t\t\t};\n\n\t\t\t// Save both settings and profile\n\t\t\tawait Promise.all([\n\t\t\t\tsetSettings(updatedSettings),\n\t\t\t\tsetProfileStorage(updatedProfile)\n\t\t\t]);\n\n\t\t\t// Update local references to reflect saved state\n\t\t\tsettings = updatedSettings;\n\t\t\tprofile = updatedProfile;\n\n\t\t\tsuccess = 'Settings updated successfully!';\n\t\t\thasChanges = false;\n\t\t\t\n\t\t\t// Call completion callback\n\t\t\tonComplete();\n\n\t\t\t// Call completion callback\n\t\t\tonComplete();\n\n\t\t\t// Close modal with a small delay to ensure state updates complete\n\t\t\tsetTimeout(() => {\n\t\t\t\tshow = false;\n\t\t\t\tisSaving = false;\n\t\t\t}, 100);\n\n\t\t} catch (e: any) {\n\t\t\tconst errorMsg = 'Failed to save settings changes: ' + e.message;\n\t\t\tlog.error('Error saving settings:', false, e);\n\t\t\terror = errorMsg;\n\t\t\tisSaving = false;\n\t\t}\n\t}\n\n\tfunction handleClose() {\n\t\tif (hasChanges) {\n\t\t\tif (confirm('You have unsaved changes. Are you sure you want to close?')) {\n\t\t\t\tshow = false;\n\t\t\t\tonClose();\n\t\t\t}\n\t\t} else {\n\t\t\tshow = false;\n\t\t\tonClose();\n\t\t}\n\t}\n\n\tfunction resetForm() {\n\t\tif (settings && profile) {\n\t\t\tupdateField('showTestNetworks', profile.preferences?.showTestNetworks ?? false);\n\t\t\tupdateField('theme', profile.preferences?.dark ?? SystemTheme.SYSTEM);\n\t\t\tupdateField('locale', profile.preferences?.locale ?? 'en-US');\n\t\t\tupdateField('currency', profile.preferences?.currency?.code ?? 'USD');\n\t\t\tupdateField('idleDelayInterval', profile.preferences?.idleDelayInterval ?? 300);\n\t\t\tupdateField('idleAutoLock', profile.preferences?.idleAutoLock ?? true);\n\t\t\tupdateField('idleAutoLockCycle', profile.preferences?.idleAutoLockCycle ?? 180);\n\t\t\tupdateField('showHints', settings.showHints ?? true);\n\t\t\tupdateField('trialCountdownPinned', settings.trialCountdownPinned ?? false);\n\t\t}\n\t}\n\n\tfunction getPlanLabel(planType: PlanType): string {\n\t\tswitch (planType) {\n\t\t\tcase PlanType.BASIC_MEMBER:\n\t\t\t\treturn 'Basic Member';\n\t\t\tcase PlanType.YAKKL_PRO:\n\t\t\t\treturn 'YAKKL Pro';\n\t\t\tcase PlanType.YAKKL_PREMIUM:\n\t\t\t\treturn 'YAKKL Premium';\n\t\t\tdefault:\n\t\t\t\treturn 'Unknown';\n\t\t}\n\t}\n</script>\n\n<Modal bind:show title=\"Account Settings\" onClose={handleClose} className=\"max-w-2xl\">\n\t<div class=\"space-y-6 p-6\">\n\t\t{#if isLoading}\n\t\t\t<div class=\"flex items-center justify-center py-8\">\n\t\t\t\t<div class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600\"></div>\n\t\t\t\t<span class=\"ml-2 text-gray-600\">Loading settings...</span>\n\t\t\t</div>\n\t\t{:else}\n\t\t\t<form onsubmit={handleFormSubmit} class=\"space-y-6\">\n\t\t\t\t<!-- Account Information (Read-only) -->\n\t\t\t\t{#if settings && profile}\n\t\t\t\t\t<div class=\"bg-gray-50 p-4 rounded-lg\">\n\t\t\t\t\t\t<h3 class=\"text-lg font-medium text-gray-900 mb-3\">Account Information</h3>\n\t\t\t\t\t\t<div class=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<span class=\"font-medium text-gray-700\">Plan:</span>\n\t\t\t\t\t\t\t\t<span class=\"ml-2 text-gray-600\">{getPlanLabel(settings.plan.type)}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<span class=\"font-medium text-gray-700\">Member since:</span>\n\t\t\t\t\t\t\t\t<span class=\"ml-2 text-gray-600\">{new Date(settings.createDate).toLocaleDateString()}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<span class=\"font-medium text-gray-700\">Profile ID:</span>\n\t\t\t\t\t\t\t\t<span class=\"ml-2 text-gray-600 font-mono text-xs\">{settings.id.substring(0, 8)}...</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<span class=\"font-medium text-gray-700\">Version:</span>\n\t\t\t\t\t\t\t\t<span class=\"ml-2 text-gray-600\">{settings.version}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\n\t\t\t\t<!-- Display & Theme Settings -->\n\t\t\t\t<div>\n\t\t\t\t\t<h3 class=\"text-lg font-medium text-gray-900 mb-4\">Display & Theme</h3>\n\t\t\t\t\t<div class=\"space-y-4\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label for=\"theme\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n\t\t\t\t\t\t\t\tTheme\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tid=\"theme\"\n\t\t\t\t\t\t\t\tbind:value={$form.theme}\n\t\t\t\t\t\t\t\tclass=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{#each themeOptions as option}\n\t\t\t\t\t\t\t\t\t<option value={option.value}>{option.label}</option>\n\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"flex items-center\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"showTestNetworks\"\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tbind:checked={$form.showTestNetworks}\n\t\t\t\t\t\t\t\tclass=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label for=\"showTestNetworks\" class=\"ml-2 block text-sm text-gray-900\">\n\t\t\t\t\t\t\t\tShow test networks\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"flex items-center\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"showHints\"\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tbind:checked={$form.showHints}\n\t\t\t\t\t\t\t\tclass=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label for=\"showHints\" class=\"ml-2 block text-sm text-gray-900\">\n\t\t\t\t\t\t\t\tShow helpful hints and tips\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Localization Settings -->\n\t\t\t\t<div>\n\t\t\t\t\t<h3 class=\"text-lg font-medium text-gray-900 mb-4\">Localization</h3>\n\t\t\t\t\t<div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label for=\"locale\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n\t\t\t\t\t\t\t\tLanguage <span class=\"text-red-500\">*</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tid=\"locale\"\n\t\t\t\t\t\t\t\tbind:value={$form.locale}\n\t\t\t\t\t\t\t\tclass=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n\t\t\t\t\t\t\t\tclass:border-red-500={$errors.locale && $touched.locale}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{#each localeOptions as option}\n\t\t\t\t\t\t\t\t\t<option value={option.value}>{option.label}</option>\n\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t{#if $errors.locale && $touched.locale}\n\t\t\t\t\t\t\t\t<p class=\"mt-1 text-sm text-red-600\">{$errors.locale}</p>\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label for=\"currency\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n\t\t\t\t\t\t\t\tCurrency <span class=\"text-red-500\">*</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tid=\"currency\"\n\t\t\t\t\t\t\t\tbind:value={$form.currency}\n\t\t\t\t\t\t\t\tclass=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n\t\t\t\t\t\t\t\tclass:border-red-500={$errors.currency && $touched.currency}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{#each currencyOptions as option}\n\t\t\t\t\t\t\t\t\t<option value={option.value}>{option.label}</option>\n\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t{#if $errors.currency && $touched.currency}\n\t\t\t\t\t\t\t\t<p class=\"mt-1 text-sm text-red-600\">{$errors.currency}</p>\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Security Settings -->\n\t\t\t\t<div>\n\t\t\t\t\t<h3 class=\"text-lg font-medium text-gray-900 mb-4\">Security & Privacy</h3>\n\t\t\t\t\t<div class=\"space-y-4\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label for=\"idleDelayInterval\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n\t\t\t\t\t\t\t\tAuto-lock after idle time\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tid=\"idleDelayInterval\"\n\t\t\t\t\t\t\t\tbind:value={$form.idleDelayInterval}\n\t\t\t\t\t\t\t\tclass=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{#each idleDelayOptions as option}\n\t\t\t\t\t\t\t\t\t<option value={option.value}>{option.label}</option>\n\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t<p class=\"mt-1 text-sm text-gray-500\">\n\t\t\t\t\t\t\t\tAutomatically lock the wallet after the specified time of inactivity\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"flex items-center\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"idleAutoLock\"\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tbind:checked={$form.idleAutoLock}\n\t\t\t\t\t\t\t\tclass=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label for=\"idleAutoLock\" class=\"ml-2 block text-sm text-gray-900\">\n\t\t\t\t\t\t\t\tEnable automatic idle lock\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{#if $form.idleAutoLock}\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<label for=\"idleAutoLockCycle\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n\t\t\t\t\t\t\t\t\tAuto-lock cycle (seconds)\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid=\"idleAutoLockCycle\"\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tbind:value={$form.idleAutoLockCycle}\n\t\t\t\t\t\t\t\t\tmin=\"60\"\n\t\t\t\t\t\t\t\t\tmax=\"3600\"\n\t\t\t\t\t\t\t\t\tstep=\"60\"\n\t\t\t\t\t\t\t\t\tclass=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n\t\t\t\t\t\t\t\t\tclass:border-red-500={$errors.idleAutoLockCycle && $touched.idleAutoLockCycle}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{#if $errors.idleAutoLockCycle && $touched.idleAutoLockCycle}\n\t\t\t\t\t\t\t\t\t<p class=\"mt-1 text-sm text-red-600\">{$errors.idleAutoLockCycle}</p>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t<p class=\"mt-1 text-sm text-gray-500\">\n\t\t\t\t\t\t\t\t\tHow often to check for idle activity (minimum 60 seconds)\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Trial Settings (if applicable) -->\n\t\t\t\t{#if settings?.plan?.trialEndDate}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h3 class=\"text-lg font-medium text-gray-900 mb-4\">Trial Settings</h3>\n\t\t\t\t\t\t<div class=\"flex items-center\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"trialCountdownPinned\"\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tbind:checked={$form.trialCountdownPinned}\n\t\t\t\t\t\t\t\tclass=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label for=\"trialCountdownPinned\" class=\"ml-2 block text-sm text-gray-900\">\n\t\t\t\t\t\t\t\tPin trial countdown to top of interface\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\n\t\t\t\t<!-- Status Messages -->\n\t\t\t\t{#if error}\n\t\t\t\t\t<div class=\"rounded-md bg-red-50 p-4\">\n\t\t\t\t\t\t<p class=\"text-sm font-medium text-red-800\">{error}</p>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\n\t\t\t\t{#if success}\n\t\t\t\t\t<div class=\"rounded-md bg-green-50 p-4\">\n\t\t\t\t\t\t<p class=\"text-sm font-medium text-green-800\">{success}</p>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\n\t\t\t\t<!-- Form Actions -->\n\t\t\t\t<div class=\"flex justify-between pt-5\">\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tonclick={resetForm}\n\t\t\t\t\t\tclass=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n\t\t\t\t\t\tdisabled={!hasChanges || isSaving}\n\t\t\t\t\t>\n\t\t\t\t\t\tReset\n\t\t\t\t\t</button>\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"flex space-x-3\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tonclick={handleClose}\n\t\t\t\t\t\t\tclass=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n\t\t\t\t\t\t\tdisabled={isSaving}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tclass=\"px-4 py-2 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n\t\t\t\t\t\t\tdisabled={!$isValid || !hasChanges || isSaving}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{#if isSaving}\n\t\t\t\t\t\t\t\t<span class=\"flex items-center\">\n\t\t\t\t\t\t\t\t\t<div class=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n\t\t\t\t\t\t\t\t\tSaving...\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\tSave Changes\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Last Updated Info -->\n\t\t\t\t{#if settings?.updateDate}\n\t\t\t\t\t<div class=\"text-xs text-gray-500 text-center pt-2 border-t\">\n\t\t\t\t\t\tLast updated: {new Date(settings.updateDate).toLocaleString()}\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t</form>\n\t\t{/if}\n\t</div>\n</Modal>","<!-- Watcher.svelte - Advanced Portfolio Tracking & Social Intelligence -->\n<script lang=\"ts\">\n\timport { onMount, onDestroy } from 'svelte';\n\timport { log } from '$lib/managers/Logger';\n\timport SimpleTooltip from './SimpleTooltip.svelte';\n\timport Modal from './Modal.svelte';\n\n\tinterface Props {\n\t\tshow: boolean;\n\t\tonClose: () => void;\n\t\tonComplete?: () => void;\n\t}\n\n\tlet { show = $bindable(), onClose, onComplete }: Props = $props();\n\n\t// Watch account data structure\n\tinterface WatchAccount {\n\t\tid: string;\n\t\taddress: string;\n\t\talias: string;\n\t\tblockchain: string;\n\t\taccountType: 'personal' | 'exchange' | 'whale' | 'institution' | 'contract';\n\t\tcategory?: string;\n\t\ttags: string[];\n\t\tbalance?: number;\n\t\tportfolioValue?: number;\n\t\tlastActivity?: Date;\n\t\tsocialScore?: number;\n\t\tisActive: boolean;\n\t\tcreatedAt: Date;\n\t\tnotifications: {\n\t\t\tlargeTransactions: boolean;\n\t\t\tbalanceChanges: boolean;\n\t\t\tsocialActivity: boolean;\n\t\t};\n\t}\n\n\t// Social intelligence data\n\tinterface SocialIntelligence {\n\t\tfollowersCount: number;\n\t\ttradingActivity: 'low' | 'medium' | 'high' | 'whale';\n\t\treputationScore: number;\n\t\trecentTransactions: {\n\t\t\tamount: number;\n\t\t\tdirection: 'in' | 'out';\n\t\t\ttimestamp: Date;\n\t\t\tsignificance: 'normal' | 'notable' | 'major';\n\t\t}[];\n\t\tinfluenceMetrics: {\n\t\t\tcopyTraders: number;\n\t\t\tportfolioMirrors: number;\n\t\t\tsocialMentions: number;\n\t\t};\n\t}\n\n\t// Component state\n\tlet watchAccounts = $state<WatchAccount[]>([]);\n\tlet selectedAccount = $state<WatchAccount | null>(null);\n\tlet socialData = $state<Map<string, SocialIntelligence>>(new Map());\n\tlet activeTab = $state<'accounts' | 'analytics' | 'social' | 'alerts'>('accounts');\n\tlet isLoading = $state(false);\n\tlet error = $state('');\n\n\t// Form state for adding new watch account\n\tlet newAccountForm = $state({\n\t\taddress: '',\n\t\talias: '',\n\t\tblockchain: 'ethereum',\n\t\taccountType: 'personal' as WatchAccount['accountType'],\n\t\tcategory: '',\n\t\ttags: [] as string[],\n\t\tnotifications: {\n\t\t\tlargeTransactions: true,\n\t\t\tbalanceChanges: false,\n\t\t\tsocialActivity: false\n\t\t}\n\t});\n\n\t// Available blockchains for watching\n\tconst supportedBlockchains = [\n\t\t{ id: 'ethereum', name: 'Ethereum', symbol: 'ETH' },\n\t\t{ id: 'bitcoin', name: 'Bitcoin', symbol: 'BTC' },\n\t\t{ id: 'polygon', name: 'Polygon', symbol: 'MATIC' },\n\t\t{ id: 'arbitrum', name: 'Arbitrum', symbol: 'ARB' },\n\t\t{ id: 'optimism', name: 'Optimism', symbol: 'OP' }\n\t];\n\n\t// Account type definitions with descriptions\n\tconst accountTypes = [\n\t\t{ \n\t\t\tid: 'personal', \n\t\t\tname: 'Personal Account', \n\t\t\tdescription: 'Individual wallet addresses you want to track',\n\t\t\ticon: '👤'\n\t\t},\n\t\t{ \n\t\t\tid: 'exchange', \n\t\t\tname: 'Exchange Account', \n\t\t\tdescription: 'Centralized exchange accounts for portfolio tracking',\n\t\t\ticon: '🏦'\n\t\t},\n\t\t{ \n\t\t\tid: 'whale', \n\t\t\tname: 'Whale Watching', \n\t\t\tdescription: 'High-value accounts for social trading intelligence',\n\t\t\ticon: '🐋'\n\t\t},\n\t\t{ \n\t\t\tid: 'institution', \n\t\t\tname: 'Institutional', \n\t\t\tdescription: 'Corporate or institutional wallet addresses',\n\t\t\ticon: '🏢'\n\t\t},\n\t\t{ \n\t\t\tid: 'contract', \n\t\t\tname: 'Smart Contract', \n\t\t\tdescription: 'DeFi protocols and smart contract addresses',\n\t\t\ticon: '📜'\n\t\t}\n\t];\n\n\tonMount(async () => {\n\t\tawait loadWatchAccounts();\n\t});\n\n\tasync function loadWatchAccounts() {\n\t\ttry {\n\t\t\tisLoading = true;\n\t\t\t// TODO: Load from storage/API\n\t\t\t// For now, using mock data\n\t\t\tawait new Promise(resolve => setTimeout(resolve, 500)); // Simulate loading\n\t\t\t\n\t\t\twatchAccounts = [\n\t\t\t\t{\n\t\t\t\t\tid: '1',\n\t\t\t\t\taddress: '0x742d35cc6129c6532c742fc9d2c1b1e7c15b4c85',\n\t\t\t\t\talias: 'Vitalik Buterin',\n\t\t\t\t\tblockchain: 'ethereum',\n\t\t\t\t\taccountType: 'whale',\n\t\t\t\t\tcategory: 'Influencer',\n\t\t\t\t\ttags: ['ethereum', 'founder', 'whale'],\n\t\t\t\t\tbalance: 2500000,\n\t\t\t\t\tportfolioValue: 125000000,\n\t\t\t\t\tlastActivity: new Date(Date.now() - 3600000),\n\t\t\t\t\tsocialScore: 95,\n\t\t\t\t\tisActive: true,\n\t\t\t\t\tcreatedAt: new Date(Date.now() - 86400000 * 7),\n\t\t\t\t\tnotifications: {\n\t\t\t\t\t\tlargeTransactions: true,\n\t\t\t\t\t\tbalanceChanges: false,\n\t\t\t\t\t\tsocialActivity: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t];\n\n\t\t\t// Load social intelligence data\n\t\t\tsocialData.set('1', {\n\t\t\t\tfollowersCount: 5200000,\n\t\t\t\ttradingActivity: 'whale',\n\t\t\t\treputationScore: 98,\n\t\t\t\trecentTransactions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tamount: 1500000,\n\t\t\t\t\t\tdirection: 'out',\n\t\t\t\t\t\ttimestamp: new Date(Date.now() - 3600000),\n\t\t\t\t\t\tsignificance: 'major'\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tinfluenceMetrics: {\n\t\t\t\t\tcopyTraders: 15000,\n\t\t\t\t\tportfolioMirrors: 8500,\n\t\t\t\t\tsocialMentions: 125000\n\t\t\t\t}\n\t\t\t});\n\n\t\t} catch (err) {\n\t\t\terror = 'Failed to load watch accounts';\n\t\t\tlog.error('Error loading watch accounts:', false, err);\n\t\t} finally {\n\t\t\tisLoading = false;\n\t\t}\n\t}\n\n\tasync function addWatchAccount() {\n\t\ttry {\n\t\t\tif (!newAccountForm.address || !newAccountForm.alias) {\n\t\t\t\terror = 'Address and alias are required';\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newAccount: WatchAccount = {\n\t\t\t\tid: Date.now().toString(),\n\t\t\t\t...newAccountForm,\n\t\t\t\ttags: newAccountForm.tags.filter(tag => tag.trim()),\n\t\t\t\tbalance: 0,\n\t\t\t\tportfolioValue: 0,\n\t\t\t\tlastActivity: new Date(),\n\t\t\t\tsocialScore: 0,\n\t\t\t\tisActive: true,\n\t\t\t\tcreatedAt: new Date()\n\t\t\t};\n\n\t\t\twatchAccounts = [...watchAccounts, newAccount];\n\n\t\t\t// Reset form\n\t\t\tnewAccountForm = {\n\t\t\t\taddress: '',\n\t\t\t\talias: '',\n\t\t\t\tblockchain: 'ethereum',\n\t\t\t\taccountType: 'personal',\n\t\t\t\tcategory: '',\n\t\t\t\ttags: [],\n\t\t\t\tnotifications: {\n\t\t\t\t\tlargeTransactions: true,\n\t\t\t\t\tbalanceChanges: false,\n\t\t\t\t\tsocialActivity: false\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// TODO: Save to storage/API\n\t\t\tlog.info('Added new watch account:', false, newAccount);\n\n\t\t} catch (err) {\n\t\t\terror = 'Failed to add watch account';\n\t\t\tlog.error('Error adding watch account:', false, err);\n\t\t}\n\t}\n\n\tfunction removeWatchAccount(accountId: string) {\n\t\twatchAccounts = watchAccounts.filter(acc => acc.id !== accountId);\n\t\tif (selectedAccount?.id === accountId) {\n\t\t\tselectedAccount = null;\n\t\t}\n\t\t// TODO: Update storage/API\n\t}\n\n\tfunction selectAccount(account: WatchAccount) {\n\t\tselectedAccount = account;\n\t\tactiveTab = 'analytics';\n\t}\n\n\tfunction addTag(tag: string) {\n\t\tif (tag.trim() && !newAccountForm.tags.includes(tag.trim())) {\n\t\t\tnewAccountForm.tags = [...newAccountForm.tags, tag.trim()];\n\t\t}\n\t}\n\n\tfunction removeTag(index: number) {\n\t\tnewAccountForm.tags = newAccountForm.tags.filter((_, i) => i !== index);\n\t}\n\n\tfunction formatBalance(value: number): string {\n\t\tif (value >= 1000000) {\n\t\t\treturn `$${(value / 1000000).toFixed(2)}M`;\n\t\t}\n\t\tif (value >= 1000) {\n\t\t\treturn `$${(value / 1000).toFixed(1)}K`;\n\t\t}\n\t\treturn `$${value.toFixed(2)}`;\n\t}\n\n\tfunction getAccountTypeInfo(type: string) {\n\t\treturn accountTypes.find(t => t.id === type) || accountTypes[0];\n\t}\n\n\tfunction getActivityColor(activity: string): string {\n\t\tswitch (activity) {\n\t\t\tcase 'whale': return 'text-purple-600 bg-purple-100';\n\t\t\tcase 'high': return 'text-red-600 bg-red-100';\n\t\t\tcase 'medium': return 'text-orange-600 bg-orange-100';\n\t\t\tcase 'low': return 'text-green-600 bg-green-100';\n\t\t\tdefault: return 'text-gray-600 bg-gray-100';\n\t\t}\n\t}\n\n\tfunction handleClose() {\n\t\terror = '';\n\t\tselectedAccount = null;\n\t\tactiveTab = 'accounts';\n\t\tonClose();\n\t}\n\n\tfunction handleComplete() {\n\t\tonComplete?.();\n\t\thandleClose();\n\t}\n</script>\n\n{#if show}\n\t<Modal \n\t\ttitle=\"Watcher - Portfolio Tracking & Social Intelligence\" \n\t\tshow={true} \n\t\tonClose={handleClose}\n\t\tsize=\"xl\"\n\t>\n\t\t{#snippet body()}\n\t\t\t<div class=\"flex h-[600px]\">\n\t\t\t\t<!-- Sidebar Navigation -->\n\t\t\t\t<div class=\"w-48 bg-gray-50 border-r border-gray-200 p-4\">\n\t\t\t\t\t<nav class=\"space-y-2\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonclick={() => activeTab = 'accounts'}\n\t\t\t\t\t\t\tclass=\"w-full text-left px-3 py-2 rounded-md text-sm font-medium transition-colors {activeTab === 'accounts' ? 'bg-indigo-100 text-indigo-700' : 'text-gray-600 hover:bg-gray-100'}\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t📋 Watch Accounts\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonclick={() => activeTab = 'analytics'}\n\t\t\t\t\t\t\tclass=\"w-full text-left px-3 py-2 rounded-md text-sm font-medium transition-colors {activeTab === 'analytics' ? 'bg-indigo-100 text-indigo-700' : 'text-gray-600 hover:bg-gray-100'}\"\n\t\t\t\t\t\t\tdisabled={!selectedAccount}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t📊 Analytics\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonclick={() => activeTab = 'social'}\n\t\t\t\t\t\t\tclass=\"w-full text-left px-3 py-2 rounded-md text-sm font-medium transition-colors {activeTab === 'social' ? 'bg-indigo-100 text-indigo-700' : 'text-gray-600 hover:bg-gray-100'}\"\n\t\t\t\t\t\t\tdisabled={!selectedAccount}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t🌐 Social Intel\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonclick={() => activeTab = 'alerts'}\n\t\t\t\t\t\t\tclass=\"w-full text-left px-3 py-2 rounded-md text-sm font-medium transition-colors {activeTab === 'alerts' ? 'bg-indigo-100 text-indigo-700' : 'text-gray-600 hover:bg-gray-100'}\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t🔔 Alerts\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</nav>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Main Content -->\n\t\t\t\t<div class=\"flex-1 p-6\">\n\t\t\t\t\t{#if error}\n\t\t\t\t\t\t<div class=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-md\">\n\t\t\t\t\t\t\t<p class=\"text-red-700 text-sm\">{error}</p>\n\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\t\tonclick={() => error = ''}\n\t\t\t\t\t\t\t\tclass=\"text-red-600 hover:text-red-800 text-xs underline mt-1\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tDismiss\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\n\t\t\t\t\t{#if activeTab === 'accounts'}\n\t\t\t\t\t\t<!-- Watch Accounts Management -->\n\t\t\t\t\t\t<div class=\"space-y-6\">\n\t\t\t\t\t\t\t<div class=\"flex items-center justify-between\">\n\t\t\t\t\t\t\t\t<h3 class=\"text-lg font-semibold text-gray-900\">Watch Accounts</h3>\n\t\t\t\t\t\t\t\t<span class=\"text-sm text-gray-500\">{watchAccounts.length} accounts</span>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<!-- Add New Account Form -->\n\t\t\t\t\t\t\t<div class=\"bg-gray-50 p-4 rounded-lg\">\n\t\t\t\t\t\t\t\t<h4 class=\"font-medium text-gray-900 mb-3\">Add New Watch Account</h4>\n\t\t\t\t\t\t\t\t<div class=\"grid grid-cols-2 gap-4\">\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<label for=\"watcher-address\" class=\"block text-sm font-medium text-gray-700 mb-1\">Address</label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tid=\"watcher-address\"\n\t\t\t\t\t\t\t\t\t\t\tbind:value={newAccountForm.address}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"0x... or wallet address\"\n\t\t\t\t\t\t\t\t\t\t\tclass=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<label for=\"watcher-alias\" class=\"block text-sm font-medium text-gray-700 mb-1\">Alias</label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tid=\"watcher-alias\"\n\t\t\t\t\t\t\t\t\t\t\tbind:value={newAccountForm.alias}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Display name\"\n\t\t\t\t\t\t\t\t\t\t\tclass=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<label for=\"watcher-blockchain\" class=\"block text-sm font-medium text-gray-700 mb-1\">Blockchain</label>\n\t\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\t\tid=\"watcher-blockchain\"\n\t\t\t\t\t\t\t\t\t\t\tbind:value={newAccountForm.blockchain}\n\t\t\t\t\t\t\t\t\t\t\tclass=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{#each supportedBlockchains as blockchain}\n\t\t\t\t\t\t\t\t\t\t\t\t<option value={blockchain.id}>{blockchain.name} ({blockchain.symbol})</option>\n\t\t\t\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<label for=\"watcher-account-type\" class=\"block text-sm font-medium text-gray-700 mb-1\">Account Type</label>\n\t\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\t\tid=\"watcher-account-type\"\n\t\t\t\t\t\t\t\t\t\t\tbind:value={newAccountForm.accountType}\n\t\t\t\t\t\t\t\t\t\t\tclass=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{#each accountTypes as type}\n\t\t\t\t\t\t\t\t\t\t\t\t<option value={type.id}>{type.icon} {type.name}</option>\n\t\t\t\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"mt-4 flex gap-2\">\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tid=\"watcher-tags\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Add tags (press Enter)\"\n\t\t\t\t\t\t\t\t\t\taria-label=\"Add tags for the watch account\"\n\t\t\t\t\t\t\t\t\t\tclass=\"flex-1 px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n\t\t\t\t\t\t\t\t\t\tonkeydown={(e) => {\n\t\t\t\t\t\t\t\t\t\t\tif (e.key === 'Enter') {\n\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\t\t\t\taddTag(e.currentTarget.value);\n\t\t\t\t\t\t\t\t\t\t\t\te.currentTarget.value = '';\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tonclick={addWatchAccount}\n\t\t\t\t\t\t\t\t\t\tclass=\"px-4 py-2 bg-indigo-600 text-white rounded-md text-sm hover:bg-indigo-700 transition-colors\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tAdd Account\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{#if newAccountForm.tags.length > 0}\n\t\t\t\t\t\t\t\t\t<div class=\"mt-2 flex flex-wrap gap-1\">\n\t\t\t\t\t\t\t\t\t\t{#each newAccountForm.tags as tag, index}\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"inline-flex items-center gap-1 px-2 py-1 bg-indigo-100 text-indigo-700 rounded text-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t{tag}\n\t\t\t\t\t\t\t\t\t\t\t\t<button onclick={() => removeTag(index)} class=\"text-indigo-500 hover:text-indigo-700\">×</button>\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<!-- Watch Accounts List -->\n\t\t\t\t\t\t\t<div class=\"space-y-3\">\n\t\t\t\t\t\t\t\t{#if isLoading}\n\t\t\t\t\t\t\t\t\t<div class=\"flex justify-center py-8\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"animate-spin rounded-full h-8 w-8 border-2 border-indigo-500 border-t-transparent\"></div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{:else if watchAccounts.length === 0}\n\t\t\t\t\t\t\t\t\t<div class=\"text-center py-8 text-gray-500\">\n\t\t\t\t\t\t\t\t\t\t<p>No watch accounts added yet</p>\n\t\t\t\t\t\t\t\t\t\t<p class=\"text-sm\">Add accounts above to start tracking portfolios and social activity</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t{#each watchAccounts as account}\n\t\t\t\t\t\t\t\t\t\t<div class=\"bg-white border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"flex items-center justify-between\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"flex items-center gap-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"text-2xl\">{getAccountTypeInfo(account.accountType).icon}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"font-medium text-gray-900\">{account.alias}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"text-sm text-gray-500 font-mono\">{account.address.slice(0, 10)}...{account.address.slice(-8)}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"flex items-center gap-2 mt-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"px-2 py-1 bg-gray-100 text-gray-700 rounded text-xs\">{account.blockchain}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"px-2 py-1 bg-blue-100 text-blue-700 rounded text-xs\">{getAccountTypeInfo(account.accountType).name}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{#each account.tags as tag}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"px-2 py-1 bg-indigo-100 text-indigo-700 rounded text-xs\">{tag}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"text-right\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{#if account.portfolioValue}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"font-semibold text-gray-900\">{formatBalance(account.portfolioValue)}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{#if account.socialScore}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"text-sm text-gray-500\">Social: {account.socialScore}/100</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"flex gap-2 mt-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SimpleTooltip content=\"View analytics\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonclick={() => selectAccount(account)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"px-3 py-1 bg-indigo-100 text-indigo-700 rounded text-xs hover:bg-indigo-200\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAnalyze\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</SimpleTooltip>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SimpleTooltip content=\"Remove account\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonclick={() => removeWatchAccount(account.id)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"px-3 py-1 bg-red-100 text-red-700 rounded text-xs hover:bg-red-200\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRemove\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</SimpleTooltip>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t{:else if activeTab === 'analytics' && selectedAccount}\n\t\t\t\t\t\t<!-- Analytics View -->\n\t\t\t\t\t\t<div class=\"space-y-6\">\n\t\t\t\t\t\t\t<div class=\"flex items-center gap-3\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tonclick={() => activeTab = 'accounts'}\n\t\t\t\t\t\t\t\t\tclass=\"text-indigo-600 hover:text-indigo-800\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t← Back\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<h3 class=\"text-lg font-semibold text-gray-900\">Analytics: {selectedAccount.alias}</h3>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div class=\"grid grid-cols-3 gap-4\">\n\t\t\t\t\t\t\t\t<div class=\"bg-gradient-to-r from-blue-500 to-blue-600 p-4 rounded-lg text-white\">\n\t\t\t\t\t\t\t\t\t<div class=\"text-sm opacity-90\">Portfolio Value</div>\n\t\t\t\t\t\t\t\t\t<div class=\"text-2xl font-bold\">{formatBalance(selectedAccount.portfolioValue || 0)}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"bg-gradient-to-r from-green-500 to-green-600 p-4 rounded-lg text-white\">\n\t\t\t\t\t\t\t\t\t<div class=\"text-sm opacity-90\">Social Score</div>\n\t\t\t\t\t\t\t\t\t<div class=\"text-2xl font-bold\">{selectedAccount.socialScore || 0}/100</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"bg-gradient-to-r from-purple-500 to-purple-600 p-4 rounded-lg text-white\">\n\t\t\t\t\t\t\t\t\t<div class=\"text-sm opacity-90\">Account Type</div>\n\t\t\t\t\t\t\t\t\t<div class=\"text-lg font-semibold\">{getAccountTypeInfo(selectedAccount.accountType).name}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div class=\"text-center py-12 text-gray-500\">\n\t\t\t\t\t\t\t\t<p>📊 Advanced portfolio analytics coming soon</p>\n\t\t\t\t\t\t\t\t<p class=\"text-sm\">Balance trends, transaction analysis, and performance metrics</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t{:else if activeTab === 'social' && selectedAccount}\n\t\t\t\t\t\t<!-- Social Intelligence View -->\n\t\t\t\t\t\t<div class=\"space-y-6\">\n\t\t\t\t\t\t\t<div class=\"flex items-center gap-3\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tonclick={() => activeTab = 'accounts'}\n\t\t\t\t\t\t\t\t\tclass=\"text-indigo-600 hover:text-indigo-800\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t← Back\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<h3 class=\"text-lg font-semibold text-gray-900\">Social Intelligence: {selectedAccount.alias}</h3>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t{#if socialData.has(selectedAccount.id)}\n\t\t\t\t\t\t\t\t{@const social = socialData.get(selectedAccount.id)}\n\t\t\t\t\t\t\t\t<div class=\"grid grid-cols-2 gap-6\">\n\t\t\t\t\t\t\t\t\t<div class=\"space-y-4\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"bg-white border border-gray-200 rounded-lg p-4\">\n\t\t\t\t\t\t\t\t\t\t\t<h4 class=\"font-medium text-gray-900 mb-3\">Influence Metrics</h4>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"space-y-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"flex justify-between\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"text-sm text-gray-600\">Copy Traders</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"font-medium\">{social.influenceMetrics.copyTraders.toLocaleString()}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"flex justify-between\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"text-sm text-gray-600\">Portfolio Mirrors</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"font-medium\">{social.influenceMetrics.portfolioMirrors.toLocaleString()}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"flex justify-between\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"text-sm text-gray-600\">Social Mentions</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"font-medium\">{social.influenceMetrics.socialMentions.toLocaleString()}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t<div class=\"bg-white border border-gray-200 rounded-lg p-4\">\n\t\t\t\t\t\t\t\t\t\t\t<h4 class=\"font-medium text-gray-900 mb-3\">Trading Activity</h4>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"flex items-center gap-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"px-2 py-1 rounded text-sm font-medium {getActivityColor(social.tradingActivity)}\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{social.tradingActivity.toUpperCase()}\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"text-sm text-gray-600\">activity level</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"mt-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"text-sm text-gray-600\">Reputation Score: </span>\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"font-medium\">{social.reputationScore}/100</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div class=\"space-y-4\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"bg-white border border-gray-200 rounded-lg p-4\">\n\t\t\t\t\t\t\t\t\t\t\t<h4 class=\"font-medium text-gray-900 mb-3\">Recent Activity</h4>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"space-y-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t{#each social.recentTransactions as tx}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"flex items-center justify-between p-2 bg-gray-50 rounded\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"flex items-center gap-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"text-lg\">{tx.direction === 'in' ? '📈' : '📉'}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"font-medium text-sm\">{formatBalance(tx.amount)}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"text-xs text-gray-500\">{tx.timestamp.toLocaleTimeString()}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"px-2 py-1 bg-orange-100 text-orange-700 rounded text-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tx.significance}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t<div class=\"text-center py-12 text-gray-500\">\n\t\t\t\t\t\t\t\t\t<p>🌐 Social intelligence data not available</p>\n\t\t\t\t\t\t\t\t\t<p class=\"text-sm\">Connect social data sources to see influence metrics</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t{:else if activeTab === 'alerts'}\n\t\t\t\t\t\t<!-- Alerts Configuration -->\n\t\t\t\t\t\t<div class=\"space-y-6\">\n\t\t\t\t\t\t\t<h3 class=\"text-lg font-semibold text-gray-900\">Alert Configuration</h3>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"text-center py-12 text-gray-500\">\n\t\t\t\t\t\t\t\t<p>🔔 Smart alerts coming soon</p>\n\t\t\t\t\t\t\t\t<p class=\"text-sm\">Large transactions, social activity, and portfolio changes</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t{/snippet}\n\n\t\t{#snippet footer()}\n\t\t\t<div class=\"flex justify-between\">\n\t\t\t\t<div class=\"text-sm text-gray-500\">\n\t\t\t\t\t{#if activeTab === 'accounts'}\n\t\t\t\t\t\tPro feature: Advanced portfolio tracking & social intelligence\n\t\t\t\t\t{:else if selectedAccount}\n\t\t\t\t\t\tAnalyzing: {selectedAccount.alias}\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"flex gap-3\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tonclick={handleClose}\n\t\t\t\t\t\tclass=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50\"\n\t\t\t\t\t>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</button>\n\t\t\t\t\t{#if activeTab === 'accounts'}\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonclick={handleComplete}\n\t\t\t\t\t\t\tclass=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSave Changes\n\t\t\t\t\t\t</button>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t{/snippet}\n\t</Modal>\n{/if}","<!-- WatchList.svelte - Legacy wrapper for new Watcher component -->\n<script lang=\"ts\">\n\timport Watcher from './Watcher.svelte';\n\n\tinterface Props {\n\t\tshow?: boolean;\n\t\tonClose?: () => void;\n\t\tonComplete?: () => void;\n\t}\n\n\tlet {\n\t\tshow = $bindable(false),\n\t\tonClose = () => (show = false),\n\t\tonComplete = () => {}\n\t}: Props = $props();\n</script>\n\n<!-- Use the new advanced Watcher component -->\n<Watcher\n\tbind:show={show}\n\tonClose={onClose}\n\tonComplete={onComplete}\n/>","<script lang=\"ts\">\n\timport { goto } from '$app/navigation';\n\timport { PATH_LOGOUT } from '$lib/common';\n\timport { showProfileSettingsModal } from '$lib/common/stores/ui';\n\timport Avatar from './Avatar.svelte';\n\timport Profile from './Profile.svelte';\n\timport Settings from './Settings.svelte';\n\timport WatchList from './WatchList.svelte';\n\timport SimpleTooltip from './SimpleTooltip.svelte';\n\timport { onMount, onDestroy } from 'svelte';\n\timport { getSettings } from '$lib/common/stores';\n\timport { shouldShowProFeatures } from '$lib/common/token-analytics';\n\timport { PlanType } from '$lib/common/types';\n\timport type { Settings } from '$lib/common/interfaces';\n\n\tconst props = $props<{\n\t\tuserName?: string;\n\t\tavatarUrl?: string;\n\t}>();\n\n\tlet showProfileModal = $state(false);\n\tlet showSettingsModal = $state(false);\n\tlet showWatchListModal = $state(false);\n\tlet offcanvasElement: HTMLElement;\n\tlet isHoveringMenu = $state(false);\n\tlet hoverTimeout: number | null = null;\n\tlet settings: Settings | null = null;\n\tlet isProUser = $state(false);\n\n\tonMount(async () => {\n\t\t// Load settings to check membership\n\t\tsettings = await getSettings();\n\t\tisProUser = shouldShowProFeatures(settings?.plan?.type || PlanType.BASIC_MEMBER);\n\n\t\t// Add click outside listener (browser only)\n\t\tif (typeof window !== 'undefined') {\n\t\t\tsetupClickOutsideListener();\n\t\t}\n\t});\n\n\tonDestroy(() => {\n\t\t// Cleanup event listeners (browser only)\n\t\tif (typeof window !== 'undefined' && typeof document !== 'undefined') {\n\t\t\tdocument.removeEventListener('click', handleClickOutside);\n\t\t}\n\t\t// Cleanup hover timeout\n\t\tif (hoverTimeout) {\n\t\t\tclearTimeout(hoverTimeout);\n\t\t}\n\t});\n\n\tfunction setupClickOutsideListener() {\n\t\tif (typeof document !== 'undefined') {\n\t\t\tdocument.addEventListener('click', handleClickOutside);\n\t\t}\n\t}\n\n\tfunction handleClickOutside(event: MouseEvent) {\n\t\tif (!offcanvasElement) return;\n\t\t\n\t\tconst target = event.target as HTMLElement;\n\t\tconst isOffcanvasVisible = offcanvasElement.classList.contains('show');\n\t\t\n\t\t// Check if click is outside the offcanvas and not on a trigger button\n\t\tconst isClickOutside = !offcanvasElement.contains(target);\n\t\tconst isNotTrigger = !target.closest('[data-bs-toggle=\"offcanvas\"][data-bs-target=\"#offcanvasProfileMenu\"]');\n\t\t\n\t\tif (isOffcanvasVisible && isClickOutside && isNotTrigger) {\n\t\t\tcloseOffcanvas();\n\t\t}\n\t}\n\n\tfunction closeOffcanvas() {\n\t\tif (typeof window !== 'undefined' && window.bootstrap) {\n\t\t\tconst offcanvasInstance = window.bootstrap.Offcanvas.getInstance(offcanvasElement);\n\t\t\tif (offcanvasInstance) {\n\t\t\t\toffcanvasInstance.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleMenuMouseEnter() {\n\t\tisHoveringMenu = true;\n\t\tif (hoverTimeout) {\n\t\t\tclearTimeout(hoverTimeout);\n\t\t\thoverTimeout = null;\n\t\t}\n\t}\n\n\tfunction handleMenuMouseLeave() {\n\t\tisHoveringMenu = false;\n\t\t// Start timeout to close menu when mouse leaves\n\t\thoverTimeout = setTimeout(() => {\n\t\t\tcloseOffcanvas();\n\t\t}, 500) as unknown as number; // 500ms delay when leaving menu\n\t}\n\n\tfunction handleLogout() {\n\t\tgoto(PATH_LOGOUT);\n\t}\n\n\tfunction openProfile() {\n\t\tshowProfileModal = true;\n\t}\n\n\tfunction openSettings() {\n\t\tshowSettingsModal = true;\n\t}\n\n\tfunction openWatchList() {\n\t\tif (!isProUser) return;\n\t\tshowWatchListModal = true;\n\t}\n\n\tfunction handleProfileComplete() {\n\t\t// Refresh page or update stores as needed\n\t\tshowProfileModal = false;\n\t}\n\n\tfunction handleSettingsComplete() {\n\t\t// Refresh page or update stores as needed\n\t\tshowSettingsModal = false;\n\t}\n\n\tfunction handleWatchListComplete() {\n\t\t// Refresh page or update stores as needed\n\t\tshowWatchListModal = false;\n\t}\n</script>\n\n<div\n\tbind:this={offcanvasElement}\n\tclass=\"z-100 offcanvas offcanvas-end top-0 right-0 fixed bottom-auto flex flex-col min-w-[200px] max-w-[280px] font-sans antialiased invisible bg-clip-padding shadow-sm outline-none transition duration-300 ease-in-out border-none rounded-l-md bg-primary text-base-content\"\n\ttabindex=\"-1\"\n\tid=\"offcanvasProfileMenu\"\n\taria-labelledby=\"offcanvasProfileMenuLabel\"\n\trole=\"dialog\"\n\taria-modal=\"true\"\n\tonmouseenter={handleMenuMouseEnter}\n\tonmouseleave={handleMenuMouseLeave}\n>\n\t<!-- Header -->\n\t<div class=\"offcanvas-header flex items-center justify-between px-4 pt-2 pb-2 bg-primary-200\">\n\t\t<h5 class=\"offcanvas-title font-semibold\" id=\"offcanvasProfileMenuLabel\">Profile</h5>\n\t\t<button\n\t\t\ttype=\"button\"\n\t\t\tclass=\"text-base-content opacity-60 hover:opacity-100\"\n\t\t\tdata-bs-dismiss=\"offcanvas\"\n\t\t\taria-label=\"Close\"\n\t\t>\n\t\t\t<svg\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\tclass=\"w-5 h-5\"\n\t\t\t\tfill=\"none\"\n\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\tstroke=\"currentColor\"\n\t\t\t\tstroke-width=\"2\"\n\t\t\t>\n\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n\t\t\t</svg>\n\t\t</button>\n\t</div>\n\n\t<hr class=\"my-1 border-base-content/20\" />\n\n\t<!-- User Info -->\n\t<div class=\"flex items-center gap-3 px-4 py-3\">\n\t\t<Avatar\n\t\t\turl={props.avatarUrl}\n\t\t\tariaLabel=\"Profile\"\n\t\t\tclassName=\"w-10 h-10 rounded-full ring-2 ring-offset-1\"\n\t\t/>\n\t\t<div class=\"text-sm font-semibold\">{props.userName ?? 'Anonymous Yakker'}</div>\n\t</div>\n\n\t<hr class=\"my-1 border-base-content/20\" />\n\n\t<!-- Menu Items -->\n\t<ul class=\"px-2 space-y-1\">\n\t\t<li data-bs-dismiss=\"offcanvas\">\n\t\t\t<button\n\t\t\t\tonclick={openProfile}\n\t\t\t\tclass=\"w-full text-left px-4 py-2 rounded-md text-sm hover:bg-primary-100 transition\"\n\t\t\t>\n\t\t\t\t👤 Profile\n\t\t\t</button>\n\t\t</li>\n\t\t<li data-bs-dismiss=\"offcanvas\">\n\t\t\t<button\n\t\t\t\tonclick={openSettings}\n\t\t\t\tclass=\"w-full text-left px-4 py-2 rounded-md text-sm hover:bg-primary-100 transition\"\n\t\t\t>\n\t\t\t\t⚙️ Account Settings\n\t\t\t</button>\n\t\t</li>\n\t\t<li data-bs-dismiss={isProUser ? \"offcanvas\" : \"\"}>\n\t\t\t{#if isProUser}\n\t\t\t\t<button\n\t\t\t\t\tonclick={openWatchList}\n\t\t\t\t\tclass=\"w-full text-left px-4 py-2 rounded-md text-sm hover:bg-primary-100 transition flex items-center gap-2\"\n\t\t\t\t>\n\t\t\t\t\t<svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t<path d=\"M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,4.5C17,4.5 21.27,7.61 23,12C21.27,16.39 17,19.5 12,19.5C7,19.5 2.73,16.39 1,12C2.73,7.61 7,4.5 12,4.5M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7Z\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t\tWatch Accounts\n\t\t\t\t</button>\n\t\t\t{:else}\n\t\t\t\t<SimpleTooltip content=\"Upgrade to Pro for portfolio tracking, whale watching, and social trading intelligence\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tdisabled\n\t\t\t\t\t\tclass=\"w-full text-left px-4 py-2 rounded-md text-sm text-gray-400 cursor-not-allowed flex items-center gap-2\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t<path d=\"M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,4.5C17,4.5 21.27,7.61 23,12C21.27,16.39 17,19.5 12,19.5C7,19.5 2.73,16.39 1,12C2.73,7.61 7,4.5 12,4.5M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7Z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t\tWatch Accounts\n\t\t\t\t\t\t<div class=\"w-3 h-3 bg-gradient-to-r from-indigo-400 to-purple-400 rounded-full flex items-center justify-center ml-auto\">\n\t\t\t\t\t\t\t<svg class=\"w-2 h-2 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n\t\t\t\t\t\t\t\t<path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</button>\n\t\t\t\t</SimpleTooltip>\n\t\t\t{/if}\n\t\t</li>\n\t\t<li data-bs-dismiss=\"offcanvas\">\n\t\t\t<button\n\t\t\t\tonclick={handleLogout}\n\t\t\t\tclass=\"w-full text-left px-4 py-2 rounded-md text-sm text-red-600 hover:text-red-800 hover:bg-primary-100 transition\"\n\t\t\t>\n\t\t\t\t🔒 Logout\n\t\t\t</button>\n\t\t</li>\n\t</ul>\n\n\t<hr class=\"my-1 border-base-content/20\" />\n\n\t<div class=\"text-center py-2 bg-primary\">\n\t\t<a\n\t\t\tclass=\"text-sm font-semibold text-base-content hover:underline\"\n\t\t\thref=\"https://yakkl.com/?utm_source=yakkl&utm_medium=extension&utm_campaign=extension&utm_content=profile&utm_term=extension\"\n\t\t\ttarget=\"_blank\"\n\t\t\trel=\"noreferrer\"\n\t\t>\n\t\t\tyakkl.com\n\t\t</a>\n\t</div>\n</div>\n\n<!-- Profile and Settings Modals -->\n<Profile\n\tbind:show={showProfileModal}\n\tonComplete={handleProfileComplete}\n\tonClose={() => (showProfileModal = false)}\n/>\n\n<Settings\n\tbind:show={showSettingsModal}\n\tonComplete={handleSettingsComplete}\n\tonClose={() => (showSettingsModal = false)}\n/>\n\n<WatchList\n\tbind:show={showWatchListModal}\n\tonComplete={handleWatchListComplete}\n\tonClose={() => (showWatchListModal = false)}\n/>\n","<script lang=\"ts\">\n\timport { onMount } from 'svelte';\n\timport { identicon } from '$lib/utilities';\n\timport { getYakklCurrentlySelected, getProfile, getSettings } from '$lib/common/stores';\n\timport { safeLogout } from '$lib/common/safeNavigate';\n\timport { ExtensionContext } from '$lib/common/shared/BrowserAccessor';\n\timport { browser_ext, browserSvelte } from '$lib/common/environment';\n\timport { BrowserAccessor } from '$lib/common/shared/BrowserAccessor';\n\timport Share from '$lib/components/Share.svelte';\n\timport ImageBar from '$lib/components/ImageBar.svelte';\n\timport PlanBadge from '$lib/components/PlanBadge.svelte';\n\timport OffcanvasMainMenu from './OffcanvasMainMenu.svelte';\n\timport GraduationCapButton from './icons/GraduationCapButton.svelte';\n\timport { log } from '$lib/managers/Logger';\n\timport SimpleTooltip from './SimpleTooltip.svelte';\n\timport OffcanvasProfileMenu from './OffcanvasProfileMenu.svelte';\n\timport Avatar from './Avatar.svelte';\n\timport { goto } from '$app/navigation';\n\timport type { Profile, Settings, ProfileData } from '$lib/common/interfaces';\n\timport { decryptData } from '$lib/common/encryption';\n\timport { isEncryptedData } from '$lib/common/misc';\n\timport { yakklMiscStore } from '$lib/common/stores';\n\timport { get } from 'svelte/store';\n\n\tlet browserContext: ExtensionContext;\n\tlet address = '';\n\tlet imageSRC = '';\n\tlet userName = '';\n\tlet avatarUrl = '';\n\tlet browserAccessor = BrowserAccessor.getInstance();\n\n\tlet hoverTimeoutMain: number | null = null;\n\tlet hoverTimeoutProfile: number | null = null;\n\n\tonMount(async () => {\n\t\ttry {\n\t\t\tbrowserContext = await browserAccessor.getContext();\n\t\t\tconst current = await getYakklCurrentlySelected();\n\t\t\taddress = current.shortcuts.address;\n\t\t\timageSRC = identicon(address || 'default');\n\n\t\t\t// Get profile data for username and avatar\n\t\t\tconst profile = await getProfile();\n\t\t\tif (profile) {\n\t\t\t\tuserName = profile.userName || 'Anonymous Yakker';\n\n\t\t\t\t// Check if profile data is encrypted and decrypt if needed\n\t\t\t\tlet profileData: ProfileData;\n\t\t\t\tif (isEncryptedData(profile.data)) {\n\t\t\t\t\tconst miscStore = get(yakklMiscStore);\n\t\t\t\t\tif (miscStore) {\n\t\t\t\t\t\tprofileData = await decryptData(profile.data, miscStore) as ProfileData;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprofileData = { name: { first: '', last: '' }, email: '', registered: {} } as ProfileData;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tprofileData = profile.data as ProfileData;\n\t\t\t\t}\n\n\t\t\t\t// Set avatar URL - could be from profile data or fallback to identicon\n\t\t\t\tavatarUrl = (profileData.meta as any)?.avatarUrl || imageSRC;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tlog.warn('Error loading profile data in Header:', false, e);\n\t\t\tuserName = 'Anonymous Yakker';\n\t\t\tavatarUrl = imageSRC;\n\t\t}\n\t});\n\n\tfunction handlePopout() {\n\t\tif (browserSvelte) {\n\t\t\tbrowser_ext.runtime.sendMessage({ type: 'popout' });\n\t\t\tsafeLogout();\n\t\t}\n\t}\n\n\tfunction showOffcanvasMain() {\n\t\tif (typeof window !== 'undefined' && (window as any).bootstrap) {\n\t\t\tconst element = document.getElementById('offcanvasMainMenu');\n\t\t\tif (element) {\n\t\t\t\tconst offcanvasInstance = (window as any).bootstrap.Offcanvas.getOrCreateInstance(element);\n\t\t\t\toffcanvasInstance.show();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction hideOffcanvasMain() {\n\t\tif (typeof window !== 'undefined' && (window as any).bootstrap) {\n\t\t\tconst element = document.getElementById('offcanvasMainMenu');\n\t\t\tif (element) {\n\t\t\t\tconst offcanvasInstance = (window as any).bootstrap.Offcanvas.getInstance(element);\n\t\t\t\tif (offcanvasInstance) {\n\t\t\t\t\toffcanvasInstance.hide();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction showOffcanvasProfile() {\n\t\tif (typeof window !== 'undefined' && (window as any).bootstrap) {\n\t\t\tconst element = document.getElementById('offcanvasProfileMenu');\n\t\t\tif (element) {\n\t\t\t\tconst offcanvasInstance = (window as any).bootstrap.Offcanvas.getOrCreateInstance(element);\n\t\t\t\toffcanvasInstance.show();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction hideOffcanvasProfile() {\n\t\tif (typeof window !== 'undefined' && (window as any).bootstrap) {\n\t\t\tconst element = document.getElementById('offcanvasProfileMenu');\n\t\t\tif (element) {\n\t\t\t\tconst offcanvasInstance = (window as any).bootstrap.Offcanvas.getInstance(element);\n\t\t\t\tif (offcanvasInstance) {\n\t\t\t\t\toffcanvasInstance.hide();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleMainMenuHover() {\n\t\tif (hoverTimeoutMain) {\n\t\t\tclearTimeout(hoverTimeoutMain);\n\t\t\thoverTimeoutMain = null;\n\t\t}\n\t\t// Small delay to prevent immediate showing on quick mouse movements\n\t\tsetTimeout(() => {\n\t\t\tshowOffcanvasMain();\n\t\t}, 100);\n\t}\n\n\tfunction handleMainMenuLeave() {\n\t\t// Don't set timeout here, let the menu handle its own timeout\n\t}\n\n\tfunction handleProfileMenuHover() {\n\t\tif (hoverTimeoutProfile) {\n\t\t\tclearTimeout(hoverTimeoutProfile);\n\t\t\thoverTimeoutProfile = null;\n\t\t}\n\t\t// Small delay to prevent immediate showing on quick mouse movements\n\t\tsetTimeout(() => {\n\t\t\tshowOffcanvasProfile();\n\t\t}, 100);\n\t}\n\n\tfunction handleProfileMenuLeave() {\n\t\t// Don't set timeout here, let the menu handle its own timeout\n\t}\n</script>\n\n<ImageBar>\n\t<nav class=\"grid grid-cols-[1fr,2fr,1fr] items-center w-full py-2 px-2 gap-0\">\n\t\t<!-- Left Icon -->\n\t\t<div class=\"flex items-center justify-start gap-4\">\n\t\t\t<SimpleTooltip content=\"Open the main menu\" position=\"right\">\n\t\t\t\t<a\n\t\t\t\t\tdata-bs-toggle=\"offcanvas\"\n\t\t\t\t\thref=\"#offcanvasMainMenu\"\n\t\t\t\t\taria-controls=\"offcanvasMainMenu\"\n\t\t\t\t\trole=\"button\"\n\t\t\t\t\taria-label=\"Menu\"\n\t\t\t\t\tonmouseenter={handleMainMenuHover}\n\t\t\t\t\tonmouseleave={handleMainMenuLeave}\n\t\t\t\t>\n\t\t\t\t\t<svg\n\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\tclass=\"w-7 h-7 fill-gray-100 hover:fill-gray-400\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\t\td=\"M3 5.25a.75.75 0 01.75-.75h16.5a.75.75 0 010 1.5H3.75A.75.75 0 013 5.25zm0 4.5A.75.75 0 013.75 9h16.5a.75.75 0 010 1.5H3.75A.75.75 0 013 9.75zm0 4.5a.75.75 0 01.75-.75h16.5a.75.75 0 010 1.5H3.75a.75.75 0 01-.75-.75zm0 4.5a.75.75 0 01.75-.75h16.5a.75.75 0 010 1.5H3.75a.75.75 0 01-.75-.75z\"\n\t\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</svg>\n\t\t\t\t</a>\n\t\t\t</SimpleTooltip>\n\t\t\t<SimpleTooltip content=\"YAKKL University\" position=\"bottom\">\n\t\t\t\t<GraduationCapButton />\n\t\t\t</SimpleTooltip>\n\t\t\t<!-- New Wallet Demo Button -->\n\t\t\t<SimpleTooltip content=\"Preview new wallet design\" position=\"bottom\">\n\t\t\t\t<button\n\t\t\t\t\tonclick={() => goto('/preview2')}\n\t\t\t\t\tclass=\"flex items-center justify-center w-8 h-8 bg-gradient-to-r from-purple-500 to-indigo-600 rounded-full shadow-md hover:from-purple-600 hover:to-indigo-700 transition-all\"\n\t\t\t\t\taria-label=\"Preview new design\"\n\t\t\t\t>\n\t\t\t\t\t<svg class=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n\t\t\t\t\t</svg>\n\t\t\t\t</button>\n\t\t\t</SimpleTooltip>\n\t\t</div>\n\n\t\t<!-- Center Badge -->\n\t\t<div class=\"flex items-center justify-center\">\n\t\t\t<PlanBadge />\n\t\t</div>\n\n\t\t<!-- Right Icons -->\n\t\t<div class=\"flex items-center justify-end gap-4\">\n\t\t\t<Share />\n\t\t\t{#if browserContext === ExtensionContext.SIDEPANEL}\n\t\t\t\t<button onclick={handlePopout} aria-label=\"Popout\">\n\t\t\t\t\t<!-- popout icon -->\n\t\t\t\t</button>\n\t\t\t{:else}\n\t\t\t\t<SimpleTooltip content=\"Open the profile menu\" position=\"bottom\">\n\t\t\t\t\t<a\n\t\t\t\t\t\tdata-bs-toggle=\"offcanvas\"\n\t\t\t\t\t\thref=\"#offcanvasProfileMenu\"\n\t\t\t\t\t\taria-controls=\"offcanvasProfileMenu\"\n\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\taria-label=\"Menu\"\n\t\t\t\t\t\tonmouseenter={handleProfileMenuHover}\n\t\t\t\t\t\tonmouseleave={handleProfileMenuLeave}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\turl={avatarUrl}\n\t\t\t\t\t\t\tuserName={userName}\n\t\t\t\t\t\t\tariaLabel=\"Profile\"\n\t\t\t\t\t\t\tclassName=\"w-8 h-8 rounded-full ring-2 ring-offset-1\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</SimpleTooltip>\n\t\t\t{/if}\n\t\t</div>\n\t</nav>\n</ImageBar>\n\n<OffcanvasMainMenu />\n\n<OffcanvasProfileMenu {userName} {avatarUrl} />\n","import { getYakklGPTKeyStore } from '$lib/common/stores';\nimport { log } from '$lib/managers/Logger';\nimport OpenAI from 'openai';\n\n/**\n * @param {string} prompt\n */\nexport async function fetchGPT4Response(prompt: string) {\n\tlet response = null;\n\tconst apiKey = getYakklGPTKeyStore();\n\n\ttry {\n\t\tconst openai = new OpenAI({\n\t\t\tapiKey: apiKey,\n\t\t\tdangerouslyAllowBrowser: true // NOTE: This is required for the browser to work. This is a security risk. //TODO: Remove this!!! before pushing to production.\n\t\t});\n\n\t\tresponse = await openai.chat.completions.create({\n\t\t\tmodel: 'gpt-4o',\n\n\t\t\t// NOTE: Add a mission statement to the prompt around crypto. Make sure that no one can change the mission statement.\n\t\t\t// NOTE: Set context and provide an answer to the question such as \"I can't answer the question right now, but I can tell you about crypto.\"\n\t\t\t// NOTE: Prepend the prompt before passing in the prompt.\n\t\t\tmessages: [{ role: 'user', content: prompt }]\n\t\t});\n\n\t\t// Example usage:\n\t\t// \"usage\": {\n\t\t//   \"prompt_tokens\": 9,\n\t\t//   \"completion_tokens\": 12,\n\t\t//   \"total_tokens\": 21\n\t\t// }\n\n\t\treturn { usage: response.usage, content: response.choices[0].message.content };\n\t} catch (error) {\n\t\tlog.error('Error fetching GPT response:', false, error);\n\t\tlog.error('Response:', false, response);\n\n\t\tthrow { error: error, response: response };\n\t}\n}\n","<script lang=\"ts\">\n\timport { browserSvelte } from '$lib/common/environment';\n\t// import { browser as browserSvelte } from '$app/environment';\n\timport { onDestroy, onMount } from 'svelte';\n\timport {\n\t\tyakklChatsStore,\n\t\tgetYakklChats,\n\t\tsetYakklChatsStorage,\n\t\tyakklGPTRunningStore,\n\t\tyakklConnectionStore,\n\t\tyakklGPTKeyStore\n\t} from '$lib/common/stores';\n\timport { autoscroll } from '$lib/utilities';\n\timport { Avatar, Spinner } from 'flowbite-svelte';\n\timport { handleOpenInTab } from '$lib/utilities/utilities';\n\timport ErrorNoAction from '$lib/components/ErrorNoAction.svelte';\n\timport { dateString, formatTimestamp } from '$lib/common/datetime';\n\timport { fetchGPT4Response } from '$lib/api/api-gpt.js';\n\timport { apiKeyFetch } from '$lib/api/apis';\n\timport ClipboardJS from 'clipboard';\n\timport { DEFAULT_PERSONA, VERSION, type YakklChat } from '$lib/common';\n\timport { log } from '$lib/managers/Logger';\n\n\tlet messages = $state<YakklChat[]>([]);\n\tlet error = $state(false);\n\tlet errorValue = $state('An error has occurred. Please try again.');\n\tlet clipboard;\n\tlet showClearWarning = $state(false);\n\n\t$yakklGPTRunningStore = false;\n\n\tif (browserSvelte) {\n\t\ttry {\n\t\t\tclipboard = new ClipboardJS('.clip');\n\t\t} catch (e) {\n\t\t\tlog.error(e);\n\t\t}\n\t}\n\n\tonMount(async () => {\n\t\ttry {\n\t\t\tmessages.length = 0; // Clear existing messages\n\n\t\t\tif ($yakklGPTKeyStore === null || $yakklGPTKeyStore === undefined) {\n\t\t\t\tawait apiKeyFetch(\n\t\t\t\t\timport.meta.env.VITE_GPT_API_KEY_BACKEND_URL,\n\t\t\t\t\timport.meta.env.VITE_GPT_API_KEY_BACKEND\n\t\t\t\t).then((results: any) => {\n\t\t\t\t\tif (results) {\n\t\t\t\t\t\t$yakklGPTKeyStore = results;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow 'Error loading auth.';\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst loadedMessages = await getYakklChats();\n\n\t\t\t// Ensure we have an array and add messages one by one\n\t\t\tif (Array.isArray(loadedMessages)) {\n\t\t\t\tloadedMessages.forEach((msg) => {\n\t\t\t\t\tif (msg && typeof msg === 'object') {\n\t\t\t\t\t\tmessages.push(msg);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tlog.error('Error in onMount:', false, e);\n\t\t\terrorValue = 'Error loading key or chat history. ' + e;\n\t\t\terror = true;\n\t\t}\n\t});\n\n\tonDestroy(async () => {\n\t\tawait storeChats();\n\t});\n\n\tasync function storeChats() {\n\t\ttry {\n\t\t\t// Create a clean array from the messages state\n\t\t\tconst messageArray = Array.isArray(messages) ? [...messages] : [];\n\n\t\t\t// Ensure each message is a proper object before storing\n\t\t\tconst cleanMessages = messageArray.map((msg) => ({\n\t\t\t\ttext: msg.text || '',\n\t\t\t\tsender: msg.sender || '',\n\t\t\t\ttimestamp: msg.timestamp || Date.now().toString(),\n\t\t\t\tusage: msg.usage || {},\n\t\t\t\tid: msg.id || '',\n\t\t\t\tpersona: msg.persona || DEFAULT_PERSONA,\n\t\t\t\tversion: msg.version || VERSION,\n\t\t\t\tcreateDate: msg.createDate || dateString(),\n\t\t\t\tupdateDate: msg.updateDate || dateString()\n\t\t\t}));\n\n\t\t\t// Update the store first\n\t\t\t$yakklChatsStore = cleanMessages;\n\n\t\t\t// Then store in localStorage\n\t\t\tawait setYakklChatsStorage(cleanMessages);\n\t\t} catch (e) {\n\t\t\tlog.error('Error storing chats:', false, e);\n\t\t\tthrow e; // Rethrow if you want to handle it in the calling function\n\t\t}\n\t}\n\n\texport async function handleSendMessage(input: string) {\n\t\tif (input.trim() === '') return;\n\n\t\tlet response = null;\n\t\tlet dateNow = dateString();\n\n\t\ttry {\n\t\t\tif (!$yakklConnectionStore) {\n\t\t\t\tthrow 'Warning. Your Internet connection appears to be down. Try again later.';\n\t\t\t}\n\n\t\t\t$yakklGPTRunningStore = true;\n\n\t\t\tconst newUserMessage = {\n\t\t\t\ttext: input,\n\t\t\t\tsender: 'user',\n\t\t\t\ttimestamp: Date.now().toString(),\n\t\t\t\tusage: {},\n\t\t\t\tid: '',\n\t\t\t\tversion: VERSION,\n\t\t\t\tcreateDate: dateNow,\n\t\t\t\tupdateDate: dateNow\n\t\t\t};\n\n\t\t\tmessages.push(newUserMessage);\n\n\t\t\tresponse = await fetchGPT4Response(input);\n\n\t\t\tlet formattedResponse = response?.content?.replace(/[\\n]+/g, '<br/><br/>');\n\n\t\t\tconst newBotMessage = {\n\t\t\t\ttext: formattedResponse ? formattedResponse : '',\n\t\t\t\tsender: 'yak',\n\t\t\t\ttimestamp: Date.now().toString(),\n\t\t\t\tusage: response?.usage,\n\t\t\t\tid: '',\n\t\t\t\tversion: VERSION,\n\t\t\t\tcreateDate: dateNow,\n\t\t\t\tupdateDate: dateNow\n\t\t\t};\n\n\t\t\tmessages.push(newBotMessage);\n\n\t\t\t$yakklChatsStore = [...messages];\n\t\t\tawait storeChats();\n\t\t} catch (e: any) {\n\t\t\terrorValue = `An error occurred: ${e?.message || e}`;\n\t\t\terror = true;\n\t\t} finally {\n\t\t\t$yakklGPTRunningStore = false;\n\t\t}\n\t}\n\n\tasync function clearMessages() {\n\t\ttry {\n\t\t\tmessages.length = 0; // This clears the array while maintaining reactivity\n\t\t\t$yakklChatsStore = [];\n\t\t\tawait setYakklChatsStorage([]);\n\t\t\tshowClearWarning = false;\n\t\t} catch (e) {\n\t\t\terrorValue = 'Error clearing messages. ' + e;\n\t\t\terror = true;\n\t\t}\n\t}\n\n\tfunction handlePrint() {\n\t\t// Implement print functionality\n\t\tlog.error('Print functionality not implemented yet');\n\t}\n</script>\n\n<div class=\"flex flex-col h-full\">\n\t<ErrorNoAction bind:show={error} value={errorValue} title=\"ERROR!\" />\n\n\t<div class=\"grid grid-cols-2 gap-4 mb-4 px-2\">\n\t\t<button class=\"btn btn-sm btn-outline w-full\" onclick={handlePrint}>\n\t\t\tPrint conversation\n\t\t</button>\n\t\t<button\n\t\t\tclass=\"btn btn-sm btn-outline btn-error w-full\"\n\t\t\tonclick={() => (showClearWarning = true)}\n\t\t>\n\t\t\tClear messages\n\t\t</button>\n\t\t<button\n\t\t\tclass=\"btn btn-sm btn-primary col-span-2 w-full\"\n\t\t\tonclick={() =>\n\t\t\t\thandleOpenInTab(\n\t\t\t\t\t'https://yakkl.com/university/support?utm_source=yakkl&utm_medium=extension&utm_campaign=yakkl_gpt&utm_content=knowledge_base&utm_term=extension'\n\t\t\t\t)}\n\t\t>\n\t\t\tYAKKL® Knowledge base\n\t\t</button>\n\t</div>\n\n\t<div\n\t\tclass=\"flex-grow overflow-y-auto bg-gray-100 p-4 rounded-lg border border-gray-300\"\n\t\tuse:autoscroll\n\t>\n\t\t{#if messages}\n\t\t\t<pre class=\"hidden\">{JSON.stringify(messages, null, 2)}</pre>\n\t\t\t<!-- Your existing each block -->\n\t\t\t{#each messages as message, i (i)}\n\t\t\t\t<div class=\"mb-4 flex {message.sender === 'user' ? 'justify-end' : 'justify-start'}\">\n\t\t\t\t\t<div class=\"flex items-start max-w-[70%]\">\n\t\t\t\t\t\t{#if message.sender !== 'user'}\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc=\"/images/bot-avatar.png\"\n\t\t\t\t\t\t\t\talt=\"Bot avatar\"\n\t\t\t\t\t\t\t\tclass=\"w-8 h-8 rounded-full mr-2\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass=\"{message.sender === 'user'\n\t\t\t\t\t\t\t\t? 'bg-blue-500 text-white'\n\t\t\t\t\t\t\t\t: 'bg-gray-300 text-gray-700'} rounded-lg p-3\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<p>{@html message.text}</p>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\"text-xs mt-1 {message.sender === 'user' ? 'text-blue-200' : 'text-gray-700'}\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{formatTimestamp(message.timestamp)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{#if message.sender === 'user'}\n\t\t\t\t\t\t\t<Avatar class=\"w-8 h-8 rounded-full ml-2\" />\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t{/each}\n\t\t{/if}\n\t\t{#if $yakklGPTRunningStore}\n\t\t\t<div class=\"flex justify-center items-center\">\n\t\t\t\t<Spinner color=\"purple\" size={8} />\n\t\t\t</div>\n\t\t{/if}\n\t</div>\n</div>\n\n{#if showClearWarning}\n\t<div class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n\t\t<div class=\"bg-white p-6 rounded-lg shadow-xl\">\n\t\t\t<h3 class=\"text-lg font-bold mb-4\">Clear all messages?</h3>\n\t\t\t<p class=\"mb-4\">Are you sure you want to clear all messages? This action cannot be undone.</p>\n\t\t\t<div class=\"flex justify-end\">\n\t\t\t\t<button class=\"btn btn-sm btn-outline mr-2\" onclick={() => (showClearWarning = false)}\n\t\t\t\t\t>Cancel</button\n\t\t\t\t>\n\t\t\t\t<button class=\"btn btn-sm btn-error\" onclick={clearMessages}>Clear</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n{/if}\n","<script lang=\"ts\">\n\timport Modal from './Modal.svelte';\n\timport Chatbot from './Chatbot.svelte';\n\n\tinterface Props {\n\t\tshow?: boolean;\n\t}\n\n\tlet { show = $bindable(false) }: Props = $props();\n\n\tlet input = $state('');\n\tlet chatbotComponent: Chatbot = $state();\n\n\tfunction sendMessage() {\n\t\tif (input.trim() !== '') {\n\t\t\tchatbotComponent.handleSendMessage(input);\n\t\t\tinput = '';\n\t\t}\n\t}\n</script>\n\n<Modal\n\tbind:show\n\ttitle=\"YAKKL AI (LIMITED preview)\"\n\tclassName=\"z-[999] w-[100%] h-[90vh] max-w-none\"\n>\n\t<Chatbot bind:this={chatbotComponent} />\n\n\t{#snippet footer()}\n\t\t<div class=\"flex w-full items-center\">\n\t\t\t<textarea\n\t\t\t\tbind:value={input}\n\t\t\t\tclass=\"flex-grow rounded-l-lg textarea textarea-bordered resize-none h-20 bg-gray-200 text-gray-950\"\n\t\t\t\tplaceholder=\"Type your question...\"\n\t\t\t\trows=\"3\"\n\t\t\t\tonkeydown={(e) => {\n\t\t\t\t\tif (e.key === 'Enter' && !e.shiftKey) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tsendMessage();\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t></textarea>\n\t\t\t<button class=\"btn btn-primary rounded-r-lg h-20\" onclick={sendMessage}>Send</button>\n\t\t</div>\n\t\t<p class=\"text-xs text-gray-500 mt-2\">\n\t\t\tPowered by OpenAI and/or Claude. Limited preview w/restrictions. Use with caution.\n\t\t</p>\n\t{/snippet}\n</Modal>\n","<script lang=\"ts\">\n\t//@ts-ignore\n\timport { handleOpenInTab } from '$lib/utilities/utilities';\n\n\tinterface Props {\n\t\tshow?: boolean;\n\t}\n\n\tlet { show = $bindable(false) }: Props = $props();\n\n\tfunction handleBuy(_e: any) {\n\t\tshow = false;\n\t\thandleOpenInTab(\n\t\t\t'https://yakkl.com/crypto/buy?utm_source=yakkl&utm_medium=extension&utm_campaign=buy&utm_content=extension&utm_term=extension'\n\t\t);\n\t}\n</script>\n\n<div class=\"modal\" class:modal-open={show}>\n\t<div class=\"modal-box relative justify-center\">\n\t\t<h3 class=\"text-lg font-bold\">Buy Crypto</h3>\n\t\t<p class=\"py-4\">Stripe is our provider and this launches a buy page in the browser...</p>\n\t\t<div class=\"modal-action\">\n\t\t\t<button\n\t\t\t\tclass=\"btn\"\n\t\t\t\tonclick={() => {\n\t\t\t\t\tshow = false;\n\t\t\t\t}}>Cancel</button\n\t\t\t>\n\t\t\t<button class=\"btn\" onclick={handleBuy}\n\t\t\t\t>Continue\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tstroke-width=\"1.5\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tclass=\"w-4 h-4\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\td=\"M13.5 6H5.25A2.25 2.25 0 003 8.25v10.5A2.25 2.25 0 005.25 21h10.5A2.25 2.25 0 0018 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25\"\n\t\t\t\t\t/>\n\t\t\t\t</svg>\n\t\t\t</button>\n\t\t</div>\n\t</div>\n</div>\n","<script lang=\"ts\">\n\timport { goto } from '$app/navigation';\n\timport {\n\t\tPATH_WELCOME,\n\t\tPATH_LOGIN,\n\t\tYEAR,\n\t\tVERSION,\n\t\tPATH_ETHEREUM_TRANSACTIONS_SEND,\n\t\tRegisteredType,\n\t\ttype Settings,\n\t\ttype SwapPriceProvider,\n\t\ttype ActiveTab,\n\t\tPlanType\n\t} from '$lib/common';\n\timport { getYakklCurrentlySelected } from '$lib/common/stores';\n\timport ChatbotModal from './ChatbotModal.svelte';\n\timport Buy from '$lib/components/Buy.svelte';\n\timport { onMount } from 'svelte';\n\timport { getMiscStore, getSettings } from '$lib/common/stores';\n\timport Swap from './Swap.svelte';\n\timport type { Provider } from '$lib/managers/Provider';\n\timport type { Ethereum } from '$lib/managers/blockchains/evm/ethereum/Ethereum';\n\timport { UniswapSwapManager } from '$lib/managers/UniswapSwapManager';\n\timport { TokenService } from '$lib/managers/blockchains/evm/TokenService';\n\timport type { Wallet } from '$lib/managers/Wallet';\n\timport WalletManager from '$lib/managers/WalletManager';\n\timport { getYakklCurrentlySelectedAccountKey } from '$lib/common/security';\n\timport { log } from '$lib/managers/Logger';\n\timport { openSidePanelOnActiveTab } from '$lib/common/sidepanel';\n\n\tinterface Props {\n\t\t// Defaults for properties. Can be changed when calling component\n\t\tid?: string;\n\t\tcontainerWidth?: string; //\"394\"; // iPhone pro size\n\t\tclassParam?: string;\n\t}\n\n\tlet { id = 'footer', containerWidth = '428', classParam = 'text-center' }: Props = $props();\n\n\tlet showChat = $state(false);\n\tlet showBuy = $state(false);\n\tlet showSwap = $state(false);\n\n\tlet w = 6;\n\tlet h = 6;\n\tlet planType = $state(PlanType.BASIC_MEMBER.toUpperCase()); // Default to Standard\n\n\tlet yakklMiscStore: string;\n\tlet yakklSettingsStore: Settings | null;\n\n\tlet fundingAddress: string = $state(''); //| null | undefined = $yakklCurrentlySelectedStore?.shortcuts.address || null;\n\tlet swapPriceProvider: SwapPriceProvider | null = null; // Don't have to set it to null\n\tlet provider: Provider = $state();\n\tlet chainId = 1;\n\tlet blockchain: Ethereum = $state();\n\tlet swapManager: UniswapSwapManager = $state();\n\tlet tokenService: TokenService<any> = $state();\n\n\tonMount(async () => {\n\t\ttry {\n\t\t\tyakklMiscStore = getMiscStore();\n\t\t\tif (!yakklMiscStore) {\n\t\t\t\treturn; // Don't do anything if not logged in\n\t\t\t}\n\n\t\t\t// Get the settings\n\t\t\tyakklSettingsStore = await getSettings();\n\t\t\tif (yakklSettingsStore) {\n\t\t\t\tplanType = yakklSettingsStore.plan.type.toUpperCase();\n\t\t\t}\n\n\t\t\tconst currentlySelected = await getYakklCurrentlySelected();\n\t\t\tif (currentlySelected) {\n\t\t\t\tfundingAddress = currentlySelected.shortcuts.address;\n\t\t\t}\n\n\t\t\tif (swapPriceProvider === null) {\n\t\t\t\tlet wallet: Wallet | null = null;\n\t\t\t\twallet = WalletManager.getInstance(\n\t\t\t\t\t['Alchemy'],\n\t\t\t\t\t['Ethereum'],\n\t\t\t\t\tchainId ?? 1,\n\t\t\t\t\timport.meta.env.VITE_ALCHEMY_API_KEY_PROD\n\t\t\t\t);\n\t\t\t\tif (wallet) {\n\t\t\t\t\tif (!wallet.getSigner()) {\n\t\t\t\t\t\tconst accountKey = await getYakklCurrentlySelectedAccountKey();\n\t\t\t\t\t\tif (accountKey && accountKey.privateKey) await wallet.setSigner(accountKey.privateKey); // Could have sent this to getInstance as well\n\t\t\t\t\t}\n\n\t\t\t\t\tprovider = wallet.getProvider()!; // Only for testing\n\t\t\t\t\tif (provider) {\n\t\t\t\t\t\tconst signer = wallet.getSigner();\n\t\t\t\t\t\tif (signer) {\n\t\t\t\t\t\t\tprovider.setSigner(signer);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tblockchain = wallet.getBlockchain() as Ethereum;\n\n\t\t\t\t\t\tswapManager = new UniswapSwapManager(blockchain as Ethereum, provider!);\n\t\t\t\t\t\ttokenService = new TokenService(blockchain as Ethereum);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tlog.error(`Footer: onMount - ${e}`);\n\t\t}\n\t});\n\n\tasync function home() {\n\t\tlet path;\n\n\t\tif (!yakklMiscStore) {\n\t\t\tpath = PATH_LOGIN;\n\t\t} else {\n\t\t\tpath = PATH_WELCOME;\n\t\t}\n\n\t\tgoto(path);\n\t}\n\n\tasync function send() {\n\t\tlet path;\n\n\t\tif (!yakklMiscStore) {\n\t\t\tpath = PATH_LOGIN;\n\t\t} else {\n\t\t\tpath = PATH_ETHEREUM_TRANSACTIONS_SEND;\n\t\t}\n\n\t\tgoto(path);\n\t}\n\n\t// Used for testing side panel version\n\tasync function handleAI() {\n\t\ttry {\n\t\t\topenSidePanelOnActiveTab();\n\t\t} catch (error) {\n\t\t\tlog.error('Error opening side panel:', false, error);\n\t\t}\n\t}\n\n\tasync function buy() {\n\t\tlet path;\n\n\t\tif (!yakklMiscStore) {\n\t\t\tpath = PATH_LOGIN;\n\t\t\tgoto(path);\n\t\t} else {\n\t\t\tshowBuy = true;\n\t\t}\n\t}\n\n\tasync function swap() {\n\t\tlet path;\n\n\t\tif (!yakklMiscStore) {\n\t\t\tpath = PATH_LOGIN;\n\t\t\tgoto(path);\n\t\t} else {\n\t\t\tshowSwap = true;\n\t\t}\n\t}\n</script>\n\n<ChatbotModal bind:show={showChat} />\n\n<Buy bind:show={showBuy} />\n\n<!-- <SwapModal bind:show={showSwap} {fundingAddress} /> -->\n<Swap bind:show={showSwap} {fundingAddress} {provider} {blockchain} {swapManager} {tokenService} />\n<!-- max-w-[{containerWidth}px] -->\n<!-- bg-base-100 -->\n<footer\n\t{id}\n\tclass=\"visible fixed mb-0 inset-x-0 bottom-0 mx-4 mt-0 bg-gradient-to-br from-gray-900 via-gray-800 to-black {classParam}\"\n>\n\t<div\n\t\tclass=\"relative flex items-center justify-between my-2 mb-0 bg-primary/80 text-base-content rounded-lg shadow-lg\"\n\t>\n\t\t<span class=\"flex flex-1 justify-evenly max-w-[40%]\">\n\t\t\t<!-- HOME -->\n\t\t\t<!-- svelte-ignore a11y_click_events_have_key_events -->\n\t\t\t<!-- svelte-ignore a11y_interactive_supports_focus -->\n\t\t\t<div\n\t\t\t\trole=\"button\"\n\t\t\t\tonclick={home}\n\t\t\t\tclass=\"m-1 flex flex-col fill-base-content hover:fill-base-300 hover:text-base-300 items-center justify-center\"\n\t\t\t\tdata-bs-toggle=\"tooltip\"\n\t\t\t\tdata-bs-placement=\"top\"\n\t\t\t\ttitle=\"Welcome Page\"\n\t\t\t\taria-label=\"home\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tclass=\"w-{w} h-{h} stroke-primary/5 stroke-[1px]\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M11.47 3.84a.75.75 0 011.06 0l8.69 8.69a.75.75 0 101.06-1.06l-8.689-8.69a2.25 2.25 0 00-3.182 0l-8.69 8.69a.75.75 0 001.061 1.06l8.69-8.69z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M12 5.432l8.159 8.159c.03.03.06.058.091.086v6.198c0 1.035-.84 1.875-1.875 1.875H15a.75.75 0 01-.75-.75v-4.5a.75.75 0 00-.75-.75h-3a.75.75 0 00-.75.75V21a.75.75 0 01-.75.75H5.625a1.875 1.875 0 01-1.875-1.875v-6.198a2.29 2.29 0 00.091-.086L12 5.43z\"\n\t\t\t\t\t/>\n\t\t\t\t</svg>\n\t\t\t\t<span class=\"xs:text-xs sm:text-sm md:text-base\">Home</span>\n\t\t\t</div>\n\t\t\t<!-- w-[60px] h-[40px] -->\n\t\t\t<!-- Send -->\n\t\t\t<!-- svelte-ignore a11y_click_events_have_key_events -->\n\t\t\t<!-- svelte-ignore a11y_interactive_supports_focus -->\n\t\t\t<div\n\t\t\t\trole=\"button\"\n\t\t\t\tonclick={send}\n\t\t\t\tclass=\"m-1 flex flex-col fill-base-content hover:fill-base-300 hover:text-base-300 items-center justify-center\"\n\t\t\t\tdata-bs-toggle=\"tooltip\"\n\t\t\t\tdata-bs-placement=\"top\"\n\t\t\t\ttitle=\"Send\"\n\t\t\t\taria-label=\"wallet send\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tstroke-width=\"1.5\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tclass=\"w-6 h-6 font-bold\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\td=\"M4.5 19.5l15-15m0 0H8.25m11.25 0v11.25\"\n\t\t\t\t\t/>\n\t\t\t\t</svg>\n\n\t\t\t\t<span class=\"xs:text-xs sm:text-sm md:text-base\">Send</span>\n\t\t\t</div>\n\t\t</span>\n\n\t\t<!-- Help Bot -->\n\t\t<!-- svelte-ignore a11y_click_events_have_key_events -->\n\t\t<div class=\"static bg-gray-100 rounded-full w-[50px] h-[50px] shadow-lg z-50\">\n\t\t\t<div\n\t\t\t\tclass=\"relative bg-gray-300/75 rounded-full m-1 h-[39px] drop-shadow-lg hover:drop-shadow-xl\"\n\t\t\t>\n\t\t\t\t<!-- fill-indigo-700 hover:fill-indigo-400 text-purple-900 hover:text-purple-700 -->\n\t\t\t\t<!-- svelte-ignore a11y_interactive_supports_focus -->\n\t\t\t\t<!-- <div role=\"button\" onclick={handleAI} -->\n\t\t\t\t<div\n\t\t\t\t\trole=\"button\"\n\t\t\t\t\tonclick={() => {\n\t\t\t\t\t\tshowChat = true;\n\t\t\t\t\t}}\n\t\t\t\t\tclass=\"relative m-1 w-[40px] h-[40px] fill-primary hover:fill-primary/50 text-primary hover:text-primary/50\"\n\t\t\t\t\tdata-bs-toggle=\"tooltip\"\n\t\t\t\t\tdata-bs-placement=\"top\"\n\t\t\t\t\ttitle=\"Ring for Help\"\n\t\t\t\t\taria-label=\"help\"\n\t\t\t\t>\n\t\t\t\t\t<svg\n\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\tclass=\"w-8 h-8 mt-0.5 -ml-[.05rem]\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\t\td=\"M9 4.5a.75.75 0 01.721.544l.813 2.846a3.75 3.75 0 002.576 2.576l2.846.813a.75.75 0 010 1.442l-2.846.813a3.75 3.75 0 00-2.576 2.576l-.813 2.846a.75.75 0 01-1.442 0l-.813-2.846a3.75 3.75 0 00-2.576-2.576l-2.846-.813a.75.75 0 010-1.442l2.846-.813A3.75 3.75 0 007.466 7.89l.813-2.846A.75.75 0 019 4.5zM18 1.5a.75.75 0 01.728.568l.258 1.036c.236.94.97 1.674 1.91 1.91l1.036.258a.75.75 0 010 1.456l-1.036.258c-.94.236-1.674.97-1.91 1.91l-.258 1.036a.75.75 0 01-1.456 0l-.258-1.036a2.625 2.625 0 00-1.91-1.91l-1.036-.258a.75.75 0 010-1.456l1.036-.258a2.625 2.625 0 001.91-1.91l.258-1.036A.75.75 0 0118 1.5zM16.5 15a.75.75 0 01.712.513l.394 1.183c.15.447.5.799.948.948l1.183.395a.75.75 0 010 1.422l-1.183.395c-.447.15-.799.5-.948.948l-.395 1.183a.75.75 0 01-1.422 0l-.395-1.183a1.5 1.5 0 00-.948-.948l-1.183-.395a.75.75 0 010-1.422l1.183-.395c.447-.15.799-.5.948-.948l.395-1.183A.75.75 0 0116.5 15z\"\n\t\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</svg>\n\n\t\t\t\t\t<!-- <i class=\"fa-solid fa-bell-concierge\" style=\"font-size: 2rem; margin-left: 1px; margin-top: -3px; margin-bottom: -1.5rem;\"></i> -->\n\t\t\t\t\t<p\n\t\t\t\t\t\tclass=\"text-xs ml-[.3rem] -mt-[.25rem]\"\n\t\t\t\t\t\tstyle=\"line-height: .75rem; font-size: smaller\"\n\t\t\t\t\t>\n\t\t\t\t\t\tHelp\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<!-- xs:ml-2 sm:ml-5 md:ml-10 lg:ml-15 xl:ml-20  -->\n\t\t<span class=\"flex flex-1 justify-evenly max-w-[40%]\">\n\t\t\t<!-- Buy -->\n\t\t\t<!-- svelte-ignore a11y_interactive_supports_focus -->\n\t\t\t<!-- svelte-ignore a11y_click_events_have_key_events -->\n\t\t\t<div\n\t\t\t\trole=\"button\"\n\t\t\t\tonclick={buy}\n\t\t\t\tclass=\"m-1 flex flex-col fill-base-content hover:fill-base-300 hover:text-base-300 items-center justify-center\"\n\t\t\t\tdata-bs-toggle=\"tooltip\"\n\t\t\t\tdata-bs-placement=\"top\"\n\t\t\t\ttitle=\"Buy\"\n\t\t\t\taria-label=\"Buy\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tstroke-width=\"1.5\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tclass=\"w-6 h-6\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\td=\"M13.5 6H5.25A2.25 2.25 0 003 8.25v10.5A2.25 2.25 0 005.25 21h10.5A2.25 2.25 0 0018 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25\"\n\t\t\t\t\t/>\n\t\t\t\t</svg>\n\t\t\t\t<span class=\"xs:text-xs sm:text-sm md:text-base\">Buy</span>\n\t\t\t</div>\n\n\t\t\t<!-- Swap -->\n\t\t\t<!-- svelte-ignore a11y_click_events_have_key_events -->\n\t\t\t<!-- svelte-ignore a11y_interactive_supports_focus -->\n\t\t\t<div\n\t\t\t\trole=\"button\"\n\t\t\t\tonclick={swap}\n\t\t\t\tclass=\"flex flex-col fill-base-content hover:fill-base-300 hover:text-base-300 items-center justify-center\"\n\t\t\t\tdata-bs-toggle=\"tooltip\"\n\t\t\t\tdata-bs-placement=\"top\"\n\t\t\t\ttitle=\"Swap\"\n\t\t\t\taria-label=\"swap\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tstroke-width=\"1.5\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tclass=\"w-6 h-6 font-bold\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\td=\"M19.5 12c0-1.232-.046-2.453-.138-3.662a4.006 4.006 0 00-3.7-3.7 48.678 48.678 0 00-7.324 0 4.006 4.006 0 00-3.7 3.7c-.017.22-.032.441-.046.662M19.5 12l3-3m-3 3l-3-3m-12 3c0 1.232.046 2.453.138 3.662a4.006 4.006 0 003.7 3.7 48.656 48.656 0 007.324 0 4.006 4.006 0 003.7-3.7c.017-.22.032-.441.046-.662M4.5 12l3 3m-3-3l-3 3\"\n\t\t\t\t\t/>\n\t\t\t\t</svg>\n\t\t\t\t<span class=\"xs:text-xs sm:text-sm md:text-base\">Swap</span>\n\t\t\t</div>\n\t\t</span>\n\t</div>\n\n\t<!-- Don't use copyright component here - Needs different formatting here in footer -->\n\t<div class=\"inline-block mx-auto w-full text-center label-text\">\n\t\t<!-- <a href=\"https://yakkl.com?utm_source=yakkl\"\n       class=\"text-xs hover:text-opacity-75 hover:cursor-pointer\"\n       style=\"color: inherit; text-decoration: none; transition: color 0.3s ease, opacity 0.3s ease;\"> -->\n\t\t<span style=\"font-size: 10px;\"\n\t\t\t>YAKKL® ©Copyright {new Date().getFullYear().toString()}, Version: {VERSION}\n\t\t\t{planType}</span\n\t\t>\n\t\t<!-- </a> -->\n\t</div>\n\n\t<!-- <div class=\"inline-block mx-auto w-full text-center label-text\">\n    <a href=\"https://yakkl.com?utm_source=yakkl\" class=\"text-xs text-primary/50 hover:text-primary/75\">\n      <span style=\"font-size: 10px;\">YAKKL® ©Copyright {YEAR}, Version: {VERSION} {planType}</span>\n    </a>\n  </div> -->\n</footer>\n","<script lang=\"ts\">\n\timport { onMount, onDestroy } from 'svelte';\n\timport { browser as isBrowser } from '$app/environment';\n\timport { browser_ext } from '$lib/common/environment';\n\timport { fade, fly, scale } from 'svelte/transition';\n\timport { NotificationService } from '$lib/common/notifications';\n\timport { UnifiedTimerManager } from '$lib/managers/UnifiedTimerManager';\n\n\t// State\n\tlet notifications = $state<\n\t\tArray<{\n\t\t\tid: string;\n\t\t\ttype: string;\n\t\t\ttitle: string;\n\t\t\tmessage: string;\n\t\t\ttimestamp: number;\n\t\t\tcountdown?: number;\n\t\t\tcountdownInterval?: string; // Now stores timer ID\n\t\t\tdelayMs?: number;\n\t\t}>\n\t>([]);\n\n\t// Enhanced state for lockdown notifications\n\tlet isLockdownActive = $state(false);\n\tlet lockdownTimeLeft = $state(0);\n\tlet isUrgent = $state(false);\n\n\tconst timerManager = UnifiedTimerManager.getInstance();\n\n\t// Initialize listener\n\tonMount(() => {\n\t\tif (!isBrowser || !browser_ext) return;\n\n\t\tconst messageListener = (message: any, sender: any, sendResponse: any): true => {\n\t\t\tif (!message || typeof message !== 'object') return true;\n\n\t\t\t// Handle security alerts\n\t\t\tif (message.type === 'SECURITY_ALERT' || message.type === 'IMPORTANT_NOTIFICATION') {\n\t\t\t\taddNotification({\n\t\t\t\t\tid: message.id || `notification-${Date.now()}`,\n\t\t\t\t\ttype: 'security',\n\t\t\t\t\ttitle: message.title || '🔒 Security Alert',\n\t\t\t\t\tmessage: message.message,\n\t\t\t\t\ttimestamp: message.timestamp || Date.now()\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Handle lockdown warnings specifically\n\t\t\telse if (message.type === 'LOCKDOWN_WARNING') {\n\t\t\t\tconst id = `lockdown-${Date.now()}`;\n\t\t\t\tconst delayMs = message.delayMs || 30000;\n\t\t\t\tconst countdown = Math.ceil(delayMs / 1000);\n\n\t\t\t\t// Set lockdown state\n\t\t\t\tisLockdownActive = true;\n\t\t\t\tlockdownTimeLeft = countdown;\n\t\t\t\tisUrgent = countdown <= 10;\n\n\t\t\t\taddNotification({\n\t\t\t\t\tid,\n\t\t\t\t\ttype: 'lockdown',\n\t\t\t\t\ttitle: '🔒 Security Alert',\n\t\t\t\t\tmessage: message.message || 'YAKKL will be locked soon due to inactivity.',\n\t\t\t\t\ttimestamp: message.timestamp || Date.now(),\n\t\t\t\t\tcountdown,\n\t\t\t\t\tdelayMs\n\t\t\t\t});\n\n\t\t\t\t// Start countdown using UnifiedTimerManager\n\t\t\t\tconst intervalId = `countdown-${id}`;\n\t\t\t\ttimerManager.addInterval(\n\t\t\t\t\tintervalId,\n\t\t\t\t\t() => {\n\t\t\t\t\t\tupdateCountdown(id);\n\t\t\t\t\t},\n\t\t\t\t\t1000\n\t\t\t\t);\n\t\t\t\ttimerManager.startInterval(intervalId);\n\n\t\t\t\t// Store the interval ID\n\t\t\t\tnotifications = notifications.map((n) =>\n\t\t\t\t\tn.id === id ? { ...n, countdownInterval: intervalId } : n\n\t\t\t\t);\n\n\t\t\t\tif (browser_ext.runtime && browser_ext.runtime.onMessage) {\n\t\t\t\t\tbrowser_ext.runtime.sendMessage({\n\t\t\t\t\t\ttype: 'lockdownImminent',\n\t\t\t\t\t\tdelayMs,\n\t\t\t\t\t\ttimestamp: Date.now()\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Handle clear notifications\n\t\t\telse if (message.type === 'CLEAR_NOTIFICATION') {\n\t\t\t\tremoveNotification(message.notificationId);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t// Listen for idle state changes to clear lockdown state\n\t\tconst handleIdleStateChange = (event: CustomEvent) => {\n\t\t\tif (event.detail.state === 'active') {\n\t\t\t\tisLockdownActive = false;\n\t\t\t\tlockdownTimeLeft = 0;\n\t\t\t\tisUrgent = false;\n\t\t\t\t// Clear lockdown notifications\n\t\t\t\tnotifications = notifications.filter((n) => n.type !== 'lockdown');\n\t\t\t\tclearAllIntervals();\n\t\t\t}\n\t\t};\n\n\t\t// Listen for user activity\n\t\tconst handleUserActivity = () => {\n\t\t\tif (isLockdownActive) {\n\t\t\t\tisLockdownActive = false;\n\t\t\t\tlockdownTimeLeft = 0;\n\t\t\t\tisUrgent = false;\n\t\t\t\tnotifications = notifications.filter((n) => n.type !== 'lockdown');\n\t\t\t\tclearAllIntervals();\n\t\t\t}\n\t\t};\n\n\t\t// Add listeners\n\t\tif (browser_ext.runtime && browser_ext.runtime.onMessage) {\n\t\t\tbrowser_ext.runtime.onMessage.addListener(messageListener);\n\t\t}\n\n\t\twindow.addEventListener('yakklIdleStateChanged', handleIdleStateChange as EventListener);\n\t\twindow.addEventListener('yakklUserActivityDetected', handleUserActivity as EventListener);\n\n\t\treturn () => {\n\t\t\t// Clean up listeners\n\t\t\tif (browser_ext.runtime && browser_ext.runtime.onMessage) {\n\t\t\t\tbrowser_ext.runtime.onMessage.removeListener(messageListener);\n\t\t\t}\n\n\t\t\twindow.removeEventListener('yakklIdleStateChanged', handleIdleStateChange as EventListener);\n\t\t\twindow.removeEventListener('yakklUserActivityDetected', handleUserActivity as EventListener);\n\n\t\t\t// Clear all intervals\n\t\t\tclearAllIntervals();\n\t\t};\n\t});\n\n\tonDestroy(() => {\n\t\tclearAllIntervals();\n\t});\n\n\t// Add a notification to the list\n\tfunction addNotification(notification: any) {\n\t\t// Check if we already have this notification\n\t\tconst existing = notifications.find((n) => n.id === notification.id);\n\n\t\tif (existing) {\n\t\t\t// Update existing notification\n\t\t\tnotifications = notifications.map((n) =>\n\t\t\t\tn.id === notification.id ? { ...n, ...notification } : n\n\t\t\t);\n\t\t} else {\n\t\t\t// Add new notification\n\t\t\tnotifications = [...notifications, notification];\n\t\t}\n\t}\n\n\t// Remove a notification\n\tfunction removeNotification(id: string) {\n\t\t// Clear any countdown interval\n\t\tconst notification = notifications.find((n) => n.id === id);\n\t\tif (notification && notification.countdownInterval) {\n\t\t\ttimerManager.stopInterval(notification.countdownInterval);\n\t\t\ttimerManager.removeInterval(notification.countdownInterval);\n\t\t}\n\n\t\t// If removing lockdown notification, clear lockdown state\n\t\tif (notification?.type === 'lockdown') {\n\t\t\tisLockdownActive = false;\n\t\t\tlockdownTimeLeft = 0;\n\t\t\tisUrgent = false;\n\t\t}\n\n\t\t// Remove from list\n\t\tnotifications = notifications.filter((n) => n.id !== id);\n\t}\n\n\t// Update countdown for a notification\n\tfunction updateCountdown(id: string) {\n\t\tconst notification = notifications.find((n) => n.id === id);\n\n\t\tif (notification && notification.countdown) {\n\t\t\t// Decrement countdown\n\t\t\tconst newCountdown = notification.countdown - 1;\n\t\t\tlockdownTimeLeft = newCountdown;\n\t\t\tisUrgent = newCountdown <= 10;\n\n\t\t\tif (newCountdown <= 0) {\n\t\t\t\t// Remove notification when countdown reaches zero\n\t\t\t\tremoveNotification(id);\n\t\t\t} else {\n\t\t\t\t// Update countdown\n\t\t\t\tnotifications = notifications.map((n) =>\n\t\t\t\t\tn.id === id ? { ...n, countdown: newCountdown } : n\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Clear all intervals\n\tfunction clearAllIntervals() {\n\t\tnotifications.forEach((notification) => {\n\t\t\tif (notification.countdownInterval) {\n\t\t\t\ttimerManager.stopInterval(notification.countdownInterval);\n\t\t\t\ttimerManager.removeInterval(notification.countdownInterval);\n\t\t\t}\n\t\t});\n\t}\n\n\t// Track user activity for analytics - only for significant interactions\n\tfunction trackUserActivity(action: string) {\n\t\t// Only track specific actions that are meaningful for analytics\n\t\tconst trackableActions = [\n\t\t\t'dismiss_notification',\n\t\t\t'interact_with_notification',\n\t\t\t'view_notification'\n\t\t];\n\n\t\tif (trackableActions.includes(action) && browser_ext) {\n\t\t\ttry {\n\t\t\t\tbrowser_ext.runtime\n\t\t\t\t\t.sendMessage({\n\t\t\t\t\t\ttype: 'USER_ACTIVITY',\n\t\t\t\t\t\ttimestamp: Date.now(),\n\t\t\t\t\t\tcontext: 'analytics',\n\t\t\t\t\t\taction\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\t// Ignore errors\n\t\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\t// Ignore errors\n\t\t\t}\n\t\t}\n\t}\n\n\t// Handle user interaction with a notification\n\tfunction handleUserActivity(notificationId: string) {\n\t\t// Only track significant interactions\n\t\ttrackUserActivity('interact_with_notification');\n\t\tremoveNotification(notificationId);\n\t}\n\n\t// Dismiss a single notification\n\tfunction dismiss(id: string) {\n\t\t// Only send security activity message for lockdown warnings\n\t\tconst notification = notifications.find((n) => n.id === id);\n\t\tif (notification?.type === 'lockdown' && browser_ext) {\n\t\t\ttry {\n\t\t\t\tbrowser_ext.runtime\n\t\t\t\t\t.sendMessage({\n\t\t\t\t\t\ttype: 'USER_ACTIVITY',\n\t\t\t\t\t\ttimestamp: Date.now(),\n\t\t\t\t\t\tcontext: 'security',\n\t\t\t\t\t\taction: 'dismiss_lockdown_warning'\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\t// Ignore errors\n\t\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\t// Ignore errors\n\t\t\t}\n\t\t}\n\n\t\t// Remove the notification\n\t\tremoveNotification(id);\n\t}\n\n\t// Dismiss all notifications\n\tasync function dismissAll() {\n\t\t// Only send security activity message if we have a lockdown warning\n\t\tconst hasLockdownWarning = notifications.some((n) => n.type === 'lockdown');\n\t\tif (hasLockdownWarning && browser_ext) {\n\t\t\ttry {\n\t\t\t\tawait browser_ext.runtime.sendMessage({\n\t\t\t\t\ttype: 'USER_ACTIVITY',\n\t\t\t\t\ttimestamp: Date.now(),\n\t\t\t\t\tcontext: 'security',\n\t\t\t\t\taction: 'dismiss_all_lockdown_warnings'\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\t// Ignore errors\n\t\t\t}\n\t\t}\n\n\t\t// Use centralized clearing\n\t\tawait NotificationService.clearAllAlertsEnhanced();\n\n\t\t// Clear local state\n\t\tclearAllIntervals();\n\t\tnotifications = [];\n\t\tisLockdownActive = false;\n\t\tlockdownTimeLeft = 0;\n\t\tisUrgent = false;\n\t}\n</script>\n\n<!-- Enhanced Lockdown Bar (Full Width at Top) -->\n{#if isLockdownActive}\n\t<div\n\t\tclass=\"fixed top-0 left-0 right-0 z-50 bg-gradient-to-r from-red-600 to-red-700 text-white shadow-lg border-b-2 border-red-500\"\n\t\tclass:animate-pulse={isUrgent}\n\t\ttransition:fly={{ y: -100, duration: 400 }}\n\t>\n\t\t<div class=\"max-w-7xl mx-auto px-4 py-3\">\n\t\t\t<div class=\"flex items-center justify-between\">\n\t\t\t\t<!-- Left side - Icon and main message -->\n\t\t\t\t<div class=\"flex items-center space-x-3\">\n\t\t\t\t\t<div class=\"relative\">\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\tclass=\"h-6 w-6 text-yellow-300\"\n\t\t\t\t\t\t\tclass:animate-spin={isUrgent}\n\t\t\t\t\t\t\tviewBox=\"0 0 20 20\"\n\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\t\t\td=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\"\n\t\t\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t{#if isUrgent}\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\"absolute -top-1 -right-1 w-3 h-3 bg-yellow-400 rounded-full animate-ping\"\n\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"flex-1\">\n\t\t\t\t\t\t<div class=\"font-semibold text-lg\">🔒 YAKKL Security Alert</div>\n\t\t\t\t\t\t<div class=\"text-red-100 text-sm\">\n\t\t\t\t\t\t\tWallet will lock due to inactivity - take any action to stay active\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Center - Large countdown timer -->\n\t\t\t\t<div class=\"flex items-center space-x-4\">\n\t\t\t\t\t<div class=\"text-center\">\n\t\t\t\t\t\t<div class=\"text-xs text-red-200 uppercase tracking-wide\">Time Remaining</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass=\"text-3xl font-mono font-bold text-yellow-300 transition-all duration-300\"\n\t\t\t\t\t\t\tclass:text-yellow-100={isUrgent}\n\t\t\t\t\t\t\tclass:animate-pulse={isUrgent}\n\t\t\t\t\t\t\tclass:scale-110={isUrgent}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{lockdownTimeLeft}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"text-xs text-red-200\">seconds</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<!-- Progress ring -->\n\t\t\t\t\t<div class=\"relative w-16 h-16\">\n\t\t\t\t\t\t<svg class=\"w-16 h-16 transform -rotate-90\" viewBox=\"0 0 32 32\">\n\t\t\t\t\t\t\t<!-- Background circle -->\n\t\t\t\t\t\t\t<circle\n\t\t\t\t\t\t\t\tcx=\"16\"\n\t\t\t\t\t\t\t\tcy=\"16\"\n\t\t\t\t\t\t\t\tr=\"14\"\n\t\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\tclass=\"text-red-800\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<!-- Progress circle -->\n\t\t\t\t\t\t\t<circle\n\t\t\t\t\t\t\t\tcx=\"16\"\n\t\t\t\t\t\t\t\tcy=\"16\"\n\t\t\t\t\t\t\t\tr=\"14\"\n\t\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\t\t\tclass=\"text-yellow-300 transition-all duration-1000\"\n\t\t\t\t\t\t\t\tclass:text-yellow-100={isUrgent}\n\t\t\t\t\t\t\t\tstyle=\"stroke-dasharray: {2 * Math.PI * 14}; stroke-dashoffset: {2 *\n\t\t\t\t\t\t\t\t\tMath.PI *\n\t\t\t\t\t\t\t\t\t14 *\n\t\t\t\t\t\t\t\t\t(1 - lockdownTimeLeft / 30)}\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t<div class=\"absolute inset-0 flex items-center justify-center\">\n\t\t\t\t\t\t\t<div class=\"text-xs font-bold text-white\">\n\t\t\t\t\t\t\t\t{Math.round((lockdownTimeLeft / 30) * 100)}%\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Right side - Action buttons -->\n\t\t\t\t<div class=\"flex items-center space-x-3\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass=\"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg font-semibold transition-all duration-200 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 focus:ring-offset-red-600\"\n\t\t\t\t\t\tonclick={() => dismissAll()}\n\t\t\t\t\t>\n\t\t\t\t\t\t✅ I'm Active\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<!-- svelte-ignore a11y_consider_explicit_label -->\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass=\"text-red-200 hover:text-white transition-colors duration-200\"\n\t\t\t\t\t\tonclick={() => dismissAll()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\tclass=\"h-5 w-5\"\n\t\t\t\t\t\t\tviewBox=\"0 0 20 20\"\n\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\t\t\td=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n\t\t\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n{/if}\n\n<!-- Regular Notification Container (positioned lower when lockdown bar is active) -->\n{#if notifications.length > 0}\n\t<div\n\t\tclass=\"fixed right-4 z-40 flex flex-col gap-4 max-w-md transition-all duration-300\"\n\t\tclass:top-24={isLockdownActive}\n\t\tclass:top-4={!isLockdownActive}\n\t>\n\t\t{#each notifications as notification (notification.id)}\n\t\t\t<!-- Skip lockdown notifications since they're shown in the top bar -->\n\t\t\t{#if notification.type !== 'lockdown'}\n\t\t\t\t<!-- Regular security alert -->\n\t\t\t\t{#if notification.type === 'security'}\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"p-4 bg-yellow-600 text-white rounded-lg shadow-lg\"\n\t\t\t\t\t\tin:fly={{ x: 20, duration: 300 }}\n\t\t\t\t\t\tout:fade={{ duration: 200 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class=\"flex justify-between items-start\">\n\t\t\t\t\t\t\t<div class=\"flex items-center\">\n\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\tclass=\"h-6 w-6 mr-2\"\n\t\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\t\t\t\t\t\td=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t<h3 class=\"font-bold text-lg\">{notification.title}</h3>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<!-- svelte-ignore a11y_consider_explicit_label -->\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclass=\"text-white hover:text-gray-200\"\n\t\t\t\t\t\t\t\tonclick={() => dismiss(notification.id)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\tclass=\"h-5 w-5\"\n\t\t\t\t\t\t\t\t\tviewBox=\"0 0 20 20\"\n\t\t\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\t\t\t\t\td=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n\t\t\t\t\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<p class=\"mt-2\">{notification.message}</p>\n\n\t\t\t\t\t\t<div class=\"mt-3 flex justify-end\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclass=\"bg-white text-yellow-600 px-3 py-1 rounded hover:bg-gray-100\"\n\t\t\t\t\t\t\t\tonclick={() => dismiss(notification.id)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tDismiss\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t{:else}\n\t\t\t\t\t<!-- Generic notification -->\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"p-4 bg-blue-600 text-white rounded-lg shadow-lg\"\n\t\t\t\t\t\tin:fly={{ x: 20, duration: 300 }}\n\t\t\t\t\t\tout:fade={{ duration: 200 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class=\"flex justify-between items-start\">\n\t\t\t\t\t\t\t<h3 class=\"font-bold\">{notification.title}</h3>\n\t\t\t\t\t\t\t<!-- svelte-ignore a11y_consider_explicit_label -->\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclass=\"text-white hover:text-gray-200\"\n\t\t\t\t\t\t\t\tonclick={() => dismiss(notification.id)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\tclass=\"h-5 w-5\"\n\t\t\t\t\t\t\t\t\tviewBox=\"0 0 20 20\"\n\t\t\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\t\t\t\t\td=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n\t\t\t\t\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<p class=\"mt-2\">{notification.message}</p>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t{/if}\n\t\t{/each}\n\n\t\t<!-- Dismiss all button (only show if multiple non-lockdown notifications) -->\n\t\t{#if notifications.filter((n) => n.type !== 'lockdown').length > 1}\n\t\t\t<button\n\t\t\t\tclass=\"self-end bg-gray-700 text-white px-3 py-1 rounded hover:bg-gray-600 text-sm\"\n\t\t\t\tonclick={dismissAll}\n\t\t\t>\n\t\t\t\tDismiss All\n\t\t\t</button>\n\t\t{/if}\n\t</div>\n{/if}\n","<script lang=\"ts\">\n\timport { createForm } from 'svelte-forms-lib';\n\timport * as yup from 'yup';\n\timport Modal from './Modal.svelte';\n\timport { VERSION, type TokenData } from '$lib/common';\n\timport { log } from '$lib/managers/Logger';\n\timport Tooltip from './Tooltip.svelte';\n\n\tinterface Props {\n\t\tshow?: boolean;\n\t\ttoken?: TokenData | null;\n\t\tclassName?: string;\n\t\tonSubmit?: (token: TokenData) => void;\n\t}\n\n\tlet { show = $bindable(false), token = null, className = 'z-[999]', onSubmit }: Props = $props();\n\n\tconst { form, errors, handleChange, handleSubmit, updateInitialValues } = createForm({\n\t\tinitialValues: {\n\t\t\taddress: '',\n\t\t\tname: '',\n\t\t\talias: '',\n\t\t\tsymbol: '',\n\t\t\tdecimals: 18,\n\t\t\tchainId: 1,\n\t\t\tsidepanel: true,\n\t\t\tevmCompatible: true,\n\t\t\tlogoURI: '',\n\t\t\turl: '',\n\t\t\tcustomDefault: 'custom',\n\t\t\tisNative: false,\n\t\t\tisStablecoin: false,\n\t\t\tdescription: '',\n\t\t\t// Enhanced fields for multi-blockchain support\n\t\t\tblockchain: 'ethereum',\n\t\t\tnetwork: 'mainnet',\n\t\t\tstandard: 'ERC20',\n\t\t\tisWatchOnly: false,\n\t\t\tportfolioIncluded: true,\n\t\t\tcoingeckoId: '',\n\t\t\twebsite: '',\n\t\t\texchange: '',\n\t\t\texchangeSymbol: '',\n\t\t\tisExchangeBalance: false\n\t\t},\n\t\tvalidationSchema: yup.object().shape({\n\t\t\taddress: yup.string().required('Please enter a token address'),\n\t\t\tname: yup.string().required('Please enter a token name'),\n\t\t\talias: yup.string().optional(),\n\t\t\tsymbol: yup.string().required('Please enter a token symbol'),\n\t\t\tdecimals: yup.number().required('Please enter the token decimals'),\n\t\t\tchainId: yup.number().when('blockchain', {\n\t\t\t\tis: (val: string) => ['ethereum', 'polygon', 'arbitrum', 'optimism', 'base'].includes(val),\n\t\t\t\tthen: (schema) => schema.required('Please enter the chain ID'),\n\t\t\t\totherwise: (schema) => schema.optional()\n\t\t\t}),\n\t\t\tblockchain: yup.string().required('Please select a blockchain'),\n\t\t\tnetwork: yup.string().required('Please select a network'),\n\t\t\tstandard: yup.string().required('Please select a token standard'),\n\t\t\tsidepanel: yup.boolean().optional().default(true),\n\t\t\tevmCompatible: yup.boolean().optional().default(true),\n\t\t\tlogoURI: yup.string().url('Must be a valid URL').optional().nullable(),\n\t\t\turl: yup.string().url('Must be a valid URL').optional().nullable(),\n\t\t\twebsite: yup.string().url('Must be a valid URL').optional().nullable(),\n\t\t\tcoingeckoId: yup.string().optional(),\n\t\t\texchange: yup.string().optional(),\n\t\t\texchangeSymbol: yup.string().optional(),\n\t\t\tisWatchOnly: yup.boolean().optional().default(false),\n\t\t\tportfolioIncluded: yup.boolean().optional().default(true),\n\t\t\tisExchangeBalance: yup.boolean().optional().default(false)\n\t\t}),\n\t\tonSubmit: (values) => {\n\t\t\ttry {\n\t\t\t\tconst updatedToken: TokenData = {\n\t\t\t\t\t...values,\n\t\t\t\t\tsidepanel: values.sidepanel ?? true,\n\t\t\t\t\tevmCompatible: values.evmCompatible ?? (values.blockchain === 'ethereum' || values.standard === 'ERC20'),\n\t\t\t\t\tcustomDefault: 'custom', // Ensure customDefault is always 'custom'\n\t\t\t\t\tsymbol: values.symbol.toUpperCase(), // Ensure symbol is always uppercase\n\t\t\t\t\tbalance: token?.balance ?? 0n,\n\t\t\t\t\tquantity: token?.quantity ?? 0,\n\t\t\t\t\tprice: {\n\t\t\t\t\t\tprice: 0,\n\t\t\t\t\t\tisNative: false,\n\t\t\t\t\t\tprovider: '',\n\t\t\t\t\t\tlastUpdated: new Date(),\n\t\t\t\t\t\tchainId: token?.chainId ?? values.chainId ?? 1,\n\t\t\t\t\t\tcurrency: '',\n\t\t\t\t\t\tstatus: token?.price?.status ?? 0,\n\t\t\t\t\t\tmessage: token?.price?.message ?? ''\n\t\t\t\t\t},\n\t\t\t\t\tchange: token?.change ?? [],\n\t\t\t\t\tvalue: token?.value ?? 0,\n\t\t\t\t\ttags: token?.tags ?? [],\n\t\t\t\t\tversion: token?.version ?? VERSION,\n\t\t\t\t\t// Enhanced multi-blockchain fields\n\t\t\t\t\tblockchain: values.blockchain,\n\t\t\t\t\tnetwork: values.network,\n\t\t\t\t\tstandard: values.standard,\n\t\t\t\t\tisWatchOnly: values.isWatchOnly,\n\t\t\t\t\tportfolioIncluded: values.portfolioIncluded,\n\t\t\t\t\twatchedAt: token?.watchedAt ?? new Date().toISOString(),\n\t\t\t\t\texchangeInfo: values.isExchangeBalance ? {\n\t\t\t\t\t\texchange: values.exchange,\n\t\t\t\t\t\texchangeSymbol: values.exchangeSymbol || values.symbol,\n\t\t\t\t\t\tisExchangeBalance: values.isExchangeBalance\n\t\t\t\t\t} : undefined,\n\t\t\t\t\tmetadata: {\n\t\t\t\t\t\tcoingeckoId: values.coingeckoId || undefined,\n\t\t\t\t\t\twebsite: values.website || undefined,\n\t\t\t\t\t\tlastUpdated: new Date().toISOString()\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tonSubmit(updatedToken);\n\t\t\t\tresetForm();\n\t\t\t\tshow = false;\n\t\t\t} catch (error) {\n\t\t\t\tlog.error('TokenForm: Error:', false, error);\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction resetForm() {\n\t\tupdateInitialValues({\n\t\t\taddress: '',\n\t\t\tname: '',\n\t\t\talias: '',\n\t\t\tsymbol: '',\n\t\t\tdecimals: 18,\n\t\t\tchainId: 1,\n\t\t\tsidepanel: true,\n\t\t\tevmCompatible: true,\n\t\t\tlogoURI: '',\n\t\t\turl: '',\n\t\t\tcustomDefault: 'custom',\n\t\t\tisNative: false,\n\t\t\tisStablecoin: false,\n\t\t\tdescription: '',\n\t\t\t// Enhanced fields for multi-blockchain support\n\t\t\tblockchain: 'ethereum',\n\t\t\tnetwork: 'mainnet',\n\t\t\tstandard: 'ERC20',\n\t\t\tisWatchOnly: false,\n\t\t\tportfolioIncluded: true,\n\t\t\tcoingeckoId: '',\n\t\t\twebsite: '',\n\t\t\texchange: '',\n\t\t\texchangeSymbol: '',\n\t\t\tisExchangeBalance: false\n\t\t});\n\t}\n\n\t$effect(() => {\n\t\tif (token) {\n\t\t\tupdateInitialValues({\n\t\t\t\taddress: token.address,\n\t\t\t\tname: token.name,\n\t\t\t\talias: token.alias ?? '',\n\t\t\t\tsymbol: token.symbol,\n\t\t\t\tdecimals: token.decimals,\n\t\t\t\tchainId: token.chainId ?? 1,\n\t\t\t\tsidepanel: token.sidepanel ?? true,\n\t\t\t\tevmCompatible: token.evmCompatible ?? true,\n\t\t\t\tlogoURI: token.logoURI ?? '',\n\t\t\t\turl: token.url ?? '',\n\t\t\t\tcustomDefault: 'custom',\n\t\t\t\tisNative: token.isNative ?? false,\n\t\t\t\tisStablecoin: token.isStablecoin ?? false,\n\t\t\t\tdescription: token.description ?? '',\n\t\t\t\t// Enhanced fields\n\t\t\t\tblockchain: token.blockchain ?? 'ethereum',\n\t\t\t\tnetwork: token.network ?? 'mainnet',\n\t\t\t\tstandard: token.standard ?? 'ERC20',\n\t\t\t\tisWatchOnly: token.isWatchOnly ?? false,\n\t\t\t\tportfolioIncluded: token.portfolioIncluded ?? true,\n\t\t\t\tcoingeckoId: token.metadata?.coingeckoId ?? '',\n\t\t\t\twebsite: token.metadata?.website ?? '',\n\t\t\t\texchange: token.exchangeInfo?.exchange ?? '',\n\t\t\t\texchangeSymbol: token.exchangeInfo?.exchangeSymbol ?? '',\n\t\t\t\tisExchangeBalance: token.exchangeInfo?.isExchangeBalance ?? false\n\t\t\t});\n\t\t}\n\t});\n</script>\n\n<Modal bind:show title={token ? 'Edit Token' : 'Add Token'}>\n\t<form onsubmit={handleSubmit} class=\"space-y-4 p-6\">\n\t\t<div>\n\t\t\t<div class=\"flex items-center gap-2\">\n\t\t\t\t<label for=\"name\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-200\"\n\t\t\t\t\t>Name <span class=\"text-red-500\">*</span></label\n\t\t\t\t>\n\t\t\t\t<Tooltip content=\"The full name of the token (e.g., Ethereum, Bitcoin)\">\n\t\t\t\t\t<span class=\"text-gray-400 hover:text-gray-600 cursor-help\">ⓘ</span>\n\t\t\t\t</Tooltip>\n\t\t\t</div>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tid=\"name\"\n\t\t\t\trequired\n\t\t\t\tplaceholder=\"Enter the token name\"\n\t\t\t\tclass=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm text-gray-800\"\n\t\t\t\tbind:value={$form.name}\n\t\t\t\tonchange={handleChange}\n\t\t\t/>\n\t\t\t{#if $errors.name}\n\t\t\t\t<p class=\"mt-2 text-sm text-red-600\">{$errors.name}</p>\n\t\t\t{/if}\n\t\t</div>\n\n\t\t<div>\n\t\t\t<div class=\"flex items-center gap-2\">\n\t\t\t\t<label for=\"address\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-200\"\n\t\t\t\t\t>Address <span class=\"text-red-500\">*</span></label\n\t\t\t\t>\n\t\t\t\t<Tooltip content=\"The contract address of the token on the blockchain\">\n\t\t\t\t\t<span class=\"text-gray-400 hover:text-gray-600 cursor-help\">ⓘ</span>\n\t\t\t\t</Tooltip>\n\t\t\t</div>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tid=\"address\"\n\t\t\t\trequired\n\t\t\t\tplaceholder=\"Enter the token contract address\"\n\t\t\t\tclass=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focusring:indigo-500 sm:text-sm text-gray-800\"\n\t\t\t\tbind:value={$form.address}\n\t\t\t\tonchange={handleChange}\n\t\t\t/>\n\t\t\t{#if $errors.address}\n\t\t\t\t<p class=\"mt-2 text-sm text-red-600\">{$errors.address}</p>\n\t\t\t{/if}\n\t\t</div>\n\n\t\t<div>\n\t\t\t<div class=\"flex items-center gap-2\">\n\t\t\t\t<label for=\"alias\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-200\"\n\t\t\t\t\t>Alias</label\n\t\t\t\t>\n\t\t\t\t<Tooltip content=\"An optional alias for the token (e.g., ENS name)\">\n\t\t\t\t\t<span class=\"text-gray-400 hover:text-gray-600 cursor-help\">ⓘ</span>\n\t\t\t\t</Tooltip>\n\t\t\t</div>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tid=\"alias\"\n\t\t\t\tplaceholder=\"Enter an alias like an ENS (optional)\"\n\t\t\t\tclass=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm text-gray-800\"\n\t\t\t\tbind:value={$form.alias}\n\t\t\t\tonchange={handleChange}\n\t\t\t/>\n\t\t\t{#if $errors.alias}\n\t\t\t\t<p class=\"mt-2 text-sm text-red-600\">{$errors.alias}</p>\n\t\t\t{/if}\n\t\t</div>\n\n\t\t<div>\n\t\t\t<div class=\"flex items-center gap-2\">\n\t\t\t\t<label for=\"symbol\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-200\"\n\t\t\t\t\t>Symbol <span class=\"text-red-500\">*</span></label\n\t\t\t\t>\n\t\t\t\t<Tooltip content=\"The token's ticker symbol (e.g., ETH, BTC)\">\n\t\t\t\t\t<span class=\"text-gray-400 hover:text-gray-600 cursor-help\">ⓘ</span>\n\t\t\t\t</Tooltip>\n\t\t\t</div>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tid=\"symbol\"\n\t\t\t\trequired\n\t\t\t\tplaceholder=\"Enter the token symbol\"\n\t\t\t\tclass=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focusring:indigo-500 sm:text-sm text-gray-800\"\n\t\t\t\tbind:value={$form.symbol}\n\t\t\t\tonchange={handleChange}\n\t\t\t/>\n\t\t\t{#if $errors.symbol}\n\t\t\t\t<p class=\"mt-2 text-sm text-red-600\">{$errors.symbol}</p>\n\t\t\t{/if}\n\t\t</div>\n\n\t\t<div>\n\t\t\t<div class=\"flex items-center gap-2\">\n\t\t\t\t<label for=\"decimals\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-200\"\n\t\t\t\t\t>Decimals <span class=\"text-red-500\">*</span></label\n\t\t\t\t>\n\t\t\t\t<Tooltip\n\t\t\t\t\tcontent=\"The number of decimal places the token uses (e.g., 18 for most ERC20 tokens)\"\n\t\t\t\t>\n\t\t\t\t\t<span class=\"text-gray-400 hover:text-gray-600 cursor-help\">ⓘ</span>\n\t\t\t\t</Tooltip>\n\t\t\t</div>\n\t\t\t<input\n\t\t\t\ttype=\"number\"\n\t\t\t\tid=\"decimals\"\n\t\t\t\tstep=\"1\"\n\t\t\t\trequired\n\t\t\t\tplaceholder=\"Enter the decimals token uses\"\n\t\t\t\tclass=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focusring:indigo-500 sm:text-sm text-gray-800\"\n\t\t\t\tbind:value={$form.decimals}\n\t\t\t\tonchange={handleChange}\n\t\t\t/>\n\t\t\t{#if $errors.decimals}\n\t\t\t\t<p class=\"mt-2 text-sm text-red-600\">{$errors.decimals}</p>\n\t\t\t{/if}\n\t\t</div>\n\n\t\t<!-- Blockchain and Network Selection -->\n\t\t<div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n\t\t\t<div>\n\t\t\t\t<div class=\"flex items-center gap-2\">\n\t\t\t\t\t<label for=\"blockchain\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-200\"\n\t\t\t\t\t\t>Blockchain <span class=\"text-red-500\">*</span></label\n\t\t\t\t\t>\n\t\t\t\t\t<Tooltip content=\"The blockchain network this token exists on\">\n\t\t\t\t\t\t<span class=\"text-gray-400 hover:text-gray-600 cursor-help\">ⓘ</span>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\t\t\t\t<select\n\t\t\t\t\tid=\"blockchain\"\n\t\t\t\t\tbind:value={$form.blockchain}\n\t\t\t\t\tonchange={handleChange}\n\t\t\t\t\tclass=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm text-gray-800\"\n\t\t\t\t>\n\t\t\t\t\t<option value=\"ethereum\">Ethereum</option>\n\t\t\t\t\t<option value=\"solana\">Solana</option>\n\t\t\t\t\t<option value=\"bitcoin\">Bitcoin</option>\n\t\t\t\t\t<option value=\"cosmos\">Cosmos</option>\n\t\t\t\t\t<option value=\"polygon\">Polygon</option>\n\t\t\t\t\t<option value=\"arbitrum\">Arbitrum</option>\n\t\t\t\t\t<option value=\"optimism\">Optimism</option>\n\t\t\t\t\t<option value=\"base\">Base</option>\n\t\t\t\t\t<option value=\"avalanche\">Avalanche</option>\n\t\t\t\t\t<option value=\"bsc\">Binance Smart Chain</option>\n\t\t\t\t</select>\n\t\t\t\t{#if $errors.blockchain}\n\t\t\t\t\t<p class=\"mt-2 text-sm text-red-600\">{$errors.blockchain}</p>\n\t\t\t\t{/if}\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<div class=\"flex items-center gap-2\">\n\t\t\t\t\t<label for=\"network\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-200\"\n\t\t\t\t\t\t>Network <span class=\"text-red-500\">*</span></label\n\t\t\t\t\t>\n\t\t\t\t\t<Tooltip content=\"The specific network (mainnet, testnet, etc.)\">\n\t\t\t\t\t\t<span class=\"text-gray-400 hover:text-gray-600 cursor-help\">ⓘ</span>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\t\t\t\t<select\n\t\t\t\t\tid=\"network\"\n\t\t\t\t\tbind:value={$form.network}\n\t\t\t\t\tonchange={handleChange}\n\t\t\t\t\tclass=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm text-gray-800\"\n\t\t\t\t>\n\t\t\t\t\t{#if $form.blockchain === 'ethereum'}\n\t\t\t\t\t\t<option value=\"mainnet\">Mainnet</option>\n\t\t\t\t\t\t<option value=\"sepolia\">Sepolia Testnet</option>\n\t\t\t\t\t\t<option value=\"goerli\">Goerli Testnet</option>\n\t\t\t\t\t{:else if $form.blockchain === 'solana'}\n\t\t\t\t\t\t<option value=\"mainnet-beta\">Mainnet Beta</option>\n\t\t\t\t\t\t<option value=\"testnet\">Testnet</option>\n\t\t\t\t\t\t<option value=\"devnet\">Devnet</option>\n\t\t\t\t\t{:else if $form.blockchain === 'bitcoin'}\n\t\t\t\t\t\t<option value=\"mainnet\">Mainnet</option>\n\t\t\t\t\t\t<option value=\"testnet\">Testnet</option>\n\t\t\t\t\t{:else}\n\t\t\t\t\t\t<option value=\"mainnet\">Mainnet</option>\n\t\t\t\t\t\t<option value=\"testnet\">Testnet</option>\n\t\t\t\t\t{/if}\n\t\t\t\t</select>\n\t\t\t\t{#if $errors.network}\n\t\t\t\t\t<p class=\"mt-2 text-sm text-red-600\">{$errors.network}</p>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n\t\t\t<div>\n\t\t\t\t<div class=\"flex items-center gap-2\">\n\t\t\t\t\t<label for=\"standard\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-200\"\n\t\t\t\t\t\t>Token Standard <span class=\"text-red-500\">*</span></label\n\t\t\t\t\t>\n\t\t\t\t\t<Tooltip content=\"The token standard (ERC20, SPL, etc.)\">\n\t\t\t\t\t\t<span class=\"text-gray-400 hover:text-gray-600 cursor-help\">ⓘ</span>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\t\t\t\t<select\n\t\t\t\t\tid=\"standard\"\n\t\t\t\t\tbind:value={$form.standard}\n\t\t\t\t\tonchange={handleChange}\n\t\t\t\t\tclass=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm text-gray-800\"\n\t\t\t\t>\n\t\t\t\t\t{#if $form.blockchain === 'ethereum' || $form.blockchain === 'polygon' || $form.blockchain === 'arbitrum' || $form.blockchain === 'optimism' || $form.blockchain === 'base'}\n\t\t\t\t\t\t<option value=\"ERC20\">ERC20</option>\n\t\t\t\t\t\t<option value=\"ERC721\">ERC721 (NFT)</option>\n\t\t\t\t\t\t<option value=\"ERC1155\">ERC1155</option>\n\t\t\t\t\t{:else if $form.blockchain === 'solana'}\n\t\t\t\t\t\t<option value=\"SPL\">SPL Token</option>\n\t\t\t\t\t\t<option value=\"NFT\">Solana NFT</option>\n\t\t\t\t\t{:else if $form.blockchain === 'bitcoin'}\n\t\t\t\t\t\t<option value=\"BRC20\">BRC20</option>\n\t\t\t\t\t\t<option value=\"RUNES\">Runes</option>\n\t\t\t\t\t{:else if $form.blockchain === 'cosmos'}\n\t\t\t\t\t\t<option value=\"CW20\">CW20</option>\n\t\t\t\t\t\t<option value=\"IBC\">IBC Token</option>\n\t\t\t\t\t{:else}\n\t\t\t\t\t\t<option value=\"NATIVE\">Native Token</option>\n\t\t\t\t\t\t<option value=\"CUSTOM\">Custom</option>\n\t\t\t\t\t{/if}\n\t\t\t\t</select>\n\t\t\t\t{#if $errors.standard}\n\t\t\t\t\t<p class=\"mt-2 text-sm text-red-600\">{$errors.standard}</p>\n\t\t\t\t{/if}\n\t\t\t</div>\n\n\t\t\t{#if ['ethereum', 'polygon', 'arbitrum', 'optimism', 'base', 'bsc', 'avalanche'].includes($form.blockchain)}\n\t\t\t\t<div>\n\t\t\t\t\t<div class=\"flex items-center gap-2\">\n\t\t\t\t\t\t<label for=\"chainid\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-200\"\n\t\t\t\t\t\t\t>Chain ID <span class=\"text-red-500\">*</span></label\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<Tooltip content=\"The ID of the blockchain network (e.g., 1 for Ethereum Mainnet)\">\n\t\t\t\t\t\t\t<span class=\"text-gray-400 hover:text-gray-600 cursor-help\">ⓘ</span>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</div>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tid=\"chainid\"\n\t\t\t\t\t\tstep=\"1\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tplaceholder=\"Enter the chain ID\"\n\t\t\t\t\t\tclass=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm text-gray-800\"\n\t\t\t\t\t\tbind:value={$form.chainId}\n\t\t\t\t\t\tonchange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t{#if $errors.chainId}\n\t\t\t\t\t\t<p class=\"mt-2 text-sm text-red-600\">{$errors.chainId}</p>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\n\t\t<!-- Watch and Portfolio Options -->\n\t\t<div class=\"space-y-4 p-4 bg-gray-50 rounded-lg\">\n\t\t\t<h3 class=\"text-sm font-medium text-gray-900\">Token Options</h3>\n\t\t\t\n\t\t\t<div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n\t\t\t\t<div class=\"flex items-center\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tid=\"isWatchOnly\"\n\t\t\t\t\t\tbind:checked={$form.isWatchOnly}\n\t\t\t\t\t\tonchange={handleChange}\n\t\t\t\t\t\tclass=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n\t\t\t\t\t/>\n\t\t\t\t\t<label for=\"isWatchOnly\" class=\"ml-2 block text-sm text-gray-900\">\n\t\t\t\t\t\tWatch-only (track price but no transactions)\n\t\t\t\t\t</label>\n\t\t\t\t\t<Tooltip content=\"Enable this for tokens you want to track but can't transact with\">\n\t\t\t\t\t\t<span class=\"ml-1 text-gray-400 hover:text-gray-600 cursor-help\">ⓘ</span>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"flex items-center\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tid=\"portfolioIncluded\"\n\t\t\t\t\t\tbind:checked={$form.portfolioIncluded}\n\t\t\t\t\t\tonchange={handleChange}\n\t\t\t\t\t\tclass=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n\t\t\t\t\t/>\n\t\t\t\t\t<label for=\"portfolioIncluded\" class=\"ml-2 block text-sm text-gray-900\">\n\t\t\t\t\t\tInclude in portfolio total\n\t\t\t\t\t</label>\n\t\t\t\t\t<Tooltip content=\"Include this token's value in your total portfolio calculation\">\n\t\t\t\t\t\t<span class=\"ml-1 text-gray-400 hover:text-gray-600 cursor-help\">ⓘ</span>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"flex items-center\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tid=\"sidepanel\"\n\t\t\t\t\t\tbind:checked={$form.sidepanel}\n\t\t\t\t\t\tonchange={handleChange}\n\t\t\t\t\t\tclass=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n\t\t\t\t\t/>\n\t\t\t\t\t<label for=\"sidepanel\" class=\"ml-2 block text-sm text-gray-900\">\n\t\t\t\t\t\tShow in sidepanel\n\t\t\t\t\t</label>\n\t\t\t\t\t<Tooltip content=\"Show this token in the sidepanel view\">\n\t\t\t\t\t\t<span class=\"ml-1 text-gray-400 hover:text-gray-600 cursor-help\">ⓘ</span>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"flex items-center\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tid=\"isExchangeBalance\"\n\t\t\t\t\t\tbind:checked={$form.isExchangeBalance}\n\t\t\t\t\t\tonchange={handleChange}\n\t\t\t\t\t\tclass=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n\t\t\t\t\t/>\n\t\t\t\t\t<label for=\"isExchangeBalance\" class=\"ml-2 block text-sm text-gray-900\">\n\t\t\t\t\t\tExchange balance\n\t\t\t\t\t</label>\n\t\t\t\t\t<Tooltip content=\"This represents a balance on a centralized exchange\">\n\t\t\t\t\t\t<span class=\"ml-1 text-gray-400 hover:text-gray-600 cursor-help\">ⓘ</span>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<!-- Exchange Information (conditional) -->\n\t\t{#if $form.isExchangeBalance}\n\t\t\t<div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n\t\t\t\t<div>\n\t\t\t\t\t<div class=\"flex items-center gap-2\">\n\t\t\t\t\t\t<label for=\"exchange\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-200\">\n\t\t\t\t\t\t\tExchange\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Tooltip content=\"Which exchange this balance is on\">\n\t\t\t\t\t\t\t<span class=\"text-gray-400 hover:text-gray-600 cursor-help\">ⓘ</span>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</div>\n\t\t\t\t\t<select\n\t\t\t\t\t\tid=\"exchange\"\n\t\t\t\t\t\tbind:value={$form.exchange}\n\t\t\t\t\t\tonchange={handleChange}\n\t\t\t\t\t\tclass=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm text-gray-800\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"\">Select Exchange</option>\n\t\t\t\t\t\t<option value=\"binance\">Binance</option>\n\t\t\t\t\t\t<option value=\"coinbase\">Coinbase</option>\n\t\t\t\t\t\t<option value=\"kraken\">Kraken</option>\n\t\t\t\t\t\t<option value=\"okx\">OKX</option>\n\t\t\t\t\t\t<option value=\"bybit\">Bybit</option>\n\t\t\t\t\t\t<option value=\"kucoin\">KuCoin</option>\n\t\t\t\t\t\t<option value=\"gemini\">Gemini</option>\n\t\t\t\t\t\t<option value=\"other\">Other</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<div class=\"flex items-center gap-2\">\n\t\t\t\t\t\t<label for=\"exchangeSymbol\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-200\">\n\t\t\t\t\t\t\tExchange Symbol\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Tooltip content=\"Symbol used on the exchange (may differ from token symbol)\">\n\t\t\t\t\t\t\t<span class=\"text-gray-400 hover:text-gray-600 cursor-help\">ⓘ</span>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</div>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"exchangeSymbol\"\n\t\t\t\t\t\tplaceholder=\"Exchange-specific symbol\"\n\t\t\t\t\t\tclass=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm text-gray-800\"\n\t\t\t\t\t\tbind:value={$form.exchangeSymbol}\n\t\t\t\t\t\tonchange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t{/if}\n\n\t\t<!-- Additional Metadata -->\n\t\t<div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n\t\t\t<div>\n\t\t\t\t<div class=\"flex items-center gap-2\">\n\t\t\t\t\t<label for=\"coingeckoId\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-200\">\n\t\t\t\t\t\tCoinGecko ID\n\t\t\t\t\t</label>\n\t\t\t\t\t<Tooltip content=\"CoinGecko API identifier for price tracking\">\n\t\t\t\t\t\t<span class=\"text-gray-400 hover:text-gray-600 cursor-help\">ⓘ</span>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tid=\"coingeckoId\"\n\t\t\t\t\tplaceholder=\"e.g., bitcoin, ethereum\"\n\t\t\t\t\tclass=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm text-gray-800\"\n\t\t\t\t\tbind:value={$form.coingeckoId}\n\t\t\t\t\tonchange={handleChange}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<div class=\"flex items-center gap-2\">\n\t\t\t\t\t<label for=\"website\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-200\">\n\t\t\t\t\t\tWebsite\n\t\t\t\t\t</label>\n\t\t\t\t\t<Tooltip content=\"Official website URL\">\n\t\t\t\t\t\t<span class=\"text-gray-400 hover:text-gray-600 cursor-help\">ⓘ</span>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"url\"\n\t\t\t\t\tid=\"website\"\n\t\t\t\t\tplaceholder=\"https://example.com\"\n\t\t\t\t\tclass=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm text-gray-800\"\n\t\t\t\t\tbind:value={$form.website}\n\t\t\t\t\tonchange={handleChange}\n\t\t\t\t/>\n\t\t\t\t{#if $errors.website}\n\t\t\t\t\t<p class=\"mt-2 text-sm text-red-600\">{$errors.website}</p>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<div class=\"flex items-center gap-2\">\n\t\t\t\t<label\n\t\t\t\t\tfor=\"evmCompatible\"\n\t\t\t\t\tclass=\"block text-sm font-medium text-gray-700 dark:text-gray-200\">EVM compatible</label\n\t\t\t\t>\n\t\t\t\t<Tooltip content=\"Whether this token follows the Ethereum Virtual Machine standard\">\n\t\t\t\t\t<span class=\"text-gray-400 hover:text-gray-600 cursor-help\">ⓘ</span>\n\t\t\t\t</Tooltip>\n\t\t\t</div>\n\t\t\t<input\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tid=\"evmCompatible\"\n\t\t\t\tbind:checked={$form.evmCompatible}\n\t\t\t\tonchange={handleChange}\n\t\t\t/>\n\t\t\t{#if $errors.evmCompatible}\n\t\t\t\t<p class=\"mt-2 text-sm text-red-600\">{$errors.evmCompatible}</p>\n\t\t\t{/if}\n\t\t</div>\n\n\t\t<div>\n\t\t\t<div class=\"flex items-center gap-2\">\n\t\t\t\t<label for=\"logoURI\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-200\"\n\t\t\t\t\t>Logo URI</label\n\t\t\t\t>\n\t\t\t\t<Tooltip content=\"URL to the token's logo image (should be a direct link to an image)\">\n\t\t\t\t\t<span class=\"text-gray-400 hover:text-gray-600 cursor-help\">ⓘ</span>\n\t\t\t\t</Tooltip>\n\t\t\t</div>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tid=\"logoURI\"\n\t\t\t\tplaceholder=\"Enter the URL (https://...) for the logo\"\n\t\t\t\tclass=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm text-gray-800\"\n\t\t\t\tbind:value={$form.logoURI}\n\t\t\t\tonchange={handleChange}\n\t\t\t/>\n\t\t\t{#if $errors.logoURI}\n\t\t\t\t<p class=\"mt-2 text-sm text-red-600\">{$errors.logoURI}</p>\n\t\t\t{/if}\n\t\t</div>\n\n\t\t<div>\n\t\t\t<div class=\"flex items-center gap-2\">\n\t\t\t\t<label for=\"url\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-200\"\n\t\t\t\t\t>URL</label\n\t\t\t\t>\n\t\t\t\t<Tooltip content=\"URL to the token's explorer or website (optional)\">\n\t\t\t\t\t<span class=\"text-gray-400 hover:text-gray-600 cursor-help\">ⓘ</span>\n\t\t\t\t</Tooltip>\n\t\t\t</div>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tid=\"url\"\n\t\t\t\tplaceholder=\"Optional:Enter the URL (https://...) for the token\"\n\t\t\t\tclass=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm text-gray-800\"\n\t\t\t\tbind:value={$form.url}\n\t\t\t\tonchange={handleChange}\n\t\t\t/>\n\t\t\t{#if $errors.url}\n\t\t\t\t<p class=\"mt-2 text-sm text-red-600\">{$errors.url}</p>\n\t\t\t{/if}\n\t\t</div>\n\n\t\t<div class=\"pt-5\">\n\t\t\t<div class=\"flex justify-end space-x-4\">\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclass=\"rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n\t\t\t\t\tonclick={() => (show = false)}>Cancel</button\n\t\t\t\t>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclass=\"rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n\t\t\t\t\tonclick={resetForm}>Reset</button\n\t\t\t\t>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tclass=\"rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n\t\t\t\t\t>Save</button\n\t\t\t\t>\n\t\t\t</div>\n\t\t</div>\n\t</form>\n</Modal>\n","<!-- TokenListEnhanced.svelte - Membership-aware token display -->\n<script lang=\"ts\">\n\timport type { TokenData, Settings } from '$lib/common';\n\timport { PlanType } from '$lib/common/types';\n\timport { getSettings } from '$lib/common/stores';\n\timport { \n\t\ttoBasicAnalytics, \n\t\ttoProAnalytics, \n\t\tshouldShowProFeatures,\n\t\ttype BasicTokenAnalytics,\n\t\ttype ProTokenAnalytics \n\t} from '$lib/common/token-analytics';\n\timport TokenForm from './TokenForm.svelte';\n\timport Confirmation from './Confirmation.svelte';\n\timport EditControls from './EditControls.svelte';\n\timport SimpleTooltip from './SimpleTooltip.svelte';\n\timport { getTokenChange } from '$lib/utilities/utilities';\n\timport { onMount } from 'svelte';\n\n\tinterface Props {\n\t\ttokens?: TokenData[];\n\t\tonTokenSelect?: (token: TokenData) => void;\n\t\tonTokenUpdate?: (token: TokenData) => void;\n\t\tonTokenDelete?: (token: TokenData) => void;\n\t}\n\n\tlet {\n\t\ttokens = [],\n\t\tonTokenSelect = () => {},\n\t\tonTokenUpdate = () => {},\n\t\tonTokenDelete = () => {}\n\t}: Props = $props();\n\n\tlet selectedToken: TokenData | null = $state(null);\n\tlet showEditModal = $state(false);\n\tlet showDeleteModal = $state(false);\n\tlet settings: Settings | null = $state(null);\n\tlet isProUser = $state(false);\n\n\t// Currency formatter for USD values\n\tconst currencyFormatter = new Intl.NumberFormat('en-US', {\n\t\tstyle: 'currency',\n\t\tcurrency: 'USD',\n\t\tminimumFractionDigits: 2,\n\t\tmaximumFractionDigits: 2\n\t});\n\n\t// Formatter for precise values (shows more decimals)\n\tconst preciseFormatter = new Intl.NumberFormat('en-US', {\n\t\tstyle: 'currency',\n\t\tcurrency: 'USD',\n\t\tminimumFractionDigits: 2,\n\t\tmaximumFractionDigits: 8\n\t});\n\n\t// Percentage formatter\n\tconst percentFormatter = new Intl.NumberFormat('en-US', {\n\t\tstyle: 'percent',\n\t\tminimumFractionDigits: 1,\n\t\tmaximumFractionDigits: 1\n\t});\n\n\tonMount(async () => {\n\t\tsettings = await getSettings();\n\t\tisProUser = shouldShowProFeatures(settings?.plan?.type || PlanType.BASIC_MEMBER);\n\t});\n\n\tfunction handleEdit(token: TokenData) {\n\t\tselectedToken = token;\n\t\tshowEditModal = true;\n\t}\n\n\tfunction handleDelete(token: TokenData) {\n\t\tif (token?.customDefault === 'custom') {\n\t\t\tselectedToken = token;\n\t\t\tshowDeleteModal = true;\n\t\t}\n\t}\n\n\tfunction confirmDelete() {\n\t\tif (selectedToken && selectedToken?.customDefault === 'custom') {\n\t\t\tonTokenDelete(selectedToken);\n\t\t\tshowDeleteModal = false;\n\t\t\tselectedToken = null;\n\t\t}\n\t}\n\n\tfunction getAnalyticsData(token: TokenData) {\n\t\treturn isProUser ? toProAnalytics(token) : toBasicAnalytics(token);\n\t}\n\n\tfunction formatLargeNumber(value: number): string {\n\t\tif (value >= 1e9) return `$${(value / 1e9).toFixed(2)}B`;\n\t\tif (value >= 1e6) return `$${(value / 1e6).toFixed(2)}M`;\n\t\tif (value >= 1e3) return `$${(value / 1e3).toFixed(2)}K`;\n\t\treturn currencyFormatter.format(value);\n\t}\n\n\tfunction getRiskColor(score: number): string {\n\t\tif (score <= 3) return 'text-green-600 bg-green-100';\n\t\tif (score <= 6) return 'text-yellow-600 bg-yellow-100';\n\t\treturn 'text-red-600 bg-red-100';\n\t}\n\n\tfunction getRiskLevel(score: number): string {\n\t\tif (score <= 3) return 'Low';\n\t\tif (score <= 6) return 'Medium';\n\t\treturn 'High';\n\t}\n</script>\n\n<ul class=\"overflow-hidden\">\n\t{#each tokens as token}\n\t\t{@const analytics = getAnalyticsData(token)}\n\t\t<li class=\"mb-3 relative overflow-hidden\">\n\t\t\t<button\n\t\t\t\tclass=\"w-full flex items-start rounded-lg p-3 transition-colors duration-200 overflow-hidden {token?.customDefault === 'custom'\n\t\t\t\t\t? 'bg-emerald-50 hover:bg-emerald-100 border border-emerald-200'\n\t\t\t\t\t: token?.sidepanel\n\t\t\t\t\t\t? 'bg-blue-50 hover:bg-blue-100 border border-blue-200'\n\t\t\t\t\t\t: 'bg-gray-50 hover:bg-gray-100 border border-gray-200'}\"\n\t\t\t\tonclick={() => onTokenSelect(token)}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"w-6 h-6 flex items-center justify-center rounded-full {token?.customDefault === 'custom'\n\t\t\t\t\t\t? 'bg-emerald-500'\n\t\t\t\t\t\t: token?.sidepanel\n\t\t\t\t\t\t\t? 'bg-blue-500'\n\t\t\t\t\t\t\t: 'bg-gray-500'} text-white mr-3 shrink-0\"\n\t\t\t\t>\n\t\t\t\t\t{#if token?.logoURI}\n\t\t\t\t\t\t<img src={token.logoURI} alt={token.symbol} class=\"w-6 h-6 rounded-full\" />\n\t\t\t\t\t{:else if token?.customDefault === 'custom'}\n\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-3 h-3\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z\" clip-rule=\"evenodd\" />\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t{:else}\n\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-3 h-3\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path fill-rule=\"evenodd\" d=\"M5 2a1 1 0 011 1v1h1a1 1 0 010 2H6v1a1 1 0 01-2 0V6H3a1 1 0 010-2h1V3a1 1 0 011-1zm0 10a1 1 0 011 1v1h1a1 1 0 110 2H6v1a1 1 0 11-2 0v-1H3a1 1 0 110-2h1v-1a1 1 0 011-1zM12 2a1 1 0 01.967.744L14.146 7.2 17.5 9.134a1 1 0 010 1.732L14.146 12.8l-1.179 4.456a1 1 0 01-1.934 0L9.854 12.8 6.5 10.866a1 1 0 010-1.732L9.854 7.2l1.179-4.456A1 1 0 0112 2z\" clip-rule=\"evenodd\" />\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div class=\"flex-1 min-w-0 overflow-hidden\">\n\t\t\t\t\t<div class=\"flex items-center justify-between mb-1\">\n\t\t\t\t\t\t<div class=\"flex items-center space-x-2\">\n\t\t\t\t\t\t\t<h3 class=\"text-sm font-semibold text-gray-800\">\n\t\t\t\t\t\t\t\t{token?.customDefault === 'custom' ? 'CUSTOM TOKEN' : 'COMMON TOKEN'}\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t{#if token?.sidepanel}\n\t\t\t\t\t\t\t\t<span class=\"text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded-full\">Visible</span>\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t{#if token?.customDefault === 'custom'}\n\t\t\t\t\t\t\t\t<span class=\"text-xs px-2 py-1 bg-emerald-100 text-emerald-700 rounded-full\">Custom</span>\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t{#if !isProUser}\n\t\t\t\t\t\t\t\t<SimpleTooltip content=\"Upgrade to Pro for advanced analytics\">\n\t\t\t\t\t\t\t\t\t<span class=\"text-xs px-2 py-1 bg-gray-100 text-gray-600 rounded-full cursor-help\">Basic</span>\n\t\t\t\t\t\t\t\t</SimpleTooltip>\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<!-- Token Name and Symbol -->\n\t\t\t\t\t<p class=\"text-sm font-medium text-gray-700 truncate mb-1\" title={token.name}>\n\t\t\t\t\t\t{token.name} ({token.symbol})\n\t\t\t\t\t</p>\n\t\t\t\t\t\n\t\t\t\t\t<!-- Basic Info - Shown to all users -->\n\t\t\t\t\t<div class=\"flex items-center space-x-4 mb-2\">\n\t\t\t\t\t\t{#if analytics.balance}\n\t\t\t\t\t\t\t{@const rawBalance = typeof analytics.balance === 'bigint' ? Number(analytics.balance) / Math.pow(10, analytics.decimals || 18) : Number(analytics.balance)}\n\t\t\t\t\t\t\t{@const balanceNumber = isNaN(rawBalance) ? 0 : rawBalance}\n\t\t\t\t\t\t\t{@const balanceValue = analytics.value}\n\t\t\t\t\t\t\t<SimpleTooltip content={`${balanceNumber.toFixed(8)} ${analytics.symbol} ≈ ${preciseFormatter.format(balanceValue)}`}>\n\t\t\t\t\t\t\t\t<span class=\"text-xs text-gray-600 font-medium cursor-help\" title=\"Token Balance\">\n\t\t\t\t\t\t\t\t\tBalance: {balanceNumber.toFixed(4)} {balanceValue > 0 ? `≈ ${currencyFormatter.format(balanceValue)}` : ''}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</SimpleTooltip>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\n\t\t\t\t\t\t{#if analytics.currentPrice > 0}\n\t\t\t\t\t\t\t<SimpleTooltip content={preciseFormatter.format(analytics.currentPrice)}>\n\t\t\t\t\t\t\t\t<span class=\"text-xs px-2 py-1 bg-green-100 text-green-700 rounded-full cursor-help\">\n\t\t\t\t\t\t\t\t\t{analytics.currentPrice < 0.01 ? '~< $0.01' : currencyFormatter.format(analytics.currentPrice)}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</SimpleTooltip>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<!-- Pro Features - Advanced Analytics -->\n\t\t\t\t\t{#if isProUser && 'priceChange24h' in analytics}\n\t\t\t\t\t\t{@const proData = analytics as ProTokenAnalytics}\n\t\t\t\t\t\t<div class=\"space-y-2 mb-2\">\n\t\t\t\t\t\t\t<!-- Price Changes -->\n\t\t\t\t\t\t\t<div class=\"flex items-center space-x-2\">\n\t\t\t\t\t\t\t\t<span class=\"text-xs px-2 py-1 rounded-full {proData.priceChange24h >= 0 ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700'}\">\n\t\t\t\t\t\t\t\t\t24h: {proData.priceChange24h >= 0 ? '+' : ''}{proData.priceChange24h.toFixed(2)}%\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span class=\"text-xs px-2 py-1 rounded-full {proData.priceChange7d >= 0 ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700'}\">\n\t\t\t\t\t\t\t\t\t7d: {proData.priceChange7d >= 0 ? '+' : ''}{proData.priceChange7d.toFixed(2)}%\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<!-- Market Data -->\n\t\t\t\t\t\t\t<div class=\"flex items-center space-x-2 text-xs text-gray-500\">\n\t\t\t\t\t\t\t\t<span title=\"Market Cap\">MC: {formatLargeNumber(proData.marketCap)}</span>\n\t\t\t\t\t\t\t\t<span title=\"24h Volume\">Vol: {formatLargeNumber(proData.volume24h)}</span>\n\t\t\t\t\t\t\t\t<span title=\"Risk Score\" class=\"px-2 py-1 rounded-full {getRiskColor(proData.riskScore)}\">\n\t\t\t\t\t\t\t\t\tRisk: {getRiskLevel(proData.riskScore)}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<!-- Technical Indicators -->\n\t\t\t\t\t\t\t<div class=\"flex items-center space-x-2 text-xs\">\n\t\t\t\t\t\t\t\t<span class=\"px-2 py-1 bg-purple-100 text-purple-700 rounded-full\" title=\"RSI\">\n\t\t\t\t\t\t\t\t\tRSI: {proData.technicalIndicators.rsi.toFixed(0)}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t{#if proData.yieldOpportunities.length > 0}\n\t\t\t\t\t\t\t\t\t<SimpleTooltip content={`${proData.yieldOpportunities.length} yield opportunities available`}>\n\t\t\t\t\t\t\t\t\t\t<span class=\"px-2 py-1 bg-yellow-100 text-yellow-700 rounded-full cursor-help\">\n\t\t\t\t\t\t\t\t\t\t\tMax APY: {Math.max(...proData.yieldOpportunities.map(y => y.apy)).toFixed(1)}%\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</SimpleTooltip>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<!-- Social Sentiment -->\n\t\t\t\t\t\t\t<div class=\"flex items-center space-x-2 text-xs\">\n\t\t\t\t\t\t\t\t<span class=\"px-2 py-1 rounded-full {proData.socialSentiment.score > 0 ? 'bg-green-100 text-green-700' : proData.socialSentiment.score < 0 ? 'bg-red-100 text-red-700' : 'bg-gray-100 text-gray-700'}\">\n\t\t\t\t\t\t\t\t\tSentiment: {proData.socialSentiment.score > 0 ? 'Positive' : proData.socialSentiment.score < 0 ? 'Negative' : 'Neutral'}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span class=\"text-gray-500\" title=\"Mentions in 24h\">\n\t\t\t\t\t\t\t\t\t{proData.socialSentiment.mentions24h} mentions\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{:else if token.change}\n\t\t\t\t\t\t<!-- Basic users still see basic price change -->\n\t\t\t\t\t\t{@const percentageValue = getTokenChange(token.change, '24h')}\n\t\t\t\t\t\t{#if percentageValue !== null}\n\t\t\t\t\t\t\t<div class=\"mb-2\">\n\t\t\t\t\t\t\t\t<span class=\"text-xs px-2 py-1 rounded-full {percentageValue >= 0 ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700'}\">\n\t\t\t\t\t\t\t\t\t24h: {percentageValue >= 0 ? '+' : ''}{percentageValue.toFixed(2)}%\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t{/if}\n\n\t\t\t\t\t<!-- Address -->\n\t\t\t\t\t<p class=\"text-xs text-gray-500 font-mono truncate mb-2\" title={token.address}>\n\t\t\t\t\t\t{token.address}\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<!-- Decimals Badge -->\n\t\t\t\t\t{#if token.decimals}\n\t\t\t\t\t\t<div class=\"flex items-center space-x-2\">\n\t\t\t\t\t\t\t<span class=\"text-xs px-2 py-1 bg-purple-100 text-purple-700 rounded-full\">\n\t\t\t\t\t\t\t\t{token.decimals} decimals\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\n\t\t\t\t\t<!-- Pro Feature Badges -->\n\t\t\t\t\t{#if !isProUser}\n\t\t\t\t\t\t<div class=\"mt-2 p-2 bg-amber-50 border border-amber-200 rounded\">\n\t\t\t\t\t\t\t<div class=\"text-xs text-amber-800\">\n\t\t\t\t\t\t\t\t<span class=\"font-medium\">🚀 Pro Insights Available:</span>\n\t\t\t\t\t\t\t\tAdvanced analytics, yield opportunities, risk analysis, and more\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t</button>\n\t\t\t\n\t\t\t<EditControls\n\t\t\t\tonCopy={() => navigator.clipboard.writeText(token.address)}\n\t\t\t\tonEdit={() => handleEdit(token)}\n\t\t\t\tonDelete={() => handleDelete(token)}\n\t\t\t\tcontrols={token?.customDefault === 'custom' ? ['copy', 'edit', 'delete'] : ['copy', 'edit']}\n\t\t\t\thasBalance={token.balance && Number(token.balance) > 0}\n\t\t\t/>\n\t\t</li>\n\t{/each}\n</ul>\n\n<TokenForm bind:show={showEditModal} token={selectedToken} onSubmit={onTokenUpdate} />\n\n<Confirmation\n\tbind:show={showDeleteModal}\n\tonConfirm={confirmDelete}\n\ttitle=\"Delete Token\"\n\tmessage=\"Are you sure you want to delete this token? This action cannot be undone.\"\n/>","<!-- TokensEnhanced.svelte -->\n<script lang=\"ts\">\n\timport {\n\t\tsetYakklTokenDataCustomStorage,\n\t\tyakklCombinedTokenStore,\n\t\tyakklCurrentlySelectedStore,\n\t\tyakklTokenDataCustomStore,\n\t\tgetSettings\n\t} from '$lib/common/stores';\n\timport { getInstances, type TokenData, type Settings } from '$lib/common';\n\timport { PlanType } from '$lib/common/types';\n\timport Modal from './Modal.svelte';\n\timport TokenListEnhanced from './TokenListEnhanced.svelte';\n\timport TokenForm from './TokenForm.svelte';\n\timport SimpleTooltip from './SimpleTooltip.svelte';\n\timport { onMount, onDestroy } from 'svelte';\n\timport type { TokenService } from '$lib/managers/blockchains/evm/TokenService';\n\timport type { Provider } from '$lib/managers/Provider';\n\timport { getTokenBalance } from '$lib/utilities/balanceUtils';\n\timport { log } from '$lib/managers/Logger';\n\n\tinterface Props {\n\t\tshow?: boolean;\n\t\tonTokenSelect?: (token: TokenData) => void;\n\t\tclassName?: string;\n\t}\n\n\tlet { show = $bindable(false), onTokenSelect = null, className = 'z-[899]' }: Props = $props();\n\n\tlet showAddModal = $state(false);\n\tlet tokens = $state<TokenData[]>([]); // Combined tokens for display\n\tlet provider: Provider | null = null;\n\tlet tokenService: TokenService<any> | null = null;\n\tlet settings: Settings | null = null;\n\tlet isBasicMember = $state(true);\n\tlet isRefreshing = $state(false);\n\tlet lastRefreshTime = $state<Date | null>(null);\n\tlet autoRefreshInterval: number | null = null;\n\t\n\tconst BASIC_AUTO_REFRESH_INTERVAL_MS = 300000; // 5 minutes for Basic members\n\tconst PRO_AUTO_REFRESH_INTERVAL_MS = 30000; // 30 seconds for Pro members\n\n\t// Load settings to check membership\n\tonMount(async () => {\n\t\tsettings = await getSettings();\n\t\tisBasicMember = settings?.plan?.type === PlanType.BASIC_MEMBER;\n\t\t\n\t\t// Setup instances\n\t\tconst instances = await getInstances();\n\t\tif (instances.length > 0) {\n\t\t\tprovider = instances[1];\n\t\t\ttokenService = instances[3];\n\t\t}\n\n\t\t// Setup auto-refresh for all members (different intervals)\n\t\tstartAutoRefresh();\n\t});\n\n\tonDestroy(() => {\n\t\tif (autoRefreshInterval) {\n\t\t\tclearInterval(autoRefreshInterval);\n\t\t}\n\t});\n\n\t// Subscribe to the combined token store for display\n\t$effect(() => {\n\t\ttokens = $yakklCombinedTokenStore; // Reactive combined store\n\t});\n\n\t// No cooldown needed since we have automatic refresh for all members\n\n\tfunction startAutoRefresh() {\n\t\tif (autoRefreshInterval) return;\n\t\t\n\t\tconst interval = isBasicMember ? BASIC_AUTO_REFRESH_INTERVAL_MS : PRO_AUTO_REFRESH_INTERVAL_MS;\n\t\t\n\t\tautoRefreshInterval = setInterval(async () => {\n\t\t\tif (!isRefreshing) {\n\t\t\t\tawait refreshTokenPrices(false);\n\t\t\t}\n\t\t}, interval) as unknown as number;\n\t}\n\n\tasync function refreshTokenPrices(showLoading = true) {\n\t\tif (isRefreshing) return;\n\t\t\n\t\tif (showLoading) {\n\t\t\tisRefreshing = true;\n\t\t}\n\n\t\ttry {\n\t\t\t// Here you would call your price update service\n\t\t\t// For now, we'll simulate the refresh\n\t\t\tlog.info('Refreshing token prices...', false);\n\t\t\t\n\t\t\t// Simulate API call delay\n\t\t\tawait new Promise(resolve => setTimeout(resolve, 1000));\n\t\t\t\n\t\t\t// In a real implementation, you would:\n\t\t\t// 1. Fetch updated prices from your price service\n\t\t\t// 2. Update the token store with new prices\n\t\t\t// 3. Update balances if needed\n\t\t\t\n\t\t\tlastRefreshTime = new Date();\n\t\t} catch (error) {\n\t\t\tlog.error('Error refreshing token prices:', false, error);\n\t\t} finally {\n\t\t\tisRefreshing = false;\n\t\t}\n\t}\n\n\tfunction handleTokenSelect(selectedToken: TokenData) {\n\t\tif (onTokenSelect !== null) {\n\t\t\tonTokenSelect(selectedToken);\n\t\t}\n\t\tshow = false;\n\t}\n\n\tasync function handleTokenAdd(token: TokenData) {\n\t\tif (token?.customDefault === 'custom') {\n\t\t\tconst balance = await getTokenBalance(\n\t\t\t\ttoken,\n\t\t\t\t$yakklCurrentlySelectedStore.shortcuts.address,\n\t\t\t\tprovider,\n\t\t\t\ttokenService\n\t\t\t);\n\t\t\ttoken.balance = balance;\n\t\t\tyakklTokenDataCustomStore.update((tokens) => [...tokens, token]);\n\t\t\tsetYakklTokenDataCustomStorage($yakklTokenDataCustomStore);\n\t\t}\n\t\tshowAddModal = false;\n\t}\n\n\tfunction handleTokenDelete(deletedToken: TokenData) {\n\t\tyakklTokenDataCustomStore.update((tokens) => {\n\t\t\tconst updatedTokens = tokens.filter((t) => t.address !== deletedToken.address);\n\t\t\tsetYakklTokenDataCustomStorage(updatedTokens);\n\t\t\treturn updatedTokens;\n\t\t});\n\t}\n\n\tfunction handleTokenUpdate(updatedToken: TokenData) {\n\t\tyakklTokenDataCustomStore.update((tokens) => {\n\t\t\tconst updatedTokens = tokens.map((t) =>\n\t\t\t\tt.address === updatedToken.address ? updatedToken : t\n\t\t\t);\n\t\t\tlog.info('updatedTokens', false, updatedTokens);\n\t\t\tsetYakklTokenDataCustomStorage(updatedTokens);\n\t\t\treturn updatedTokens;\n\t\t});\n\t}\n\n\n\tfunction closeModal() {\n\t\tshow = false;\n\t}\n</script>\n\n<Modal\n\tbind:show\n\ttitle=\"All Tokens\"\n\tdescription=\"View and manage your tokens\"\n\tonClose={closeModal}\n\t{className}\n>\n\t<div class=\"p-4\">\n\t\t<!-- Header with auto-refresh status -->\n\t\t<div class=\"flex items-center justify-between mb-4\">\n\t\t\t<div class=\"flex items-center gap-2\">\n\t\t\t\t<h3 class=\"text-lg font-semibold text-gray-800\">Token Portfolio</h3>\n\t\t\t\t<div class=\"flex items-center gap-1\">\n\t\t\t\t\t<div class=\"w-2 h-2 bg-green-600 rounded-full animate-pulse\"></div>\n\t\t\t\t\t<span class=\"text-xs text-gray-500\">\n\t\t\t\t\t\tAuto-refresh {isBasicMember ? '(5min)' : '(live)'}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t{#if isBasicMember}\n\t\t\t\t<SimpleTooltip content=\"Upgrade for real-time price updates and advanced analytics\">\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"#upgrade\"\n\t\t\t\t\t\tclass=\"text-xs text-indigo-600 hover:text-indigo-700 font-medium flex items-center gap-1\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<svg class=\"w-3 h-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n\t\t\t\t\t\t\t<path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t\tUpgrade for live prices\n\t\t\t\t\t</a>\n\t\t\t\t</SimpleTooltip>\n\t\t\t{/if}\n\t\t</div>\n\n\t\t{#if tokens.length > 0}\n\t\t\t<!-- Enhanced token list with Basic vs Pro features -->\n\t\t\t<div class=\"space-y-3 mb-4 max-h-96 overflow-y-auto\">\n\t\t\t\t<TokenListEnhanced\n\t\t\t\t\t{tokens}\n\t\t\t\t\tonTokenSelect={handleTokenSelect}\n\t\t\t\t\tonTokenUpdate={handleTokenUpdate}\n\t\t\t\t\tonTokenDelete={handleTokenDelete}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t\n\t\t\t<!-- Token count -->\n\t\t\t<div class=\"text-sm text-gray-500 text-center mb-4\">\n\t\t\t\tShowing all {tokens.length} token{tokens.length === 1 ? '' : 's'}\n\t\t\t</div>\n\t\t{:else}\n\t\t\t<!-- Empty state -->\n\t\t\t<div class=\"text-center py-12\">\n\t\t\t\t<div class=\"w-16 h-16 mx-auto mb-4 bg-gradient-to-br from-green-100 to-emerald-100 rounded-full flex items-center justify-center\">\n\t\t\t\t\t<svg class=\"w-8 h-8 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t\t<h3 class=\"text-lg font-semibold text-gray-700 mb-2\">No Tokens Found</h3>\n\t\t\t\t<p class=\"text-gray-500 mb-6\">Add tokens to start tracking your portfolio</p>\n\t\t\t</div>\n\t\t{/if}\n\n\t\t<!-- Action buttons and info -->\n\t\t<div class=\"border-t border-gray-200 pt-4\">\n\t\t\t<button\n\t\t\t\tonclick={() => {\n\t\t\t\t\tshowAddModal = true;\n\t\t\t\t\tshow = false;\n\t\t\t\t}}\n\t\t\t\tclass=\"w-full bg-gradient-to-r from-green-500 to-emerald-600 hover:from-green-600 hover:to-emerald-700 text-white font-semibold py-3 px-4 rounded-lg transition-all duration-200 shadow-md hover:shadow-lg flex items-center justify-center space-x-2\"\n\t\t\t>\n\t\t\t\t<svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n\t\t\t\t</svg>\n\t\t\t\t<span>Add Custom Token</span>\n\t\t\t</button>\n\t\t\t\n\t\t\t{#if isBasicMember}\n\t\t\t\t<div class=\"mt-3 p-3 bg-amber-50 rounded-lg border border-amber-200\">\n\t\t\t\t\t<div class=\"flex items-start\">\n\t\t\t\t\t\t<div class=\"flex-shrink-0\">\n\t\t\t\t\t\t\t<svg class=\"w-4 h-4 text-amber-600 mt-0.5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n\t\t\t\t\t\t\t\t<path fill-rule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"ml-2\">\n\t\t\t\t\t\t\t<p class=\"text-xs text-amber-800 font-medium\">\n\t\t\t\t\t\t\t\tManual refresh only - Upgrade to YAKKL Pro for:\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<ul class=\"text-xs text-amber-700 mt-1 space-y-0.5\">\n\t\t\t\t\t\t\t\t<li>• Automatic price updates with full analytics</li>\n\t\t\t\t\t\t\t\t<li>• Real-time portfolio tracking</li>\n\t\t\t\t\t\t\t\t<li>• Advanced token insights</li>\n\t\t\t\t\t\t\t\t<li>• Priority support</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t{:else}\n\t\t\t\t<div class=\"mt-3 p-3 bg-green-50 rounded-lg border border-green-200\">\n\t\t\t\t\t<div class=\"flex items-center\">\n\t\t\t\t\t\t<div class=\"flex-shrink-0\">\n\t\t\t\t\t\t\t<svg class=\"w-4 h-4 text-green-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n\t\t\t\t\t\t\t\t<path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"ml-2\">\n\t\t\t\t\t\t\t<p class=\"text-xs text-green-800\">\n\t\t\t\t\t\t\t\tEnjoying automatic price updates and full token analytics\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\t</div>\n</Modal>\n\n<TokenForm bind:show={showAddModal} onSubmit={handleTokenAdd} />","import { derived, type Readable } from 'svelte/store';\nimport { yakklCombinedTokenStore } from '$lib/common/stores';\nimport { log } from '$lib/managers/Logger';\nimport { DEBUG_ALL_LOGS } from '../constants';\nimport { computeTokenValue } from '$lib/common/computeTokenValue'; // Utility function to ensure accurate calculations\n\n// Type definition for the store value\nexport type TokenTotals = {\n\tportfolioTotal: number;\n\tformattedTotal: string;\n\tchainTotals: {\n\t\tbyChain: Record<number, number>;\n\t\tformatted: Record<string, string>;\n\t};\n};\n\n// Debugging flag (set to true when troubleshooting)\nconst DEBUG_LOGS = DEBUG_ALL_LOGS;\n\nexport const tokenTotals: Readable<TokenTotals> = derived(\n\tyakklCombinedTokenStore,\n\t(tokens, set) => {\n\t\tif (!tokens || tokens.length === 0) {\n\t\t\tlog.warn('No tokens found in yakklCombinedTokenStore. Skipping calculations.');\n\t\t\tset({\n\t\t\t\tportfolioTotal: 0,\n\t\t\t\tformattedTotal: '-------',\n\t\t\t\tchainTotals: { byChain: {}, formatted: {} }\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tlet portfolioTotal = 0;\n\t\tconst chainTotals: Record<number, number> = {};\n\n\t\t// Process all tokens\n\t\ttokens.forEach((token) => {\n\t\t\tif (!token) return;\n\n\t\t\tconst { value } = computeTokenValue(token); // Compute accurate token value\n\t\t\tportfolioTotal += value;\n\n\t\t\tconst chainId = token.chainId ?? -1; // Default to -1 if undefined\n\t\t\tchainTotals[chainId] = (chainTotals[chainId] ?? 0) + value;\n\t\t});\n\n\t\t// Format portfolio total\n\t\tconst formattedTotal =\n\t\t\tportfolioTotal > 0\n\t\t\t\t? new Intl.NumberFormat('en-US', {\n\t\t\t\t\t\tstyle: 'currency',\n\t\t\t\t\t\tcurrency: 'USD',\n\t\t\t\t\t\tminimumFractionDigits: 2,\n\t\t\t\t\t\tmaximumFractionDigits: 2\n\t\t\t\t\t}).format(portfolioTotal)\n\t\t\t\t: '-------';\n\n\t\t// Format totals per blockchain\n\t\tconst formattedChainTotals = Object.entries(chainTotals).reduce(\n\t\t\t(acc, [chainId, total]) => {\n\t\t\t\tacc[chainId] =\n\t\t\t\t\ttotal > 0\n\t\t\t\t\t\t? new Intl.NumberFormat('en-US', {\n\t\t\t\t\t\t\t\tstyle: 'currency',\n\t\t\t\t\t\t\t\tcurrency: 'USD',\n\t\t\t\t\t\t\t\tminimumFractionDigits: 2,\n\t\t\t\t\t\t\t\tmaximumFractionDigits: 2\n\t\t\t\t\t\t\t}).format(total)\n\t\t\t\t\t\t: '-------';\n\t\t\t\treturn acc;\n\t\t\t},\n\t\t\t{} as Record<string, string>\n\t\t);\n\n\t\t// Update store\n\t\tset({\n\t\t\tportfolioTotal,\n\t\t\tformattedTotal,\n\t\t\tchainTotals: {\n\t\t\t\tbyChain: chainTotals,\n\t\t\t\tformatted: formattedChainTotals\n\t\t\t}\n\t\t});\n\t},\n\t{\n\t\t// Initial Value\n\t\tportfolioTotal: 0,\n\t\tformattedTotal: '-------',\n\t\tchainTotals: { byChain: {}, formatted: {} }\n\t}\n);\n","<script lang=\"ts\">\n\tinterface Props {\n\t\tclassName?: string;\n\t}\n\n\tlet { className = 'w-6 h-6' }: Props = $props();\n</script>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class={className}>\n  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M20.25 6.375c0 2.278-3.694 4.125-8.25 4.125S3.75 8.653 3.75 6.375m16.5 0c0-2.278-3.694-4.125-8.25-4.125S3.75 4.097 3.75 6.375m16.5 0v11.25c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125V6.375m16.5 0v3.75m-16.5-3.75v3.75m16.5 0v3.75C20.25 16.153 16.556 18 12 18s-8.25-1.847-8.25-4.125v-3.75m16.5 0c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125\" />\n</svg>\n","<!-- PortfolioTotal.svelte -->\n<script lang=\"ts\">\n\timport { onMount, onDestroy } from 'svelte';\n\timport { yakklCombinedTokenStore, yakklCurrentlySelectedStore, yakklPricingStore, getSettings } from '$lib/common/stores';\n\timport { shouldShowProFeatures } from '$lib/common/token-analytics';\n\timport { tokenTotals } from '$lib/common/stores/tokenTotals';\n\timport type { TokenData, Settings } from '$lib/common/interfaces';\n\timport { PlanType } from '$lib/common/types';\n\timport { formatEther } from '$lib/utilities/utilities';\n\timport { log } from '$lib/managers/Logger';\n\timport ProtectedValue from './ProtectedValue.svelte';\n\timport SimpleTooltip from './SimpleTooltip.svelte';\n\n\tinterface Props {\n\t\tclassName?: string;\n\t\tshowDetails?: boolean;\n\t\tcurrency?: string;\n\t}\n\n\tlet {\n\t\tclassName = '',\n\t\tshowDetails = false,\n\t\tcurrency = 'USD'\n\t}: Props = $props();\n\n\t// Ensure currency is always a valid code\n\tlet validCurrency = $derived(currency && currency.length === 3 ? currency : 'USD');\n\n\tlet totalPortfolioValue = $state(0);\n\tlet portfolioBreakdown = $state<Array<{token: TokenData, value: number, percentage: number}>>([]);\n\tlet isCalculating = $state(false);\n\tlet showTooltip = $state(false);\n\tlet error = $state('');\n\tlet lastUpdated = $state('');\n\tlet settings: Settings | null = null;\n\tlet isBasicMember = $state(true);\n\tlet hasInitialLoad = $state(false);\n\n\t// Currency formatter - use reactive statement to handle currency changes\n\tlet currencyFormatter = $state<Intl.NumberFormat>();\n\n\t$effect(() => {\n\t\ttry {\n\t\t\tcurrencyFormatter = new Intl.NumberFormat('en-US', {\n\t\t\t\tstyle: 'currency',\n\t\t\t\tcurrency: validCurrency,\n\t\t\t\tminimumFractionDigits: 2,\n\t\t\t\tmaximumFractionDigits: 2\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tlog.warn('[PortfolioTotal] Invalid currency code, falling back to USD:', false, { currency: validCurrency, error });\n\t\t\tcurrencyFormatter = new Intl.NumberFormat('en-US', {\n\t\t\t\tstyle: 'currency',\n\t\t\t\tcurrency: 'USD',\n\t\t\t\tminimumFractionDigits: 2,\n\t\t\t\tmaximumFractionDigits: 2\n\t\t\t});\n\t\t}\n\t});\n\n\t// Percentage formatter\n\tconst percentFormatter = new Intl.NumberFormat('en-US', {\n\t\tstyle: 'percent',\n\t\tminimumFractionDigits: 1,\n\t\tmaximumFractionDigits: 1\n\t});\n\n\t// Auto-refresh interval\n\tlet refreshInterval: number | null = null;\n\n\t// Use the same reactive tokenTotals store as Card.svelte\n\t$effect(() => {\n\t\tconst totals = $tokenTotals;\n\t\ttotalPortfolioValue = totals.portfolioTotal;\n\t\t\n\t\t// Create breakdown from current tokens for tooltip\n\t\tconst tokens = $yakklCombinedTokenStore;\n\t\tif (tokens && tokens.length > 0) {\n\t\t\tconst breakdown: Array<{token: TokenData, value: number, percentage: number}> = [];\n\t\t\tlet totalValue = totals.portfolioTotal;\n\n\t\t\ttokens.forEach(token => {\n\t\t\t\tif (token.balance && token.price?.price) {\n\t\t\t\t\tlet balanceNum: number;\n\t\t\t\t\tif (typeof token.balance === 'bigint') {\n\t\t\t\t\t\tbalanceNum = Number(token.balance) / Math.pow(10, token.decimals || 18);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbalanceNum = Number(token.balance);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconst tokenValue = balanceNum * token.price.price;\n\t\t\t\t\tif (tokenValue > 0) {\n\t\t\t\t\t\tbreakdown.push({\n\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t\tvalue: tokenValue,\n\t\t\t\t\t\t\tpercentage: totalValue > 0 ? tokenValue / totalValue : 0\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Add native ETH if exists\n\t\t\tconst currentlySelected = $yakklCurrentlySelectedStore;\n\t\t\tconst ethPrice = $yakklPricingStore?.price || 0;\n\t\t\tif (currentlySelected?.shortcuts?.quantity && ethPrice > 0) {\n\t\t\t\tconst ethBalance = parseFloat(formatEther(currentlySelected.shortcuts.quantity));\n\t\t\t\tconst ethValue = ethBalance * ethPrice;\n\t\t\t\tif (ethValue > 0) {\n\t\t\t\t\tbreakdown.push({\n\t\t\t\t\t\ttoken: {\n\t\t\t\t\t\t\tname: 'Ethereum',\n\t\t\t\t\t\t\tsymbol: 'ETH',\n\t\t\t\t\t\t\taddress: '0x0000000000000000000000000000000000000000',\n\t\t\t\t\t\t\tdecimals: 18,\n\t\t\t\t\t\t\tchainId: 1,\n\t\t\t\t\t\t\tbalance: currentlySelected.shortcuts.quantity,\n\t\t\t\t\t\t\tprice: { price: ethPrice, provider: 'pricing-store', lastUpdated: new Date(), chainId: 1 },\n\t\t\t\t\t\t\tportfolioIncluded: true,\n\t\t\t\t\t\t\tblockchain: 'ethereum',\n\t\t\t\t\t\t\tisNative: true\n\t\t\t\t\t\t} as TokenData,\n\t\t\t\t\t\tvalue: ethValue,\n\t\t\t\t\t\tpercentage: totalValue > 0 ? ethValue / totalValue : 0\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbreakdown.sort((a, b) => b.value - a.value);\n\t\t\tportfolioBreakdown = breakdown;\n\t\t}\n\t\t\n\t\tlastUpdated = new Date().toLocaleTimeString();\n\t\thasInitialLoad = true;\n\t});\n\n\tonMount(async () => {\n\t\t// Load settings to check membership\n\t\tsettings = await getSettings();\n\t\tisBasicMember = !shouldShowProFeatures(settings?.plan?.type || PlanType.BASIC_MEMBER);\n\t});\n\n\tonDestroy(() => {\n\t\tif (refreshInterval) {\n\t\t\tclearInterval(refreshInterval);\n\t\t}\n\t\tif (tooltipTimeout) {\n\t\t\tclearTimeout(tooltipTimeout);\n\t\t}\n\t});\n\n\t// Portfolio now updates reactively via tokenTotals store\n\n\tlet tooltipTimeout: number | null = null;\n\tlet isHoveringTooltip = $state(false);\n\tlet isHoveringTrigger = $state(false);\n\tlet isManualRefreshing = $state(false);\n\tlet lastManualRefresh = $state(0);\n\tlet refreshCooldown = $state(0);\n\n\t// Show tooltip when hovering over trigger\n\t$effect(() => {\n\t\tif (isHoveringTrigger) {\n\t\t\tshowTooltip = true;\n\t\t}\n\t});\n\n\t// Hide tooltip when not hovering over either trigger or tooltip\n\t$effect(() => {\n\t\tif (!isHoveringTrigger && !isHoveringTooltip) {\n\t\t\t// Small delay to allow smooth transition between elements\n\t\t\tif (tooltipTimeout) clearTimeout(tooltipTimeout);\n\t\t\ttooltipTimeout = setTimeout(() => {\n\t\t\t\tshowTooltip = false;\n\t\t\t}, 50) as unknown as number;\n\t\t} else if (tooltipTimeout) {\n\t\t\tclearTimeout(tooltipTimeout);\n\t\t\ttooltipTimeout = null;\n\t\t}\n\t});\n\n\tfunction handleMouseEnter() {\n\t\tisHoveringTrigger = true;\n\t}\n\n\tfunction handleMouseLeave() {\n\t\tisHoveringTrigger = false;\n\t}\n\n\tfunction handleTooltipMouseEnter() {\n\t\tisHoveringTooltip = true;\n\t}\n\n\tfunction handleTooltipMouseLeave() {\n\t\tisHoveringTooltip = false;\n\t}\n\n\tfunction getTokenDisplayName(token: TokenData): string {\n\t\tif (token.isNative) {\n\t\t\treturn token.name;\n\t\t}\n\t\treturn token.alias || token.name;\n\t}\n\n\t// Manual refresh with debouncing (Pro users only)\n\tasync function handleManualRefresh() {\n\t\tif (!isBasicMember && !isManualRefreshing) {\n\t\t\tconst now = Date.now();\n\t\t\tconst timeSinceLastRefresh = now - lastManualRefresh;\n\t\t\tconst minInterval = 15000; // 15 seconds minimum between manual refreshes\n\n\t\t\tif (timeSinceLastRefresh < minInterval) {\n\t\t\t\trefreshCooldown = Math.ceil((minInterval - timeSinceLastRefresh) / 1000);\n\t\t\t\tconst cooldownInterval = setInterval(() => {\n\t\t\t\t\trefreshCooldown--;\n\t\t\t\t\tif (refreshCooldown <= 0) {\n\t\t\t\t\t\tclearInterval(cooldownInterval);\n\t\t\t\t\t}\n\t\t\t\t}, 1000);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tisManualRefreshing = true;\n\t\t\tlastManualRefresh = now;\n\t\t\t\n\t\t\ttry {\n\t\t\t\t// Force refresh of token data\n\t\t\t\t// This would trigger a refresh of yakklCombinedTokenStore and pricing data\n\t\t\t\tlog.debug('Manual portfolio refresh triggered', false);\n\t\t\t\t\n\t\t\t\t// Simulate refresh time\n\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 1000));\n\t\t\t\t\n\t\t\t\t// The reactive tokenTotals store will automatically update\n\t\t\t\tlastUpdated = new Date().toLocaleTimeString();\n\t\t\t\t\n\t\t\t} catch (error) {\n\t\t\t\tlog.error('Manual refresh failed:', false, error);\n\t\t\t} finally {\n\t\t\t\tisManualRefreshing = false;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check if manual refresh is available\n\tconst canManualRefresh = $derived(() => {\n\t\tif (isBasicMember || isManualRefreshing) return false;\n\t\tconst timeSinceLastRefresh = Date.now() - lastManualRefresh;\n\t\treturn timeSinceLastRefresh >= 15000; // 15 seconds cooldown\n\t});\n</script>\n\n<div class=\"relative inline-block {className}\">\n\t<!-- Main Portfolio Display -->\n\t<div\n\t\tclass=\"group cursor-pointer\"\n\t\trole=\"button\"\n\t\ttabindex=\"0\"\n\t\tonmouseenter={handleMouseEnter}\n\t\tonmouseleave={handleMouseLeave}\n\t\tonfocus={handleMouseEnter}\n\t\tonblur={handleMouseLeave}\n\t>\n\t\t<div class=\"flex items-center gap-2 p-3 bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 rounded-lg shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105\">\n\t\t\t<!-- Portfolio Icon -->\n\t\t\t<div class=\"flex-shrink-0\">\n\t\t\t\t<svg class=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\"></path>\n\t\t\t\t</svg>\n\t\t\t</div>\n\n\t\t\t<!-- Portfolio Value -->\n\t\t\t<div class=\"flex-1 min-w-0\">\n\t\t\t\t<div class=\"text-white text-sm font-medium opacity-90\">Total Portfolio</div>\n\t\t\t\t<div class=\"text-white text-lg font-bold\">\n\t\t\t\t\t{#if isCalculating}\n\t\t\t\t\t\t<div class=\"flex items-center gap-2\">\n\t\t\t\t\t\t\t<div class=\"animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent\"></div>\n\t\t\t\t\t\t\t<span class=\"text-sm\">Calculating...</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{:else if error}\n\t\t\t\t\t\t<span class=\"text-red-200 text-sm\">Error</span>\n\t\t\t\t\t{:else}\n\t\t\t\t\t\t<ProtectedValue\n\t\t\t\t\t\t\tvalue={currencyFormatter ? currencyFormatter.format(totalPortfolioValue) : `$${totalPortfolioValue.toFixed(2)}`}\n\t\t\t\t\t\t\tplaceholder=\"*****\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- Auto-refresh indicator -->\n\t\t\t{#if hasInitialLoad && !isCalculating}\n\t\t\t\t<div class=\"flex-shrink-0\">\n\t\t\t\t\t<SimpleTooltip content={isBasicMember ? \"Auto-refreshes every 5 minutes\" : \"Auto-refreshes every minute\"}>\n\t\t\t\t\t\t<div class=\"text-white/80 p-1 flex items-center gap-1\">\n\t\t\t\t\t\t\t<div class=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n\t\t\t\t\t\t\t<span class=\"text-xs\">Auto</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</SimpleTooltip>\n\t\t\t\t</div>\n\t\t\t{/if}\n\n\t\t\t<!-- Last Updated Indicator -->\n\t\t\t{#if lastUpdated && !isCalculating}\n\t\t\t\t<div class=\"flex-shrink-0 text-white text-xs opacity-75\">\n\t\t\t\t\t{lastUpdated}\n\t\t\t\t</div>\n\t\t\t{/if}\n\n\t\t\t<!-- Manual Refresh Button (Pro users only) -->\n\t\t\t{#if !isBasicMember}\n\t\t\t\t<div class=\"flex-shrink-0\">\n\t\t\t\t\t<SimpleTooltip content={refreshCooldown > 0 ? `Wait ${refreshCooldown}s before next refresh` : canManualRefresh ? \"Manual refresh (Pro feature)\" : \"Refreshing...\"}>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonclick={handleManualRefresh}\n\t\t\t\t\t\t\tdisabled={!canManualRefresh}\n\t\t\t\t\t\t\tclass=\"p-1 text-white/80 hover:text-white hover:bg-white/10 rounded transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{#if isManualRefreshing}\n\t\t\t\t\t\t\t\t<div class=\"animate-spin w-3 h-3 border border-white border-t-transparent rounded-full\"></div>\n\t\t\t\t\t\t\t{:else if refreshCooldown > 0}\n\t\t\t\t\t\t\t\t<span class=\"text-xs font-medium\">{refreshCooldown}</span>\n\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t<svg class=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</SimpleTooltip>\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\t</div>\n\n\t<!-- Detailed Tooltip -->\n\t{#if showTooltip && portfolioBreakdown.length > 0}\n\t\t<div \n\t\t\tclass=\"absolute z-50 w-80 p-4 mt-2 bg-white rounded-lg shadow-xl border border-gray-200 left-0 top-full\"\n\t\t\trole=\"tooltip\"\n\t\t\taria-label=\"Portfolio breakdown details\"\n\t\t\tonmouseenter={handleTooltipMouseEnter}\n\t\t\tonmouseleave={handleTooltipMouseLeave}\n\t\t>\n\t\t\t<div class=\"space-y-3\">\n\t\t\t\t<div class=\"flex items-center justify-between\">\n\t\t\t\t\t<h3 class=\"text-lg font-semibold text-gray-900\">Portfolio Breakdown</h3>\n\t\t\t\t\t<span class=\"text-sm text-gray-500\">Updated: {lastUpdated}</span>\n\t\t\t\t</div>\n\n\t\t\t\t{#if error}\n\t\t\t\t\t<div class=\"text-red-600 text-sm\">{error}</div>\n\t\t\t\t{:else if isBasicMember}\n\t\t\t\t\t<!-- Basic Member: Show all tokens with values only (no percentages or analytics) -->\n\t\t\t\t\t<div class=\"space-y-2 max-h-60 overflow-y-auto\">\n\t\t\t\t\t\t{#each portfolioBreakdown as item}\n\t\t\t\t\t\t\t<div class=\"flex items-center justify-between p-2 bg-gray-50 rounded\">\n\t\t\t\t\t\t\t\t<div class=\"flex items-center gap-3\">\n\t\t\t\t\t\t\t\t\t{#if item.token.logoURI}\n\t\t\t\t\t\t\t\t\t\t<img src={item.token.logoURI} alt={item.token.symbol} class=\"w-6 h-6 rounded-full\" />\n\t\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t\t<div class=\"w-6 h-6 bg-gray-300 rounded-full flex items-center justify-center text-xs font-bold text-gray-600\">\n\t\t\t\t\t\t\t\t\t\t\t{item.token.symbol.charAt(0)}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"font-medium text-gray-900\">{item.token.symbol}</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"text-sm text-gray-500\">{getTokenDisplayName(item.token)}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"text-right\">\n\t\t\t\t\t\t\t\t\t<div class=\"font-medium text-gray-900\">\n\t\t\t\t\t\t\t\t\t\t<ProtectedValue\n\t\t\t\t\t\t\t\t\t\t\tvalue={currencyFormatter ? currencyFormatter.format(item.value) : `$${item.value.toFixed(2)}`}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"*****\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"text-sm text-gray-500\">\n\t\t\t\t\t\t\t\t\t\t<!-- Skeleton with question mark for Basic users -->\n\t\t\t\t\t\t\t\t\t\t<SimpleTooltip content=\"Upgrade to Pro to see portfolio percentages, yield opportunities, and advanced analytics\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"flex items-center gap-1 cursor-help\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"w-8 h-3 bg-gray-200 rounded animate-pulse\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"w-3 h-3 bg-gradient-to-r from-indigo-400 to-purple-400 rounded-full flex items-center justify-center hover:from-indigo-500 hover:to-purple-500 transition-colors\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg class=\"w-2 h-2 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</SimpleTooltip>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<!-- Total for Basic users -->\n\t\t\t\t\t<div class=\"pt-2 border-t border-gray-200\">\n\t\t\t\t\t\t<div class=\"flex justify-between items-center mb-2\">\n\t\t\t\t\t\t\t<span class=\"font-semibold text-gray-900\">Total</span>\n\t\t\t\t\t\t\t<span class=\"font-bold text-lg text-gray-900\">\n\t\t\t\t\t\t\t\t<ProtectedValue\n\t\t\t\t\t\t\t\t\tvalue={currencyFormatter ? currencyFormatter.format(totalPortfolioValue) : `$${totalPortfolioValue.toFixed(2)}`}\n\t\t\t\t\t\t\t\t\tplaceholder=\"*****\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div class=\"p-3 bg-gradient-to-r from-indigo-50 to-purple-50 border border-indigo-200 rounded-lg\">\n\t\t\t\t\t\t\t<div class=\"flex items-center gap-2\">\n\t\t\t\t\t\t\t\t<svg class=\"w-4 h-4 text-indigo-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n\t\t\t\t\t\t\t\t\t<path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t<div class=\"text-xs\">\n\t\t\t\t\t\t\t\t\t<div class=\"font-medium text-indigo-900\">Upgrade for full analytics</div>\n\t\t\t\t\t\t\t\t\t<div class=\"text-indigo-700\">Portfolio percentages, yield opportunities, risk analysis & more</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t{:else}\n\t\t\t\t\t<!-- Pro Member: Show full breakdown -->\n\t\t\t\t\t<div class=\"space-y-2 max-h-60 overflow-y-auto\">\n\t\t\t\t\t\t{#each portfolioBreakdown as item}\n\t\t\t\t\t\t\t<div class=\"flex items-center justify-between p-2 bg-gray-50 rounded\">\n\t\t\t\t\t\t\t\t<div class=\"flex items-center gap-3\">\n\t\t\t\t\t\t\t\t\t{#if item.token.logoURI}\n\t\t\t\t\t\t\t\t\t\t<img src={item.token.logoURI} alt={item.token.symbol} class=\"w-6 h-6 rounded-full\" />\n\t\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t\t<div class=\"w-6 h-6 bg-gray-300 rounded-full flex items-center justify-center text-xs font-bold text-gray-600\">\n\t\t\t\t\t\t\t\t\t\t\t{item.token.symbol.charAt(0)}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"font-medium text-gray-900\">{item.token.symbol}</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"text-sm text-gray-500\">{getTokenDisplayName(item.token)}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"text-right\">\n\t\t\t\t\t\t\t\t\t<div class=\"font-medium text-gray-900\">\n\t\t\t\t\t\t\t\t\t\t<ProtectedValue\n\t\t\t\t\t\t\t\t\t\t\tvalue={currencyFormatter ? currencyFormatter.format(item.value) : `$${item.value.toFixed(2)}`}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"*****\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"text-sm text-gray-500\">\n\t\t\t\t\t\t\t\t\t\t<ProtectedValue\n\t\t\t\t\t\t\t\t\t\t\tvalue={percentFormatter.format(item.percentage)}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"****\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"pt-2 border-t border-gray-200\">\n\t\t\t\t\t\t<div class=\"flex justify-between items-center\">\n\t\t\t\t\t\t\t<span class=\"font-semibold text-gray-900\">Total</span>\n\t\t\t\t\t\t\t<span class=\"font-bold text-lg text-gray-900\">\n\t\t\t\t\t\t\t\t<ProtectedValue\n\t\t\t\t\t\t\t\t\tvalue={currencyFormatter ? currencyFormatter.format(totalPortfolioValue) : `$${totalPortfolioValue.toFixed(2)}`}\n\t\t\t\t\t\t\t\t\tplaceholder=\"*****\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"text-sm text-gray-500 mt-1\">\n\t\t\t\t\t\t\t{portfolioBreakdown.length} asset{portfolioBreakdown.length === 1 ? '' : 's'} included\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</div>\n\t{/if}\n\n\t<!-- Optional detailed view -->\n\t{#if showDetails}\n\t\t<div class=\"mt-4 space-y-2\">\n\t\t\t{#each portfolioBreakdown as item}\n\t\t\t\t<div class=\"flex items-center justify-between p-2 bg-gray-100 rounded\">\n\t\t\t\t\t<span class=\"font-medium\">{item.token.symbol}</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<ProtectedValue\n\t\t\t\t\t\t\tvalue={currencyFormatter ? currencyFormatter.format(item.value) : `$${item.value.toFixed(2)}`}\n\t\t\t\t\t\t\tplaceholder=\"*****\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t{/each}\n\t\t</div>\n\t{/if}\n</div>\n\n<style>\n\t/* Custom animations */\n\t@keyframes pulse-glow {\n\t\t0%, 100% {\n\t\t\tbox-shadow: 0 0 5px rgba(99, 102, 241, 0.3);\n\t\t}\n\t\t50% {\n\t\t\tbox-shadow: 0 0 20px rgba(99, 102, 241, 0.6), 0 0 30px rgba(99, 102, 241, 0.3);\n\t\t}\n\t}\n\n\t.group:hover {\n\t\tanimation: pulse-glow 2s infinite;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { goto } from '$app/navigation';\n\timport { SpeedDial, SpeedDialButton } from 'flowbite-svelte';\n\timport {\n\t\tyakklPricingStore,\n\t\tsetYakklCurrentlySelectedStorage,\n\t\tgetYakklCurrentlySelected,\n\t\tgetMiscStore,\n\t\tyakklMiscStore,\n\t\tyakklCurrentlySelectedStore,\n\t\tyakklAccountsStore,\n\t\tyakklCombinedTokenStore\n\t} from '$lib/common/stores';\n\timport { PATH_LOGOUT } from '$lib/common/constants';\n\timport { onDestroy, onMount } from 'svelte';\n\timport { truncate } from '$lib/utilities/utilities';\n\timport { encryptData, decryptData } from '$lib/common/encryption';\n\timport { checkPricesCallback, startPricingChecks, stopCheckPrices } from '$lib/tokens/prices';\n\timport ErrorNoAction from '$lib/components/ErrorNoAction.svelte';\n\timport {\n\t\tNetworkType,\n\t\tgetInstances,\n\t\tisEncryptedData,\n\t\ttype CurrentlySelectedData,\n\t\ttype Network,\n\t\ttype TokenData,\n\t\ttype YakklAccount,\n\t\ttype YakklWatch\n\t} from '$lib/common';\n\timport type { BigNumberish } from '$lib/common/bignumber';\n\timport { Wallet } from '$lib/managers/Wallet';\n\timport { EthereumBigNumber } from '$lib/common/bignumber-ethereum';\n\timport Accounts from './Accounts.svelte';\n\timport Contacts from './Contacts.svelte';\n\timport TokensEnhanced from './TokensEnhanced.svelte';\n\timport Receive from './Receive.svelte';\n\timport ImportPrivateKey from './ImportPrivateKey.svelte';\n\timport ImportWatchAccount from './ImportWatchAccount.svelte';\n\timport Upgrade from './Upgrade.svelte';\n\timport type { Blockchain } from '$lib/managers/Blockchain';\n\timport type { TokenService } from '$lib/managers/blockchains/evm/TokenService';\n\timport type { Provider } from '$lib/managers/Provider';\n\timport type { Settings } from '$lib/common/interfaces';\n\timport EyeIcon from './icons/EyeIcon.svelte';\n\timport ProtectedValue from './ProtectedValue.svelte';\n\timport { tokenTotals } from '$lib/common/stores/tokenTotals'; // Used to display portfolio value in html below\n\timport { browserSvelte, browser_ext } from '$lib/common/environment';\n\timport { log } from '$lib/managers/Logger';\n\timport Copy from './Copy.svelte';\n\timport { updateTokenPrices } from '$lib/common/tokenPriceManager';\n\timport { getSettings } from '$lib/common/stores';\n\timport { PlanType, RegisteredType } from '$lib/common/types';\n\timport { balanceCacheManager } from '$lib/managers/BalanceCacheManager';\n\timport { accountTokenCacheManager } from '$lib/managers/AccountTokenCacheManager';\n\timport SkeletonBalance from './SkeletonBalance.svelte';\n\timport TokensIcon from './icons/TokensIcon.svelte';\n\timport PortfolioTotal from './PortfolioTotal.svelte';\n\timport SimpleTooltip from './SimpleTooltip.svelte';\n\timport { shouldShowProFeatures } from '$lib/common/token-analytics';\n\n\t// Helper function to determine if an error should be shown to the user\n\tfunction shouldShowErrorToUser(error: any): boolean {\n\t\tconst errorMessage = error?.message || error?.toString() || '';\n\n\t\t// Network/API errors that should be handled silently\n\t\tconst networkErrors = [\n\t\t\t'missing response',\n\t\t\t'timeout',\n\t\t\t'TIMEOUT',\n\t\t\t'SERVER_ERROR',\n\t\t\t'NETWORK_ERROR',\n\t\t\t'Failed to fetch',\n\t\t\t'fetch',\n\t\t\t'Connection failed',\n\t\t\t'Request timeout',\n\t\t\t'eth_getBalance',\n\t\t\t'call revert exception',\n\t\t\t'alchemy.com',\n\t\t\t'infura.io',\n\t\t\t'requestBody',\n\t\t\t'serverError',\n\t\t\t'code=SERVER_ERROR',\n\t\t\t'version=web/',\n\t\t\t'JsonRpcError',\n\t\t\t'RPC Error'\n\t\t];\n\n\t\treturn !networkErrors.some((pattern) =>\n\t\t\terrorMessage.toLowerCase().includes(pattern.toLowerCase())\n\t\t);\n\t}\n\n\t// Safely show an error with cooldown to prevent loops\n\tfunction showErrorSafely(errorMsg: any): void {\n\t\tif (errorCooldown) return; // Don't show if in cooldown\n\n\t\tif (shouldShowErrorToUser(errorMsg)) {\n\t\t\terrorValue = errorMsg as string;\n\t\t\terror = true;\n\n\t\t\t// Set cooldown to prevent rapid successive errors\n\t\t\terrorCooldown = true;\n\t\t\tsetTimeout(() => {\n\t\t\t\terrorCooldown = false;\n\t\t\t}, 3000); // 3 second cooldown\n\t\t}\n\t}\n\n\t// Manual refresh with debouncing (Pro users only)\n\tasync function handleManualRefresh() {\n\t\tif (isProUser && !isManualRefreshing) {\n\t\t\tconst now = Date.now();\n\t\t\tconst timeSinceLastRefresh = now - lastManualRefresh;\n\t\t\tconst minInterval = 15000; // 15 seconds minimum between manual refreshes\n\n\t\t\tif (timeSinceLastRefresh < minInterval) {\n\t\t\t\trefreshCooldown = Math.ceil((minInterval - timeSinceLastRefresh) / 1000);\n\t\t\t\tconst cooldownInterval = setInterval(() => {\n\t\t\t\t\trefreshCooldown--;\n\t\t\t\t\tif (refreshCooldown <= 0) {\n\t\t\t\t\t\tclearInterval(cooldownInterval);\n\t\t\t\t\t}\n\t\t\t\t}, 1000);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tisManualRefreshing = true;\n\t\t\tlastManualRefresh = now;\n\t\t\t\n\t\t\ttry {\n\t\t\t\tlog.debug('Manual Card refresh triggered', false);\n\t\t\t\t\n\t\t\t\t// Force refresh of token data and prices\n\t\t\t\tawait checkPricesCallback();\n\t\t\t\tawait updateTokenPrices();\n\t\t\t\t\n\t\t\t\t// Refresh balance and account data\n\t\t\t\tawait updateWithCurrentlySelected();\n\t\t\t\t\n\t\t\t} catch (error) {\n\t\t\t\tlog.error('Manual Card refresh failed:', false, error);\n\t\t\t\tshowErrorSafely('Failed to refresh data');\n\t\t\t} finally {\n\t\t\t\tisManualRefreshing = false;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check if manual refresh is available\n\tconst canManualRefresh = $derived(() => {\n\t\tif (!isProUser || isManualRefreshing) return false;\n\t\tconst timeSinceLastRefresh = Date.now() - lastManualRefresh;\n\t\treturn timeSinceLastRefresh >= 15000; // 15 seconds cooldown\n\t});\n\n\tinterface Props {\n\t\tid?: string;\n\t}\n\n\tlet { id = 'card' }: Props = $props();\n\n\tlet wallet: Wallet | null = null;\n\tlet provider: Provider | null = null;\n\tlet blockchain: Blockchain | null = null;\n\tlet tokenService: TokenService<any> | null = null;\n\n\t// Pull this from the store later\n\tlet networks: Network[] = [\n\t\t{\n\t\t\tblockchain: 'Ethereum',\n\t\t\tname: 'Mainnet',\n\t\t\tchainId: 1,\n\t\t\tsymbol: 'ETH',\n\t\t\ttype: NetworkType.MAINNET,\n\t\t\texplorer: 'https://etherscan.io',\n\t\t\tdecimals: 18\n\t\t},\n\t\t{\n\t\t\tblockchain: 'Ethereum',\n\t\t\tname: 'Sepolia',\n\t\t\tchainId: 11155111,\n\t\t\tsymbol: 'ETH',\n\t\t\ttype: NetworkType.TESTNET,\n\t\t\texplorer: 'https://sepolia.etherscan.io',\n\t\t\tdecimals: 18\n\t\t}\n\t];\n\n\tlet network: Network = $state(networks[0]);\n\tlet networkLabel = $state('Mainnet');\n\tlet addressShow: string = $state('Loading...');\n\tlet address: string = $state('');\n\tlet name: string = $state('Loading...');\n\tlet nameShow: string = $state('Loading...');\n\tlet valueFiat = $state('0.00');\n\tlet showAccountsModal = $state(false);\n\tlet showAccountImportModal = $state(false);\n\tlet showWatchAccountModal = $state(false);\n\tlet showContacts = $state(false);\n\tlet showTokens = $state(false);\n\tlet showRecv = $state(false);\n\tlet showUpgradeModal = $state(false);\n\n\tlet price: number = 0;\n\tlet prevPrice: number = 0;\n\tlet direction: string = $state('fl');\n\tlet showTestNetworks = true;\n\tlet error = $state(false);\n\tlet errorValue: string = $state('');\n\tlet errorCooldown = $state(false); // Prevent rapid error modal loops\n\tlet assetPriceValue: BigNumberish = $state(0n);\n\tlet assetPrice: string = $state('');\n\tlet card = 'background_gradient_2.png'; //'ethereum-background.png';\n\n\t// Use reactive store instead of one-time value\n\tlet symbolLabel: string = $state('');\n\t\n\t// Pro user check and manual refresh state\n\tlet isProUser = $state(false);\n\tlet isManualRefreshing = $state(false);\n\tlet lastManualRefresh = $state(0);\n\tlet refreshCooldown = $state(0);\n\tlet currencyLabel: string = $state('');\n\tlet currency: Intl.NumberFormat = $state();\n\tlet shortcutsValue: EthereumBigNumber = $state(EthereumBigNumber.from(0)); // .quantity is the amount of a given token the address holds\n\tlet chainId: number = $state(1);\n\tlet formattedEtherValue: string = $state('');\n\tlet isDropdownOpen = $state(false);\n\n\tlet tokens: TokenData[] = [];\n\tlet isCalculatingPortfolio = $state(false);\n\tlet portfolioValue = $state<string>('-----');\n\tlet portfolioCurrency = $state<string>('USD');\n\n\tlet settings = $state<Settings | null>(null);\n\tlet planType = $state<PlanType>(PlanType.BASIC_MEMBER);\n\n\t$effect(() => {\n\t\t(async () => {\n\t\t\tif (!isInitialized || !$yakklPricingStore || !$yakklMiscStore) return;\n\n\t\t\tif ($yakklPricingStore.price === $yakklPricingStore.prevPrice) {\n\t\t\t\tlog.info('Price has not changed.');\n\t\t\t\treturn; // No change\n\t\t\t}\n\t\t\tprice = $yakklPricingStore.price ?? 0;\n\t\t\tconst prevPrice = $yakklPricingStore.prevPrice ?? 0;\n\t\t\tlog.info('Price changed:', false, price, prevPrice);\n\t\t\tif (price) {\n\t\t\t\tif (price !== prevPrice) {\n\t\t\t\t\t// Update display values when price changes - don't fetch new balance to prevent loops\n\t\t\t\t\tawait updateWithCurrentlySelected();\n\t\t\t\t\tupdateDisplayValues(); // Calculate and update fiat values with new price\n\t\t\t\t}\n\t\t\t}\n\t\t})();\n\t});\n\n\t$effect(() => {\n\t\tif (!isInitialized || !assetPriceValue) return;\n\n\t\tconst newAssetPrice = currency ? currency.format(Number(assetPriceValue)) : '0.00';\n\t\tif (assetPrice !== newAssetPrice) {\n\t\t\tassetPrice = newAssetPrice; // Only update if the value changes\n\t\t}\n\t});\n\n\t$effect(() => {\n\t\tif (!isInitialized || address) return;\n\n\t\taddress = $yakklCurrentlySelectedStore?.shortcuts?.address ?? '';\n\t});\n\n\t// Track previous address to prevent unnecessary updates\n\tlet previousAddress = $state<string>('');\n\tlet isUpdatingBalance = $state(false);\n\tlet isInitialized = $state(false);\n\tlet initializationTimeout: number | null = null;\n\tlet updateDebounceTimeout: number | null = null;\n\n\t// React to changes in currently selected account\n\t$effect(() => {\n\t\tif (!isInitialized || !$yakklCurrentlySelectedStore || !$yakklMiscStore) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst address = $yakklCurrentlySelectedStore.shortcuts.address;\n\n\t\t// Only update if address actually changed\n\t\tif (address === previousAddress) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Skip all updates during initialization to prevent loops\n\t\tif (!isInitialized) {\n\t\t\treturn;\n\t\t}\n\n\t\tlog.info('[Card] Currently selected account changed, updating card display');\n\t\tpreviousAddress = address;\n\n\t\t// Clear any pending updates to prevent rapid successive calls\n\t\tif (updateDebounceTimeout) {\n\t\t\tclearTimeout(updateDebounceTimeout);\n\t\t}\n\n\t\t// First, load cached data immediately for instant display\n\t\tconst cached = balanceCacheManager.getCachedBalance(address);\n\n\t\tif (cached) {\n\t\t\tlog.info('[Card] Loading cached balance for immediate display');\n\t\t\t// Don't modify the store directly to prevent loops - just update display\n\t\t\tshortcutsValue = EthereumBigNumber.from(cached.balance);\n\t\t\tupdateWithCurrentlySelected();\n\t\t\tupdateDisplayValues(); // Calculate display values with cached balance\n\t\t} else {\n\t\t\t// No cache, update with current store values\n\t\t\tupdateWithCurrentlySelected();\n\t\t\tupdateDisplayValues(); // Calculate display values with current balance\n\t\t}\n\n\t\t// Load cached portfolio value immediately\n\t\tconst cachedPortfolio = accountTokenCacheManager.getCachedPortfolioValue(address);\n\t\tif (cachedPortfolio) {\n\t\t\tportfolioValue = currency\n\t\t\t\t? currency.format(cachedPortfolio.value)\n\t\t\t\t: cachedPortfolio.value.toFixed(2);\n\t\t\tportfolioCurrency = cachedPortfolio.currency;\n\t\t\tlog.debug('[Card] Loaded cached portfolio value:', false, {\n\t\t\t\tvalue: cachedPortfolio.value,\n\t\t\t\tcurrency: cachedPortfolio.currency\n\t\t\t});\n\t\t} else {\n\t\t\t// No cached portfolio, start with loading state\n\t\t\tisCalculatingPortfolio = true;\n\t\t\tportfolioValue = '-----';\n\t\t}\n\n\t\t// Then refresh balance in background if needed\n\t\tif (!cached || balanceCacheManager.isStale(address)) {\n\t\t\tlog.info('[Card] Refreshing balance in background');\n\t\t\trefreshBalanceInBackground();\n\t\t}\n\n\t\t// Refresh portfolio if stale or missing\n\t\tif (!cachedPortfolio || accountTokenCacheManager.isPortfolioValueStale(address)) {\n\t\t\tlog.info('[Card] Refreshing portfolio value in background');\n\t\t\trefreshPortfolioInBackground();\n\t\t}\n\t});\n\n\t$effect.root(() => {\n\t\t// Subscribe to token store updates\n\t\tconst unsubscribeYakklStore = yakklCombinedTokenStore.subscribe((updatedTokens = []) => {\n\t\t\ttokens = updatedTokens; // Only keep the latest tokens up to date\n\n\t\t\t// Only recalculate portfolio if initialized and conditions are met\n\t\t\tif (\n\t\t\t\t!isInitialized ||\n\t\t\t\t!$yakklMiscStore ||\n\t\t\t\t!$yakklCurrentlySelectedStore?.shortcuts?.address ||\n\t\t\t\tupdatedTokens.length === 0 ||\n\t\t\t\tisCalculatingPortfolio\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Debounce portfolio calculations to prevent rapid successive calls\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (isInitialized && !isCalculatingPortfolio) {\n\t\t\t\t\tcalculateAndCachePortfolioValue(\n\t\t\t\t\t\t$yakklCurrentlySelectedStore.shortcuts.address,\n\t\t\t\t\t\tupdatedTokens\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}, 100);\n\t\t});\n\n\t\treturn () => {\n\t\t\tunsubscribeYakklStore();\n\t\t};\n\t});\n\n\tonMount(async () => {\n\t\ttry {\n\t\t\tlog.info('[Card] Component mounting...');\n\n\t\t\t// Load settings to check membership\n\t\t\tsettings = await getSettings();\n\t\t\tisProUser = shouldShowProFeatures(settings?.plan?.type || PlanType.BASIC_MEMBER);\n\n\t\t\tif (browserSvelte) {\n\t\t\t\tawait browser_ext.runtime.sendMessage({ type: 'clientReady' }); // Safeguard to ensure the client is ready before sending messages\n\n\t\t\t\t// Add message listener for YAKKL_ACCOUNT\n\t\t\t\t// Come back to this later - this is more cosmetic and not needed for now.\n\t\t\t\t// browser_ext.runtime.onMessage.addListener((message: unknown, sender, sendResponse) => {\n\t\t\t\t//   log.info('YAKKL_ACCOUNT message received', false, message);\n\t\t\t\t//   const typedMessage = message as { type: string; data: YakklAccount };\n\t\t\t\t//   if (typedMessage.type === 'YAKKL_ACCOUNT' && typedMessage.data) {\n\t\t\t\t//     handleAccounts(typedMessage.data);\n\t\t\t\t//     sendResponse({ success: true });\n\t\t\t\t//     log.info('YAKKL_ACCOUNT message sent', false, { success: true });\n\t\t\t\t//   }\n\t\t\t\t//   return true;\n\t\t\t\t// });\n\n\t\t\t\tstartPricingChecks();\n\t\t\t\tawait updateTokenPrices(); // Initial token price update\n\n\t\t\t\t// toastStatus = false;\n\t\t\t\tif (!$yakklCurrentlySelectedStore)\n\t\t\t\t\tyakklCurrentlySelectedStore.set(await getYakklCurrentlySelected());\n\t\t\t\t// Note: yakklMiscStore will be set during authentication via setMiscStore()\n\n\t\t\t\tif ($yakklCurrentlySelectedStore) {\n\t\t\t\t\tconst currentlySelected = $yakklCurrentlySelectedStore;\n\t\t\t\t\tcurrentlySelected.shortcuts.networks = networks;\n\n\t\t\t\t\tcurrencyLabel = currentlySelected.preferences.currency.code ?? 'USD';\n\t\t\t\t\tcurrency = new Intl.NumberFormat('en-US', { style: 'currency', currency: currencyLabel });\n\t\t\t\t\tsymbolLabel = currentlySelected.shortcuts.symbol ?? 'ETH';\n\t\t\t\t\tchainId = currentlySelected.shortcuts.network.chainId ?? 1;\n\n\t\t\t\t\tconst instances = await getInstances();\n\t\t\t\t\tif (instances.length > 0) {\n\t\t\t\t\t\twallet = instances[0];\n\t\t\t\t\t\tprovider = instances[1];\n\t\t\t\t\t\tblockchain = instances[2];\n\t\t\t\t\t\ttokenService = instances[3];\n\n\t\t\t\t\t\tif (wallet && provider && blockchain && tokenService) {\n\t\t\t\t\t\t\ttokenService.updateTokenBalances(currentlySelected.shortcuts.address);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// These are for the initial load and the intervals take over after this\n\t\t\t\t\tconst val = await getBalance(\n\t\t\t\t\t\tcurrentlySelected.shortcuts.network.chainId,\n\t\t\t\t\t\tcurrentlySelected.shortcuts.address\n\t\t\t\t\t);\n\t\t\t\t\tcurrentlySelected.shortcuts.quantity = val ?? 0n;\n\t\t\t\t\tcheckPricesCallback(); // Simple onetime price update for initial load - NOTE: Do not move this up any higher in the code or it will cause a loop. shortcuts.quantity is used in the updateValuePriceFiat function\n\n\t\t\t\t\tawait setYakklCurrentlySelectedStorage(currentlySelected); // This updates the store and local storage\n\n\t\t\t\t\t// Update display immediately\n\t\t\t\t\tupdateWithCurrentlySelected();\n\n\t\t\t\t\tif ($yakklCurrentlySelectedStore.shortcuts.quantity) {\n\t\t\t\t\t\tawait updateValuePriceFiat();\n\t\t\t\t\t\tupdateDisplayValues(); // Ensure display values are calculated\n\t\t\t\t\t}\n\t\t\t\t\t// updateUpgradeButton();\n\t\t\t\t}\n\n\t\t\t\tsettings = await getSettings();\n\t\t\t\tif (settings) {\n\t\t\t\t\tplanType = settings.plan.type as PlanType;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Initialize reactive effects after a short delay to prevent loops during load\n\t\t\tinitializationTimeout = setTimeout(() => {\n\t\t\t\t// Set the previous address to current address to prevent initial trigger\n\t\t\t\tif ($yakklCurrentlySelectedStore?.shortcuts?.address) {\n\t\t\t\t\tpreviousAddress = $yakklCurrentlySelectedStore.shortcuts.address;\n\t\t\t\t}\n\n\t\t\t\tisInitialized = true;\n\t\t\t\tlog.debug('[Card] Reactive effects initialized');\n\t\t\t}, 500) as unknown as number;\n\t\t} catch (e) {\n\t\t\tlog.warn(`onMount: ${e}`);\n\t\t}\n\t});\n\n\t// Effect to update cache when price changes\n\t$effect(() => {\n\t\tif (!isInitialized || !$yakklMiscStore) return;\n\n\t\tconst currentPrice = $yakklPricingStore?.price;\n\t\tif (currentPrice && currentPrice > 0) {\n\t\t\t// Update all cached entries with new price\n\t\t\tbalanceCacheManager.updatePriceForAllEntries(currentPrice);\n\t\t\tlog.debug('[Card] Price changed, updated all cached entries:', false, {\n\t\t\t\tnewPrice: currentPrice\n\t\t\t});\n\t\t}\n\t});\n\n\tasync function updateWithCurrentlySelected() {\n\t\ttry {\n\t\t\tconst { address, accountName, network, quantity } = $yakklCurrentlySelectedStore.shortcuts;\n\n\t\t\taddressShow = truncate(address, 6) + address.substring(address.length - 4);\n\t\t\tname = accountName;\n\t\t\tnameShow = truncate(accountName, 20);\n\t\t\tnetworkLabel = $yakklCurrentlySelectedStore.shortcuts.network.name ?? network.name;\n\t\t\tassetPriceValue = $yakklPricingStore?.price ?? 0;\n\t\t\tcurrencyLabel = $yakklCurrentlySelectedStore.preferences.currency.code ?? 'USD';\n\n\t\t\tshortcutsValue = EthereumBigNumber.from(quantity) ?? EthereumBigNumber.from(0); // .quantity is the amount of a given token the address holds\n\t\t\tchainId = network?.chainId ?? 1;\n\t\t} catch (e) {\n\t\t\tlog.warn(e);\n\t\t}\n\t}\n\n\tonDestroy(async () => {\n\t\tif (initializationTimeout) {\n\t\t\tclearTimeout(initializationTimeout);\n\t\t}\n\t\tif (updateDebounceTimeout) {\n\t\t\tclearTimeout(updateDebounceTimeout);\n\t\t}\n\t\tif ($yakklCurrentlySelectedStore) {\n\t\t\tawait setYakklCurrentlySelectedStorage($yakklCurrentlySelectedStore);\n\t\t}\n\t\tstopCheckPrices();\n\t});\n\n\tfunction toggleDropdown() {\n\t\tisDropdownOpen = !isDropdownOpen;\n\t}\n\n\tasync function refreshBalanceInBackground() {\n\t\ttry {\n\t\t\tif (!$yakklCurrentlySelectedStore || !wallet || isUpdatingBalance) return;\n\n\t\t\tisUpdatingBalance = true;\n\t\t\tconst address = $yakklCurrentlySelectedStore.shortcuts.address;\n\t\t\tconst chainId = $yakklCurrentlySelectedStore.shortcuts.network.chainId;\n\n\t\t\t// Get fresh balance\n\t\t\tconst freshBalance = await getBalance(chainId, address);\n\t\t\tif (freshBalance && freshBalance !== $yakklCurrentlySelectedStore.shortcuts.quantity) {\n\t\t\t\t// Update cache\n\t\t\t\tbalanceCacheManager.setCachedBalance(address, freshBalance, $yakklPricingStore?.price ?? 0);\n\n\t\t\t\t// Update store using .update() method to prevent direct mutation\n\t\t\t\tyakklCurrentlySelectedStore.update((current) => ({\n\t\t\t\t\t...current,\n\t\t\t\t\tshortcuts: { ...current.shortcuts, quantity: freshBalance }\n\t\t\t\t}));\n\n\t\t\t\t// Update display without calling updateValuePriceFiat to prevent loop\n\t\t\t\tupdateWithCurrentlySelected();\n\n\t\t\t\tlog.info('[Card] Background balance refresh completed');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tlog.warn('[Card] Background balance refresh failed:', false, error);\n\t\t\t// Don't show errors for background refreshes\n\t\t} finally {\n\t\t\tisUpdatingBalance = false;\n\t\t}\n\t}\n\n\tasync function refreshPortfolioInBackground() {\n\t\ttry {\n\t\t\tif (!$yakklCurrentlySelectedStore) return;\n\n\t\t\tconst address = $yakklCurrentlySelectedStore.shortcuts.address;\n\t\t\tisCalculatingPortfolio = true;\n\n\t\t\t// Get current tokens for this account (from cache or fresh)\n\t\t\tlet accountTokens = accountTokenCacheManager.getCachedTokensForAccount(address);\n\n\t\t\tif (!accountTokens || accountTokens.length === 0) {\n\t\t\t\t// Fall back to current tokens if no cached account-specific tokens\n\t\t\t\taccountTokens = tokens;\n\t\t\t}\n\n\t\t\tawait calculateAndCachePortfolioValue(address, accountTokens);\n\t\t} catch (error) {\n\t\t\tlog.warn('[Card] Background portfolio refresh failed:', false, error);\n\t\t\tisCalculatingPortfolio = false;\n\t\t\tportfolioValue = '-----';\n\t\t}\n\t}\n\n\tasync function calculateAndCachePortfolioValue(\n\t\taddress: string,\n\t\ttokenList: TokenData[]\n\t): Promise<void> {\n\t\ttry {\n\t\t\tisCalculatingPortfolio = true;\n\t\t\tlet totalValue = 0;\n\n\t\t\t// Calculate total portfolio value\n\t\t\tfor (const token of tokenList) {\n\t\t\t\tif (token.balance && token.price?.price) {\n\t\t\t\t\tlet balanceNum: number;\n\n\t\t\t\t\tif (typeof token.balance === 'bigint') {\n\t\t\t\t\t\t// Convert from wei to token units\n\t\t\t\t\t\tbalanceNum = Number(token.balance) / Math.pow(10, token.decimals || 18);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbalanceNum = Number(token.balance);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst tokenValue = balanceNum * token.price.price;\n\t\t\t\t\ttotalValue += tokenValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add native token value (ETH balance)\n\t\t\tif ($yakklCurrentlySelectedStore?.shortcuts?.quantity && $yakklPricingStore?.price) {\n\t\t\t\tconst ethValue =\n\t\t\t\t\tparseFloat(formatEther($yakklCurrentlySelectedStore.shortcuts.quantity)) *\n\t\t\t\t\t$yakklPricingStore.price;\n\t\t\t\ttotalValue += ethValue;\n\t\t\t}\n\n\t\t\t// Cache the portfolio value\n\t\t\tconst currencyCode = $yakklCurrentlySelectedStore?.preferences?.currency?.code ?? 'USD';\n\t\t\taccountTokenCacheManager.setCachedPortfolioValue(address, totalValue, currencyCode);\n\n\t\t\t// Update display\n\t\t\tportfolioValue = currency ? currency.format(totalValue) : totalValue.toFixed(2);\n\t\t\tportfolioCurrency = currencyCode;\n\t\t\tisCalculatingPortfolio = false;\n\n\t\t\tlog.info('[Card] Portfolio value calculated and cached:', false, {\n\t\t\t\taddress,\n\t\t\t\tvalue: totalValue,\n\t\t\t\tcurrency: currencyCode,\n\t\t\t\ttokenCount: tokenList.length\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tlog.warn('[Card] Error calculating portfolio value:', false, error);\n\t\t\tisCalculatingPortfolio = false;\n\t\t\tportfolioValue = '-----';\n\t\t}\n\t}\n\n\tasync function updateValuePriceFiat(): Promise<void> {\n\t\ttry {\n\t\t\tif (!$yakklCurrentlySelectedStore || isUpdatingBalance) {\n\t\t\t\tlog.warn('No currently selected account or already updating balance.');\n\t\t\t\tresetPriceData();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tisUpdatingBalance = true;\n\t\t\tlet { address, quantity, network } = $yakklCurrentlySelectedStore.shortcuts;\n\n\t\t\t// Avoid unnecessary balance fetch\n\t\t\tconst qty = await getBalance(network.chainId, address);\n\t\t\tif ($yakklCurrentlySelectedStore.shortcuts.quantity !== qty) {\n\t\t\t\t// Update the quantity field directly, not value to avoid loop\n\t\t\t\tyakklCurrentlySelectedStore.update((current) => ({\n\t\t\t\t\t...current,\n\t\t\t\t\tshortcuts: { ...current.shortcuts, quantity: qty ?? 0n }\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\t// Update cache with new balance and current price\n\t\t\tif (qty && $yakklPricingStore?.price) {\n\t\t\t\tbalanceCacheManager.setCachedBalance(address, qty, $yakklPricingStore.price);\n\t\t\t\tlog.info('[Card] Updated cache with new balance/price:', false, {\n\t\t\t\t\taddress,\n\t\t\t\t\tbalance: qty.toString(),\n\t\t\t\t\tprice: $yakklPricingStore.price\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Update fiat and ether values only if necessary\n\t\t\tconst price = EthereumBigNumber.from($yakklPricingStore?.price ?? 0);\n\t\t\tif ($yakklCurrentlySelectedStore.shortcuts.quantity !== price) {\n\t\t\t\tconst etherValue = parseFloat(\n\t\t\t\t\tformatEther($yakklCurrentlySelectedStore.shortcuts.quantity ?? 0n)\n\t\t\t\t);\n\n\t\t\t\tif (!isNaN(etherValue) && $yakklPricingStore?.price) {\n\t\t\t\t\tconst fiatValue = etherValue * $yakklPricingStore.price;\n\t\t\t\t\tconst etherValueString = etherValue.toFixed(5);\n\t\t\t\t\tif (formattedEtherValue !== etherValueString) {\n\t\t\t\t\t\tformattedEtherValue = etherValueString;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst newFiatValue = currency ? currency.format(fiatValue) : '0.00';\n\t\t\t\t\tif (valueFiat !== newFiatValue) {\n\t\t\t\t\t\tvalueFiat = newFiatValue;\n\t\t\t\t\t}\n\n\t\t\t\t\tupdatePriceDirection($yakklPricingStore.price);\n\t\t\t\t} else {\n\t\t\t\t\tresetPriceData();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlog.info('updateValuePriceFiat - Value NOT updated.');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tlog.warn('Error in updateValuePriceFiat:', false, error);\n\t\t\tresetPriceData();\n\t\t} finally {\n\t\t\tisUpdatingBalance = false;\n\t\t}\n\t}\n\n\tfunction setDefaultsForZeroAddress() {\n\t\ttry {\n\t\t\t// Dont want to trigger reactivity if the value is zero unless the previous value was something other than 0\n\t\t\tif (yakklCurrentlySelectedStore && $yakklCurrentlySelectedStore.shortcuts?.quantity !== 0n) {\n\t\t\t\tyakklCurrentlySelectedStore.update((current) => ({\n\t\t\t\t\t...current,\n\t\t\t\t\tshortcuts: { ...current.shortcuts, value: EthereumBigNumber.from(0) }\n\t\t\t\t}));\n\t\t\t}\n\t\t\tresetPriceData();\n\t\t} catch (e) {\n\t\t\tlog.warn(e);\n\t\t}\n\t}\n\n\tfunction updatePriceDirection(newPrice: number) {\n\t\tif (prevPrice > newPrice) {\n\t\t\tdirection = 'dn'; // down\n\t\t} else if (prevPrice < newPrice) {\n\t\t\tdirection = 'up'; // up\n\t\t} else {\n\t\t\tdirection = 'fl'; // flat\n\t\t}\n\t\tprevPrice = newPrice;\n\t}\n\n\tfunction resetPriceData() {\n\t\tvalueFiat = '0.00';\n\t\tformattedEtherValue = '0.00000';\n\t\tdirection = 'fl'; // flat\n\t}\n\n\t// Calculate display values without fetching fresh data (safe for reactive contexts)\n\tfunction updateDisplayValues() {\n\t\ttry {\n\t\t\tif (!$yakklCurrentlySelectedStore || !$yakklPricingStore?.price) {\n\t\t\t\tresetPriceData();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst quantity = $yakklCurrentlySelectedStore.shortcuts.quantity ?? 0n;\n\t\t\tconst etherValue = parseFloat(formatEther(quantity));\n\n\t\t\tif (!isNaN(etherValue) && $yakklPricingStore?.price) {\n\t\t\t\tconst fiatValue = etherValue * $yakklPricingStore.price;\n\t\t\t\tconst etherValueString = etherValue.toFixed(5);\n\n\t\t\t\tif (formattedEtherValue !== etherValueString) {\n\t\t\t\t\tformattedEtherValue = etherValueString;\n\t\t\t\t}\n\n\t\t\t\tconst newFiatValue = currency ? currency.format(fiatValue) : '0.00';\n\t\t\t\tif (valueFiat !== newFiatValue) {\n\t\t\t\t\tvalueFiat = newFiatValue;\n\t\t\t\t}\n\n\t\t\t\tupdatePriceDirection($yakklPricingStore.price);\n\t\t\t} else {\n\t\t\t\tresetPriceData();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tlog.warn('Error in updateDisplayValues:', false, error);\n\t\t\tresetPriceData();\n\t\t}\n\t}\n\n\tasync function handleAccounts(account: YakklAccount): Promise<void> {\n\t\ttry {\n\t\t\tif (!account) {\n\t\t\t\tlog.warn('Account is not defined.');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet updatedCurrentlySelected = $yakklCurrentlySelectedStore;\n\n\t\t\tif (updatedCurrentlySelected && isEncryptedData(updatedCurrentlySelected.data)) {\n\t\t\t\tif (!$yakklMiscStore) {\n\t\t\t\t\tlog.warn('Cannot decrypt data: yakklMiscStore is not available');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tupdatedCurrentlySelected.data = (await decryptData(\n\t\t\t\t\tupdatedCurrentlySelected.data,\n\t\t\t\t\t$yakklMiscStore\n\t\t\t\t)) as CurrentlySelectedData;\n\t\t\t}\n\n\t\t\t// Try to get cached balance first, fallback to fresh fetch\n\t\t\tlet balance: bigint;\n\t\t\tconst cached = balanceCacheManager.getCachedBalance(account.address);\n\t\t\tif (cached) {\n\t\t\t\tbalance = cached.balance;\n\t\t\t\tlog.info('[Card] Using cached balance for account selection:', false, {\n\t\t\t\t\taddress: account.address,\n\t\t\t\t\tbalance: balance.toString()\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tbalance = await getBalance(chainId ?? 1, account.address);\n\t\t\t\t\tlog.info('[Card] Fetched fresh balance for account selection:', false, {\n\t\t\t\t\t\taddress: account.address,\n\t\t\t\t\t\tbalance: balance.toString()\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tlog.warn('[Card] Failed to get balance, using 0:', false, error);\n\t\t\t\t\tbalance = 0n;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$yakklMiscStore) {\n\t\t\t\tlog.warn('Cannot encrypt data: yakklMiscStore is not available');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdatedCurrentlySelected = {\n\t\t\t\t...updatedCurrentlySelected,\n\t\t\t\tshortcuts: {\n\t\t\t\t\t...updatedCurrentlySelected.shortcuts,\n\t\t\t\t\taccountType: account.accountType,\n\t\t\t\t\taddress: account.address,\n\t\t\t\t\tprimary: account.primaryAccount,\n\t\t\t\t\taccountName: account.name,\n\t\t\t\t\tquantity: balance ?? EthereumBigNumber.from(0)\n\t\t\t\t},\n\t\t\t\tdata: await encryptData(\n\t\t\t\t\t{\n\t\t\t\t\t\t...updatedCurrentlySelected?.data,\n\t\t\t\t\t\taccount\n\t\t\t\t\t},\n\t\t\t\t\t$yakklMiscStore\n\t\t\t\t)\n\t\t\t};\n\n\t\t\tawait setYakklCurrentlySelectedStorage(updatedCurrentlySelected);\n\n\t\t\t// Send state change message for account update\n\t\t\tif (browserSvelte) {\n\t\t\t\tbrowser_ext.runtime\n\t\t\t\t\t.sendMessage({\n\t\t\t\t\t\ttype: 'YAKKL_STATE_CHANGE',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\taddress: account.address,\n\t\t\t\t\t\t\taccounts: [account.address]\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error: Error) => {\n\t\t\t\t\t\tlog.warn('Error sending account change message', true, error);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Update price and UI\n\t\t\tawait updateWithCurrentlySelected();\n\t\t\tawait updateValuePriceFiat();\n\t\t\tif (wallet && provider && blockchain && tokenService) {\n\t\t\t\tawait tokenService.updateTokenBalances($yakklCurrentlySelectedStore.shortcuts.address);\n\t\t\t}\n\n\t\t\t// Explicitly close the modal after successful account selection\n\t\t\tshowAccountsModal = false;\n\t\t} catch (error) {\n\t\t\tlog.warn('Error in handleAccounts:', false, error);\n\t\t\tshowAccountsModal = false;\n\t\t}\n\t}\n\n\tasync function handleNetworkTypeChange(net: Network) {\n\t\ttry {\n\t\t\tif ($yakklCurrentlySelectedStore) {\n\t\t\t\tisDropdownOpen = false;\n\t\t\t\tif (net.chainId === $yakklCurrentlySelectedStore.shortcuts.chainId) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst currentlySelected = $yakklCurrentlySelectedStore;\n\n\t\t\t\t// Update store using .update() method to prevent direct mutation\n\t\t\t\tyakklCurrentlySelectedStore.update((current) => ({\n\t\t\t\t\t...current,\n\t\t\t\t\tshortcuts: {\n\t\t\t\t\t\t...current.shortcuts,\n\t\t\t\t\t\tchainId: net.chainId,\n\t\t\t\t\t\tnetwork: net\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tchainId = net.chainId;\n\t\t\t\tnetwork = net;\n\n\t\t\t\tif (wallet) await wallet.setChainId(chainId);\n\n\t\t\t\tdirection = 'fl';\n\t\t\t\tcurrentlySelected.shortcuts.symbol = network.symbol;\n\t\t\t\tcurrentlySelected.shortcuts.type = network.type.toString();\n\n\t\t\t\tconst qty = await getBalance(chainId, currentlySelected.shortcuts.address);\n\t\t\t\tcurrentlySelected.shortcuts.quantity = qty ?? 0n;\n\n\t\t\t\tif (!isEncryptedData(currentlySelected.data)) {\n\t\t\t\t\tif ($yakklMiscStore) {\n\t\t\t\t\t\tconst encryptedData = await encryptData(currentlySelected.data, $yakklMiscStore);\n\t\t\t\t\t\tcurrentlySelected.data = encryptedData;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tawait setYakklCurrentlySelectedStorage(currentlySelected);\n\t\t\t\tawait updateValuePriceFiat();\n\t\t\t\tif (wallet && provider && blockchain && tokenService) {\n\t\t\t\t\ttokenService.updateTokenBalances($yakklCurrentlySelectedStore.shortcuts.address);\n\t\t\t\t}\n\n\t\t\t\t// Send state change message for chain ID update\n\t\t\t\tif (browserSvelte) {\n\t\t\t\t\tbrowser_ext.runtime\n\t\t\t\t\t\t.sendMessage({\n\t\t\t\t\t\t\ttype: 'YAKKL_STATE_CHANGE',\n\t\t\t\t\t\t\tdata: { chainId: net.chainId }\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error: Error) => {\n\t\t\t\t\t\t\tlog.warn('Error sending chain change message', true, error);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Close the dropdown\n\t\t\t\tisDropdownOpen = false;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tlog.warn('[Card] Network change error:', false, e);\n\n\t\t\t// Use safe error display method\n\t\t\tshowErrorSafely(e);\n\n\t\t\t// Reset dropdown state on any error\n\t\t\tisDropdownOpen = false;\n\t\t}\n\t}\n\n\tasync function handleContact() {\n\t\ttry {\n\t\t\tshowAccountImportModal = false;\n\t\t\tupdateValuePriceFiat();\n\t\t} catch (e) {\n\t\t\tlog.warn(e);\n\t\t}\n\t}\n\n\tasync function handleToken() {\n\t\ttry {\n\t\t\tshowAccountImportModal = false; // ?????????\n\t\t\tupdateValuePriceFiat();\n\t\t} catch (e) {\n\t\t\tlog.warn(e);\n\t\t}\n\t}\n\n\tasync function handleImport() {\n\t\ttry {\n\t\t\tlog.info('handleImport - Not implemented');\n\t\t} catch (e) {\n\t\t\tlog.warn(e);\n\t\t}\n\t}\n\n\tasync function handleWatchAccountComplete() {\n\t\t// Reload assets and prices when a watch account is added\n\t\tlog.info('Watch account added');\n\n\t\t// Refresh the portfolio calculation\n\t\tif (wallet && provider && blockchain && tokenService) {\n\t\t\tawait tokenService.updateTokenBalances($yakklCurrentlySelectedStore.shortcuts.address);\n\t\t}\n\n\t\tshowWatchAccountModal = false;\n\t}\n\n\t// Gets the ether balance for the given address\n\tasync function getBalance(chainId: number, address: string): Promise<bigint | null> {\n\t\ttry {\n\t\t\tif (chainId && wallet) {\n\t\t\t\tif (wallet.getChainId() !== chainId) {\n\t\t\t\t\tawait wallet.setChainId(chainId);\n\t\t\t\t}\n\t\t\t\tconst val = await wallet.getBalance(address);\n\n\t\t\t\t// Update cache with fetched balance\n\t\t\t\tif (val !== null && $yakklPricingStore?.price) {\n\t\t\t\t\tbalanceCacheManager.setCachedBalance(address, val, $yakklPricingStore.price);\n\t\t\t\t\tlog.debug('[Card] Updated cache in getBalance:', false, {\n\t\t\t\t\t\taddress,\n\t\t\t\t\t\tbalance: val.toString()\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn val;\n\t\t\t}\n\t\t\treturn null;\n\t\t} catch (e) {\n\t\t\tlog.warn('[Card] Balance fetch error:', false, e);\n\n\t\t\t// Use safe error display method\n\t\t\tshowErrorSafely(e);\n\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tfunction formatEther(value: BigNumberish): string {\n\t\ttry {\n\t\t\tconst val = EthereumBigNumber.from(value);\n\t\t\t// Convert from Wei to Ether and get string representation\n\t\t\treturn val.toEtherString();\n\t\t} catch (e) {\n\t\t\tlog.warn(e);\n\t\t\treturn '0.00000';\n\t\t}\n\t}\n\n\t// Handle error modal close with extended cooldown\n\tfunction handleErrorClose(): void {\n\t\terror = false;\n\t\terrorValue = '';\n\n\t\t// Set extended cooldown when user manually closes\n\t\terrorCooldown = true;\n\t\tsetTimeout(() => {\n\t\t\terrorCooldown = false;\n\t\t}, 10000); // 10 second cooldown after manual close\n\t}\n</script>\n\n<ErrorNoAction bind:show={error} value={errorValue} title=\"ERROR!\" onClose={handleErrorClose} />\n\n{#await $yakklAccountsStore}\n\t<p>o_o</p>\n{:then _}\n\t{#if $yakklAccountsStore != undefined}\n\t\t<Accounts\n\t\t\tbind:show={showAccountsModal}\n\t\t\tonAccountSelect={handleAccounts}\n\t\t\tonClose={() => (showAccountsModal = false)}\n\t\t\tclassName=\"text-gray-600\"\n\t\t/>\n\t\t<Contacts bind:show={showContacts} onContactSelect={handleContact} />\n\t\t<TokensEnhanced bind:show={showTokens} onTokenSelect={handleToken} />\n\t\t<Receive bind:show={showRecv} {address} />\n\t\t<ImportPrivateKey\n\t\t\tbind:show={showAccountImportModal}\n\t\t\tonComplete={handleImport}\n\t\t\tclassName=\"text-gray-600 z-[999]\"\n\t\t/>\n\t\t<ImportWatchAccount\n\t\t\tbind:show={showWatchAccountModal}\n\t\t\tonComplete={handleWatchAccountComplete}\n\t\t\tonCancel={() => (showWatchAccountModal = false)}\n\t\t\tclassName=\"text-gray-600 z-[999]\"\n\t\t/>\n\t\t<Upgrade\n\t\t\tbind:show={showUpgradeModal}\n\t\t\tonClose={() => (showUpgradeModal = false)}\n\t\t\tonCancel={() => (showUpgradeModal = false)}\n\t\t/>\n\t{/if}\n{/await}\n\n<div class=\"visible print:hidden relative top-0 mx-2\">\n\t<div\n\t\tstyle=\"z-index: 4; background-image: url('/images/{card}'); \"\n\t\tclass=\"visible print:hidden relative m-2 ml-0 mr-0 h-[261px] rounded-xl\"\n\t>\n\t\t<div class=\"grid grid-rows-5 gap-1 h-full\">\n\t\t\t<div class=\"absolute left-4 bottom-1\">\n\t\t\t\t<span class=\"text-gray-100 text-md\">Asset Market Price:</span>\n\t\t\t\t<span class=\"ml-2 text-gray-100 text-md\">{assetPrice} {currencyLabel}</span>\n\t\t\t</div>\n\n\t\t\t<SpeedDial\n\t\t\t\tdefaultClass=\"absolute right-1 bottom-1 z-10 bg-primary rounded-full\"\n\t\t\t\tpill={false}\n\t\t\t\ttooltip=\"none\"\n\t\t\t\tplacement=\"bottom\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\tclass=\"w-8 h-8\"\n\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\tviewBox=\"0 0 20 20\"\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t><path\n\t\t\t\t\t\td=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\"\n\t\t\t\t\t></path></svg\n\t\t\t\t>\n\t\t\t\t<SpeedDialButton\n\t\t\t\t\tname=\"Accounts\"\n\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\tshowAccountsModal = true;\n\t\t\t\t\t}}\n\t\t\t\t\tclass=\"w-16\"\n\t\t\t\t>\n\t\t\t\t\t<svg\n\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\tviewBox=\"0 0 20 20\"\n\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\tclass=\"w-6 h-6\"\n\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\t\td=\"M6 4.75A.75.75 0 016.75 4h10.5a.75.75 0 010 1.5H6.75A.75.75 0 016 4.75zM6 10a.75.75 0 01.75-.75h10.5a.75.75 0 010 1.5H6.75A.75.75 0 016 10zm0 5.25a.75.75 0 01.75-.75h10.5a.75.75 0 010 1.5H6.75a.75.75 0 01-.75-.75zM1.99 4.75a1 1 0 011-1H3a1 1 0 011 1v.01a1 1 0 01-1 1h-.01a1 1 0 01-1-1v-.01zM1.99 15.25a1 1 0 011-1H3a1 1 0 011 1v.01a1 1 0 01-1 1h-.01a1 1 0 01-1-1v-.01zM1.99 10a1 1 0 011-1H3a1 1 0 011 1v.01a1 1 0 01-1 1h-.01a1 1 0 01-1-1V10z\"\n\t\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</svg>\n\t\t\t\t</SpeedDialButton>\n\t\t\t\t<SpeedDialButton\n\t\t\t\t\tname=\"Contacts\"\n\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\tshowContacts = true;\n\t\t\t\t\t}}\n\t\t\t\t\tclass=\"w-16\"\n\t\t\t\t>\n\t\t\t\t\t<svg\n\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\tviewBox=\"0 0 20 20\"\n\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\tclass=\"w-6 h-6\"\n\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\t\td=\"M6 4.75A.75.75 0 016.75 4h10.5a.75.75 0 010 1.5H6.75A.75.75 0 016 4.75zM6 10a.75.75 0 01.75-.75h10.5a.75.75 0 010 1.5H6.75A.75.75 0 016 10zm0 5.25a.75.75 0 01.75-.75h10.5a.75.75 0 010 1.5H6.75a.75.75 0 01-.75-.75zM1.99 4.75a1 1 0 011-1H3a1 1 0 011 1v.01a1 1 0 01-1 1h-.01a1 1 0 01-1-1v-.01zM1.99 15.25a1 1 0 011-1H3a1 1 0 011 1v.01a1 1 0 01-1 1h-.01a1 1 0 01-1-1v-.01zM1.99 10a1 1 0 011-1H3a1 1 0 011 1v.01a1 1 0 01-1 1h-.01a1 1 0 01-1-1V10z\"\n\t\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</svg>\n\t\t\t\t</SpeedDialButton>\n\t\t\t\t<SpeedDialButton\n\t\t\t\t\tname=\"Tokens\"\n\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\tshowTokens = true;\n\t\t\t\t\t}}\n\t\t\t\t\tclass=\"w-16\"\n\t\t\t\t>\n\t\t\t\t\t<TokensIcon />\n\t\t\t\t\t<!-- <svg\n\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\tviewBox=\"0 0 20 20\"\n\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\tclass=\"w-6 h-6\"\n\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\t\td=\"M20.25 6.375c0 2.278-3.694 4.125-8.25 4.125S3.75 8.653 3.75 6.375m16.5 0c0-2.278-3.694-4.125-8.25-4.125S3.75 4.097 3.75 6.375m16.5 0v11.25c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125V6.375m16.5 0v3.75m-16.5-3.75v3.75m16.5 0v3.75C20.25 16.153 16.556 18 12 18s-8.25-1.847-8.25-4.125v-3.75m16.5 0c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</svg> -->\n\t\t\t\t</SpeedDialButton>\n\t\t\t\t<SpeedDialButton\n\t\t\t\t\tname=\"Receive\"\n\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\tshowRecv = true;\n\t\t\t\t\t}}\n\t\t\t\t\tclass=\"w-16\"\n\t\t\t\t>\n\t\t\t\t\t<svg\n\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\tclass=\"w-6 h-6\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\t\td=\"M3 4.875C3 3.839 3.84 3 4.875 3h4.5c1.036 0 1.875.84 1.875 1.875v4.5c0 1.036-.84 1.875-1.875 1.875h-4.5A1.875 1.875 0 013 9.375v-4.5zM4.875 4.5a.375.375 0 00-.375.375v4.5c0 .207.168.375.375.375h4.5a.375.375 0 00.375-.375v-4.5a.375.375 0 00-.375-.375h-4.5zm7.875.375c0-1.036.84-1.875 1.875-1.875h4.5C20.16 3 21 3.84 21 4.875v4.5c0 1.036-.84 1.875-1.875 1.875h-4.5a1.875 1.875 0 01-1.875-1.875v-4.5zm1.875-.375a.375.375 0 00-.375.375v4.5c0 .207.168.375.375.375h4.5a.375.375 0 00.375-.375v-4.5a.375.375 0 00-.375-.375h-4.5zM6 6.75A.75.75 0 016.75 6h.75a.75.75 0 01.75.75v.75a.75.75 0 01-.75.75h-.75A.75.75 0 016 7.5v-.75zm9.75 0A.75.75 0 0116.5 6h.75a.75.75 0 01.75.75v.75a.75.75 0 01-.75.75h-.75a.75.75 0 01-.75-.75v-.75zM3 14.625c0-1.036.84-1.875 1.875-1.875h4.5c1.036 0 1.875.84 1.875 1.875v4.5c0 1.035-.84 1.875-1.875 1.875h-4.5A1.875 1.875 0 013 19.125v-4.5zm1.875-.375a.375.375 0 00-.375.375v4.5c0 .207.168.375.375.375h4.5a.375.375 0 00.375-.375v-4.5a.375.375 0 00-.375-.375h-4.5zm7.875-.75a.75.75 0 01.75-.75h.75a.75.75 0 01.75.75v.75a.75.75 0 01-.75.75h-.75a.75.75 0 01-.75-.75v-.75zm6 0a.75.75 0 01.75-.75h.75a.75.75 0 01.75.75v.75a.75.75 0 01-.75.75h-.75a.75.75 0 01-.75-.75v-.75zM6 16.5a.75.75 0 01.75-.75h.75a.75.75 0 01.75.75v.75a.75.75 0 01-.75.75h-.75a.75.75 0 01-.75-.75v-.75zm9.75 0a.75.75 0 01.75-.75h.75a.75.75 0 01.75.75v.75a.75.75 0 01-.75.75h-.75a.75.75 0 01-.75-.75v-.75zm-3 3a.75.75 0 01.75-.75h.75a.75.75 0 01.75.75v.75a.75.75 0 01-.75.75h-.75a.75.75 0 01-.75-.75v-.75zm6 0a.75.75 0 01.75-.75h.75a.75.75 0 01.75.75v.75a.75.75 0 01-.75.75h-.75a.75.75 0 01-.75-.75v-.75z\"\n\t\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</svg>\n\t\t\t\t</SpeedDialButton>\n\t\t\t\t<SpeedDialButton\n\t\t\t\t\tname=\"Import Account\"\n\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\tshowAccountImportModal = true;\n\t\t\t\t\t}}\n\t\t\t\t\tclass=\"w-16\"\n\t\t\t\t>\n\t\t\t\t\t<svg\n\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tviewBox=\"0 0 20 20\"\n\t\t\t\t\t\tstroke-width=\"1.5\"\n\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\tclass=\"w-6 h-6\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\t\td=\"M15.75 9V5.25A2.25 2.25 0 0 0 13.5 3h-6a2.25 2.25 0 0 0-2.25 2.25v13.5A2.25 2.25 0 0 0 7.5 21h6a2.25 2.25 0 0 0 2.25-2.25V15M12 9l-3 3m0 0 3 3m-3-3h12.75\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</svg>\n\t\t\t\t</SpeedDialButton>\n\t\t\t\t<SpeedDialButton\n\t\t\t\t\tname=\"Upgrade\"\n\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\tshowUpgradeModal = true;\n\t\t\t\t\t}}\n\t\t\t\t\tclass=\"w-16\"\n\t\t\t\t>\n\t\t\t\t\t<svg\n\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\tviewBox=\"0 0 20 20\"\n\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\tclass=\"w-6 h-6\"\n\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\t\td=\"M10 2a.75.75 0 01.75.75v5.59l1.95-2.1a.75.75 0 111.1 1.02l-3.25 3.5a.75.75 0 01-1.1 0L6.2 7.26a.75.75 0 111.1-1.02l1.95 2.1V2.75A.75.75 0 0110 2z\"\n\t\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\t\td=\"M10 18a.75.75 0 01-.75-.75v-5.59l-1.95 2.1a.75.75 0 11-1.1-1.02l3.25-3.5a.75.75 0 011.1 0l3.25 3.5a.75.75 0 11-1.1 1.02l-1.95-2.1v5.59a.75.75 0 01-.75.75z\"\n\t\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</svg>\n\t\t\t\t</SpeedDialButton>\n\t\t\t\t<SpeedDialButton name=\"Lock/Exit\" on:click={() => goto(PATH_LOGOUT)} class=\"w-16\">\n\t\t\t\t\t<svg\n\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\tviewBox=\"0 0 20 20\"\n\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\tclass=\"w-6 h-6\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\t\td=\"M3 4.25A2.25 2.25 0 015.25 2h5.5A2.25 2.25 0 0113 4.25v2a.75.75 0 01-1.5 0v-2a.75.75 0 00-.75-.75h-5.5a.75.75 0 00-.75.75v11.5c0 .414.336.75.75.75h5.5a.75.75 0 00.75-.75v-2a.75.75 0 011.5 0v2A2.25 2.25 0 0110.75 18h-5.5A2.25 2.25 0 013 15.75V4.25z\"\n\t\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\t\td=\"M19 10a.75.75 0 00-.75-.75H8.704l1.048-.943a.75.75 0 10-1.004-1.114l-2.5 2.25a.75.75 0 000 1.114l2.5 2.25a.75.75 0 101.004-1.114l-1.048-.943h9.546A.75.75 0 0019 10z\"\n\t\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</svg>\n\t\t\t\t</SpeedDialButton>\n\t\t\t</SpeedDial>\n\n\t\t\t<nav\n\t\t\t\t{id}\n\t\t\t\tclass=\"print:hidden visible relative row-span-1 inset-x-0 navbar navbar-expand-sm p-2 flex items-center w-full justify-between\"\n\t\t\t>\n\t\t\t\t<div class=\"flex justify-between w-full items-center\">\n\t\t\t\t\t<span class=\"text-gray-100 text-center dark:text-white text-4xl ml-2 -mt-6 font-bold\">\n\t\t\t\t\t\t{$yakklCurrentlySelectedStore &&\n\t\t\t\t\t\t\t$yakklCurrentlySelectedStore.shortcuts.network.blockchain}\n\t\t\t\t\t</span>\n\t\t\t\t\t{#if showTestNetworks}\n\t\t\t\t\t\t<span class=\"flex h-6\">\n\t\t\t\t\t\t\t<div class=\"dropdown dropdown-bottom relative\">\n\t\t\t\t\t\t\t\t{#if networkLabel.toLowerCase() === 'mainnet'}\n\t\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y_click_events_have_key_events -->\n\t\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y_no_noninteractive_element_interactions -->\n\t\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y_label_has_associated_control -->\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tonclick={toggleDropdown}\n\t\t\t\t\t\t\t\t\t\tclass=\"w-28 px-3 py-1 bg-red-800/80 text-white font-medium text-xs leading-tight uppercase rounded-full shadow-md hover:bg-red-700 hover:shadow-lg focus:bg-red-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-red-800 active:shadow-lg active:text-white transition duration-150 ease-in-out flex items-center whitespace-nowrap\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tLIVE-{networkLabel}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y_click_events_have_key_events -->\n\t\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y_no_noninteractive_element_interactions -->\n\t\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y_label_has_associated_control -->\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tonclick={toggleDropdown}\n\t\t\t\t\t\t\t\t\t\tclass=\"w-28 px-3 py-1 bg-green-800/80 text-white font-medium text-xs leading-tight uppercase rounded-full shadow-md hover:bg-green-700 hover:shadow-lg focus:bg-green-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-green-800 active:shadow-lg active:text-white transition duration-150 ease-in-out flex items-center whitespace-nowrap\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tTest-{networkLabel}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t{#if isDropdownOpen}\n\t\t\t\t\t\t\t\t\t<ul\n\t\t\t\t\t\t\t\t\t\tclass=\"absolute top-full left-0 dropdown-content menu bg-opacity-70 text-base z-50 float-left py-2 list-none text-left rounded-lg shadow-lg mt-1 m-0 bg-clip-padding border-none bg-gray-800\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{#each networks as network}\n\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y_click_events_have_key_events -->\n\t\t\t\t\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y_no_static_element_interactions -->\n\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttabindex=\"0\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"dropdown-item text-sm py-2 px-4 font-normal w-full whitespace-nowrap bg-transparent text-gray-300 hover:bg-gray-500 hover:text-white focus:text-white focus:bg-gray-700\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonclick={() => handleNetworkTypeChange(network)}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{#if network.type === NetworkType.MAINNET}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tLIVE-{network.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tTestnet-{network.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t{:else}\n\t\t\t\t\t\t<span class=\"flex h-6\">\n\t\t\t\t\t\t\t<!-- svelte-ignore a11y_label_has_associated_control -->\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\tclass=\"w-28 px-3 py-1 bg-red-800/80 text-white font-medium text-xs leading-tight uppercase rounded-full shadow-md hover:bg-red-700 hover:shadow-lg focus:bg-red-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-red-800 active:shadow-lg active:text-white transition duration-150 ease-in-out flex items-center whitespace-nowrap\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tLIVE-{networkLabel}\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t</nav>\n\n\t\t\t<div class=\"ml-4\">\n\t\t\t\t<div class=\"row-span-2 -mt-4\">\n\t\t\t\t\t<p class=\"text-gray-100 dark:text-white text-lg\">Account:</p>\n\t\t\t\t\t<p\n\t\t\t\t\t\tclass=\"text-gray-100 dark:text-white text-lg ml-4 -mt-1\"\n\t\t\t\t\t\tdata-bs-toggle=\"tooltip\"\n\t\t\t\t\t\tdata-bs-placement=\"top\"\n\t\t\t\t\t\ttitle={name}\n\t\t\t\t\t>\n\t\t\t\t\t\tName: <span class=\"uppercase ml-5\">{nameShow}</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p\n\t\t\t\t\t\tclass=\"text-gray-100 dark:text-white text-lg ml-4 -mt-2\"\n\t\t\t\t\t\tdata-bs-toggle=\"tooltip\"\n\t\t\t\t\t\tdata-bs-placement=\"top\"\n\t\t\t\t\t\ttitle={address}\n\t\t\t\t\t>\n\t\t\t\t\t\tNumber: <span class=\"ml-1\">{addressShow}</span>\n\t\t\t\t\t\t<Copy target={{ value: address }} />\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 opacity-25 -z-10\"\n\t\t\t\t>\n\t\t\t\t\t{#if symbolLabel}\n\t\t\t\t\t\t<svg width=\"60\" height=\"60\" fill=\"none\" viewBox=\"0 0 60 60\">\n\t\t\t\t\t\t\t<g clip-path=\"url(#j)\">\n\t\t\t\t\t\t\t\t<rect width=\"60\" height=\"60\" rx=\"30\" fill=\"#987DE8\" />\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\t\t\t\td=\"m15.48 28.367 11.966-19.3c1.174-1.892 3.927-1.892 5.1 0l11.97 19.306a6 6 0 0 1 .9 3.142v.028a6 6 0 0 1-1.154 3.56L33.227 50.208c-1.599 2.188-4.864 2.188-6.461 0L15.733 35.095a6 6 0 0 1-1.154-3.538v-.029a6 6 0 0 1 .9-3.161Z\"\n\t\t\t\t\t\t\t\t\tfill=\"#fff\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\td=\"M30.84 10.112a.992.992 0 0 0-.844-.464V24.5l12.598 5.53c.081-.466-.001-.963-.27-1.398L30.84 10.112Z\"\n\t\t\t\t\t\t\t\t\tfill=\"#643CDD\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\td=\"M29.996 9.648a.991.991 0 0 0-.845.465l-11.489 18.53a1.991 1.991 0 0 0-.264 1.387l12.598-5.53V9.648Z\"\n\t\t\t\t\t\t\t\t\tfill=\"#BDADEB\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\td=\"M29.996 50.544a.994.994 0 0 0 .808-.41l11.235-15.38c.307-.434-.193-.988-.658-.72L31.49 39.71a2.998 2.998 0 0 1-1.494.398v10.437Z\"\n\t\t\t\t\t\t\t\t\tfill=\"#643CDD\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\td=\"M17.966 34.762 29.19 50.134c.2.274.503.41.807.41V40.108a2.998 2.998 0 0 1-1.493-.398l-9.884-5.676c-.468-.27-.971.292-.653.728Z\"\n\t\t\t\t\t\t\t\t\tfill=\"#BDADEB\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\td=\"M42.594 30.03 29.996 24.5v13.138a3 3 0 0 0 1.495-.399l10.149-5.83c.525-.31.856-.823.954-1.38Z\"\n\t\t\t\t\t\t\t\t\tfill=\"#401AB3\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\td=\"M29.996 37.638V24.462l-12.598 5.566c.098.564.437 1.083.974 1.392l10.13 5.82c.462.265.978.398 1.494.398Z\"\n\t\t\t\t\t\t\t\t\tfill=\"#7C5AE2\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t<rect class=\"help-img-highlight\" x=\".5\" y=\".5\" width=\"59\" height=\"59\" rx=\"29.5\" />\n\t\t\t\t\t\t\t<defs>\n\t\t\t\t\t\t\t\t<clipPath id=\"j\"><rect width=\"60\" height=\"60\" rx=\"30\" fill=\"#fff\" /></clipPath>\n\t\t\t\t\t\t\t</defs>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"flex text-xl justify-center mt-4 text-gray-100 dark:text-white row-span-1\">\n\t\t\t\t\t<span\n\t\t\t\t\t\tdata-bs-toggle=\"tooltip\"\n\t\t\t\t\t\tdata-bs-placement=\"top\"\n\t\t\t\t\t\ttitle={shortcutsValue.toEtherString()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ProtectedValue value={formattedEtherValue} placeholder=\"*******\" />\n\t\t\t\t\t</span>\n\t\t\t\t\t<span class=\"ml-2\">{symbolLabel}</span>\n\t\t\t\t\t<div class=\"relative flex items-center gap-2\">\n\t\t\t\t\t\t<EyeIcon />\n\t\t\t\t\t\t\n\t\t\t\t\t\t<!-- Manual Refresh Button (Pro users only) -->\n\t\t\t\t\t\t{#if isProUser}\n\t\t\t\t\t\t\t<SimpleTooltip content={refreshCooldown > 0 ? `Wait ${refreshCooldown}s before next refresh` : canManualRefresh ? \"Manual refresh (Pro feature)\" : \"Refreshing...\"}>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tonclick={handleManualRefresh}\n\t\t\t\t\t\t\t\t\tdisabled={!canManualRefresh}\n\t\t\t\t\t\t\t\t\tclass=\"p-1 text-white/80 hover:text-white hover:bg-white/10 rounded transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{#if isManualRefreshing}\n\t\t\t\t\t\t\t\t\t\t<div class=\"animate-spin w-4 h-4 border border-white border-t-transparent rounded-full\"></div>\n\t\t\t\t\t\t\t\t\t{:else if refreshCooldown > 0}\n\t\t\t\t\t\t\t\t\t\t<span class=\"text-xs font-medium\">{refreshCooldown}</span>\n\t\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t\t<svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</SimpleTooltip>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div\n\t\t\t\t\tclass=\"flex justify-center text-lg text-gray-100 dark:text-white -mt-1 row-span-1 -ml-[2.3rem]\"\n\t\t\t\t>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{#if direction === 'up'}\n\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\t\tclass=\"w-6 h-6 fill-green-500 font-bold\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\t\t\t\td=\"M11.47 2.47a.75.75 0 011.06 0l3.75 3.75a.75.75 0 01-1.06 1.06l-2.47-2.47V21a.75.75 0 01-1.5 0V4.81L8.78 7.28a.75.75 0 01-1.06-1.06l3.75-3.75z\"\n\t\t\t\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t{:else if direction === 'dn'}\n\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\t\tclass=\"w-6 h-6 fill-red-500 font-bold\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\t\t\t\td=\"M12 2.25a.75.75 0 01.75.75v16.19l2.47-2.47a.75.75 0 111.06 1.06l-3.75 3.75a.75.75 0 01-1.06 0l-3.75-3.75a.75.75 0 111.06-1.06l2.47 2.47V3a.75.75 0 01.75-.75z\"\n\t\t\t\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</span>\n\t\t\t\t\t<ProtectedValue value={valueFiat} placeholder=\"*******\" />\n\t\t\t\t\t<span class=\"ml-2\">{currencyLabel}</span>\n\t\t\t\t</div>\n\n\t\t\t\t<div\n\t\t\t\t\tclass=\"flex justify-center text-lg text-gray-100 dark:text-white mt-2 row-span-1\"\n\t\t\t\t\tstyle=\"max-width: 300px; overflow-x: auto; white-space: nowrap;\"\n\t\t\t\t>\n\t\t\t\t\t<span>Account Portfolio: </span>\n\t\t\t\t\t{#if isCalculatingPortfolio}\n\t\t\t\t\t\t<span class=\"ml-2\">\n\t\t\t\t\t\t\t<SkeletonBalance className=\"inline-block\" showLabel={false} />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t{:else if portfolioValue === '-----' || portfolioValue === '$0.00'}\n\t\t\t\t\t\t<span class=\"ml-2 text-gray-400\">-----</span>\n\t\t\t\t\t{:else}\n\t\t\t\t\t\t<span class=\"ml-2\"><ProtectedValue value={portfolioValue} placeholder=\"*******\" /></span\n\t\t\t\t\t\t>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Enhanced Portfolio Total with Rollover -->\n\t\t\t\t<div class=\"flex justify-center mt-3 row-span-1\">\n\t\t\t\t\t<PortfolioTotal className=\"transform scale-90\" currency={currencyLabel || 'USD'} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<!-- Card stack look -->\n\t<div\n\t\tstyle=\"z-index: 1;\"\n\t\tclass=\"grid right-[18.5px] left-[18.5px] bottom-[5px] h-[10px] absolute rounded bg-secondary text-accent-content place-content-center\"\n\t></div>\n\t<div\n\t\tstyle=\"z-index: 0;\"\n\t\tclass=\"grid right-[27px] left-[27px] bottom-[2.5px] h-[10px] absolute rounded bg-accent text-secondary-content place-content-center\"\n\t></div>\n</div>\n","<script lang=\"ts\">\n\timport { onMount } from 'svelte';\n\timport { sessionInitialized } from '$lib/common/stores';\n\timport { DEFAULT_POPUP_HEIGHT, DEFAULT_TITLE, DEFAULT_POPUP_WIDTH } from '$lib/common';\n\timport Header from '$components/Header.svelte';\n\timport Footer from '$components/Footer.svelte';\n\timport { blockContextMenu, blockWindowResize } from '$lib/utilities';\n\timport ErrorNoAction from '$lib/components/ErrorNoAction.svelte';\n\n\t// Global error filtering function\n\tfunction shouldShowErrorToUser(error: any): boolean {\n\t\tconst errorMessage = error?.message || error?.toString() || '';\n\n\t\t// Network/API errors that should be handled silently\n\t\tconst networkErrors = [\n\t\t\t'missing response',\n\t\t\t'timeout',\n\t\t\t'TIMEOUT',\n\t\t\t'SERVER_ERROR',\n\t\t\t'NETWORK_ERROR',\n\t\t\t'Failed to fetch',\n\t\t\t'fetch',\n\t\t\t'Connection failed',\n\t\t\t'Request timeout',\n\t\t\t'eth_getBalance',\n\t\t\t'call revert exception',\n\t\t\t'alchemy.com',\n\t\t\t'infura.io',\n\t\t\t'requestBody',\n\t\t\t'serverError',\n\t\t\t'code=SERVER_ERROR',\n\t\t\t'version=web/',\n\t\t\t'JsonRpcError',\n\t\t\t'RPC Error',\n\t\t\t'getBalance',\n\t\t\t'Balance fetch'\n\t\t];\n\n\t\treturn !networkErrors.some((pattern) =>\n\t\t\terrorMessage.toLowerCase().includes(pattern.toLowerCase())\n\t\t);\n\t}\n\timport { browserSvelte, browser_ext } from '$lib/common/environment';\n\timport { log } from '$lib/common/logger-wrapper';\n\timport { initializeUiContext } from '$lib/common/messaging';\n\timport InAppNotifications from '$lib/components/InAppNotifications.svelte';\n\timport SecurityWarningEnhanced from '$lib/components/SecurityWarningEnhanced.svelte';\n\timport Card from '$lib/components/Card.svelte';\n\timport { yakklMiscStore } from '$lib/common/stores';\n\timport TrialCountdown from '$lib/components/TrialCountdown.svelte';\n\timport Upgrade from '$lib/components/Upgrade.svelte';\n\timport { modal, modalName, closeModal } from '$lib/common/stores/modal';\n\n\tinterface Props {\n\t\tchildren?: import('svelte').Snippet;\n\t}\n\n\tlet { children }: Props = $props();\n\n\t// Use reactive store subscription instead of a one-time value\n\n\t// UI State\n\tlet popupWidth: number = $state(DEFAULT_POPUP_WIDTH);\n\tlet popupHeight: number = DEFAULT_POPUP_HEIGHT;\n\tlet title: string = $state(DEFAULT_TITLE);\n\tlet contextMenu: boolean = $state(false);\n\tlet resize: boolean = $state(false);\n\tlet error: boolean = $state(false);\n\tlet errorValue: string = $state('');\n\tlet errorCooldown: boolean = $state(false);\n\tlet maxHeightClass: string = $state('max-h-[448px]');\n\n\t// Effect: Handle Internet Connection Status\n\t$effect(() => {\n\t\tif (browserSvelte && !navigator.onLine) {\n\t\t\tlog.warn('Internet connection is offline');\n\t\t\terrorValue =\n\t\t\t\t'It appears your Internet connection is offline. YAKKL needs access to the Internet to obtain current market prices and gas fees. A number of areas will either not function or work in a limited capacity. Thank you!';\n\t\t\terror = true;\n\t\t} else {\n\t\t\terror = false;\n\t\t}\n\t});\n\n\t// Effect: Manage Debug Mode and Blocking Features\n\t$effect(() => {\n\t\tif (process.env.DEV_MODE || process.env.NODE_ENV === 'development') {\n\t\t\tcontextMenu = true;\n\t\t\tresize = true;\n\t\t}\n\n\t\tif (!contextMenu) blockContextMenu();\n\t\tif (!resize) blockWindowResize(popupWidth, popupHeight);\n\t});\n\n\tonMount(async () => {\n\t\ttry {\n\t\t\tlog.debug('+layout.svelte (wallet level) - onMount');\n\t\t\t// Reset session initialization state when app first loads\n\t\t\tsessionInitialized.set(false);\n\n\t\t\tif (browser_ext) {\n\t\t\t\tawait initializeUiContext(browser_ext);\n\t\t\t}\n\n\t\t\t// Global error handlers to prevent network errors from reaching user\n\t\t\twindow.addEventListener('error', (event) => {\n\t\t\t\tconst error = event.error;\n\t\t\t\tif (error && !shouldShowErrorToUser(error)) {\n\t\t\t\t\tlog.warn('[Global] Suppressed network error from user:', false, error);\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\twindow.addEventListener('unhandledrejection', (event) => {\n\t\t\t\tconst error = event.reason;\n\t\t\t\tif (error && !shouldShowErrorToUser(error)) {\n\t\t\t\t\tlog.warn('[Global] Suppressed network rejection from user:', false, error);\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tlog.error('+layout.svelte (wallet level) - onMount:', false, error);\n\t\t}\n\t});\n</script>\n\n<svelte:head>\n\t<title>{title}</title>\n</svelte:head>\n\n<SecurityWarningEnhanced />\n<ErrorNoAction bind:show={error} title=\"Error\" value={errorValue} />\n\n<div\n\tid=\"wrapper\"\n\tclass=\"w-[{popupWidth}px] max-w-[{popupWidth}px] rounded-md flex flex-col bg-gradient-to-br from-gray-900 via-gray-800 to-black min-h-screen transition-opacity duration-500 animate-fade-in overflow-hidden\"\n>\n\t<!-- containerWidth={popupWidth} /> -->\n\t<Header />\n\n\t{#if $yakklMiscStore}\n\t\t<Card />\n\t{:else}\n\t\t<!-- Debug: Card not showing because yakklMiscStore is falsy -->\n\t\t<div class=\"text-xs text-gray-500 p-2\">Card loading...</div>\n\t{/if}\n\n\t<div class=\"min-h-[40rem] mx-2 overflow-hidden\">\n\t\t<div class=\"relative mt-1 overflow-hidden\">\n\t\t\t<!-- rounded-xl overflow-y-auto bg-base-100 border-2 border-stone-700 border-r-stone-700/75 border-b-slate-700/75 -->\n\t\t\t<main class=\"p-2 {maxHeightClass} overflow-y-auto overflow-x-hidden\">\n\t\t\t\t{@render children?.()}\n\t\t\t</main>\n\t\t</div>\n\t</div>\n\n\t<Footer containerWidth={popupWidth.toString()} />\n</div>\n\n<InAppNotifications />\n\n<TrialCountdown />\n<Upgrade show={$modal && $modalName === 'upgrade'} onClose={closeModal} onCancel={closeModal} />\n"],"names":["computeTokenValue","token","balance","Number","price","value","ExtensionContext","$$slots","$$events","rest","$$props","children","$$payload","toBasicAnalytics","symbol","toString","currentPrice","calculateTokenValue","name","address","decimals","logoURI","balanceNum","Math","pow","onDestroy","window","document","removeEventListener","handleClickOutside","event","initial","props","userName","charAt","toUpperCase","defaultClasses","url","out","$.attr","ariaLabel","$.attr_class","className","show","onClose","onComplete","isSaving","error","previewAvatarUrl","showError","errorValue","validationSchema","yup","object","shape","string","required","min","max","matches","firstName","lastName","email","bio","optional","website","nullable","transform","avatarUrl","form","errors","isValid","touched","createForm","initialValues","onSubmit","async","values","saveProfile","handleClose","handleErrorClose","$.store_get","$$store_subs","length","$$value","themeOptions","SystemTheme","SYSTEM","label","LIGHT","DARK","currencyOptions","localeOptions","idleDelayOptions","showTestNetworks","boolean","theme","oneOf","Object","locale","currency","idleDelayInterval","number","idleAutoLock","idleAutoLockCycle","showHints","trialCountdownPinned","saveSettings","option","each_array","$$index","$.maybe_selected","$.escape","each_array_1","$$index_1","each_array_2","$$index_2","each_array_3","$$index_3","watchAccounts","selectedAccount","socialData","Map","activeTab","newAccountForm","alias","blockchain","accountType","tags","supportedBlockchains","id","accountTypes","description","icon","formatBalance","toFixed","getAccountTypeInfo","type","find","t","getActivityColor","activity","$.stringify","select_value","$.ensure_array_like","tag","index","account","$$index_4","each_array_4","slice","portfolioValue","socialScore","has","social","get","each_array_5","recentTransactions","influenceMetrics","copyTraders","toLocaleString","portfolioMirrors","socialMentions","tradingActivity","reputationScore","tx","$$index_5","direction","amount","timestamp","toLocaleTimeString","significance","showProfileModal","showSettingsModal","showWatchListModal","handleProfileComplete","handleSettingsComplete","handleWatchListComplete","browserContext","SIDEPANEL","fetchGPT4Response","prompt","response","apiKey","getYakklGPTKeyStore","openai","OpenAI","dangerouslyAllowBrowser","chat","completions","create","model","messages","role","content","usage","choices","message","log","clipboard","$.store_set","yakklGPTRunningStore","browserSvelte","ClipboardJS","e","storeChats","messageArray","Array","isArray","cleanMessages","map","msg","text","sender","Date","now","persona","DEFAULT_PERSONA","version","VERSION","createDate","dateString","updateDate","yakklChatsStore","setYakklChatsStorage","handleSendMessage","input","trim","dateNow","yakklConnectionStore","newUserMessage","push","formattedResponse","replace","newBotMessage","$$payload2","JSON","stringify","i","$.html","formatTimestamp","containerWidth","classParam","showChat","showBuy","showSwap","w","h","planType","PlanType","BASIC_MEMBER","fundingAddress","provider","swapManager","tokenService","getFullYear","notifications","isLockdownActive","timerManager","UnifiedTimerManager","getInstance","clearAllIntervals","forEach","notification","countdownInterval","stopInterval","removeInterval","title","filter","n","updateInitialValues","chainId","sidepanel","evmCompatible","customDefault","isNative","isStablecoin","network","standard","isWatchOnly","portfolioIncluded","coingeckoId","exchange","exchangeSymbol","isExchangeBalance","when","is","val","includes","then","schema","otherwise","default","updatedToken","quantity","lastUpdated","status","change","watchedAt","toISOString","exchangeInfo","metadata","resetForm","tokens","onTokenSelect","onTokenUpdate","onTokenDelete","selectedToken","showEditModal","showDeleteModal","currencyFormatter","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","preciseFormatter","handleEdit","handleDelete","confirmDelete","getAnalyticsData","analytics","rawBalance","balanceNumber","isNaN","balanceValue","format","percentageValue","getTokenChange","onCopy","navigator","writeText","onEdit","onDelete","controls","showAddModal","handleTokenSelect","handleTokenAdd","getTokenBalance","yakklCurrentlySelectedStore","shortcuts","yakklTokenDataCustomStore","update","setYakklTokenDataCustomStorage","handleTokenDelete","deletedToken","updatedTokens","handleTokenUpdate","info","closeModal","derived","yakklCombinedTokenStore","set","warn","portfolioTotal","formattedTotal","chainTotals","byChain","formatted","formattedChainTotals","entries","reduce","acc","total","showDetails","totalPortfolioValue","portfolioBreakdown","tooltipTimeout","clearTimeout","item","shouldShowErrorToUser","errorMessage","networkErrors","some","pattern","toLowerCase","showErrorSafely","errorMsg","errorCooldown","setTimeout","wallet","NetworkType","MAINNET","explorer","TESTNET","networkLabel","addressShow","nameShow","valueFiat","showAccountsModal","showAccountImportModal","showWatchAccountModal","showContacts","showTokens","showRecv","showUpgradeModal","prevPrice","assetPriceValue","assetPrice","card","symbolLabel","currencyLabel","shortcutsValue","EthereumBigNumber","from","formattedEtherValue","isUpdatingBalance","updateWithCurrentlySelected","accountName","truncate","substring","yakklPricingStore","preferences","code","setYakklCurrentlySelectedStorage","stopCheckPrices","updateValuePriceFiat","resetPriceData","qty","getBalance","current","balanceCacheManager","setCachedBalance","etherValue","parseFloat","formatEther","fiatValue","etherValueString","newFiatValue","updatePriceDirection","newPrice","handleAccounts","updatedCurrentlySelected","isEncryptedData","data","yakklMiscStore","decryptData","cached","getCachedBalance","primary","primaryAccount","encryptData","browser_ext","runtime","sendMessage","accounts","catch","handleContact","handleToken","handleImport","handleWatchAccountComplete","getChainId","setChainId","debug","toEtherString","_","onCancel","Copy","target","placeholder","popupWidth","DEFAULT_POPUP_WIDTH","DEFAULT_TITLE","maxHeightClass","Footer"],"mappings":"qoGAQO,SAASA,kBAAkBC,OACjC,IAAIC,QAAUD,OAAOC,QAAUC,OAAOF,MAAMC,SAAW,EAEjD,MAAAE,MAAQH,OAAOG,OAAOA,OAAS,EACrC,MAAMC,MAAQH,QAAUE,MAEjB,MAAA,CAAEF,gBAASG,YACnB,CCAY,IAAAC,kBAAAA,oBACXA,kBAAA,WAAU,UACVA,kBAAA,cAAa,aACbA,kBAAA,SAAQ,QACRA,kBAAA,kBAAiB,iBACjBA,kBAAA,WAAU,UACVA,kBAAA,YAAW,WACXA,kBAAA,aAAY,YAPDA,OAAAA,iBAAA,GAAAA,kBAAA,CAAA,mGCNF,IAAAC,QAAAA,QAAAC,SAAAA,YAAAC,MAAAC,ywHAsGLD,29BC1GE,IAAAE,SAAAA,UAAAD,iNASGC,WAAQC,qRCsHX,SAASC,iBAAiBZ,OACzB,MAAA,CACNa,OAAQb,MAAMa,OACdZ,QAASD,MAAMC,QAAQa,YAAc,IACrCC,aAAcf,MAAMG,OAAOA,OAAS,EACpCC,MAAOY,oBAAoBhB,OAC3BiB,KAAMjB,MAAMiB,KACZC,QAASlB,MAAMkB,QACfC,SAAUnB,MAAMmB,UAAY,GAC5BC,QAASpB,MAAMoB,QAEjB,CAiCO,SAASJ,oBAAoBhB,OACnC,IAAKA,MAAMC,UAAYD,MAAMG,OAAOA,MAAc,OAAA,EAE9C,IAAAkB,WACA,UAAOrB,MAAMC,UAAY,SAAU,CACzBoB,WAAAnB,OAAOF,MAAMC,SAAWqB,KAAKC,IAAI,GAAIvB,MAAMmB,UAAY,GAAE,KAChE,CACOE,WAAAnB,OAAOF,MAAMC,QAAO,CAG3B,OAAAoB,WAAarB,MAAMG,MAAMA,KACjC,iJC5JCqB,UAAgB,eAEJC,SAAW,oBAAsBC,WAAa,YAAa,CAC5DA,SAAAC,oBAAoB,QAASC,mBACvC,IAaQ,SAAAA,mBAAmBC,OACtB,MAYN,umDAmFgD,okDA8BA,iwJCtK1C,MAAAC,QAAUC,MAAMC,UAAUC,OAAO,IAAIC,eAAiB,UAGtDC,eACL,4IAGG,GAAAJ,MAAMK,IAAG,iCAEPzB,UAAA0B,KAAA,OAAAC,KAAA,MAAAP,MAAMK,OACNE,KAAA,MAAAP,MAAMQ,WAAa,iBACDC,WAAA,gBAAAT,MAAMU,WAAaN,iKAKnCJ,MAAMU,WAAaN,qCACdJ,MAAMQ,WAAa,8FAG9BT,sZCPDY,KAAiB,MAAAC,QACjBA,QAAA,IAAiBD,KAAO,MAAAE,WACxBA,WAAA,gBAMG,IAAAC,SAAkB,MAClB,IAAAC,MAAe,GAEf,IAAAC,iBAA0B,GAE1B,IAAAC,UAAmB,MACnB,IAAAC,WAAoB,GAGlB,MAAAC,iBAAmBC,IAAIC,SAASC,MAAA,CACrCrB,SAAUmB,IACRG,SACAC,SAAS,wBACTC,IAAI,EAAG,0CACPC,IAAI,GAAI,4CACRC,QAAQ,mBAAoB,uEAC9BC,UAAWR,IACTG,SACAC,SAAS,0BACTC,IAAI,EAAG,0BACPC,IAAI,GAAI,8CACVG,SAAUT,IACRG,SACAC,SAAS,yBACTC,IAAI,EAAG,yBACPC,IAAI,GAAI,6CACVI,MAAOV,IACLG,SACAO,MAAM,iCACNN,SAAS,6BACXO,IAAKX,IACHG,SACAG,IAAI,IAAK,wCACTM,WACFC,QAASb,IACPG,SACAlB,IAAI,uBACJ2B,WACAE,WACAC,UAAW9D,OAAWA,QAAU,GAAK,KAAOA,OAC9C+D,UAAWhB,IACTG,SACAlB,IAAI,uBACJ2B,WACAE,WACAC,UAAW9D,OAAWA,QAAU,GAAK,KAAOA,oBAIvCgE,KAAAC,OAAMA,OAAAC,QAAQA,QAAAC,QAASA,SAAyBC,WAAA,CACvDC,cAAA,CACCzC,SAAU,GACV2B,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,IAAK,GACLE,QAAS,GACTG,UAAW,IAEZjB,kCACAwB,SAAAC,MAAiBC,eACVC,iBAuGOF,eAAAE,YAAYD,QAEI,CACrB9B,MAAA,gCAET,CA2HD,UAESgC,cAMD,CACCpC,KAAA,MACPC,SACD,CACD,UAcSoC,mBACI/B,UAAA,MACJF,MAAA,GACKG,WAAA,EACd,sHAGyC6B,yjBAa9B/B,iBACWf,SAAAgD,UAAAC,eAAA,CAAA,EAAA,QAAAb,MAAAT,qDAAmB3B,8hBAajBmC,+DAAS3B,WAAA,2JAAA,EAAA,CAGG,iBAAAwC,UAAAC,eAAA,CAAA,EAAA,UAAAZ,QAAAF,2DAAsBA,yFAExC,GAAAa,UAAAC,eAAA,CAAA,EAAA,UAAAZ,QAAAF,2DAAsBA,UAAS,0MACGA,2uBAc5BnC,wCAAQQ,WAAA,2JAAA,EAAA,CAGI,iBAAAwC,UAAAC,eAAA,CAAA,EAAA,UAAAZ,QAAArC,0DAAqBA,wFAEvC,GAAAgD,UAAAC,eAAA,CAAA,EAAA,UAAAZ,QAAArC,0DAAqBA,SAAQ,0MACKA,glBAW5B6B,sCAAKrB,WAAA,2JAAA,EAAA,CAGO,iBAAAwC,UAAAC,eAAA,CAAA,EAAA,UAAAZ,QAAAR,uDAAkBA,qFAEpC,GAAAmB,UAAAC,eAAA,CAAA,EAAA,UAAAZ,QAAAR,uDAAkBA,MAAK,0MACWA,2uBAa5BF,gCAASnB,WAAA,2JAAA,EAAA,CAGG,iBAAAwC,UAAAC,eAAA,CAAA,EAAA,UAAAZ,QAAAV,2DAAsBA,yFAExC,GAAAqB,UAAAC,eAAA,CAAA,EAAA,UAAAZ,QAAAV,2DAAsBA,UAAS,0MACGA,0lBAW5BC,8BAAQpB,WAAA,2JAAA,EAAA,CAGI,iBAAAwC,UAAAC,eAAA,CAAA,EAAA,UAAAZ,QAAAT,0DAAqBA,wFAEvC,GAAAoB,UAAAC,eAAA,CAAA,EAAA,UAAAZ,QAAAT,0DAAqBA,SAAQ,0MACKA,ugBAa7BI,kDAAOxB,WAAA,2JAAA,EAAA,CAGK,iBAAAwC,UAAAC,eAAA,CAAA,EAAA,UAAAZ,QAAAL,yDAAoBA,uFAEtC,GAAAgB,UAAAC,eAAA,CAAA,EAAA,UAAAZ,QAAAL,yDAAoBA,QAAO,0MACOA,8mBAchB,iBAAAgB,UAAAC,eAAA,CAAA,EAAA,UAAAZ,QAAAP,qDAAgBA,sHAJ5BA,4GAMN,GAAAkB,UAAAC,eAAA,CAAA,EAAA,UAAAZ,QAAAP,qDAAgBA,IAAG,0MACeA,qPAEDA,KAAO,IAAIoB,yGAIrDpC,MAAK,iQAEqCA,4RAgBlCnC,WAAA0B,KAAA,kNAAAC,KAAA,WAAA,KAAsB,uaAUtBO,SAAQ,iGAQMlC,WAAA0B,KAAA,2QAAAC,KAAA,YAAA0C,UAAAC,eAAA,CAAA,EAAA,WAAAX,UAAA,KAAsB,ufA2B7CrB,8CAEE8B,4BAHE,OAAA/B,6BAASA,UAAAmC,8nBCliBnBzC,KAAiB,MAAAC,QACjBA,QAAA,IAAiBD,KAAO,MAAAE,WACxBA,WAAA,gBAMG,IAAAC,SAAkB,MAClB,IAAAC,MAAe,GAKb,MAAAsC,aAAA,EACHhF,MAAOiF,YAAYC,OAAQC,MAAO,WAClCnF,MAAOiF,YAAYG,MAAOD,MAAO,UACjCnF,MAAOiF,YAAYI,KAAMF,MAAO,SAG7B,MAAAG,gBAAA,CACH,CAAAtF,MAAO,MAAOmF,MAAO,mBACrB,CAAAnF,MAAO,MAAOmF,MAAO,cACrB,CAAAnF,MAAO,MAAOmF,MAAO,uBACrB,CAAAnF,MAAO,MAAOmF,MAAO,sBACrB,CAAAnF,MAAO,MAAOmF,MAAO,0BACrBnF,MAAO,MAAOmF,MAAO,2BACrB,CAAAnF,MAAO,MAAOmF,MAAO,qBACrB,CAAAnF,MAAO,MAAOmF,MAAO,uBAGlB,MAAAI,cAAA,CACH,CAAAvF,MAAO,QAASmF,MAAO,gBACvB,CAAAnF,MAAO,QAASmF,MAAO,gBACvB,CAAAnF,MAAO,QAASmF,MAAO,WACvB,CAAAnF,MAAO,QAASmF,MAAO,UACvB,CAAAnF,MAAO,QAASmF,MAAO,UACvB,CAAAnF,MAAO,QAASmF,MAAO,WACvB,CAAAnF,MAAO,QAASmF,MAAO,cACvB,CAAAnF,MAAO,QAASmF,MAAO,YACvB,CAAAnF,MAAO,QAASmF,MAAO,UACvB,CAAAnF,MAAO,QAASmF,MAAO,yBACvBnF,MAAO,QAASmF,MAAO,0BAGpB,MAAAK,iBAAA,CACH,CAAAxF,MAAO,GAAImF,MAAO,YAClB,CAAAnF,MAAO,IAAKmF,MAAO,aACnB,CAAAnF,MAAO,IAAKmF,MAAO,cACnB,CAAAnF,MAAO,IAAKmF,MAAO,cACnB,CAAAnF,MAAO,KAAMmF,MAAO,cACpB,CAAAnF,MAAO,KAAMmF,MAAO,UACpB,CAAAnF,MAAO,EAAGmF,MAAO,UAId,MAAArC,iBAAmBC,IAAIC,SAASC,MAAA,CACrCwC,iBAAkB1C,IAAI2C,UACtBC,MAAO5C,IAAIG,SAAS0C,MAAMC,OAAOrB,OAAOS,cACxCa,OAAQ/C,IAAIG,SAASC,SAAS,sBAC9B4C,SAAUhD,IAAIG,SAASC,SAAS,wBAChC6C,kBAAmBjD,IAAIkD,SAAS7C,IAAI,EAAG,oCACvC8C,aAAcnD,IAAI2C,UAClBS,kBAAmBpD,IAAIkD,SAAS7C,IAAI,GAAI,6CACxCgD,UAAWrD,IAAI2C,UACfW,qBAAsBtD,IAAI2C,uBAInB1B,KAAAC,OAAMA,OAAAC,QAAQA,QAAAC,QAASA,SAAyBC,WAAA,CACvDC,cAAA,CACCoB,iBAAkB,MAClBE,MAAOV,YAAYC,OACnBY,OAAQ,QACRC,SAAU,MACVC,kBAAmB,IACnBE,aAAc,KACdC,kBAAmB,IACnBC,UAAW,KACXC,qBAAsB,OAEvBvD,kCACAwB,SAAAC,MAAiBC,eACV8B,kBAgGO/B,eAAA+B,aAAa9B,QACA,CAClB9B,MAAA,iCAET,CAkED,UAESgC,cAMD,CACCpC,KAAA,MACPC,SACD,CACD,+HA8BkDmC,yTA+CpCM,mDA8CAO,oDAmBAD,sDAwBAE,+9BA5FWG,gHAGK,IAAAY,OAAMC,WAAAC,SACblG,WAAA0B,KAAA,UAAAC,KAAA,QAAAqE,OAAOvG,SAAP0G,eAAAnG,WAAAgG,OAAOvG,kDAAQO,WAAA0B,KAAA,GAAA0E,YAAAJ,OAAOpB,iYASlBM,iBAAgB,0jBAYhBW,UAAS,u0CAsBC,iBAAAxB,UAAAC,eAAA,CAAA,EAAA,UAAAZ,QAAA6B,wDAAmBA,sHAF/BA,yHAIM,IAAAS,OAAMK,aAAAC,WACdtG,WAAA0B,KAAA,UAAAC,KAAA,QAAAqE,OAAOvG,SAAP0G,eAAAnG,WAAAgG,OAAOvG,kDAAQO,WAAA0B,KAAA,GAAA0E,YAAAJ,OAAOpB,8JAG1B,GAAAP,UAAAC,eAAA,CAAA,EAAA,UAAAZ,QAAA6B,wDAAmBA,OAAM,0MACSA,6rBAYhB,iBAAAlB,UAAAC,eAAA,CAAA,EAAA,UAAAZ,QAAA8B,0DAAqBA,wHAFjCA,2HAIQ,IAAAQ,OAAMO,aAAAC,WAChBxG,WAAA0B,KAAA,UAAAC,KAAA,QAAAqE,OAAOvG,SAAP0G,eAAAnG,WAAAgG,OAAOvG,kDAAQO,WAAA0B,KAAA,GAAA0E,YAAAJ,OAAOpB,8JAG1B,GAAAP,UAAAC,eAAA,CAAA,EAAA,UAAAZ,QAAA8B,0DAAqBA,SAAQ,0MACKA,kkCAgB5BC,oIAGS,IAAAO,OAAMS,aAAAC,WACjB1G,WAAA0B,KAAA,UAAAC,KAAA,QAAAqE,OAAOvG,SAAP0G,eAAAnG,WAAAgG,OAAOvG,kDAAQO,WAAA0B,KAAA,GAAA0E,YAAAJ,OAAOpB,mkBAYlBe,aAAY,sbAQvBA,aAAY,qaAQFC,mDAAiB/D,WAAA,2JAAA,EAAA,CAKL,iBAAAwC,UAAAC,eAAA,CAAA,EAAA,UAAAZ,QAAAkC,mEAA8BA,iGAEhD,GAAAvB,UAAAC,eAAA,CAAA,EAAA,UAAAZ,QAAAkC,mEAA8BA,kBAAiB,0MACbA,6hBA6B9CzD,MAAK,iQAEqCA,4RAgBlCnC,WAAA0B,KAAA,kNAAAC,KAAA,WAAA,KAAsB,uaAUtBO,SAAQ,iGAQMlC,WAAA0B,KAAA,2QAAAC,KAAA,YAAA0C,UAAAC,eAAA,CAAA,EAAA,WAAAX,UAAA,KAAsB,49BCthB9C,IAAA5B,KAAAA,UAAoB,EAAAC,QAAAA,QAAAC,WAASA,YAAAnC,QA2C/B,IAAA6G,cAAA,GACA,IAAAC,gBAA8C,KAC9C,IAAAC,eAAyDC,IACzD,IAAAC,UAAmE,WAEnE,IAAA5E,MAAe,GAGf,IAAA6E,eAAA,CACHzG,QAAS,GACT0G,MAAO,GACPC,WAAY,WACZC,YAAa,WAEbC,KAAA,IASK,MAAAC,qBAAA,EACHC,GAAI,WAAYhH,KAAM,WAAYJ,OAAQ,QAC1CoH,GAAI,UAAWhH,KAAM,UAAWJ,OAAQ,QACxCoH,GAAI,UAAWhH,KAAM,UAAWJ,OAAQ,UACxCoH,GAAI,WAAYhH,KAAM,WAAYJ,OAAQ,QAC1CoH,GAAI,WAAYhH,KAAM,WAAYJ,OAAQ,OAIvC,MAAAqH,aAAA,EAEJD,GAAI,WACJhH,KAAM,mBACNkH,YAAa,gDACbC,KAAM,OAGNH,GAAI,WACJhH,KAAM,mBACNkH,YAAa,uDACbC,KAAM,OAGNH,GAAI,QACJhH,KAAM,iBACNkH,YAAa,sDACbC,KAAM,OAGNH,GAAI,cACJhH,KAAM,gBACNkH,YAAa,8CACbC,KAAM,OAGNH,GAAI,WACJhH,KAAM,iBACNkH,YAAa,8CACbC,KAAM,OAsIC,SAAAC,cAAcjI,OAClB,GAAAA,OAAS,IAAS,YACTA,MAAQ,KAASkI,QAAQ,KACtC,CACI,GAAAlI,OAAS,IAAM,YACNA,MAAQ,KAAMkI,QAAQ,KACnC,CACW,MAAA,IAAAlI,MAAMkI,QAAQ,IAC1B,CAES,SAAAC,mBAAmBC,MACpB,OAAAN,aAAaO,KAAKC,GAAKA,EAAET,KAAOO,OAASN,aAAa,EAC9D,CAES,SAAAS,iBAAiBC,UACjB,OAAAA,UACF,IAAA,QAAgB,MAAA,gCAChB,IAAA,OAAe,MAAA,0BACf,IAAA,SAAiB,MAAA,gCACjB,IAAA,MAAc,MAAA,sCACH,MAAA,4BAElB,UAES9D,cACAhC,MAAA,GACUyE,gBAAA,KACNG,UAAA,WACZ/E,SACD,IAQID,KAAI,uXAckF/B,WAAA0B,KAAA,UAAAG,WAAA,+EAAAqG,UAAAnB,YAAc,WAAa,gCAAkC,4IAM7D/G,WAAA0B,KAAA,WAAAG,WAAA,+EAAAqG,UAAAnB,YAAc,YAAc,gCAAkC,yDACvIH,gBAAe,uGAM0D5G,WAAA0B,KAAA,WAAAG,WAAA,+EAAAqG,UAAAnB,YAAc,SAAW,gCAAkC,yDACpIH,gBAAe,0GAM0D5G,WAAA0B,KAAA,WAAAG,WAAA,+EAAAqG,UAAAnB,YAAc,SAAW,gCAAkC,sSAS5I5E,MAAK,gRAEyBA,+TAU9B,GAAA4E,YAAc,WAAU,qEAuChBM,2DAYAE,6bA9C2BvH,WAAA0B,KAAA,GAAA0E,YAAAO,cAAcpC,mqBAWpCvE,WAAA0B,KAAA,+BAAAC,KAAA,QAAAqF,eAAezG,4gBAUfP,WAAA0B,KAAA,6BAAAC,KAAA,QAAAqF,eAAeC,+tBAUfjH,WAAAmI,aAAAnB,eAAeE,qHAGI,IAAAA,WAAUjB,WAAAC,SACzBlG,WAAA0B,KAAA,UAAAC,KAAA,QAAAuF,WAAWI,MAAXnB,eAAAnG,WAAAkH,WAAWI,gDAAKtH,WAAA0B,KAAA,GAAA0E,YAAAc,WAAW5G,UAAQ8F,YAAAc,WAAWhH,gpBAQlDF,WAAAmI,aAAAnB,eAAeG,8HAGJ,IAAAU,KAAIxB,aAAAC,WACXtG,WAAA0B,KAAA,UAAAC,KAAA,QAAAkG,KAAKP,MAALnB,eAAAnG,WAAA6H,KAAKP,gDAAKtH,WAAA0B,KAAA,GAAA0E,YAAAyB,KAAKJ,SAAOrB,YAAAyB,KAAKvH,63BA2BzC,GAAA0G,eAAeI,KAAK7C,OAAS,EAAC,kCAE1B,MAAAgC,aAAA6B,kBAAApB,eAAeI,2MAAQ,IAAAiB,IAAG9B,aAAA+B,qMAE9BD,2ZAcK,GAAA1B,cAAcpC,SAAW,EAAC,uiBAM5BoC,iIAAiB,IAAA4B,QAAO9B,aAAA+B,WAWlB,MAAAC,aAAAL,kBAAAG,QAAQnB,kbAPMpH,WAAA0B,KAAA,GAAA0E,YAAAwB,mBAAmBW,QAAQpB,aAAaM,2LAEtBzH,WAAA0B,KAAA,GAAA0E,YAAAmC,QAAQtB,oIACFjH,WAAA0B,KAAA,GAAA0E,YAAAmC,QAAQhI,QAAQmI,MAAM,EAAG,UAAEtC,YAAMmC,QAAQhI,QAAQmI,iQAE3B1I,WAAA0B,KAAA,GAAA0E,YAAAmC,QAAQrB,gKACRlH,WAAA0B,KAAA,GAAA0E,YAAAwB,mBAAmBW,QAAQpB,aAAa7G,kJACpF,IAAA+H,IAAGI,aAAA/B,0KAC8C2B,iPAMrE,GAAAE,QAAQI,eAAc,mKACgBjB,cAAca,QAAQI,gHAE5D,GAAAJ,QAAQK,YAAW,8HACqB5I,WAAA0B,KAAA,WAAA0E,YAAAmC,QAAQK,omCA4BnD7B,YAAc,aAAeH,gBAAe,wdAUS5G,WAAA0B,KAAA,cAAA0E,YAAAQ,gBAAgBK,ihBAM1CjH,WAAA0B,KAAA,GAAA0E,YAAAsB,cAAcd,gBAAgB+B,gBAAkB,idAIhD/B,gBAAgBgC,aAAe,0bAI5B5I,WAAA0B,KAAA,GAAA0E,YAAAwB,mBAAmBhB,gBAAgBO,aAAa7G,2lBAU9EyG,YAAc,UAAYH,gBAAe,wdAUsB5G,WAAA0B,KAAA,wBAAA0E,YAAAQ,gBAAgBK,uFAGlF,GAAAJ,WAAWgC,IAAIjC,gBAAgBU,IAAE,kCAC7B,MAAAwB,OAASjC,WAAWkC,IAAInC,gBAAgBU,IAwCrC,MAAA0B,aAAAZ,kBAAAU,OAAOG,i2BAhCcjJ,WAAA0B,KAAA,GAAA0E,YAAA0C,OAAOI,iBAAiBC,YAAYC,wZAIpCpJ,WAAA0B,KAAA,GAAA0E,YAAA0C,OAAOI,iBAAiBG,iBAAiBD,sZAIzCpJ,WAAA0B,KAAA,GAAA0E,YAAA0C,OAAOI,iBAAiBI,eAAeF,kmBAQfpB,iBAAiBc,OAAOS,8FAC1ET,OAAOS,gBAAgBhI,0hBAMEvB,WAAA0B,KAAA,GAAA0E,YAAA0C,OAAOU,isBASE,IAAAC,GAAET,aAAAU,wTAGZ1J,WAAA0B,KAAA,GAAA0E,YAAAqD,GAAGE,YAAc,KAAO,KAAO,qNAEnBjC,cAAc+B,GAAGG,2JACfH,GAAGI,UAAUC,2PAIjD9J,WAAA0B,KAAA,GAAA0E,YAAAqD,GAAGM,uwBAgBJ,MAAA,GAAAhD,YAAc,SAAQ,+lCAkB3B,GAAAA,YAAc,WAAU,+HAEnBH,gBAAe,mCACZ5G,WAAA0B,KAAA,cAAA0E,YAAAQ,gBAAgBK,+YAUxB,GAAAF,YAAc,WAAU,wgBA9V1B,aACG5C,sgBCzRTpC,KAAiB,MAAAC,QACjBA,QAAA,IAAiBD,KAAO,MAAAE,WACxBA,WAAA,+GAOQD,gBACGC,iCAFD,OAAAF,wBAAIA,KAAAyC,+nBCCX,IAAAwF,iBAA0B,MAC1B,IAAAC,kBAA2B,MAC3B,IAAAC,mBAA4B,MAkBhCrJ,UAAgB,eAEJC,SAAW,oBAAsBC,WAAa,YAAa,CAC5DA,SAAAC,oBAAoB,QAASC,mBACvC,IAaQ,SAAAA,mBAAmBC,OACtB,MAYN,UA4CSiJ,wBAEWH,iBAAA,KACpB,UAESI,yBAEYH,kBAAA,KACrB,UAESI,0BAEaH,mBAAA,KACtB,gtDAyCOzI,IAAAL,MAAMoC,gOAIwBpC,MAAMC,UAAY,+9BAuBP,gvFAyDpC8I,sBACInI,QAAA,IAAAgI,iBAAmB,iBAFxB,OAAAA,oCAAgBA,iBAAAxF,4FAOf4F,uBACIpI,QAAA,IAAAiI,kBAAoB,iBAFzB,OAAAA,qCAAiBA,kBAAAzF,6FAOhB6F,wBACIrI,QAAA,IAAAkI,mBAAqB,iBAF1B,OAAAA,sCAAkBA,mBAAA1F,whBC/OzB,IAAA8F,mBAGAjJ,SAAW,OACXmC,UAAY,gsFA+KT,GAAA8G,iBAAmB5K,iBAAiB6K,UAAS,yhBAgBzC/G,UACKnC,6oBCrNjB2C,eAAsBwG,kBAAkBC,QACvC,IAAIC,SAAW,KACf,MAAMC,OAASC,sBAEX,IACG,MAAAC,OAAS,IAAIC,OAAO,CACzBH,cACAI,wBAAyB,OAG1BL,eAAiBG,OAAOG,KAAKC,YAAYC,OAAO,CAC/CC,MAAO,SAKPC,SAAU,CAAC,CAAEC,KAAM,OAAQC,QAASb,WAU9B,MAAA,CAAEc,MAAOb,SAASa,MAAOD,QAASZ,SAASc,QAAQ,GAAGC,QAAQH,eAC7DnJ,OACJuJ,IAAAvJ,MAAM,+BAAgC,MAAOA,OAC7CuJ,IAAAvJ,MAAM,YAAa,MAAOuI,UAExB,KAAA,CAAEvI,YAAcuI,kBAAmB,CAE3C,0HCjBK,IAAAU,SAAA,GACA,IAAAjJ,MAAe,MACf,IAAAG,WAAoB,2CACpB,IAAAqJ,UAGoBC,UAAAC,qBAAA,UAEpBC,cAAe,CACd,IACHH,UAAA,IAAgBI,YAAY,eACpBC,GACRN,IAAIvJ,MAAM6J,EAAC,CACZ,CAqCDnL,UAAsBmD,gBACfiI,8BAGQA,aACV,IAEG,MAAAC,aAAeC,MAAMC,QAAQhB,UAAQ,IAAQA,UAAQ,GAGrD,MAAAiB,cAAgBH,aAAaI,IAAKC,MAAA,CACvCC,KAAMD,IAAIC,MAAQ,GAClBC,OAAQF,IAAIE,QAAU,GACtB5C,UAAW0C,IAAI1C,WAAa6C,KAAKC,MAAMxM,WACvCoL,MAAOgB,IAAIhB,OAAA,CAAA,EACXjE,GAAIiF,IAAIjF,IAAM,GACdsF,QAASL,IAAIK,SAAWC,gBACxBC,QAASP,IAAIO,SAAWC,QACxBC,WAAYT,IAAIS,YAAcC,aAC9BC,WAAYX,IAAIW,YAAcD,gBAIZrB,UAAAuB,gBAAAd,qBAGbe,qBAAqBf,qBACnBL,GACJN,IAAAvJ,MAAM,uBAAwB,MAAO6J,GACnC,MAAAA,CAAA,CACP,CAGqBhI,eAAAqJ,kBAAkBC,OACnC,GAAAA,MAAMC,SAAW,GAAA,WAEjB7C,SAAW,SACX8C,QAAUP,aAEV,IACyB,IAAA5I,UAAAC,eAAA,CAAA,EAAA,wBAAAmJ,sBAAA,CACrB,KAAA,wEAAA,CAGiB7B,UAAAC,qBAAA,MAElB,MAAA6B,eAAA,CACLlB,KAAMc,MACNb,OAAQ,OACR5C,UAAW6C,KAAKC,MAAMxM,WACtBoL,MAAA,CAAA,EACAjE,GAAI,GACJwF,QAASC,QACTC,WAAYQ,QACZN,WAAYM,SAGbpC,SAASuC,KAAKD,gBAEdhD,eAAiBF,kBAAkB8C,OAE/B,IAAAM,kBAAoBlD,UAAUY,SAASuC,QAAQ,SAAU,cAEvD,MAAAC,cAAA,CACLtB,KAAMoB,kBAAoBA,kBAAoB,GAC9CnB,OAAQ,MACR5C,UAAW6C,KAAKC,MAAMxM,WACtBoL,MAAOb,UAAUa,MACjBjE,GAAI,GACJwF,QAASC,QACTC,WAAYQ,QACZN,WAAYM,SAGbpC,SAASuC,KAAKG,6CAES1C,iBACjBa,mBACED,GAC2B1J,WAAA,sBAAA0J,GAAGP,SAAWO,IACzC7J,MAAA,IAAA,CACP,QACuByJ,UAAAC,qBAAA,MAAA,CACzB,sMAsBuCvJ,qCAAd,OAAAH,yBAAKA,MAAAqC,g1BA2BzB4G,SAAQ,qEAGLA,sFAFc2C,WAAArM,KAAA,GAAA0E,YAAA4H,KAAKC,UAAU7C,SAAU,KAAM,mHAEjC,IAAAK,QAAOxF,WAAAiI,GACFlO,WAAA0B,KAAA,OAAAG,WAAA,aAAAqG,UAAAuD,QAAQgB,SAAW,OAAS,cAAgB,8JAE5D,GAAAhB,QAAQgB,SAAW,OAAM,qOAQrBzM,WAAA0B,KAAA,sBAAAG,WAAA,GAAAqG,UAAAuD,QAAQgB,SAAW,OACxB,yBACA,gJAEOzM,WAAA0B,KAAA,GAAAyM,KAAA1C,QAAQe,0BAEIxM,WAAA0B,KAAA,QAAAG,WAAA,gBAAAqG,UAAAuD,QAAQgB,SAAW,OAAS,gBAAkB,2FAElE2B,gBAAgB3C,QAAQ5B,6FAGtB,GAAA4B,QAAQgB,SAAW,OAAM,qkBASF,s2BCvO3B,IAAA1K,KAAAA,KAAiB,OAAKjC,QAExB,IAAAwN,MAAe,+dAqBJA,kzCCvBT,IAAAvL,KAAAA,KAAiB,OAAKjC,sEAUQiC,ysDCmB9BuF,GAAK,SAAA+G,eAAUA,eAAiB,MAAAC,WAAOA,WAAa,uBAEtD,IAAAC,SAAkB,MAClB,IAAAC,QAAiB,MACjB,IAAAC,SAAkB,UAElBC,EAAI,MACJC,EAAI,EACJ,IAAAC,SAAkBC,SAASC,aAAavN,cAKxC,IAAAwN,eAAgC,GAEhC,IAAAC,cAAA,EAEA,IAAA9H,gBAAA,EACA,IAAA+H,iBAAA,EACA,IAAAC,kBAAA,iHA4GoB,OAAAX,4BAAQA,SAAA/J,uFAEjB,OAAAgK,2BAAOA,QAAAhK,gNAGN,OAAAiK,4BAAQA,SAAAjK,kNAKsF8J,0mBAqBhGtO,WAAA0B,KAAA,8DAAAG,WAAA,KAAAqG,UAAAwG,kBAAMC,+0MA0JM3O,WAAA0B,KAAA,qBAAA0E,iBAAAsG,MAAOyC,cAAchP,qCAAuB4M,+BACnE6B,inBCrVC,IAAAQ,cAAA,GAcA,IAAAC,iBAA0B,MAIxB,MAAAC,aAAeC,oBAAoBC,cAuHzC3O,UAAgB,KACf4O,+BA8DQA,oBACML,cAAAM,QAASC,eAClB,GAAAA,aAAaC,kBAAmB,CACtBN,aAAAO,aAAaF,aAAaC,mBAC1BN,aAAAQ,eAAeH,aAAaC,kBAC1C,GAEF,oEAyNI,GAAAR,cAAc7K,OAAS,EAAC,oEAMpB6K,+IAHOC,0BACAA,mKAEU,IAAAM,aAAY1J,WAAAC,SAE9B,GAAAyJ,aAAa9H,OAAS,WAAU,iCAE/B,GAAA8H,aAAa9H,OAAS,WAAU,+5BAsBF7H,UAAA0B,KAAA,GAAA0E,YAAAuJ,aAAaI,80BAsB7B/P,UAAA0B,KAAA,GAAA0E,YAAAuJ,aAAalE,isBAmBNzL,UAAA0B,KAAA,GAAA0E,YAAAuJ,aAAaI,wyBAqBpB/P,UAAA0B,KAAA,GAAA0E,YAAAuJ,aAAalE,0MAO7B,GAAA2D,cAAcY,OAAQC,GAAMA,EAAEpI,OAAS,YAAYtD,OAAS,EAAC,qvBCvgB7DxC,KAAiB,MAAA1C,MAAQA,MAAQ,KAAAyC,UAAMA,UAAY,UAAAiC,SAAWA,6BAE5DN,KAAAC,OAAMA,OAAAwM,oBAAoCA,qBAAwBrM,WAAA,CACzEC,cAAA,CACCvD,QAAS,GACTD,KAAM,GACN2G,MAAO,GACP/G,OAAQ,GACRM,SAAU,GACV2P,QAAS,EACTC,UAAW,KACXC,cAAe,KACf5P,QAAS,GACTgB,IAAK,GACL6O,cAAe,SACfC,SAAU,MACVC,aAAc,MACdhJ,YAAa,GAEbN,WAAY,WACZuJ,QAAS,UACTC,SAAU,QACVC,YAAa,MACbC,kBAAmB,KACnBC,YAAa,GACbxN,QAAS,GACTyN,SAAU,GACVC,eAAgB,GAChBC,kBAAmB,OAEpBzO,iBAAkBC,IAAIC,SAASC,MAAA,CAC9BnC,QAASiC,IAAIG,SAASC,SAAS,gCAC/BtC,KAAMkC,IAAIG,SAASC,SAAS,6BAC5BqE,MAAOzE,IAAIG,SAASS,WACpBlD,OAAQsC,IAAIG,SAASC,SAAS,+BAC9BpC,SAAUgC,IAAIkD,SAAS9C,SAAS,mCAChCuN,QAAS3N,IAAIkD,SAASuL,KAAK,aAAA,CAC1BC,GAAKC,KAAA,CAAiB,WAAY,UAAW,WAAY,WAAY,QAAQC,SAASD,KACtFE,KAAOC,QAAWA,OAAO1O,SAAS,6BAClC2O,UAAYD,QAAWA,OAAOlO,aAE/B8D,WAAY1E,IAAIG,SAASC,SAAS,8BAClC6N,QAASjO,IAAIG,SAASC,SAAS,2BAC/B8N,SAAUlO,IAAIG,SAASC,SAAS,kCAChCwN,UAAW5N,IAAI2C,UAAU/B,WAAWoO,QAAQ,MAC5CnB,cAAe7N,IAAI2C,UAAU/B,WAAWoO,QAAQ,MAChD/Q,QAAS+B,IAAIG,SAASlB,IAAI,uBAAuB2B,WAAWE,WAC5D7B,IAAKe,IAAIG,SAASlB,IAAI,uBAAuB2B,WAAWE,WACxDD,QAASb,IAAIG,SAASlB,IAAI,uBAAuB2B,WAAWE,WAC5DuN,YAAarO,IAAIG,SAASS,WAC1B0N,SAAUtO,IAAIG,SAASS,WACvB2N,eAAgBvO,IAAIG,SAASS,WAC7BuN,YAAanO,IAAI2C,UAAU/B,WAAWoO,QAAQ,OAC9CZ,kBAAmBpO,IAAI2C,UAAU/B,WAAWoO,QAAQ,MACpDR,kBAAmBxO,IAAI2C,UAAU/B,WAAWoO,QAAQ,SAErDzN,SAAWE,SACN,IACG,MAAAwN,aAAA,IACFxN,OACHmM,UAAWnM,OAAOmM,WAAa,KAC/BC,cAAepM,OAAOoM,gBAAkBpM,OAAOiD,aAAe,YAAcjD,OAAOyM,WAAa,SAChGJ,cAAe,SACfpQ,OAAQ+D,OAAO/D,OAAOqB,cACtBjC,QAASD,OAAOC,SAAW,GAC3BoS,SAAUrS,OAAOqS,UAAY,EAC7BlS,MAAA,CACCA,MAAO,EACP+Q,SAAU,MACVvB,SAAU,GACV2C,gBAAiBjF,KACjByD,QAAS9Q,OAAO8Q,SAAWlM,OAAOkM,SAAW,EAC7C3K,SAAU,GACVoM,OAAQvS,OAAOG,OAAOoS,QAAU,EAChCnG,QAASpM,OAAOG,OAAOiM,SAAW,IAEnCoG,OAAQxS,OAAOwS,QAAA,GACfpS,MAAOJ,OAAOI,OAAS,EACvB2H,KAAM/H,OAAO+H,MAAA,GACb0F,QAASzN,OAAOyN,SAAWC,QAE3B7F,WAAYjD,OAAOiD,WACnBuJ,QAASxM,OAAOwM,QAChBC,SAAUzM,OAAOyM,SACjBC,YAAa1M,OAAO0M,YACpBC,kBAAmB3M,OAAO2M,kBAC1BkB,UAAWzS,OAAOyS,YAAiB,IAAApF,MAAOqF,cAC1CC,aAAc/N,OAAO+M,mBACpBF,SAAU7M,OAAO6M,SACjBC,eAAgB9M,OAAO8M,gBAAkB9M,OAAO/D,OAChD8Q,kBAAmB/M,OAAO+M,wBACvB,EACJiB,SAAA,CACCpB,YAAa5M,OAAO4M,kBAAe,EACnCxN,QAASY,OAAOZ,cAAW,EAC3BsO,aAAA,IAAiBjF,MAAOqF,gBAI1BhO,SAAS0N,cACTS,YACOnQ,KAAA,KACR,OAASI,OACJuJ,IAAAvJ,MAAM,oBAAqB,MAAOA,MACvC,cAIO+P,YACRhC,oBAAA,CACC3P,QAAS,GACTD,KAAM,GACN2G,MAAO,GACP/G,OAAQ,GACRM,SAAU,GACV2P,QAAS,EACTC,UAAW,KACXC,cAAe,KACf5P,QAAS,GACTgB,IAAK,GACL6O,cAAe,SACfC,SAAU,MACVC,aAAc,MACdhJ,YAAa,GAEbN,WAAY,WACZuJ,QAAS,UACTC,SAAU,QACVC,YAAa,MACbC,kBAAmB,KACnBC,YAAa,GACbxN,QAAS,GACTyN,SAAU,GACVC,eAAgB,GAChBC,kBAAmB,OAErB,oGAmCuB3R,MAAQ,aAAe,k0CAiBzBiB,oIAGNA,KAAI,0MAC8BA,6uCAmB5BC,uIAGNA,QAAO,0MAC2BA,qmCAkB5B0G,qIAGNA,MAAK,0MAC6BA,wtCAmB5B/G,sIAGNA,OAAM,0MAC4BA,mxCAsB5BM,wIAGNA,SAAQ,0MAC0BA,+0CAiB3B0G,20DAeNA,WAAU,0MACwBA,+tCAe5BuJ,QAIPpM,GAAAA,UAAAC,eAAA,CAAA,EAAA,QAAAb,MAAAyD,aAAe,WAAU,ijBAIpB,MAAA,GAAA7C,UAAAC,eAAA,CAAA,EAAA,QAAAb,MAAAyD,aAAe,SAAQ,ijBAIvB,MAAA,GAAA7C,UAAAC,eAAA,CAAA,EAAA,QAAAb,MAAAyD,aAAe,UAAS,u6BAQ5BuJ,QAAO,0MAC2BA,+2CAiB5BC,SAIPrM,GAAAA,UAAAC,eAAA,CAAA,EAAA,QAAAb,MAAAyD,aAAe,YAAU7C,UAAAC,eAAA,CAAA,EAAA,QAAAb,MAAUyD,aAAe,WAAmB7C,UAAAC,eAAA,CAAA,EAAA,QAAAb,MAAAyD,aAAe,sDAAoBA,aAAe,YAAoB7C,UAAAC,eAAA,CAAA,EAAA,QAAAb,MAAAyD,aAAe,OAAM,iiBAI3J,MAAA,GAAA7C,UAAAC,eAAA,CAAA,EAAA,QAAAb,MAAAyD,aAAe,SAAQ,8WAGvB,MAAA,GAAA7C,UAAAC,eAAA,CAAA,EAAA,QAAAb,MAAAyD,aAAe,UAAS,6WAGxB,MAAA,GAAA7C,UAAAC,eAAA,CAAA,EAAA,QAAAb,MAAAyD,aAAe,SAAQ,w5BAQ3BwJ,SAAQ,0MAC0BA,kJAI1C,WAAY,UAAW,WAAY,WAAY,OAAQ,MAAO,aAAaU,mDAAelK,YAAU,mqCAiBrFiJ,uIAGNA,QAAO,0MAC2BA,6wBAe1BQ,YAAW,s7BAgBXC,kBAAiB,g6BAgBjBR,UAAS,83BAgBTY,kBAAiB,i1BAe9BA,kBAAiB,umCAaNF,6lFA8BAC,myCAuBDF,gjCAmBAxN,uIAGNA,QAAO,0MAC2BA,igCAkB3BgN,cAAa,oIAGrBA,cAAa,0MACqBA,woCAkB5B5P,uIAGNA,QAAO,0MAC2BA,6mCAkB5BgB,mIAGNA,IAAG,0MAC+BA,i+DCjoBhD0Q,OAAA,GAAAC,cACAA,cAAA,OAAuBC,cACvBA,cAAA,OAAuBC,cACvBA,cAAA,gBAGG,IAAAC,cAAyC,KACzC,IAAAC,cAAuB,MACvB,IAAAC,gBAAyB,MAKvB,MAAAC,kBAAA,IAAwBC,KAAKC,aAAa,QAAA,CAC/CC,MAAO,WACPrN,SAAU,MACVsN,sBAAuB,EACvBC,sBAAuB,IAIlB,MAAAC,iBAAA,IAAuBL,KAAKC,aAAa,QAAA,CAC9CC,MAAO,WACPrN,SAAU,MACVsN,sBAAuB,EACvBC,sBAAuB,IAef,SAAAE,WAAW5T,OACHkT,cAAAlT,MACAmT,cAAA,IACjB,CAES,SAAAU,aAAa7T,OACjB,GAAAA,OAAOiR,gBAAkB,SAAU,CACtBiC,cAAAlT,MACEoT,gBAAA,IACnB,CACD,UAESU,gBACJ,GAAAZ,eAAiBA,eAAejC,gBAAkB,SAAU,CAC/DgC,cAAcC,eACIE,gBAAA,MACFF,cAAA,IACjB,CACD,CAES,SAAAa,iBAAiB/T,OAClB,OAAoCY,iBAAiBZ,MAC7D,+GAuBO8S,oMAAU,IAAA9S,MAAK4G,WAAAC,SACb,MAAAmN,UAAYD,iBAAiB/T,uGAG2DW,WAAA0B,KAAA,UAAAG,WAAA,yFAAAqG,UAAA7I,OAAOiR,gBAAkB,SACpH,+DACAjR,OAAO+Q,UACN,sDACA,oGAI2DpQ,WAAA0B,KAAA,OAAAG,WAAA,yDAAAqG,UAAA7I,OAAOiR,gBAAkB,SACpF,iBACAjR,OAAO+Q,UACN,cACA,mFAEC,GAAA/Q,OAAOoB,QAAO,kCACRT,WAAA0B,KAAA,OAAAC,KAAA,MAAAtC,MAAMoB,WAAckB,KAAA,MAAAtC,MAAMa,oGAC3Bb,OAAOiR,gBAAkB,SAAQ,+nDAevCtQ,WAAA0B,KAAA,GAAA0E,YAAA/G,OAAOiR,gBAAkB,SAAW,eAAiB,yDAElD,GAAAjR,OAAO+Q,UAAS,0RAGhB,GAAA/Q,OAAOiR,gBAAkB,SAAQ,+RAGvB,2bASiDtQ,WAAA0B,KAAA,8DAAAC,KAAA,QAAAtC,MAAMiB,4CACtEN,WAAA0B,KAAA,GAAA0E,YAAA/G,MAAMiB,UAAQ8F,YAAA/G,MAAMa,oIAKC,kCACb,MAAAoT,kBAAoBD,UAAU/T,UAAY,SAAWC,OAAO8T,UAAU/T,SAAWqB,KAAKC,IAAI,GAAIyS,UAAU7S,UAAkBjB,OAAO8T,UAAU/T,SAC3I,MAAAiU,cAAgBC,MAAMF,YAAc,EAAIA,iBACxCG,aAAeJ,UAAU5T,gCACN6L,QAAA,GAAAiI,cAAc5L,QAAQ,MAAM0L,UAAUnT,YAAY8S,iBAAiBU,OAAOD,iNAEzFzT,WAAA0B,KAAA,YAAA0E,YAAAmN,cAAc5L,QAAQ,mBAAK8L,aAAe,EAAC,KAAQf,kBAAkBgB,OAAOD,gBAAkB,iEAKtG,GAAAJ,UAAUjT,aAAe,EAAC,4DACNkL,QAAA0H,iBAAiBU,OAAOL,UAAUjT,kNAEvDJ,WAAA0B,KAAA,GAAA0E,YAAAiN,UAAUjT,aAAe,IAAO,WAAasS,kBAAkBgB,OAAOL,UAAUjT,0JAqD3E,GAAAf,MAAMwS,OAAM,mCAEb,MAAA8B,gBAAkBC,eAAevU,MAAMwS,OAAQ,OAClD,GAAA8B,kBAAoB,KAAI,4GAEkB3T,WAAA0B,KAAA,QAAAG,WAAA,kCAAAqG,UAAAyL,iBAAmB,EAAI,8BAAgC,2GAC7FA,iBAAmB,EAAI,IAAM,MAAEvN,YAAEuN,gBAAgBhM,QAAQ,kLAOH3H,WAAA0B,KAAA,0EAAAC,KAAA,QAAAtC,MAAMkB,+CACpEP,WAAA0B,KAAA,GAAA0E,YAAA/G,MAAMkB,iDAIH,GAAAlB,MAAMmB,SAAQ,uQAGfR,WAAA0B,KAAA,GAAA0E,YAAA/G,MAAMmB,0JAMK,wqBAYFqT,OAAA,IAAAC,UAAUnI,UAAUoI,UAAU1U,MAAMkB,SACpCyT,OAAA,IAAAf,WAAW5T,OACT4U,SAAA,IAAAf,aAAa7T,OACnB6U,SAAA7U,OAAOiR,gBAAkB,SAAY,CAAA,OAAQ,OAAQ,UAAa,CAAA,OAAQ,mBACxEjR,MAAMC,SAAWC,OAAOF,MAAMC,SAAW,2JAMbiT,uBAAyBF,yBAA/C,OAAAG,iCAAaA,cAAAhO,+FAIvB2O,kIADA,OAAAV,mCAAeA,gBAAAjO,+kBCtQpBzC,KAAiB,MAAAqQ,cAAQA,cAAgB,KAAAtQ,UAAMA,UAAY,mBAE7D,IAAAqS,aAAsB,MACtB,IAAAhC,OAAA,OACAnD,SAA4B,SAC5BE,aAAyC,KA0B7CrO,UAAgB,QAqDP,SAAAuT,kBAAkB7B,eACtB,GAAAH,gBAAkB,KAAM,CAC3BA,cAAcG,cACf,CACOxQ,KAAA,KACR,CAEeiC,eAAAqQ,eAAehV,OACzB,GAAAA,OAAOiR,gBAAkB,SAAU,CAChC,MAAAhR,cAAgBgV,gBACrBjV,MAAAgF,UAAAC,eAAA,CAAA,EAAA,+BAAAiQ,6BAC6BC,UAAUjU,QACvCyO,SACAE,cAED7P,MAAMC,QAAUA,QAChBmV,0BAA0BC,OAAQvC,SAAeA,IAAAA,QAAQ9S,QACzDsV,+BAAAtQ,UAAAC,eAAA,CAAA,EAAA,6BAAAmQ,2BACD,CACeN,aAAA,KAChB,CAES,SAAAS,kBAAkBC,cACAJ,0BAAAC,OAAQvC,UAC3B,MAAA2C,cAAgB3C,QAAOnC,OAAQjI,GAAMA,EAAExH,UAAYsU,aAAatU,SACtEoU,+BAA+BG,eACxB,OAAAA,eAET,CAES,SAAAC,kBAAkBtD,cACAgD,0BAAAC,OAAQvC,UAC3B,MAAA2C,cAAgB3C,QAAO7F,IAAKvE,GACjCA,EAAExH,UAAYkR,aAAalR,QAAUkR,aAAe1J,GAEjD2D,IAAAsJ,KAAK,gBAAiB,MAAOF,eACjCH,+BAA+BG,eACxB,OAAAA,eAET,UAGSG,cACDlT,KAAA,KACR,mKAOSkT,g9BAW0B,mIAKf,o5BAed,GAAA9C,OAAO5N,OAAS,EAAC,yMAKJ6P,gCACAW,gCACAH,gOAMHzC,OAAO5N,gBAAM6B,YAAQ+L,OAAO5N,SAAW,EAAI,GAAK,0sEA8B5C,okEAyCyB8P,0BAAxB,OAAAF,gCAAYA,aAAA3P,+fClQgB0Q,QACjDC,wBACA,CAAChD,OAAQiD,OACR,IAAKjD,QAAUA,OAAO5N,SAAW,EAAG,CACnCmH,IAAI2J,KAAK,sEACLD,IAAA,CACHE,eAAgB,EAChBC,eAAgB,UAChBC,YAAa,CAAEC,QAAS,CAAI,EAAAC,UAAW,CAAG,KAE3C,MAAA,CAGD,IAAIJ,eAAiB,EACrB,MAAME,YAAsC,CAAC,EAGtCrD,OAAAzC,QAASrQ,QACf,IAAKA,MAAO,OAEZ,MAAMI,MAAEA,OAAUL,kBAAkBC,OAClBiW,gBAAA7V,MAEZ,MAAA0Q,QAAU9Q,MAAM8Q,UAAW,EACjCqF,YAAYrF,UAAYqF,YAAYrF,UAAY,GAAK1Q,QAItD,MAAM8V,eACLD,eAAiB,EACd,IAAI3C,KAAKC,aAAa,QAAS,CAC/BC,MAAO,WACPrN,SAAU,MACVsN,sBAAuB,EACvBC,sBAAuB,IACrBW,OAAO4B,gBACT,UAGJ,MAAMK,qBAAuBrQ,OAAOsQ,QAAQJ,aAAaK,OACxD,CAACC,KAAM3F,QAAS4F,UACfD,IAAI3F,SACH4F,MAAQ,EACL,IAAIpD,KAAKC,aAAa,QAAS,CAC/BC,MAAO,WACPrN,SAAU,MACVsN,sBAAuB,EACvBC,sBAAuB,IACrBW,OAAOqC,OACT,UACG,OAAAD,KAER,CAAA,GAIGV,IAAA,CACHE,8BACAC,8BACAC,YAAa,CACZC,QAASD,YACTE,UAAWC,yBAId,CAECL,eAAgB,EAChBC,eAAgB,UAChBC,YAAa,CAAEC,QAAS,CAAI,EAAAC,UAAW,CAAG,6ICnFrC5T,UAAY,WAAAhC,0JAGqGgC,67BCYtHA,UAAY,GAAAkU,YACZA,YAAc,MAAAxQ,SACdA,SAAW,eAI6BA,UAAAA,SAASjB,SAAW,EAAIiB,SAAW,MAExE,IAAAyQ,oBAA6B,EAC7B,IAAAC,mBAAA,GAgHJrV,UAAgB,QAIXsV,eAAgB,CACnBC,aAAaD,eACd,QAKGA,eAAgC,yEAmGFrU,aAAS,4gDAgCkC,IAAQmU,oBAAoBtO,QAAQ,meA+L5GqO,YAAW,sEAEPE,qOAAsB,IAAAG,KAAI9P,aAAAC,mRAEJ6P,KAAKhX,MAAMa,6IAG7BT,MAAuD,IAAQ4W,KAAK5W,MAAMkI,QAAQ,6kBCpatF,SAAA2O,sBAAsBnU,cACxBoU,aAAepU,QAAOsJ,SAAWtJ,QAAOhC,YAAc,GAGtD,MAAAqW,cAAA,CACL,mBACA,UACA,UACA,eACA,gBACA,kBACA,QACA,oBACA,kBACA,iBACA,wBACA,cACA,YACA,cACA,cACA,oBACA,eACA,eACA,aAGO,OAAAA,cAAcC,KAAMC,SAC3BH,aAAaI,cAAcvF,SAASsF,QAAQC,eAE9C,CAGS,SAAAC,gBAAgBC,UACpB,GAAAC,cAAA,OAEA,GAAAR,sBAAsBO,UAAW,CACvBvU,WAAAuU,SACL1U,MAAA,KAGQ2U,cAAA,KAChBC,WAAiB,KACAD,cAAA,OACd,IACJ,CACD,QAqDMxP,GAAK,QAAAxH,YAEPkX,OAAwB,SACxBhI,SAA4B,SAC5B9H,WAAgC,SAChCgI,aAAyC,KAGzC,EAEFhI,WAAY,WACZ5G,KAAM,UACN6P,QAAS,EACTjQ,OAAQ,MACR2H,KAAMoP,YAAYC,QAClBC,SAAU,uBACV3W,SAAU,KAGV0G,WAAY,WACZ5G,KAAM,UACN6P,QAAS,SACTjQ,OAAQ,MACR2H,KAAMoP,YAAYG,QAClBD,SAAU,+BACV3W,SAAU,KAKR,IAAA6W,aAAsB,UACtB,IAAAC,YAA6B,aAC7B,IAAA/W,QAAyB,GACzB,IAAAD,KAAsB,aACtB,IAAAiX,SAA0B,aAC1B,IAAAC,UAAmB,OACnB,IAAAC,kBAA2B,MAC3B,IAAAC,uBAAgC,MAChC,IAAAC,sBAA+B,MAC/B,IAAAC,aAAsB,MACtB,IAAAC,WAAoB,MACpB,IAAAC,SAAkB,MAClB,IAAAC,iBAA0B,UAG1BC,UAAoB,EACpB,IAAArO,UAA2B,KAE3B,IAAAxH,MAAe,MACf,IAAAG,WAA4B,GAC5B,IAAAwU,cAAuB,MACvB,IAAAmB,gBAAuC,GACvC,IAAAC,WAA4B,OAC5BC,KAAO,4BAGP,IAAAC,YAA6B,GAO7B,IAAAC,cAA+B,GAC/B,IAAA7S,cAAA,EACA,IAAA8S,eAA2CC,kBAAkBC,KAAK,GAClE,IAAArI,QAAyB,EACzB,IAAAsI,oBAAqC,GASA5J,SAAAC,aAwCrC,IAAA4J,kBAA2B,qBAwNhBC,8BACV,UACKpY,QAAAA,SAAAA,YAASqY,YAAanI,QAAAA,SAAAA,SAASiB,UAA0CrN,UAAAC,eAAA,CAAA,EAAA,+BAAAiQ,6BAAAC,UAEnE8C,YAAAuB,SAAStY,SAAS,GAAKA,SAAQuY,UAAUvY,SAAQgE,OAAS,GACjEjE,KAAAsY,YACIrB,SAAAsB,SAASD,YAAa,IACWvU,aAAAA,UAAAC,eAAA,CAAA,EAAA,+BAAAiQ,6BAAAC,UAAU/D,QAAQnQ,MAAQmQ,SAAQnQ,KAC9E2X,gBAAA5T,UAAAC,eAAA,CAAA,EAAA,qBAAAyU,oBAAsCvZ,OAAS,EACF6E,cAAAA,UAAAC,eAAA,GAAA,+BAAAiQ,6BAAAyE,YAAYxT,SAASyT,MAAQ,MAE1EX,eAAiBC,kBAAkBC,KAAK9G,WAAa6G,kBAAkBC,KAAK,GAC5ErI,QAAUM,UAASN,SAAW,CAC/B,OAASnE,GACRN,IAAI2J,KAAKrJ,EACV,CACD,CAEAnL,UAAsBmD,UAOa,GAAAK,UAAAC,eAAA,CAAA,EAAA,+BAAAiQ,6BAAA,OAC3B2E,iCAAA7U,UAAAC,eAAA,CAAA,EAAA,+BAAAiQ,6BACP,CACA4E,mCAsHcC,uBACV,iGACkCV,kBAAmB,CACvDhN,IAAI2J,KAAK,8DACTgE,uBAED,CAEoBX,kBAAA,SACdnY,QAAAA,SAAAA,SAASmR,SAAUjB,QAAAA,UAAyCpM,UAAAC,eAAA,CAAA,EAAA,+BAAAiQ,6BAAAC,gBAG5D8E,UAAYC,WAAW9I,SAAQN,QAAS5P,UACb8D,GAAAA,UAAAC,eAAA,GAAA,+BAAAiQ,6BAAAC,UAAU9C,WAAa4H,IAAK,CAEhC/E,4BAAAG,OAAQ8E,UAAA,IAChCA,QACHhF,UAAgB,IAAAgF,QAAQhF,UAAW9C,SAAU4H,KAAO,MAEtD,CAGI,GAAAA,KAAAjV,UAAAC,eAAA,CAAA,EAAA,qBAAAyU,oBAA2BvZ,MAAO,CACjBia,oBAAAC,iBAAiBnZ,SAAS+Y,IAAAjV,UAAAC,eAAA,CAAA,EAAA,qBAAAyU,mBAAwBvZ,OAClEkM,IAAAsJ,KAAK,+CAAgD,MAAA,CACxDzU,QAAAA,SACAjB,QAASga,IAAInZ,WACbX,MAA0B6E,UAAAC,eAAA,CAAA,EAAA,qBAAAyU,mBAAAvZ,OAE5B,CAGMA,MAAAA,OAAQ+Y,kBAAkBC,KAAyBnU,UAAAC,eAAA,CAAA,EAAA,qBAAAyU,oBAAAvZ,OAAS,GACjC6E,GAAAA,UAAAC,eAAA,GAAA,+BAAAiQ,6BAAAC,UAAU9C,WAAalS,OAAO,CACxD,MAAAma,WAAaC,WAClBC,YAAAxV,UAAAC,eAAA,CAAA,EAAA,+BAAAiQ,6BAAyCC,UAAU9C,UAAY,SAG3D8B,MAAMmG,kFAAmCna,MAAO,CAC9C,MAAAsa,UAAYH,WAAgCtV,UAAAC,eAAA,CAAA,EAAA,qBAAAyU,mBAAAvZ,MAC5C,MAAAua,iBAAmBJ,WAAWhS,QAAQ,GACxC,GAAA8Q,sBAAwBsB,iBAAkB,CACvBtB,oBAAAsB,gBACvB,CAEM,MAAAC,aAAexU,SAAWA,SAASkO,OAAOoG,WAAa,OACzD,GAAAtC,YAAcwC,aAAc,CACnBxC,UAAAwC,YACb,CAEAC,qBAAA5V,UAAAC,eAAA,CAAA,EAAA,qBAAAyU,mBAAwCvZ,WAClC,CACN6Z,gBACD,MACM,CACN3N,IAAIsJ,KAAK,4CACV,CACD,OAAS7S,QACJuJ,IAAA2J,KAAK,iCAAkC,MAAOlT,QAClDkX,iBACC,QACmBX,kBAAA,KACrB,CACD,CAiBS,SAAAuB,qBAAqBC,UACzB,GAAAlC,UAAYkC,SAAU,CACbvQ,UAAA,IACb,MAAA,GAAWqO,UAAYkC,SAAU,CACpBvQ,UAAA,SACN,CACMA,UAAA,IACb,CACYqO,UAAAkC,QACb,UAESb,iBACI7B,UAAA,OACUiB,oBAAA,UACV9O,UAAA,IACb,CAoCe3F,eAAAmW,eAAe5R,SACzB,QACEA,QAAS,CACbmD,IAAI2J,KAAK,iCAEV,CACI,IAAA+E,yBAAA/V,UAAAC,eAAA,CAAA,EAAA,+BAAAiQ,gCAEA6F,0BAA4BC,gBAAgBD,yBAAyBE,MAAO,CACzD,IAAAjW,UAAAC,eAAA,CAAA,EAAA,kBAAAiW,gBAAA,CACrB7O,IAAI2J,KAAK,8DAEV,CACyB+E,yBAAAE,WAAcE,YACtCJ,yBAAyBE,KAAAjW,UAAAC,eAAA,CAAA,EAAA,kBAAAiW,gBAG3B,CAGI,IAAAjb,cACEmb,OAAShB,oBAAoBiB,iBAAiBnS,QAAQhI,YACxDka,OAAQ,CACXnb,QAAUmb,OAAOnb,QACboM,IAAAsJ,KAAK,qDAAsD,MAAA,CAC9DzU,QAASgI,QAAQhI,QACjBjB,QAASA,QAAQa,iBAEZ,CACF,IACHb,cAAgBia,WAAWpJ,SAAW,EAAG5H,QAAQhI,SAC7CmL,IAAAsJ,KAAK,sDAAuD,MAAA,CAC/DzU,QAASgI,QAAQhI,QACjBjB,QAASA,QAAQa,YAEnB,OAASgC,QACJuJ,IAAA2J,KAAK,yCAA0C,MAAOlT,QAChD7C,QAAA,EACX,CACD,CAEsB,IAAA+E,UAAAC,eAAA,CAAA,EAAA,kBAAAiW,gBAAA,CACrB7O,IAAI2J,KAAK,8DAEV,CAEA+E,yBAAA,IACIA,yBACH5F,UAAA,IACI4F,yBAAyB5F,UAC5BrN,YAAaoB,QAAQpB,YACrB5G,QAASgI,QAAQhI,QACjBoa,QAASpS,QAAQqS,eACjBhC,YAAarQ,QAAQjI,KACrBoR,SAAUpS,SAAWiZ,kBAAkBC,KAAK,IAE7C8B,WAAYO,YAAA,IAEPT,0BAA0BE,KAC7B/R,iBAAAlE,UAAAC,eAAA,GAAA,kBAAAiW,wBAMGrB,iCAAiCkB,6BAGnCtO,cAAe,CAClBgP,YAAYC,QACVC,YAAA,CACAnT,KAAM,qBACNyS,KAAA,CACC/Z,QAASgI,QAAQhI,QACjB0a,SAAA,CAAW1S,QAAQhI,YAGpB2a,MAAO/Y,SACHuJ,IAAA2J,KAAK,uCAAwC,KAAMlT,SAE1D,OAGMwW,oCACAS,uBACF,GAAApC,QAAUhI,UAAY9H,YAAcgI,cAKpBuI,kBAAA,KACrB,OAAStV,QACJuJ,IAAA2J,KAAK,2BAA4B,MAAOlT,QACxBsV,kBAAA,KACrB,CACD,gBAyEe0D,gBACV,IACsBzD,uBAAA,MACzB0B,sBACD,OAASpN,GACRN,IAAI2J,KAAKrJ,EACV,CACD,gBAEeoP,cACV,IACsB1D,uBAAA,MACzB0B,sBACD,OAASpN,GACRN,IAAI2J,KAAKrJ,EACV,CACD,gBAEeqP,eACV,IACH3P,IAAIsJ,KAAK,iCACV,OAAShJ,GACRN,IAAI2J,KAAKrJ,EACV,CACD,gBAEesP,6BAEd5P,IAAIsJ,KAAK,uBAOe2C,sBAAA,KACzB,CAGe3T,eAAAuV,WAAWpJ,SAAiB5P,UACtC,IACC4P,GAAAA,UAAW6G,OAAQ,CAClB,GAAAA,OAAOuE,eAAiBpL,SAAS,OAC9B6G,OAAOwE,WAAWrL,SACzB,OACMgB,UAAY6F,OAAOuC,WAAWhZ,UAGhC,GAAA4Q,MAAQ,2EAA4B3R,MAAO,CAC1Bia,oBAAAC,iBAAiBnZ,SAAS4Q,IAAA9M,UAAAC,eAAA,CAAA,EAAA,qBAAAyU,mBAAwBvZ,OAClEkM,IAAA+P,MAAM,sCAAuC,MAAA,CAChDlb,QAAAA,SACAjB,QAAS6R,IAAIhR,YAEf,CAEO,OAAAgR,GACR,CACO,OAAA,IACR,OAASnF,GACJN,IAAA2J,KAAK,8BAA+B,MAAOrJ,GAG/C4K,gBAAgB5K,GAET,OAAA,IACR,CACD,CAES,SAAA6N,YAAYpa,OAChB,IACG,MAAA0R,IAAMoH,kBAAkBC,KAAK/Y,cAE5B0R,IAAIuK,eACZ,OAAS1P,GACRN,IAAI2J,KAAKrJ,GACF,MAAA,SACR,CACD,UAGS5H,mBACAjC,MAAA,MACKG,WAAA,GAGGwU,cAAA,KAChBC,WAAiB,KACAD,cAAA,OACd,IACJ,4GAGuCxU,kCAAoC8B,4BAAlD,OAAAjC,yBAAKA,MAAAqC,gQAIxBmX,mFAC+B,EAAA,uEAGlBxB,eACDnY,QAAA,IAAAyV,kBAAoB,2CAFzB,OAAAA,qCAAiBA,kBAAAjT,iGAKuB2W,yBAA/B,OAAAvD,gCAAYA,aAAApT,qGACqB4W,uBAA3B,OAAAvD,8BAAUA,WAAArT,2GACjB,OAAAsT,4BAAQA,SAAAtT,oGAGf6W,0DADD,OAAA3D,0CAAsBA,uBAAAlT,sGAMrB8W,2BACKM,SAAA,IAAAjE,sBAAwB,mDAF9B,OAAAA,yCAAqBA,sBAAAnT,gFAOhBxC,QAAA,IAAA+V,iBAAmB,MAClB6D,SAAA,IAAA7D,iBAAmB,iBAFzB,OAAAA,oCAAgBA,iBAAAvT,4VASuB2T,0jBAMPnY,WAAA0B,KAAA,GAAA0E,YAAA8R,2BAAaG,kMAKjD,0iQAgL0B7D,UAAU/D,QAAQvJ,uDAE5B,yNAGb,GAAAmQ,aAAaV,gBAAkB,UAAS,4dAQrCU,ghBAUAA,0uBAiDH/W,0KAE6BiX,mNAM7BhX,qKAEqB+W,wDACZuE,KAAA7b,WAAA,CAAA8b,OAAA,CAAc,oeAqDvB9b,WAAA0B,KAAA,yDAAAC,KAAA,QAAA2W,eAAeoD,4FAECjD,8MAEJL,kiBA+Bd,GAAAzO,YAAc,KAAI,wgBAYb,MAAA,GAAAA,YAAc,KAAI,0qBAcN6N,UAASuE,YAAA,sIACZ1D,6aAY8C,qYAUT7S,SAAA6S,eAAiB,4uCCv4CxE,IAAAtY,SAAAA,UAAAD,QAKF,IAAAkc,WAA4BC,oBAE5B,IAAAlM,MAAuBmM,cAGvB,IAAA/Z,MAAwB,MACxB,IAAAG,WAA4B,GAE5B,IAAA6Z,eAAgC,+JA4D5BpM,yIAI6CzN,sBAA5B,OAAAH,yBAAKA,MAAAqC,2BAInBxE,WAAA0B,KAAA,kCAAAG,WAAA,MAAAqG,UAAA8T,mCAAuBA,20BAedG,8FACRpc,WAAQC,mKAKIoc,OAAApc,WAAA,CAAAqO,eAAA2N,WAAW7b,6UAMI,kBAAoB8U,oBAAsBA"}