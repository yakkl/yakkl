{"version":3,"file":"_page.svelte.js","sources":["../../../../../../../src/lib/common/gets.ts","../../../../../../../src/routes/(wallet)/contacts/+page.svelte"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n// src/lib/utilities/get.ts\nimport { decryptData, encryptData } from '$lib/common/encryption';\nimport { isEncryptedData } from '$lib/common/misc';\nimport type { EncryptedData } from '$lib/common/interfaces';\n\n// Decrypts and sets data, returning the decrypted data or the original data if not encrypted.\nexport async function decryptAndSetData<T>(\n\tdata: EncryptedData | T,\n\tdecryptionKey: string\n): Promise<T> {\n\tif (isEncryptedData(data)) {\n\t\tconst decryptedData = await decryptData(data, decryptionKey);\n\t\treturn decryptedData as T;\n\t}\n\treturn data as T;\n}\n\nexport async function setAndEncryptData<T extends object>(\n\tdata: T,\n\tkey: string\n): Promise<EncryptedData> {\n\t// Encrypt the data and return the result\n\treturn await encryptData(data, key);\n}\n\n// Sets a property on an object if the value is defined (not undefined or null)\nexport function setDefinedProperty<T extends object, K extends keyof T>(\n\ttarget: T | undefined,\n\tproperty: K,\n\tvalue: T[K] | undefined\n): void {\n\tif (target && value !== undefined && value !== null) {\n\t\ttarget[property] = value;\n\t}\n}\n\n// Ensures that the object has all the properties from the defaults object, and sets them to the default value if they are missing.\nexport function ensureDefaults<T extends object>(obj: T, defaults: Partial<T>): T {\n\tfor (const key in defaults) {\n\t\tif (obj[key] === undefined) {\n\t\t\tobj[key] = defaults[key]!;\n\t\t}\n\t}\n\treturn obj;\n}\n\n// Safely increments a property on an object.\nexport function incrementProperty<T extends object, K extends keyof T>(\n\tobj: T,\n\tproperty: K,\n\tincrementValue: number = 1,\n\tmaxValue: number = -1\n): void {\n\tincrementValue = Math.abs(incrementValue); // Ensure incrementValue is always positive\n\tif (typeof obj[property] === 'number') {\n\t\tlet newValue = ((obj[property] as unknown as number) ?? 0) + incrementValue;\n\t\tif (maxValue !== -1 && newValue > maxValue) {\n\t\t\tnewValue = maxValue;\n\t\t}\n\t\tobj[property] = newValue as any;\n\t} else {\n\t\tobj[property] = incrementValue as any;\n\t}\n}\n\n// Safely decrements a property on an object.\nexport function decrementProperty<T extends object, K extends keyof T>(\n\tobj: T,\n\tproperty: K,\n\tdecrementValue: number = 1,\n\tensureNonNegative: boolean = true\n): void {\n\tdecrementValue = Math.abs(decrementValue); // Ensure decrementValue is always positive\n\tif (typeof obj[property] === 'number') {\n\t\tlet newValue = ((obj[property] as unknown as number) ?? 0) - decrementValue;\n\t\tif (ensureNonNegative && newValue < 0) {\n\t\t\tnewValue = 0;\n\t\t}\n\t\tobj[property] = newValue as any;\n\t} else {\n\t\tobj[property] = ensureNonNegative ? (0 as any) : (-decrementValue as any);\n\t}\n}\n","<!-- @migration-task Error while migrating Svelte code: can't migrate `let error = false;` to `$state` because there's a variable named state.\n     Rename the variable and try again or migrate by hand. -->\n<script lang=\"ts\">\n\timport {\n\t\tgetYakklContacts,\n\t\tsetYakklContactsStorage,\n\t\tyakklMiscStore,\n\t\tgetYakklCurrentlySelected\n\t} from '$lib/common/stores';\n\timport { createForm } from 'svelte-forms-lib';\n\timport * as yup from 'yup';\n\timport { dateString } from '$lib/common/datetime';\n\timport { onDestroy, onMount } from 'svelte';\n\timport { decryptAndSetData } from '$lib/common/gets';\n\timport { setDefinedProperty } from '$lib/common/gets';\n\timport { Dropdown, DropdownItem, Button, Helper } from 'flowbite-svelte';\n\t// import * as Icon from 'flowbite-svelte-icons';\n\t// import ChevronDoubleUpOutline from '$lib/components/ChevronDoubleUpOutline.svelte.tmp';\n\timport Back from '$lib/components/Back.svelte';\n\timport type { YakklContact, YakklCurrentlySelected } from '$lib/common';\n\timport WalletManager from '$lib/managers/WalletManager';\n\timport type { Wallet } from '$lib/managers/Wallet';\n\timport { isEthereum } from '$lib/managers/BlockchainGuards';\n\n\tlet wallet: Wallet;\n\n\tlet currentlySelected: YakklCurrentlySelected;\n\n\tlet error = false;\n\tlet errorValue = '';\n\tlet dropdownOpen = false;\n\tlet name: string;\n\tlet address: string;\n\tlet alias: string;\n\tlet note: string;\n\tlet index = -1; // Default - means only add\n\tlet contacts: YakklContact[] = [];\n\n\tonMount(async () => {\n\t\thandleClear();\n\t\tcurrentlySelected = await getYakklCurrentlySelected();\n\t\twallet = WalletManager.getInstance(\n\t\t\t['Alchemy'],\n\t\t\t['Ethereum'],\n\t\t\tcurrentlySelected.shortcuts.chainId ?? 1,\n\t\t\timport.meta.env.VITE_ALCHEMY_API_KEY_PROD\n\t\t);\n\t\tcontacts = await getYakklContacts();\n\t\tif (!contacts) {\n\t\t\tcontacts = [];\n\t\t}\n\t});\n\n\tonDestroy(() => {\n\t\thandleClear();\n\t});\n\n\tconst { form, errors, state, isValid, handleChange, handleSubmit } = createForm({\n\t\tinitialValues: { name: '', address: '', alias: '', note: '' },\n\t\tvalidationSchema: yup.object().shape({\n\t\t\tname: yup.string().required('Please enter contact name'),\n\n\t\t\t// TODO: This needs a function based on the blockchain to validate the address\n\t\t\taddress: yup\n\t\t\t\t.string()\n\t\t\t\t.required('Please enter the crypto address of this contact')\n\t\t\t\t.matches(/^(0x)?[0-9a-fA-F]{40}$|^.*\\.eth$/, 'Must be a valid address or ENS name'),\n\n\t\t\talias: yup.string().optional(),\n\t\t\tnote: yup.string().optional()\n\t\t}),\n\t\tonSubmit: async (data) => {\n\t\t\ttry {\n\t\t\t\tif (await verifyContact(data.name, data.address, data.alias, data.note)) {\n\t\t\t\t\tprocessContact(); // Accept the defaults for now\n\t\t\t\t} else {\n\t\t\t\t\terrorValue = 'Unable to verify contact before processing.';\n\t\t\t\t\terror = true;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = true;\n\t\t\t\terrorValue = e as string;\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\t\t}\n\t});\n\n\tasync function verifyContact(fname: string, faddress: string, falias: string, fnote: string) {\n\t\tname = fname;\n\t\taddress = faddress;\n\t\talias = falias;\n\t\tnote = fnote;\n\n\t\tlet resolvedAddr = null;\n\t\tconst blockchain = wallet.getBlockchain();\n\n\t\tif (isEthereum(blockchain)) {\n\t\t\tresolvedAddr = await blockchain.resolveName(alias);\n\t\t}\n\n\t\tif (resolvedAddr) {\n\t\t\taddress = resolvedAddr;\n\t\t}\n\n\t\tif (!blockchain.isAddress(address)) {\n\t\t\terrorValue = `Address ${address} is not a valid address. A valid toAddress is required.`;\n\t\t\terror = true;\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfunction handleClear() {\n\t\tname = $form.name = '';\n\t\taddress = $form.address = '';\n\t\talias = $form.alias = '';\n\t\tnote = $form.note = '';\n\t}\n\n\tfunction handleClick(idx: number) {\n\t\tif (contacts) {\n\t\t\tindex = idx;\n\t\t\t$form.name = contacts[index].name;\n\t\t\t$form.address = contacts[index].address;\n\t\t\t$form.alias = contacts[index].alias === undefined ? '' : (contacts[index].alias as string);\n\t\t\t$form.note = contacts[index].note === undefined ? '' : (contacts[index].note as string);\n\n\t\t\tdropdownOpen = false;\n\t\t}\n\t}\n\n\tasync function handleUpdate() {\n\t\ttry {\n\t\t\tif (index >= 0) {\n\t\t\t\tif (await verifyContact($form.name, $form.address, $form.alias, $form.note)) {\n\t\t\t\t\tcontacts[index].name = name;\n\t\t\t\t\tcontacts[index].address = address;\n\t\t\t\t\tcontacts[index].alias = alias;\n\t\t\t\t\tcontacts[index].note = note;\n\t\t\t\t\tcontacts[index].updateDate = dateString();\n\n\t\t\t\t\tawait setYakklContactsStorage(contacts);\n\n\t\t\t\t\thandleClear();\n\t\t\t\t} else {\n\t\t\t\t\terrorValue = 'Unable to update contact.';\n\t\t\t\t\terror = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\terrorValue = 'Update was called but there is not a valid index.';\n\t\t\t\terror = true;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\terrorValue = e as string;\n\t\t\terror = true;\n\t\t}\n\t}\n\n\tasync function handleDelete() {\n\t\ttry {\n\t\t\tif (index >= 0) {\n\t\t\t\tcontacts.splice(index, 1);\n\n\t\t\t\tawait setYakklContactsStorage(contacts);\n\n\t\t\t\thandleClear();\n\t\t\t} else {\n\t\t\t\terrorValue = 'Delete was called but there is not a valid index.';\n\t\t\t\terror = true;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\terrorValue = e as string;\n\t\t\terror = true;\n\t\t}\n\t}\n\n\tfunction handleClose() {\n\t\terror = false;\n\t}\n\n\tasync function processContact() {\n\t\ttry {\n\t\t\tlet duplicate = false;\n\t\t\tif (contacts) {\n\t\t\t\tif (contacts.find((element) => element.name === name) !== undefined) duplicate = true;\n\t\t\t} else {\n\t\t\t\tcontacts = []; // fallback\n\t\t\t}\n\n\t\t\tif (duplicate) {\n\t\t\t\terrorValue = 'Unable to ADD due to name already registered.';\n\t\t\t\terror = true;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet contact: YakklContact = {\n\t\t\t\tid: currentlySelected.id.toString(),\n\t\t\t\tname: name,\n\t\t\t\taddress: address,\n\t\t\t\talias: alias,\n\t\t\t\tnote: note,\n\t\t\t\taddressType: 'EOA',\n\t\t\t\tblockchain: currentlySelected.shortcuts.blockchain as string,\n\t\t\t\tversion: currentlySelected.version,\n\t\t\t\tcreateDate: dateString(),\n\t\t\t\tupdateDate: dateString()\n\t\t\t};\n\n\t\t\tawait decryptAndSetData(contact, $yakklMiscStore);\n\n\t\t\tsetDefinedProperty(contact, 'alias', alias);\n\t\t\tsetDefinedProperty(contact, 'note', note);\n\n\t\t\tcontacts.push(contact);\n\t\t\tawait setYakklContactsStorage(contacts);\n\n\t\t\thandleClear();\n\t\t} catch (e) {\n\t\t\terrorValue = e as string;\n\t\t\tconsole.log(e);\n\t\t\terror = true;\n\t\t}\n\t}\n</script>\n\n<div class=\"modal\" class:modal-open={error}>\n\t<div class=\"modal-box relative\">\n\t\t<h3 class=\"text-lg font-bold\">ERROR!</h3>\n\t\t<p class=\"py-4\">{errorValue}</p>\n\t\t<div class=\"modal-action\">\n\t\t\t<button class=\"btn\" on:click={handleClose}>Close</button>\n\t\t</div>\n\t</div>\n</div>\n\n<div class=\"text-center min-h-[75rem]\">\n\t<div class=\"relative w-full h-9\">\n\t\t<Back defaultClass=\"left-0 top-0 absolute\" href=\"\" />\n\t\t<h2 class=\"text-xl tracking-tight font-extrabold text-base-content\">\n\t\t\t<span class=\"lg:inline\">Contact</span>\n\t\t</h2>\n\t</div>\n\n\t<hr class=\"mb-0.5 mt-0.5\" />\n\n\t<div class=\"justify-center mb-4 mt-2\">\n\t\t<Button\n\t\t\t>Contact List\n\t\t</Button><!--<ChevronDoubleUpOutline name=\"chevron-down-solid\" class=\"w-3 h-3 ml-2 text-white dark:text-white\" /></Button> -->\n\t\t<Dropdown class=\"overflow-y-auto px-3 pb-3 text-sm h-44\" bind:open={dropdownOpen}>\n\t\t\t<div slot=\"header\" class=\"p-3\">Contact List</div>\n\t\t\t{#each contacts as contact, i}\n\t\t\t\t<DropdownItem on:click={() => handleClick(i)}>\n\t\t\t\t\t{contact.name}\n\t\t\t\t\t<small class=\"text-xs text-gray-500\">{contact.address}</small>\n\t\t\t\t</DropdownItem>\n\t\t\t{/each}\n\t\t</Dropdown>\n\t</div>\n\n\t<form on:submit|preventDefault={handleSubmit}>\n\t\t<div class=\"flex justify-center\">\n\t\t\t<div class=\"w-full max-w-xs\">\n\t\t\t\t<span class=\"mt-2 text-left text-xs text-base-content font-bold mb-1\">Name:</span>\n\t\t\t\t<input\n\t\t\t\t\tid=\"name\"\n\t\t\t\t\tclass=\"input input-bordered input-primary w-full mb-2\"\n\t\t\t\t\tplaceholder=\"Name\"\n\t\t\t\t\tautocomplete=\"off\"\n\t\t\t\t\tbind:value={$form.name}\n\t\t\t\t\ton:change={handleChange}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t{#if $errors.name}\n\t\t\t\t\t<small class=\"text-red-600 font-bold animate-pulse\">{$errors.name}</small>\n\t\t\t\t{/if}\n\n\t\t\t\t<span class=\"mt-2 text-left text-xs text-base-content font-bold mb-1\">Crypto Address:</span>\n\t\t\t\t<input\n\t\t\t\t\tid=\"address\"\n\t\t\t\t\tclass=\"input input-bordered input-primary w-full mb-2\"\n\t\t\t\t\tplaceholder=\"Crypto address\"\n\t\t\t\t\tautocomplete=\"off\"\n\t\t\t\t\tbind:value={$form.address}\n\t\t\t\t\ton:change={handleChange}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t{#if $errors.address}\n\t\t\t\t\t<small class=\"text-red-600 font-bold animate-pulse\">{$errors.address}</small>\n\t\t\t\t{/if}\n\n\t\t\t\t<span class=\"mt-2 text-left text-xs text-base-content font-bold mb-1\"\n\t\t\t\t\t>Alias (optional):</span\n\t\t\t\t>\n\t\t\t\t<input\n\t\t\t\t\tid=\"alias\"\n\t\t\t\t\tclass=\"input input-bordered input-primary w-full mb-2\"\n\t\t\t\t\tplaceholder=\"Alias\"\n\t\t\t\t\tautocomplete=\"off\"\n\t\t\t\t\tbind:value={$form.alias}\n\t\t\t\t\ton:change={handleChange}\n\t\t\t\t/>\n\t\t\t\t{#if $errors.alias}\n\t\t\t\t\t<small class=\"text-red-600 font-bold animate-pulse\">{$errors.alias}</small>\n\t\t\t\t{/if}\n\n\t\t\t\t<span class=\"mt-2 text-left text-xs text-base-content font-bold mb-1\">Note (optional):</span\n\t\t\t\t>\n\t\t\t\t<textarea\n\t\t\t\t\tid=\"note\"\n\t\t\t\t\trows=\"2\"\n\t\t\t\t\tclass=\"textarea textarea-primary mb-2 w-full\"\n\t\t\t\t\tplaceholder=\"Note\"\n\t\t\t\t\tautocomplete=\"off\"\n\t\t\t\t\tbind:value={$form.note}\n\t\t\t\t\ton:change={handleChange}\n\t\t\t\t></textarea>\n\t\t\t\t{#if $errors.note}\n\t\t\t\t\t<small class=\"text-red-600 font-bold animate-pulse\">{$errors.note}</small>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"mt-4 flex flex-row justify-center\">\n\t\t\t<button\n\t\t\t\tclass=\"flex flex-row btn btn-primary rounded-full\"\n\t\t\t\tdata-mdb-ripple=\"true\"\n\t\t\t\tdata-mdb-ripple-color=\"light\"\n\t\t\t>\n\t\t\t\t<div class=\"items-center align-middle\">\n\t\t\t\t\t<span>+ADD</span>\n\t\t\t\t</div>\n\t\t\t</button>\n\n\t\t\t<button\n\t\t\t\ton:click|preventDefault={() => handleUpdate()}\n\t\t\t\tclass=\"ml-4 flex flex-row btn btn-primary rounded-full\"\n\t\t\t\tdata-mdb-ripple=\"true\"\n\t\t\t\tdata-mdb-ripple-color=\"light\"\n\t\t\t>\n\t\t\t\t<div class=\"inline-flex items-center align-middle\">\n\t\t\t\t\t<span>Update</span>\n\t\t\t\t</div>\n\t\t\t</button>\n\n\t\t\t<button\n\t\t\t\ton:click|preventDefault={() => handleDelete()}\n\t\t\t\tclass=\"ml-4 flex flex-row btn btn-primary rounded-full\"\n\t\t\t\tdata-mdb-ripple=\"true\"\n\t\t\t\tdata-mdb-ripple-color=\"light\"\n\t\t\t>\n\t\t\t\t<div class=\"inline-flex items-center align-middle\">\n\t\t\t\t\t<span>Delete</span>\n\t\t\t\t</div>\n\t\t\t</button>\n\t\t</div>\n\t\t<div class=\"mt-4 flex flex-row justify-center\">\n\t\t\t<button\n\t\t\t\ton:click|preventDefault={handleClear}\n\t\t\t\tclass=\"flex flex-row w-[150px] btn btn-primary rounded-full\"\n\t\t\t\tdata-mdb-ripple=\"true\"\n\t\t\t\tdata-mdb-ripple-color=\"light\"\n\t\t\t>\n\t\t\t\t<div class=\"items-center align-middle\">\n\t\t\t\t\t<span class=\"text-center block w-[90px]\">Clear</span>\n\t\t\t\t</div>\n\t\t\t</button>\n\t\t</div>\n\t</form>\n</div>\n"],"names":["async","decryptAndSetData","data","decryptionKey","isEncryptedData","decryptedData","decryptData","setDefinedProperty","target","property","value","wallet","currentlySelected","error","errorValue","dropdownOpen","name","address","alias","note","contacts","onDestroy","handleClear","form","errors","createForm","initialValues","validationSchema","yup","object","shape","string","required","matches","optional","onSubmit","verifyContact","processContact","e","console","log","fname","faddress","falias","fnote","resolvedAddr","blockchain","getBlockchain","isEthereum","resolveName","isAddress","$.store_mutate","$$store_subs","$.store_get","duplicate","find","element","contact","id","toString","addressType","shortcuts","version","createDate","dateString","updateDate","yakklMiscStore","push","setYakklContactsStorage","$$value","each_array","i","$$payload","out","$.escape"],"mappings":"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"}