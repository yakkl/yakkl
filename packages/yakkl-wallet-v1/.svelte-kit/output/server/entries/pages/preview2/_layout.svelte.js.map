{"version":3,"file":"_layout.svelte.js","sources":["../../../../../../src/routes/preview2/lib/components/DockLauncher.svelte","../../../../../../src/routes/preview2/lib/components/Brand.svelte","../../../../../../src/routes/preview2/lib/components/NetworkSwitcher.svelte","../../../../../../src/routes/preview2/lib/components/UserMenu.svelte","../../../../../../src/routes/preview2/lib/components/Header.svelte","../../../../../../src/routes/preview2/lib/components/Copyright.svelte","../../../../../../src/routes/preview2/lib/components/Footer.svelte","../../../../../../src/routes/preview2/lib/components/UpgradeBanner.svelte","../../../../../../src/routes/preview2/lib/components/Settings.svelte","../../../../../../src/routes/preview2/lib/components/v1/Avatar.svelte","../../../../../../src/routes/preview2/lib/components/v1/ErrorNoAction.svelte","../../../../../../src/routes/preview2/lib/components/Profile.svelte","../../../../../../src/routes/preview2/lib/components/ConfirmLogout.svelte","../../../../../../src/routes/preview2/+layout.svelte"],"sourcesContent":["<script lang=\"ts\">\n  let { className = '' } = $props();\n\n  const items = [\n    { href: '/preview2', icon: 'üè†', label: 'Home' },\n    { href: '/preview2/preferences', icon: '‚öôÔ∏è', label: 'Preferences' },\n    { href: '/preview2/settings', icon: 'üõ†Ô∏è', label: 'Settings' },\n    { href: '/preview2/contacts', icon: 'üìá', label: 'Contacts' },\n    { href: '/preview2/tokens', icon: 'üí†', label: 'Tokens' }\n  ];\n</script>\n\n<div class={`${className}`}>\n  <div class={`relative group w-14`}>\n    <button class=\"yakkl-circle-button text-lg font-bold\">‚ò∞</button>\n    <div class=\"absolute bottom-16 left-0 bg-white dark:bg-zinc-900 shadow-lg border border-zinc-200 dark:border-zinc-700 rounded-t-full py-2 z-50 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 w-14 flex flex-col items-center\">\n      {#each items as item}\n        <a href={item.href} class=\"w-12 h-12 flex items-center justify-center rounded-full hover:bg-zinc-200 dark:hover:bg-zinc-700 text-zinc-900 dark:text-white text-sm mb-1 transition-colors\">{item.icon}</a>\n      {/each}\n    </div>\n  </div>\n</div>\n","<script lang=\"ts\">\n  let { logo = '/images/logoBullFav32x32.png', name = '', className = '' } = $props();\n  let isLogoOnly = !name || name === '';\n</script>\n\n<div class={`flex items-center font-bold text-lg tracking-wide text-indigo-400 select-none ${isLogoOnly ? 'w-10 max-w-[42px]' : ''} ${className}`}>\n  <img src={logo} class=\"h-7 w-7 rounded-none\" alt=\"Logo\" />\n  {#if !isLogoOnly}\n    <span class=\"ml-2\">{name}</span>\n  {/if}\n</div>\n","<script lang=\"ts\">\n  import { currentChain, visibleChains } from '../stores/chain.store';\n  import { getSettings } from '$lib/common/stores';\n  \n  let {\n    chains = [],\n    selectedChain = null,\n    showTestnets = false,\n    onSwitch = null,\n    className = ''\n  } = $props();\n  \n  // Use store data if available\n  let storeChains = $derived($visibleChains);\n  let storeSelectedChain = $derived($currentChain);\n  let showTestnetsSetting = $state(false);\n\n  // Use store data if available, otherwise fallback to props or default\n  let effectiveChains = $derived(() => {\n    if (storeChains.length > 0) {\n      return showTestnetsSetting ? storeChains : storeChains.filter(chain => !chain.isTestnet);\n    }\n    if (chains.length > 0) {\n      return showTestnets ? chains : chains.filter(chain => !chain.isTestnet);\n    }\n    return [\n      { key: 'eth-main', name: 'Ethereum', network: 'Mainnet', icon: '/images/eth.svg', isTestnet: false, chainId: 1 },\n      { key: 'eth-sepolia', name: 'Ethereum', network: 'Sepolia', icon: '/images/eth.svg', isTestnet: true, chainId: 11155111 },\n      { key: 'sol-main', name: 'Solana', network: 'Mainnet', icon: '/images/sol.svg', isTestnet: false, chainId: 101 }\n    ].filter(chain => showTestnetsSetting ? true : !chain.isTestnet);\n  });\n  \n  let effectiveSelectedChain = $derived(() => {\n    return storeSelectedChain || selectedChain || effectiveChains[0];\n  });\n\n  let menuOpen = $state(false);\n\n  function selectChain(chain: any) {\n    if (onSwitch) onSwitch(chain);\n    menuOpen = false;\n  }\n</script>\n\n<div class={`relative ${className}`}>\n  <button\n    class=\"yakkl-pill\"\n    onclick={() => menuOpen = !menuOpen}\n    title=\"Switch Network\"\n    aria-haspopup=\"listbox\"\n    aria-expanded={menuOpen}\n  >\n    {#if effectiveSelectedChain?.icon?.includes('/')}\n      <img src={effectiveSelectedChain.icon} alt={effectiveSelectedChain.name} class=\"w-6 h-6\" />\n    {:else}\n      <span class=\"text-xl\">{effectiveSelectedChain?.icon || 'üåê'}</span>\n    {/if}\n    <span class=\"truncate\">{effectiveSelectedChain?.name || 'Unknown'}</span>\n    <span class=\"text-xs opacity-70 ml-1 truncate\">{effectiveSelectedChain?.network || 'Network'}</span>\n    <svg class=\"ml-1 w-3 h-3\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path d=\"M6 8l4 4 4-4\"/></svg>\n    {#if (showTestnets || showTestnetsSetting) && effectiveSelectedChain?.isTestnet}\n      <span class=\"ml-2 px-2 py-0.5 rounded-full text-[10px] bg-yellow-200 text-yellow-800 dark:bg-yellow-800 dark:text-yellow-100 font-bold\">TESTNET</span>\n    {/if}\n  </button>\n  {#if menuOpen}\n    <div class=\"absolute left-0 top-full mt-2 w-56 yakkl-dropdown\">\n      {#each effectiveChains as chain}\n        <button\n          class=\"yakkl-dropdown-item flex items-center gap-2 {chain.key === effectiveSelectedChain?.key ? 'bg-indigo-50 dark:bg-indigo-900' : ''}\"\n          onclick={() => selectChain(chain)}\n          role=\"option\"\n          aria-selected={effectiveSelectedChain.key === chain.key}\n          title={`Switch to ${chain.name} ${chain.network}`}\n        >\n          {#if chain.icon?.includes('/')}\n            <img src={chain.icon} alt={chain.name} class=\"w-6 h-6\" />\n          {:else}\n            <span class=\"text-xl\">{chain.icon}</span>\n          {/if}\n          <div class=\"flex-1 text-left\">\n            <div class=\"font-medium\">{chain.name}</div>\n            <div class=\"text-xs opacity-60\">{chain.network}</div>\n            {#if chain.chainId}\n              <div class=\"text-xs text-zinc-400\">ID: {chain.chainId}</div>\n            {/if}\n          </div>\n          {#if (showTestnets || showTestnetsSetting) && chain.isTestnet}\n            <span class=\"px-2 py-0.5 rounded-full text-[10px] bg-yellow-200 text-yellow-800 dark:bg-yellow-800 dark:text-yellow-100 font-bold\">TEST</span>\n          {/if}\n          {#if chain.key === effectiveSelectedChain?.key}\n            <svg class=\"w-4 h-4 text-green-500 ml-auto\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\n            </svg>\n          {/if}\n        </button>\n      {/each}\n    </div>\n    <button class=\"fixed inset-0 z-40\" style=\"background:transparent\" aria-label=\"Close menu\" onclick={() => menuOpen = false}></button>\n  {/if}\n</div>\n","<script lang=\"ts\">\n  import SimpleTooltip from \"$lib/components/SimpleTooltip.svelte\";\n  import { currentAccount } from '../stores/account.store';\n  import { currentPlan } from '../stores/plan.store';\n  \n  let {\n    account = { username: '', address: '', ens: null, avatar: null },\n    onManage = null, onTheme = null, onSettings = null, onLogout = null,\n    className = ''\n  } = $props();\n  \n  // Use store data if available\n  let storeAccount = $derived($currentAccount);\n  let plan = $derived($currentPlan);\n  \n  let effectiveAccount = $derived(() => {\n    return storeAccount || account;\n  });\n\n  let menuOpen = $state(false);\n  function shortAddr(addr: string | undefined) {\n    return `${addr?.slice(0, 6)}...${addr?.slice(-4)}`;\n  }\n  let username = $derived(() => {\n    const acc = effectiveAccount;\n    return acc.ens || acc.username || shortAddr(acc.address);\n  });\n  \n  let displayName = $derived(() => {\n    const acc = effectiveAccount;\n    if (acc.ens) return acc.ens;\n    if (acc.username) return acc.username;\n    return shortAddr(acc.address);\n  });\n  \n  let avatarInitial = $derived(() => {\n    const acc = effectiveAccount;\n    if (acc.ens) return acc.ens[0].toUpperCase();\n    if (acc.username) return acc.username[0].toUpperCase();\n    return acc.address?.[2]?.toUpperCase() ?? \"Y\";\n  });\n</script>\n\n<div class={`relative flex items-center justify-center ${className}`}>\n  <button\n    class=\"h-7 w-7 rounded-full bg-indigo-600 hover:ring-2 hover:ring-indigo-400 border border-indigo-200 dark:border-indigo-600 flex items-center justify-center\"\n    aria-label={`Manage account for ${username()}`}\n    title={`${displayName()} (${plan})`}\n    onclick={() => menuOpen = !menuOpen}\n    tabindex=\"0\"\n  >\n    {#if effectiveAccount.avatar}\n      <img src={effectiveAccount.avatar} alt=\"avatar\" class=\"h-8 w-8 rounded-full object-cover\" />\n    {:else}\n      <span class=\"text-white text-lg font-bold select-none\">\n        {avatarInitial()}\n      </span>\n    {/if}\n  </button>\n  {#if menuOpen}\n    <!-- Backdrop overlay for click-outside functionality -->\n    <div \n      class=\"fixed inset-0 z-40 bg-transparent\" \n      onclick={() => menuOpen = false}\n      onkeydown={(e) => e.key === 'Escape' && (menuOpen = false)}\n      role=\"button\"\n      tabindex=\"0\"\n      aria-label=\"Close menu\"\n    ></div>\n    \n    <!-- Dropdown menu -->\n    <div class=\"absolute right-0 top-full mt-2 min-w-[200px] yakkl-dropdown animate-in fade-in z-50\">\n      <!-- Account Info Header -->\n      <div class=\"px-4 py-3 border-b border-zinc-200 dark:border-zinc-700\">\n        <div class=\"flex items-center gap-3\">\n          {#if effectiveAccount.avatar}\n            <img src={effectiveAccount.avatar} alt=\"avatar\" class=\"w-8 h-8 rounded-full object-cover\" />\n          {:else}\n            <div class=\"w-8 h-8 rounded-full bg-indigo-600 flex items-center justify-center text-white font-bold\">\n              {avatarInitial()}\n            </div>\n          {/if}\n          <div class=\"flex-1 min-w-0\">\n            <div class=\"font-medium text-sm truncate\">{displayName()}</div>\n            <div class=\"text-xs text-zinc-500 truncate\">{shortAddr(effectiveAccount.address)}</div>\n            <div class=\"text-xs text-indigo-600 dark:text-indigo-400 capitalize\">{plan} Plan</div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Menu Items -->\n      <div class=\"py-1\">\n        <button class=\"yakkl-dropdown-item flex items-center gap-2\" onclick={() => {menuOpen = false; onManage && onManage();}}>\n          <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n          </svg>\n          Manage Account\n        </button>\n        <button class=\"yakkl-dropdown-item flex items-center gap-2\" onclick={() => {menuOpen = false; onSettings && onSettings();}}>\n          <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n          </svg>\n          Settings\n        </button>\n        <button class=\"yakkl-dropdown-item flex items-center gap-2\" onclick={() => {menuOpen = false; onTheme && onTheme();}}>\n          <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\" />\n          </svg>\n          Toggle Theme\n        </button>\n        <div class=\"border-t border-zinc-200 dark:border-zinc-700 my-1\"></div>\n        <button class=\"yakkl-dropdown-item text-red-600 dark:text-red-400 hover:text-red-700 dark:hover:text-red-300 flex items-center gap-2\" onclick={() => {menuOpen = false; onLogout && onLogout();}}>\n          <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n          </svg>\n          Logout\n        </button>\n      </div>\n    </div>\n  {/if}\n</div>\n","<script lang=\"ts\">\n  import Brand from './Brand.svelte';\n  import NetworkSwitcher from './NetworkSwitcher.svelte';\n  import UserMenu from './UserMenu.svelte';\n\n  let {\n    logo = '/images/logoBullFav32x32.png',\n    link = '/',\n    account = { username: '', address: '', ens: null, avatar: null },\n    selectedChain = null,\n    chains = [],\n    showTestnets = false,\n    onSwitchChain = null,\n    onManageAccount,\n    onSettings,\n    onTheme,\n    onLogout,\n    className = ''\n  } = $props();\n</script>\n\n<header class=\"relative w-full mx-auto flex items-center h-14 bg-white/90 dark:bg-zinc-900/80 border-b border-zinc-100 dark:border-zinc-800 z-50\">\n  <!-- Brand Left -->\n  <div class=\"absolute left-4 top-1/2 -translate-y-1/2\">\n    <a href={link}><Brand logo={logo} /></a>\n  </div>\n\n  <!-- Center: Network Switcher (true center!) -->\n  <div class=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2\">\n    <NetworkSwitcher\n      chains={chains}\n      selectedChain={selectedChain}\n      showTestnets={showTestnets}\n      onSwitch={onSwitchChain}\n      className=\"yakkl-net-switcher\"\n    />\n  </div>\n\n  <!-- UserMenu right -->\n  <div class=\"absolute right-4 top-1/2 -translate-y-1/2\">\n    <UserMenu\n      account={account}\n      onManage={onManageAccount}\n      onSettings={onSettings}\n      onTheme={onTheme}\n      onLogout={onLogout}\n    />\n  </div>\n</header>\n\n","<script lang=\"ts\">\n\timport { VERSION, YEAR } from '$lib/common/constants';\n\timport type { Settings } from '$lib/common';\n\timport { getSettings } from '$lib/common/stores';\n\timport { onMount } from 'svelte';\n\n\tinterface Props {\n\t\tplanType?: string | null;\n\t\tclassName?: string;\n\t}\n\n\tlet { planType = null, className = '' }: Props = $props();\n\n\t/**\n\t * The registered type retrieved from Yakkl settings.\n\t * @type {string}\n\t */\n\tlet registered: string = $state('');\n\n\tonMount(async () => {\n\t\tgetSettings().then(async (result) => {\n\t\t\tconst yakklSettings = result as Settings;\n\t\t\tregistered = yakklSettings.plan.type;\n\t\t});\n\t});\n\n\t// Format plan type for display (remove underscores and capitalize)\n\tfunction formatPlanType(plan: string): string {\n\t\tif (!plan) return '';\n\t\treturn plan\n\t\t\t.replace(/_/g, ' ')\n\t\t\t.split(' ')\n\t\t\t.map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n\t\t\t.join(' ');\n\t}\n\n\t// Get the display plan type\n\tlet displayPlan = $derived(formatPlanType(planType || registered));\n</script>\n\n<div class={`inline-flex items-center gap-2 w-full justify-center text-center ${className}`}>\n\t<!-- Blue highlighted plan type at the beginning -->\n\t{#if displayPlan}\n\t\t<span class=\"inline-flex items-center px-2 py-0.5 rounded-full shadow text-[10px] font-semibold opacity-80\n\t\t\tbg-blue-50 dark:bg-blue-900 text-blue-700 dark:text-blue-200\">\n\t\t\t{displayPlan}\n\t\t</span>\n\t{/if}\n\t\n\t<!-- Copyright text -->\n\t<span class=\"text-[10px] opacity-70 text-gray-400 dark:text-gray-500 select-none\">\n\t\tYAKKL¬Æ ¬©Copyright {YEAR}, Version: {VERSION}\n\t</span>\n</div>","<script lang=\"ts\">\n\timport Copyright from \"./Copyright.svelte\";\n\n  let { planType = 'Pro (Trial)', trialEnds = '2024-07-20', appName = 'YAKKL', className = '' } = $props();\n</script>\n\n<footer class={`yakkl-footer ${className}`}>\n  <Copyright {planType} />\n</footer>\n","<!--\n  UpgradeBanner - Shows upgrade prompts for trial users or basic plan users\n-->\n\n<script lang=\"ts\">\n  import { currentPlan, isOnTrial, planStore } from '../stores/plan.store';\n  import { PlanType } from '../types';\n  import Upgrade from './Upgrade.svelte';\n\n  let { \n    showOnBasic = true,\n    showOnTrial = true,\n    className = '',\n    position = 'top', // 'top', 'bottom', 'inline'\n    autoShowInterval = 300000, // 5 minutes in ms\n    fadeDuration = 10000 // 10 seconds to show\n  } = $props();\n\n  let plan = $derived($currentPlan);\n  let trial = $derived($isOnTrial);\n  let showUpgrade = $state(false);\n  let dismissed = $state(false);\n  let autoVisible = $state(false);\n  let autoTimer: number | null = null;\n  let fadeTimer: number | null = null;\n  let isAnimating = $state(false);\n  let hasInitialized = false;\n  \n  // Check dismissal immediately on component creation\n  const initialDismissalData = typeof window !== 'undefined' ? localStorage.getItem('yakkl:upgrade-banner-dismissed') : null;\n  if (initialDismissalData) {\n    try {\n      const data = JSON.parse(initialDismissalData);\n      dismissed = true; // Set immediately to prevent flash\n    } catch (e) {\n      dismissed = true; // Set immediately to prevent flash\n    }\n  }\n  \n  // Constants for easy configuration\n  const AUTO_SHOW_INTERVAL = autoShowInterval; // 5 minutes\n  const FADE_DURATION = fadeDuration; // 10 seconds\n\n  // Calculate trial days remaining\n  let trialDaysLeft = $derived(() => {\n    if (!trial || !$planStore.plan.trialEndsAt) return 0;\n    const now = new Date();\n    const trialEnd = new Date($planStore.plan.trialEndsAt);\n    const diffTime = trialEnd.getTime() - now.getTime();\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    return Math.max(0, diffDays);\n  });\n\n  // Determine if banner should show\n  let shouldShow = $derived(() => {\n    // If dismissed, only show if auto-triggered\n    if (dismissed) {\n      return autoVisible;\n    }\n    \n    // Not dismissed, check if should show based on plan\n    if (trial && showOnTrial && trialDaysLeft <= 7) return true; // Show in last 7 days\n    if (plan === PlanType.Basic && showOnBasic) return true;\n    \n    return false;\n  });\n\n  function getBannerMessage() {\n    if (trial) {\n      if (trialDaysLeft <= 0) {\n        return 'Your trial has expired. Upgrade to continue using Pro features.';\n      } else if (trialDaysLeft === 1) {\n        return 'Your trial expires tomorrow. Upgrade to keep Pro features.';\n      } else {\n        return `Your trial expires in ${trialDaysLeft} days. Upgrade to keep Pro features.`;\n      }\n    } else {\n      return 'Upgrade to Pro to unlock advanced features and enhanced security.';\n    }\n  }\n\n  function getBannerType() {\n    if (trial && trialDaysLeft <= 1) return 'urgent';\n    if (trial && trialDaysLeft <= 3) return 'warning';\n    return 'info';\n  }\n\n  function getBannerColors() {\n    const type = getBannerType();\n    switch (type) {\n      case 'urgent':\n        return 'bg-red-50 dark:bg-red-900/20 border-red-200 dark:border-red-800 text-red-800 dark:text-red-200';\n      case 'warning':\n        return 'bg-yellow-50 dark:bg-yellow-900/20 border-yellow-200 dark:border-yellow-800 text-yellow-800 dark:text-yellow-200';\n      default:\n        return 'bg-indigo-50 dark:bg-indigo-900/20 border-indigo-200 dark:border-indigo-800 text-indigo-800 dark:text-indigo-200';\n    }\n  }\n\n  function handleUpgrade() {\n    showUpgrade = true;\n  }\n\n  function handleDismiss() {\n    console.log('UpgradeBanner: Dismissing banner');\n    isAnimating = true;\n    autoVisible = false;\n    dismissed = true;\n    \n    // Clear any active timers\n    clearAutoTimers();\n    \n    // Immediately store dismissal in localStorage with more permanent flag\n    const dismissalData = {\n      timestamp: Date.now(),\n      dismissCount: (parseInt(localStorage.getItem('yakkl:upgrade-banner-dismiss-count') || '0') + 1)\n    };\n    localStorage.setItem('yakkl:upgrade-banner-dismissed', JSON.stringify(dismissalData));\n    localStorage.setItem('yakkl:upgrade-banner-dismiss-count', dismissalData.dismissCount.toString());\n    \n    console.log('UpgradeBanner: Saved dismissal data:', dismissalData);\n    \n    setTimeout(() => {\n      isAnimating = false;\n    }, 300); // Wait for animation to complete\n  }\n\n  function onUpgradeComplete() {\n    showUpgrade = false;\n    dismissed = true;\n    autoVisible = false;\n    clearAutoTimers();\n  }\n  \n  function clearAutoTimers() {\n    if (autoTimer) {\n      clearInterval(autoTimer);\n      autoTimer = null;\n    }\n    if (fadeTimer) {\n      clearTimeout(fadeTimer);\n      fadeTimer = null;\n    }\n  }\n  \n  function startAutoShow() {\n    // Only start auto-show for basic users who haven't permanently dismissed\n    if (plan === PlanType.Basic && !dismissed) {\n      autoTimer = setInterval(() => {\n        // Check if user hasn't dismissed and not in upgrade flow\n        if (!dismissed && !showUpgrade && !autoVisible) {\n          // Double-check dismissal status from localStorage\n          const dismissedTime = localStorage.getItem('yakkl:upgrade-banner-dismissed');\n          if (!dismissedTime) {\n            autoVisible = true;\n            \n            // Auto-hide after fade duration\n            fadeTimer = setTimeout(() => {\n              autoVisible = false;\n            }, FADE_DURATION);\n          }\n        }\n      }, AUTO_SHOW_INTERVAL);\n    }\n  }\n\n  // Initialize dismissal status only once\n  $effect(() => {\n    if (!hasInitialized) {\n      hasInitialized = true;\n      \n      const dismissedData = localStorage.getItem('yakkl:upgrade-banner-dismissed');\n      console.log('UpgradeBanner: Checking dismissal status, data:', dismissedData);\n      \n      if (dismissedData) {\n        try {\n          const data = JSON.parse(dismissedData);\n          const dismissedDate = new Date(data.timestamp || parseInt(dismissedData));\n          const now = new Date();\n          const hoursSinceDismissed = Math.floor((now.getTime() - dismissedDate.getTime()) / (1000 * 60 * 60));\n          const dismissCount = data.dismissCount || 1;\n          \n          console.log('UpgradeBanner: Hours since dismissed:', hoursSinceDismissed, 'Dismiss count:', dismissCount);\n          \n          // More aggressive dismissal for users who have dismissed multiple times\n          let resetHours = trial ? 24 : 168; // Default: 24h for trial, 7 days for basic\n          if (dismissCount >= 3) {\n            resetHours = trial ? 168 : 720; // 7 days for trial, 30 days for basic after 3 dismissals\n          }\n          \n          if (hoursSinceDismissed >= resetHours) {\n            console.log('UpgradeBanner: Reset time reached, clearing dismissal');\n            localStorage.removeItem('yakkl:upgrade-banner-dismissed');\n            localStorage.removeItem('yakkl:upgrade-banner-dismiss-count');\n            dismissed = false;\n          } else {\n            console.log('UpgradeBanner: Still within dismissal period, hiding banner');\n            dismissed = true;\n          }\n        } catch (e) {\n          // Handle old format\n          const dismissedDate = new Date(parseInt(dismissedData));\n          const now = new Date();\n          const hoursSinceDismissed = Math.floor((now.getTime() - dismissedDate.getTime()) / (1000 * 60 * 60));\n          const resetHours = trial ? 24 : 168;\n          \n          if (hoursSinceDismissed >= resetHours) {\n            localStorage.removeItem('yakkl:upgrade-banner-dismissed');\n            localStorage.removeItem('yakkl:upgrade-banner-dismiss-count');\n            dismissed = false;\n          } else {\n            dismissed = true;\n          }\n        }\n      }\n      \n      // Start auto-show timer only if not dismissed\n      if (!dismissed) {\n        startAutoShow();\n      }\n    }\n    \n    // Cleanup on unmount\n    return () => {\n      clearAutoTimers();\n    };\n  });\n</script>\n\n{#if typeof window !== 'undefined' && shouldShow}\n  <div \n    class={`upgrade-banner ${className} ${position === 'top' ? 'fixed top-0 left-0 right-0 z-40' : position === 'bottom' ? 'fixed bottom-0 left-0 right-0 z-40' : ''} \n           ${autoVisible ? 'animate-slideDown' : ''} ${isAnimating ? 'animate-slideUp' : ''}`}\n  >\n    <div class={`border-l-4 p-4 ${getBannerColors()} relative`}>\n      <div class=\"flex items-center justify-between\">\n        <div class=\"flex items-center\">\n          <div class=\"flex-shrink-0\">\n            {#if getBannerType() === 'urgent'}\n              <svg class=\"h-5 w-5 text-red-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.5 0L4.232 15.5c-.77.833.192 2.5 1.732 2.5z\" />\n              </svg>\n            {:else if getBannerType() === 'warning'}\n              <svg class=\"h-5 w-5 text-yellow-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n            {:else}\n              <svg class=\"h-5 w-5 text-indigo-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n              </svg>\n            {/if}\n          </div>\n          <div class=\"ml-3\">\n            <p class=\"text-sm font-medium\">\n              {getBannerMessage()}\n            </p>\n          </div>\n        </div>\n        \n        <div class=\"flex items-center space-x-2\">\n          <button\n            onclick={handleUpgrade}\n            class=\"bg-white dark:bg-zinc-800 px-3 py-1.5 rounded-md text-sm font-medium shadow-sm border border-transparent hover:bg-zinc-50 dark:hover:bg-zinc-700 transition-colors\n              {getBannerType() === 'urgent' ? 'text-red-800 dark:text-red-200 hover:text-red-900 dark:hover:text-red-100' :\n               getBannerType() === 'warning' ? 'text-yellow-800 dark:text-yellow-200 hover:text-yellow-900 dark:hover:text-yellow-100' :\n               'text-indigo-800 dark:text-indigo-200 hover:text-indigo-900 dark:hover:text-indigo-100'}\"\n          >\n            {trial ? 'Upgrade Now' : 'Upgrade to Pro'}\n          </button>\n          \n          <button\n            onclick={handleDismiss}\n            class=\"text-zinc-400 hover:text-zinc-600 dark:hover:text-zinc-300\"\n            title=\"Dismiss\"\n            aria-label=\"Dismiss upgrade banner\"\n          >\n            <svg class=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n{/if}\n\n<!-- Upgrade Modal -->\n<Upgrade bind:show={showUpgrade} onComplete={onUpgradeComplete} />\n\n<style>\n  .upgrade-banner {\n    transition: all 0.3s ease-out;\n  }\n  \n  .upgrade-banner.fixed {\n    transition: transform 0.3s ease-out, opacity 0.3s ease-out;\n  }\n  \n  .animate-slideDown {\n    animation: slideDown 0.5s ease-out;\n  }\n  \n  .animate-slideUp {\n    animation: slideUp 0.3s ease-in forwards;\n  }\n  \n  @keyframes slideDown {\n    from {\n      transform: translateY(-100%);\n      opacity: 0;\n    }\n    to {\n      transform: translateY(0);\n      opacity: 1;\n    }\n  }\n  \n  @keyframes slideUp {\n    from {\n      transform: translateY(0);\n      opacity: 1;\n    }\n    to {\n      transform: translateY(-100%);\n      opacity: 0;\n    }\n  }\n  \n  /* Auto-fade animation for non-aggressive showing */\n  .upgrade-banner.auto-show {\n    animation: autoFadeIn 0.8s ease-out, autoFadeOut 0.8s ease-in 9.2s;\n  }\n  \n  @keyframes autoFadeIn {\n    from { opacity: 0; transform: translateY(-20px); }\n    to { opacity: 1; transform: translateY(0); }\n  }\n  \n  @keyframes autoFadeOut {\n    from { opacity: 1; transform: translateY(0); }\n    to { opacity: 0; transform: translateY(-20px); }\n  }\n</style>","<!-- Settings.svelte -->\n<script lang=\"ts\">\n\timport { createForm } from 'svelte-forms-lib';\n\timport * as yup from 'yup';\n\timport Modal from './v1/Modal.svelte';\n\timport { getSettings, setSettings, getProfile, setProfileStorage } from '$lib/common/stores';\n\timport { log } from '$lib/managers/Logger';\n\timport { onMount } from 'svelte';\n\timport type { Settings, Profile } from '$lib/common/interfaces';\n\timport { SystemTheme, PlanType } from '$lib/common/types';\n\n\tinterface Props {\n\t\tshow?: boolean;\n\t\tonClose?: () => void;\n\t\tonComplete?: () => void;\n\t}\n\n\tlet {\n\t\tshow = $bindable(false),\n\t\tonClose = () => (show = false),\n\t\tonComplete = () => {}\n\t}: Props = $props();\n\n\tlet settings: Settings | null = $state(null);\n\tlet profile: Profile | null = $state(null);\n\tlet isLoading = $state(false);\n\tlet isSaving = $state(false);\n\tlet error = $state('');\n\tlet success = $state('');\n\tlet hasChanges = $state(false);\n\n\t// Available options\n\tconst themeOptions = [\n\t\t{ value: SystemTheme.SYSTEM, label: 'System' },\n\t\t{ value: SystemTheme.LIGHT, label: 'Light' },\n\t\t{ value: SystemTheme.DARK, label: 'Dark' }\n\t];\n\n\tconst currencyOptions = [\n\t\t{ value: 'USD', label: 'US Dollar (USD)' },\n\t\t{ value: 'EUR', label: 'Euro (EUR)' },\n\t\t{ value: 'GBP', label: 'British Pound (GBP)' },\n\t\t{ value: 'JPY', label: 'Japanese Yen (JPY)' },\n\t\t{ value: 'CAD', label: 'Canadian Dollar (CAD)' },\n\t\t{ value: 'AUD', label: 'Australian Dollar (AUD)' },\n\t\t{ value: 'CHF', label: 'Swiss Franc (CHF)' },\n\t\t{ value: 'CNY', label: 'Chinese Yuan (CNY)' }\n\t];\n\n\tconst localeOptions = [\n\t\t{ value: 'en-US', label: 'English (US)' },\n\t\t{ value: 'en-GB', label: 'English (UK)' },\n\t\t{ value: 'es-ES', label: 'Spanish' },\n\t\t{ value: 'fr-FR', label: 'French' },\n\t\t{ value: 'de-DE', label: 'German' },\n\t\t{ value: 'it-IT', label: 'Italian' },\n\t\t{ value: 'pt-PT', label: 'Portuguese' },\n\t\t{ value: 'ja-JP', label: 'Japanese' },\n\t\t{ value: 'ko-KR', label: 'Korean' },\n\t\t{ value: 'zh-CN', label: 'Chinese (Simplified)' },\n\t\t{ value: 'zh-TW', label: 'Chinese (Traditional)' }\n\t];\n\n\tconst idleDelayOptions = [\n\t\t{ value: 60, label: '1 minute' },\n\t\t{ value: 300, label: '5 minutes' },\n\t\t{ value: 600, label: '10 minutes' },\n\t\t{ value: 900, label: '15 minutes' },\n\t\t{ value: 1800, label: '30 minutes' },\n\t\t{ value: 3600, label: '1 hour' },\n\t\t{ value: 0, label: 'Never' }\n\t];\n\n\t// Form validation schema\n\tconst validationSchema = yup.object().shape({\n\t\tshowTestNetworks: yup.boolean(),\n\t\ttheme: yup.string().oneOf(Object.values(SystemTheme)),\n\t\tlocale: yup.string().required('Locale is required'),\n\t\tcurrency: yup.string().required('Currency is required'),\n\t\tidleDelayInterval: yup.number().min(0, 'Idle delay must be 0 or positive'),\n\t\tidleAutoLock: yup.boolean(),\n\t\tidleAutoLockCycle: yup.number().min(60, 'Auto-lock cycle must be at least 1 minute'),\n\t\tshowHints: yup.boolean(),\n\t\ttrialCountdownPinned: yup.boolean()\n\t});\n\n\t// Initialize form\n\tconst { form, errors, isValid, touched, updateField } = createForm({\n\t\tinitialValues: {\n\t\t\tshowTestNetworks: false,\n\t\t\ttheme: SystemTheme.SYSTEM,\n\t\t\tlocale: 'en-US',\n\t\t\tcurrency: 'USD',\n\t\t\tidleDelayInterval: 300,\n\t\t\tidleAutoLock: true,\n\t\t\tidleAutoLockCycle: 180,\n\t\t\tshowHints: true,\n\t\t\ttrialCountdownPinned: false\n\t\t},\n\t\tvalidationSchema,\n\t\tonSubmit: async (values) => {\n\t\t\tawait saveSettings(values);\n\t\t}\n\t});\n\n\t// Custom submit handler for Svelte 5\n\tasync function handleFormSubmit(event: Event) {\n\t\tevent.preventDefault();\n\t\t\n\t\t// Validate the form\n\t\tif (!$isValid) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// Call saveSettings directly with form values\n\t\tawait saveSettings($form);\n\t}\n\n\t// Load settings data on mount and when modal opens\n\t$effect(() => {\n\t\tif (show) {\n\t\t\tloadSettingsData();\n\t\t}\n\t});\n\n\t// Track form changes\n\t$effect(() => {\n\t\tif (settings && profile && !isLoading) {\n\t\t\tconst currentValues = $form;\n\t\t\t// Only track changes if form has been properly initialized\n\t\t\tconst originalValues = {\n\t\t\t\tshowTestNetworks: profile.preferences?.showTestNetworks ?? false,\n\t\t\t\ttheme: profile.preferences?.dark ?? SystemTheme.SYSTEM,\n\t\t\t\tlocale: profile.preferences?.locale ?? 'en-US',\n\t\t\t\tcurrency: profile.preferences?.currency?.code ?? 'USD',\n\t\t\t\tidleDelayInterval: profile.preferences?.idleDelayInterval ?? 300,\n\t\t\t\tidleAutoLock: profile.preferences?.idleAutoLock ?? true,\n\t\t\t\tidleAutoLockCycle: profile.preferences?.idleAutoLockCycle ?? 180,\n\t\t\t\tshowHints: settings.showHints ?? true,\n\t\t\t\ttrialCountdownPinned: settings.trialCountdownPinned ?? false\n\t\t\t};\n\n\t\t\thasChanges = \n\t\t\t\tcurrentValues.showTestNetworks !== originalValues.showTestNetworks ||\n\t\t\t\tcurrentValues.theme !== originalValues.theme ||\n\t\t\t\tcurrentValues.locale !== originalValues.locale ||\n\t\t\t\tcurrentValues.currency !== originalValues.currency ||\n\t\t\t\tcurrentValues.idleDelayInterval !== originalValues.idleDelayInterval ||\n\t\t\t\tcurrentValues.idleAutoLock !== originalValues.idleAutoLock ||\n\t\t\t\tcurrentValues.idleAutoLockCycle !== originalValues.idleAutoLockCycle ||\n\t\t\t\tcurrentValues.showHints !== originalValues.showHints ||\n\t\t\t\tcurrentValues.trialCountdownPinned !== originalValues.trialCountdownPinned;\n\t\t} else {\n\t\t\thasChanges = false;\n\t\t}\n\t});\n\n\tasync function loadSettingsData() {\n\t\tisLoading = true;\n\t\terror = '';\n\t\t\n\t\ttry {\n\t\t\t// Load both settings and profile (for preferences)\n\t\t\t[settings, profile] = await Promise.all([\n\t\t\t\tgetSettings(),\n\t\t\t\tgetProfile()\n\t\t\t]);\n\n\t\t\tif (!settings) {\n\t\t\t\terror = 'Settings not found';\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!profile) {\n\t\t\t\terror = 'Profile not found';\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Update form with current settings and preferences\n\t\t\tupdateField('showTestNetworks', profile.preferences?.showTestNetworks ?? false);\n\t\t\tupdateField('theme', profile.preferences?.dark ?? SystemTheme.SYSTEM);\n\t\t\tupdateField('locale', profile.preferences?.locale ?? 'en-US');\n\t\t\tupdateField('currency', profile.preferences?.currency?.code ?? 'USD');\n\t\t\tupdateField('idleDelayInterval', profile.preferences?.idleDelayInterval ?? 300);\n\t\t\tupdateField('idleAutoLock', profile.preferences?.idleAutoLock ?? true);\n\t\t\tupdateField('idleAutoLockCycle', profile.preferences?.idleAutoLockCycle ?? 180);\n\t\t\tupdateField('showHints', settings.showHints ?? true);\n\t\t\tupdateField('trialCountdownPinned', settings.trialCountdownPinned ?? false);\n\n\t\t} catch (e) {\n\t\t\tlog.error('Error loading settings data:', false, e);\n\t\t\terror = 'Failed to load settings data';\n\t\t} finally {\n\t\t\tisLoading = false;\n\t\t}\n\t}\n\n\tasync function saveSettings(values: any) {\n\t\tif (!settings || !profile) {\n\t\t\terror = 'Settings data not loaded';\n\t\t\treturn;\n\t\t}\n\n\t\tisSaving = true;\n\t\terror = '';\n\t\tsuccess = '';\n\n\t\ttry {\n\t\t\t// Update settings\n\t\t\tconst updatedSettings: Settings = {\n\t\t\t\t...settings,\n\t\t\t\tshowHints: values.showHints,\n\t\t\t\ttrialCountdownPinned: values.trialCountdownPinned,\n\t\t\t\tupdateDate: new Date().toISOString()\n\t\t\t};\n\n\t\t\t// Update preferences in profile\n\t\t\tconst updatedProfile: Profile = {\n\t\t\t\t...profile,\n\t\t\t\tpreferences: {\n\t\t\t\t\t...profile.preferences,\n\t\t\t\t\tshowTestNetworks: values.showTestNetworks,\n\t\t\t\t\tdark: values.theme,\n\t\t\t\t\tlocale: values.locale,\n\t\t\t\t\tcurrency: {\n\t\t\t\t\t\t...profile.preferences.currency,\n\t\t\t\t\t\tcode: values.currency\n\t\t\t\t\t},\n\t\t\t\t\tidleDelayInterval: values.idleDelayInterval,\n\t\t\t\t\tidleAutoLock: values.idleAutoLock,\n\t\t\t\t\tidleAutoLockCycle: values.idleAutoLockCycle,\n\t\t\t\t\tupdateDate: new Date().toISOString()\n\t\t\t\t},\n\t\t\t\tupdateDate: new Date().toISOString()\n\t\t\t};\n\n\t\t\t// Save both settings and profile\n\t\t\tawait Promise.all([\n\t\t\t\tsetSettings(updatedSettings),\n\t\t\t\tsetProfileStorage(updatedProfile)\n\t\t\t]);\n\n\t\t\t// Update local references to reflect saved state\n\t\t\tsettings = updatedSettings;\n\t\t\tprofile = updatedProfile;\n\n\t\t\tsuccess = 'Settings updated successfully!';\n\t\t\thasChanges = false;\n\t\t\t\n\t\t\t// Call completion callback\n\t\t\tonComplete();\n\n\t\t\t// Call completion callback\n\t\t\tonComplete();\n\n\t\t\t// Close modal with a small delay to ensure state updates complete\n\t\t\tsetTimeout(() => {\n\t\t\t\tshow = false;\n\t\t\t\tisSaving = false;\n\t\t\t}, 100);\n\n\t\t} catch (e: any) {\n\t\t\tconst errorMsg = 'Failed to save settings changes: ' + e.message;\n\t\t\tlog.error('Error saving settings:', false, e);\n\t\t\terror = errorMsg;\n\t\t\tisSaving = false;\n\t\t}\n\t}\n\n\tfunction handleClose() {\n\t\tif (hasChanges) {\n\t\t\tif (confirm('You have unsaved changes. Are you sure you want to close?')) {\n\t\t\t\tshow = false;\n\t\t\t\tonClose();\n\t\t\t}\n\t\t} else {\n\t\t\tshow = false;\n\t\t\tonClose();\n\t\t}\n\t}\n\n\tfunction resetForm() {\n\t\tif (settings && profile) {\n\t\t\tupdateField('showTestNetworks', profile.preferences?.showTestNetworks ?? false);\n\t\t\tupdateField('theme', profile.preferences?.dark ?? SystemTheme.SYSTEM);\n\t\t\tupdateField('locale', profile.preferences?.locale ?? 'en-US');\n\t\t\tupdateField('currency', profile.preferences?.currency?.code ?? 'USD');\n\t\t\tupdateField('idleDelayInterval', profile.preferences?.idleDelayInterval ?? 300);\n\t\t\tupdateField('idleAutoLock', profile.preferences?.idleAutoLock ?? true);\n\t\t\tupdateField('idleAutoLockCycle', profile.preferences?.idleAutoLockCycle ?? 180);\n\t\t\tupdateField('showHints', settings.showHints ?? true);\n\t\t\tupdateField('trialCountdownPinned', settings.trialCountdownPinned ?? false);\n\t\t}\n\t}\n\n\tfunction getPlanLabel(planType: PlanType): string {\n\t\tswitch (planType) {\n\t\t\tcase PlanType.BASIC_MEMBER:\n\t\t\t\treturn 'Basic Member';\n\t\t\tcase PlanType.YAKKL_PRO:\n\t\t\t\treturn 'YAKKL Pro';\n\t\t\tcase PlanType.YAKKL_PREMIUM:\n\t\t\t\treturn 'YAKKL Premium';\n\t\t\tdefault:\n\t\t\t\treturn 'Unknown';\n\t\t}\n\t}\n</script>\n\n<Modal bind:show title=\"Account Settings\" onClose={handleClose} className=\"max-w-2xl\">\n\t<div class=\"space-y-6 p-6\">\n\t\t{#if isLoading}\n\t\t\t<div class=\"flex items-center justify-center py-8\">\n\t\t\t\t<div class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600\"></div>\n\t\t\t\t<span class=\"ml-2 text-gray-600\">Loading settings...</span>\n\t\t\t</div>\n\t\t{:else}\n\t\t\t<form onsubmit={handleFormSubmit} class=\"space-y-6\">\n\t\t\t\t<!-- Account Information (Read-only) -->\n\t\t\t\t{#if settings && profile}\n\t\t\t\t\t<div class=\"bg-gray-50 p-4 rounded-lg\">\n\t\t\t\t\t\t<h3 class=\"text-lg font-medium text-gray-900 mb-3\">Account Information</h3>\n\t\t\t\t\t\t<div class=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<span class=\"font-medium text-gray-700\">Plan:</span>\n\t\t\t\t\t\t\t\t<span class=\"ml-2 text-gray-600\">{getPlanLabel(settings.plan.type)}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<span class=\"font-medium text-gray-700\">Member since:</span>\n\t\t\t\t\t\t\t\t<span class=\"ml-2 text-gray-600\">{new Date(settings.createDate).toLocaleDateString()}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<span class=\"font-medium text-gray-700\">Profile ID:</span>\n\t\t\t\t\t\t\t\t<span class=\"ml-2 text-gray-600 font-mono text-xs\">{settings.id.substring(0, 8)}...</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<span class=\"font-medium text-gray-700\">Version:</span>\n\t\t\t\t\t\t\t\t<span class=\"ml-2 text-gray-600\">{settings.version}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\n\t\t\t\t<!-- Display & Theme Settings -->\n\t\t\t\t<div>\n\t\t\t\t\t<h3 class=\"text-lg font-medium text-gray-900 mb-4\">Display & Theme</h3>\n\t\t\t\t\t<div class=\"space-y-4\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label for=\"theme\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n\t\t\t\t\t\t\t\tTheme\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tid=\"theme\"\n\t\t\t\t\t\t\t\tbind:value={$form.theme}\n\t\t\t\t\t\t\t\tclass=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{#each themeOptions as option}\n\t\t\t\t\t\t\t\t\t<option value={option.value}>{option.label}</option>\n\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"flex items-center\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"showTestNetworks\"\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tbind:checked={$form.showTestNetworks}\n\t\t\t\t\t\t\t\tclass=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label for=\"showTestNetworks\" class=\"ml-2 block text-sm text-gray-900\">\n\t\t\t\t\t\t\t\tShow test networks\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"flex items-center\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"showHints\"\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tbind:checked={$form.showHints}\n\t\t\t\t\t\t\t\tclass=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label for=\"showHints\" class=\"ml-2 block text-sm text-gray-900\">\n\t\t\t\t\t\t\t\tShow helpful hints and tips\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Localization Settings -->\n\t\t\t\t<div>\n\t\t\t\t\t<h3 class=\"text-lg font-medium text-gray-900 mb-4\">Localization</h3>\n\t\t\t\t\t<div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label for=\"locale\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n\t\t\t\t\t\t\t\tLanguage <span class=\"text-red-500\">*</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tid=\"locale\"\n\t\t\t\t\t\t\t\tbind:value={$form.locale}\n\t\t\t\t\t\t\t\tclass=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n\t\t\t\t\t\t\t\tclass:border-red-500={$errors.locale && $touched.locale}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{#each localeOptions as option}\n\t\t\t\t\t\t\t\t\t<option value={option.value}>{option.label}</option>\n\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t{#if $errors.locale && $touched.locale}\n\t\t\t\t\t\t\t\t<p class=\"mt-1 text-sm text-red-600\">{$errors.locale}</p>\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label for=\"currency\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n\t\t\t\t\t\t\t\tCurrency <span class=\"text-red-500\">*</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tid=\"currency\"\n\t\t\t\t\t\t\t\tbind:value={$form.currency}\n\t\t\t\t\t\t\t\tclass=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n\t\t\t\t\t\t\t\tclass:border-red-500={$errors.currency && $touched.currency}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{#each currencyOptions as option}\n\t\t\t\t\t\t\t\t\t<option value={option.value}>{option.label}</option>\n\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t{#if $errors.currency && $touched.currency}\n\t\t\t\t\t\t\t\t<p class=\"mt-1 text-sm text-red-600\">{$errors.currency}</p>\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Security Settings -->\n\t\t\t\t<div>\n\t\t\t\t\t<h3 class=\"text-lg font-medium text-gray-900 mb-4\">Security & Privacy</h3>\n\t\t\t\t\t<div class=\"space-y-4\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label for=\"idleDelayInterval\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n\t\t\t\t\t\t\t\tAuto-lock after idle time\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tid=\"idleDelayInterval\"\n\t\t\t\t\t\t\t\tbind:value={$form.idleDelayInterval}\n\t\t\t\t\t\t\t\tclass=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{#each idleDelayOptions as option}\n\t\t\t\t\t\t\t\t\t<option value={option.value}>{option.label}</option>\n\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t<p class=\"mt-1 text-sm text-gray-500\">\n\t\t\t\t\t\t\t\tAutomatically lock the wallet after the specified time of inactivity\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"flex items-center\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"idleAutoLock\"\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tbind:checked={$form.idleAutoLock}\n\t\t\t\t\t\t\t\tclass=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label for=\"idleAutoLock\" class=\"ml-2 block text-sm text-gray-900\">\n\t\t\t\t\t\t\t\tEnable automatic idle lock\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{#if $form.idleAutoLock}\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<label for=\"idleAutoLockCycle\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n\t\t\t\t\t\t\t\t\tAuto-lock cycle (seconds)\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid=\"idleAutoLockCycle\"\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tbind:value={$form.idleAutoLockCycle}\n\t\t\t\t\t\t\t\t\tmin=\"60\"\n\t\t\t\t\t\t\t\t\tmax=\"3600\"\n\t\t\t\t\t\t\t\t\tstep=\"60\"\n\t\t\t\t\t\t\t\t\tclass=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n\t\t\t\t\t\t\t\t\tclass:border-red-500={$errors.idleAutoLockCycle && $touched.idleAutoLockCycle}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{#if $errors.idleAutoLockCycle && $touched.idleAutoLockCycle}\n\t\t\t\t\t\t\t\t\t<p class=\"mt-1 text-sm text-red-600\">{$errors.idleAutoLockCycle}</p>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t<p class=\"mt-1 text-sm text-gray-500\">\n\t\t\t\t\t\t\t\t\tHow often to check for idle activity (minimum 60 seconds)\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Trial Settings (if applicable) -->\n\t\t\t\t{#if settings?.plan?.trialEndDate}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h3 class=\"text-lg font-medium text-gray-900 mb-4\">Trial Settings</h3>\n\t\t\t\t\t\t<div class=\"flex items-center\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"trialCountdownPinned\"\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tbind:checked={$form.trialCountdownPinned}\n\t\t\t\t\t\t\t\tclass=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label for=\"trialCountdownPinned\" class=\"ml-2 block text-sm text-gray-900\">\n\t\t\t\t\t\t\t\tPin trial countdown to top of interface\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\n\t\t\t\t<!-- Status Messages -->\n\t\t\t\t{#if error}\n\t\t\t\t\t<div class=\"rounded-md bg-red-50 p-4\">\n\t\t\t\t\t\t<p class=\"text-sm font-medium text-red-800\">{error}</p>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\n\t\t\t\t{#if success}\n\t\t\t\t\t<div class=\"rounded-md bg-green-50 p-4\">\n\t\t\t\t\t\t<p class=\"text-sm font-medium text-green-800\">{success}</p>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\n\t\t\t\t<!-- Form Actions -->\n\t\t\t\t<div class=\"flex justify-between pt-5\">\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tonclick={resetForm}\n\t\t\t\t\t\tclass=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n\t\t\t\t\t\tdisabled={!hasChanges || isSaving}\n\t\t\t\t\t>\n\t\t\t\t\t\tReset\n\t\t\t\t\t</button>\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"flex space-x-3\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tonclick={handleClose}\n\t\t\t\t\t\t\tclass=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n\t\t\t\t\t\t\tdisabled={isSaving}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tclass=\"px-4 py-2 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n\t\t\t\t\t\t\tdisabled={!$isValid || !hasChanges || isSaving}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{#if isSaving}\n\t\t\t\t\t\t\t\t<span class=\"flex items-center\">\n\t\t\t\t\t\t\t\t\t<div class=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n\t\t\t\t\t\t\t\t\tSaving...\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\tSave Changes\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Last Updated Info -->\n\t\t\t\t{#if settings?.updateDate}\n\t\t\t\t\t<div class=\"text-xs text-gray-500 text-center pt-2 border-t\">\n\t\t\t\t\t\tLast updated: {new Date(settings.updateDate).toLocaleString()}\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t</form>\n\t\t{/if}\n\t</div>\n</Modal>","<script lang=\"ts\">\n\tconst props = $props<{\n\t\tuserName?: string;\n\t\turl?: string;\n\t\tclassName?: string;\n\t\tariaLabel?: string;\n\t}>();\n\n\tconst initial = props.userName?.charAt(0)?.toUpperCase() ?? '?';\n\n\t// Default styles (can be extended or overridden by props.className)\n\tconst defaultClasses =\n\t\t'w-10 h-10 rounded-full ring-2 ring-offset-1 flex items-center justify-center text-sm font-bold uppercase bg-primary-300 text-base-content';\n</script>\n\n{#if props.url}\n\t<img\n\t\tsrc={props.url}\n\t\talt={props.ariaLabel ?? 'User avatar'}\n\t\tclass={`object-cover ${props.className ?? defaultClasses}`}\n\t\tloading=\"lazy\"\n\t/>\n{:else}\n\t<div\n\t\tclass={props.className ?? defaultClasses}\n\t\taria-label={props.ariaLabel ?? 'User avatar'}\n\t\trole=\"img\"\n\t>\n\t\t{initial}\n\t</div>\n{/if}\n","<script lang=\"ts\">\n\timport Modal from './Modal.svelte';\n\n\tinterface Props {\n\t\tshow: boolean;\n\t\tvalue: string;\n\t\ttitle?: string;\n\t\tclassName?: string;\n\t\tonClose?: () => void;\n\t}\n\n\t// Destructure props correctly\n\tlet {\n\t\tshow = $bindable(false),\n\t\ttitle = 'ERROR!',\n\t\tvalue = 'An error occurred',\n\t\tclassName = 'z-[999]',\n\t\tonClose = $bindable(() => {\n\t\t\tshow = false;\n\t\t})\n\t}: Props = $props();\n</script>\n\n<Modal bind:show {title} {className}>\n\t<div class=\"p-6\">\n\t\t<p class=\"text-sm text-gray-500\">{value}</p>\n\t\t<div class=\"mt-4 flex justify-end\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n\t\t\t\tonclick={onClose}>Close</button\n\t\t\t>\n\t\t</div>\n\t</div>\n</Modal>\n","<!-- Profile.svelte -->\n<script lang=\"ts\">\n\timport { createForm } from 'svelte-forms-lib';\n\timport * as yup from 'yup';\n\timport Modal from './v1/Modal.svelte';\n\timport Avatar from './v1/Avatar.svelte';\n\timport ErrorNoAction from './v1/ErrorNoAction.svelte';\n\timport { getProfile, setProfileStorage, yakklMiscStore } from '$lib/common/stores';\n\timport { log } from '$lib/common/logger-wrapper';\n\timport type { Profile, ProfileData } from '$lib/common/interfaces';\n\timport { decryptData, encryptData } from '$lib/common/encryption';\n\timport { isEncryptedData } from '$lib/common/misc';\n\timport { identicon } from '$lib/utilities';\n\n\tinterface Props {\n\t\tshow?: boolean;\n\t\tonClose?: () => void;\n\t\tonComplete?: () => void;\n\t}\n\n\tlet {\n\t\tshow = $bindable(false),\n\t\tonClose = () => (show = false),\n\t\tonComplete = () => {}\n\t}: Props = $props();\n\n\tlet profile: Profile | null = $state(null);\n\tlet profileData: ProfileData | null = $state(null);\n\tlet isLoading = $state(false);\n\tlet isSaving = $state(false);\n\tlet error = $state('');\n\tlet success = $state('');\n\tlet previewAvatarUrl = $state('');\n\tlet hasChanges = $state(false);\n\tlet showError = $state(false);\n\tlet errorValue = $state('');\n\n\t// Form validation schema\n\tconst validationSchema = yup.object().shape({\n\t\tuserName: yup\n\t\t\t.string()\n\t\t\t.required('Username is required')\n\t\t\t.min(3, 'Username must be at least 3 characters')\n\t\t\t.max(30, 'Username must be less than 30 characters')\n\t\t\t.matches(/^[a-zA-Z0-9_-]+$/, 'Username can only contain letters, numbers, underscores, and dashes'),\n\t\tfirstName: yup\n\t\t\t.string()\n\t\t\t.required('First name is required')\n\t\t\t.min(1, 'First name is required')\n\t\t\t.max(50, 'First name must be less than 50 characters'),\n\t\tlastName: yup\n\t\t\t.string()\n\t\t\t.required('Last name is required')\n\t\t\t.min(1, 'Last name is required')\n\t\t\t.max(50, 'Last name must be less than 50 characters'),\n\t\temail: yup\n\t\t\t.string()\n\t\t\t.email('Must be a valid email address')\n\t\t\t.required('Email address is required'),\n\t\tbio: yup\n\t\t\t.string()\n\t\t\t.max(500, 'Bio must be less than 500 characters')\n\t\t\t.optional(),\n\t\twebsite: yup\n\t\t\t.string()\n\t\t\t.url('Must be a valid URL')\n\t\t\t.optional()\n\t\t\t.nullable()\n\t\t\t.transform((value) => (value === '' ? null : value)),\n\t\tavatarUrl: yup\n\t\t\t.string()\n\t\t\t.url('Must be a valid URL')\n\t\t\t.optional()\n\t\t\t.nullable()\n\t\t\t.transform((value) => (value === '' ? null : value))\n\t});\n\n\t// Initialize form\n\tconst { form, errors, isValid, touched, updateField } = createForm({\n\t\tinitialValues: {\n\t\t\tuserName: '',\n\t\t\tfirstName: '',\n\t\t\tlastName: '',\n\t\t\temail: '',\n\t\t\tbio: '',\n\t\t\twebsite: '',\n\t\t\tavatarUrl: ''\n\t\t},\n\t\tvalidationSchema,\n\t\tonSubmit: async (values) => {\n\t\t\tawait saveProfile(values);\n\t\t}\n\t});\n\n\t// Custom submit handler for Svelte 5\n\tasync function handleFormSubmit(event: Event) {\n\t\tevent.preventDefault();\n\t\t\n\t\t// Validate the form\n\t\tif (!$isValid) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// Call saveProfile directly with form values\n\t\tawait saveProfile($form);\n\t}\n\n\t// Load profile data on mount and when modal opens\n\t$effect(() => {\n\t\tif (show) {\n\t\t\tloadProfileData();\n\t\t}\n\t});\n\n\t// Track form changes\n\t$effect(() => {\n\t\tif (profile && profileData && !isLoading) {\n\t\t\tconst currentValues = $form;\n\t\t\t// Only track changes if form has been properly initialized\n\t\t\tconst originalValues = {\n\t\t\t\tuserName: profile.userName || '',\n\t\t\t\tfirstName: profileData.name?.first || '',\n\t\t\t\tlastName: profileData.name?.last || '',\n\t\t\t\temail: profileData.email || '',\n\t\t\t\tbio: profileData?.bio as string || '',\n\t\t\t\twebsite: profileData?.website as string || '',\n\t\t\t\tavatarUrl: profileData?.avatarUrl as string || ''\n\t\t\t};\n\n\t\t\thasChanges =\n\t\t\t\tcurrentValues.userName !== originalValues.userName ||\n\t\t\t\tcurrentValues.firstName !== originalValues.firstName ||\n\t\t\t\tcurrentValues.lastName !== originalValues.lastName ||\n\t\t\t\tcurrentValues.email !== originalValues.email ||\n\t\t\t\tcurrentValues.bio !== originalValues.bio ||\n\t\t\t\tcurrentValues.website !== originalValues.website ||\n\t\t\t\tcurrentValues.avatarUrl !== originalValues.avatarUrl;\n\n\t\t} else {\n\t\t\thasChanges = false;\n\t\t}\n\t});\n\n\t// Update preview avatar when URL changes\n\t$effect(() => {\n\t\tconst avatarUrl = $form.avatarUrl;\n\t\tif (avatarUrl && avatarUrl.trim() !== '') {\n\t\t\tpreviewAvatarUrl = avatarUrl;\n\t\t} else {\n\t\t\tpreviewAvatarUrl = profileData?.avatarUrl as string || identicon(profile?.userName || 'default');\n\t\t}\n\t});\n\n\tasync function loadProfileData() {\n\t\tisLoading = true;\n\t\terror = '';\n\n\t\ttry {\n\t\t\tprofile = await getProfile();\n\t\t\tif (!profile) {\n\t\t\t\terror = 'Profile not found';\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Decrypt profile data if encrypted\n\t\t\tif (isEncryptedData(profile.data)) {\n\t\t\t\tconst miscStore = $yakklMiscStore;\n\t\t\t\tif (!miscStore) {\n\t\t\t\t\terror = 'Unable to decrypt profile data';\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tprofileData = await decryptData(profile.data, miscStore) as ProfileData;\n\t\t\t} else {\n\t\t\t\tprofileData = profile.data as ProfileData;\n\t\t\t}\n\n\t\t\t// Update form with profile data\n\t\t\tupdateField('userName', profile.userName || '');\n\t\t\tupdateField('firstName', profileData.name?.first || '');\n\t\t\tupdateField('lastName', profileData.name?.last || '');\n\t\t\tupdateField('email', profileData.email || '');\n\t\t\tupdateField('bio', profileData?.bio as string || '');\n\t\t\tupdateField('website', profileData?.website as string || '');\n\t\t\tupdateField('avatarUrl', profileData?.avatarUrl as string || '');\n\n\t\t} catch (e) {\n\t\t\tlog.error('Error loading profile data:', false, e);\n\t\t\terror = 'Failed to load profile data';\n\t\t} finally {\n\t\t\tisLoading = false;\n\t\t}\n\t}\n\n\tasync function saveProfile(values: any) {\n\n\t\tif (!profile || !profileData) {\n\t\t\terror = 'Profile data not loaded';\n\t\t\treturn;\n\t\t}\n\n\t\tisSaving = true;\n\t\terror = '';\n\t\tsuccess = '';\n\n\t\ttry {\n\t\t\tlog.info('[Profile] Starting save with values:', false, values);\n\t\t\tlog.info('[Profile] Current state:', false, {\n\t\t\t\tprofile: !!profile,\n\t\t\t\tprofileData: !!profileData,\n\t\t\t\tmiscStore: !!$yakklMiscStore\n\t\t\t});\n\n\t\t\t// Check if we can encrypt before proceeding\n\t\t\tconst miscStore = $yakklMiscStore;\n\t\t\tif (!miscStore) {\n\t\t\t\tconst errorMsg = 'Unable to encrypt profile data - missing encryption key';\n\t\t\t\tlog.error('[Profile] ' + errorMsg, false);\n\t\t\t\terror = errorMsg;\n\t\t\t\terrorValue = errorMsg;\n\t\t\t\tshowError = true;\n\t\t\t\tisSaving = false;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Update profile data\n\t\t\tconst updatedProfileData: ProfileData = {\n\t\t\t\t...profileData,\n\t\t\t\tname: {\n\t\t\t\t\tid: profile.id,\n\t\t\t\t\tpersona: profile.persona,\n\t\t\t\t\tfirst: values.firstName || '',\n\t\t\t\t\tlast: values.lastName || ''\n\t\t\t\t},\n\t\t\t\temail: values.email || '',\n\t\t\t\tbio: values.bio || '',\n\t\t\t\twebsite: values.website || '',\n\t\t\t\tavatarUrl: values.avatarUrl || ''\n\t\t\t};\n\n\t\t\tlog.info('[Profile] Created updated profile data:', false, updatedProfileData);\n\n\t\t\t// Update profile\n\t\t\tconst updatedProfile: Profile = {\n\t\t\t\t...profile,\n\t\t\t\tuserName: values.userName,\n\t\t\t\tdata: updatedProfileData,\n\t\t\t\tupdateDate: new Date().toISOString()\n\t\t\t};\n\n\t\t\tlog.info('[Profile] Created updated profile:', false, {\n\t\t\t\tuserName: updatedProfile.userName,\n\t\t\t\tupdateDate: updatedProfile.updateDate\n\t\t\t});\n\n\t\t\t// Encrypt the data\n\t\t\tlog.info('[Profile] Starting encryption...');\n\t\t\ttry {\n\t\t\t\tupdatedProfile.data = await encryptData(updatedProfileData, miscStore);\n\t\t\t\tlog.info('[Profile] Encryption successful');\n\t\t\t} catch (encryptError: any) {\n\t\t\t\tconst errorMsg = 'Failed to encrypt profile data: ' + encryptError.message;\n\t\t\t\tlog.error('[Profile] Encryption failed:', false, encryptError);\n\t\t\t\terror = errorMsg;\n\t\t\t\terrorValue = errorMsg;\n\t\t\t\tshowError = true;\n\t\t\t\tisSaving = false;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Save to storage\n\t\t\tlog.info('[Profile] Starting storage save...');\n\t\t\ttry {\n\t\t\t\tawait setProfileStorage(updatedProfile);\n\t\t\t\tlog.info('[Profile] Storage save successful');\n\t\t\t} catch (saveError: any) {\n\t\t\t\tconst errorMsg = 'Failed to save profile to storage: ' + saveError.message;\n\t\t\t\tlog.error('[Profile] Storage failed:', false, saveError);\n\t\t\t\terror = errorMsg;\n\t\t\t\terrorValue = errorMsg;\n\t\t\t\tshowError = true;\n\t\t\t\tisSaving = false;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Update the local profile and profileData references to reflect saved state\n\t\t\t// Keep profile.data unencrypted for local comparison purposes\n\t\t\tprofile = {\n\t\t\t\t...updatedProfile,\n\t\t\t\tdata: updatedProfileData\n\t\t\t};\n\t\t\tprofileData = updatedProfileData;\n\n\t\t\tsuccess = 'Profile updated successfully!';\n\t\t\thasChanges = false;\n\n\t\t\tlog.info('[Profile] Profile saved successfully, state updated:', false, {\n\t\t\t\thasChanges,\n\t\t\t\tprofile: profile.userName,\n\t\t\t\tprofileData: profileData.name\n\t\t\t});\n\n\t\t\t// Call completion callback\n\t\t\tonComplete();\n\n\t\t\t// Close modal with a small delay to ensure state updates complete\n\t\t\tlog.info('[Profile] Preparing to close modal after successful save');\n\t\t\t\n\t\t\t// Use setTimeout to ensure state updates are complete\n\t\t\tsetTimeout(() => {\n\t\t\t\tshow = false;\n\t\t\t\tisSaving = false;\n\t\t\t}, 100);\n\n\t\t} catch (e: any) {\n\t\t\tconst errorMsg = 'Failed to save profile changes: ' + e.message;\n\t\t\tlog.error('[Profile] Unexpected error saving profile:', false, e);\n\t\t\terror = errorMsg;\n\t\t\terrorValue = errorMsg;\n\t\t\tshowError = true;\n\t\t\tisSaving = false;\n\t\t}\n\t}\n\n\tfunction handleClose() {\n\t\tif (hasChanges) {\n\t\t\tif (confirm('You have unsaved changes. Are you sure you want to close?')) {\n\t\t\t\tshow = false;\n\t\t\t\tonClose();\n\t\t\t}\n\t\t} else {\n\t\t\tshow = false;\n\t\t\tonClose();\n\t\t}\n\t}\n\n\tfunction resetForm() {\n\t\tif (profile && profileData) {\n\t\t\tupdateField('userName', profile.userName || '');\n\t\t\tupdateField('firstName', profileData.name?.first || '');\n\t\t\tupdateField('lastName', profileData.name?.last || '');\n\t\t\tupdateField('email', profileData.email || '');\n\t\t\tupdateField('bio', profileData?.bio as string || '');\n\t\t\tupdateField('website', profileData?.website as string || '');\n\t\t\tupdateField('avatarUrl', profileData?.avatarUrl as string || '');\n\t\t}\n\t}\n\n\tfunction handleErrorClose() {\n\t\tshowError = false;\n\t\terror = '';\n\t\terrorValue = '';\n\t}\n</script>\n\n<Modal bind:show title=\"Profile\" onClose={handleClose} className=\"max-w-2xl\">\n\t<div class=\"space-y-6 p-6\">\n\t\t{#if isLoading}\n\t\t\t<div class=\"flex items-center justify-center py-8\">\n\t\t\t\t<div class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600\"></div>\n\t\t\t\t<span class=\"ml-2 text-gray-600\">Loading profile...</span>\n\t\t\t</div>\n\t\t{:else}\n\t\t\t<form onsubmit={handleFormSubmit} class=\"space-y-6\">\n\t\t\t\t<!-- Avatar Section -->\n\t\t\t\t<div class=\"flex flex-col items-center space-y-4\">\n\t\t\t\t\t<div class=\"text-center\">\n\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\turl={previewAvatarUrl}\n\t\t\t\t\t\t\tuserName={$form.firstName || $form.userName}\n\t\t\t\t\t\t\tclassName=\"w-24 h-24 rounded-full ring-4 ring-offset-2 ring-indigo-500\"\n\t\t\t\t\t\t\tariaLabel=\"Profile Avatar\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"w-full\">\n\t\t\t\t\t\t<label for=\"avatarUrl\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n\t\t\t\t\t\t\tAvatar URL (optional)\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"avatarUrl\"\n\t\t\t\t\t\t\ttype=\"url\"\n\t\t\t\t\t\t\tbind:value={$form.avatarUrl}\n\t\t\t\t\t\t\tplaceholder=\"https://example.com/your-avatar.jpg\"\n\t\t\t\t\t\t\tclass=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n\t\t\t\t\t\t\tclass:border-red-500={$errors.avatarUrl && $touched.avatarUrl}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{#if $errors.avatarUrl && $touched.avatarUrl}\n\t\t\t\t\t\t\t<p class=\"mt-1 text-sm text-red-600\">{$errors.avatarUrl}</p>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Basic Information -->\n\t\t\t\t<div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label for=\"userName\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n\t\t\t\t\t\t\tUsername <span class=\"text-red-500\">*</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"userName\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tbind:value={$form.userName}\n\t\t\t\t\t\t\tplaceholder=\"your_username\"\n\t\t\t\t\t\t\tclass=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n\t\t\t\t\t\t\tclass:border-red-500={$errors.userName && $touched.userName}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{#if $errors.userName && $touched.userName}\n\t\t\t\t\t\t\t<p class=\"mt-1 text-sm text-red-600\">{$errors.userName}</p>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label for=\"email\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n\t\t\t\t\t\t\tEmail <span class=\"text-red-500\">*</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\tbind:value={$form.email}\n\t\t\t\t\t\t\tplaceholder=\"your@email.com\"\n\t\t\t\t\t\t\tclass=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n\t\t\t\t\t\t\tclass:border-red-500={$errors.email && $touched.email}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{#if $errors.email && $touched.email}\n\t\t\t\t\t\t\t<p class=\"mt-1 text-sm text-red-600\">{$errors.email}</p>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label for=\"firstName\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n\t\t\t\t\t\t\tFirst Name <span class=\"text-red-500\">*</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"firstName\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tbind:value={$form.firstName}\n\t\t\t\t\t\t\tplaceholder=\"John\"\n\t\t\t\t\t\t\tclass=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n\t\t\t\t\t\t\tclass:border-red-500={$errors.firstName && $touched.firstName}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{#if $errors.firstName && $touched.firstName}\n\t\t\t\t\t\t\t<p class=\"mt-1 text-sm text-red-600\">{$errors.firstName}</p>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label for=\"lastName\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n\t\t\t\t\t\t\tLast Name <span class=\"text-red-500\">*</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"lastName\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tbind:value={$form.lastName}\n\t\t\t\t\t\t\tplaceholder=\"Doe\"\n\t\t\t\t\t\t\tclass=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n\t\t\t\t\t\t\tclass:border-red-500={$errors.lastName && $touched.lastName}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{#if $errors.lastName && $touched.lastName}\n\t\t\t\t\t\t\t<p class=\"mt-1 text-sm text-red-600\">{$errors.lastName}</p>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Optional Fields -->\n\t\t\t\t<div>\n\t\t\t\t\t<label for=\"website\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n\t\t\t\t\t\tWebsite (optional)\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"website\"\n\t\t\t\t\t\ttype=\"url\"\n\t\t\t\t\t\tbind:value={$form.website}\n\t\t\t\t\t\tplaceholder=\"https://your-website.com\"\n\t\t\t\t\t\tclass=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n\t\t\t\t\t\tclass:border-red-500={$errors.website && $touched.website}\n\t\t\t\t\t/>\n\t\t\t\t\t{#if $errors.website && $touched.website}\n\t\t\t\t\t\t<p class=\"mt-1 text-sm text-red-600\">{$errors.website}</p>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<label for=\"bio\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n\t\t\t\t\t\tBio (optional)\n\t\t\t\t\t</label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tid=\"bio\"\n\t\t\t\t\t\tbind:value={$form.bio}\n\t\t\t\t\t\trows=\"3\"\n\t\t\t\t\t\tplaceholder=\"Tell us about yourself...\"\n\t\t\t\t\t\tclass=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n\t\t\t\t\t\tclass:border-red-500={$errors.bio && $touched.bio}\n\t\t\t\t\t></textarea>\n\t\t\t\t\t{#if $errors.bio && $touched.bio}\n\t\t\t\t\t\t<p class=\"mt-1 text-sm text-red-600\">{$errors.bio}</p>\n\t\t\t\t\t{/if}\n\t\t\t\t\t<p class=\"mt-1 text-sm text-gray-500\">{($form.bio || '').length}/500 characters</p>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Status Messages -->\n\t\t\t\t{#if error}\n\t\t\t\t\t<div class=\"rounded-md bg-red-50 p-4\">\n\t\t\t\t\t\t<p class=\"text-sm font-medium text-red-800\">{error}</p>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\n\t\t\t\t{#if success}\n\t\t\t\t\t<div class=\"rounded-md bg-green-50 p-4\">\n\t\t\t\t\t\t<p class=\"text-sm font-medium text-green-800\">{success}</p>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\n\t\t\t\t<!-- Form Actions -->\n\t\t\t\t<div class=\"flex justify-between pt-5\">\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tonclick={resetForm}\n\t\t\t\t\t\tclass=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n\t\t\t\t\t\tdisabled={!hasChanges || isSaving}\n\t\t\t\t\t>\n\t\t\t\t\t\tReset\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<div class=\"flex space-x-3\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tonclick={handleClose}\n\t\t\t\t\t\t\tclass=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n\t\t\t\t\t\t\tdisabled={isSaving}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tclass=\"px-4 py-2 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n\t\t\t\t\t\t\tdisabled={!$isValid || !hasChanges || isSaving}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{#if isSaving}\n\t\t\t\t\t\t\t\t<span class=\"flex items-center\">\n\t\t\t\t\t\t\t\t\t<div class=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n\t\t\t\t\t\t\t\t\tSaving...\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\tSave Changes\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Last Updated Info -->\n\t\t\t\t{#if profile?.updateDate}\n\t\t\t\t\t<div class=\"text-xs text-gray-500 text-center pt-2 border-t\">\n\t\t\t\t\t\tLast updated: {new Date(profile.updateDate).toLocaleString()}\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t</form>\n\t\t{/if}\n\t</div>\n</Modal>\n\n<ErrorNoAction\n\tbind:show={showError}\n\tvalue={errorValue}\n\ttitle=\"Profile Save Error\"\n\tonClose={handleErrorClose}\n/>","<!-- ConfirmLogout.svelte -->\n<script lang=\"ts\">\n\timport Modal from '$lib/components/Modal.svelte';\n\n\tinterface Props {\n\t\tshow: boolean;\n\t\ttitle?: string;\n\t\tmessage?: string;\n\t\trejectText?: string;\n\t\tconfirmText?: string;\n\t\tclassName?: string;\n\t\tonConfirm?: (dontShowAgain: boolean) => void;\n\t\tonCancel?: () => void;\n\t}\n\n\tlet {\n\t\tshow = $bindable(false),\n\t\ttitle = 'Confirm Logout',\n\t\tmessage = 'Are you sure you want to logout? This will lock your wallet and you will need to enter your password again.',\n\t\trejectText = 'Cancel',\n\t\tconfirmText = 'Logout',\n\t\tclassName = 'z-[999]',\n\t\tonConfirm = () => {},\n\t\tonCancel = () => {\n\t\t\tshow = false;\n\t\t}\n\t}: Props = $props();\n\n\tlet dontShowAgain = $state(false);\n\n\tfunction handleConfirm() {\n\t\tonConfirm(dontShowAgain);\n\t\tshow = false;\n\t}\n\n\tfunction handleCancel() {\n\t\tonCancel();\n\t\tshow = false;\n\t}\n</script>\n\n<Modal bind:show {title} {className}>\n\t<div class=\"p-6\">\n\t\t<div class=\"flex items-center mb-4\">\n\t\t\t<div class=\"flex-shrink-0\">\n\t\t\t\t<svg class=\"w-8 h-8 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.5 0L4.232 15.5c-.77.833.192 2.5 1.732 2.5z\" />\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t\t<div class=\"ml-3\">\n\t\t\t\t<p class=\"text-sm text-gray-600 dark:text-gray-300\">{message}</p>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<!-- Don't show again checkbox -->\n\t\t<div class=\"mb-4\">\n\t\t\t<label class=\"flex items-center\">\n\t\t\t\t<input \n\t\t\t\t\ttype=\"checkbox\" \n\t\t\t\t\tbind:checked={dontShowAgain}\n\t\t\t\t\tclass=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n\t\t\t\t/>\n\t\t\t\t<span class=\"ml-2 text-sm text-gray-600 dark:text-gray-300\">\n\t\t\t\t\tDon't show this confirmation next time\n\t\t\t\t</span>\n\t\t\t</label>\n\t\t</div>\n\n\t\t<div class=\"flex justify-end space-x-3\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"yakkl-btn-secondary\"\n\t\t\t\tonclick={handleCancel}\n\t\t\t>\n\t\t\t\t{rejectText}\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"px-4 py-2 bg-red-600 hover:bg-red-700 text-white text-sm font-medium rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2\"\n\t\t\t\tonclick={handleConfirm}\n\t\t\t>\n\t\t\t\t{confirmText}\n\t\t\t</button>\n\t\t</div>\n\t</div>\n</Modal>","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import DockLauncher from './lib/components/DockLauncher.svelte';\n  import AIHelpButton from './lib/components/AIHelpButton.svelte';\n  import Header from './lib/components/Header.svelte';\n  import Footer from './lib/components/Footer.svelte';\n  import UpgradeBanner from './lib/components/UpgradeBanner.svelte';\n  import Settings from './lib/components/Settings.svelte';\n  import Profile from './lib/components/Profile.svelte';\n  import ConfirmLogout from './lib/components/ConfirmLogout.svelte';\n  import { accountStore, currentAccount } from './lib/stores/account.store';\n  import { chainStore, currentChain, visibleChains } from './lib/stores/chain.store';\n  import { planStore } from './lib/stores/plan.store';\n  import { canUseFeature } from './lib/stores/plan.store';\n  import { isModalOpen } from './lib/stores/modal.store';\n  \n  interface Props {\n    children?: import('svelte').Snippet;\n  }\n  let { children }: Props = $props();\n\n  // State\n  let loading = $state(true);\n  let showTestnets = $state(false);\n  let showSettings = $state(false);\n  let showProfile = $state(false);\n  let showLogoutConfirm = $state(false);\n\n  // Computed from stores\n  let account = $derived($currentAccount || { address: '', ens: null });\n  let selectedChain = $derived($currentChain);\n  let chains = $derived($visibleChains);\n  let trialEnds = $derived($planStore.plan.trialEndsAt);\n  let planType = $derived($planStore.plan.type);\n  let modalOpen = $derived($isModalOpen);\n\n  // Initialize stores on mount\n  onMount(async () => {\n    loading = true;\n\n    try {\n      // First check if user is authenticated\n      const { getSettings, syncStorageToStore } = await import('$lib/common/stores');\n      const settings = await getSettings();\n\n      if (settings && !settings.isLocked && settings.init) {\n        // User is authenticated, sync all stores from persistent storage\n        console.log('Layout: Syncing stores from persistent storage...');\n        await syncStorageToStore();\n        console.log('Layout: Stores synchronized');\n      }\n\n      // Load preview2 specific data in parallel\n      await Promise.all([\n        accountStore.loadAccounts(),\n        chainStore.loadChains(),\n        planStore.loadPlan()\n      ]);\n    } catch (error) {\n      console.error('Layout: Error initializing stores:', error);\n    }\n\n    loading = false;\n  });\n\n  function handleSwitchChain(chain: any) {\n    chainStore.switchChain(chain.chainId);\n  }\n\n  function handleManageAccount() {\n    showProfile = true;\n  }\n\n  function handleSettings() {\n    showSettings = true;\n  }\n\n  function handleTheme() {\n    // Toggle theme\n    document.documentElement.classList.toggle('dark');\n  }\n\n  async function handleLogout() {\n    // Check if user has disabled logout confirmation\n    const skipConfirmation = localStorage.getItem('yakkl:skip-logout-confirmation') === 'true';\n\n    if (skipConfirmation) {\n      // Skip confirmation and logout directly\n      await performLogout();\n    } else {\n      // Show confirmation dialog\n      showLogoutConfirm = true;\n    }\n  }\n\n  async function handleLogoutConfirm(dontShowAgain: boolean) {\n    if (dontShowAgain) {\n      // Save the preference to skip confirmation next time\n      localStorage.setItem('yakkl:skip-logout-confirmation', 'true');\n    }\n\n    await performLogout();\n  }\n\n  async function performLogout() {\n    try {\n      // Import all necessary functions\n      const {\n        resetStores,\n        setMiscStore,\n        setYakklTokenDataCustomStorage,\n        yakklTokenDataCustomStore\n      } = await import('$lib/common/stores');\n\n      const { setBadgeText, setIconLock } = await import('$lib/utilities/utilities');\n      const { removeTimers } = await import('$lib/common/timers');\n      const { removeListeners } = await import('$lib/common/listeners');\n      const { setLocks } = await import('$lib/common/locks');\n      const { resetTokenDataStoreValues } = await import('$lib/common/resetTokenDataStoreValues');\n      const { stopActivityTracking } = await import('$lib/common/messaging');\n      const { log } = await import('$lib/common/logger-wrapper');\n      const { get } = await import('svelte/store');\n\n      // Stop activity tracking\n      await stopActivityTracking();\n\n      // Set lock icon and clear badge\n      await setBadgeText('');\n      await setIconLock();\n\n      // Lock the wallet\n      await setLocks(true);\n\n      // Clear session-specific state\n      removeTimers();\n      removeListeners();\n      setMiscStore('');\n      resetTokenDataStoreValues();\n\n      // Zero out values in custom token storage\n      setYakklTokenDataCustomStorage(get(yakklTokenDataCustomStore));\n\n      // Reset all stores\n      resetStores();\n\n      // Reset preview2 specific stores\n      if (accountStore && typeof accountStore.reset === 'function') {\n        accountStore.reset();\n      }\n      if (chainStore && typeof chainStore.reset === 'function') {\n        chainStore.reset();\n      }\n      if (planStore && typeof planStore.reset === 'function') {\n        planStore.reset();\n      } else {\n        console.warn('planStore.reset is not available, skipping plan store reset');\n      }\n\n      // Clear preview2 session marker\n      sessionStorage.removeItem('preview2-authenticated');\n\n      console.log('Preview2: Logout completed successfully');\n\n      // Navigate to login page\n      window.location.href = '/preview2/login';\n\n    } catch (error) {\n      console.error('Preview2: Logout failed:', error);\n      alert('Logout encountered an error. Please try again or refresh the extension.');\n    }\n  }\n</script>\n\n<div class=\"yakkl-body h-screen flex flex-col overflow-hidden\">\n  <!-- Fixed Header -->\n  <Header\n    link=\"/preview2\"\n    account={account}\n    chains={chains}\n    selectedChain={selectedChain}\n    showTestnets={showTestnets}\n    onSwitchChain={handleSwitchChain}\n    onManageAccount={handleManageAccount}\n    onSettings={handleSettings}\n    onTheme={handleTheme}\n    onLogout={handleLogout}\n    className=\"flex-shrink-0\"\n  />\n\n  <!-- Upgrade Banner -->\n  <UpgradeBanner\n    className=\"flex-shrink-0\"\n    position=\"inline\"\n    showOnBasic={true}\n    showOnTrial={true}\n  />\n\n  <!-- Scrollable Content Area -->\n  <main class=\"flex-1 overflow-y-auto overflow-x-hidden\">\n    {#if loading}\n      <div class=\"min-h-full flex items-center justify-center\">\n        <div class=\"text-center\">\n          <div class=\"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600 mx-auto\"></div>\n          <p class=\"mt-4 text-gray-600 dark:text-gray-400\">Loading wallet...</p>\n        </div>\n      </div>\n    {:else}\n      <div class=\"min-h-full pb-16\">\n        {@render children?.()}\n      </div>\n    {/if}\n  </main>\n\n  <!-- Fixed Footer -->\n  <div class=\"flex-shrink-0\">\n    <Footer\n      {planType}\n      trialEnds={trialEnds}\n      appName=\"YAKKL\"\n      className=\"\"\n    />\n  </div>\n\n  <!-- Floating Elements above footer - only show if features are available and no modals open -->\n  {#if !modalOpen}\n    {#if canUseFeature('basic_features')}\n      <DockLauncher className=\"fixed bottom-12 left-4 z-50\" />\n    {/if}\n\n    {#if canUseFeature('ai_assistant')}\n      <AIHelpButton className=\"fixed bottom-12 right-4 z-50\" />\n    {/if}\n  {/if}\n\n  <!-- Settings Modal -->\n  <Settings bind:show={showSettings} />\n\n  <!-- Profile Modal -->\n  <Profile bind:show={showProfile} />\n\n  <!-- Logout Confirmation Modal -->\n  <ConfirmLogout\n    bind:show={showLogoutConfirm}\n    onConfirm={handleLogoutConfirm}\n    onCancel={() => showLogoutConfirm = false}\n  />\n</div>\n\n<style>\n  :global(body) {\n    margin: 0;\n    background-color: #f8fafc;\n  }\n  :global(html.dark body) {\n    background-color: #0e0e11;\n  }\n</style>\n"],"names":["className","$$props","items","href","icon","label","item","each_array","$$index","$$payload","out","$.attr","$.escape","logo","name","isLogoOnly","$.attr_class","chains","selectedChain","showTestnets","onSwitch","storeChains","$.store_get","$$store_subs","visibleChains","storeSelectedChain","currentChain","showTestnetsSetting","effectiveChains","length","filter","chain","isTestnet","key","network","chainId","effectiveSelectedChain","menuOpen","includes","account","username","address","ens","avatar","onManage","onTheme","onSettings","onLogout","storeAccount","currentAccount","plan","currentPlan","effectiveAccount","shortAddr","addr","slice","acc","displayName","avatarInitial","toUpperCase","link","onSwitchChain","onManageAccount","planType","registered","formatPlanType","replace","split","map","word","charAt","toLowerCase","join","displayPlan","YEAR","VERSION","trialEnds","appName","showOnBasic","showOnTrial","position","autoShowInterval","fadeDuration","trial","isOnTrial","showUpgrade","dismissed","autoVisible","initialDismissalData","window","localStorage","getItem","data","JSON","parse","e","trialDaysLeft","planStore","trialEndsAt","now","Date","trialEnd","diffTime","getTime","diffDays","Math","ceil","max","shouldShow","PlanType","Basic","getBannerMessage","getBannerType","getBannerColors","type","onUpgradeComplete","$$value","show","onClose","onComplete","isSaving","error","themeOptions","value","SystemTheme","SYSTEM","LIGHT","DARK","currencyOptions","localeOptions","idleDelayOptions","validationSchema","yup","object","shape","showTestNetworks","boolean","theme","string","oneOf","Object","values","locale","required","currency","idleDelayInterval","number","min","idleAutoLock","idleAutoLockCycle","showHints","trialCountdownPinned","form","errors","isValid","touched","createForm","initialValues","onSubmit","async","saveSettings","handleClose","option","$.maybe_selected","each_array_1","$$index_1","each_array_2","$$index_2","each_array_3","$$index_3","initial","props","userName","defaultClasses","url","ariaLabel","title","previewAvatarUrl","showError","errorValue","matches","firstName","lastName","email","bio","optional","website","nullable","transform","avatarUrl","saveProfile","handleErrorClose","message","rejectText","confirmText","onConfirm","onCancel","dontShowAgain","children","showSettings","showProfile","showLogoutConfirm","modalOpen","isModalOpen","handleSwitchChain","chainStore","switchChain","handleManageAccount","handleSettings","handleTheme","document","documentElement","classList","toggle","handleLogout","skipConfirmation","performLogout","handleLogoutConfirm","setItem","resetStores","setMiscStore","setYakklTokenDataCustomStorage","yakklTokenDataCustomStore","then","n","b3","setBadgeText","setIconLock","removeTimers","import","removeListeners","setLocks","resetTokenDataStoreValues","stopActivityTracking","log","b2","get","accountStore","reset","console","warn","sessionStorage","removeItem","location","alert","canUseFeature"],"mappings":"yzCACQA,UAAY,IAAAC,QAEZ,MAAAC,MAAA,EACFC,KAAM,YAAaC,KAAM,KAAMC,MAAO,SACtCF,KAAM,wBAAyBC,KAAM,KAAMC,MAAO,gBAClDF,KAAM,qBAAsBC,KAAM,MAAOC,MAAO,aAChDF,KAAM,qBAAsBC,KAAM,KAAMC,MAAO,aAC/CF,KAAM,mBAAoBC,KAAM,KAAMC,MAAO,8CAQtCH,2CAJEF,otBAIO,IAAAM,KAAIC,WAAAC,SACTC,UAAAC,KAAA,KAAAC,KAAA,OAAAL,KAAKH,gNAA6KM,UAAAC,KAAA,GAAAE,YAAAN,KAAKF,8eChBhMS,KAAO,+BAAAC,KAAgCA,KAAO,GAAAd,UAAIA,UAAY,YAChE,IAAAe,YAAcD,MAAQA,OAAS,GAGwDL,UAAAC,KAAA,OAAAM,WAAA,iFAAAD,WAAa,oBAAsB,MAAMf,mFAC1Ha,yHACJE,WAAU,uIACMD,+fCHpBG,OAAA,GAAAC,cACAA,cAAgB,KAAAC,aAChBA,aAAe,MAAAC,SACfA,SAAW,KAAApB,UACXA,UAAY,YAIV,IAAAqB,YAAAC,UAAAC,eAAA,CAAA,EAAA,iBAAAC,eACA,IAAAC,mBAAAH,UAAAC,eAAA,CAAA,EAAA,gBAAAG,cACA,IAAAC,oBAA6B,UAG7BC,gBAAiC,KAC/B,GAAAP,YAAYQ,OAAS,EAAG,CACnB,OAAoCR,YAAYS,OAAOC,QAAUA,MAAMC,UAChF,CACI,GAAAf,OAAOY,OAAS,EAAG,CACd,OAAAV,aAAeF,OAASA,OAAOa,OAAOC,QAAUA,MAAMC,UAC/D,SAEIC,IAAK,WAAYnB,KAAM,WAAYoB,QAAS,UAAW9B,KAAM,kBAAmB4B,UAAW,MAAOG,QAAS,IAC3GF,IAAK,cAAenB,KAAM,WAAYoB,QAAS,UAAW9B,KAAM,kBAAmB4B,UAAW,KAAMG,QAAS,WAC7GF,IAAK,WAAYnB,KAAM,SAAUoB,QAAS,UAAW9B,KAAM,kBAAmB4B,UAAW,MAAOG,QAAS,MAC3GL,OAAOC,QAAuCA,MAAMC,gBAGpDI,uBAAwC,IACnCX,oBAAsBP,eAAiBU,gBAAgB,GAG5D,IAAAS,SAAkB,mDAQArC,mKAMLqC,mDAEV,GAAAD,wBAAwBhC,MAAMkC,SAAS,KAAG,iCACnC7B,UAAAC,KAAA,OAAAC,KAAA,MAAAyB,uBAAuBhC,QAAWO,KAAA,MAAAyB,uBAAuBtB,2NAE5CsB,wBAAwBhC,MAAQ,uJAEjCgC,wBAAwBtB,MAAQ,sKACRsB,wBAAwBF,SAAW,wUAE7E,IAAAf,cAAgBQ,sBAAwBS,wBAAwBJ,UAAS,23BCtD/EO,QAAA,CAAYC,SAAU,GAAIC,QAAS,GAAIC,IAAK,KAAMC,OAAQ,eAC1DC,SAAW,KAAAC,QAAMA,QAAU,KAAAC,WAAMA,WAAa,KAAAC,SAAMA,SAAW,KAAA/C,UAC/DA,UAAY,YAIV,IAAAgD,aAAA1B,UAAAC,eAAA,CAAA,EAAA,kBAAA0B,gBACA,IAAAC,KAAA5B,UAAAC,eAAA,CAAA,EAAA,eAAA4B,iBAEAC,iBAAkC,IAC7BJ,cAAgBT,QAIhB,SAAAc,UAAUC,MACP,MAAA,GAAAA,MAAMC,MAAM,EAAG,QAAQD,MAAMC,WACzC,KACIf,SAA0B,WACtBgB,IAAMJ,iBACL,OAAAI,IAAId,KAAOc,IAAIhB,UAAYa,UAAUG,IAAIf,cAG9CgB,YAA6B,WACzBD,IAAMJ,iBACR,GAAAI,IAAId,WAAYc,IAAId,IACpB,GAAAc,IAAIhB,gBAAiBgB,IAAIhB,SACtB,OAAAa,UAAUG,IAAIf,cAGnBiB,cAA+B,WAC3BF,IAAMJ,iBACR,GAAAI,IAAId,IAAY,OAAAc,IAAId,IAAI,GAAGiB,cAC3B,GAAAH,IAAIhB,SAAiB,OAAAgB,IAAIhB,SAAS,GAAGmB,qBAClCH,IAAIf,UAAU,IAAIkB,eAAiB,mFAIW3D,mRAGnBwC,gBAAQ7B,KAAA,QAAA,GAChC8C,kBAAkBP,+DAIvB,GAAAE,iBAAiBT,OAAM,iCAChBlC,UAAAC,KAAA,OAAAC,KAAA,MAAAyC,iBAAiBT,qSAGxBe,6kBCjDL7C,KAAO,+BAAA+C,KACPA,KAAO,IAAArB,QACPA,QAAA,CAAYC,SAAU,GAAIC,QAAS,GAAIC,IAAK,KAAMC,OAAQ,oBAC1DzB,cAAgB,KAAAD,OAChBA,OAAA,GAAAE,aACAA,aAAe,MAAA0C,cACfA,cAAgB,KAAAC,gBAChBA,gBAAAhB,WACAA,WAAAD,QACAA,QAAAE,SACAA,SAAA/C,UACAA,UAAY,iWAOH4D,2DAAmB/C,6PAMlBI,cACOC,4BACDC,mCACJ0C,mOAQDtB,yBACCuB,gBACEhB,sBACHD,gBACCE,qcClCT,IAAAgB,SAAAA,SAAW,KAAM/D,UAAAA,UAAY,IAAAC,QAM/B,IAAA+D,WAA4B,GAUvB,SAAAC,eAAef,UAClBA,KAAa,MAAA,GACX,OAAAA,KACLgB,QAAQ,KAAM,KACdC,MAAM,KACNC,IAAIC,MAAQA,KAAKC,OAAO,GAAGX,cAAgBU,KAAKd,MAAM,GAAGgB,eACzDC,KAAK,IACR,CAGI,IAAAC,YAAuBR,eAAeF,UAAYC,iHAGyBhE,sDAE1EyE,YAAW,8RAGbA,iOAMiBhE,UAAAC,KAAA,qBAAAE,YAAA8D,+BAAiBC,+ZChD9BZ,SAAW,cAAAa,UAAeA,UAAY,aAAAC,QAAcA,QAAU,QAAA7E,UAASA,UAAY,gEAG5DA,0hBCI3B8E,YAAc,KAAAC,YACdA,YAAc,KAAA/E,UACdA,UAAY,GAAAgF,SACZA,SAAW,MAAAC,iBACXA,iBAAmB,IAAAC,aACnBA,aAAe,aAGb,IAAAhC,KAAA5B,UAAAC,eAAA,CAAA,EAAA,eAAA4B,aACA,IAAAgC,MAAA7D,UAAAC,eAAA,CAAA,EAAA,aAAA6D,WACA,IAAAC,YAAqB,MACrB,IAAAC,UAAmB,MACnB,IAAAC,YAAqB,MAOnB,MAAAC,4BAA8BC,SAAW,YAAcC,aAAaC,QAAQ,kCAAoC,QAClHH,qBAAsB,CACpB,IACI,MAAAI,KAAOC,KAAKC,MAAMN,sBACZF,UAAA,IACd,OAASS,GACKT,UAAA,IACd,CACF,KAOIU,cAA+B,KAC5B,IAAAb,QAAA7D,UAAAC,eAAA,CAAA,EAAA,aAAA0E,WAAqB/C,KAAKgD,YAAoB,OAAA,EAC7C,MAAAC,QAAUC,KACV,MAAAC,SAAe,IAAAD,KAAA9E,UAAAC,eAAA,GAAA,aAAA0E,WAAgB/C,KAAKgD,mBACpCI,SAAWD,SAASE,UAAYJ,IAAII,UACpC,MAAAC,SAAWC,KAAKC,KAAKJ,UAAY,IAAO,GAAK,GAAK,KACjD,OAAAG,KAAKE,IAAI,EAAGH,eAIjBI,WAA4B,QAE1BtB,UAAW,CACN,OAAAC,WACT,IAGIJ,OAASJ,aAAeiB,eAAiB,EAAU,OAAA,QACnD9C,OAAS2D,SAASC,OAAShC,YAAoB,OAAA,KAE5C,OAAA,gBAGAiC,sBACH5B,MAAO,CACL,GAAAa,eAAiB,EAAG,CACf,MAAA,iEACT,MAAA,GAAWA,gBAAkB,EAAG,CACvB,MAAA,iEACF,gCAC2BA,mDAClC,MACK,CACE,MAAA,mEACT,CACF,UAESgB,gBACH,GAAA7B,OAASa,eAAiB,EAAU,MAAA,SACpC,GAAAb,OAASa,eAAiB,EAAU,MAAA,UACjC,MAAA,MACT,UAESiB,wBACDC,KAAOF,gBACL,OAAAE,MACD,IAAA,SACI,MAAA,iGACJ,IAAA,UACI,MAAA,2HAEA,MAAA,mHAEb,UA8BSC,oBACO9B,YAAA,MACFC,UAAA,KACEC,YAAA,KAEhB,sFAiGUE,SAAW,aAAemB,WAAU,oEAEnB,kBAAA5G,aAAagF,WAAa,MAAQ,kCAAoCA,WAAa,SAAW,qCAAuC,mBACrJO,YAAc,oBAAsB,MAAwC,kHAEvD0B,6BAAe,2UAIhC,GAAAD,kBAAoB,SAAQ,giBAIvB,MAAA,GAAAA,kBAAoB,UAAS,ioCAYpCD,6aASAC,kBAAoB,SAAW,4EAC/BA,kBAAoB,UAAY,wFAChC,uKAEF7B,MAAQ,cAAgB,o5BAoBQgC,6BAAzB,OAAA9B,+BAAWA,YAAA+B,onBC7Q7BC,KAAiB,MAAAC,QACjBA,QAAA,IAAiBD,KAAO,MAAAE,WACxBA,WAAA,gBAMG,IAAAC,SAAkB,MAClB,IAAAC,MAAe,GAKb,MAAAC,aAAA,EACHC,MAAOC,YAAYC,OAAQxH,MAAO,WAClCsH,MAAOC,YAAYE,MAAOzH,MAAO,UACjCsH,MAAOC,YAAYG,KAAM1H,MAAO,SAG7B,MAAA2H,gBAAA,CACH,CAAAL,MAAO,MAAOtH,MAAO,mBACrB,CAAAsH,MAAO,MAAOtH,MAAO,cACrB,CAAAsH,MAAO,MAAOtH,MAAO,uBACrB,CAAAsH,MAAO,MAAOtH,MAAO,sBACrB,CAAAsH,MAAO,MAAOtH,MAAO,0BACrBsH,MAAO,MAAOtH,MAAO,2BACrB,CAAAsH,MAAO,MAAOtH,MAAO,qBACrB,CAAAsH,MAAO,MAAOtH,MAAO,uBAGlB,MAAA4H,cAAA,CACH,CAAAN,MAAO,QAAStH,MAAO,gBACvB,CAAAsH,MAAO,QAAStH,MAAO,gBACvB,CAAAsH,MAAO,QAAStH,MAAO,WACvB,CAAAsH,MAAO,QAAStH,MAAO,UACvB,CAAAsH,MAAO,QAAStH,MAAO,UACvB,CAAAsH,MAAO,QAAStH,MAAO,WACvB,CAAAsH,MAAO,QAAStH,MAAO,cACvB,CAAAsH,MAAO,QAAStH,MAAO,YACvB,CAAAsH,MAAO,QAAStH,MAAO,UACvB,CAAAsH,MAAO,QAAStH,MAAO,yBACvBsH,MAAO,QAAStH,MAAO,0BAGpB,MAAA6H,iBAAA,CACH,CAAAP,MAAO,GAAItH,MAAO,YAClB,CAAAsH,MAAO,IAAKtH,MAAO,aACnB,CAAAsH,MAAO,IAAKtH,MAAO,cACnB,CAAAsH,MAAO,IAAKtH,MAAO,cACnB,CAAAsH,MAAO,KAAMtH,MAAO,cACpB,CAAAsH,MAAO,KAAMtH,MAAO,UACpB,CAAAsH,MAAO,EAAGtH,MAAO,UAId,MAAA8H,iBAAmBC,IAAIC,SAASC,MAAA,CACrCC,iBAAkBH,IAAII,UACtBC,MAAOL,IAAIM,SAASC,MAAMC,OAAOC,OAAOjB,cACxCkB,OAAQV,IAAIM,SAASK,SAAS,sBAC9BC,SAAUZ,IAAIM,SAASK,SAAS,wBAChCE,kBAAmBb,IAAIc,SAASC,IAAI,EAAG,oCACvCC,aAAchB,IAAII,UAClBa,kBAAmBjB,IAAIc,SAASC,IAAI,GAAI,6CACxCG,UAAWlB,IAAII,UACfe,qBAAsBnB,IAAII,uBAInBgB,KAAAC,OAAMA,OAAAC,QAAQA,QAAAC,QAASA,SAAyBC,WAAA,CACvDC,cAAA,CACCtB,iBAAkB,MAClBE,MAAOb,YAAYC,OACnBiB,OAAQ,QACRE,SAAU,MACVC,kBAAmB,IACnBG,aAAc,KACdC,kBAAmB,IACnBC,UAAW,KACXC,qBAAsB,OAEvBpB,kCACA2B,SAAAC,MAAiBlB,eACVmB,kBAgGOD,eAAAC,aAAanB,QACA,CAClBpB,MAAA,iCAET,CAkED,UAESwC,cAMD,CACC5C,KAAA,MACPC,SACD,CACD,+HA8BkD2C,yTA+CpCvC,mDA8CAO,oDAmBAD,sDAwBAE,+9BA5FWO,gHAGK,IAAAyB,OAAM3J,WAAAC,SACbC,WAAAC,KAAA,UAAAC,KAAA,QAAAuJ,OAAOvC,SAAPwC,eAAA1J,WAAAyJ,OAAOvC,kDAAQlH,WAAAC,KAAA,GAAAE,YAAAsJ,OAAO7J,iYASlBkI,iBAAgB,0jBAYhBe,UAAS,u0CAsBC,iBAAAhI,UAAAC,eAAA,CAAA,EAAA,UAAAkI,QAAAX,wDAAmBA,sHAF/BA,yHAIM,IAAAoB,OAAME,aAAAC,WACd5J,WAAAC,KAAA,UAAAC,KAAA,QAAAuJ,OAAOvC,SAAPwC,eAAA1J,WAAAyJ,OAAOvC,kDAAQlH,WAAAC,KAAA,GAAAE,YAAAsJ,OAAO7J,8JAG1B,GAAAiB,UAAAC,eAAA,CAAA,EAAA,UAAAkI,QAAAX,wDAAmBA,OAAM,0MACSA,6rBAYhB,iBAAAxH,UAAAC,eAAA,CAAA,EAAA,UAAAkI,QAAAT,0DAAqBA,wHAFjCA,2HAIQ,IAAAkB,OAAMI,aAAAC,WAChB9J,WAAAC,KAAA,UAAAC,KAAA,QAAAuJ,OAAOvC,SAAPwC,eAAA1J,WAAAyJ,OAAOvC,kDAAQlH,WAAAC,KAAA,GAAAE,YAAAsJ,OAAO7J,8JAG1B,GAAAiB,UAAAC,eAAA,CAAA,EAAA,UAAAkI,QAAAT,0DAAqBA,SAAQ,0MACKA,kkCAgB5BC,oIAGS,IAAAiB,OAAMM,aAAAC,WACjBhK,WAAAC,KAAA,UAAAC,KAAA,QAAAuJ,OAAOvC,SAAPwC,eAAA1J,WAAAyJ,OAAOvC,kDAAQlH,WAAAC,KAAA,GAAAE,YAAAsJ,OAAO7J,mkBAYlB+I,aAAY,sbAQvBA,aAAY,qaAQFC,mDAAiBrI,WAAA,2JAAA,EAAA,CAKL,iBAAAM,UAAAC,eAAA,CAAA,EAAA,UAAAkI,QAAAJ,mEAA8BA,iGAEhD,GAAA/H,UAAAC,eAAA,CAAA,EAAA,UAAAkI,QAAAJ,mEAA8BA,kBAAiB,0MACbA,6hBA6B9C5B,MAAK,iQAEqCA,4RAgBlChH,WAAAC,KAAA,kNAAAC,KAAA,WAAA,KAAsB,uaAUtB6G,SAAQ,iGAQM/G,WAAAC,KAAA,2QAAAC,KAAA,YAAAW,UAAAC,eAAA,CAAA,EAAA,WAAAmI,UAAA,KAAsB,qiCC3hB9C,MAAAgB,QAAUC,MAAMC,UAAUtG,OAAO,IAAIX,eAAiB,UAGtDkH,eACL,4IAGG,GAAAF,MAAMG,IAAG,iCAEPrK,UAAAC,KAAA,OAAAC,KAAA,MAAAgK,MAAMG,OACNnK,KAAA,MAAAgK,MAAMI,WAAa,iBACD/J,WAAA,gBAAA2J,MAAM3K,WAAa6K,iKAKnCF,MAAM3K,WAAa6K,qCACdF,MAAMI,WAAa,8FAG9BL,gbCfDrD,KAAiB,MAAA2D,MACjBA,MAAQ,SAAArD,MACRA,MAAQ,oBAAA3H,UACRA,UAAY,UAAAsH,QACZA,QAA0B,KAClBD,KAAA,wcAO0BM,slCCJlCN,KAAiB,MAAAC,QACjBA,QAAA,IAAiBD,KAAO,MAAAE,WACxBA,WAAA,gBAMG,IAAAC,SAAkB,MAClB,IAAAC,MAAe,GAEf,IAAAwD,iBAA0B,GAE1B,IAAAC,UAAmB,MACnB,IAAAC,WAAoB,GAGlB,MAAAhD,iBAAmBC,IAAIC,SAASC,MAAA,CACrCsC,SAAUxC,IACRM,SACAK,SAAS,wBACTI,IAAI,EAAG,0CACPxC,IAAI,GAAI,4CACRyE,QAAQ,mBAAoB,uEAC9BC,UAAWjD,IACTM,SACAK,SAAS,0BACTI,IAAI,EAAG,0BACPxC,IAAI,GAAI,8CACV2E,SAAUlD,IACRM,SACAK,SAAS,yBACTI,IAAI,EAAG,yBACPxC,IAAI,GAAI,6CACV4E,MAAOnD,IACLM,SACA6C,MAAM,iCACNxC,SAAS,6BACXyC,IAAKpD,IACHM,SACA/B,IAAI,IAAK,wCACT8E,WACFC,QAAStD,IACPM,SACAoC,IAAI,uBACJW,WACAE,WACAC,UAAWjE,OAAWA,QAAU,GAAK,KAAOA,OAC9CkE,UAAWzD,IACTM,SACAoC,IAAI,uBACJW,WACAE,WACAC,UAAWjE,OAAWA,QAAU,GAAK,KAAOA,oBAIvC6B,KAAAC,OAAMA,OAAAC,QAAQA,QAAAC,QAASA,SAAyBC,WAAA,CACvDC,cAAA,CACCe,SAAU,GACVS,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,IAAK,GACLE,QAAS,GACTG,UAAW,IAEZ1D,kCACA2B,SAAAC,MAAiBlB,eACViD,iBAuGO/B,eAAA+B,YAAYjD,QAEI,CACrBpB,MAAA,gCAET,CA2HD,UAESwC,cAMD,CACC5C,KAAA,MACPC,SACD,CACD,UAcSyE,mBACIb,UAAA,MACJzD,MAAA,GACK0D,WAAA,EACd,sHAGyClB,yjBAa9BgB,iBACWL,SAAAtJ,UAAAC,eAAA,CAAA,EAAA,QAAAiI,MAAA6B,qDAAmBT,8hBAajBiB,+DAAS7K,WAAA,2JAAA,EAAA,CAGG,iBAAAM,UAAAC,eAAA,CAAA,EAAA,UAAAkI,QAAAoC,2DAAsBA,yFAExC,GAAAvK,UAAAC,eAAA,CAAA,EAAA,UAAAkI,QAAAoC,2DAAsBA,UAAS,0MACGA,2uBAc5BjB,wCAAQ5J,WAAA,2JAAA,EAAA,CAGI,iBAAAM,UAAAC,eAAA,CAAA,EAAA,UAAAkI,QAAAmB,0DAAqBA,wFAEvC,GAAAtJ,UAAAC,eAAA,CAAA,EAAA,UAAAkI,QAAAmB,0DAAqBA,SAAQ,0MACKA,glBAW5BW,sCAAKvK,WAAA,2JAAA,EAAA,CAGO,iBAAAM,UAAAC,eAAA,CAAA,EAAA,UAAAkI,QAAA8B,uDAAkBA,qFAEpC,GAAAjK,UAAAC,eAAA,CAAA,EAAA,UAAAkI,QAAA8B,uDAAkBA,MAAK,0MACWA,2uBAa5BF,gCAASrK,WAAA,2JAAA,EAAA,CAGG,iBAAAM,UAAAC,eAAA,CAAA,EAAA,UAAAkI,QAAA4B,2DAAsBA,yFAExC,GAAA/J,UAAAC,eAAA,CAAA,EAAA,UAAAkI,QAAA4B,2DAAsBA,UAAS,0MACGA,0lBAW5BC,8BAAQtK,WAAA,2JAAA,EAAA,CAGI,iBAAAM,UAAAC,eAAA,CAAA,EAAA,UAAAkI,QAAA6B,0DAAqBA,wFAEvC,GAAAhK,UAAAC,eAAA,CAAA,EAAA,UAAAkI,QAAA6B,0DAAqBA,SAAQ,0MACKA,ugBAa7BI,kDAAO1K,WAAA,2JAAA,EAAA,CAGK,iBAAAM,UAAAC,eAAA,CAAA,EAAA,UAAAkI,QAAAiC,yDAAoBA,uFAEtC,GAAApK,UAAAC,eAAA,CAAA,EAAA,UAAAkI,QAAAiC,yDAAoBA,QAAO,0MACOA,8mBAchB,iBAAApK,UAAAC,eAAA,CAAA,EAAA,UAAAkI,QAAA+B,qDAAgBA,sHAJ5BA,4GAMN,GAAAlK,UAAAC,eAAA,CAAA,EAAA,UAAAkI,QAAA+B,qDAAgBA,IAAG,0MACeA,qPAEDA,KAAO,IAAI3J,yGAIrD4F,MAAK,iQAEqCA,4RAgBlChH,WAAAC,KAAA,kNAAAC,KAAA,WAAA,KAAsB,uaAUtB6G,SAAQ,iGAQM/G,WAAAC,KAAA,2QAAAC,KAAA,YAAAW,UAAAC,eAAA,CAAA,EAAA,WAAAmI,UAAA,KAAsB,ufA2B7CyB,8CAEEY,4BAHE,OAAAb,6BAASA,UAAA9D,ipBCpiBnBC,KAAiB,MAAA2D,MACjBA,MAAQ,iBAAAgB,QACRA,QAAU,8GAAAC,WACVA,WAAa,SAAAC,YACbA,YAAc,SAAAlM,UACdA,UAAY,UAAAmM,UACZA,UAAA,OAAmBC,SACnBA,SAAiB,KACT/E,KAAA,gBAIL,IAAAgF,cAAuB,ytCAsB6BL,uUAStCK,cAAa,0oBAe3BJ,sUAOAC,2pBC9DG,IAAAI,SAAAA,UAAArM,QAIF,IAAAkB,aAAsB,MACtB,IAAAoL,aAAsB,MACtB,IAAAC,YAAqB,MACrB,IAAAC,kBAA2B,UAG3BlK,QAAwCjB,UAAAC,eAAA,CAAA,EAAA,kBAAA0B,iBAAA,CAAAR,QAAS,GAAIC,IAAK,MAC1D,IAAAxB,cAAAI,UAAAC,eAAA,CAAA,EAAA,gBAAAG,cACA,IAAAT,OAAAK,UAAAC,eAAA,CAAA,EAAA,iBAAAC,eACA,IAAAoD,UAAAtD,UAAAC,eAAA,CAAA,EAAA,aAAA0E,WAAgC/C,KAAKgD,YACrC,IAAAnC,SAAAzC,UAAAC,eAAA,CAAA,EAAA,aAAA0E,WAA+B/C,KAAKgE,KACpC,IAAAwF,UAAApL,UAAAC,eAAA,CAAA,EAAA,eAAAoL,aA+BK,SAAAC,kBAAkB7K,OACd8K,WAAAC,YAAY/K,MAAMI,QAC/B,UAES4K,sBACOP,YAAA,IAChB,UAESQ,iBACQT,aAAA,IACjB,UAESU,cAEEC,SAAAC,gBAAgBC,UAAUC,OAAO,OAC5C,gBAEeC,qBAEPC,iBAAmB7H,aAAaC,QAAQ,oCAAsC,UAEhF4H,iBAAkB,OAEdC,oBACD,CAEef,kBAAA,IACtB,CACF,CAEe1C,eAAA0D,oBAAoBpB,kBAC7BA,cAAe,CAEJ3G,aAAAgI,QAAQ,iCAAkC,OACzD,OAEMF,eACR,gBAEeA,gBACT,sBAGAG,YAAAC,aACAA,aAAAC,+BACAA,+BAAAC,0BACAA,wCACe,iCAAoBC,KAAAC,GAAAA,EAAAC,IAE7B,MAAAC,aAAAA,aAAcC,YAAAA,0BAA6B,gCAC3C,MAAAC,aAAAA,oBAAAC,OAA8B,6BAC9B,MAAAC,gBAAAA,uBAAAD,OAAiC,gCACjC,MAAAE,SAAAA,gBAAAF,OAA0B,4BAC1B,MAAAG,0BAAAA,iCAAAH,OAA2C,gDAC3C,MAAAI,qBAAAA,4BAAAJ,OAAsC,gCACtC,MAAAK,IAAAA,WAAAL,OAAqB,iCAA4BN,KAAAC,GAAAA,EAAAW,IACjD,MAAAC,IAAAA,WAAAP,OAAqB,yCAGvBI,6BAGAP,aAAa,UACbC,oBAGAI,SAAS,MAGfH,eACAE,kBACAV,aAAa,IACbY,4BAG+BX,+BAAAe,IAAId,4BAGnCH,iBAGIkB,qBAAuBA,aAAaC,QAAU,WAAY,CAC5DD,aAAaC,OACf,IACIjC,mBAAqBA,WAAWiC,QAAU,WAAY,CACxDjC,WAAWiC,OACb,IACI7I,kBAAoBA,UAAU6I,QAAU,WAAY,CACtD7I,UAAU6I,YACL,CACLC,QAAQC,KAAK,8DACf,CAGAC,eAAeC,WAAW,0BAE1BH,QAAQL,IAAI,2CAGZjJ,OAAO0J,SAAShP,KAAO,iBAEzB,OAASsH,OACCsH,QAAAtH,MAAM,2BAA4BA,OAC1C2H,MAAM,0EACR,CACF,uOAOW7M,gBACDtB,cACOC,4BACDC,wCACCyL,kCACEG,+BACLC,uBACHC,qBACCK,4JAQG,iBACA,qIAKD,szBAkBC1I,+HAOT8H,UAAS,kCACR,GAAA2C,cAAc,kBAAgB,8KAI9B,GAAAA,cAAc,gBAAc,uRAMd,OAAA9C,gCAAYA,aAAAnF,2FAGb,OAAAoF,+BAAWA,YAAApF,gGAKlBqG,oBACKrB,SAAA,IAAAK,kBAAoB,iBAFzB,OAAAA,qCAAiBA,kBAAArF"}