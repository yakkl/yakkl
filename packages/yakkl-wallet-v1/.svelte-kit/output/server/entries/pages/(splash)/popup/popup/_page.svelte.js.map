{"version":3,"file":"_page.svelte.js","sources":["../../../../../../../../src/routes/(splash)/popup/popup/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n\timport { browser_ext } from '$lib/common/environment';\n\timport { onDestroy, onMount } from 'svelte';\n\timport { YAKKL_SPLASH, NUM_OF_SPLASH_IMAGES } from '$lib/common/constants';\n\timport { wait } from '$lib/common/utils';\n\timport { log } from '$lib/common/logger-wrapper';\n\timport type { Runtime } from 'webextension-polyfill';\n\n\ttype RuntimePort = Runtime.Port;\n\n\tlet port: RuntimePort;\n\tlet isPortDisconnected = false;\n\n\tonMount(async () => {\n\t\ttry {\n\t\t\tlog.info('YAKKL: Splash: Attempting to connect to background script...');\n\n\t\t\tif (!browser_ext) {\n\t\t\t\tlog.warn('Browser extension API is unavailable.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tport = browser_ext.runtime.connect({ name: YAKKL_SPLASH });\n\t\t\tif (port) {\n\t\t\t\tlog.debug('YAKKL: Splash: Port connected.');\n\n\t\t\t\tisPortDisconnected = false;\n\n\t\t\t\tport.onMessage.addListener((m: any) => {\n\t\t\t\t\tif (m.popup === 'YAKKL: Launched') {\n\t\t\t\t\t\twindow.close(); // Close this splash window\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tport.onDisconnect.addListener(() => {\n\t\t\t\t\tisPortDisconnected = true;\n\t\t\t\t\tlog.info('Port has been disconnected.');\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlog.info('YAKKL: Splash: Port is trying again in 2 seconds...');\n\t\t\t\tawait wait(2000);\n\n\t\t\t\tport = browser_ext.runtime.connect({ name: YAKKL_SPLASH });\n\t\t\t\tif (port) {\n\t\t\t\t\tport.onMessage.addListener((m: any) => {\n\t\t\t\t\t\tif (m.popup === 'YAKKL: Launched') {\n\t\t\t\t\t\t\tport.disconnect();\n\t\t\t\t\t\t\twindow.close();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tport.onDisconnect.addListener(() => {\n\t\t\t\t\t\tisPortDisconnected = true;\n\t\t\t\t\t\tlog.info('Port has been disconnected.');\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tbrowser_ext.runtime.reload();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbrowser_ext.alarms.create('yakkl-splash-alarm', { when: Date.now() + 2000 });\n\t\t\tbrowser_ext.alarms.onAlarm.addListener((m: any) => {\n\t\t\t\tif (port && !isPortDisconnected) port.postMessage({ popup: 'YAKKL: Splash' });\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tlog.error(e);\n\t\t}\n\t});\n\n\tonDestroy(() => {\n\t\ttry {\n\t\t\tif (port) {\n\t\t\t\tport.disconnect();\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tlog.error(e);\n\t\t}\n\t});\n\n\tfunction getRandomInt(max: number) {\n\t\treturn Math.floor(Math.random() * max);\n\t}\n</script>\n\n<img src=\"/images/splash_{getRandomInt(NUM_OF_SPLASH_IMAGES)}.png\" alt=\"Splash page with logo\" />\n"],"names":["port","onDestroy","e","log","error","getRandomInt","max","Math","floor","random","$$payload","out","$.attr","$.stringify","NUM_OF_SPLASH_IMAGES"],"mappings":"+gBAUK,IAAAA,KA2DJC,UAAgB,KACX,OACCD,MAGL,OAASE,GACRC,IAAIC,MAAMF,EACX,IAGQ,SAAAG,aAAaC,YACdC,KAAKC,MAAMD,KAAKE,SAAWH,IACnC,CAGyBI,UAAAC,KAAA,OAAAC,KAAA,MAAA,kBAAAC,UAAAR,aAAaS"}