{"version":3,"file":"_page.svelte.js","sources":["../../../../../../../../../../node_modules/.pnpm/@sveltejs+kit@2.21.5_@sveltejs+vite-plugin-svelte@5.1.0_svelte@5.34.3_vite@6.3.5_@types+node@_kkg52bulj3afeke4e35iads2tm/node_modules/@sveltejs/kit/src/runtime/app/stores.js","../../../../../../../../src/routes/(dapp)/dapp/walletConnect/+page.svelte"],"sourcesContent":["import { getContext } from 'svelte';\nimport { BROWSER } from 'esm-env';\nimport { stores as browser_stores } from '../client/client.js';\n\n/**\n * A function that returns all of the contextual stores. On the server, this must be called during component initialization.\n * Only use this if you need to defer store subscription until after the component has mounted, for some reason.\n *\n * @deprecated Use `$app/state` instead (requires Svelte 5, [see docs for more info](https://svelte.dev/docs/kit/migrating-to-sveltekit-2#SvelteKit-2.12:-$app-stores-deprecated))\n */\nexport const getStores = () => {\n\tconst stores = BROWSER ? browser_stores : getContext('__svelte__');\n\n\treturn {\n\t\t/** @type {typeof page} */\n\t\tpage: {\n\t\t\tsubscribe: stores.page.subscribe\n\t\t},\n\t\t/** @type {typeof navigating} */\n\t\tnavigating: {\n\t\t\tsubscribe: stores.navigating.subscribe\n\t\t},\n\t\t/** @type {typeof updated} */\n\t\tupdated: stores.updated\n\t};\n};\n\n/**\n * A readable store whose value contains page data.\n *\n * On the server, this store can only be subscribed to during component initialization. In the browser, it can be subscribed to at any time.\n *\n * @deprecated Use `page` from `$app/state` instead (requires Svelte 5, [see docs for more info](https://svelte.dev/docs/kit/migrating-to-sveltekit-2#SvelteKit-2.12:-$app-stores-deprecated))\n * @type {import('svelte/store').Readable<import('@sveltejs/kit').Page>}\n */\nexport const page = {\n\tsubscribe(fn) {\n\t\tconst store = __SVELTEKIT_DEV__ ? get_store('page') : getStores().page;\n\t\treturn store.subscribe(fn);\n\t}\n};\n\n/**\n * A readable store.\n * When navigating starts, its value is a `Navigation` object with `from`, `to`, `type` and (if `type === 'popstate'`) `delta` properties.\n * When navigating finishes, its value reverts to `null`.\n *\n * On the server, this store can only be subscribed to during component initialization. In the browser, it can be subscribed to at any time.\n *\n * @deprecated Use `navigating` from `$app/state` instead (requires Svelte 5, [see docs for more info](https://svelte.dev/docs/kit/migrating-to-sveltekit-2#SvelteKit-2.12:-$app-stores-deprecated))\n * @type {import('svelte/store').Readable<import('@sveltejs/kit').Navigation | null>}\n */\nexport const navigating = {\n\tsubscribe(fn) {\n\t\tconst store = __SVELTEKIT_DEV__ ? get_store('navigating') : getStores().navigating;\n\t\treturn store.subscribe(fn);\n\t}\n};\n\n/**\n * A readable store whose initial value is `false`. If [`version.pollInterval`](https://svelte.dev/docs/kit/configuration#version) is a non-zero value, SvelteKit will poll for new versions of the app and update the store value to `true` when it detects one. `updated.check()` will force an immediate check, regardless of polling.\n *\n * On the server, this store can only be subscribed to during component initialization. In the browser, it can be subscribed to at any time.\n *\n * @deprecated Use `updated` from `$app/state` instead (requires Svelte 5, [see docs for more info](https://svelte.dev/docs/kit/migrating-to-sveltekit-2#SvelteKit-2.12:-$app-stores-deprecated))\n * @type {import('svelte/store').Readable<boolean> & { check(): Promise<boolean> }}\n */\nexport const updated = {\n\tsubscribe(fn) {\n\t\tconst store = __SVELTEKIT_DEV__ ? get_store('updated') : getStores().updated;\n\n\t\tif (BROWSER) {\n\t\t\tupdated.check = store.check;\n\t\t}\n\n\t\treturn store.subscribe(fn);\n\t},\n\tcheck: () => {\n\t\tthrow new Error(\n\t\t\tBROWSER\n\t\t\t\t? 'Cannot check updated store before subscribing'\n\t\t\t\t: 'Can only check updated store in browser'\n\t\t);\n\t}\n};\n\n/**\n * @template {keyof ReturnType<typeof getStores>} Name\n * @param {Name} name\n * @returns {ReturnType<typeof getStores>[Name]}\n */\nfunction get_store(name) {\n\ttry {\n\t\treturn getStores()[name];\n\t} catch {\n\t\tthrow new Error(\n\t\t\t`Cannot subscribe to '${name}' store on the server outside of a Svelte component, as it is bound to the current request via component context. This prevents state from leaking between users.` +\n\t\t\t\t'For more information, see https://svelte.dev/docs/kit/state-management#avoid-shared-state-on-the-server'\n\t\t);\n\t}\n}\n","<script lang=\"ts\">\n\timport { browserSvelte, browser_ext } from '$lib/common/environment';\n\timport { goto } from '$app/navigation';\n\timport { page } from '$app/stores';\n\timport {\n\t\tyakklConnectedDomainsStore,\n\t\tgetSettings,\n\t\tyakklDappConnectRequestStore\n\t} from '$lib/common/stores';\n\timport { PATH_LOGIN, YAKKL_DAPP, PATH_DAPP_ACCOUNTS } from '$lib/common/constants';\n\timport { onMount, onDestroy } from 'svelte';\n\n\timport type { Runtime } from 'webextension-polyfill';\n\timport type { Settings } from '$lib/common';\n\n\ttype RuntimePort = Runtime.Port | undefined;\n\n\tlet showConfirm = $state(false);\n\tlet showSuccess = false;\n\tlet showFailure = $state(false);\n\tlet errorValue = $state('No domain/site name was found. Access to YAKKLÂ® is denied.');\n\tlet port: RuntimePort;\n\tlet domain: string = $state();\n\tlet domainLogo: string = $state();\n\tlet domainTitle: string = $state();\n\tlet requestData: any;\n\tlet method: string;\n\tlet requestId: string | null;\n\tlet message; // This gets passed letting the user know what the intent is\n\tlet context;\n\n\tif (browserSvelte) {\n\t\trequestId = $page.url.searchParams.get('requestId');\n\t\t$yakklDappConnectRequestStore = requestId as string;\n\t}\n\n\t// NOTE: domains will be added (if not already there at the next step - accounts)\n\tasync function handleIsLocked() {\n\t\ttry {\n\t\t\tlet yakklSettings = (await getSettings()) as Settings;\n\n\t\t\tif (yakklSettings.init && yakklSettings.isLocked === true) {\n\t\t\t\tgoto(PATH_LOGIN + '?requestId=' + requestId); // May force login auth every time so all of the checks would not be needed!\n\t\t\t} else {\n\t\t\t\tgoto(PATH_DAPP_ACCOUNTS + '?requestId=' + requestId);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\terrorValue = e as string;\n\t\t\tshowFailure = true;\n\t\t}\n\t}\n\n\tonMount(() => {\n\t\ttry {\n\t\t\tif (browserSvelte) {\n\t\t\t\tport = browser_ext.runtime.connect({ name: YAKKL_DAPP });\n\t\t\t\tport.onMessage.addListener(async (event: any) => {\n\t\t\t\t\tmethod = event.method;\n\t\t\t\t\trequestData = event.data;\n\n\t\t\t\t\tif (event.method === 'get_params') {\n\t\t\t\t\t\tdomainTitle = requestData?.data?.metaDataParams?.title ?? '';\n\t\t\t\t\t\tdomain = requestData?.data?.metaDataParams?.domain ?? '';\n\t\t\t\t\t\t// Get favicon from URL parameters first, fall back to metadata\n\t\t\t\t\t\tconst url = new URL(window.location.href);\n\t\t\t\t\t\tconst favicon = url.searchParams.get('favicon');\n\t\t\t\t\t\tdomainLogo =\n\t\t\t\t\t\t\tfavicon ||\n\t\t\t\t\t\t\t(requestData?.data?.metaDataParams?.icon ?? '/images/logoBullLock48x48.png');\n\t\t\t\t\t\tmessage =\n\t\t\t\t\t\t\trequestData?.data?.metaDataParams?.message ??\n\t\t\t\t\t\t\t'Nothing was passed in explaining the intent of this approval. Be mindful!';\n\t\t\t\t\t\tcontext = requestData?.data?.metaDataParams?.context ?? 'accounts';\n\t\t\t\t\t\trequestId = !requestId ? requestData.id : requestId;\n\n\t\t\t\t\t\tif (!domain) {\n\t\t\t\t\t\t\terrorValue = 'Domain was not found. Check the dApp site again.';\n\t\t\t\t\t\t\tshowFailure = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Only enable these if you need to CLEAR everything out for testing!\n\t\t\t\t\t\t\t// $yakklConnectedDomainsStore = [];\n\t\t\t\t\t\t\t// await setYakklConnectedDomainsStorage([]);\n\t\t\t\t\t\t\t// let yakklAccounts = [];\n\t\t\t\t\t\t\t// yakklAccounts = await getYakklAccounts();\n\t\t\t\t\t\t\t// for (const item of yakklAccounts) {\n\t\t\t\t\t\t\t//   item.connectedDomains.length = 0;\n\t\t\t\t\t\t\t// };\n\t\t\t\t\t\t\t// $yakklAccountsStore = yakklAccounts;\n\t\t\t\t\t\t\t// await setYakklAccountsStorage($yakklAccountsStore);\n\t\t\t\t\t\t\t// Comment out this section after testing for clearing\n\n\t\t\t\t\t\t\tif ($yakklConnectedDomainsStore) {\n\t\t\t\t\t\t\t\t$yakklConnectedDomainsStore.find((element) => {\n\t\t\t\t\t\t\t\t\tif (element.domain === domain) {\n\t\t\t\t\t\t\t\t\t\tconst accounts = element.addresses;\n\t\t\t\t\t\t\t\t\t\tif (port)\n\t\t\t\t\t\t\t\t\t\t\tport.postMessage({\n\t\t\t\t\t\t\t\t\t\t\t\tmethod: 'eth_requestAccounts',\n\t\t\t\t\t\t\t\t\t\t\t\tid: requestId,\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'YAKKL_RESPONSE',\n\t\t\t\t\t\t\t\t\t\t\t\tresult: accounts\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tport.postMessage({ method: 'get_params', id: requestId }); // request is not currently used but we may want to later\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t});\n\n\tonDestroy(() => {\n\t\ttry {\n\t\t\tif (browserSvelte) {\n\t\t\t\tif (port) {\n\t\t\t\t\tport.disconnect();\n\t\t\t\t\t// port.onMessage.removeListener();\n\t\t\t\t\tport = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t});\n\n\tfunction handleReject() {\n\t\ttry {\n\t\t\tshowConfirm = false;\n\t\t\tshowFailure = false;\n\t\t\tshowSuccess = false;\n\n\t\t\tif (port)\n\t\t\t\tport.postMessage({\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tresponse: { type: 'error', data: { code: 4001, message: 'User rejected the request.' } },\n\t\t\t\t\trequestData: requestData\n\t\t\t\t});\n\t\t\t// If requestId is not valid then use 0 since we are bailing out anyway\n\t\t\t// May want to think about putting a slight tick to make sure all queues get flushed\n\t\t\t//goto(PATH_LOGOUT); // May want to do something else if they are already logged in!\n\t\t\tif (browserSvelte) window.close();\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t}\n\n\tfunction handleApprove() {\n\t\tshowConfirm = true;\n\t}\n</script>\n\n<svelte:head>\n\t<title>YAKKLÂ® Smart Wallet</title>\n</svelte:head>\n\n<div class=\"modal\" class:modal-open={showConfirm}>\n\t<div class=\"modal-box relative\">\n\t\t<!-- <label for=\"my-modal-3\" class=\"btn btn-sm btn-circle absolute right-2 top-2\">â</label> -->\n\t\t<h3 class=\"text-lg font-bold\">Connect to {domain}</h3>\n\t\t<p class=\"py-4\">\n\t\t\tThis will connect <span class=\"font-bold\">{domain}</span> to YAKKLÂ®! Do you wish to continue?\n\t\t</p>\n\t\t<div class=\"modal-action\">\n\t\t\t<button class=\"btn\" onclick={handleReject}>Reject</button>\n\t\t\t<button class=\"btn\" onclick={handleIsLocked}>Yes, Approved</button>\n\t\t</div>\n\t</div>\n</div>\n\n<div class=\"modal\" class:modal-open={showFailure}>\n\t<div class=\"modal-box relative\">\n\t\t<!-- <label for=\"my-modal-3\" class=\"btn btn-sm btn-circle absolute right-2 top-2\">â</label> -->\n\t\t<h3 class=\"text-lg font-bold\">Failed!</h3>\n\t\t<p class=\"py-4\">{errorValue}</p>\n\t\t<div class=\"modal-action\">\n\t\t\t<button class=\"btn\" onclick={handleReject}>Close</button>\n\t\t</div>\n\t</div>\n</div>\n\n<div class=\"text-center justify-center m-2 flex flex-col absolute top-[250px]\">\n\t<!-- <Beta /> -->\n\t<div class=\"text-primary-content text-2xl font-bold flex flex-col\">\n\t\t{domainTitle ?? ''}\n\t\t<br />\n\t\t<div class=\"text-primary-content text-2xl font-bold flex flex-col mt-4\">\n\t\t\tWants to connect to:\n\t\t</div>\n\t</div>\n\t<div class=\"text-primary-content text-2xl font-bold flex flex-col mt-3\">Connect with YAKKLÂ®</div>\n\t<div class=\"justify-center mt-5\">\n\t\t<div class=\"rounded-badge inline-flex w-fit p-2 bg-secondary text-base-content font-semibold\">\n\t\t\t<div class=\"flex flex-row w-10 h-10\">\n\t\t\t\t<img src={domainLogo} alt=\"Dapp logo\" />\n\t\t\t</div>\n\t\t\t<div class=\"animate-pulse flex flex-row\">\n\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"w-8 h-8 fill-gray-100\">\n\t\t\t\t\t<path\n\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\td=\"M15.97 2.47a.75.75 0 011.06 0l4.5 4.5a.75.75 0 010 1.06l-4.5 4.5a.75.75 0 11-1.06-1.06l3.22-3.22H7.5a.75.75 0 010-1.5h11.69l-3.22-3.22a.75.75 0 010-1.06zm-7.94 9a.75.75 0 010 1.06l-3.22 3.22H16.5a.75.75 0 010 1.5H4.81l3.22 3.22a.75.75 0 11-1.06 1.06l-4.5-4.5a.75.75 0 010-1.06l4.5-4.5a.75.75 0 011.06 0z\"\n\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t\t<div class=\"flex flex-row w-10 h-10\">\n\t\t\t\t<img src=\"/images/logoBullFav48x48.png\" alt=\"yakkl logo\" />\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<div class=\"text-center flex flex-col m-4 broder border-gray-500 bg-black\">\n\t\t<p class=\"text-base-content font-bold\">Select the account(s) to use for this dApp site</p>\n\t</div>\n\n\t<div class=\"my-4\">\n\t\t<div class=\"flex space-x-2 justify-center\">\n\t\t\t<button\n\t\t\t\tonclick={handleReject}\n\t\t\t\tclass=\"btn-sm btn-accent uppercase rounded-full\"\n\t\t\t\taria-label=\"Cancel\"\n\t\t\t>\n\t\t\t\tReject\n\t\t\t</button>\n\n\t\t\t<button\n\t\t\t\ttype=\"submit\"\n\t\t\t\tid=\"recover\"\n\t\t\t\tonclick={handleApprove}\n\t\t\t\tclass=\"btn-sm btn-primary uppercase rounded-full ml-2\"\n\t\t\t\taria-label=\"Confirm\"\n\t\t\t>\n\t\t\t\tApprove\n\t\t\t</button>\n\t\t</div>\n\t</div>\n</div>\n"],"names":["getStores","stores","getContext","page","subscribe","navigating","updated","fn","store","showConfirm","showFailure","errorValue","port","domain","domainLogo","requestId","browserSvelte","$.store_get","$$store_subs","url","searchParams","get","$.store_set","yakklDappConnectRequestStore","onDestroy","disconnect","e","console","log","$$payload","out","$.escape"],"mappings":"2hBAUO,MAAMA,UAAY,KAClBC,MAAAA,SAAoCC,WAAW,cAE9C,MAAA,CAENC,KAAM,CACLC,UAAWH,SAAOE,KAAKC,WAGxBC,WAAY,CACXD,UAAWH,SAAOI,WAAWD,WAG9BE,QAASL,SAAOK,UAYX,MAAMH,KAAO,CACnB,SAAAC,CAAUG,IACH,MAAAC,MAAgDR,YAAYG,KAC3D,OAAAK,MAAMJ,UAAUG,GAAE,sICrBtB,IAAAE,YAAqB,MAErB,IAAAC,YAAqB,MACrB,IAAAC,WAAoB,6DACpB,IAAAC,KACA,IAAAC,YAAA,EACA,IAAAC,gBAAA,EAIA,IAAAC,aAIAC,cAAe,CACAC,UAAAA,UAAAC,eAAA,CAAA,EAAA,QAAAf,MAAAgB,IAAIC,aAAaC,IAAI,aACPC,UAAAC,6BAAAR,UACjC,CAkFAS,UAAgB,KACX,OACCR,cAAe,IACdJ,KAAM,CACTA,KAAKa,aAEEb,UAAA,CACR,CACD,CACD,OAASc,GACRC,QAAQC,IAAIF,EACb,sJAiCmCjB,uQAGOI,kOAEEA,ymBASTH,6WAIlBC,6lBAUhBkB,UAAAC,KAAA,GAAAC,YAAe,4zBAUJjB","x_google_ignoreList":[0]}