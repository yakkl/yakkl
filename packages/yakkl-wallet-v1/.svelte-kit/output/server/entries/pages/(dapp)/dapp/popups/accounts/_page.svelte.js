import{p as push,j as store_set,h as copy_payload,i as assign_payload,c as pop,v as ensure_array_like,r as head,a as push_element,m as attr,b as pop_element,e as escape_html,g as stringify,s as store_get,u as unsubscribe_stores}from"../../../../../../chunks/index2.js";import{b as browserSvelte}from"../../../../../../chunks/environment.js";import{v as getObjectFromLocalStorage,al as STORAGE_YAKKL_CONNECTED_DOMAINS,x as setObjectInLocalStorage,am as STORAGE_YAKKL_ACCOUNTS,b as yakklDappConnectRequestStore,_ as DEFAULT_TITLE,ad as DEFAULT_PERSONA,w as dateString,an as setYakklConnectedDomainsStorage,a9 as setYakklAccountsStorage}from"../../../../../../chunks/encryption.js";import{p as page}from"../../../../../../chunks/index3.js";import{l as log}from"../../../../../../chunks/Logger.js";import{F as FILENAME}from"../../../../../../chunks/utils.js";import{v as verifySessionToken,s as sessionToken}from"../../../../../../chunks/session.js";import{C as Confirmation}from"../../../../../../chunks/Confirmation.js";import"../../../../../../chunks/Warning.js";import{F as Failed}from"../../../../../../chunks/Failed.js";import{s as safeLogout}from"../../../../../../chunks/safeNavigate.js";async function verifyDomainConnected(domain,method){try{if(!domain){log.warn("verifyDomainConnected: Domain is null",false);return false}if(method==="eth_accounts");const connectedDomains=await getObjectFromLocalStorage(STORAGE_YAKKL_CONNECTED_DOMAINS);if(!connectedDomains){log.debug("verifyDomainConnected: No connected domains found",false);return false}const exists=connectedDomains.some(d=>d.domain===domain);log.debug("verifyDomainConnected: Domain check result",false,{domain:domain,exists:exists});return exists}catch(error){log.error("Error in verifyDomainConnected:",false,error);return false}}async function revokeDomainConnection(domain){try{const connectedDomains=await getObjectFromLocalStorage(STORAGE_YAKKL_CONNECTED_DOMAINS);if(connectedDomains){const existingDomainIndex=connectedDomains.findIndex(d=>d.domain===domain);if(existingDomainIndex!==-1){connectedDomains.splice(existingDomainIndex,1);await setObjectInLocalStorage(STORAGE_YAKKL_CONNECTED_DOMAINS,connectedDomains)}}const accounts=await getObjectFromLocalStorage(STORAGE_YAKKL_ACCOUNTS);if(accounts){let accountsModified=false;accounts.forEach(account=>{if(Array.isArray(account.connectedDomains)){const domainIndex=account.connectedDomains.indexOf(domain);if(domainIndex!==-1){account.connectedDomains.splice(domainIndex,1);accountsModified=true}}});if(accountsModified){await setObjectInLocalStorage(STORAGE_YAKKL_ACCOUNTS,accounts);log.info("Removed domain from accounts:",false,{domain:domain,accounts:accounts})}}}catch(error){log.error("Error in revokeDomainConnection:",false,error)}}_page[FILENAME]="src/routes/(dapp)/dapp/popups/accounts/+page.svelte";function _page($$payload,$$props){push(_page);var $$store_subs;let currentlySelected;let yakklAccountsStore=[];let yakklConnectedDomainsStore=[];let accountsPicked=0;let showConfirm=false;let showFailure=false;let errorValue="No domain/site name was found. Access to YAKKL® is rejected.";let domain="";let domainLogo="";let domainTitle="";let requestId;let pass=false;let filteredAddressesArray=[];let currentlySelectedAddress="";let title=DEFAULT_TITLE;let portManager=null;let stream=null;let dappInterface=null;if(browserSvelte){try{requestId=page.url.searchParams.get("requestId");store_set(yakklDappConnectRequestStore,requestId);log.info("Dapp - accounts page loading:",false,{requestId:requestId});if(requestId){pass=true}}catch(e){log.error(e);throw e}}async function handleReject(message="User rejected the request."){try{showConfirm=false;showFailure=false;if(dappInterface);else if(stream);}catch(e){log.error(e)}finally{if(browserSvelte){await close()}}}async function handleProcess(confirmed=true){try{if(!domain){await handleReject("No domain name is present. Access to YAKKL® is rejected.")}if(!verifySessionToken(store_get($$store_subs??={},"$sessionToken",sessionToken))){await handleReject("Session token is invalid. Login again.")}const accounts2=filteredAddressesArray.filter(addr=>addr.selected).map(addr=>({id:addr.id||"",persona:addr.persona||DEFAULT_PERSONA,address:addr.address,name:addr.name,alias:addr.alias,blockchain:addr.blockchain,chainId:addr.chainId}));let addresses=filteredAddressesArray.filter(addr=>addr.selected).map(addr=>addr.address);accountsPicked=accounts2.length;if(accounts2.length===0){const isConnected=await verifyDomainConnected(domain);if(!isConnected){await handleReject("No accounts were selected. Access to YAKKL® is rejected.")}else{revokeDomainConnection(domain);await handleReject("The domain is not connected to any accounts. Access to YAKKL® is rejected.")}}if(!Array.isArray(addresses)){addresses=Object.values(addresses)}const existingDomainIndex=yakklConnectedDomainsStore.findIndex(d=>d.domain===domain);if(existingDomainIndex===-1){const newDomain={id:currentlySelected?.id||"",persona:currentlySelected?.persona||DEFAULT_PERSONA,domain:domain,name:domainTitle||domain,icon:domainLogo,addresses:accounts2,permissions:{},chainId:currentlySelected?.shortcuts?.chainId||1,url:domain,status:"approved",revoked:{},version:currentlySelected?.version||"",createDate:dateString(),updateDate:dateString()};yakklConnectedDomainsStore=[...yakklConnectedDomainsStore,newDomain]}else{const existingDomain=yakklConnectedDomainsStore[existingDomainIndex];existingDomain.id=currentlySelected?.id||"";existingDomain.persona=currentlySelected?.persona||DEFAULT_PERSONA;existingDomain.name=domainTitle||domain;existingDomain.icon=domainLogo;existingDomain.addresses=accounts2;existingDomain.updateDate=dateString();existingDomain.version=currentlySelected?.version||existingDomain.version;existingDomain.chainId=currentlySelected?.shortcuts?.chainId||1;existingDomain.url=domain;existingDomain.status="approved";yakklConnectedDomainsStore=[...yakklConnectedDomainsStore.slice(0,existingDomainIndex),existingDomain,...yakklConnectedDomainsStore.slice(existingDomainIndex+1)]}await setYakklConnectedDomainsStorage(yakklConnectedDomainsStore);for(const account of yakklAccountsStore){const accountIndex=yakklAccountsStore.findIndex(a=>a.address===account.address);if(accountIndex!==-1){const existingAccount=yakklAccountsStore[accountIndex];if(!Array.isArray(existingAccount.connectedDomains)){existingAccount.connectedDomains=[]}const isSelected=accounts2.some(acc=>acc.address===account.address);if(isSelected){if(!existingAccount.connectedDomains.includes(domain)){existingAccount.connectedDomains.push(domain)}}else{const domainIndex=existingAccount.connectedDomains.indexOf(domain);if(domainIndex!==-1){existingAccount.connectedDomains.splice(domainIndex,1)}}yakklAccountsStore[accountIndex]=existingAccount}}await setYakklAccountsStorage(yakklAccountsStore);if(dappInterface);else if(stream);else{await handleReject("Request failed to send to dapp due to missing port stream. Access to YAKKL® is rejected.")}await close()}catch(error){log.error("Dapp - accounts process error:",true,error);errorValue=error}}async function close(){if(browserSvelte){try{if(portManager);}catch(e){log.warn("Port did not go idle in time",false,e)}safeLogout()}}let $$settled=true;let $$inner_payload;function $$render_inner($$payload2){const each_array=ensure_array_like(filteredAddressesArray);head($$payload2,$$payload3=>{$$payload3.title=`<title>${escape_html(title)}</title>`});Failed($$payload2,{title:"Failed!",content:errorValue,onReject:handleReject,get show(){return showFailure},set show($$value){showFailure=$$value;$$settled=false}});$$payload2.out+=`\x3c!----\x3e `;Confirmation($$payload2,{title:`Connect to ${stringify(domain)}`,message:`This will connect ${stringify(domain)} to ${stringify(accountsPicked)} of your addresses! Do you wish to continue?`,onConfirm:handleProcess,get show(){return showConfirm},set show($$value){showConfirm=$$value;$$settled=false}});$$payload2.out+=`\x3c!----\x3e  <div class="flex flex-col h-full max-h-screen overflow-hidden">`;push_element($$payload2,"div",433,0);$$payload2.out+=`<div class="p-4 border-b border-base-300 flex-shrink-0">`;push_element($$payload2,"div",435,1);$$payload2.out+=`<div class="flex items-center justify-between">`;push_element($$payload2,"div",436,2);$$payload2.out+=`<div class="flex items-center gap-2 min-w-0">`;push_element($$payload2,"div",437,3);$$payload2.out+=`<img id="dappImageId" crossorigin="anonymous"${attr("src",domainLogo)} alt="Dapp logo" class="w-8 h-8 rounded-full flex-shrink-0"/>`;push_element($$payload2,"img",438,4);pop_element();$$payload2.out+=` <span class="font-semibold truncate">`;push_element($$payload2,"span",445,4);$$payload2.out+=`${escape_html(title)}</span>`;pop_element();$$payload2.out+=`</div>`;pop_element();$$payload2.out+=` <button class="btn btn-ghost btn-sm flex-shrink-0 svelte-526xh0" aria-label="Close">`;push_element($$payload2,"button",447,3);$$payload2.out+=`<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">`;push_element($$payload2,"svg",452,4);$$payload2.out+=`<path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd">`;push_element($$payload2,"path",458,5);$$payload2.out+=`</path>`;pop_element();$$payload2.out+=`</svg>`;pop_element();$$payload2.out+=`</button>`;pop_element();$$payload2.out+=`</div>`;pop_element();$$payload2.out+=`</div>`;pop_element();$$payload2.out+=` <div class="flex-1 p-6 overflow-hidden flex flex-col max-w-[428px]">`;push_element($$payload2,"div",469,1);$$payload2.out+=`<div class="text-center mb-4 flex-shrink-0">`;push_element($$payload2,"div",470,2);$$payload2.out+=`<h2 class="text-xl font-bold mb-2">`;push_element($$payload2,"h2",471,3);$$payload2.out+=`Select Accounts</h2>`;pop_element();$$payload2.out+=` <p class="text-base-content/80">`;push_element($$payload2,"p",472,3);$$payload2.out+=`Choose which accounts to connect to ${escape_html(domain)}</p>`;pop_element();$$payload2.out+=`</div>`;pop_element();$$payload2.out+=` <div class="overflow-y-auto flex-1 min-h-0 mb-4 svelte-526xh0">`;push_element($$payload2,"div",475,2);$$payload2.out+=`\x3c!--[--\x3e`;for(let $$index=0,$$length=each_array.length;$$index<$$length;$$index++){let address=each_array[$$index];if(address.address===currentlySelectedAddress){$$payload2.out+="\x3c!--[--\x3e";$$payload2.out+=`<div class="flex items-start gap-3 p-3 bg-base-200 rounded-lg mb-2">`;push_element($$payload2,"div",479,5);$$payload2.out+=`<input type="checkbox" class="checkbox checkbox-primary w-5 h-5 flex-shrink-0 text-2xl"${attr("checked",address.checked,true)}/>`;push_element($$payload2,"input",480,6);pop_element();$$payload2.out+=` <div class="flex flex-col">`;push_element($$payload2,"div",486,6);$$payload2.out+=`<span class="font-mono text-sm truncate"${attr("title",address.address)}>`;push_element($$payload2,"span",487,7);$$payload2.out+=`${escape_html(address.address)}</span>`;pop_element();$$payload2.out+=` <span class="badge badge-primary text-xs mt-1">`;push_element($$payload2,"span",490,7);$$payload2.out+=`Default account</span>`;pop_element();$$payload2.out+=`</div>`;pop_element();$$payload2.out+=`</div>`;pop_element()}else{$$payload2.out+="\x3c!--[!--\x3e";$$payload2.out+=`<div class="flex items-center gap-3 p-3 bg-base-200 rounded-lg mb-2">`;push_element($$payload2,"div",495,5);$$payload2.out+=`<input type="checkbox" class="checkbox checkbox-primary w-5 h-5 flex-shrink-0 text-2xl"${attr("checked",address.checked,true)}/>`;push_element($$payload2,"input",496,6);pop_element();$$payload2.out+=` <span class="font-mono text-sm truncate"${attr("title",address.address)}>`;push_element($$payload2,"span",502,6);$$payload2.out+=`${escape_html(address.address)}</span>`;pop_element();$$payload2.out+=`</div>`;pop_element()}$$payload2.out+=`\x3c!--]--\x3e`}$$payload2.out+=`\x3c!--]--\x3e</div>`;pop_element();$$payload2.out+=`</div>`;pop_element();$$payload2.out+=` <div class="p-4 border-t border-base-300 flex-shrink-0">`;push_element($$payload2,"div",511,1);$$payload2.out+=`<div class="flex gap-4 justify-end">`;push_element($$payload2,"div",512,2);$$payload2.out+=`<button class="btn btn-outline svelte-526xh0">`;push_element($$payload2,"button",513,3);$$payload2.out+=`Reject</button>`;pop_element();$$payload2.out+=` <button class="btn btn-primary svelte-526xh0">`;push_element($$payload2,"button",514,3);$$payload2.out+=`Connect</button>`;pop_element();$$payload2.out+=`</div>`;pop_element();$$payload2.out+=`</div>`;pop_element();$$payload2.out+=`</div>`;pop_element()}do{$$settled=true;$$inner_payload=copy_payload($$payload);$$render_inner($$inner_payload)}while(!$$settled);assign_payload($$payload,$$inner_payload);if($$store_subs)unsubscribe_stores($$store_subs);pop()}_page.render=function(){throw new Error("Component.render(...) is no longer valid in Svelte 5. See https://svelte.dev/docs/svelte/v5-migration-guide#Components-are-no-longer-classes for more information")};export{_page as default};
//# sourceMappingURL=_page.svelte.js.map
