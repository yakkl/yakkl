{"version":3,"file":"20.C-YjSPjI.js","sources":["../../../../../../src/lib/common/safeClientSendMessage.ts","../../../../../../src/routes/(dapp)/dapp/popups/approve/+page.svelte"],"sourcesContent":["import { browser_ext } from '$lib/common/environment';\nimport { log } from '$lib/managers/Logger';\n\n// Example:\n// const res = await safeClientSendMessage<StoreHashResponse>({\n//   type: 'STORE_SESSION_HASH',\n//   payload: encryptedHash\n// });\n\nexport async function safeClientSendMessage<T = any>(message: any, timeoutMs = 3000): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tlet isSettled = false;\n\n\t\tlog.info('safeClientSendMessage', false, { message });\n\n\t\tconst timeout = setTimeout(() => {\n\t\t\tif (!isSettled) {\n\t\t\t\tisSettled = true;\n\t\t\t\treject(new Error(`safeClientSendMessage timed out after ${timeoutMs} ms`));\n\t\t\t}\n\t\t}, timeoutMs);\n\n\t\ttry {\n\t\t\tbrowser_ext.runtime\n\t\t\t\t.sendMessage(message)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tif (!isSettled) {\n\t\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\t\tisSettled = true;\n\t\t\t\t\t\tresolve(response as T);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tif (!isSettled) {\n\t\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\t\tisSettled = true;\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t} catch (err) {\n\t\t\tif (!isSettled) {\n\t\t\t\tclearTimeout(timeout);\n\t\t\t\treject(err);\n\t\t\t}\n\t\t}\n\t});\n}\n","<script lang=\"ts\">\n\timport { browserSvelte } from '$lib/common/environment';\n\timport { page } from '$app/state';\n\t// The grayed out store items are for testing purposes used in the clearData function\n\timport {\n\t\tgetMiscStore,\n\t\tgetSettings,\n\t\tyakklDappConnectRequestStore,\n\t\tyakklMiscStore\n\t} from '$lib/common/stores';\n\timport { PATH_LOGIN, YAKKL_DAPP, DEFAULT_TITLE } from '$lib/common/constants';\n\timport { onMount } from 'svelte';\n\timport Copyright from '$lib/components/Copyright.svelte';\n\timport Failed from '$lib/components/Failed.svelte';\n\timport { log } from '$lib/common/logger-wrapper';\n\timport type { Runtime } from 'webextension-polyfill';\n\timport Warning from '$lib/components/Warning.svelte';\n\timport Confirmation from '$lib/components/Confirmation.svelte';\n\timport { createPortManagerWithStream } from '$lib/managers/PortManagerWithStream';\n\timport { safeNavigate, safeLogout } from '$lib/common/safeNavigate';\n\timport { safeClientSendMessage } from '$lib/common/safeClientSendMessage';\n\n\ttype RuntimePort = Runtime.Port | undefined;\n\t// let port: RuntimePort;\n\n\tlet showConfirm = $state(false);\n\tlet showSuccess = false;\n\tlet showFailure = $state(false);\n\tlet errorValue = $state('No domain/site name was found. Access to YAKKL® is denied.');\n\tlet domain: string = $state('');\n\tlet domainLogo: string = $state('');\n\tlet domainTitle: string = $state('');\n\tlet title: string = $state(DEFAULT_TITLE);\n\tlet requestId: string | null = null;\n\tlet method: string = $state('');\n\tlet message; // This gets passed letting the user know what the intent is\n\n\tlet portManager = createPortManagerWithStream(YAKKL_DAPP);\n\n\tif (browserSvelte) {\n\t\ttry {\n\t\t\trequestId = page.url.searchParams.get('requestId');\n\t\t\tconst methodParam = page.url.searchParams.get('method');\n\t\t\tif (methodParam) method = methodParam;\n\t\t\t$yakklDappConnectRequestStore = requestId;\n\t\t} catch (e) {\n\t\t\tlog.error(e);\n\t\t\thandleReject('No requestId or methodwas found. Access to YAKKL® is denied.');\n\t\t}\n\t}\n\n\t// NOTE: domains will be added (if not already there at the next step - if accounts)\n\tasync function handleProcess() {\n\t\tif (!browserSvelte) return;\n\n\t\ttry {\n\t\t\t// Store the request info in session storage so it persists after login\n\t\t\tsessionStorage.setItem(\n\t\t\t\t'yakklSigningRequest',\n\t\t\t\tJSON.stringify({\n\t\t\t\t\trequestId,\n\t\t\t\t\tmethod\n\t\t\t\t})\n\t\t\t);\n\n\t\t\treturn safeNavigate('/dapp/login?requestId=' + requestId + '&method=' + method);\n\t\t} catch (e) {\n\t\t\terrorValue = e as string;\n\t\t\tshowFailure = true;\n\t\t}\n\t}\n\n\t// We no longer need to do get_params since we can access the request data directly\n\tasync function onMessageListener(event: any) {\n\t\tif (!browserSvelte) return;\n\n\t\ttry {\n\t\t\tif (!domainLogo) domainLogo = '/images/failIcon48x48.png'; // Set default logo but change if favicon is present\n\n\t\t\tif (event.method === 'get_params') {\n\t\t\t\tif (!event?.result?.data) {\n\t\t\t\t\tawait handleReject('No request data was found. Access to YAKKL® is denied.');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst requestData = event.result.data;\n\n\t\t\t\t// Extract metadata from the correct location in the data structure\n\t\t\t\tconst metaData = requestData.metaData?.metaData || requestData.metaData;\n\t\t\t\tif (!metaData) {\n\t\t\t\t\tawait handleReject('Invalid request data structure. Access to YAKKL® is denied.');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdomainTitle = metaData.title;\n\t\t\t\tdomain = metaData.domain;\n\t\t\t\tdomainLogo = metaData.icon ?? '/images/failIcon48x48.png';\n\t\t\t\tmessage =\n\t\t\t\t\tmetaData.message ??\n\t\t\t\t\t'Nothing was passed to explain the intent of this approval. Be mindful of this request!';\n\n\t\t\t\tif (!requestId) requestId = requestData?.id ?? null;\n\t\t\t\tif (!requestId) {\n\t\t\t\t\tawait handleReject('No request ID was found. Access to YAKKL® is denied.');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the page title\n\t\t\t\ttitle = domainTitle || domain || DEFAULT_TITLE;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tlog.error(e);\n\t\t}\n\t}\n\n\t// Only use this for testing!\n\t// async function clearData() {\n\t//   ////\n\t//   // NOTE: Only enable these if you need to CLEAR everything out for testing!\n\t//   $yakklConnectedDomainsStore = null;\n\t//   await setYakklConnectedDomainsStorage([]);\n\t//   let yakklAccounts = [];\n\t//   yakklAccounts = await getYakklAccounts();\n\t//   log.debug('onMessageListener - 72 (approve):', false, 'Cleared all connected domains and accounts', $yakklConnectedDomainsStore, yakklAccounts);\n\t//   if (yakklAccounts.length > 0) {\n\t//     yakklAccounts = yakklAccounts.map((item) => {\n\t//       item.connectedDomains = [];\n\t//       return item;\n\t//     });\n\t//   }\n\t//   // Removed redundant loop for clearing connectedDomains\n\t//   $yakklAccountsStore = yakklAccounts;\n\t//   await setYakklAccountsStorage(yakklAccounts);\n\t//   log.debug('onMessageListener - 72 (approve):', false, 'Cleared all connected domains and accounts', $yakklConnectedDomainsStore, $yakklAccountsStore);\n\t//   // Comment out this section after testing for clearing\n\t//   ////\n\t// }\n\n\tonMount(async () => {\n\t\ttry {\n\t\t\tif (browserSvelte) {\n\t\t\t\tdomainLogo = '/images/failIcon48x48.png';\n\t\t\t\tconst settings = await getSettings();\n\t\t\t\tif (!settings.init || !settings.legal.termsAgreed) {\n\t\t\t\t\terrorValue =\n\t\t\t\t\t\t\"You must register and agree to the terms of service before using YAKKL®. Click on 'Open Wallet' to register.\";\n\t\t\t\t\tshowFailure = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tawait safeClientSendMessage({ type: 'clientReady' }); // Safeguard to ensure the client is ready before sending messages\n\n\t\t\t\t// Check if we're returning from login with a session token\n\t\t\t\tconst storedRequest = sessionStorage.getItem('yakklSigningRequest');\n\t\t\t\tif (storedRequest) {\n\t\t\t\t\tconst { requestId: storedRequestId, method: storedMethod } = JSON.parse(storedRequest);\n\t\t\t\t\trequestId = storedRequestId;\n\t\t\t\t\tmethod = storedMethod;\n\t\t\t\t\tsessionStorage.removeItem('yakklSigningRequest');\n\t\t\t\t}\n\n\t\t\t\tif (!requestId) {\n\t\t\t\t\terrorValue = 'Missing request ID';\n\t\t\t\t\tshowFailure = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst ok = await portManager.createPort();\n\t\t\t\tif (ok) {\n\t\t\t\t\tconst stream = portManager.getStream();\n\t\t\t\t\tstream?.on('data', onMessageListener);\n\t\t\t\t\tstream?.write({ method: 'get_params', id: requestId });\n\t\t\t\t}\n\n\t\t\t\t// REGISTER SESSION with background\n\t\t\t\tlog.info(\n\t\t\t\t\t'Approve: BEFORE - REGISTER_SESSION_PORT - requestId and port:',\n\t\t\t\t\tfalse,\n\t\t\t\t\trequestId,\n\t\t\t\t\tportManager.getPort()\n\t\t\t\t);\n\n\t\t\t\tportManager.setRequestId(requestId);\n\n\t\t\t\tawait safeClientSendMessage({\n\t\t\t\t\ttype: 'REGISTER_SESSION_PORT',\n\t\t\t\t\tport: portManager.getPort(),\n\t\t\t\t\trequestId\n\t\t\t\t});\n\n\t\t\t\tlog.info(\n\t\t\t\t\t'Approve: AFTER - REGISTER_SESSION_PORT - requestId and port:',\n\t\t\t\t\tfalse,\n\t\t\t\t\trequestId,\n\t\t\t\t\tportManager.getPort()\n\t\t\t\t);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tlog.error(e);\n\t\t}\n\t});\n\n\t// data must represent ProviderRpcError format\n\tasync function handleReject(message: string = 'User rejected the request.') {\n\t\ttry {\n\t\t\tshowConfirm = false;\n\t\t\tshowFailure = false;\n\t\t\tshowSuccess = false;\n\t\t\terrorValue = '';\n\n\t\t\tconst port = portManager?.getPort();\n\t\t\tif (port) {\n\t\t\t\tport.postMessage({\n\t\t\t\t\tid: requestId,\n\t\t\t\t\tmethod: 'error',\n\t\t\t\t\tresponse: {\n\t\t\t\t\t\ttype: 'YAKKL_RESPONSE',\n\t\t\t\t\t\tdata: { name: 'ProviderRpcError', code: 4001, message: message }\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (portManager) {\n\t\t\t\t\tawait portManager.waitForIdle(1500);\n\t\t\t\t\tportManager.disconnect();\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tlog.warn('Port did not go idle in time', false, e);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tlog.error(e);\n\t\t} finally {\n\t\t\tsafeLogout();\n\t\t}\n\t}\n\n\tfunction handleApprove() {\n\t\tshowConfirm = true;\n\t}\n</script>\n\n<svelte:head>\n\t<title>{title}</title>\n</svelte:head>\n\n<!-- <Warning\n  bind:show={showFailure}\n  title=\"Error\"\n  value={errorValue} /> -->\n\n<Failed bind:show={showFailure} title=\"Failed!\" content={errorValue} onReject={handleReject} />\n\n<Confirmation\n\tbind:show={showConfirm}\n\ttitle=\"Connect to {domain}\"\n\tmessage=\"This will connect {domain} to YAKKL®. Do you wish to continue?\"\n\tonConfirm={handleProcess}\n\tonReject={handleReject}\n/>\n\n<div class=\"flex flex-col h-full max-h-screen overflow-hidden\">\n\t<!-- Header -->\n\t<div class=\"p-4 border-b border-base-300 flex-shrink-0\">\n\t\t<div class=\"flex items-center justify-between\">\n\t\t\t<div class=\"flex items-center gap-2 min-w-0\">\n\t\t\t\t<img\n\t\t\t\t\tid=\"dappImageId\"\n\t\t\t\t\tcrossorigin=\"anonymous\"\n\t\t\t\t\tsrc={domainLogo}\n\t\t\t\t\talt=\"Dapp logo\"\n\t\t\t\t\tclass=\"w-8 h-8 rounded-full flex-shrink-0\"\n\t\t\t\t/>\n\t\t\t\t<span class=\"font-semibold truncate\">{title}</span>\n\t\t\t</div>\n\t\t\t<button\n\t\t\t\tonclick={() => handleReject()}\n\t\t\t\tclass=\"btn btn-ghost btn-sm flex-shrink-0\"\n\t\t\t\taria-label=\"Close\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\tclass=\"h-5 w-5\"\n\t\t\t\t\tviewBox=\"0 0 20 20\"\n\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\td=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t/>\n\t\t\t\t</svg>\n\t\t\t</button>\n\t\t</div>\n\t</div>\n\n\t<!-- Content -->\n\t<div class=\"flex-1 p-4 flex flex-col max-w-[428px]\">\n\t\t<div class=\"text-center mb-4 flex-shrink-0\">\n\t\t\t{#if method !== 'eth_requestAccounts' && method !== 'eth_sendTransaction' && method !== 'eth_signTypedData_v4' && method !== 'personal_sign'}\n\t\t\t\t<h2 class=\"text-xl font-bold mb-2\">Security Risk</h2>\n\t\t\t{:else}\n\t\t\t\t<h2 class=\"text-xl font-bold mb-2\">Connection Request</h2>\n\t\t\t\t<p class=\"text-base-content/80\">This site would like to:</p>\n\t\t\t{/if}\n\t\t</div>\n\n\t\t<div class=\"space-y-4 mb-4 overflow-y-auto flex-1 min-h-0\">\n\t\t\t<div class=\"flex items-center gap-3 p-3 bg-base-200 rounded-lg\">\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\tclass=\"h-6 w-6 text-primary flex-shrink-0\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\t\td=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n\t\t\t\t\t/>\n\t\t\t\t</svg>\n\t\t\t\t{#if method === 'eth_requestAccounts'}\n\t\t\t\t\t<span>1. Request approval to connect to your wallet addresses</span>\n\t\t\t\t{:else if method === 'eth_sendTransaction'}\n\t\t\t\t\t<span>1. Request approval to send a transaction</span>\n\t\t\t\t{:else if (method as string) === 'eth_signTypedData_v4' || (method as string) === 'personal_sign' || (method as string) === 'eth_signTransaction'}\n\t\t\t\t\t<span>1. Request approval to sign a message</span>\n\t\t\t\t{:else if method === 'wallet_requestPermissions' || method === 'wallet_revokePermissions' || method === 'wallet_getPermissions'}\n\t\t\t\t\t<!-- wallet_requestPermissions is the only one requiring user approval but added the other two for completeness -->\n\t\t\t\t\t<span>1. Request approval to connect to your wallet addresses</span>\n\t\t\t\t{:else if method === 'wallet_switchEthereumChain'}\n\t\t\t\t\t<span>1. Request approval to switch to a different network</span>\n\t\t\t\t\t<!-- {:else if method === 'wallet_addEthereumChain'}\n          <span>1. Request approval to add a new network</span> -->\n\t\t\t\t{:else}\n\t\t\t\t\t<span\n\t\t\t\t\t\t>Request approval for '{method}' but it is not supported by YAKKL® due to security\n\t\t\t\t\t\tconcerns.</span\n\t\t\t\t\t>\n\t\t\t\t{/if}\n\t\t\t</div>\n\n\t\t\t<!-- <div class=\"flex items-center gap-3 p-3 bg-base-200 rounded-lg\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6 text-primary flex-shrink-0\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n        </svg>\n        <span>2. Request approval for signing</span>\n      </div>\n\n      <div class=\"flex items-center gap-3 p-3 bg-base-200 rounded-lg\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6 text-primary flex-shrink-0\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n        </svg>\n        <span>3. Request approval for sending transactions</span>\n      </div> -->\n\t\t</div>\n\n\t\t<div class=\"bg-base-200 rounded-lg p-4 mb-4 flex-shrink-0\">\n\t\t\t<p class=\"text-sm text-base-content/70\">\n\t\t\t\t{#if method !== 'eth_requestAccounts' && method !== 'eth_sendTransaction' && method !== 'eth_signTypedData_v4' && method !== 'personal_sign' && method !== 'eth_signTransaction' && method !== 'wallet_requestPermissions' && method !== 'wallet_revokePermissions' && method !== 'wallet_getPermissions' && method !== 'wallet_switchEthereumChain'}\n\t\t\t\t\tThe request is a possible security risk and not allowed!\n\t\t\t\t{:else}\n\t\t\t\t\tBy connecting, you agree to allow this site to connect to your addresses. Any signing or\n\t\t\t\t\ttransaction requests will have an additional approval step.\n\t\t\t\t{/if}\n\t\t\t</p>\n\t\t</div>\n\t</div>\n\n\t<!-- Footer -->\n\t<div class=\"p-4 border-t border-base-300 flex-shrink-0\">\n\t\t<div class=\"flex gap-4 justify-end\">\n\t\t\t{#if method !== 'eth_requestAccounts' && method !== 'eth_sendTransaction' && method !== 'eth_signTypedData_v4' && method !== 'personal_sign' && method !== 'eth_signTransaction' && method !== 'wallet_requestPermissions' && method !== 'wallet_revokePermissions' && method !== 'wallet_getPermissions' && method !== 'wallet_switchEthereumChain'}\n\t\t\t\t<button\n\t\t\t\t\tonclick={() => handleReject('Unsupported method - Security risk: ' + method)}\n\t\t\t\t\tclass=\"btn btn-primary\"\n\t\t\t\t>\n\t\t\t\t\tReject\n\t\t\t\t</button>\n\t\t\t{:else}\n\t\t\t\t<button onclick={handleApprove} class=\"btn btn-primary\">\n\t\t\t\t\t{#if method === 'eth_requestAccounts'}\n\t\t\t\t\t\tConnect\n\t\t\t\t\t{:else if method === 'eth_sendTransaction'}\n\t\t\t\t\t\tApprove Transaction\n\t\t\t\t\t{:else if (method as string) === 'eth_signTypedData_v4' || (method as string) === 'personal_sign' || (method as string) === 'eth_signTransaction'}\n\t\t\t\t\t\tApprove Signing\n\t\t\t\t\t{:else if method === 'wallet_requestPermissions'}\n\t\t\t\t\t\tApprove Connection\n\t\t\t\t\t{:else if method === 'wallet_revokePermissions'}\n\t\t\t\t\t\tRevoke Connection\n\t\t\t\t\t{:else if method === 'wallet_getPermissions'}\n\t\t\t\t\t\tView Permissions\n\t\t\t\t\t{:else if method === 'wallet_switchEthereumChain'}\n\t\t\t\t\t\tSwitch Network\n\t\t\t\t\t{/if}\n\t\t\t\t</button>\n\t\t\t{/if}\n\t\t</div>\n\t</div>\n</div>\n\n<Copyright />\n\n<style>\n\t/* Add smooth transitions */\n\t.btn {\n\t\ttransition: all 0.2s ease;\n\t}\n\n\t/* Improve hover states */\n\t.btn:hover {\n\t\ttransform: translateY(-1px);\n\t}\n\n\t/* Custom scrollbar */\n\t.overflow-y-auto {\n\t\tscrollbar-width: thin;\n\t\tscrollbar-color: hsl(var(--p)) transparent;\n\t}\n\n\t.overflow-y-auto::-webkit-scrollbar {\n\t\twidth: 6px;\n\t}\n\n\t.overflow-y-auto::-webkit-scrollbar-track {\n\t\tbackground: transparent;\n\t}\n\n\t.overflow-y-auto::-webkit-scrollbar-thumb {\n\t\tbackground-color: hsl(var(--p));\n\t\tborder-radius: 3px;\n\t}\n</style>\n"],"names":["async","safeClientSendMessage","message","timeoutMs","Promise","resolve","reject","isSettled","log","info","timeout","setTimeout","Error","browser_ext","runtime","sendMessage","then","response","clearTimeout","catch","err","handleApprove","_","showConfirm","handleReject","$.get","method","$.tag","$.state","showSuccess","showFailure","errorValue","domain","domainLogo","domainTitle","title","$.proxy","DEFAULT_TITLE","requestId","portManager","createPortManagerWithStream","YAKKL_DAPP","browserSvelte","page","url","searchParams","get","methodParam","$.set","$.store_set","yakklDappConnectRequestStore","e","error","handleProcess","sessionStorage","setItem","JSON","stringify","safeNavigate","set","onMessageListener","event","$.strict_equals","_a","result","data","requestData","metaData","_b","icon","id","onMount","settings","getSettings","init","legal","termsAgreed","type","storedRequest","getItem","storedRequestId","storedMethod","parse","removeItem","ok","createPort","stream","getStream","on","write","getPort","setRequestId","port","postMessage","name","code","waitForIdle","disconnect","log$1","warn","safeLogout","$$value","consequent","$$render","alternate","consequent_5","alternate_5","consequent_4","alternate_4","consequent_3","alternate_3","consequent_2","alternate_2","consequent_1","alternate_1","consequent_6","alternate_6","consequent_14","consequent_13","alternate_13","consequent_12","alternate_12","consequent_11","alternate_11","consequent_10","alternate_10","consequent_9","alternate_9","consequent_8","alternate_8","consequent_7","alternate_7"],"mappings":"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"}