import{c as check_target,l as legacy_api}from"../chunks/BXFaAXnq.js";import"../chunks/Doq7snb5.js";import{p as push,t as template_effect,a as pop,F as FILENAME,o as onMount,f as first_child,c as child,s as sibling,g as get,a7 as untrack,e as set,m as mutable_source,b as strict_equals,a$ as invalidate_inner_signals,r as reset,j as next}from"../chunks/BaS8d5lg.js";import{a as assign}from"../chunks/CbeU9pgp.js";import{a as add_locations}from"../chunks/3AhEABF_.js";import{s as set_text}from"../chunks/Cmwrv3PW.js";import{i as if_block}from"../chunks/Q1yPWpQ-.js";import{e as each,i as index}from"../chunks/DraJ8LN-.js";import{a as append,f as from_html}from"../chunks/Cm3jf07C.js";import{v as validate_store}from"../chunks/Dv9a3G0k.js";import{b as bind_select_value,r as remove_input_defaults,s as set_attribute}from"../chunks/DTBsVM-c.js";import{s as set_class}from"../chunks/DX_EEhpR.js";import{d as delegate,b as apply,e as event}from"../chunks/DiU70Is3.js";import{b as bind_value}from"../chunks/B6q982nR.js";import{p as preventDefault}from"../chunks/Dh85oLqR.js";import{i as init}from"../chunks/D9iNYspi.js";import{a as store_get,s as setup_stores,d as store_mutate}from"../chunks/CViNpZsE.js";import{l as log_if_contains_state}from"../chunks/DZ17DrFv.js";import{c as createForm}from"../chunks/CEKklR__.js";import{c as create$3,a as create$6,b as create$9}from"../chunks/B4Ku5_Cd.js";import{g as goto}from"../chunks/CkqS9PXN.js";import{ae as PATH_WELCOME,au as DEFAULT_DERIVED_PATH_ETH,g as getSettings,v as getProfile,x as isEncryptedData,z as decryptData,aC as randomBytes,aD as Mnemonic,av as HDNodeWallet,ab as dateString,aw as AccountTypeCategory,R as encryptData,p as getYakklPrimaryAccounts,ax as setYakklPrimaryAccountsStorage,o as getYakklAccounts,az as setYakklAccountsStorage,am as setProfileStorage,u as setSettingsStorage,ak as setYakklCurrentlySelectedStorage,H as yakklMiscStore,O as YAKKL_ZERO_ADDRESS,M as PATH_ACCOUNTS_ETHEREUM_CREATE_PRIMARY}from"../chunks/Cb2naUpm.js";import"../chunks/WDN37msH.js";import{b as addressExist}from"../chunks/BgnL0Zd7.js";import{b as browserSvelte}from"../chunks/CgCfpVku.js";import"../chunks/z-nmOEXa.js";import{d as deepCopy,j as getSymbol,k as incrementProperty}from"../chunks/CnIbzB-6.js";import{g as getWallet}from"../chunks/Bsa3XR3h.js";import"../chunks/Dw28gLPr.js";import"../chunks/D-aJ6pD4.js";import{p as prop}from"../chunks/BYboeQtC.js";import{E as ErrorNoAction}from"../chunks/2Ogrppv5.js";Cancel[FILENAME]="src/lib/components/Cancel.svelte";var root$1=add_locations(from_html(`<button><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" d="M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg></button>`),Cancel[FILENAME],[[11,0,[[12,1,[[20,2]]]]]]);function Cancel($$anchor,$$props){check_target(new.target);push($$props,true,Cancel);let defaultClass=prop($$props,"defaultClass",3,"right-0 top-0"),path=prop($$props,"path",3,PATH_WELCOME),handle=prop($$props,"handle",3,()=>goto(path()));var button=root$1();button.__click=function(...$$args){apply(handle,this,$$args,Cancel,[11,79])};template_effect(()=>set_class(button,1,`btn btn-sm btn-circle btn-outline z-10 ${defaultClass()??""}`));append($$anchor,button);return pop({...legacy_api()})}delegate(["click"]);_page[FILENAME]="src/routes/(wallet)/import/import-phrase/+page.svelte";var root_1=add_locations(from_html(`<small class="text-red-800 animate-pulse"> </small>`),_page[FILENAME],[[565,6]]);var root_2=add_locations(from_html(`<small class="text-red-800 animate-pulse"> </small>`),_page[FILENAME],[[578,6]]);var root_3=add_locations(from_html(`<div class="flex space-x-2 mb-3"><span class="inline-block w-[5%] h-[35px] pt-1 text-md justify-center text-base-content"></span> <input type="password" class="input input-bordered input-primary w-full" autocomplete="off"/></div>`),_page[FILENAME],[[641,6,[[642,7],[647,7]]]]);var root=add_locations(from_html(`<!> <!> <div class="flex flex-col h-full w-full relative justify-center left-0 z-5 text-base-content bg-base-100"><div><span class="block w-full px-1 text-xl font-extrabold border-none text-center">Import - Secret Recovery Phrase</span></div> <hr class="mb-3"/> <p class="ml-5 mr-5 p-2 text-small border-2 border-red-200 bg-red-50 text-red-900 rounded-md" aria-label="Private Key warning">Please be careful! <strong>This Secret Recovery Phrase is important!</strong>. A bad actor could\n\t\ttake the content of your wallet if they have access to your Private Key or Secret Recovery\n\t\tPhrase! This process will restore all of the accounts that were created by YAKKL only! If you\n\t\timported existing private keys from another wallet then you will need to do so again.</p> <div class="pt-2 ml-5 mr-5 text-base-content"><div class="h-[650px]"><form class="px-5"><div class="my-1"><select id="words" class="block w-full px-4 md:py-2 py-1 text-xl font-normal text-base-content bg-clip-padding border border-solid border-gray-300 rounded-md"><option>12 Word Secret Phrase</option><option>15 Word Secret Phrase</option><option>18 Word Secret Phrase</option><option>21 Word Secret Phrase</option><option selected>24 Word Secret Phrase</option></select> <input id="userName" class="block w-full px-4 md:py-2 py-1 mt-1 text-xl font-normal input input-bordered input-primary" placeholder="Username"/> <!> <input id="password" type="password" class="block w-full px-4 md:py-2 py-1 mt-4 text-xl font-normal input input-bordered input-primary" placeholder="Password" autocomplete="off" required/> <!> <div class="flex ml-1"><div><div class="form-check"><input id="seePassword" class="form-check-input appearance-none h-4 w-4 checkbox-primary rounded-full float-left mr-2 cursor-pointer" type="checkbox" value=""/> <label class="form-check-label text-sm inline-block label-text" for="seePassword">Show Password</label></div></div></div> <div class="flex ml-1 mt-2"><div><div class="form-check"><input id="subaccounts" class="form-check-input appearance-none h-4 w-4 checkbox-primary rounded-full float-left mr-2 cursor-pointer" type="checkbox" value="" checked/> <label class="form-check-label text-sm inline-block label-text" for="subaccounts">Recover Subportfolio Accounts</label></div></div></div></div> <hr/> <div class="flex ml-1 mt-4"><div><div class="form-check"><input id="seeWords" class="form-check-input appearance-none h-4 w-4 checkbox-primary rounded-full float-left mr-2 cursor-pointer" type="checkbox" value=""/> <label class="form-check-label text-sm inline-block label-text" for="seePassword">Show Secret Recovery Phrase Words</label></div></div></div> <div class="mt-4"></div> <div><div class="flex space-x-2 justify-center"><button aria-label="Cancel" class="btn-sm btn-accent uppercase rounded-full">Cancel</button> <button type="submit" id="recover" class="btn-sm btn-primary uppercase rounded-full ml-2" aria-label="Confirm">Recover</button></div></div></form></div></div></div>`,1),_page[FILENAME],[[520,0,[[523,1,[[524,2]]],[529,1],[531,1,[[535,21]]],[541,1,[[542,2,[[543,3,[[544,4,[[545,5,[[551,6],[552,6],[553,6],[554,6],[555,6]]],[557,5],[567,5],[588,5,[[589,6,[[590,7,[[591,8],[598,8]]]]]]],[604,5,[[605,6,[[606,7,[[607,8],[615,8]]]]]]]]],[622,4],[623,4,[[624,5,[[625,6,[[626,7],[633,7]]]]]]],[639,4],[660,4,[[661,5,[[664,6],[671,6]]]]]]]]]]]]]]);function _page($$anchor,$$props){check_target(new.target);push($$props,false,_page);const[$$stores,$$cleanup]=setup_stores();const $yakklMiscStore=()=>(validate_store(yakklMiscStore,"yakklMiscStore"),store_get(yakklMiscStore,"$yakklMiscStore",$$stores));const $form=()=>(validate_store(form,"form"),store_get(form,"$form",$$stores));const $errors=()=>(validate_store(errors,"errors"),store_get(errors,"$errors",$$stores));let currentlySelected;let error=mutable_source(false);let errorValue=mutable_source();let showConfetti=false;let elements;let selected=mutable_source("24");let subAccounts=true;async function processSecretPhaseRecovery(data){if(browserSvelte){try{createPortfolioAccount(data.secretPhrase);clearData(data)}catch(e){set(errorValue,e);clearData(data);set(error,true)}}}async function createPortfolioAccount(mnemonic=""){var _a,_b,_c,_d;try{if(browserSvelte){let id="";let yakklSettings;let profile;let yakklCurrentlySelected;let accountName="Portfolio Account 1";let ethWallet;let mnemonic2="";let preferences;let displayDate;let derivedPath=DEFAULT_DERIVED_PATH_ETH;yakklSettings=await getSettings();if(!yakklSettings){throw"The settings data has not been initialized. This could be due to not yet registered or data could be incomplete which requires registering again. If unable to re-register then uninstall and reinstall. No Ethereum data will be impacted."}id=yakklSettings.id;profile=await getProfile();if(!profile){set(errorValue,`User  was not found OR password is not correct`);throw get(errorValue)}if(!profile.data||!$yakklMiscStore()){throw"Profile data does not appear to be encrypted. Please register or re-register. Thank you."}if(isEncryptedData(profile.data)){await decryptData(profile.data,$yakklMiscStore()).then(result=>{profile.data=result})}profile.data.meta={};preferences=profile.preferences;let index2=profile.data.accountIndex??0;derivedPath=`${DEFAULT_DERIVED_PATH_ETH}${index2}'/0/0`;let entropy;if(!mnemonic2){let words=randomBytes(!preferences?32:!preferences.words?32:preferences.words);let randomMnemonic=Mnemonic.fromEntropy(words);ethWallet=HDNodeWallet.fromMnemonic(randomMnemonic,derivedPath)}const{exists:exists,table:table}=await addressExist(ethWallet.address);if(exists){throw`The Ethereum Wallet (Portfolio Account) was not able to be created. Address already exists in ${table}. Please try again.`}if(!ethWallet){throw"The Ethereum Wallet (Portfolio Account) was not able to be created. Please try again."}let currentDate=dateString();displayDate=new Date(currentDate);profile.data.accountIndex=index2+1;let yakklAccount={id:profile.id,index:index2,blockchain:currentlySelected.shortcuts.network.blockchain,smartContract:false,address:ethWallet.address,alias:"",accountType:AccountTypeCategory.PRIMARY,name:!accountName?`Top Level Account ${index2+1}`:accountName,description:"",primaryAccount:null,data:{extendedKey:ethWallet.extendedKey,privateKey:ethWallet.privateKey,publicKey:ethWallet.publicKey,publicKeyUncompressed:ethWallet.publicKey,path:ethWallet.path?ethWallet.path:derivedPath,pathIndex:index2,fingerPrint:ethWallet.fingerprint,parentFingerPrint:ethWallet.parentFingerprint,chainCode:ethWallet.chainCode,assignedTo:[]},quantity:0n,class:"Default",level:"L1",isSigner:true,avatar:"",tags:[currentlySelected.shortcuts.network.blockchain,"primary"],includeInPortfolio:true,connectedDomains:[],createDate:currentDate,updateDate:currentDate,version:""};let yakklPrimaryAccount={id:yakklAccount.id,name:yakklAccount.name,address:yakklAccount.address,quantity:yakklAccount.quantity,index:index2,data:{privateKey:ethWallet.privateKey,publicKey:ethWallet.publicKey,path:ethWallet.path?ethWallet.path:derivedPath,pathIndex:index2,fingerPrint:ethWallet.fingerprint,parentFingerPrint:ethWallet.parentFingerprint,chainCode:ethWallet.chainCode,extendedKey:ethWallet.extendedKey,mnemonic:(_a=ethWallet.mnemonic)==null?void 0:_a.phrase,entropy:entropy,password:(_b=ethWallet.mnemonic)==null?void 0:_b.password,publicKeyUncompressed:ethWallet.publicKey,wordCount:(_c=ethWallet.mnemonic)==null?void 0:_c.phrase.split(" ").length,wordListLocale:(_d=ethWallet.mnemonic)==null?void 0:_d.wordlist.locale},account:yakklAccount,subIndex:0,subAccounts:[],createDate:yakklAccount.createDate,updateDate:yakklAccount.updateDate,version:""};let yakklPrimaryAccountEnc=deepCopy(yakklPrimaryAccount);await encryptData(yakklPrimaryAccount.data,$yakklMiscStore()).then(result=>{yakklPrimaryAccountEnc.data=result});yakklPrimaryAccountEnc.account=yakklAccount;await encryptData(yakklAccount.data,$yakklMiscStore()).then(result=>{yakklPrimaryAccountEnc.account.data=result});let yakklPrimaryAccounts=[];let primaryAccountsStorage=await getYakklPrimaryAccounts();if((primaryAccountsStorage==null?void 0:primaryAccountsStorage.length)>0){yakklPrimaryAccounts=primaryAccountsStorage}if(yakklPrimaryAccountEnc){yakklPrimaryAccounts.push(yakklPrimaryAccountEnc);await setYakklPrimaryAccountsStorage(yakklPrimaryAccounts)}let profileIndex=profile.data.primaryAccounts.push(yakklPrimaryAccountEnc);let yakklAccounts=[];let accountsStorage=await getYakklAccounts();if((accountsStorage==null?void 0:accountsStorage.length)>0){yakklAccounts=accountsStorage}yakklPrimaryAccountEnc.account.primaryAccount=null;yakklAccounts.push(yakklPrimaryAccountEnc.account);await setYakklAccountsStorage(yakklAccounts);await ethWallet.signMessage($yakklMiscStore()).then(result=>{profile.data.sig=result});let profileEnc=deepCopy(profile);await encryptData(profileEnc.data,$yakklMiscStore()).then(result=>{profileEnc.data=result});if(profileEnc){await setProfileStorage(profileEnc);yakklSettings.init=assign(currentlySelected.shortcuts,"init",true,"src/​routes/​(wallet)/​import/​import-phrase/​+page.svelte:229:29");yakklSettings.isLocked=assign(currentlySelected.shortcuts,"isLocked",false,"src/​routes/​(wallet)/​import/​import-phrase/​+page.svelte:230:33");await setSettingsStorage(yakklSettings);accountName=yakklAccount.name;yakklCurrentlySelected=currentlySelected;yakklCurrentlySelected.id=profile.id;yakklCurrentlySelected.preferences.locale=preferences.locale;yakklCurrentlySelected.preferences.currency=preferences.currency;yakklCurrentlySelected.shortcuts.blockchain=yakklAccount.blockchain;yakklCurrentlySelected.shortcuts.symbol=getSymbol(yakklAccount.blockchain);yakklCurrentlySelected.shortcuts.isLocked=false;yakklCurrentlySelected.shortcuts.showTestNetworks=preferences.showTestNetworks;yakklCurrentlySelected.shortcuts.profile.name=profile.data.name;yakklCurrentlySelected.shortcuts.profile.email=profile.data.email;yakklCurrentlySelected.shortcuts.primary=yakklPrimaryAccountEnc;yakklCurrentlySelected.shortcuts.address=yakklAccount.address;yakklCurrentlySelected.shortcuts.accountName=accountName;yakklCurrentlySelected.shortcuts.accountType=AccountTypeCategory.PRIMARY;yakklCurrentlySelected.shortcuts.smartContract=false;yakklCurrentlySelected.data.primaryAccount=yakklPrimaryAccountEnc;yakklCurrentlySelected.data.account=yakklAccount;yakklCurrentlySelected.createDate=yakklAccount.createDate;yakklCurrentlySelected.updateDate=yakklAccount.updateDate;let currentDeepCopy=deepCopy(yakklCurrentlySelected);await setYakklCurrentlySelectedStorage(yakklCurrentlySelected);currentlySelected=currentDeepCopy;if(subAccounts){let derivedIndex=0;while(true){const dPath=`${DEFAULT_DERIVED_PATH_ETH}${index2}'/0/${derivedIndex}}`;const randomMnemonic=yakklPrimaryAccount.data.mnemonic;const ethWallet2=HDNodeWallet.fromPhrase(randomMnemonic,derivedPath);const wallet=getWallet(ethWallet2.privateKey);const transactionCount=await wallet.getTransactionCount();if(strict_equals(transactionCount,0)){break}let addressDerived=wallet.address;incrementProperty(yakklPrimaryAccount,"subIndex");let yakklAccount2={id:profile.id,index:yakklPrimaryAccount.subIndex??0>0?(yakklPrimaryAccount.subIndex??1)-1:0,blockchain:currentlySelected.shortcuts.network.blockchain,smartContract:false,address:addressDerived,alias:"",accountType:AccountTypeCategory.SUB,name:`Account ${yakklPrimaryAccount.subIndex}`,description:"",primaryAccount:yakklPrimaryAccount,data:{extendedKey:ethWallet2.extendedKey,privateKey:ethWallet2.privateKey,publicKey:ethWallet2.publicKey,publicKeyUncompressed:ethWallet2.publicKey,path:ethWallet2.path?ethWallet2.path:dPath,pathIndex:ethWallet2.index,fingerPrint:ethWallet2.fingerprint,parentFingerPrint:ethWallet2.parentFingerprint,chainCode:ethWallet2.chainCode,assignedTo:[]},quantity:0n,class:"Default",level:"L1",isSigner:true,avatar:"",tags:[currentlySelected.shortcuts.network.blockchain,"sub"],includeInPortfolio:true,connectedDomains:[],createDate:currentDate,updateDate:currentDate,version:""};let yakklAccountEnc=deepCopy(yakklAccount2);await encryptData(yakklAccount2.data,$yakklMiscStore()).then(result=>{yakklAccountEnc.data=result});if(yakklPrimaryAccount.subAccounts){yakklPrimaryAccount.subAccounts.push(yakklAccountEnc)}profile.data.primaryAccounts[profileIndex-1]=yakklPrimaryAccount;setYakklPrimaryAccountsStorage(profile.data.primaryAccounts);let profileEnc2=deepCopy(profile);await encryptData(profile.data,$yakklMiscStore()).then(result=>{profileEnc2.data=result});await setProfileStorage(profileEnc2);derivedIndex++}}showConfetti=true;goto(PATH_WELCOME)}}}catch(e){set(error,true);set(errorValue,`Your Wallet did not initialize for the following reason: ${e}`);console.log(...log_if_contains_state("log",get(errorValue)))}}const{form:form,errors:errors,handleChange:handleChange,handleSubmit:handleSubmit}=createForm({initialValues:{userName:"",password:"",confirmPassword:"",secretPhrase:""},validationSchema:create$3().shape({userName:create$6().required("Please enter your username"),password:create$6().required("Please enter your password. It must be at least 8 characters").matches(/^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*#?&])[A-Za-z\d@$!%*#?&]{8,}$/,"Must Contain at least 8 Characters (12 Characters are best), One Uppercase, One Lowercase, One Number and one special case Character"),confirmPassword:create$6().oneOf([create$9("password"),void 0],"Passwords must match")}),onSubmit:data=>{try{const elements2=document.querySelectorAll("[data-id]");let srp="";if(elements2){elements2.forEach(el=>{srp+=el.value+" "});data.secretPhrase=srp.trim();processSecretPhaseRecovery(data)}else{throw new Error("Your Secret Phrase does not seem to correct. Check the formatting. You can enter each word and it MUST BE IN ORDER -OR- paste the whole phrase after copying from your backup into any field.")}}catch(e){console.log(...log_if_contains_state("log",e));clearData(data)}}});function clearData(data){store_mutate(form,untrack($form).userName=assign(data,"userName","","src/​routes/​(wallet)/​import/​import-phrase/​+page.svelte:377:19"),untrack($form));store_mutate(form,untrack($form).password=assign(data,"password","","src/​routes/​(wallet)/​import/​import-phrase/​+page.svelte:378:19"),untrack($form));store_mutate(form,untrack($form).confirmPassword=assign(data,"confirmPassword","","src/​routes/​(wallet)/​import/​import-phrase/​+page.svelte:379:26"),untrack($form));data.secretPhrase="";const elements2=document.querySelectorAll("[data-id]");elements2.forEach(el=>{el.value=""})}function hideShowWords(){let count=parseInt(get(selected));let element;let element_text;for(let wordCount=13;wordCount<=24;wordCount++){element_text=document.getElementById(`word_text_${wordCount}`);element=document.getElementById(`word_${wordCount}`);if(element_text&&element){element_text.style.display="block";element.style.display="block"}}for(let wordCount=24;wordCount>count;wordCount--){element_text=document.getElementById(`word_text_${wordCount}`);element=document.getElementById(`word_${wordCount}`);if(element_text&&element){if(strict_equals(element_text.style.display,"none")){element_text.style.display="block"}else{element_text.style.display="none"}if(strict_equals(element.style.display,"none")){element.style.display="block"}else{element.style.display="none"}}}}function toggleVisability(){let x=document.getElementById("password");if(x&&x.type){if(strict_equals(x.type,"password")){x.type="text"}else{x.type="password"}}x=document.getElementById("confirmPassword");if(x&&x.type){if(strict_equals(x.type,"password")){x.type="text"}else{x.type="password"}}}function toggleWordsVisability(){elements=document.querySelectorAll("[data-id]");elements.forEach(el=>{if(strict_equals(el.type,"password")){el.type="text"}else{el.type="password"}})}function handlePaste(e){e.preventDefault()}onMount(()=>{try{hideShowWords();document.addEventListener("paste",function(e){if(e.clipboardData){const target=e.target;if(target&&strict_equals(target.type,"text")){let data=e.clipboardData.getData("Text");const words=data.split(" ");const nodes=document.querySelectorAll("[data-id]");nodes.forEach((node,index2)=>{node.value=words[index2]||""})}}})}catch(e){console.log(...log_if_contains_state("log",e));set(errorValue,e);set(error,true)}});function handleCancel(e){if(strict_equals(currentlySelected.shortcuts.address,YAKKL_ZERO_ADDRESS)){goto(PATH_ACCOUNTS_ETHEREUM_CREATE_PRIMARY)}else{goto(PATH_WELCOME)}}function handleSubaccounts(e){subAccounts=!subAccounts}init();var fragment=root();var node_1=first_child(fragment);ErrorNoAction(node_1,{get value(){return get(errorValue)},get show(){return get(error)},set show($$value){set(error,$$value)},$$legacy:true});var node_2=sibling(node_1,2);Cancel(node_2,{defaultClass:"absolute right-3 top-3"});var div=sibling(node_2,2);var div_1=sibling(child(div),6);var div_2=child(div_1);var form_1=child(div_2);var div_3=child(form_1);var select=child(div_3);template_effect(()=>{get(selected);invalidate_inner_signals(()=>{})});var option=child(select);option.value=option.__value="12";var option_1=sibling(option);option_1.value=option_1.__value="15";var option_2=sibling(option_1);option_2.value=option_2.__value="18";var option_3=sibling(option_2);option_3.value=option_3.__value="21";var option_4=sibling(option_3);option_4.value=option_4.__value="24";reset(select);var input=sibling(select,2);remove_input_defaults(input);var node_3=sibling(input,2);{var consequent=$$anchor2=>{var small=root_1();var text=child(small,true);reset(small);template_effect(()=>set_text(text,$errors().userName));append($$anchor2,small)};if_block(node_3,$$render=>{if($errors().userName)$$render(consequent)})}var input_1=sibling(node_3,2);remove_input_defaults(input_1);var node_4=sibling(input_1,2);{var consequent_1=$$anchor2=>{var small_1=root_2();var text_1=child(small_1,true);reset(small_1);template_effect(()=>set_text(text_1,$errors().password));append($$anchor2,small_1)};if_block(node_4,$$render=>{if($errors().password)$$render(consequent_1)})}var div_4=sibling(node_4,2);var div_5=child(div_4);var div_6=child(div_5);var input_2=child(div_6);next(2);reset(div_6);reset(div_5);reset(div_4);var div_7=sibling(div_4,2);var div_8=child(div_7);var div_9=child(div_8);var input_3=child(div_9);remove_input_defaults(input_3);next(2);reset(div_9);reset(div_8);reset(div_7);reset(div_3);var div_10=sibling(div_3,4);var div_11=child(div_10);var div_12=child(div_11);var input_4=child(div_12);next(2);reset(div_12);reset(div_11);reset(div_10);var div_13=sibling(div_10,2);each(div_13,4,()=>Array(24),index,($$anchor2,_,index2)=>{var div_14=root_3();var span=child(div_14);set_attribute(span,"id",`word_text_${index2+1}`);span.textContent=`${index2+1}.`;var input_5=sibling(span,2);set_attribute(input_5,"id",`word_${index2+1}`);set_attribute(input_5,"data-id",index2+1);set_attribute(input_5,"aria-label",`Word ${index2+1}`);reset(div_14);event("paste",input_5,handlePaste);append($$anchor2,div_14)});reset(div_13);var div_15=sibling(div_13,2);set_class(div_15,1," mb-20");var div_16=child(div_15);var button=child(div_16);var button_1=sibling(button,2);reset(div_16);reset(div_15);reset(form_1);reset(div_2);reset(div_1);reset(div);bind_select_value(select,()=>get(selected),$$value=>set(selected,$$value));event("change",select,hideShowWords);bind_value(input,()=>$form().userName,$$value=>store_mutate(form,untrack($form).userName=$$value,untrack($form)));event("change",input,function(...$$args){apply(()=>handleChange,this,$$args,_page,[562,17])});bind_value(input_1,()=>$form().password,$$value=>store_mutate(form,untrack($form).password=$$value,untrack($form)));event("change",input_1,function(...$$args){apply(()=>handleChange,this,$$args,_page,[574,17])});event("click",input_2,toggleVisability);event("click",input_3,handleSubaccounts);event("click",input_4,toggleWordsVisability);event("click",button,preventDefault(handleCancel));event("click",button_1,function(...$$args){apply(()=>handleSubmit,this,$$args,_page,[674,17])});event("submit",form_1,preventDefault(function(...$$args){apply(()=>handleSubmit,this,$$args,_page,[543,48])}));append($$anchor,fragment);var $$pop=pop({...legacy_api()});$$cleanup();return $$pop}export{_page as component};
//# sourceMappingURL=42.B3E-oF-1.js.map
