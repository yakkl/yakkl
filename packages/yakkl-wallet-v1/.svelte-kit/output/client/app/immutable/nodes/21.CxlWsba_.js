import{c as check_target,l as legacy_api}from"../chunks/BXFaAXnq.js";import{p as push,h as tag,i as state,ae as proxy,o as onMount,e as set,f as first_child,s as sibling,c as child,t as template_effect,a as pop,g as get,F as FILENAME,$ as $document,r as reset,b as strict_equals}from"../chunks/BaS8d5lg.js";import{a as add_locations}from"../chunks/3AhEABF_.js";import{s as set_text}from"../chunks/Cmwrv3PW.js";import{a as append,f as from_html}from"../chunks/Cm3jf07C.js";import{v as validate_store}from"../chunks/Dv9a3G0k.js";import{h as head}from"../chunks/twIkBoiu.js";import{s as set_attribute}from"../chunks/DTBsVM-c.js";import{d as delegate}from"../chunks/DiU70Is3.js";import{b as store_set,s as setup_stores,a as store_get}from"../chunks/CViNpZsE.js";import{b as browserSvelte,a as browser_ext}from"../chunks/CgCfpVku.js";import{p as page}from"../chunks/eULPtkAc.js";import{b as yakklDappConnectRequestStore,l as log,an as DEFAULT_TITLE,g as getSettings,C as getYakklCurrentlySelected,Y as YAKKL_DAPP}from"../chunks/Cb2naUpm.js";import"../chunks/WDN37msH.js";import{v as verifySessionToken,b as sessionToken}from"../chunks/CMG1aIle.js";import{C as Confirmation}from"../chunks/BWiVuumU.js";import{C as Copyright}from"../chunks/w2W0-xnm.js";import"../chunks/DwnXGTX-.js";import{F as Failed,c as createPortManagerWithStream}from"../chunks/tXuNREEA.js";import{s as safeLogout}from"../chunks/COpD6KvM.js";_page[FILENAME]="src/routes/(dapp)/dapp/popups/permissions/+page.svelte";function handleConfirm(_,showConfirm){set(showConfirm,true)}var on_click=(__1,handleReject)=>handleReject();var on_click_1=(__2,handleReject)=>handleReject();var root=add_locations(from_html(`<!> <!> <div class="flex flex-col h-full max-h-screen overflow-hidden"><div class="p-4 border-b border-base-300 flex-shrink-0"><div class="flex items-center justify-between"><div class="flex items-center gap-2 min-w-0"><img id="dappImageId" crossorigin="anonymous" alt="Dapp logo" class="w-8 h-8 rounded-full flex-shrink-0"/> <span class="font-semibold truncate"> </span></div> <button class="btn btn-ghost btn-sm flex-shrink-0 svelte-37xonh" aria-label="Close"><svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg></button></div></div> <div class="flex-1 p-6 flex flex-col max-w-[428px]"><div class="text-center mb-4 flex-shrink-0 border-2 border-red-500 rounded-md p-2"><p class="text-md font-extrabold animate-pulse mb-2">Important!:</p> <span class="text-sm font-bold mb-2">Granting permission to access your account(s): PLEASE be mindful and know what you are\n\t\t\t\tdoing.</span> <span class="text-sm font-bold mb-2">Permissions can be revoked at any time! Be 100% sure or REJECT this process and research\n\t\t\t\tmore before trying again.</span></div> <div class="overflow-auto flex-1 min-h-0 mb-4"><span class="text-sm">Permissions:</span> <pre class="text-md border-2 border-blue-500 rounded-md p-2 bg-opacity-25">(your account(s))</pre></div></div> <div class="p-4 border-t border-base-300 flex-shrink-0"><div class="flex gap-4 justify-end"><button class="btn btn-outline svelte-37xonh">Reject</button> <button class="btn btn-primary svelte-37xonh">Approve</button></div></div></div> <!>`,1),_page[FILENAME],[[243,0,[[245,1,[[246,2,[[247,3,[[248,4],[255,4]]],[259,3,[[264,4,[[270,5]]]]]]]]],[281,1,[[282,2,[[283,3],[284,3],[288,3]]],[294,2,[[295,3],[296,3]]]]],[302,1,[[303,2,[[304,3],[305,3]]]]]]]]);function _page($$anchor,$$props){check_target(new.target);push($$props,true,_page);const[$$stores,$$cleanup]=setup_stores();const $sessionToken=()=>(validate_store(sessionToken,"sessionToken"),store_get(sessionToken,"$sessionToken",$$stores));let currentlySelected;let showConfirm=tag(state(false),"showConfirm");let showSuccess=tag(state(false),"showSuccess");let showFailure=tag(state(false),"showFailure");let errorValue=tag(state("No domain/site name was found. Access to YAKKL® is denied."),"errorValue");let domain=tag(state(""),"domain");let domainLogo=tag(state(""),"domainLogo");let domainTitle=tag(state(""),"domainTitle");let title=tag(state(proxy(DEFAULT_TITLE)),"title");let request;let method;let requestId;let message=tag(state(""),"message");let params=tag(state(proxy([])),"params");let permissions=tag(state(proxy([])),"permissions");let messageValue;let pass=false;let portManager=null;let stream=null;if(browserSvelte){try{requestId=page.url.searchParams.get("requestId");method=page.url.searchParams.get("method")??"";store_set(yakklDappConnectRequestStore,requestId);if(requestId){pass=true}}catch(e){log.error(e);handleReject("No requestId or method was found. Access to YAKKL® is denied.")}}async function onMessageListener(event){try{if(!get(domainLogo))set(domainLogo,"/images/failIcon48x48.png");if(strict_equals(event.method,"get_params")){request=event.result;if(!request||!request.data){return await handleReject("No request was found. Access to YAKKL® is denied.")}const requestData=request.data;if(!requestData||!requestData.params||!requestData.params[0]||!requestData.metaData){return await handleReject("Invalid request data. Access to YAKKL® is denied.")}if(!requestData.metaData.metaData.isConnected){return await handleReject("Domain is not connected. Connect to {domain} first via requestAccounts. Access to YAKKL® is denied.")}set(domainTitle,requestData.metaData.metaData.title,true);set(domain,requestData.metaData.metaData.domain,true);set(domainLogo,requestData.metaData.metaData.icon,true);set(message,requestData.metaData.metaData.message??"Nothing was passed to explain the intent of this approval. Be mindful of this request!",true);set(params,requestData.params??[],true);if(!Array.isArray(get(params))){set(params,[get(params)],true)}if(!requestId)requestId=(requestData==null?void 0:requestData.id)??null;if(!requestId){return await handleReject("No request ID was found. Access to YAKKL® is denied.")}set(title,get(domainTitle)||get(domain)||DEFAULT_TITLE,true);let data;switch(method){case"wallet_requestPermissions":set(permissions,get(params)[0],true);log.info("Permissions:",false,get(permissions));break;case"wallet_revokePermissions":set(permissions,get(params)[0],true);log.info("Revoke Permissions:",false,get(permissions));break;case"wallet_getPermissions":set(permissions,get(params)[0],true);log.info("Get Permissions:",false,get(permissions));break;default:messageValue="No message request was passed in. Error.";break}}}catch(e){log.error(e);await handleReject("An error occurred while processing the request. Access to YAKKL® is denied.")}}onMount(async()=>{try{if(browserSvelte){const settings=await getSettings();if(!settings.init||!settings.legal.termsAgreed){set(errorValue,"You must register and agree to the terms of service before using YAKKL®. Click on 'Open Wallet' to register.");set(showFailure,true);return}currentlySelected=await getYakklCurrentlySelected();const sessionInfo=await browser_ext.runtime.sendMessage({type:"REQUEST_SESSION_PORT",requestId:requestId});log.info("Received session info:",false,sessionInfo);if(!sessionInfo||!sessionInfo.success){log.warn("Failed to verify session port. No response received. Using YAKKL_DAPP.")}portManager=createPortManagerWithStream((sessionInfo==null?void 0:sessionInfo.portName)??YAKKL_DAPP);portManager.setRequestId(requestId);const success=await portManager.createPort();if(!success){set(errorValue,"Failed to connect to session port.");set(showFailure,true);return}stream=portManager.getStream();if(!stream){set(errorValue,"Stream is not available.");set(showFailure,true);return}stream.on("data",onMessageListener);stream.write({method:"get_params",id:requestId})}}catch(e){log.error(e);set(errorValue,"Port setuperror occurred while processing the request. Access to YAKKL® is denied.");set(showFailure,true)}});async function handleReject(message2="User rejected the request."){try{if(browserSvelte){set(showConfirm,false);set(showFailure,false);set(showSuccess,false);if(stream){stream.write({type:"YAKKL_RESPONSE:EIP6963",jsonrpc:"2.0",id:requestId,error:{code:4001,message:message2}})}}}catch(e){log.error(e)}finally{close()}}async function handleProcess(){try{if(!browserSvelte){await handleReject()}if(!verifySessionToken($sessionToken())){await handleReject("Session token is invalid. Login again.")}set(permissions,[{parentCapability:"eth_accounts",caveats:[]}],true);if(stream){const jsonRpcResponse={type:"YAKKL_RESPONSE:EIP6963",jsonrpc:"2.0",id:requestId,result:get(permissions)};stream.write(jsonRpcResponse);log.info("Sign: handleProcess - response:",false,{jsonRpcResponse:jsonRpcResponse})}else{await handleReject("Request failed to send to dapp due to connection port not found.")}close()}catch(e){log.error(e);set(errorValue,e instanceof Error?e.message:"Unknown error occurred",true);set(showFailure,true)}}async function close(){if(browserSvelte){try{if(portManager){await portManager.waitForIdle(1500);portManager.disconnect()}}catch(e){log.warn("Port did not go idle in time",false,e)}safeLogout()}}var fragment=root();head($$anchor2=>{template_effect(()=>$document.title=get(title))});var node=first_child(fragment);Failed(node,{title:"Failed!",get content(){return get(errorValue)},onReject:handleReject,get show(){return get(showFailure)},set show($$value){set(showFailure,$$value,true)}});var node_1=sibling(node,2);Confirmation(node_1,{get title(){return`Connect to ${get(domain)??""}`},get message(){return`This will grant permission for ${get(domain)??""} to access your account(s)! Do you wish to continue?`},onConfirm:handleProcess,get show(){return get(showConfirm)},set show($$value){set(showConfirm,$$value,true)}});var div=sibling(node_1,2);var div_1=child(div);var div_2=child(div_1);var div_3=child(div_2);var img=child(div_3);var span=sibling(img,2);var text=child(span,true);reset(span);reset(div_3);var button=sibling(div_3,2);button.__click=[on_click,handleReject];reset(div_2);reset(div_1);var div_4=sibling(div_1,4);var div_5=child(div_4);var button_1=child(div_5);button_1.__click=[on_click_1,handleReject];var button_2=sibling(button_1,2);button_2.__click=[handleConfirm,showConfirm];reset(div_5);reset(div_4);reset(div);var node_2=sibling(div,2);Copyright(node_2,{});template_effect(()=>{set_attribute(img,"src",get(domainLogo));set_attribute(span,"title",get(domainTitle)||get(domain));set_text(text,get(domainTitle)||get(domain))});append($$anchor,fragment);var $$pop=pop({...legacy_api()});$$cleanup();return $$pop}delegate(["click"]);export{_page as component};
//# sourceMappingURL=21.CxlWsba_.js.map
