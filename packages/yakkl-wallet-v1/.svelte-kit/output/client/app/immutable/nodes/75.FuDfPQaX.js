import{c as check_target,l as legacy_api}from"../chunks/BXFaAXnq.js";import{p as push,aC as tag_proxy,ae as proxy,h as tag,i as state,u as user_derived,o as onMount,c as child,s as sibling,g as get,r as reset,j as next,t as template_effect,a as pop,e as set,b as strict_equals,F as FILENAME,$ as $document}from"../chunks/BaS8d5lg.js";import{a as add_locations}from"../chunks/3AhEABF_.js";import{d as delegate}from"../chunks/DiU70Is3.js";import{h as head}from"../chunks/twIkBoiu.js";import{a as append,t as text,f as from_html,d as from_svg}from"../chunks/Cm3jf07C.js";import{i as if_block}from"../chunks/Q1yPWpQ-.js";import{c as clsx,s as set_class}from"../chunks/DX_EEhpR.js";import{m as mods,d as discoveredMods,i as isCoreAvailable,a as initializeCore,s as systemModRegistry,b as discoverMods,l as loadMod,c as checkEnhancements,M as ModDashboard}from"../chunks/B6Kd56jc.js";import{s as set_text}from"../chunks/Cmwrv3PW.js";import{e as each,i as index}from"../chunks/DraJ8LN-.js";import{v as validate_store}from"../chunks/Dv9a3G0k.js";import{a as store_get,s as setup_stores}from"../chunks/CViNpZsE.js";import{l as log_if_contains_state}from"../chunks/DZ17DrFv.js";ModTestSuite[FILENAME]="src/routes/preview2/lib/components/mods/ModTestSuite.svelte";var root_1=add_locations(from_svg(`<svg class="w-4 h-4 animate-spin mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path></svg> Running Tests...`,1),ModTestSuite[FILENAME],[[248,8,[[249,10]]]]);var root_4=add_locations(from_html(`<div class="flex items-center justify-between p-3 bg-zinc-50 dark:bg-zinc-800 rounded-lg"><div><span class="font-medium text-zinc-900 dark:text-white"> </span> <span class="text-zinc-600 dark:text-zinc-400"> </span></div> <div class="text-lg"> </div></div>`),ModTestSuite[FILENAME],[[295,10,[[296,12,[[297,14],[298,14]]],[300,12]]]]);var root_3=add_locations(from_html(`<div class="mb-6"><h3 class="text-lg font-semibold text-zinc-900 dark:text-white mb-3">Component Tests</h3> <div class="space-y-2"></div></div>`),ModTestSuite[FILENAME],[[291,4,[[292,6],[293,6]]]]);var root_6=add_locations(from_html(`<div class="p-3 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg"><span class="text-red-700 dark:text-red-300 text-sm"> </span></div>`),ModTestSuite[FILENAME],[[315,10,[[316,12]]]]);var root_5=add_locations(from_html(`<div class="mb-6"><h3 class="text-lg font-semibold text-red-600 dark:text-red-400 mb-3"> </h3> <div class="space-y-2"></div></div>`),ModTestSuite[FILENAME],[[311,4,[[312,6],[313,6]]]]);var root_7=add_locations(from_html(`<div class="flex items-start gap-2"><span class="text-zinc-500 text-xs mt-0.5"> </span> <span class="text-lg leading-none"> </span> <span> </span></div>`),ModTestSuite[FILENAME],[[329,10,[[330,12],[331,12],[332,12]]]]);var root_8=add_locations(from_html(`<div class="flex items-center gap-2 mt-4"><div class="w-2 h-2 bg-blue-500 rounded-full animate-pulse"></div> <span class="text-blue-400">Running tests...</span></div>`),ModTestSuite[FILENAME],[[337,10,[[338,12],[339,12]]]]);var root$1=add_locations(from_html(`<div class="p-6 bg-white dark:bg-zinc-900 rounded-xl border border-zinc-200 dark:border-zinc-700"><div class="flex items-center justify-between mb-6"><div><h2 class="text-xl font-bold text-zinc-900 dark:text-white">Mod System Test Suite</h2> <p class="text-sm text-zinc-600 dark:text-zinc-400">Comprehensive testing of mod loading, discovery, and enhancements</p></div> <button><!></button></div> <div class="grid grid-cols-2 md:grid-cols-4 gap-4 mb-6"><div class="bg-zinc-50 dark:bg-zinc-800 p-4 rounded-lg"><div class="text-2xl font-bold text-zinc-900 dark:text-white"> </div> <div class="text-sm text-zinc-600 dark:text-zinc-400">Core Available</div></div> <div class="bg-zinc-50 dark:bg-zinc-800 p-4 rounded-lg"><div class="text-2xl font-bold text-zinc-900 dark:text-white"> </div> <div class="text-sm text-zinc-600 dark:text-zinc-400">System Mods Loaded</div></div> <div class="bg-zinc-50 dark:bg-zinc-800 p-4 rounded-lg"><div class="text-2xl font-bold text-zinc-900 dark:text-white"> </div> <div class="text-sm text-zinc-600 dark:text-zinc-400">Mods Discovered</div></div> <div class="bg-zinc-50 dark:bg-zinc-800 p-4 rounded-lg"><div class="text-2xl font-bold text-zinc-900 dark:text-white"> </div> <div class="text-sm text-zinc-600 dark:text-zinc-400">Enhancements</div></div></div> <!> <!> <div><h3 class="text-lg font-semibold text-zinc-900 dark:text-white mb-3">Test Output</h3> <div class="bg-zinc-900 dark:bg-black rounded-lg p-4 max-h-96 overflow-y-auto"><div class="font-mono text-sm space-y-1"><!> <!></div></div></div></div>`),ModTestSuite[FILENAME],[[235,0,[[236,2,[[237,4,[[238,6],[239,6]]],[242,4]]],[259,2,[[260,4,[[261,6],[264,6]]],[267,4,[[268,6],[271,6]]],[274,4,[[275,6],[278,6]]],[281,4,[[282,6],[285,6]]]]],[324,2,[[325,4],[326,4,[[327,6]]]]]]]]);function ModTestSuite($$anchor,$$props){check_target(new.target);push($$props,true,ModTestSuite);const[$$stores,$$cleanup]=setup_stores();const $mods=()=>(validate_store(mods,"mods"),store_get(mods,"$mods",$$stores));const $discoveredMods=()=>(validate_store(discoveredMods,"discoveredMods"),store_get(discoveredMods,"$discoveredMods",$$stores));let testResults=tag_proxy(proxy({coreAvailable:false,coreInitialized:false,modsDiscovered:0,systemModsLoaded:0,enhancementsFound:0,networkManagerLoaded:false,accountManagerLoaded:false,componentTests:[],errors:[]}),"testResults");let testRunning=tag(state(false),"testRunning");let testOutput=tag(state(proxy([])),"testOutput");let loadedMods=tag(user_derived($mods),"loadedMods");tag(user_derived($discoveredMods),"discovered");function log(message,type="info"){const timestamp=(new Date).toLocaleTimeString();set(testOutput,[...get(testOutput),{timestamp:timestamp,message:message,type:type}],true);console.log(...log_if_contains_state("log",`[ModTest] ${message}`))}async function runFullTest(){var _a,_b,_c,_d,_e;set(testRunning,true);set(testOutput,[],true);testResults.errors=[];try{log("üß™ Starting comprehensive mod system test","info");log("üìã Test 1: Core Availability");testResults.coreAvailable=isCoreAvailable();if(testResults.coreAvailable){log("‚úÖ YAKKL Core is available","success")}else{log("‚ö†Ô∏è YAKKL Core not available, initializing...","warning");try{await initializeCore();testResults.coreInitialized=true;testResults.coreAvailable=isCoreAvailable();log("‚úÖ YAKKL Core initialized successfully","success")}catch(error){log(`‚ùå Core initialization failed: ${error.message}`,"error");testResults.errors.push(`Core init: ${error.message}`)}}log("üìã Test 2: System Mod Registry");const availableMods=systemModRegistry.getAvailableMods();log(`üì¶ Found ${availableMods.length} mods in registry`,"info");for(const mod of availableMods){log(`   - ${mod.name} (${mod.id}) - ${mod.enabled?"enabled":"disabled"}`,"info")}log("üìã Test 3: Mod Discovery");try{const discoveredMods2=await discoverMods();testResults.modsDiscovered=discoveredMods2.length;log(`üîç Discovered ${discoveredMods2.length} mods`,"success");for(const mod of discoveredMods2){const modName=((_a=mod.manifest)==null?void 0:_a.name)||mod.name||mod.id;log(`   - ${modName}`,"info")}}catch(error){log(`‚ùå Discovery failed: ${error.message}`,"error");testResults.errors.push(`Discovery: ${error.message}`)}log("üìã Test 4: System Mod Loading");try{const networkMod=await loadMod("system-network-manager");if(networkMod){testResults.networkManagerLoaded=true;testResults.systemModsLoaded++;log("‚úÖ Network Manager mod loaded","success");if(networkMod.isLoaded&&networkMod.isLoaded()){log("   ‚úì Network Manager is loaded","success")}if(networkMod.manifest){log(`   ‚úì Manifest: ${networkMod.manifest.name} v${networkMod.manifest.version}`,"success")}}else{log("‚ùå Network Manager mod failed to load","error");testResults.errors.push("Network Manager loading failed")}}catch(error){log(`‚ùå Network Manager error: ${error.message}`,"error");testResults.errors.push(`Network Manager: ${error.message}`)}try{const accountMod=await loadMod("system-account-manager");if(accountMod){testResults.accountManagerLoaded=true;testResults.systemModsLoaded++;log("‚úÖ Account Manager mod loaded","success");if(accountMod.isLoaded&&accountMod.isLoaded()){log("   ‚úì Account Manager is loaded","success")}if(accountMod.manifest){log(`   ‚úì Manifest: ${accountMod.manifest.name} v${accountMod.manifest.version}`,"success")}}else{log("‚ùå Account Manager mod failed to load","error");testResults.errors.push("Account Manager loading failed")}}catch(error){log(`‚ùå Account Manager error: ${error.message}`,"error");testResults.errors.push(`Account Manager: ${error.message}`)}log("üìã Test 5: Enhancement Discovery");try{const networkEnhancements=await checkEnhancements("network");const accountEnhancements=await checkEnhancements("account");const coreEnhancements=await checkEnhancements("wallet-core");testResults.enhancementsFound=networkEnhancements.length+accountEnhancements.length+coreEnhancements.length;log(`üîß Found ${networkEnhancements.length} network enhancements`,"info");log(`üë§ Found ${accountEnhancements.length} account enhancements`,"info");log(`‚öôÔ∏è Found ${coreEnhancements.length} core enhancements`,"info");if(testResults.enhancementsFound>0){log("‚úÖ Enhancement system working","success")}}catch(error){log(`‚ùå Enhancement check failed: ${error.message}`,"error");testResults.errors.push(`Enhancements: ${error.message}`)}log("üìã Test 6: Component System");testResults.componentTests=[];for(const mod of get(loadedMods)){if(mod.getComponent){try{if(strict_equals((_b=mod.manifest)==null?void 0:_b.id,"system-network-manager")){const switcher=mod.getComponent("network-switcher-enhanced");testResults.componentTests.push({mod:"Network Manager",component:"network-switcher-enhanced",success:!!switcher});const form=mod.getComponent("custom-network-form");testResults.componentTests.push({mod:"Network Manager",component:"custom-network-form",success:!!form})}if(strict_equals((_c=mod.manifest)==null?void 0:_c.id,"system-account-manager")){const switcher=mod.getComponent("account-switcher-enhanced");testResults.componentTests.push({mod:"Account Manager",component:"account-switcher-enhanced",success:!!switcher});const wizard=mod.getComponent("account-creation-wizard");testResults.componentTests.push({mod:"Account Manager",component:"account-creation-wizard",success:!!wizard})}}catch(error){log(`‚ùå Component test failed for ${(_d=mod.manifest)==null?void 0:_d.name}: ${error.message}`,"error");testResults.errors.push(`Component ${(_e=mod.manifest)==null?void 0:_e.id}: ${error.message}`)}}}const successfulComponents=testResults.componentTests.filter(t=>t.success).length;log(`üß© Component tests: ${successfulComponents}/${testResults.componentTests.length} passed`,strict_equals(successfulComponents,testResults.componentTests.length)?"success":"warning");log("üìã Test 7: Registry Statistics");const stats=systemModRegistry.getStatistics();log(`üìä Registry Stats:`,"info");log(`   - Total mods: ${stats.total}`,"info");log(`   - Enabled: ${stats.enabled}`,"info");log(`   - Loaded: ${stats.loaded}`,"info");log(`   - System mods: ${stats.system}`,"info");log(`   - Categories: ${Object.keys(stats.byCategory).join(", ")}`,"info");log("üìã Test Summary","info");if(strict_equals(testResults.errors.length,0)){log("üéâ All tests passed successfully!","success")}else{log(`‚ö†Ô∏è Tests completed with ${testResults.errors.length} errors`,"warning")}}catch(error){log(`üí• Test suite failed: ${error.message}`,"error");testResults.errors.push(`Test suite: ${error.message}`)}finally{set(testRunning,false)}}function getLogIcon(type){switch(type){case"success":return"‚úÖ";case"error":return"‚ùå";case"warning":return"‚ö†Ô∏è";default:return"‚ÑπÔ∏è"}}function getLogColor(type){switch(type){case"success":return"text-green-600 dark:text-green-400";case"error":return"text-red-600 dark:text-red-400";case"warning":return"text-yellow-600 dark:text-yellow-400";default:return"text-blue-600 dark:text-blue-400"}}onMount(()=>{runFullTest()});var div=root$1();var div_1=child(div);var button=sibling(child(div_1),2);button.__click=runFullTest;var node=child(button);{var consequent=$$anchor2=>{var fragment=root_1();next();append($$anchor2,fragment)};var alternate=$$anchor2=>{var text$1=text("üß™ Run Tests");append($$anchor2,text$1)};if_block(node,$$render=>{if(get(testRunning))$$render(consequent);else $$render(alternate,false)})}reset(button);reset(div_1);var div_2=sibling(div_1,2);var div_3=child(div_2);var div_4=child(div_3);var text_1=child(div_4,true);reset(div_4);next(2);reset(div_3);var div_5=sibling(div_3,2);var div_6=child(div_5);var text_2=child(div_6,true);reset(div_6);next(2);reset(div_5);var div_7=sibling(div_5,2);var div_8=child(div_7);var text_3=child(div_8,true);reset(div_8);next(2);reset(div_7);var div_9=sibling(div_7,2);var div_10=child(div_9);var text_4=child(div_10,true);reset(div_10);next(2);reset(div_9);reset(div_2);var node_1=sibling(div_2,2);{var consequent_1=$$anchor2=>{var div_11=root_3();var div_12=sibling(child(div_11),2);each(div_12,21,()=>testResults.componentTests,index,($$anchor3,test)=>{var div_13=root_4();var div_14=child(div_13);var span=child(div_14);var text_5=child(span,true);reset(span);var span_1=sibling(span,2);var text_6=child(span_1);reset(span_1);reset(div_14);var div_15=sibling(div_14,2);var text_7=child(div_15,true);reset(div_15);reset(div_13);template_effect(()=>{set_text(text_5,get(test).mod);set_text(text_6,`‚Üí ${get(test).component??""}`);set_text(text_7,get(test).success?"‚úÖ":"‚ùå")});append($$anchor3,div_13)});reset(div_12);reset(div_11);append($$anchor2,div_11)};if_block(node_1,$$render=>{if(testResults.componentTests.length>0)$$render(consequent_1)})}var node_2=sibling(node_1,2);{var consequent_2=$$anchor2=>{var div_16=root_5();var h3=child(div_16);var text_8=child(h3);reset(h3);var div_17=sibling(h3,2);each(div_17,21,()=>testResults.errors,index,($$anchor3,error)=>{var div_18=root_6();var span_2=child(div_18);var text_9=child(span_2,true);reset(span_2);reset(div_18);template_effect(()=>set_text(text_9,get(error)));append($$anchor3,div_18)});reset(div_17);reset(div_16);template_effect(()=>set_text(text_8,`Errors (${testResults.errors.length??""})`));append($$anchor2,div_16)};if_block(node_2,$$render=>{if(testResults.errors.length>0)$$render(consequent_2)})}var div_19=sibling(node_2,2);var div_20=sibling(child(div_19),2);var div_21=child(div_20);var node_3=child(div_21);each(node_3,17,()=>get(testOutput),index,($$anchor2,log2,$$index_2,$$array)=>{var div_22=root_7();var span_3=child(div_22);var text_10=child(span_3,true);reset(span_3);var span_4=sibling(span_3,2);var text_11=child(span_4,true);reset(span_4);var span_5=sibling(span_4,2);var text_12=child(span_5,true);reset(span_5);reset(div_22);template_effect(($0,$1)=>{set_text(text_10,get(log2).timestamp);set_text(text_11,$0);set_class(span_5,1,$1);set_text(text_12,get(log2).message)},[()=>getLogIcon(get(log2).type),()=>clsx(getLogColor(get(log2).type))]);append($$anchor2,div_22)});var node_4=sibling(node_3,2);{var consequent_3=$$anchor2=>{var div_23=root_8();append($$anchor2,div_23)};if_block(node_4,$$render=>{if(get(testRunning))$$render(consequent_3)})}reset(div_21);reset(div_20);reset(div_19);reset(div);template_effect(()=>{button.disabled=get(testRunning);set_class(button,1,`yakkl-btn-primary ${get(testRunning)?"opacity-50":""}`);set_text(text_1,testResults.coreAvailable?"‚úÖ":"‚ùå");set_text(text_2,testResults.systemModsLoaded);set_text(text_3,testResults.modsDiscovered);set_text(text_4,testResults.enhancementsFound)});append($$anchor,div);var $$pop=pop({...legacy_api()});$$cleanup();return $$pop}delegate(["click"]);_page[FILENAME]="src/routes/preview2/mods/+page.svelte";var on_click=(_,activeTab)=>set(activeTab,"dashboard");var on_click_1=(__1,activeTab)=>set(activeTab,"test");var root=add_locations(from_html(`<div class="max-w-6xl mx-auto p-6"><div class="mb-8"><h1 class="text-3xl font-bold text-zinc-900 dark:text-white mb-2">Mods</h1> <p class="text-zinc-600 dark:text-zinc-400">Extend your wallet with powerful plugins and enhancements</p></div> <div class="flex gap-4 mb-6 border-b border-zinc-200 dark:border-zinc-700"><button>üì¶ Mod Dashboard</button> <button>üß™ Test Suite</button></div> <!></div>`),_page[FILENAME],[[10,0,[[12,2,[[13,4],[14,4]]],[20,2,[[21,4],[31,4]]]]]]);function _page($$anchor,$$props){check_target(new.target);push($$props,true,_page);let activeTab=tag(state("dashboard"),"activeTab");var div=root();head($$anchor2=>{$document.title="Mods - YAKKL Wallet Preview 2.0"});var div_1=sibling(child(div),2);var button=child(div_1);button.__click=[on_click,activeTab];var button_1=sibling(button,2);button_1.__click=[on_click_1,activeTab];reset(div_1);var node=sibling(div_1,2);{var consequent=$$anchor2=>{ModDashboard($$anchor2,{})};var alternate=$$anchor2=>{ModTestSuite($$anchor2,{})};if_block(node,$$render=>{if(strict_equals(get(activeTab),"dashboard"))$$render(consequent);else $$render(alternate,false)})}reset(div);template_effect(()=>{set_class(button,1,`px-4 py-2 text-sm font-medium border-b-2 transition-colors ${strict_equals(get(activeTab),"dashboard")?"border-indigo-500 text-indigo-600 dark:text-indigo-400":"border-transparent text-zinc-600 dark:text-zinc-400 hover:text-zinc-900 dark:hover:text-zinc-200"}`);set_class(button_1,1,`px-4 py-2 text-sm font-medium border-b-2 transition-colors ${strict_equals(get(activeTab),"test")?"border-indigo-500 text-indigo-600 dark:text-indigo-400":"border-transparent text-zinc-600 dark:text-zinc-400 hover:text-zinc-900 dark:hover:text-zinc-200"}`)});append($$anchor,div);return pop({...legacy_api()})}delegate(["click"]);export{_page as component};
//# sourceMappingURL=75.FuDfPQaX.js.map
