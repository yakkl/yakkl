{"version":3,"file":"49.DMpfT97z.js","sources":["../../../../../../src/lib/common/debug-error.ts","../../../../../../../../node_modules/.pnpm/@kurkle+color@0.3.4/node_modules/@kurkle/color/dist/color.esm.js","../../../../../../../../node_modules/.pnpm/chart.js@4.5.0/node_modules/chart.js/dist/chunks/helpers.dataset.js","../../../../../../../../node_modules/.pnpm/chart.js@4.5.0/node_modules/chart.js/dist/chart.js","../../../../../../../../node_modules/.pnpm/chart.js@4.5.0/node_modules/chart.js/auto/auto.js","../../../../../../src/lib/components/RegistrationOption.svelte","../../../../../../src/lib/components/RegistrationOptionModal.svelte","../../../../../../src/lib/components/SwapModal.svelte","../../../../../../src/lib/components/PriceTracker.svelte","../../../../../../src/lib/components/TokenPrice.svelte","../../../../../../src/lib/components/send/validation.ts","../../../../../../src/lib/components/send/SendForm.svelte","../../../../../../src/lib/components/send/SendFormModal.svelte","../../../../../../src/routes/(wallet)/tokens/+page.svelte"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n// Debug related functions\n\n// NOTE: DEPRECATED - USE Logger.ts INSTEAD\n\nexport function debug_log(message: string, ...args: any[]): void {\n\t// Capture the current stack trace\n\tconst stack = new Error().stack;\n\n\tif (stack) {\n\t\t// Find the caller line in the stack trace\n\t\tconst callerInfo = stack.split('\\n')[2].trim();\n\t\tconsole.log(`[Debug]: ${callerInfo} - ${message}`, ...args);\n\t} else {\n\t\tconsole.log(message, ...args);\n\t}\n}\n\nexport function error_log(message: string, ...args: any[]): void {\n\t// Capture the current stack trace\n\tconst stack = new Error().stack;\n\n\tif (stack) {\n\t\t// Find the caller line in the stack trace\n\t\tconst callerInfo = stack.split('\\n')[2].trim();\n\t\tconsole.log(`[Error]: ${callerInfo} - ${message}`, ...args);\n\t} else {\n\t\tconsole.log(message, ...args);\n\t}\n}\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nfunction getDatasetClipArea(chart, meta) {\n    const clip = meta._clip;\n    if (clip.disabled) {\n        return false;\n    }\n    const area = getDatasetArea(meta, chart.chartArea);\n    return {\n        left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n        right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n        top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n        bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n    };\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, getStyle as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, distanceBetweenPoints as aF, noop as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, Ticks as aM, log10 as aN, _longestText as aO, _filterBetween as aP, _lookup as aQ, isPatternOrGradient as aR, getHoverColor as aS, clone as aT, _merger as aU, _mergerIf as aV, _deprecated as aW, _splitKey as aX, toFontString as aY, splineCurve as aZ, splineCurveMonotone as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, getDatasetClipArea as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _normalizeAngle as al, _readValueToProps as am, _updateBezierControlPoints as an, _computeSegments as ao, _boundSegments as ap, _steppedInterpolation as aq, _bezierInterpolation as ar, _pointInLine as as, _steppedLineTo as at, _bezierCurveTo as au, drawPoint as av, addRoundedRectPath as aw, toTRBL as ax, toTRBLCorners as ay, _boundSegment as az, isArray as b, fontString as b0, toLineHeight as b1, PITAU as b2, INFINITY as b3, RAD_PER_DEG as b4, QUARTER_PI as b5, TWO_THIRDS_PI as b6, _angleDiff as b7, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.dataset.js.map\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as getDatasetClipArea, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _normalizeAngle, am as _readValueToProps, an as _updateBezierControlPoints, ao as _computeSegments, ap as _boundSegments, aq as _steppedInterpolation, ar as _bezierInterpolation, as as _pointInLine, at as _steppedLineTo, au as _bezierCurveTo, av as drawPoint, aw as addRoundedRectPath, ax as toTRBL, ay as toTRBLCorners, az as _boundSegment, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as distanceBetweenPoints, aG as noop, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as Ticks, aN as log10, aO as _longestText, aP as _filterBetween, aQ as _lookup } from './chunks/helpers.dataset.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n    _getAxisCount() {\n        return this._getAxis().length;\n    }\n    getFirstScaleIdForIndexAxis() {\n        const scales = this.chart.scales;\n        const indexScaleId = this.chart.options.indexAxis;\n        return Object.keys(scales).filter((key)=>scales[key].axis === indexScaleId).shift();\n    }\n    _getAxis() {\n        const axis = {};\n        const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n        for (const dataset of this.chart.data.datasets){\n            axis[valueOrDefault(this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId)] = true;\n        }\n        return Object.keys(axis);\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        const axisCount = this._getAxisCount();\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount) : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n            const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n            const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.5.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        const clip = getDatasetClipArea(this, meta);\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (clip) {\n            clipArea(ctx, clip);\n        }\n        meta.controller.draw();\n        if (clip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipSelf(ctx, element, endAngle) {\n    const { startAngle , x , y , outerRadius , innerRadius , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n    if (innerRadius > 0) {\n        const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n        ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n    } else {\n        const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n        if (borderJoinStyle === 'round') {\n            ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n        } else if (borderJoinStyle === 'bevel') {\n            const r = 2 * clipWidth * clipWidth;\n            const endX = -r * Math.cos(endAngle + PI / 2) + x;\n            const endY = -r * Math.sin(endAngle + PI / 2) + y;\n            const startX = r * Math.cos(startAngle + PI / 2) + x;\n            const startY = r * Math.sin(startAngle + PI / 2) + y;\n            ctx.lineTo(endX, endY);\n            ctx.lineTo(startX, startY);\n        }\n    }\n    ctx.closePath();\n    ctx.moveTo(0, 0);\n    ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.clip('evenodd');\n}\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset , borderRadius  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n        clipSelf(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true,\n        selfJoin: false\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { chart , index , line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    const meta = chart.getDatasetMeta(index);\n    const clip = getDatasetClipArea(chart, meta);\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis,\n            clip\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale , clip  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    let fillColor = below;\n    if (below !== above) {\n        if (property === 'x') {\n            clipVertical(ctx, target, area.top);\n            fill(ctx, {\n                line,\n                target,\n                color: above,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipVertical(ctx, target, area.bottom);\n        } else if (property === 'y') {\n            clipHorizontal(ctx, target, area.left);\n            fill(ctx, {\n                line,\n                target,\n                color: below,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipHorizontal(ctx, target, area.right);\n            fillColor = above;\n        }\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: fillColor,\n        scale,\n        property,\n        clip\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction clipHorizontal(ctx, target, clipX) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(clipX, firstPoint.y);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(clipX, lastPoint.y);\n        }\n    }\n    ctx.lineTo(clipX, target.first().y);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale , clip  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n    const chartArea = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x' || property === 'y') {\n        let left, top, right, bottom;\n        if (property === 'x') {\n            left = start;\n            top = chartArea.top;\n            right = end;\n            bottom = chartArea.bottom;\n        } else {\n            left = chartArea.left;\n            top = start;\n            right = chartArea.right;\n            bottom = end;\n        }\n        ctx.beginPath();\n        if (clip) {\n            left = Math.max(left, clip.left);\n            right = Math.min(right, clip.right);\n            top = Math.max(top, clip.top);\n            bottom = Math.min(bottom, clip.bottom);\n        }\n        ctx.rect(left, top, right - left, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","<script lang=\"ts\">\n\t// NOTE: This is for the RegistrationOption component. The RegistrationOptionModal is only for the RegistrationOption component. Restore requires a valid account to be created first. So, removed restore from here for now.\n\timport { onMount } from 'svelte';\n\timport { getSettings } from '$lib/common/stores';\n\timport { shouldShowProFeatures } from '$lib/common/token-analytics';\n\timport { PlanType } from '$lib/common/types';\n\timport type { Settings } from '$lib/common/interfaces';\n\timport SimpleTooltip from './SimpleTooltip.svelte';\n\n\tinterface Props {\n\t\t/// <reference types=\"svelte\" />\n\t\ttitle?: string;\n\t\tonCreate: () => void;\n\t\tonImport: () => void; // NOTE: import and restore will not work if there is no account created first. Need to either create a tmp account and restore or move this to another component.\n\t\tonRestore: () => void;\n\t}\n\n\tlet {\n\t\ttitle = 'Registration/Restoration Options',\n\t\tonCreate,\n\t\tonImport = () => void {},\n\t\tonRestore = () => void {}\n\t}: Props = $props();\n\n\tlet settings: Settings | null = $state(null);\n\tlet isProUser = $state(false);\n\n\tonMount(async () => {\n\t\tsettings = await getSettings();\n\t\tisProUser = shouldShowProFeatures(settings?.plan?.type || PlanType.BASIC_MEMBER);\n\t});\n\n\tfunction handleRestore() {\n\t\tif (!isProUser) return;\n\t\tonRestore();\n\t}\n</script>\n\n<div class=\"bg-surface-light dark:bg-surface-dark rounded-lg p-6 shadow-md\">\n\t<h1 class=\"text-2xl font-bold text-center text-primary-light dark:text-primary-dark mb-4\">\n\t\t{title}\n\t</h1>\n\n\t<div class=\"space-y-4 mb-6\">\n\t\t<p class=\"text-secondary-light dark:text-secondary-dark text-center\">\n\t\t\tChoose an option to get started with your wallet:\n\t\t</p>\n\t\t<ul class=\"list-disc list-inside text-secondary-light dark:text-secondary-dark space-y-2\">\n\t\t\t<li>Create a new account if this is your first time</li>\n\t\t\t<!-- <li>Import an existing account if you have one</li> -->\n\t\t\t<li>\n\t\t\t\tRestore from a YAKKL Emergency Kit if you're recovering your wallet (AFTER creating the\n\t\t\t\tinitial account!)\n\t\t\t</li>\n\t\t</ul>\n\t</div>\n\n\t<div class=\"space-y-3\">\n\t\t<!-- Create New Account Button -->\n\t\t<button\n\t\t\tonclick={onCreate}\n\t\t\tclass=\"w-full py-2 px-4 bg-blue-600 text-white font-semibold rounded-lg shadow-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-opacity-75 transition duration-200 ease-in-out\"\n\t\t>\n\t\t\tCreate New Account\n\t\t</button>\n\n\t\t<div class=\"my-4 border-t border-neutral-dark dark:border-neutral-light\"></div>\n\n\t\t<!-- Import Existing Account Button -->\n\t\t<button\n\t\t\tonclick={onImport}\n\t\t\tclass=\"w-full py-2 px-4 bg-green-600 text-white font-semibold rounded-lg shadow-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-400 focus:ring-opacity-75 transition duration-200 ease-in-out\"\n\t\t>\n\t\t\tImport Existing Account(s)\n\t\t</button>\n\n\t\t<!-- Restore from Emergency Kit Button -->\n\t\t{#if isProUser}\n\t\t\t<button\n\t\t\t\tonclick={handleRestore}\n\t\t\t\tclass=\"w-full py-2 px-4 bg-red-600 text-white font-semibold rounded-lg shadow-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-400 focus:ring-opacity-75 transition duration-200 ease-in-out flex items-center justify-center gap-2\"\n\t\t\t>\n\t\t\t\t<svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t<path d=\"M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4M12,6A6,6 0 0,0 6,12A6,6 0 0,0 12,18A6,6 0 0,0 18,12A6,6 0 0,0 12,6M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8Z\"/>\n\t\t\t\t</svg>\n\t\t\t\tRestore from Emergency Kit\n\t\t\t</button>\n\t\t{:else}\n\t\t\t<SimpleTooltip content=\"Upgrade to Pro for full Emergency Kit features\">\n\t\t\t\t<button\n\t\t\t\t\tdisabled\n\t\t\t\t\tclass=\"w-full py-2 px-4 bg-gray-400 text-gray-200 font-semibold rounded-lg shadow-md cursor-not-allowed transition duration-200 ease-in-out flex items-center justify-center gap-2 relative\"\n\t\t\t\t>\n\t\t\t\t\t<svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t<path d=\"M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4M12,6A6,6 0 0,0 6,12A6,6 0 0,0 12,18A6,6 0 0,0 18,12A6,6 0 0,0 12,6M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8Z\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t\tRestore from Emergency Kit\n\t\t\t\t\t<div class=\"absolute -top-1 -right-1 w-4 h-4 bg-gradient-to-r from-indigo-400 to-purple-400 rounded-full flex items-center justify-center\">\n\t\t\t\t\t\t<svg class=\"w-2.5 h-2.5 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n\t\t\t\t\t\t\t<path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</div>\n\t\t\t\t</button>\n\t\t\t</SimpleTooltip>\n\t\t{/if}\n\t</div>\n</div>\n","<script lang=\"ts\">\n\timport Modal from '$lib/components/Modal.svelte';\n\timport RegistrationOption from '$lib/components/RegistrationOption.svelte';\n\n\tinterface Props {\n\t\tshow?: boolean;\n\t\tonCancel?: () => void;\n\t\tonClose?: () => void;\n\t\tonCreate: () => void;\n\t\tonImport?: () => void; // NOTE: This is for the RegistrationOptionModal component. The RegistrationOption is only for the RegistrationOptionModal component. Restore requires a valid account to be created first. So, removed restore from here for now.\n\t\tonRestore?: () => void; // NOTE: RegistrationOption below does not have onImport nor onRestore.\n\t}\n\n\tlet {\n\t\tshow = $bindable(false),\n\t\tonCancel = $bindable(() => {\n\t\t\tshow = false;\n\t\t}),\n\t\tonClose = $bindable(() => {\n\t\t\tshow = false;\n\t\t}),\n\t\tonCreate,\n\t\tonImport,\n\t\tonRestore\n\t}: Props = $props();\n\n\t// NOTE: This is for the RegistrationOptionModal component. The RegistrationOption is only for the RegistrationOptionModal component. Restore requires a valid account to be created first. So, removed restore from here for now.\n</script>\n\n<Modal bind:show {onCancel} {onClose} title=\"Registration/Restoration Options\">\n\t<RegistrationOption {onCreate} {onImport} {onRestore} title=\"Options\" />\n</Modal>\n","<script lang=\"ts\">\n\timport type { Profile, ProfileData, SwapToken } from '$lib/common/interfaces';\n\timport { decryptData, isEncryptedData, type BigNumberish } from '$lib/common';\n\timport type { Provider } from '$lib/managers/Provider';\n\timport type { Ethereum } from '$lib/managers/blockchains/evm/ethereum/Ethereum';\n\timport type { UniswapSwapManager } from '$lib/managers/UniswapSwapManager';\n\timport type { TokenService } from '$lib/managers/blockchains/evm/TokenService';\n\timport Swap from './Swap.svelte';\n\timport { getMiscStore, getProfile } from '$lib/common/stores';\n\timport { deepCopy } from '$lib/utilities';\n\timport ErrorNoAction from './ErrorNoAction.svelte';\n\timport Warning from './Warning.svelte';\n\timport PincodeVerify from './PincodeVerify.svelte';\n\timport { log } from '$lib/common/logger-wrapper';\n\n\tinterface Props {\n\t\tshow?: boolean;\n\t\tfundingAddress: string;\n\t\tprovider: Provider;\n\t\tblockchain: Ethereum;\n\t\tswapManager: UniswapSwapManager;\n\t\ttokenService: TokenService<any>;\n\t\t// export let gasProvider: EthereumGasProvider;\n\t\tclassName?: string;\n\t}\n\n\tlet {\n\t\tshow = $bindable(true),\n\t\tfundingAddress,\n\t\tprovider,\n\t\tblockchain,\n\t\tswapManager,\n\t\ttokenService,\n\t\tclassName = 'text-gray-600 z-[999]'\n\t}: Props = $props();\n\n\tlet showVerify = $state(false);\n\tlet showError = $state(false);\n\tlet errorValue = $state('');\n\tlet showWarning = $state(false);\n\tlet warningValue = $state('');\n\tlet pincode = '';\n\tlet pincodeVerified = false;\n\n\t// Note: This calls the actual Swap component but handles the onSwap function. If you want to handle the onSwap function then do not use this but call Swap itself.\n\n\tfunction onSwap(\n\t\tfundingAddress: string,\n\t\tfromToken: SwapToken,\n\t\ttoToken: SwapToken,\n\t\tfromAmount: BigNumberish,\n\t\ttoAmount: BigNumberish\n\t) {\n\t\tlog.info(\n\t\t\t`onSwap: fundingAddress=${fundingAddress}, fromToken=${fromToken}, toToken=${toToken}, fromAmount=${fromAmount}, toAmount=${toAmount}`\n\t\t);\n\t}\n\n\tfunction handleClose() {\n\t\tshowError = false;\n\t\terrorValue = '';\n\t\tshowWarning = false;\n\t\twarningValue = '';\n\t\tpincodeVerified = false;\n\t}\n\n\t// Pincode verification\n\tfunction handleReject(\n\t\trejection: string = 'You have rejected or Pincode was not validated. No swap transaction was sent.'\n\t) {\n\t\ttry {\n\t\t\tshowVerify = false;\n\t\t\tshowWarning = true;\n\t\t\twarningValue = rejection;\n\t\t} catch (e: any) {\n\t\t\tlog.error(e);\n\t\t}\n\t}\n\n\t// One more internal check to verify the pincode\n\tasync function verifyWithPin(pin: string, pincodeVerified: boolean): Promise<Profile | null> {\n\t\ttry {\n\t\t\tconst yakklMiscStore = getMiscStore();\n\t\t\tlet profile: Profile | null = await getProfile();\n\t\t\tif (profile === null) {\n\t\t\t\tpincodeVerified = false;\n\t\t\t\tthrow 'Profile was not found.';\n\t\t\t}\n\n\t\t\tlet profileEncrypted = null;\n\n\t\t\tif (isEncryptedData(profile.data)) {\n\t\t\t\tprofileEncrypted = deepCopy(profile);\n\t\t\t\tawait decryptData(profile?.data, yakklMiscStore).then((result) => {\n\t\t\t\t\t(profile as Profile).data = result as ProfileData;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif ((profile.data as ProfileData).pincode !== pincode && pincodeVerified === false) {\n\t\t\t\tpincodeVerified = false;\n\t\t\t\tthrow 'PINCODE was not verified.';\n\t\t\t}\n\n\t\t\tif (pincode === (profile.data as ProfileData).pincode) {\n\t\t\t\tprofile = null;\n\t\t\t\treturn profileEncrypted;\n\t\t\t} else {\n\t\t\t\tpincodeVerified = false;\n\t\t\t\tthrow 'PINCODE did not match.';\n\t\t\t}\n\t\t} catch (e: any) {\n\t\t\tlog.error(e);\n\t\t\tpincodeVerified = false;\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tasync function handleVerified(pincode: string) {\n\t\ttry {\n\t\t\tlet profile: Profile | null = await verifyWithPin(pincode, pincodeVerified);\n\t\t\tif (profile === null) {\n\t\t\t\tthrow 'Profile was not found.';\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tlog.error(e);\n\t\t}\n\t}\n</script>\n\n<PincodeVerify\n\tbind:show={showVerify}\n\tonRejected={handleReject}\n\tonVerified={handleVerified}\n\tclassName=\"text-gray-600\"\n/>\n<ErrorNoAction bind:show={showError} value={errorValue} handle={handleClose} />\n<Warning bind:show={showWarning} value={warningValue} handle={handleClose} />\n\n<!-- Just shows you how to set it up but it is not plugged into Swap itself -->\n\n<Swap\n\tbind:show\n\t{fundingAddress}\n\t{provider}\n\t{blockchain}\n\t{swapManager}\n\t{tokenService}\n\t{className}\n\t{onSwap}\n/>\n","<script lang=\"ts\">\n\timport { onMount, onDestroy } from 'svelte';\n\timport type { PriceProvider } from '$lib/common/interfaces';\n\timport { CoinbasePriceProvider } from '$lib/managers/providers/price/coinbase/CoinbasePriceProvider';\n\timport { getTimerManager } from '$lib/managers/TimerManager';\n\timport { priceStore } from '$lib/common/stores';\n\timport { log } from '$lib/managers/Logger';\n\timport { TIMER_PRICE_INTERVAL_TIME } from '$lib/common';\n\n\tinterface Props {\n\t\tsymbol: string; // In a swap this would be the fromToken\n\t\tcurrency: string; // In a swap this would be the toToken\n\t\tproviders?: PriceProvider[];\n\t\tupdateInterval?: number;\n\t\tchildren?: import('svelte').Snippet<[any]>;\n\t}\n\n\tlet {\n\t\tsymbol,\n\t\tcurrency,\n\t\tproviders = $bindable([new CoinbasePriceProvider()]), // Defaults to Coinbase but the passed in providers should have priority with more than one\n\t\tupdateInterval = TIMER_PRICE_INTERVAL_TIME, // milliseconds\n\t\tchildren\n\t}: Props = $props();\n\n\t// priceStore is passed to the children layout below - export is not needed but adding it for clarity and possible clean up\n\t// export const priceStore = writable<MarketPriceData | null>(null);\n\t// let interval: NodeJS.Timeout;\n\n\tasync function updatePrice() {\n\t\ttry {\n\t\t\tfor (const provider of providers) {\n\t\t\t\ttry {\n\t\t\t\t\tconst priceData = await provider.getMarketPrice(`${symbol}-${currency}`);\n\t\t\t\t\tif (priceData === null) {\n\t\t\t\t\t\tlog.info(\n\t\t\t\t\t\t\t`PriceTracker - fetched no price from ${provider.getName()}: ${symbol}-${currency}`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tpriceStore.set(priceData);\n\t\t\t\t\tbreak;\n\t\t\t\t} catch (error) {\n\t\t\t\t\tlog.error(`Error fetching price from ${provider.getName()}:`, false, error);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tlog.error('PriceTracker:', false, error);\n\t\t}\n\t}\n\n\tonMount(() => {\n\t\ttry {\n\t\t\tif (providers.length === 0) {\n\t\t\t\tproviders = [new CoinbasePriceProvider()]; // Fallback to Coinbase if no providers are passed\n\t\t\t}\n\n\t\t\tupdatePrice();\n\t\t\t// Add and start timer\n\t\t\tgetTimerManager().addTimer('priceTracker_updatePrice', updatePrice, updateInterval);\n\t\t\tgetTimerManager().startTimer('priceTracker_updatePrice');\n\t\t} catch (error) {\n\t\t\tlog.error(error);\n\t\t}\n\t});\n\n\tonDestroy(() => {\n\t\tgetTimerManager().stopTimer('priceTracker_updatePrice');\n\t\tpriceStore.set(null);\n\t});\n</script>\n\n{@render children?.({ price: $priceStore })}\n","<script lang=\"ts\">\n\timport type { PriceProvider } from '$lib/common/interfaces';\n\timport { CoinbasePriceProvider } from '$lib/managers/providers/price/coinbase/CoinbasePriceProvider';\n\timport { CoingeckoPriceProvider } from '$lib/managers/providers/price/coingecko/CoingeckoPriceProvider';\n\timport { onMount } from 'svelte';\n\timport PriceTracker from './PriceTracker.svelte';\n\timport { formatPrice } from '$lib/utilities';\n\timport { formatDate } from '$lib/common/datetime';\n\timport { log } from '$lib/managers/Logger';\n\n\tinterface Props {\n\t\t// import { getCurrencyCodeForUserLocale } from '$lib/utilities';\n\t\tsymbol: string;\n\t\tcurrency?: string; //getCurrencyCodeForUserLocale() ?? 'USD';\n\t\tshowLastUpdated?: boolean;\n\t\tquantity?: number;\n\t\tcustomClass?: string;\n\t\tuseProviders?: string[];\n\t}\n\n\tlet {\n\t\tsymbol,\n\t\tcurrency = 'USD',\n\t\tshowLastUpdated = false,\n\t\tquantity = 1,\n\t\tcustomClass = '',\n\t\tuseProviders = ['Coinbase', 'Coingecko']\n\t}: Props = $props();\n\n\tlet providersMap = new Map<string, PriceProvider>();\n\tlet activeProviders: PriceProvider[] = $state([]);\n\n\tonMount(async () => {\n\t\ttry {\n\t\t\tprovidersMap.set('Coinbase', new CoinbasePriceProvider());\n\t\t\tprovidersMap.set('Coingecko', new CoingeckoPriceProvider());\n\n\t\t\tactiveProviders = useProviders\n\t\t\t\t.map((name) => providersMap.get(name))\n\t\t\t\t.filter((provider): provider is PriceProvider => provider !== undefined);\n\t\t} catch (error) {\n\t\t\tlog.error('TokenPrice:', false, error);\n\t\t}\n\t});\n</script>\n\n<PriceTracker {symbol} {currency} providers={activeProviders}>\n\t{#snippet children({ price })}\n\t\t<div class={`flex flex-col items-start ${customClass}`}>\n\t\t\t{#if price !== null}\n\t\t\t\t<span class=\"text-xl font-bold\">{formatPrice(price.price * quantity)}</span>\n\t\t\t\t<span class=\"text-xs text-gray-600\">{symbol}-{currency}</span>\n\t\t\t\t<span class=\"text-xs text-gray-500\">Price: {formatPrice(price.price)}</span>\n\t\t\t\t{#if showLastUpdated && price.lastUpdated}\n\t\t\t\t\t<span class=\"text-xs text-gray-500\">Last updated: {formatDate(price.lastUpdated)}</span>\n\t\t\t\t{/if}\n\t\t\t{:else}\n\t\t\t\t<span class=\"text-xl font-bold\">{formatPrice(0)}</span>\n\t\t\t\t<span class=\"text-xs text-gray-600\"\n\t\t\t\t\t>{symbol ? symbol : ' -- '}-{currency ? currency : ' -- '}</span\n\t\t\t\t>\n\t\t\t\t<span class=\"text-xs text-gray-500\">Price: -- </span>\n\t\t\t\t{#if showLastUpdated}\n\t\t\t\t\t<span class=\"text-xs text-gray-500\">Last updated: -- </span>\n\t\t\t\t{/if}\n\t\t\t{/if}\n\t\t</div>\n\t{/snippet}\n</PriceTracker>\n","import * as yup from 'yup';\nimport { writable } from 'svelte/store';\n\n// Define the schema\nexport const sendFormSchema = yup.object().shape({\n\ttoAddress: yup\n\t\t.string()\n\t\t.required('Please enter a recipient address.')\n\t\t.matches(/^(0x)?[0-9a-fA-F]{40}$|^.*\\.eth$/, 'Must be a valid Ethereum address or ENS name.'),\n\tamount: yup\n\t\t.number()\n\t\t.required('Please enter the amount to send.')\n\t\t.moreThan(0, 'Amount must be greater than 0.')\n});\n\n// Stores for data and errors\nexport const formData = writable({\n\ttoAddress: '',\n\tamount: ''\n});\n\nexport const formErrors = writable<Record<string, string | undefined>>({});\n\n// Validation function\nexport async function validateForm(data: Record<string, any>): Promise<boolean> {\n\ttry {\n\t\tformErrors.set({});\n\t\tawait sendFormSchema.validate(data, { abortEarly: false });\n\t\treturn true;\n\t} catch (error) {\n\t\tif (error instanceof yup.ValidationError) {\n\t\t\tconst errors: Record<string, string | undefined> = {};\n\t\t\terror.inner.forEach((err) => {\n\t\t\t\tif (err.path) {\n\t\t\t\t\terrors[err.path] = err.message;\n\t\t\t\t}\n\t\t\t});\n\t\t\tformErrors.set(errors);\n\t\t}\n\t\treturn false;\n\t}\n}\n","<script lang=\"ts\">\n\timport { log } from '$lib/managers/Logger';\n\timport { formData, formErrors, validateForm } from './validation';\n\n\tlet data = {\n\t\ttoAddress: '',\n\t\tamount: ''\n\t};\n\n\tlet errors: Record<string, string | undefined> = {};\n\n\t$: formErrors.subscribe((value) => {\n\t\terrors = value;\n\t});\n\n\tasync function handleSubmit() {\n\t\tconst isValid = await validateForm(data);\n\t\tif (isValid) {\n\t\t\tlog.info('Form is valid, submitting:', false, data);\n\t\t\t// Perform the transaction here\n\t\t} else {\n\t\t\tlog.error('Form validation failed:', false, errors);\n\t\t}\n\t}\n</script>\n\n<form on:submit|preventDefault={handleSubmit}>\n\t<label>\n\t\tTo Address:\n\t\t<input type=\"text\" bind:value={data.toAddress} />\n\t\t{#if errors.toAddress}\n\t\t\t<small class=\"text-red-600\">{errors.toAddress}</small>\n\t\t{/if}\n\t</label>\n\n\t<label>\n\t\tAmount:\n\t\t<input type=\"number\" bind:value={data.amount} />\n\t\t{#if errors.amount}\n\t\t\t<small class=\"text-red-600\">{errors.amount}</small>\n\t\t{/if}\n\t</label>\n\n\t<button type=\"submit\">Send</button>\n</form>\n","<script lang=\"ts\">\n\timport Modal from '../Modal.svelte';\n\timport SendForm from './SendForm.svelte';\n\n\texport let show = false; // To control modal visibility\n\texport let title = 'Send Crypto';\n\texport let description = 'Fill in the details below to send cryptocurrency.';\n\texport let className = ''; // Additional classes for the modal\n\texport let onClose = () => (show = false); // Callback for closing the modal\n</script>\n\n<Modal bind:show {title} {description} {className} {onClose}>\n\t<!-- <svelte:fragment slot=\"children\"> -->\n\t<SendForm />\n\t<!-- </svelte:fragment> -->\n\n\t<!-- <svelte:fragment slot=\"footer\"> -->\n\t<div class=\"flex justify-end\">\n\t\t<button\n\t\t\ttype=\"button\"\n\t\t\tclass=\"px-4 py-2 bg-gray-300 text-gray-800 rounded-lg hover:bg-gray-400\"\n\t\t\tonclick={onClose}\n\t\t>\n\t\t\tCancel\n\t\t</button>\n\t</div>\n\t<!-- </svelte:fragment> -->\n</Modal>\n","<script lang=\"ts\">\n\timport { goto } from '$app/navigation';\n\timport { decryptData, error_log, isEncryptedData, PATH_WELCOME } from '$lib/common';\n\timport type {\n\t\tAccountData,\n\t\tCurrentlySelectedData,\n\t\tSwapPriceProvider,\n\t\tTokenData,\n\t\tYakklAccount,\n\t\tYakklContact,\n\t\tYakklWatch\n\t} from '$lib/common/interfaces';\n\timport Accounts from '$lib/components/Accounts.svelte';\n\timport Contacts from '$lib/components/Contacts.svelte';\n\timport ExportPrivateKey from '$lib/components/ExportPrivateKey.svelte';\n\timport ImportPhrase from '$lib/components/ImportPhrase.svelte';\n\timport ImportPrivateKey from '$lib/components/ImportPrivateKey.svelte';\n\timport ImportWatchAccount from '$lib/components/ImportWatchAccount.svelte';\n\timport Pincode from '$lib/components/Pincode.svelte';\n\timport PincodeModal from '$lib/components/PincodeVerify.svelte';\n\timport Receive from '$lib/components/Receive.svelte';\n\timport TokenBox from '$lib/components/TokenBox.svelte';\n\t// import { ethTokenData, btcTokenData } from '$lib/data/mock/MockTokenData';\n\t// import Profile from '$lib/components/Profile.svelte.tmp';\n\t// import Preferences from '$lib/components/Preferences.svelte.tmp';\n\timport EmergencyKitModal from '$lib/components/EmergencyKitModal.svelte';\n\timport RegistrationOptionModal from '$lib/components/RegistrationOptionModal.svelte';\n\timport ImportOptionModal from '$lib/components/ImportOptionModal.svelte';\n\timport SwapModal from '$lib/components/SwapModal.svelte';\n\timport type { SwapToken as Token } from '$lib/common/interfaces';\n\timport type { BigNumberish } from '$lib/common';\n\timport { getYakklCurrentlySelected, getMiscStore } from '$lib/common/stores';\n\timport { onMount } from 'svelte';\n\timport PriceTracker from '$lib/components/PriceTracker.svelte';\n\timport TokenPrice from '$lib/components/TokenPrice.svelte';\n\timport { CoinbasePriceProvider } from '$lib/managers/providers/price/coinbase/CoinbasePriceProvider';\n\timport type { Wallet } from '$lib/managers/Wallet';\n\timport WalletManager from '$lib/managers/WalletManager';\n\timport type { Provider } from '$lib/managers/Provider';\n\timport type { Ethereum } from '$lib/managers/blockchains/evm/ethereum/Ethereum';\n\timport { TokenService } from '$lib/managers/blockchains/evm/TokenService';\n\timport { UniswapSwapManager } from '$lib/managers/UniswapSwapManager';\n\timport Swap from '$lib/components/Swap.svelte';\n\timport { getYakklCurrentlySelectedAccountKey } from '$lib/common/security';\n\timport SendFormModal from '$lib/components/send/SendFormModal.svelte';\n\timport { log } from '$lib/common/logger-wrapper';\n\timport { getSettings } from '$lib/common/stores';\n\timport { shouldShowProFeatures } from '$lib/common/token-analytics';\n\timport { PlanType } from '$lib/common/types';\n\timport type { Settings } from '$lib/common/interfaces';\n\timport SimpleTooltip from '$lib/components/SimpleTooltip.svelte';\n\n\tconst providers = [new CoinbasePriceProvider()];\n\n\t// let profileComponent: Profile = $state();\n\t// let preferencesComponent: Preferences = $state();\n\n\t// Mock token data array\n\tconst tokenDataArray: TokenData[] = []; //[ethTokenData, btcTokenData];\n\n\tlet showImportPhrase = $state(false);\n\tlet showExportPrivateKey = $state(false);\n\tlet showImportWatch = $state(false);\n\tlet showImportAccount = $state(false);\n\tlet showPincodeModal = $state(false);\n\tlet showPincode = $state(false);\n\tlet showAccounts = $state(false);\n\tlet showContacts = $state(false);\n\tlet showReceive = $state(false);\n\tlet showEmergencyKit = $state(false);\n\tlet showRegistrationOptions = $state(false);\n\tlet showImportOptions = $state(false);\n\tlet showSwap = $state(false);\n\tlet showSwapModal = $state(false);\n\tlet showSendModal = $state(false);\n\n\tlet fundingAddress: string = $state();\n\tlet account: YakklAccount | null = null;\n\tlet mode: 'import' | 'export' = $state('export');\n\tlet settings: Settings | null = $state(null);\n\tlet isProUser = $state(false);\n\n\tlet swapPriceProvider: SwapPriceProvider | null = null; // Don't have to set it to null\n\tlet provider: Provider = $state();\n\tlet chainId = 1;\n\tlet blockchain: Ethereum = $state();\n\tlet swapManager: UniswapSwapManager = $state();\n\tlet tokenService: TokenService<any> = $state();\n\t// let gasProvider: EthereumGasProvider;\n\n\tonMount(async () => {\n\t\ttry {\n\t\t\t// Load settings to check membership\n\t\t\tsettings = await getSettings();\n\t\t\tisProUser = shouldShowProFeatures(settings?.plan?.type || PlanType.BASIC_MEMBER);\n\n\t\t\tconst currentlySelected = await getYakklCurrentlySelected();\n\t\t\t// const yakklMiscStore = getMiscStore();\n\n\t\t\tif (currentlySelected.shortcuts?.address) {\n\t\t\t\tfundingAddress = currentlySelected.shortcuts.address;\n\t\t\t}\n\t\t\tchainId = currentlySelected.shortcuts?.chainId ?? 1;\n\t\t\tif (swapPriceProvider === null) {\n\t\t\t\tlet wallet: Wallet | null = null;\n\t\t\t\twallet = WalletManager.getInstance(\n\t\t\t\t\t['Alchemy'],\n\t\t\t\t\t['Ethereum'],\n\t\t\t\t\tchainId,\n\t\t\t\t\timport.meta.env.VITE_ALCHEMY_API_KEY_PROD\n\t\t\t\t);\n\t\t\t\tif (wallet) {\n\t\t\t\t\tif (!wallet.getSigner()) {\n\t\t\t\t\t\tconst accountKey = await getYakklCurrentlySelectedAccountKey();\n\t\t\t\t\t\tif (accountKey && accountKey.privateKey) await wallet.setSigner(accountKey.privateKey); // Could have sent this to getInstance as well\n\t\t\t\t\t}\n\n\t\t\t\t\tprovider = wallet.getProvider()!; // Only for testing\n\t\t\t\t\tif (provider) {\n\t\t\t\t\t\tconst signer = wallet.getSigner();\n\t\t\t\t\t\tif (signer) {\n\t\t\t\t\t\t\tprovider.setSigner(signer);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tblockchain = wallet.getBlockchain() as Ethereum;\n\n\t\t\t\t\t\tswapManager = new UniswapSwapManager(blockchain as Ethereum, provider!);\n\t\t\t\t\t\ttokenService = new TokenService(blockchain as Ethereum);\n\t\t\t\t\t\t// gasProvider = new EthereumGasProvider(provider!, blockchain!, new CoinbasePriceProvider());\n\t\t\t\t\t\t// swapPriceProvider = new UniswapSwapPriceProvider(provider, new CoinbasePriceProvider());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\terror_log('SwapTokenPrice:', false, error);\n\t\t}\n\t});\n\n\tfunction close() {\n\t\tgoto(PATH_WELCOME);\n\t}\n\n\t// This is for future reference:\n\t// import { swapServices } from './swapService';\n\t// // ... in your swap function\n\t// const bestQuote = await swapServices.swapAggregator.getBestQuote(tokenIn, tokenOut, amountIn);\n\t// log.debug(`Best quote from: ${bestQuote.provider}`);\n\t// // Execute the swap\n\t// const txResponse = await swapServices.swapAggregator.executeBestSwap(tokenIn, tokenOut, amountIn, minAmountOut, recipient, deadline);\n\n\tfunction onSwap(\n\t\tfundingAddress: string,\n\t\tfromToken: Token,\n\t\ttoToken: Token,\n\t\tfromAmount: BigNumberish,\n\t\ttoAmount: BigNumberish\n\t) {\n\t\t// log.debug(`onSwap-Testing: fundingAddress=${fundingAddress}, fromToken=${fromToken}, toToken=${toToken}, fromAmount=${fromAmount}, toAmount=${toAmount}`);\n\t}\n\n\tfunction openSendModal() {\n\t\tshowSendModal = true;\n\t}\n\n\tfunction handleSendModal() {\n\t\tshowSendModal = false;\n\t}\n\n\tfunction handleAccounts(selectedAccount: YakklAccount) {\n\t\t// Handle the selected account here\n\t\t// log.debug('Selected account:', selectedAccount);\n\t}\n\n\tfunction handleContact(selectedContact: YakklContact) {\n\t\t// Handle the selected contact here\n\t\t// log.debug('Selected contact:', selectedContact);\n\t}\n\n\tfunction handleImport(account: YakklAccount) {\n\t\t// Handle the imported account here\n\t\t// log.debug('Imported account:', account);\n\t}\n\n\tfunction handleVerifyModal(pincode: string) {\n\t\t// Handle the pincode here\n\t\t// log.debug('Pincode:', pincode);\n\t}\n\n\tfunction handleVerify(pincodeOld: string, pincodeNew: string) {\n\t\t// Handle the pincode here\n\t\t// log.debug('Pincode - old and new:', pincodeOld, pincodeNew);\n\t}\n\n\tfunction handleImportWatch(account: YakklWatch) {\n\t\t// Handle the import watch account here\n\t\t// log.debug('Import watch account');\n\t}\n\n\tfunction handleExportPrivateKey() {\n\t\t// Handle the export private key here\n\t\t// log.debug('Export private key');\n\t}\n\n\tfunction handleImportPhrase() {\n\t\t// Handle the import phrase here\n\t\t// log.debug('Import phrase account:', account);\n\t}\n\n\tfunction handleEmergencyKit(success: boolean, message: string) {\n\t\t// Handle the emergency kit here\n\t\tshowEmergencyKit = false;\n\t\t// log.debug('Emergency kit:', success, message);\n\t}\n\n\tfunction handleCreateAccount() {\n\t\t// log.debug('Create initial account - actual implementation not provided');\n\t\t// Add your logic here\n\t}\n\n\tfunction handleImportPrivateKey() {\n\t\t// log.debug('Import an existing account - actual implementation not provided');\n\t\t// Add your logic here\n\t}\n\n\tfunction handleRestore() {\n\t\t// log.debug('Restore from Emergency Kit - actual implementation not provided');\n\t\t// Add your logic here\n\t}\n\n\tfunction handleCancel() {\n\t\tshowRegistrationOptions = false;\n\t\t// Add any additional cancel logic here\n\t}\n</script>\n\n<div class=\"h-screen overflow-y-auto p-4\">\n\t<!-- <div class=\"grid grid-cols-2 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 overflow-x-auto bg-white p-4\">\n    {#each tokenDataArray as token}\n      <div class=\"rounded-2xl overflow-hidden shadow-md\">\n        <TokenBox {token} />\n      </div>\n    {/each}\n  </div> -->\n\n\t<div class=\"my-4\">\n\t\t<SendFormModal bind:show={showSendModal} />\n\t</div>\n\n\t<div class=\"my-4\">\n\t\t<RegistrationOptionModal\n\t\t\tbind:show={showRegistrationOptions}\n\t\t\tonCreate={handleCreateAccount}\n\t\t\tonImport={() => {}}\n\t\t/>\n\t</div>\n\n\t<div class=\"my-4\">\n\t\t<!-- Shows SwapPriceTracker and SwapTokenPrice -->\n\t\t<SwapModal\n\t\t\tbind:show={showSwapModal}\n\t\t\t{fundingAddress}\n\t\t\t{provider}\n\t\t\t{blockchain}\n\t\t\t{swapManager}\n\t\t\t{tokenService}\n\t\t/>\n\t</div>\n\n\t<div class=\"my-4\">\n\t\t<Swap\n\t\t\tbind:show={showSwap}\n\t\t\t{fundingAddress}\n\t\t\t{onSwap}\n\t\t\t{provider}\n\t\t\t{blockchain}\n\t\t\t{swapManager}\n\t\t\t{tokenService}\n\t\t/>\n\t</div>\n\n\t<div class=\"my-4\">\n\t\t<ImportOptionModal\n\t\t\tbind:show={showImportOptions}\n\t\t\tshowImportWatch={true}\n\t\t\tonImportKey={() => {\n\t\t\t\tshowImportOptions = false;\n\t\t\t\tshowImportAccount = true;\n\t\t\t}}\n\t\t\tonImportPhrase={() => {\n\t\t\t\tshowImportOptions = false;\n\t\t\t\tshowImportPhrase = true;\n\t\t\t}}\n\t\t\tonRestore={() => {\n\t\t\t\tshowImportOptions = false;\n\t\t\t\tmode = 'import';\n\t\t\t\tshowEmergencyKit = true;\n\t\t\t}}\n\t\t\tonImportWatch={() => {\n\t\t\t\tshowImportOptions = false;\n\t\t\t\tshowImportWatch = true;\n\t\t\t}}\n\t\t/>\n\t</div>\n\n\t<div class=\"my-4\">\n\t\t<ExportPrivateKey\n\t\t\tbind:show={showExportPrivateKey}\n\t\t\tonVerify={handleExportPrivateKey}\n\t\t\tclassName=\"text-gray-600\"\n\t\t/>\n\t</div>\n\n\t<div class=\"my-4\">\n\t\t<PincodeModal\n\t\t\tbind:show={showPincodeModal}\n\t\t\tonVerified={handleVerifyModal}\n\t\t\tclassName=\"text-gray-600\"\n\t\t/>\n\t</div>\n\n\t<div class=\"my-4\">\n\t\t<Pincode bind:show={showPincode} onVerified={handleVerify} className=\"text-gray-600\" />\n\t</div>\n\n\t<div class=\"my-4\">\n\t\t<ImportWatchAccount\n\t\t\tbind:show={showImportWatch}\n\t\t\tonComplete={handleImportWatch}\n\t\t\tclassName=\"text-gray-600\"\n\t\t/>\n\t</div>\n\n\t<div class=\"my-4\">\n\t\t<ImportPrivateKey\n\t\t\tbind:show={showImportAccount}\n\t\t\tonComplete={handleImport}\n\t\t\tclassName=\"text-gray-600\"\n\t\t/>\n\t</div>\n\n\t<div class=\"my-4\">\n\t\t<ImportPhrase\n\t\t\tbind:show={showImportPhrase}\n\t\t\tonComplete={handleImportPhrase}\n\t\t\tclassName=\"text-gray-600\"\n\t\t/>\n\t</div>\n\n\t<div class=\"my-4\">\n\t\t<Accounts bind:show={showAccounts} onAccountSelect={handleAccounts} className=\"text-gray-600\" />\n\t</div>\n\n\t<div class=\"my-4\">\n\t\t<Contacts bind:show={showContacts} onContactSelect={handleContact} />\n\t</div>\n\n\t<div class=\"my-4\">\n\t\t<!-- Foundry primary test account -->\n\t\t<Receive bind:show={showReceive} address={'0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266'} />\n\t</div>\n\n\t<div class=\"my-4\">\n\t\t<EmergencyKitModal bind:show={showEmergencyKit} {mode} onComplete={handleEmergencyKit} />\n\t</div>\n\n\t<div class=\"my-4\">\n\t\t<PriceTracker symbol=\"ETH\" currency=\"USD\">\n\t\t\t{#snippet children({ price })}\n\t\t\t\t{#if price !== null}\n\t\t\t\t\t<span class=\"text-xl font-semibold text-blue-600\"\n\t\t\t\t\t\t>{price.price} USD (no formatting using PriceTracker)</span\n\t\t\t\t\t>\n\t\t\t\t\t<span class=\"text-sm text-gray-500\">{price.provider}</span>\n\t\t\t\t{:else}\n\t\t\t\t\t<span class=\"text-gray-500\">Fetching price...</span>\n\t\t\t\t{/if}\n\t\t\t{/snippet}\n\t\t</PriceTracker>\n\t</div>\n\n\t<div class=\"my-4\">\n\t\t<div class=\"p-6 space-y-8\">\n\t\t\t<h1 class=\"text-2xl font-bold mb-4\">Crypto Dashboard example using TokenPrice</h1>\n\n\t\t\t<div class=\"bg-white shadow rounded-lg p-4\">\n\t\t\t\t<h2 class=\"text-lg font-semibold mb-2\">Ethereum Price</h2>\n\t\t\t\t<TokenPrice symbol=\"ETH\" currency=\"USD\" />\n\t\t\t</div>\n\n\t\t\t<div class=\"bg-gray-100 shadow rounded-lg p-4\">\n\t\t\t\t<h2 class=\"text-lg font-semibold mb-2\">BTC Price</h2>\n\t\t\t\t<TokenPrice symbol=\"BTC\" customClass=\"bg-yellow-100 p-2 rounded\" />\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<!-- <Profile bind:this={profileComponent} />\n\n  <Preferences bind:this={preferencesComponent} /> -->\n\n\t<!-- <div class=\"my-4 p-2 border-gray-100 border-2\">\n    <p class=\"text-gray-100 text-sm\">Experimental Only</p>\n\n    <button\n      onclick={() => profileComponent.openProfile()}\n      class=\"w-full bg-gray-200 text-gray-700 font-bold py-3 px-4 rounded-lg mt-3 hover:bg-gray-300 transition-colors\">\n      Open Profile\n    </button>\n\n    <button\n      onclick={() => preferencesComponent.openPreferences()}\n      class=\"w-full bg-gray-200 text-gray-700 font-bold py-3 px-4 rounded-lg mt-3 hover:bg-gray-300 transition-colors\">\n      Open Preferences\n    </button>\n  </div> -->\n\n\t<button\n\t\tonclick={() => (showSwapModal = true)}\n\t\tclass=\"w-full bg-gray-200 text-gray-700 font-bold py-3 px-4 rounded-lg mt-3 hover:bg-gray-300 transition-colors\"\n\t>\n\t\tSwapModal\n\t</button>\n\n\t<button\n\t\tonclick={() => (showSwap = true)}\n\t\tclass=\"w-full bg-gray-200 text-gray-700 font-bold py-3 px-4 rounded-lg mt-3 hover:bg-gray-300 transition-colors\"\n\t>\n\t\tSwap\n\t</button>\n\n\t<button\n\t\tonclick={() => (showSendModal = true)}\n\t\tclass=\"w-full bg-gray-200 text-gray-700 font-bold py-3 px-4 rounded-lg mt-3 hover:bg-gray-300 transition-colors\"\n\t>\n\t\tSend Transaction\n\t</button>\n\n\t<button\n\t\tonclick={() => (showRegistrationOptions = true)}\n\t\tclass=\"w-full bg-gray-200 text-gray-700 font-bold py-3 px-4 rounded-lg mt-3 hover:bg-gray-300 transition-colors\"\n\t>\n\t\tRegistration Options\n\t</button>\n\n\t<button\n\t\tonclick={() => (showImportOptions = true)}\n\t\tclass=\"w-full bg-gray-200 text-gray-700 font-bold py-3 px-4 rounded-lg mt-3 hover:bg-gray-300 transition-colors\"\n\t>\n\t\tImport Options\n\t</button>\n\n\t{#if isProUser}\n\t\t<button\n\t\t\tonclick={() => {\n\t\t\t\tshowEmergencyKit = true;\n\t\t\t\tmode = 'export';\n\t\t\t}}\n\t\t\tclass=\"w-full bg-gray-200 text-gray-700 font-bold py-3 px-4 rounded-lg mt-3 hover:bg-gray-300 transition-colors flex items-center justify-center gap-2\"\n\t\t>\n\t\t\t<svg class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t<path d=\"M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4M12,6A6,6 0 0,0 6,12A6,6 0 0,0 12,18A6,6 0 0,0 18,12A6,6 0 0,0 12,6M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8Z\"/>\n\t\t\t</svg>\n\t\t\tExport Emergency Kit\n\t\t</button>\n\n\t\t<button\n\t\t\tonclick={() => {\n\t\t\t\tshowEmergencyKit = true;\n\t\t\t\tmode = 'import';\n\t\t\t}}\n\t\t\tclass=\"w-full bg-gray-200 text-gray-700 font-bold py-3 px-4 rounded-lg mt-3 hover:bg-gray-300 transition-colors flex items-center justify-center gap-2\"\n\t\t>\n\t\t\t<svg class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t<path d=\"M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4M12,6A6,6 0 0,0 6,12A6,6 0 0,0 12,18A6,6 0 0,0 18,12A6,6 0 0,0 12,6M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8Z\"/>\n\t\t\t</svg>\n\t\t\tImport Emergency Kit\n\t\t</button>\n\t{:else}\n\t\t<SimpleTooltip content=\"Upgrade to Pro for full Emergency Kit features\">\n\t\t\t<button\n\t\t\t\tdisabled\n\t\t\t\tclass=\"w-full bg-gray-300 text-gray-500 font-bold py-3 px-4 rounded-lg mt-3 cursor-not-allowed flex items-center justify-center gap-2 relative\"\n\t\t\t>\n\t\t\t\t<svg class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t<path d=\"M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4M12,6A6,6 0 0,0 6,12A6,6 0 0,0 12,18A6,6 0 0,0 18,12A6,6 0 0,0 12,6M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8Z\"/>\n\t\t\t\t</svg>\n\t\t\t\tExport Emergency Kit\n\t\t\t\t<div class=\"absolute -top-1 -right-1 w-4 h-4 bg-gradient-to-r from-indigo-400 to-purple-400 rounded-full flex items-center justify-center\">\n\t\t\t\t\t<svg class=\"w-2.5 h-2.5 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n\t\t\t\t\t\t<path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t</button>\n\t\t</SimpleTooltip>\n\n\t\t<SimpleTooltip content=\"Upgrade to Pro for full Emergency Kit features\">\n\t\t\t<button\n\t\t\t\tdisabled\n\t\t\t\tclass=\"w-full bg-gray-300 text-gray-500 font-bold py-3 px-4 rounded-lg mt-3 cursor-not-allowed flex items-center justify-center gap-2 relative\"\n\t\t\t>\n\t\t\t\t<svg class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t<path d=\"M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4M12,6A6,6 0 0,0 6,12A6,6 0 0,0 12,18A6,6 0 0,0 18,12A6,6 0 0,0 12,6M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8Z\"/>\n\t\t\t\t</svg>\n\t\t\t\tImport Emergency Kit\n\t\t\t\t<div class=\"absolute -top-1 -right-1 w-4 h-4 bg-gradient-to-r from-indigo-400 to-purple-400 rounded-full flex items-center justify-center\">\n\t\t\t\t\t<svg class=\"w-2.5 h-2.5 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n\t\t\t\t\t\t<path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t</button>\n\t\t</SimpleTooltip>\n\t{/if}\n\n\t<button\n\t\tonclick={() => (showExportPrivateKey = true)}\n\t\tclass=\"w-full bg-gray-200 text-gray-700 font-bold py-3 px-4 rounded-lg mt-3 hover:bg-gray-300 transition-colors\"\n\t>\n\t\tExport Private Key\n\t</button>\n\n\t<button\n\t\tonclick={() => (showPincode = true)}\n\t\tclass=\"w-full bg-gray-200 text-gray-700 font-bold py-3 px-4 rounded-lg mt-3 hover:bg-gray-300 transition-colors\"\n\t>\n\t\tShow Pincode\n\t</button>\n\n\t<button\n\t\tonclick={() => (showPincodeModal = true)}\n\t\tclass=\"w-full bg-gray-200 text-gray-700 font-bold py-3 px-4 rounded-lg mt-3 hover:bg-gray-300 transition-colors\"\n\t>\n\t\tShow Pincode Modal\n\t</button>\n\n\t<button\n\t\tonclick={() => (showReceive = true)}\n\t\tclass=\"w-full bg-gray-200 text-gray-700 font-bold py-3 px-4 rounded-lg mt-3 hover:bg-gray-300 transition-colors\"\n\t>\n\t\tShow Receive\n\t</button>\n\n\t<button\n\t\tonclick={() => (showContacts = true)}\n\t\tclass=\"w-full bg-gray-200 text-gray-700 font-bold py-3 px-4 rounded-lg mt-3 hover:bg-gray-300 transition-colors\"\n\t>\n\t\tShow Contacts\n\t</button>\n\n\t<button\n\t\tonclick={() => (showImportWatch = true)}\n\t\tclass=\"w-full bg-gray-200 text-gray-700 font-bold py-3 px-4 rounded-lg mt-3 hover:bg-gray-300 transition-colors\"\n\t>\n\t\tImport Watch Account\n\t</button>\n\n\t<button\n\t\tonclick={() => (showImportAccount = true)}\n\t\tclass=\"w-full bg-gray-200 text-gray-700 font-bold py-3 px-4 rounded-lg mt-3 hover:bg-gray-300 transition-colors\"\n\t>\n\t\tImport Account w/PKey\n\t</button>\n\n\t<button\n\t\tonclick={() => {\n\t\t\tlog.debug('showImportPhrase');\n\t\t\tshowImportPhrase = true;\n\t\t}}\n\t\tclass=\"w-full bg-gray-200 text-gray-700 font-bold py-3 px-4 rounded-lg mt-3 hover:bg-gray-300 transition-colors\"\n\t>\n\t\tImport Phrase\n\t</button>\n\n\t<button\n\t\tonclick={() => (showAccounts = true)}\n\t\tclass=\"w-full bg-gray-200 text-gray-700 font-bold py-3 px-4 rounded-lg mt-3 hover:bg-gray-300 transition-colors\"\n\t>\n\t\tShow Accounts\n\t</button>\n\n\t<button\n\t\tonclick={close}\n\t\tclass=\"w-full bg-gray-200 text-gray-700 font-bold py-3 px-4 rounded-lg mt-3 hover:bg-gray-300 transition-colors\"\n\t>\n\t\tCancel\n\t</button>\n</div>\n"],"names":["error_log","message","args","stack","Error","callerInfo","split","trim","console","log","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","len","length","ret","alpha","hexString","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNonPrimitive","Symbol","toPrimitive","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","hi","lo","mid","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","vScale","_parsed","spanGaps","dataset","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","distanceToDefinedLo","findIndex","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","warn","resolve","inputs","info","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","clientWidth","clientHeight","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","getSizeForArea","chartArea","field","getDatasetArea","getDatasetClipArea","_clip","disabled","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","found","convertObjectDataToArray","iAxisKey","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","__publicField","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","_length","curr","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getAxisCount","_getAxis","getFirstScaleIdForIndexAxis","indexScaleId","firstScaleAxisId","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","axisCount","axisID","axisNumber","stackIndex","rects","_index_","_value_","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","controllers","__proto__","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","nestedLabel","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipSelf","outerAngleClip","innerAngleClip","clipWidth","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","selfJoin","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","containsDefaultColorsDefenitions","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","fillColor","clipVertical","clipHorizontal","clipY","lineLoop","clipX","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","xSet","xAverage","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","minExp","exp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","handleRestore","_","isProUser","onRestore","$.get","$.prop","$$props","onImport","settings","$.tag","$.state","onMount","async","getSettings","$.set","shouldShowProFeatures","_a","plan","PlanType","BASIC_MEMBER","$$args","RegistrationOption","$$render","consequent","alternate","onCancel","onClose","className","showVerify","showError","errorValue","showWarning","warningValue","pincode","pincodeVerified","onSwap","fundingAddress","fromToken","toToken","fromAmount","toAmount","handleClose","handleReject","rejection","set$1","verifyWithPin","pin","yakklMiscStore","getMiscStore","profile","getProfile","$.strict_equals","pincodeVerified2","profileEncrypted","isEncryptedData","deepCopy","decryptData","handleVerified","$$value","providers","$.tag_proxy","$.proxy","CoinbasePriceProvider","updateInterval","TIMER_PRICE_INTERVAL_TIME","updatePrice","provider","priceData","getMarketPrice","symbol","currency","log$1","getName","priceStore","getTimerManager","addTimer","startTimer","onDestroy","stopTimer","snippet","children","$.noop","price","$priceStore","showLastUpdated","quantity","customClass","useProviders","providersMap","activeProviders","CoingeckoPriceProvider","$$arg0","formatDate","lastUpdated","formatPrice","consequent_2","$.set_text","text_5","consequent_1","sendFormSchema","yup.object","shape","toAddress","yup.string","required","yup.number","moreThan","formErrors","validateForm","validate","abortEarly","yup.ValidationError","errors","err","$.mutable_source","handleSubmit","isValid","subscribe","$.template_effect","text_1","$.bind_value","$.mutate","input_1","description","SendFormModal","close","goto","PATH_WELCOME","on_click","showSwapModal","on_click_1","__1","showSwap","on_click_2","__2","showSendModal","on_click_3","__3","showRegistrationOptions","on_click_4","__4","showImportOptions","on_click_5","__5","showEmergencyKit","on_click_6","__6","on_click_7","__7","showExportPrivateKey","on_click_8","__8","showPincode","on_click_9","__9","showPincodeModal","on_click_10","__10","showReceive","on_click_11","__11","showContacts","on_click_12","__12","showImportWatch","on_click_13","__13","showImportAccount","on_click_14","__14","showImportPhrase","debug","on_click_15","__15","showAccounts","swapPriceProvider","chainId","blockchain","swapManager","tokenService","currentlySelected","getYakklCurrentlySelected","_c","shortcuts","address","_d","wallet","WalletManager","getInstance","getSigner","accountKey","getYakklCurrentlySelectedAccountKey","privateKey","setSigner","getProvider","signer","getBlockchain","UniswapSwapManager","TokenService","handleAccounts","selectedAccount","handleContact","selectedContact","handleImport","account","handleVerifyModal","handleVerify","pincodeOld","pincodeNew","handleImportWatch","handleExportPrivateKey","handleImportPhrase","handleEmergencyKit","success","handleCreateAccount","onImportKey","onImportPhrase","onImportWatch","set_text","alternate_1"],"mappings":"w4GAkBgB,SAAAA,UAAUC,WAAoBC,MAEvC,MAAAC,OAAQ,IAAIC,OAAQD,MAE1B,GAAIA,MAAO,CAEV,MAAME,WAAaF,MAAMG,MAAM,MAAM,GAAGC,OACxCC,QAAQC,IAAI,YAAYJ,gBAAgBJ,aAAcC,KAAI,KACpD,CACEM,QAAAC,IAAIR,WAAYC,KAAI,CAE9B;;;;;;GCvBA,SAASQ,MAAMC,GACb,OAAOA,EAAI,GAAM,CACnB,CACA,MAAMC,IAAM,CAACD,EAAGE,EAAGC,IAAMC,KAAKC,IAAID,KAAKE,IAAIN,EAAGG,GAAID,GAClD,SAASK,IAAIP,GACX,OAAOC,IAAIF,MAAMC,EAAI,MAAO,EAAG,IACjC,CAIA,SAASQ,IAAIR,GACX,OAAOC,IAAIF,MAAMC,EAAI,KAAM,EAAG,IAChC,CACA,SAASS,IAAIT,GACX,OAAOC,IAAIF,MAAMC,EAAI,MAAQ,IAAK,EAAG,EACvC,CACA,SAASU,IAAIV,GACX,OAAOC,IAAIF,MAAMC,EAAI,KAAM,EAAG,IAChC,CAEA,MAAMW,MAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAGC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IAC3J,MAAMC,IAAM,IAAI,oBAChB,MAAMC,GAAKN,GAAKK,IAAIL,EAAI,IACxB,MAAMO,MAAUF,KAAKL,EAAI,MAAS,GAAKK,IAAIL,EAAI,IAC/C,MAAMQ,GAAKR,IAAOA,EAAI,MAAS,KAAQA,EAAI,IAC3C,MAAMS,QAAe5B,GAAA2B,GAAG3B,EAAE6B,IAAMF,GAAG3B,EAAE8B,IAAMH,GAAG3B,EAAEmB,IAAMQ,GAAG3B,EAAEkB,GAC3D,SAASa,SAASC,KAChB,IAAIC,IAAMD,IAAIE,OACV,IAAAC,IACA,GAAAH,IAAI,KAAO,IAAK,CACd,GAAAC,MAAQ,GAAKA,MAAQ,EAAG,CACpBE,IAAA,CACJN,EAAG,IAAMlB,MAAMqB,IAAI,IAAM,GACzBF,EAAG,IAAMnB,MAAMqB,IAAI,IAAM,GACzBb,EAAG,IAAMR,MAAMqB,IAAI,IAAM,GACzBd,EAAGe,MAAQ,EAAItB,MAAMqB,IAAI,IAAM,GAAK,IAEvC,MAAU,GAAAC,MAAQ,GAAKA,MAAQ,EAAG,CAC3BE,IAAA,CACJN,EAAGlB,MAAMqB,IAAI,KAAO,EAAIrB,MAAMqB,IAAI,IAClCF,EAAGnB,MAAMqB,IAAI,KAAO,EAAIrB,MAAMqB,IAAI,IAClCb,EAAGR,MAAMqB,IAAI,KAAO,EAAIrB,MAAMqB,IAAI,IAClCd,EAAGe,MAAQ,EAAKtB,MAAMqB,IAAI,KAAO,EAAIrB,MAAMqB,IAAI,IAAO,IAE9D,CACA,CACS,OAAAG,GACT,CACA,MAAMC,MAAQ,CAAClB,EAAGK,IAAML,EAAI,IAAMK,EAAEL,GAAK,GACzC,SAASmB,UAAUrC,GACjB,IAAIuB,EAAIK,QAAQ5B,GAAKyB,GAAKC,GAC1B,OAAO1B,EACH,IAAMuB,EAAEvB,EAAE6B,GAAKN,EAAEvB,EAAE8B,GAAKP,EAAEvB,EAAEmB,GAAKiB,MAAMpC,EAAEkB,EAAGK,QAC5C,CACN,CAEA,MAAMe,OAAS,+GACf,SAASC,SAASpC,EAAGqC,EAAGtC,GACtB,MAAMgB,EAAIsB,EAAIpC,KAAKE,IAAIJ,EAAG,EAAIA,GACxB,MAAAqB,EAAI,CAACkB,EAAGC,GAAKD,EAAItC,EAAI,IAAM,KAAOD,EAAIgB,EAAId,KAAKC,IAAID,KAAKE,IAAIoC,EAAI,EAAG,EAAIA,EAAG,IAAM,GAC/E,MAAA,CAACnB,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACxB,CACA,SAASoB,SAASxC,EAAGqC,EAAGxC,GAChB,MAAAuB,EAAI,CAACkB,EAAGC,GAAKD,EAAItC,EAAI,IAAM,IAAMH,EAAIA,EAAIwC,EAAIpC,KAAKC,IAAID,KAAKE,IAAIoC,EAAG,EAAIA,EAAG,GAAI,GAC5E,MAAA,CAACnB,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACxB,CACA,SAASqB,SAASzC,EAAG0C,EAAG1B,GACtB,MAAM2B,IAAMP,SAASpC,EAAG,EAAG,IACvB,IAAA4C,EACA,GAAAF,EAAI1B,EAAI,EAAG,CACb4B,EAAI,GAAKF,EAAI1B,GACR0B,GAAAE,EACA5B,GAAA4B,CACT,CACE,IAAKA,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAClBD,IAAAC,IAAM,EAAIF,EAAI1B,EAClB2B,IAAIC,IAAMF,CACd,CACS,OAAAC,GACT,CACA,SAASE,SAASnB,EAAGC,EAAGX,EAAGE,EAAGhB,KAC5B,GAAIwB,IAAMxB,IAAK,CACb,OAASyB,EAAIX,GAAKE,GAAMS,EAAIX,EAAI,EAAI,EACxC,CACE,GAAIW,IAAMzB,IAAK,CACL,OAAAc,EAAIU,GAAKR,EAAI,CACzB,CACU,OAAAQ,EAAIC,GAAKT,EAAI,CACvB,CACA,SAAS4B,QAAQjD,GACf,MAAMkD,MAAQ,IACR,MAAArB,EAAI7B,EAAE6B,EAAIqB,MACV,MAAApB,EAAI9B,EAAE8B,EAAIoB,MACV,MAAA/B,EAAInB,EAAEmB,EAAI+B,MAChB,MAAM7C,IAAMD,KAAKC,IAAIwB,EAAGC,EAAGX,GAC3B,MAAMb,IAAMF,KAAKE,IAAIuB,EAAGC,EAAGX,GACrB,MAAAjB,GAAKG,IAAMC,KAAO,EACxB,IAAIH,EAAGqC,EAAGnB,EACV,GAAIhB,MAAQC,IAAK,CACfe,EAAIhB,IAAMC,IACVkC,EAAItC,EAAI,GAAMmB,GAAK,EAAIhB,IAAMC,KAAOe,GAAKhB,IAAMC,KAC/CH,EAAI6C,SAASnB,EAAGC,EAAGX,EAAGE,EAAGhB,KACzBF,EAAIA,EAAI,GAAK,EACjB,CACE,MAAO,CAACA,EAAI,EAAGqC,GAAK,EAAGtC,EACzB,CACA,SAASiD,MAAM5B,EAAGL,EAAGC,EAAGC,GAEpB,OAAAgC,MAAMC,QAAQnC,GACVK,EAAEL,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAChBK,EAAEL,EAAGC,EAAGC,IACZkC,IAAI9C,IACR,CACA,SAAS+C,QAAQpD,EAAGqC,EAAGtC,GACrB,OAAOiD,MAAMZ,SAAUpC,EAAGqC,EAAGtC,EAC/B,CACA,SAASsD,QAAQrD,EAAG0C,EAAG1B,GACrB,OAAOgC,MAAMP,SAAUzC,EAAG0C,EAAG1B,EAC/B,CACA,SAASsC,QAAQtD,EAAGqC,EAAGxC,GACrB,OAAOmD,MAAMR,SAAUxC,EAAGqC,EAAGxC,EAC/B,CACA,SAAS0D,IAAIvD,GACH,OAAAA,EAAI,IAAM,KAAO,GAC3B,CACA,SAASwD,SAAS3B,KACV,MAAA4B,EAAItB,OAAOuB,KAAK7B,KACtB,IAAId,EAAI,IACJ,IAAAlB,EACJ,IAAK4D,EAAG,CACN,MACJ,CACM,GAAAA,EAAE,KAAO5D,EAAG,CACdkB,EAAI0C,EAAE,GAAKrD,KAAKqD,EAAE,IAAMpD,KAAKoD,EAAE,GACnC,CACE,MAAMzD,EAAIuD,KAAKE,EAAE,IACjB,MAAME,IAAMF,EAAE,GAAK,IACnB,MAAMG,IAAMH,EAAE,GAAK,IACf,GAAAA,EAAE,KAAO,MAAO,CACd5D,EAAAwD,QAAQrD,EAAG2D,GAAIC,GACpB,MAAU,GAAAH,EAAE,KAAO,MAAO,CACrB5D,EAAAyD,QAAQtD,EAAG2D,GAAIC,GACvB,KAAS,CACD/D,EAAAuD,QAAQpD,EAAG2D,GAAIC,GACvB,CACS,MAAA,CACLlC,EAAG7B,EAAE,GACL8B,EAAG9B,EAAE,GACLmB,EAAGnB,EAAE,GACLkB,IAEJ,CACA,SAAS8C,OAAOhE,EAAGiE,KACb,IAAA9D,EAAI8C,QAAQjD,GAChBG,EAAE,GAAKuD,IAAIvD,EAAE,GAAK8D,KAClB9D,EAAIoD,QAAQpD,GACVH,EAAA6B,EAAI1B,EAAE,GACNH,EAAA8B,EAAI3B,EAAE,GACNH,EAAAmB,EAAIhB,EAAE,EACV,CACA,SAAS+D,UAAUlE,GACjB,IAAKA,EAAG,CACN,MACJ,CACQ,MAAAkB,EAAI+B,QAAQjD,GACZ,MAAAG,EAAIe,EAAE,GACZ,MAAMsB,EAAI9B,IAAIQ,EAAE,IAChB,MAAMhB,EAAIQ,IAAIQ,EAAE,IACT,OAAAlB,EAAEkB,EAAI,IACT,QAAQf,MAAMqC,OAAOtC,OAAOO,IAAIT,EAAEkB,MAClC,OAAOf,MAAMqC,OAAOtC,KAC1B,CAEA,MAAMoD,MAAM,CACXa,EAAG,OACHC,EAAG,QACHC,EAAG,KACHC,EAAG,MACHC,EAAG,KACHC,EAAG,SACHC,EAAG,QACH7D,EAAG,KACH8D,EAAG,KACHC,EAAG,KACH9D,EAAG,KACHC,EAAG,QACHC,EAAG,QACH6D,EAAG,KACHC,EAAG,WACH7D,EAAG,KACH8D,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,QACHjE,EAAG,KACHkE,EAAG,KACHC,EAAG,OACHC,EAAG,KACHC,EAAG,QACHC,EAAG,MAEJ,MAAMC,QAAU,CACfC,OAAQ,SACRC,YAAa,SACbC,KAAM,OACNC,UAAW,SACXC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,MAAO,IACPC,aAAc,SACdC,GAAI,KACJC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,SAAU,SACVC,QAAS,SACTC,IAAK,SACLC,YAAa,SACbC,QAAS,SACTC,QAAS,SACTC,KAAM,OACNC,IAAK,KACLC,MAAO,OACPC,QAAS,SACTC,KAAM,SACNC,KAAM,OACNC,KAAM,SACNC,OAAQ,SACRC,QAAS,SACTC,SAAU,SACVC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,IAAK,OACLC,OAAQ,SACRC,OAAQ,SACRC,SAAU,OACVC,OAAQ,SACRC,OAAQ,SACRC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,OAAQ,SACRC,QAAS,SACTC,UAAW,SACXC,IAAK,SACLC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,IAAK,SACLC,QAAS,SACTC,OAAQ,SACRC,QAAS,SACTC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,UAAW,SACXC,QAAS,SACTC,WAAY,SACZC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,UAAW,SACXC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,IAAK,SACLC,KAAM,OACNC,QAAS,SACTC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,IAAK,KACLC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,UAAW,OACXC,IAAK,SACLC,SAAU,SACVC,WAAY,SACZC,QAAS,SACTC,SAAU,SACVC,QAAS,SACTC,WAAY,SACZC,KAAM,KACNC,OAAQ,SACRC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,UAAW,SACXC,QAAS,SACTC,KAAM,SACNC,IAAK,SACLC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,YAAa,SACbC,GAAI,SACJC,SAAU,SACVC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,QAAS,SACTC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,SAAU,OACVC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,OAAQ,SACRC,GAAI,SACJC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,UAAW,SACXC,GAAI,SACJC,MAAO,UAER,SAASC,SACP,MAAMC,SAAW,CAAE,EACb,MAAAC,KAAOC,OAAOD,KAAKvJ,SACnB,MAAAyJ,MAAQD,OAAOD,KAAKzL,OACtB,IAAAP,EAAGmM,EAAGxM,EAAGyM,GAAIC,GACjB,IAAKrM,EAAI,EAAGA,EAAIgM,KAAK7M,OAAQa,IAAK,CAC3BoM,GAAAC,GAAKL,KAAKhM,GACf,IAAKmM,EAAI,EAAGA,EAAID,MAAM/M,OAAQgN,IAAK,CACjCxM,EAAIuM,MAAMC,GACVE,GAAKA,GAAGC,QAAQ3M,EAAGY,MAAIZ,GAC7B,CACIA,EAAI4M,SAAS9J,QAAQ2J,IAAK,IACjBL,SAAAM,IAAM,CAAC1M,GAAK,GAAK,IAAMA,GAAK,EAAI,IAAMA,EAAI,IACvD,CACS,OAAAoM,QACT,CAEA,IAAIS,MACJ,SAASC,UAAUxN,KACjB,IAAKuN,MAAO,CACVA,MAAQV,SACRU,MAAME,YAAc,CAAC,EAAG,EAAG,EAAG,EAClC,CACE,MAAMvO,EAAIqO,MAAMvN,IAAI0N,eACpB,OAAOxO,GAAK,CACVW,EAAGX,EAAE,GACLY,EAAGZ,EAAE,GACLC,EAAGD,EAAE,GACLA,EAAGA,EAAEgB,SAAW,EAAIhB,EAAE,GAAK,IAE/B,CAEA,MAAMyO,OAAS,uGACf,SAASC,SAAS5N,KACV,MAAA4B,EAAI+L,OAAO9L,KAAK7B,KACtB,IAAId,EAAI,IACR,IAAIW,EAAGC,EAAGX,EACV,IAAKyC,EAAG,CACN,MACJ,CACM,GAAAA,EAAE,KAAO/B,EAAG,CACR,MAAA7B,GAAK4D,EAAE,GACT1C,EAAA0C,EAAE,GAAKrD,IAAIP,GAAKC,IAAID,EAAI,IAAK,EAAG,IACxC,CACM6B,GAAC+B,EAAE,GACH9B,GAAC8B,EAAE,GACHzC,GAACyC,EAAE,GACH/B,EAAA,KAAO+B,EAAE,GAAKrD,IAAIsB,GAAK5B,IAAI4B,EAAG,EAAG,MACjCC,EAAA,KAAO8B,EAAE,GAAKrD,IAAIuB,GAAK7B,IAAI6B,EAAG,EAAG,MACjCX,EAAA,KAAOyC,EAAE,GAAKrD,IAAIY,GAAKlB,IAAIkB,EAAG,EAAG,MAC9B,MAAA,CACLU,IACAC,IACAX,IACAD,IAEJ,CACA,SAAS2O,UAAU7P,GACV,OAAAA,IACLA,EAAEkB,EAAI,IACF,QAAQlB,EAAE6B,MAAM7B,EAAE8B,MAAM9B,EAAEmB,MAAMV,IAAIT,EAAEkB,MACtC,OAAOlB,EAAE6B,MAAM7B,EAAE8B,MAAM9B,EAAEmB,KAEjC,CAEA,MAAM2O,GAAK9P,GAAKA,GAAK,SAAYA,EAAI,MAAQI,KAAK2P,IAAI/P,EAAG,EAAM,KAAO,MAAQ,KAC9E,MAAMgQ,KAAYhQ,GAAAA,GAAK,OAAUA,EAAI,MAAQI,KAAK2P,KAAK/P,EAAI,MAAS,MAAO,KAC3E,SAASiQ,cAAYC,KAAMC,KAAMC,GAC/B,MAAMvO,EAAImO,KAAKvP,IAAIyP,KAAKrO,IACxB,MAAMC,EAAIkO,KAAKvP,IAAIyP,KAAKpO,IACxB,MAAMX,EAAI6O,KAAKvP,IAAIyP,KAAK/O,IACjB,MAAA,CACLU,EAAGrB,IAAIsP,GAAGjO,EAAIuO,GAAKJ,KAAKvP,IAAI0P,KAAKtO,IAAMA,KACvCC,EAAGtB,IAAIsP,GAAGhO,EAAIsO,GAAKJ,KAAKvP,IAAI0P,KAAKrO,IAAMA,KACvCX,EAAGX,IAAIsP,GAAG3O,EAAIiP,GAAKJ,KAAKvP,IAAI0P,KAAKhP,IAAMA,KACvCD,EAAGgP,KAAKhP,EAAIkP,GAAKD,KAAKjP,EAAIgP,KAAKhP,GAEnC,CAEA,SAASmP,OAAOrQ,EAAG+C,EAAGuN,OACpB,GAAItQ,EAAG,CACD,IAAAuQ,IAAMtN,QAAQjD,GAClBuQ,IAAIxN,GAAK3C,KAAKC,IAAI,EAAGD,KAAKE,IAAIiQ,IAAIxN,GAAKwN,IAAIxN,GAAKuN,MAAOvN,IAAM,EAAI,IAAM,IACvEwN,IAAMhN,QAAQgN,KACZvQ,EAAA6B,EAAI0O,IAAI,GACRvQ,EAAA8B,EAAIyO,IAAI,GACRvQ,EAAAmB,EAAIoP,IAAI,EACd,CACA,CACA,SAASC,QAAMxQ,EAAGyQ,OAChB,OAAOzQ,EAAIgP,OAAO0B,OAAOD,OAAS,CAAE,EAAEzQ,GAAKA,CAC7C,CACA,SAAS2Q,WAAWC,OACd,IAAA5Q,EAAI,CAAC6B,EAAG,EAAGC,EAAG,EAAGX,EAAG,EAAGD,EAAG,KAC1B,GAAAkC,MAAMC,QAAQuN,OAAQ,CACpB,GAAAA,MAAM1O,QAAU,EAAG,CACrBlC,EAAI,CAAC6B,EAAG+O,MAAM,GAAI9O,EAAG8O,MAAM,GAAIzP,EAAGyP,MAAM,GAAI1P,EAAG,KAC3C,GAAA0P,MAAM1O,OAAS,EAAG,CACpBlC,EAAEkB,EAAIV,IAAIoQ,MAAM,GACxB,CACA,CACA,KAAS,CACDJ,EAAAA,QAAMI,MAAO,CAAC/O,EAAG,EAAGC,EAAG,EAAGX,EAAG,EAAGD,EAAG,IACrClB,EAAAkB,EAAIV,IAAIR,EAAEkB,EAChB,CACS,OAAAlB,CACT,CACA,SAAS6Q,cAAc7O,KACrB,GAAIA,IAAI8O,OAAO,KAAO,IAAK,CACzB,OAAOlB,SAAS5N,IACpB,CACE,OAAO2B,SAAS3B,IAClB,CACA,MAAM+O,MACJ,WAAAC,CAAYJ,OACV,GAAIA,iBAAiBG,MAAO,CACnB,OAAAH,KACb,CACI,MAAMK,YAAcL,MAChB,IAAA5Q,EACJ,GAAIiR,OAAS,SAAU,CACrBjR,EAAI2Q,WAAWC,MACrB,MAAA,GAAeK,OAAS,SAAU,CAC5BjR,EAAI+B,SAAS6O,QAAUpB,UAAUoB,QAAUC,cAAcD,MAC/D,CACIM,KAAKC,KAAOnR,EACPkR,KAAAE,SAAWpR,CACpB,CACE,SAAIqR,GACF,OAAOH,KAAKE,MAChB,CACE,OAAItO,GACE,IAAA9C,EAAIwQ,QAAMU,KAAKC,MACnB,GAAInR,EAAG,CACHA,EAAAkB,EAAIT,IAAIT,EAAEkB,EAClB,CACW,OAAAlB,CACX,CACE,OAAI8C,CAAIwO,KACDJ,KAAAC,KAAOR,WAAWW,IAC3B,CACE,SAAAzB,GACE,OAAOqB,KAAKE,OAASvB,UAAUqB,KAAKC,WAAQ,CAChD,CACE,SAAA9O,GACE,OAAO6O,KAAKE,OAAS/O,UAAU6O,KAAKC,WAAQ,CAChD,CACE,SAAAjN,GACE,OAAOgN,KAAKE,OAASlN,UAAUgN,KAAKC,WAAQ,CAChD,CACE,GAAAI,CAAIC,OAAOC,QACT,GAAID,OAAO,CACT,MAAME,GAAKR,KAAKpO,IAChB,MAAM6O,GAAKH,OAAM1O,IACb,IAAA8O,GACE,MAAAC,EAAIJ,SAAWG,GAAK,GAAMH,OAC1B,MAAA5O,EAAI,EAAIgP,EAAI,EACZ,MAAA3Q,EAAIwQ,GAAGxQ,EAAIyQ,GAAGzQ,EACd,MAAA4Q,KAAOjP,EAAI3B,KAAW,EAAA2B,GAAKA,EAAI3B,IAAM,EAAI2B,EAAI3B,IAAM,GAAK,EAC9D0Q,GAAK,EAAIE,GACTJ,GAAG7P,EAAI,IAAOiQ,GAAKJ,GAAG7P,EAAI+P,GAAKD,GAAG9P,EAAI,GACtC6P,GAAG5P,EAAI,IAAOgQ,GAAKJ,GAAG5P,EAAI8P,GAAKD,GAAG7P,EAAI,GACtC4P,GAAGvQ,EAAI,IAAO2Q,GAAKJ,GAAGvQ,EAAIyQ,GAAKD,GAAGxQ,EAAI,GACtCuQ,GAAGxQ,EAAI2Q,EAAIH,GAAGxQ,GAAK,EAAI2Q,GAAKF,GAAGzQ,EAC/BgQ,KAAKpO,IAAM4O,EACjB,CACW,OAAAR,IACX,CACE,WAAAjB,CAAYuB,OAAOpB,GACjB,GAAIoB,OAAO,CACTN,KAAKC,KAAOlB,cAAYiB,KAAKC,KAAMK,OAAML,KAAMf,EACrD,CACW,OAAAc,IACX,CACE,KAAAV,GACS,OAAA,IAAIO,MAAMG,KAAKpO,IAC1B,CACE,KAAAV,CAAMlB,GACCgQ,KAAAC,KAAKjQ,EAAIV,IAAIU,GACX,OAAAgQ,IACX,CACE,OAAAa,CAAQzB,OACN,MAAMxN,IAAMoO,KAAKC,KACjBrO,IAAI5B,GAAK,EAAIoP,MACN,OAAAY,IACX,CACE,SAAAc,GACE,MAAMlP,IAAMoO,KAAKC,KACX,MAAAc,IAAMlS,MAAM+C,IAAIjB,EAAI,GAAMiB,IAAIhB,EAAI,IAAOgB,IAAI3B,EAAI,KACvD2B,IAAIjB,EAAIiB,IAAIhB,EAAIgB,IAAI3B,EAAI8Q,IACjB,OAAAf,IACX,CACE,OAAAgB,CAAQ5B,OACN,MAAMxN,IAAMoO,KAAKC,KACjBrO,IAAI5B,GAAK,EAAIoP,MACN,OAAAY,IACX,CACE,MAAAiB,GACE,MAAMnS,EAAIkR,KAAKC,KACbnR,EAAA6B,EAAI,IAAM7B,EAAE6B,EACZ7B,EAAA8B,EAAI,IAAM9B,EAAE8B,EACZ9B,EAAAmB,EAAI,IAAMnB,EAAEmB,EACP,OAAA+P,IACX,CACE,OAAAkB,CAAQ9B,OACCD,OAAAa,KAAKC,KAAM,EAAGb,OACd,OAAAY,IACX,CACE,MAAAmB,CAAO/B,OACLD,OAAOa,KAAKC,KAAM,GAAIb,OACf,OAAAY,IACX,CACE,QAAAoB,CAAShC,OACAD,OAAAa,KAAKC,KAAM,EAAGb,OACd,OAAAY,IACX,CACE,UAAAqB,CAAWjC,OACTD,OAAOa,KAAKC,KAAM,GAAIb,OACf,OAAAY,IACX,CACE,MAAAlN,CAAOC,KACED,OAAAkN,KAAKC,KAAMlN,KACX,OAAAiN,IACX;;;;;;GCzjBI,SAASsB,OACb,CAGI,MAAMC,IAAW,MACjB,IAAIC,GAAK,EACT,MAAO,IAAIA,IACX,EAHiB,GAQjB,SAASC,cAAcC,OAChB,OAAAA,QAAU,MAAQA,aAAU,CACvC,CAKI,SAASvP,QAAQuP,OACjB,GAAIxP,MAAMC,SAAWD,MAAMC,QAAQuP,OAAQ,CAChC,OAAA,IACf,CACI,MAAM3B,KAAOjC,OAAO6D,UAAUC,SAASC,KAAKH,OACxC,GAAA3B,KAAK+B,MAAM,EAAG,KAAO,WAAa/B,KAAK+B,OAAQ,KAAM,SAAU,CACxD,OAAA,IACf,CACW,OAAA,KACX,CAKI,SAASC,SAASL,OAClB,OAAOA,QAAU,MAAQ5D,OAAO6D,UAAUC,SAASC,KAAKH,SAAW,iBACvE,CAII,SAASM,eAAeN,OACxB,cAAeA,QAAU,UAAYA,iBAAiBO,SAAWC,UAAUR,MAC/E,CAKI,SAASS,gBAAgBT,MAAOU,cACzB,OAAAJ,eAAeN,OAASA,MAAQU,YAC3C,CAKI,SAASC,eAAeX,MAAOU,cACxB,cAAOV,QAAU,YAAcU,aAAeV,KACzD,CACA,MAAMY,aAAe,CAACZ,MAAOa,mBAAmBb,QAAU,UAAYA,MAAMc,SAAS,KAAOC,WAAWf,OAAS,KAAOA,MAAQa,UAC/H,MAAMG,YAAc,CAAChB,MAAOa,mBAAmBb,QAAU,UAAYA,MAAMc,SAAS,KAAOC,WAAWf,OAAS,IAAMa,WAAab,MAO9H,SAASiB,SAASC,GAAIvU,KAAMwU,SAC5B,GAAID,WAAaA,GAAGf,OAAS,WAAY,CAC9B,OAAAe,GAAGE,MAAMD,QAASxU,KACjC,CACA,CACA,SAAS0U,KAAKC,SAAUJ,GAAIC,QAASI,SACjC,IAAIpR,EAAGd,IAAK8M,KACR,GAAA1L,QAAQ6Q,UAAW,CACnBjS,IAAMiS,SAAShS,OAKR,CACH,IAAIa,EAAI,EAAGA,EAAId,IAAKc,IAAI,CACpB+Q,GAAGf,KAAKgB,QAASG,SAASnR,GAAIA,EAC9C,CACA,CACA,MAAA,GAAekQ,SAASiB,UAAW,CACpBnF,KAAAC,OAAOD,KAAKmF,UACnBjS,IAAM8M,KAAK7M,OACX,IAAIa,EAAI,EAAGA,EAAId,IAAKc,IAAI,CACjB+Q,GAAAf,KAAKgB,QAASG,SAASnF,KAAKhM,IAAKgM,KAAKhM,GACrD,CACA,CACA,CAMI,SAASqR,eAAeC,GAAIC,IACxB,IAAAvR,EAAGwR,KAAMC,GAAIC,GACjB,IAAKJ,KAAOC,IAAMD,GAAGnS,SAAWoS,GAAGpS,OAAQ,CAChC,OAAA,KACf,CACQ,IAAAa,EAAI,EAAGwR,KAAOF,GAAGnS,OAAQa,EAAIwR,OAAQxR,EAAE,CACvCyR,GAAKH,GAAGtR,GACR0R,GAAKH,GAAGvR,GACR,GAAIyR,GAAGE,eAAiBD,GAAGC,cAAgBF,GAAGG,QAAUF,GAAGE,MAAO,CACvD,OAAA,KACnB,CACA,CACW,OAAA,IACX,CAII,SAASnE,MAAMoE,QACX,GAAAvR,QAAQuR,QAAS,CACV,OAAAA,OAAOtR,IAAIkN,MAC1B,CACQ,GAAAyC,SAAS2B,QAAS,CACZ,MAAAC,OAAgB7F,OAAA8F,OAAO,MACvB,MAAA/F,KAAOC,OAAOD,KAAK6F,QACzB,MAAMG,KAAOhG,KAAK7M,OAClB,IAAIQ,EAAI,EACF,KAAAA,EAAIqS,OAAQrS,EAAE,CACTmS,OAAA9F,KAAKrM,IAAM8N,MAAMoE,OAAO7F,KAAKrM,IAChD,CACe,OAAAmS,MACf,CACW,OAAAD,MACX,CACA,SAASI,WAAWC,KACT,MAAA,CACH,YACA,YACA,eACFC,QAAQD,QAAS,CACvB,CAKI,SAASE,QAAQF,IAAKJ,OAAQD,OAAQQ,SAClC,IAACJ,WAAWC,KAAM,CAClB,MACR,CACU,MAAAI,KAAOR,OAAOI,KACd,MAAAK,KAAOV,OAAOK,KACpB,GAAIhC,SAASoC,OAASpC,SAASqC,MAAO,CAE5BC,MAAAF,KAAMC,KAAMF,QAC1B,KAAW,CACIP,OAAAI,KAAOzE,MAAM8E,KAC5B,CACA,CACA,SAASC,MAAMV,OAAQD,OAAQQ,SAC3B,MAAMI,QAAUnS,QAAQuR,QAAUA,OAAS,CACvCA,QAEJ,MAAML,KAAOiB,QAAQtT,OACjB,IAAC+Q,SAAS4B,QAAS,CACZ,OAAAA,MACf,CACIO,QAAUA,SAAW,CAAE,EACjB,MAAAK,OAASL,QAAQK,QAAUN,QAC7B,IAAAO,QACJ,IAAA,IAAQ3S,EAAI,EAAGA,EAAIwR,OAAQxR,EAAE,CACzB2S,QAAUF,QAAQzS,GACd,IAACkQ,SAASyC,SAAU,CACpB,QACZ,CACc,MAAA3G,KAAOC,OAAOD,KAAK2G,SACjB,IAAA,IAAAhT,EAAI,EAAGqS,KAAOhG,KAAK7M,OAAQQ,EAAIqS,OAAQrS,EAAE,CAC7C+S,OAAO1G,KAAKrM,GAAImS,OAAQa,QAASN,QAC7C,CACA,CACW,OAAAP,MACX,CACA,SAASc,QAAQd,OAAQD,QAEd,OAAAW,MAAMV,OAAQD,OAAQ,CACzBa,OAAQG,WAEhB,CAII,SAASA,UAAUX,IAAKJ,OAAQD,QAC5B,IAACI,WAAWC,KAAM,CAClB,MACR,CACU,MAAAI,KAAOR,OAAOI,KACd,MAAAK,KAAOV,OAAOK,KACpB,GAAIhC,SAASoC,OAASpC,SAASqC,MAAO,CAClCK,QAAQN,KAAMC,KACtB,MAAA,IAAgBtG,OAAO6D,UAAUgD,eAAe9C,KAAK8B,OAAQI,KAAM,CACpDJ,OAAAI,KAAOzE,MAAM8E,KAC5B,CACA,CASA,MAAMQ,aAAe,CAEjB,GAAK9V,GAAIA,EAETmE,EAAI4R,GAAIA,EAAE5R,EACV6R,EAAID,GAAIA,EAAEC,GAIV,SAASC,UAAUhB,KACb,MAAAiB,MAAQjB,IAAItV,MAAM,KACxB,MAAMoP,KAAO,GACb,IAAIwB,IAAM,GACV,IAAA,MAAW4F,QAAQD,MAAM,CACd3F,KAAA4F,KACH,GAAA5F,IAAImD,SAAS,MAAO,CACpBnD,IAAMA,IAAIyC,MAAM,GAAG,GAAM,GACrC,KAAe,CACHjE,KAAKqH,KAAK7F,KACJA,IAAA,EAClB,CACA,CACW,OAAAxB,IACX,CACA,SAASsH,gBAAgBpB,KACf,MAAAlG,KAAOkH,UAAUhB,KACvB,OAAQ3D,MACJ,IAAA,MAAW5O,KAAKqM,KAAK,CACjB,GAAIrM,IAAM,GAAI,CACV,KAChB,CACkB4O,IAAAA,KAAOA,IAAI5O,EAC7B,CACe,OAAA4O,IAEf,CACA,SAASgF,iBAAiBhF,IAAK2D,KACrB,MAAAsB,SAAWT,aAAab,OAASa,aAAab,KAAOoB,gBAAgBpB,MAC3E,OAAOsB,SAASjF,IACpB,CAGI,SAASkF,YAAYxU,KACd,OAAAA,IAAI8O,OAAO,GAAG2F,cAAgBzU,IAAIgR,MAAM,EACnD,CACA,MAAM0D,QAAW9D,cAAeA,QAAU,YAC1C,MAAM+D,WAAc/D,cAAeA,QAAU,WAE7C,MAAMgE,UAAY,CAAC1V,EAAGC,KACd,GAAAD,EAAE2V,OAAS1V,EAAE0V,KAAM,CACZ,OAAA,KACf,CACI,IAAA,MAAWC,QAAQ5V,EAAE,CACjB,IAAKC,EAAE4V,IAAID,MAAO,CACP,OAAA,KACnB,CACA,CACW,OAAA,MAKP,SAASE,cAAc1V,GACvB,OAAOA,EAAE2P,OAAS,WAAa3P,EAAE2P,OAAS,SAAW3P,EAAE2P,OAAS,aACpE,CAKI,MAAMgG,GAAK7W,KAAK6W,GACpB,MAAMC,IAAM,EAAID,GAChB,MAAME,MAAQD,IAAMD,GACpB,MAAMG,SAAWjE,OAAOkE,kBACxB,MAAMC,YAAcL,GAAK,IACzB,MAAMM,QAAUN,GAAK,EACrB,MAAMO,WAAaP,GAAK,EACxB,MAAMQ,cAAgBR,GAAK,EAAI,EAC/B,MAAMS,MAAQtX,KAAKsX,MACnB,MAAMC,KAAOvX,KAAKuX,KAClB,SAASC,aAAazT,EAAG6R,EAAG6B,SACxB,OAAOzX,KAAK0X,IAAI3T,EAAI6R,GAAK6B,OAC7B,CAGI,SAASE,QAAQ7U,OACX,MAAA8U,aAAe5X,KAAKL,MAAMmD,OAChCA,MAAQ0U,aAAa1U,MAAO8U,aAAc9U,MAAQ,KAAQ8U,aAAe9U,MACnE,MAAA+U,UAAY7X,KAAK2P,IAAI,GAAI3P,KAAK8X,MAAMR,MAAMxU,SAChD,MAAMiV,SAAWjV,MAAQ+U,UACnB,MAAAG,aAAeD,UAAY,EAAI,EAAIA,UAAY,EAAI,EAAIA,UAAY,EAAI,EAAI,GACjF,OAAOC,aAAeH,SAC1B,CAII,SAASI,WAAWzF,OACpB,MAAM0F,OAAS,GACT,MAAAC,KAAOnY,KAAKmY,KAAK3F,OACnB,IAAA7P,EACJ,IAAIA,EAAI,EAAGA,EAAIwV,KAAMxV,IAAI,CACjB,GAAA6P,MAAQ7P,IAAM,EAAG,CACjBuV,OAAOlC,KAAKrT,GACLuV,OAAAlC,KAAKxD,MAAQ7P,EAChC,CACA,CACQ,GAAAwV,QAAUA,KAAO,GAAI,CACrBD,OAAOlC,KAAKmC,KACpB,CACID,OAAOE,KAAK,CAACtX,EAAGC,IAAID,EAAIC,GAAGsX,MACpB,OAAAH,MACX,CAGI,SAASI,eAAejW,GACxB,cAAcA,IAAM,iBAAmBA,IAAM,UAAYA,IAAM,QAAUkW,OAAOC,eAAenW,GAAK,aAAcA,GAAK,YAAaA,EACxI,CACA,SAASoW,SAASpW,GACP,OAACiW,eAAejW,KAAOqW,MAAMnF,WAAWlR,KAAO2Q,SAAS3Q,EACnE,CACA,SAASsW,YAAY5U,EAAG0T,SACd,MAAAmB,QAAU5Y,KAAKL,MAAMoE,GAC3B,OAAO6U,QAAUnB,SAAW1T,GAAK6U,QAAUnB,SAAW1T,CAC1D,CAGI,SAAS8U,mBAAmBC,MAAOrE,OAAQsE,UAC3C,IAAIpW,EAAGwR,KAAM3B,MACb,IAAI7P,EAAI,EAAGwR,KAAO2E,MAAMhX,OAAQa,EAAIwR,KAAMxR,IAAI,CAClC6P,MAAAsG,MAAMnW,GAAGoW,UACb,IAACL,MAAMlG,OAAQ,CACfiC,OAAOvU,IAAMF,KAAKE,IAAIuU,OAAOvU,IAAKsS,OAClCiC,OAAOxU,IAAMD,KAAKC,IAAIwU,OAAOxU,IAAKuS,MAC9C,CACA,CACA,CACA,SAASwG,UAAUC,SACf,OAAOA,SAAWpC,GAAK,IAC3B,CACA,SAASqC,UAAUC,SACf,OAAOA,SAAW,IAAMtC,GAC5B,CAOI,SAASuC,eAAerV,GACpB,IAAC+O,eAAe/O,GAAI,CACpB,MACR,CACI,IAAI7C,EAAI,EACR,IAAIuQ,EAAI,EACR,MAAMzR,KAAKL,MAAMoE,EAAI7C,GAAKA,IAAM6C,EAAE,CACzB7C,GAAA,GACLuQ,GACR,CACW,OAAAA,CACX,CAEA,SAAS4H,kBAAkBC,YAAaC,YAC9B,MAAAC,oBAAsBD,WAAWxV,EAAIuV,YAAYvV,EACjD,MAAA0V,oBAAsBF,WAAW3D,EAAI0D,YAAY1D,EACvD,MAAM8D,yBAA2B1Z,KAAKmY,KAAKqB,oBAAsBA,oBAAsBC,oBAAsBA,qBAC7G,IAAIE,MAAQ3Z,KAAK4Z,MAAMH,oBAAqBD,qBACxC,GAAAG,UAAe9C,GAAI,CACV8C,OAAA7C,GACjB,CACW,MAAA,CACH6C,YACAE,SAAUH,yBAElB,CACA,SAASI,sBAAsBC,IAAKC,KAChC,OAAOha,KAAKmY,KAAKnY,KAAK2P,IAAIqK,IAAIjW,EAAIgW,IAAIhW,EAAG,GAAK/D,KAAK2P,IAAIqK,IAAIpE,EAAImE,IAAInE,EAAG,GAC1E,CAII,SAASqE,WAAWnZ,EAAGC,GACf,OAAAD,EAAIC,EAAIgW,OAASD,IAAMD,EACnC,CAII,SAASqD,gBAAgBpZ,GACjB,OAAAA,EAAIgW,IAAMA,KAAOA,GAC7B,CAGI,SAASqD,cAAcR,MAAOS,MAAOC,IAAKC,uBACpC,MAAAxZ,EAAIoZ,gBAAgBP,OACpB,MAAAvX,EAAI8X,gBAAgBE,OACpB,MAAAlZ,EAAIgZ,gBAAgBG,KACpB,MAAAE,aAAeL,gBAAgB9X,EAAItB,GACnC,MAAA0Z,WAAaN,gBAAgBhZ,EAAIJ,GACjC,MAAA2Z,aAAeP,gBAAgBpZ,EAAIsB,GACnC,MAAAsY,WAAaR,gBAAgBpZ,EAAII,GAChC,OAAAJ,IAAMsB,GAAKtB,IAAMI,GAAKoZ,uBAAyBlY,IAAMlB,GAAKqZ,aAAeC,YAAcC,aAAeC,UACjH,CAOI,SAASC,YAAYnI,MAAOtS,IAAKD,KACjC,OAAOD,KAAKC,IAAIC,IAAKF,KAAKE,IAAID,IAAKuS,OACvC,CAII,SAASoI,YAAYpI,OACd,OAAAmI,YAAYnI,OAAO,MAAQ,MACtC,CAOI,SAASqI,WAAWrI,MAAO4H,MAAOC,IAAK5C,QAAU,MACjD,OAAOjF,OAASxS,KAAKE,IAAIka,MAAOC,KAAO5C,SAAWjF,OAASxS,KAAKC,IAAIma,MAAOC,KAAO5C,OACtF,CAEA,SAASqD,QAAQC,MAAOvI,MAAOwI,KAC3BA,IAAMA,KAAQ,CAACzG,QAAQwG,MAAMxG,QAAS/B,OAClC,IAAAyI,GAAKF,MAAMjZ,OAAS,EACxB,IAAIoZ,GAAK,EACL,IAAAC,IACE,MAAAF,GAAKC,GAAK,EAAE,CACdC,IAAMD,GAAKD,IAAM,EACb,GAAAD,IAAIG,KAAM,CACLD,GAAAC,GACjB,KAAe,CACEF,GAAAE,GACjB,CACA,CACW,MAAA,CACHD,MACAD,MAER,CAQI,MAAMG,aAAe,CAACL,MAAOlG,IAAKrC,MAAO6I,OAAOP,QAAQC,MAAOvI,MAAO6I,KAAQ9G,SAC1E,MAAM+G,GAAKP,MAAMxG,QAAOM,KACjB,OAAAyG,GAAK9I,OAAS8I,KAAO9I,OAASuI,MAAMxG,OAAQ,GAAGM,OAASrC,OAC9D+B,QAAQwG,MAAMxG,QAAOM,KAAOrC,OAOjC,MAAM+I,cAAgB,CAACR,MAAOlG,IAAKrC,QAAQsI,QAAQC,MAAOvI,MAAQ+B,QAAQwG,MAAMxG,QAAOM,MAAQrC,OAO/F,SAASgJ,eAAeC,OAAQvb,IAAKD,KACrC,IAAIma,MAAQ,EACZ,IAAIC,IAAMoB,OAAO3Z,OACjB,MAAMsY,MAAQC,KAAOoB,OAAOrB,OAASla,IAAI,CACrCka,OACR,CACI,MAAMC,IAAMD,OAASqB,OAAOpB,IAAM,GAAKpa,IAAI,CACvCoa,KACR,CACW,OAAAD,MAAQ,GAAKC,IAAMoB,OAAO3Z,OAAS2Z,OAAO7I,MAAMwH,MAAOC,KAAOoB,MACzE,CACA,MAAMC,YAAc,CAChB,OACA,MACA,QACA,SACA,WAEJ,SAASC,kBAAkB7C,MAAO8C,UAC9B,GAAI9C,MAAM+C,SAAU,CACV/C,MAAA+C,SAASC,UAAU9F,KAAK4F,UAC9B,MACR,CACWhN,OAAAmN,eAAejD,MAAO,WAAY,CACrCkD,aAAc,KACdC,WAAY,MACZzJ,MAAO,CACHsJ,UAAW,CACPF,aAIAF,YAAAQ,QAASrH,MACX,MAAAsH,OAAS,UAAY/F,YAAYvB,KACjC,MAAAuH,KAAOtD,MAAMjE,KACZjG,OAAAmN,eAAejD,MAAOjE,IAAK,CAC9BmH,aAAc,KACdC,WAAY,MACZ,KAAAzJ,IAAUrT,MACN,MAAMkd,IAAMD,KAAKxI,MAAM9C,KAAM3R,MAC7B2Z,MAAM+C,SAASC,UAAUI,QAASI,SAC9B,UAAWA,OAAOH,UAAY,WAAY,CAC/BG,OAAAH,WAAWhd,KAC1C,IAEuB,OAAAkd,GACvB,KAGA,CACA,SAASE,oBAAoBzD,MAAO8C,UAChC,MAAMY,KAAO1D,MAAM+C,SACnB,IAAKW,KAAM,CACP,MACR,CACI,MAAMV,UAAYU,KAAKV,UACjBvH,MAAAA,OAAQuH,UAAUhH,QAAQ8G,UAChC,GAAIrH,UAAc,EAAA,CACJuH,UAAAW,OAAOlI,OAAO,EAChC,CACQ,GAAAuH,UAAUha,OAAS,EAAG,CACtB,MACR,CACgB4Z,YAAAQ,QAASrH,aACViE,MAAMjE,cAEViE,MAAM+C,QACjB,CAGI,SAASa,aAAaC,OAChBC,MAAAA,KAAM,IAAIC,IAAIF,OAChBC,GAAAA,KAAInG,OAASkG,MAAM7a,OAAQ,CACpB,OAAA6a,KACf,CACW,OAAA3Z,MAAM4M,KAAKgN,KACtB,CAOG,MAAME,iBAAmB,WACpB,UAAOC,SAAW,YAAa,CAC/B,OAAO,SAAStJ,WACZ,OAAOA,WACV,CACT,CACI,OAAOsJ,OAAOC,qBAClB,CAP4B,GAWxB,SAASC,UAAUvJ,GAAIC,SACvB,IAAIuJ,UAAY,GAChB,IAAIC,QAAU,MACd,OAAO,YAAYhe,MAEH+d,UAAA/d,KACZ,IAAKge,QAAS,CACAA,QAAA,KACOL,iBAAAnK,KAAKoK,OAAQ,KAChBI,QAAA,MACPzJ,GAAAE,MAAMD,QAASuJ,YAElC,CACK,CACL,CAGI,SAASE,SAAS1J,GAAI2J,OAClB,IAAAC,QACJ,OAAO,YAAYne,MACf,GAAIke,MAAO,CACPE,aAAaD,SACHA,QAAAE,WAAW9J,GAAI2J,MAAOle,KAC5C,KAAe,CACAuU,GAAAE,MAAM9C,KAAM3R,KAC3B,CACe,OAAAke,KACV,CACL,CAII,MAAMI,mBAAsBC,OAAQA,QAAU,QAAU,OAASA,QAAU,MAAQ,QAAU,SAI7F,MAAMC,eAAiB,CAACD,MAAOtD,MAAOC,MAAMqD,QAAU,QAAUtD,MAAQsD,QAAU,MAAQrD,KAAOD,MAAQC,KAAO,EAIhH,MAAMuD,OAAS,CAACF,MAAOG,KAAMC,MAAOC,OAC9B,MAAAC,MAAQD,IAAM,OAAS,QAC7B,OAAOL,QAAUM,MAAQF,MAAQJ,QAAU,UAAYG,KAAOC,OAAS,EAAID,MAK3E,SAASI,iCAAiCC,KAAMC,OAAQC,oBACxD,MAAMC,WAAaF,OAAOrc,OAC1B,IAAIsY,MAAQ,EACZ,IAAIkE,MAAQD,WACZ,GAAIH,KAAKK,QAAS,CACd,MAAMC,OAAEA,OAAAC,OAASA,OAASC,QAAAA,SAAaR,KACjC,MAAAS,SAAWT,KAAKU,QAAUV,KAAKU,QAAQ5J,QAAUkJ,KAAKU,QAAQ5J,QAAQ2J,SAAW,KAAO,KAC9F,MAAME,KAAOL,OAAOK,KACpB,MAAM3e,IAAEA,IAAMD,IAAAA,IAAA6e,WAAMA,sBAAaC,YAAgBP,OAAOQ,gBACxD,GAAIF,WAAY,CACZ1E,MAAQpa,KAAKE,IACbkb,aAAasD,QAASG,KAAM3e,KAAKgb,GACjCkD,mBAAqBC,WAAajD,aAAa+C,OAAQU,KAAML,OAAOS,iBAAiB/e,MAAMgb,IAC3F,GAAIyD,SAAU,CACV,MAAMO,oBAAsBR,QAAQ9L,MAAM,EAAGwH,MAAQ,GAAGrG,UAAUoL,UAAWC,QAAS7M,cAAc6M,MAAMX,OAAOI,QACxGzE,OAAApa,KAAKC,IAAI,EAAGif,oBACrC,CACY9E,MAAQO,YAAYP,MAAO,EAAGiE,WAAa,EACvD,CACQ,GAAIU,WAAY,CACZ,IAAI1E,IAAMra,KAAKC,IACfmb,aAAasD,QAASF,OAAOK,KAAM5e,IAAK,MAAMgb,GAAK,EACnDmD,mBAAqB,EAAIhD,aAAa+C,OAAQU,KAAML,OAAOS,iBAAiBhf,KAAM,MAAMgb,GAAK,GAC7F,GAAI0D,SAAU,CACV,MAAMU,oBAAsBX,QAAQ9L,MAAMyH,IAAM,GAAG8E,UAAWC,QAAS7M,cAAc6M,MAAMX,OAAOI,QAC3FxE,KAAAra,KAAKC,IAAI,EAAGof,oBACnC,CACYf,MAAQ3D,YAAYN,IAAKD,MAAOiE,YAAcjE,KAC1D,KAAe,CACHkE,MAAQD,WAAajE,KACjC,CACA,CACW,MAAA,CACHA,YACAkE,YAER,CAMI,SAASgB,oBAAoBpB,MAC7B,MAAMqB,OAAEA,OAAAC,OAASA,OAASC,aAAAA,cAAkBvB,KAC5C,MAAMwB,UAAY,CACdC,KAAMJ,OAAOrf,IACb0f,KAAML,OAAOtf,IACb4f,KAAML,OAAOtf,IACb4f,KAAMN,OAAOvf,KAEjB,IAAKwf,aAAc,CACfvB,KAAKuB,aAAeC,UACb,OAAA,IACf,CACI,MAAMK,QAAUN,aAAaE,OAASJ,OAAOrf,KAAOuf,aAAaG,OAASL,OAAOtf,KAAOwf,aAAaI,OAASL,OAAOtf,KAAOuf,aAAaK,OAASN,OAAOvf,IAClJ2O,OAAA0B,OAAOmP,aAAcC,WACrB,OAAAK,OACX,CAEA,MAAMC,OAAUhQ,GAAIA,IAAM,GAAKA,IAAM,EACrC,MAAMiQ,UAAY,CAACjQ,EAAG5N,EAAGqP,MAAMzR,KAAK2P,IAAI,EAAG,IAAMK,GAAK,IAAMhQ,KAAKkgB,KAAKlQ,EAAI5N,GAAK0U,IAAMrF,IACrF,MAAM0O,WAAa,CAACnQ,EAAG5N,EAAGqP,IAAIzR,KAAK2P,IAAI,GAAS,GAAAK,GAAKhQ,KAAKkgB,KAAKlQ,EAAI5N,GAAK0U,IAAMrF,GAAK,EAK/E,MAAM2O,QAAU,CAChBC,OAASrQ,GAAIA,EACbsQ,WAAatQ,GAAIA,EAAIA,EACrBuQ,YAAcvQ,IAAKA,GAAKA,EAAI,GAC5BwQ,cAAgBxQ,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,GAAI,MAAUA,GAAKA,EAAI,GAAK,GAC3EyQ,YAAczQ,GAAIA,EAAIA,EAAIA,EAC1B0Q,aAAe1Q,IAAKA,GAAK,GAAKA,EAAIA,EAAI,EACtC2Q,eAAiB3Q,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,EAAIA,EAAI,KAAQA,GAAK,GAAKA,EAAIA,EAAI,GAClF4Q,YAAc5Q,GAAIA,EAAIA,EAAIA,EAAIA,EAC9B6Q,aAAe7Q,MAAOA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAC5C8Q,eAAiB9Q,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,EAAIA,EAAIA,GAAa,KAAAA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAC3F+Q,YAAc/Q,GAAIA,EAAIA,EAAIA,EAAIA,EAAIA,EAClCgR,aAAehR,IAAKA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,EAC9CiR,eAAiBjR,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,GAClGkR,WAAalR,IAAKhQ,KAAKmhB,IAAInR,EAAImH,SAAW,EAC1CiK,YAAcpR,GAAIhQ,KAAKkgB,IAAIlQ,EAAImH,SAC/BkK,cAAgBrR,IAAI,IAAQhQ,KAAKmhB,IAAItK,GAAK7G,GAAK,GAC/CsR,WAAatR,GAAIA,IAAM,EAAI,EAAIhQ,KAAK2P,IAAI,EAAG,IAAMK,EAAI,IACrDuR,YAAcvR,GAAIA,IAAM,EAAI,GAAKhQ,KAAK2P,IAAI,GAAS,GAAAK,GAAK,EACxDwR,cAAgBxR,GAAIgQ,OAAOhQ,GAAKA,EAAIA,EAAI,GAAM,GAAMhQ,KAAK2P,IAAI,EAAG,IAAMK,EAAI,EAAI,IAAM,KAAQhQ,KAAK2P,IAAI,GAAU,IAAAK,EAAI,EAAI,IAAM,GAC7HyR,WAAazR,GAAIA,GAAK,EAAIA,IAAMhQ,KAAKmY,KAAK,EAAInI,EAAIA,GAAK,GACvD0R,YAAc1R,GAAIhQ,KAAKmY,KAAK,GAAKnI,GAAK,GAAKA,GAC3C2R,cAAgB3R,IAAKA,GAAK,IAAO,GAAI,IAAQhQ,KAAKmY,KAAK,EAAInI,EAAIA,GAAK,GAAK,IAAOhQ,KAAKmY,KAAK,GAAKnI,GAAK,GAAKA,GAAK,GAC9G4R,cAAgB5R,GAAIgQ,OAAOhQ,GAAKA,EAAIiQ,UAAUjQ,EAAG,KAAO,IACxD6R,eAAiB7R,GAAIgQ,OAAOhQ,GAAKA,EAAImQ,WAAWnQ,EAAG,KAAO,IAC1D,gBAAA8R,CAAkB9R,GACd,MAAM5N,EAAI,MACV,MAAMqP,EAAI,IACH,OAAAuO,OAAOhQ,GAAKA,EAAIA,EAAI,GAAM,GAAMiQ,UAAUjQ,EAAI,EAAG5N,EAAGqP,GAAK,GAAM,GAAM0O,WAAWnQ,EAAI,EAAI,EAAG5N,EAAGqP,EACxG,EACD,UAAAsQ,CAAY/R,GACR,MAAM5N,EAAI,QACV,OAAO4N,EAAIA,IAAM5N,EAAI,GAAK4N,EAAI5N,EACjC,EACD,WAAA4f,CAAahS,GACT,MAAM5N,EAAI,QACV,OAAQ4N,GAAK,GAAKA,IAAM5N,EAAI,GAAK4N,EAAI5N,GAAK,CAC7C,EACD,aAAA6f,CAAejS,GACX,IAAI5N,EAAI,QACH,IAAA4N,GAAK,IAAO,EAAG,CAChB,MAAO,IAAOA,EAAIA,KAAO5N,GAAK,OAAS,GAAK4N,EAAI5N,GAC5D,CACe,MAAA,KAAQ4N,GAAK,GAAKA,KAAO5N,GAAK,OAAS,GAAK4N,EAAI5N,GAAK,EAC/D,EACD8f,aAAelS,GAAI,EAAIoQ,QAAQ+B,cAAc,EAAInS,GACjD,aAAAmS,CAAenS,GACX,MAAMxM,EAAI,OACV,MAAMvC,EAAI,KACN,GAAA+O,EAAI,EAAI/O,EAAG,CACX,OAAOuC,EAAIwM,EAAIA,CAC3B,CACY,GAAAA,EAAI,EAAI/O,EAAG,CACX,OAAOuC,GAAKwM,GAAK,IAAM/O,GAAK+O,EAAI,GAC5C,CACY,GAAAA,EAAI,IAAM/O,EAAG,CACb,OAAOuC,GAAKwM,GAAK,KAAO/O,GAAK+O,EAAI,KAC7C,CACQ,OAAOxM,GAAKwM,GAAK,MAAQ/O,GAAK+O,EAAI,OACrC,EACDoS,gBAAkBpS,GAAIA,EAAI,GAAMoQ,QAAQ8B,aAAalS,EAAI,GAAK,GAAMoQ,QAAQ+B,cAAcnS,EAAI,EAAI,GAAK,GAAM,IAGjH,SAASqS,oBAAoB7P,OACrB,GAAAA,cAAgBA,QAAU,SAAU,CAC9B,MAAA3B,KAAO2B,MAAME,WACZ,OAAA7B,OAAS,0BAA4BA,OAAS,yBAC7D,CACW,OAAA,KACX,CACA,SAASO,MAAMoB,OACX,OAAO6P,oBAAoB7P,OAASA,MAAQ,IAAI7B,MAAM6B,MAC1D,CACA,SAAS8P,cAAc9P,OACnB,OAAO6P,oBAAoB7P,OAASA,MAAQ,IAAI7B,MAAM6B,OAAON,SAAS,IAAKD,OAAO,IAAKhQ,WAC3F,CAEA,MAAMsgB,QAAU,CACZ,IACA,IACA,cACA,SACA,WAEJ,MAAMC,OAAS,CACX,QACA,cACA,mBAEJ,SAASC,wBAAwBC,WAC7BA,UAAS9F,IAAI,YAAa,CACtBS,WAAO,EACPsF,SAAU,IACVC,OAAQ,eACRlP,QAAI,EACJ9D,UAAM,EACNiT,UAAM,EACNnT,QAAI,EACJmB,UAAM,IAEV6R,UAASI,SAAS,YAAa,CAC3BC,UAAW,MACXC,WAAY,MACZC,YAAcC,MAAOA,OAAS,cAAgBA,OAAS,cAAgBA,OAAS,OAEpFR,UAAS9F,IAAI,aAAc,CACvB4F,OAAQ,CACJ3R,KAAM,QACNsS,WAAYX,QAEhBD,QAAS,CACL1R,KAAM,SACNsS,WAAYZ,WAGpBG,UAASI,SAAS,aAAc,CAC5BC,UAAW,cAEfL,UAAS9F,IAAI,cAAe,CACxBwG,OAAQ,CACJC,UAAW,CACPV,SAAU,MAGlBW,OAAQ,CACJD,UAAW,CACPV,SAAU,IAGlBY,KAAM,CACFC,WAAY,CACRhB,OAAQ,CACJ5S,KAAM,eAEV6T,QAAS,CACL5S,KAAM,UACN8R,SAAU,KAItBe,KAAM,CACFF,WAAY,CACRhB,OAAQ,CACJ9S,GAAI,eAER+T,QAAS,CACL5S,KAAM,UACN+R,OAAQ,SACRlP,GAAK9T,GAAIA,EAAI,MAKjC,CAEA,SAAS+jB,qBAAqBjB,WAC1BA,UAAS9F,IAAI,SAAU,CACnBgH,YAAa,KACbC,QAAS,CACLC,IAAK,EACLhG,MAAO,EACPiG,OAAQ,EACRlG,KAAM,IAGlB,CAEA,MAAMmG,cAAgBC,IACtB,SAASC,gBAAgBC,OAAQnP,SAC7BA,QAAUA,SAAW,CAAE,EACvB,MAAMoP,SAAWD,OAASE,KAAKC,UAAUtP,SACrC,IAAAuP,UAAYP,UAAUQ,IAAIJ,UAC9B,IAAKG,UAAW,CACZA,UAAY,IAAIE,KAAKC,aAAaP,OAAQnP,SAChCgP,UAAApH,IAAIwH,SAAUG,UAChC,CACW,OAAAA,SACX,CACA,SAASI,aAAaC,IAAKT,OAAQnP,SAC/B,OAAOkP,gBAAgBC,OAAQnP,SAAS6P,OAAOD,IACnD,CAEA,MAAME,WAAa,CAClB,MAAArJ,CAAQjJ,OACD,OAAOvP,QAAQuP,OAAUA,MAAQ,GAAKA,KACzC,EACJ,OAAAuS,CAASC,UAAWzQ,OAAO0Q,OACpB,GAAID,YAAc,EAAG,CACV,MAAA,GACnB,CACc,MAAAb,OAASrT,KAAKoU,MAAMlQ,QAAQmP,OAC9B,IAAAgB,SACJ,IAAIC,MAAQJ,UACR,GAAAC,MAAMnjB,OAAS,EAAG,CAClB,MAAMujB,QAAUrlB,KAAKC,IAAID,KAAK0X,IAAIuN,MAAM,GAAGzS,OAAQxS,KAAK0X,IAAIuN,MAAMA,MAAMnjB,OAAS,GAAG0Q,QAChF,GAAA6S,QAAU,MAAQA,QAAU,KAAO,CACxBF,SAAA,YAC3B,CACoBC,MAAAE,eAAeN,UAAWC,MAC9C,CACQ,MAAMM,SAAWjO,MAAMtX,KAAK0X,IAAI0N,QAChC,MAAMI,WAAa9M,MAAM6M,UAAY,EAAIvlB,KAAKC,IAAID,KAAKE,KAAI,EAAKF,KAAK8X,MAAMyN,UAAW,IAAK,GAC3F,MAAMvQ,QAAU,CACZmQ,kBACAM,sBAAuBD,WACvBE,sBAAuBF,YAE3B5W,OAAO0B,OAAO0E,QAASlE,KAAKkE,QAAQiQ,MAAMJ,QACnC,OAAAF,aAAaK,UAAWb,OAAQnP,QAC1C,EACJ,WAAA2Q,CAAaX,UAAWzQ,OAAO0Q,OACxB,GAAID,YAAc,EAAG,CACV,MAAA,GACnB,CACQ,MAAMY,OAASX,MAAM1Q,QAAOsR,aAAeb,UAAYhlB,KAAK2P,IAAI,GAAI3P,KAAK8X,MAAMR,MAAM0N,aACjF,GAAA,CACA,EACA,EACA,EACA,EACA,GACA,IACFc,SAASF,SAAWrR,OAAQ,GAAM0Q,MAAMnjB,OAAQ,CAC9C,OAAOgjB,WAAWC,QAAQpS,KAAK7B,KAAMkU,UAAWzQ,OAAO0Q,MACnE,CACe,MAAA,EACf,GAEA,SAASK,eAAeN,UAAWC,OAC/B,IAAIG,MAAQH,MAAMnjB,OAAS,EAAImjB,MAAM,GAAGzS,MAAQyS,MAAM,GAAGzS,MAAQyS,MAAM,GAAGzS,MAAQyS,MAAM,GAAGzS,MACvF,GAAAxS,KAAK0X,IAAI0N,QAAU,GAAKJ,YAAchlB,KAAK8X,MAAMkN,WAAY,CACrDI,MAAAJ,UAAYhlB,KAAK8X,MAAMkN,UACvC,CACW,OAAAI,KACX,CACC,IAAIW,MAAQ,CACTjB,uBAGJ,SAASkB,mBAAmBtD,WACxBA,UAAS9F,IAAI,QAAS,CAClBqJ,QAAS,KACTC,OAAQ,MACRnS,QAAS,MACToS,YAAa,MACpBC,OAAQ,QACDC,KAAM,KACbC,MAAO,EACAC,KAAM,CACFN,QAAS,KACTO,UAAW,EACXC,gBAAiB,KACjBC,UAAW,KACXC,WAAY,EACZC,UAAW,CAACC,KAAM7R,UAAUA,QAAQwR,UACpCM,UAAW,CAACD,KAAM7R,UAAUA,QAAQ5D,MACpC8U,OAAQ,OAEZa,OAAQ,CACJd,QAAS,KACTe,KAAM,GACNC,WAAY,EACZC,MAAO,GAEXC,MAAO,CACHlB,QAAS,MACTmB,KAAM,GACNvD,QAAS,CACLC,IAAK,EACLC,OAAQ,IAGhBkB,MAAO,CACHoC,YAAa,EACbC,YAAa,GACbC,OAAQ,MACRC,gBAAiB,EACjBC,gBAAiB,GACjB5D,QAAS,EACToC,QAAS,KACTyB,SAAU,KACVC,gBAAiB,EACjBC,YAAa,EACbnU,SAAUsS,MAAMjB,WAAWrJ,OAC3BoM,MAAO,CAAE,EACTC,MAAO,CAAE,EACTpK,MAAO,SACPqK,WAAY,OACZC,kBAAmB,MACnBC,cAAe,4BACfC,gBAAiB,KAGzBxF,UAASyF,MAAM,cAAe,QAAS,GAAI,SAC3CzF,UAASyF,MAAM,aAAc,QAAS,GAAI,eAC1CzF,UAASyF,MAAM,eAAgB,QAAS,GAAI,eAC5CzF,UAASyF,MAAM,cAAe,QAAS,GAAI,SAC3CzF,UAASI,SAAS,QAAS,CACvBC,UAAW,MACXE,YAAcC,OAAQA,KAAKkF,WAAW,YAAclF,KAAKkF,WAAW,UAAYlF,OAAS,YAAcA,OAAS,SAChHF,WAAaE,MAAOA,OAAS,cAAgBA,OAAS,kBAAoBA,OAAS,SAEvFR,UAASI,SAAS,SAAU,CACxBC,UAAW,UAEfL,UAASI,SAAS,cAAe,CAC7BG,YAAcC,MAAOA,OAAS,mBAAqBA,OAAS,WAC5DF,WAAaE,MAAOA,OAAS,mBAErC,CAEA,MAAMmF,UAAmBzZ,OAAA8F,OAAO,MAChC,MAAM4T,YAAqB1Z,OAAA8F,OAAO,MACjC,SAAS6T,WAAWC,KAAM3T,KACvB,IAAKA,IAAK,CACC,OAAA2T,IACf,CACU,MAAA7Z,KAAOkG,IAAItV,MAAM,KACf,IAAA,IAAAoD,EAAI,EAAGN,EAAIsM,KAAK7M,OAAQa,EAAIN,IAAKM,EAAE,CACjC,MAAAL,EAAIqM,KAAKhM,GACR6lB,KAAAA,KAAKlmB,KAAOkmB,KAAKlmB,GAAKsM,OAAO8F,OAAO,MACnD,CACW,OAAA8T,IACX,CACA,SAAS5L,IAAI6L,MAAMC,MAAOjN,QAClB,UAAOiN,QAAU,SAAU,CAC3B,OAAOvT,MAAMoT,WAAWE,MAAMC,OAAQjN,OAC9C,CACI,OAAOtG,MAAMoT,WAAWE,MAAM,IAAKC,MACvC,CACC,MAAMC,SACH,WAAA/X,CAAYgY,cAAcC,WACtB/X,KAAKuS,eAAY,EACjBvS,KAAKgY,gBAAkB,kBACvBhY,KAAKiY,YAAc,kBACnBjY,KAAKM,MAAQ,OACbN,KAAKkY,SAAW,CAAE,EAClBlY,KAAKmY,iBAAoBC,SAAUA,QAAQhE,MAAMiE,SAASC,sBAC1DtY,KAAKuY,SAAW,CAAE,EAClBvY,KAAKwY,OAAS,CACV,YACA,WACA,QACA,aACA,aAEJxY,KAAKyY,KAAO,CACRC,OAAQ,qDACR/S,KAAM,GACNgT,MAAO,SACPC,WAAY,IACZrY,OAAQ,MAEZP,KAAK6Y,MAAQ,CAAE,EACf7Y,KAAK8Y,qBAAuB,CAACC,IAAK7U,UAAUsN,cAActN,QAAQ8T,iBAClEhY,KAAKgZ,iBAAmB,CAACD,IAAK7U,UAAUsN,cAActN,QAAQ+T,aAC9DjY,KAAKiZ,WAAa,CAACF,IAAK7U,UAAUsN,cAActN,QAAQ5D,OACxDN,KAAKkZ,UAAY,IACjBlZ,KAAKmZ,YAAc,CACfC,KAAM,UACNC,UAAW,KACXC,iBAAkB,OAEtBtZ,KAAKuZ,oBAAsB,KAC3BvZ,KAAKwZ,QAAU,KACfxZ,KAAKyZ,QAAU,KACfzZ,KAAK0Z,QAAU,KACf1Z,KAAK2Z,QAAU,CAAE,EACjB3Z,KAAK4Z,WAAa,KAClB5Z,KAAK6Z,WAAQ,EACb7Z,KAAK8Z,OAAS,CAAE,EAChB9Z,KAAK+Z,SAAW,KAChB/Z,KAAKga,wBAA0B,KAC/Bha,KAAKgS,SAAS8F,eACd9X,KAAK8C,MAAMiV,UACnB,CACC,GAAAjM,CAAI8L,MAAOjN,QACG,OAAAmB,IAAI9L,KAAM4X,MAAOjN,OAChC,CACC,GAAA+I,CAAIkE,OACU,OAAAH,WAAWzX,KAAM4X,MAChC,CACC,QAAA5F,CAAS4F,MAAOjN,QACF,OAAAmB,IAAI0L,YAAaI,MAAOjN,OACvC,CACI,QAAAsP,CAASrC,MAAOjN,QACL,OAAAmB,IAAIyL,UAAWK,MAAOjN,OACrC,CACC,KAAA0M,CAAMO,MAAOxF,KAAM8H,YAAaC,YACnB,MAAAC,YAAc3C,WAAWzX,KAAM4X,OAC/B,MAAAyC,kBAAoB5C,WAAWzX,KAAMka,aAC3C,MAAMI,YAAc,IAAMlI,KAC1BtU,OAAOyc,iBAAiBH,YAAa,CACjCE,CAACA,aAAc,CACX5Y,MAAO0Y,YAAYhI,MACnBoI,SAAU,MAEdpI,CAACA,MAAO,CACJjH,WAAY,KACZ,GAAAuI,GACU,MAAA+G,MAAQza,KAAKsa,aACb,MAAA3W,OAAS0W,kBAAkBF,YAC7B,GAAApY,SAAS0Y,OAAQ,CACjB,OAAO3c,OAAO0B,OAAO,GAAImE,OAAQ8W,MACzD,CAC2B,OAAApY,eAAeoY,MAAO9W,OAChC,EACD,GAAAmI,CAAKpK,OACD1B,KAAKsa,aAAe5Y,KACxC,IAGA,CACI,KAAAoB,CAAM4X,UACFA,SAAStP,QAAStI,QAAQA,OAAM9C,MACxC,EAEA,IAAI4R,aAA+BiG,SAAS,CACxC1F,YAAcC,OAAQA,KAAKkF,WAAW,MACtCpF,WAAaE,MAAOA,OAAS,SAC7ByG,MAAO,CACH5G,UAAW,eAEfkH,YAAa,CACThH,YAAa,MACbD,WAAY,QAEjB,CACCP,wBACAkB,qBACAqC,qBAQA,SAASyF,aAAalC,MAClB,IAACA,MAAQhX,cAAcgX,KAAK9S,OAASlE,cAAcgX,KAAKC,QAAS,CAC1D,OAAA,IACf,CACI,OAAQD,KAAKE,MAAQF,KAAKE,MAAQ,IAAM,KAAOF,KAAKlY,OAASkY,KAAKlY,OAAS,IAAM,IAAMkY,KAAK9S,KAAO,MAAQ8S,KAAKC,MACpH,CAGI,SAASkC,aAAa7B,IAAK8B,KAAMC,GAAIC,QAASC,QAC1C,IAAAC,UAAYJ,KAAKG,QACrB,IAAKC,UAAW,CACZA,UAAYJ,KAAKG,QAAUjC,IAAImC,YAAYF,QAAQ5E,MACnD0E,GAAG5V,KAAK8V,OAChB,CACI,GAAIC,UAAYF,QAAS,CACXA,QAAAE,SAClB,CACW,OAAAF,OACX,CAIA,SAASI,aAAapC,IAAKN,KAAM2C,cAAeC,OAC5CA,MAAQA,OAAS,CAAE,EACnB,IAAIR,KAAOQ,MAAMR,KAAOQ,MAAMR,MAAQ,CAAE,EACxC,IAAIC,GAAKO,MAAMC,eAAiBD,MAAMC,gBAAkB,GACpD,GAAAD,MAAM5C,OAASA,KAAM,CACdoC,KAAAQ,MAAMR,KAAO,CAAE,EACjBC,GAAAO,MAAMC,eAAiB,GAC5BD,MAAM5C,KAAOA,IACrB,CACIM,IAAIwC,OACJxC,IAAIN,KAAOA,KACX,IAAIsC,QAAU,EACd,MAAM1X,KAAO+X,cAAcpqB,OACvB,IAAAa,EAAGmM,EAAGwd,KAAMC,MAAOC,YACvB,IAAI7pB,EAAI,EAAGA,EAAIwR,KAAMxR,IAAI,CACrB4pB,MAAQL,cAAcvpB,GAEtB,GAAI4pB,aAAuB,GAAAA,QAAU,OAAStpB,QAAQspB,OAAQ,CAC1DV,QAAUH,aAAa7B,IAAK8B,KAAMC,GAAIC,QAASU,MAC3D,MAAA,GAAmBtpB,QAAQspB,OAAQ,CAGvB,IAAIzd,EAAI,EAAGwd,KAAOC,MAAMzqB,OAAQgN,EAAIwd,KAAMxd,IAAI,CAC1C0d,YAAcD,MAAMzd,GAEpB,GAAI0d,mBAA6B,GAAAA,cAAgB,OAASvpB,QAAQupB,aAAc,CAC5EX,QAAUH,aAAa7B,IAAK8B,KAAMC,GAAIC,QAASW,YACnE,CACA,CACA,CACA,CACI3C,IAAI4C,UACE,MAAAC,MAAQd,GAAG9pB,OAAS,EACtB,GAAA4qB,MAAQR,cAAcpqB,OAAQ,CAC9B,IAAIa,EAAI,EAAGA,EAAI+pB,MAAO/pB,IAAI,QACfgpB,KAAKC,GAAGjpB,GAC3B,CACWipB,GAAAnP,OAAO,EAAGiQ,MACrB,CACW,OAAAb,OACX,CAQI,SAASc,YAAYzH,MAAO0H,MAAO1F,OACnC,MAAM+B,iBAAmB/D,MAAM2H,wBACzB,MAAAC,UAAY5F,QAAU,EAAIlnB,KAAKC,IAAIinB,MAAQ,EAAG,IAAO,EAC3D,OAAOlnB,KAAKL,OAAOitB,MAAQE,WAAa7D,kBAAoBA,iBAAmB6D,SACnF,CAGI,SAASC,YAAYC,OAAQnD,KACzB,IAACA,MAAQmD,OAAQ,CACjB,MACR,CACUnD,IAAAA,KAAOmD,OAAOC,WAAW,MAC/BpD,IAAIwC,OAGJxC,IAAIqD,iBACJrD,IAAIsD,UAAU,EAAG,EAAGH,OAAO9F,MAAO8F,OAAOI,QACzCvD,IAAI4C,SACR,CACA,SAASY,UAAUxD,IAAK7U,QAASjR,EAAG6R,GAEhC0X,gBAAgBzD,IAAK7U,QAASjR,EAAG6R,EAAG,KACxC,CAEA,SAAS0X,gBAAgBzD,IAAK7U,QAASjR,EAAG6R,EAAGnT,GACzC,IAAIoO,KAAM0c,QAASC,QAAS/W,KAAMgX,aAAcvG,MAAOwG,SAAUC,SACjE,MAAMlE,MAAQzU,QAAQ4Y,WACtB,MAAMC,SAAW7Y,QAAQ6Y,SACzB,MAAMC,OAAS9Y,QAAQ8Y,OACnB,IAAAC,KAAOF,UAAY,GAAK3W,YACxB,GAAAuS,cAAgBA,QAAU,SAAU,CACpC5Y,KAAO4Y,MAAM/W,WACT,GAAA7B,OAAS,6BAA+BA,OAAS,6BAA8B,CAC/EgZ,IAAIwC,OACAxC,IAAAmE,UAAUjqB,EAAG6R,GACjBiU,IAAIjmB,OAAOmqB,KACXlE,IAAIoE,UAAUxE,OAAQA,MAAMvC,MAAQ,GAAIuC,MAAM2D,OAAS,EAAG3D,MAAMvC,MAAOuC,MAAM2D,QAC7EvD,IAAI4C,UACJ,MACZ,CACA,CACI,GAAI/T,MAAMoV,SAAWA,QAAU,EAAG,CAC9B,MACR,CACIjE,IAAIqE,YACJ,OAAOzE,OAEH,QACI,GAAIhnB,EAAG,CACConB,IAAAsE,QAAQpqB,EAAG6R,EAAGnT,EAAI,EAAGqrB,OAAQ,EAAG,EAAGhX,IACvD,KAAmB,CACH+S,IAAIuE,IAAIrqB,EAAG6R,EAAGkY,OAAQ,EAAGhX,IACzC,CACY+S,IAAIwE,YACJ,MACJ,IAAK,WACOnH,MAAAzkB,EAAIA,EAAI,EAAIqrB,OACpBjE,IAAIyE,OAAOvqB,EAAI/D,KAAKkgB,IAAI6N,KAAO7G,MAAOtR,EAAI5V,KAAKmhB,IAAI4M,KAAOD,QACnDC,KAAA1W,cACPwS,IAAI0E,OAAOxqB,EAAI/D,KAAKkgB,IAAI6N,KAAO7G,MAAOtR,EAAI5V,KAAKmhB,IAAI4M,KAAOD,QACnDC,KAAA1W,cACPwS,IAAI0E,OAAOxqB,EAAI/D,KAAKkgB,IAAI6N,KAAO7G,MAAOtR,EAAI5V,KAAKmhB,IAAI4M,KAAOD,QAC1DjE,IAAIwE,YACJ,MACJ,IAAK,cAQDZ,aAAeK,OAAS,KACxBrX,KAAOqX,OAASL,aAChBF,QAAUvtB,KAAKmhB,IAAI4M,IAAM3W,YAAcX,KAC5BiX,SAAA1tB,KAAKmhB,IAAI4M,IAAM3W,aAAe3U,EAAIA,EAAI,EAAIgrB,aAAehX,MACpE+W,QAAUxtB,KAAKkgB,IAAI6N,IAAM3W,YAAcX,KAC5BkX,SAAA3tB,KAAKkgB,IAAI6N,IAAM3W,aAAe3U,EAAIA,EAAI,EAAIgrB,aAAehX,MAChEoT,IAAAuE,IAAIrqB,EAAI2pB,SAAU9X,EAAI4X,QAASC,aAAcM,IAAMlX,GAAIkX,IAAM5W,SAC7D0S,IAAAuE,IAAIrqB,EAAI4pB,SAAU/X,EAAI2X,QAASE,aAAcM,IAAM5W,QAAS4W,KAC5DlE,IAAAuE,IAAIrqB,EAAI2pB,SAAU9X,EAAI4X,QAASC,aAAcM,IAAKA,IAAM5W,SACxD0S,IAAAuE,IAAIrqB,EAAI4pB,SAAU/X,EAAI2X,QAASE,aAAcM,IAAM5W,QAAS4W,IAAMlX,IACtEgT,IAAIwE,YACJ,MACJ,IAAK,OACD,IAAKR,SAAU,CACXpX,KAAOzW,KAAKwuB,QAAUV,OACd5G,MAAAzkB,EAAIA,EAAI,EAAIgU,KAChBoT,IAAA4E,KAAK1qB,EAAImjB,MAAOtR,EAAIa,KAAM,EAAIyQ,MAAO,EAAIzQ,MAC7C,KAChB,CACmBsX,KAAA3W,WACS,IAAK,UACrBsW,SAAW1tB,KAAKmhB,IAAI4M,MAAQtrB,EAAIA,EAAI,EAAIqrB,QAC9BP,QAAAvtB,KAAKmhB,IAAI4M,KAAOD,OAChBN,QAAAxtB,KAAKkgB,IAAI6N,KAAOD,OAC1BH,SAAW3tB,KAAKkgB,IAAI6N,MAAQtrB,EAAIA,EAAI,EAAIqrB,QACxCjE,IAAIyE,OAAOvqB,EAAI2pB,SAAU9X,EAAI4X,SAC7B3D,IAAI0E,OAAOxqB,EAAI4pB,SAAU/X,EAAI2X,SAC7B1D,IAAI0E,OAAOxqB,EAAI2pB,SAAU9X,EAAI4X,SAC7B3D,IAAI0E,OAAOxqB,EAAI4pB,SAAU/X,EAAI2X,SAC7B1D,IAAIwE,YACJ,MACJ,IAAK,WACMN,KAAA3W,WACS,IAAK,QACrBsW,SAAW1tB,KAAKmhB,IAAI4M,MAAQtrB,EAAIA,EAAI,EAAIqrB,QAC9BP,QAAAvtB,KAAKmhB,IAAI4M,KAAOD,OAChBN,QAAAxtB,KAAKkgB,IAAI6N,KAAOD,OAC1BH,SAAW3tB,KAAKkgB,IAAI6N,MAAQtrB,EAAIA,EAAI,EAAIqrB,QACxCjE,IAAIyE,OAAOvqB,EAAI2pB,SAAU9X,EAAI4X,SAC7B3D,IAAI0E,OAAOxqB,EAAI2pB,SAAU9X,EAAI4X,SAC7B3D,IAAIyE,OAAOvqB,EAAI4pB,SAAU/X,EAAI2X,SAC7B1D,IAAI0E,OAAOxqB,EAAI4pB,SAAU/X,EAAI2X,SAC7B,MACJ,IAAK,OACDG,SAAW1tB,KAAKmhB,IAAI4M,MAAQtrB,EAAIA,EAAI,EAAIqrB,QAC9BP,QAAAvtB,KAAKmhB,IAAI4M,KAAOD,OAChBN,QAAAxtB,KAAKkgB,IAAI6N,KAAOD,OAC1BH,SAAW3tB,KAAKkgB,IAAI6N,MAAQtrB,EAAIA,EAAI,EAAIqrB,QACxCjE,IAAIyE,OAAOvqB,EAAI2pB,SAAU9X,EAAI4X,SAC7B3D,IAAI0E,OAAOxqB,EAAI2pB,SAAU9X,EAAI4X,SAC7B3D,IAAIyE,OAAOvqB,EAAI4pB,SAAU/X,EAAI2X,SAC7B1D,IAAI0E,OAAOxqB,EAAI4pB,SAAU/X,EAAI2X,SACtBQ,KAAA3W,WACPsW,SAAW1tB,KAAKmhB,IAAI4M,MAAQtrB,EAAIA,EAAI,EAAIqrB,QAC9BP,QAAAvtB,KAAKmhB,IAAI4M,KAAOD,OAChBN,QAAAxtB,KAAKkgB,IAAI6N,KAAOD,OAC1BH,SAAW3tB,KAAKkgB,IAAI6N,MAAQtrB,EAAIA,EAAI,EAAIqrB,QACxCjE,IAAIyE,OAAOvqB,EAAI2pB,SAAU9X,EAAI4X,SAC7B3D,IAAI0E,OAAOxqB,EAAI2pB,SAAU9X,EAAI4X,SAC7B3D,IAAIyE,OAAOvqB,EAAI4pB,SAAU/X,EAAI2X,SAC7B1D,IAAI0E,OAAOxqB,EAAI4pB,SAAU/X,EAAI2X,SAC7B,MACJ,IAAK,OACDA,QAAU9qB,EAAIA,EAAI,EAAIzC,KAAKmhB,IAAI4M,KAAOD,OAC5BN,QAAAxtB,KAAKkgB,IAAI6N,KAAOD,OAC1BjE,IAAIyE,OAAOvqB,EAAIwpB,QAAS3X,EAAI4X,SAC5B3D,IAAI0E,OAAOxqB,EAAIwpB,QAAS3X,EAAI4X,SAC5B,MACJ,IAAK,OACG3D,IAAAyE,OAAOvqB,EAAG6R,GACdiU,IAAI0E,OAAOxqB,EAAI/D,KAAKmhB,IAAI4M,MAAQtrB,EAAIA,EAAI,EAAIqrB,QAASlY,EAAI5V,KAAKkgB,IAAI6N,KAAOD,QACzE,MACJ,KAAK,MACDjE,IAAIwE,YACJ,MAERxE,IAAI6E,OACA,GAAA1Z,QAAQ2Z,YAAc,EAAG,CACzB9E,IAAI+E,QACZ,CACA,CAOI,SAASC,eAAezP,MAAO0P,KAAMC,QACrCA,OAASA,QAAU,GACZ,OAACD,MAAQ1P,OAASA,MAAMrb,EAAI+qB,KAAKjR,KAAOkR,QAAU3P,MAAMrb,EAAI+qB,KAAKhR,MAAQiR,QAAU3P,MAAMxJ,EAAIkZ,KAAKhL,IAAMiL,QAAU3P,MAAMxJ,EAAIkZ,KAAK/K,OAASgL,MACrJ,CACA,SAASC,SAASnF,IAAKiF,MACnBjF,IAAIwC,OACJxC,IAAIqE,YACJrE,IAAI4E,KAAKK,KAAKjR,KAAMiR,KAAKhL,IAAKgL,KAAKhR,MAAQgR,KAAKjR,KAAMiR,KAAK/K,OAAS+K,KAAKhL,KACzE+F,IAAIxD,MACR,CACA,SAAS4I,WAAWpF,KAChBA,IAAI4C,SACR,CAGI,SAASyC,eAAerF,IAAKsF,SAAU1a,OAAQ2a,KAAMlF,MACrD,IAAKiF,SAAU,CACX,OAAOtF,IAAI0E,OAAO9Z,OAAO1Q,EAAG0Q,OAAOmB,EAC3C,CACI,GAAIsU,OAAS,SAAU,CACnB,MAAMmF,UAAYF,SAASprB,EAAI0Q,OAAO1Q,GAAK,EACvC8lB,IAAA0E,OAAOc,SAAUF,SAASvZ,GAC1BiU,IAAA0E,OAAOc,SAAU5a,OAAOmB,EAC/B,MAAU,GAAAsU,OAAS,YAAckF,KAAM,CACpCvF,IAAI0E,OAAOY,SAASprB,EAAG0Q,OAAOmB,EACtC,KAAW,CACHiU,IAAI0E,OAAO9Z,OAAO1Q,EAAGorB,SAASvZ,EACtC,CACIiU,IAAI0E,OAAO9Z,OAAO1Q,EAAG0Q,OAAOmB,EAChC,CAGI,SAAS0Z,eAAezF,IAAKsF,SAAU1a,OAAQ2a,MAC/C,IAAKD,SAAU,CACX,OAAOtF,IAAI0E,OAAO9Z,OAAO1Q,EAAG0Q,OAAOmB,EAC3C,CACQiU,IAAA0F,cAAcH,KAAOD,SAASK,KAAOL,SAASM,KAAML,KAAOD,SAASO,KAAOP,SAASQ,KAAMP,KAAO3a,OAAOgb,KAAOhb,OAAO+a,KAAMJ,KAAO3a,OAAOkb,KAAOlb,OAAOib,KAAMjb,OAAO1Q,EAAG0Q,OAAOmB,EACvL,CACA,SAASga,cAAc/F,IAAKgG,MACxB,GAAIA,KAAKC,YAAa,CACdjG,IAAAmE,UAAU6B,KAAKC,YAAY,GAAID,KAAKC,YAAY,GAC5D,CACI,IAAKvd,cAAcsd,KAAKhC,UAAW,CAC3BhE,IAAAjmB,OAAOisB,KAAKhC,SACxB,CACI,GAAIgC,KAAKze,MAAO,CACZyY,IAAIkG,UAAYF,KAAKze,KAC7B,CACI,GAAIye,KAAKG,UAAW,CAChBnG,IAAImG,UAAYH,KAAKG,SAC7B,CACI,GAAIH,KAAKI,aAAc,CACnBpG,IAAIoG,aAAeJ,KAAKI,YAChC,CACA,CACA,SAASC,aAAarG,IAAK9lB,EAAG6R,EAAGua,KAAMN,MAC/B,GAAAA,KAAKO,eAAiBP,KAAKQ,UAAW,CAOhC,MAAAC,QAAUzG,IAAImC,YAAYmE,MAC1B,MAAAtS,KAAO9Z,EAAIusB,QAAQC,sBACnB,MAAAzS,MAAQ/Z,EAAIusB,QAAQE,uBACpB,MAAA1M,IAAMlO,EAAI0a,QAAQG,wBAClB,MAAA1M,OAASnO,EAAI0a,QAAQI,yBAC3B,MAAMC,YAAcd,KAAKO,eAAiBtM,IAAMC,QAAU,EAAIA,OAC9D8F,IAAI+G,YAAc/G,IAAIkG,UACtBlG,IAAIqE,YACArE,IAAArD,UAAYqJ,KAAKgB,iBAAmB,EACpChH,IAAAyE,OAAOzQ,KAAM8S,aACb9G,IAAA0E,OAAOzQ,MAAO6S,aAClB9G,IAAI+E,QACZ,CACA,CACA,SAASkC,aAAajH,IAAKgG,MACvB,MAAMkB,SAAWlH,IAAIkG,UACrBlG,IAAIkG,UAAYF,KAAKze,MACjByY,IAAAmH,SAASnB,KAAKhS,KAAMgS,KAAK/L,IAAK+L,KAAK3I,MAAO2I,KAAKzC,QACnDvD,IAAIkG,UAAYgB,QACpB,CAGI,SAASE,WAAWpH,IAAKzC,KAAMrjB,EAAG6R,EAAG2T,KAAMsG,KAAO,IAClD,MAAMqB,MAAQjuB,QAAQmkB,MAAQA,KAAO,CACjCA,MAEJ,MAAMwH,OAASiB,KAAKsB,YAAc,GAAKtB,KAAKuB,cAAgB,GAC5D,IAAIzuB,EAAGwtB,KACPtG,IAAIwC,OACJxC,IAAIN,KAAOA,KAAKuC,OAChB8D,cAAc/F,IAAKgG,MACnB,IAAIltB,EAAI,EAAGA,EAAIuuB,MAAMpvB,SAAUa,EAAE,CAC7BwtB,KAAOe,MAAMvuB,GACb,GAAIktB,KAAKwB,SAAU,CACFP,aAAAjH,IAAKgG,KAAKwB,SACnC,CACQ,GAAIzC,OAAQ,CACR,GAAIiB,KAAKuB,YAAa,CAClBvH,IAAI+G,YAAcf,KAAKuB,WACvC,CACY,IAAK7e,cAAcsd,KAAKsB,aAAc,CAClCtH,IAAIrD,UAAYqJ,KAAKsB,WACrC,CACYtH,IAAIyH,WAAWnB,KAAMpsB,EAAG6R,EAAGia,KAAK0B,SAC5C,CACQ1H,IAAI2H,SAASrB,KAAMpsB,EAAG6R,EAAGia,KAAK0B,UAC9BrB,aAAarG,IAAK9lB,EAAG6R,EAAGua,KAAMN,MACzBja,GAAA7C,OAAOwW,KAAKG,WACzB,CACIG,IAAI4C,SACR,CAKI,SAASgF,mBAAmB5H,IAAK4E,MACjC,MAAM1qB,EAAEA,EAAI6R,EAAAA,EAAAnT,EAAIA,EAAI1C,EAAAA,EAAA+tB,OAAIA,QAAYW,KAEpC5E,IAAIuE,IAAIrqB,EAAI+pB,OAAO4D,QAAS9b,EAAIkY,OAAO4D,QAAS5D,OAAO4D,QAAS,IAAM7a,GAAIA,GAAI,MAE9EgT,IAAI0E,OAAOxqB,EAAG6R,EAAI7V,EAAI+tB,OAAO6D,YAE7B9H,IAAIuE,IAAIrqB,EAAI+pB,OAAO6D,WAAY/b,EAAI7V,EAAI+tB,OAAO6D,WAAY7D,OAAO6D,WAAY9a,GAAIM,QAAS,MAE1F0S,IAAI0E,OAAOxqB,EAAItB,EAAIqrB,OAAO8D,YAAahc,EAAI7V,GAE3C8pB,IAAIuE,IAAIrqB,EAAItB,EAAIqrB,OAAO8D,YAAahc,EAAI7V,EAAI+tB,OAAO8D,YAAa9D,OAAO8D,YAAaza,QAAS,EAAG,MAEhG0S,IAAI0E,OAAOxqB,EAAItB,EAAGmT,EAAIkY,OAAO+D,UAE7BhI,IAAIuE,IAAIrqB,EAAItB,EAAIqrB,OAAO+D,SAAUjc,EAAIkY,OAAO+D,SAAU/D,OAAO+D,SAAU,GAAI1a,QAAS,MAEpF0S,IAAI0E,OAAOxqB,EAAI+pB,OAAO4D,QAAS9b,EACnC,CAEA,MAAMkc,YAAc,uCACpB,MAAMC,WAAa,wEAWf,SAASC,aAAaxf,MAAOiE,MAC7B,MAAMwb,SAAW,GAAKzf,OAAO0f,MAAMJ,aACnC,IAAKG,SAAWA,QAAQ,KAAO,SAAU,CACrC,OAAOxb,KAAO,GACtB,CACYjE,OAACyf,QAAQ,GACV,OAAAA,QAAQ,IACX,IAAK,KACM,OAAAzf,MACX,IAAK,IACQA,OAAA,IACT,MAER,OAAOiE,KAAOjE,KAClB,CACA,MAAM2f,aAAgBvyB,IAAKA,GAAK,EAChC,SAASwyB,kBAAkB5f,MAAO6f,OAC9B,MAAMtwB,IAAM,CAAE,EACR,MAAAuwB,SAAWzf,SAASwf,OAC1B,MAAM1jB,KAAO2jB,SAAW1jB,OAAOD,KAAK0jB,OAASA,MACvC,MAAAE,KAAO1f,SAASL,OAAS8f,SAAYE,OAAOrf,eAAeX,MAAMggB,OAAOhgB,MAAM6f,MAAMG,SAAWA,OAAOhgB,MAAMggB,OAAQ,IAAIhgB,MAC9H,IAAA,MAAWggB,SAAQ7jB,KAAK,CACpB5M,IAAIywB,OAAQL,aAAaI,KAAKC,OACtC,CACW,OAAAzwB,GACX,CAQI,SAAS0wB,OAAOjgB,OAChB,OAAO4f,kBAAkB5f,MAAO,CAC5BsR,IAAK,IACLhG,MAAO,IACPiG,OAAQ,IACRlG,KAAM,KAEd,CAOI,SAAS6U,cAAclgB,OACvB,OAAO4f,kBAAkB5f,MAAO,CAC5B,UACA,WACA,aACA,eAER,CAQI,SAASmgB,UAAUngB,OACb,MAAAtB,IAAMuhB,OAAOjgB,OACftB,IAAAgW,MAAQhW,IAAI2M,KAAO3M,IAAI4M,MACvB5M,IAAAkc,OAASlc,IAAI4S,IAAM5S,IAAI6S,OACpB,OAAA7S,GACX,CAOI,SAAS0hB,OAAO5d,QAAS6d,UACzB7d,QAAUA,SAAW,CAAE,EACvB6d,SAAWA,UAAYnQ,SAAS6G,KAChC,IAAI9S,KAAOtD,eAAe6B,QAAQyB,KAAMoc,SAASpc,MAC7C,UAAOA,OAAS,SAAU,CACnBA,KAAAvH,SAASuH,KAAM,GAC9B,CACI,IAAIgT,MAAQtW,eAAe6B,QAAQyU,MAAOoJ,SAASpJ,OACnD,GAAIA,SAAW,GAAKA,OAAOyI,MAAMH,YAAa,CAClCtyB,QAAAqzB,KAAK,kCAAoCrJ,MAAQ,KACjDA,WAAA,CAChB,CACI,MAAMF,KAAO,CACTC,OAAQrW,eAAe6B,QAAQwU,OAAQqJ,SAASrJ,QAChDE,WAAYsI,aAAa7e,eAAe6B,QAAQ0U,WAAYmJ,SAASnJ,YAAajT,MAClFA,UACAgT,YACApY,OAAQ8B,eAAe6B,QAAQ3D,OAAQwhB,SAASxhB,QAChDya,OAAQ,IAEPvC,KAAAuC,OAASL,aAAalC,MACpB,OAAAA,IACX,CAWI,SAASwJ,QAAQC,OAAQ9J,QAAS3U,OAAO0e,MAEzC,IAAItwB,EAAGwR,KAAM3B,MACT,IAAA7P,EAAI,EAAGwR,KAAO6e,OAAOlxB,OAAQa,EAAIwR,OAAQxR,EAAE,CAC3C6P,MAAQwgB,OAAOrwB,GACf,GAAI6P,aAAqB,EAAA,CACrB,QACZ,CASQ,GAAIA,aAAqB,EAAA,CAId,OAAAA,KACnB,CACA,CACA,CAMI,SAAS0gB,UAAUC,OAAQ7M,MAAOH,aAC5B,MAAAjmB,IAAEA,IAAMD,IAAAA,KAASkzB,OACvB,MAAMC,OAAS5f,YAAY8S,OAAQrmB,IAAMC,KAAO,GAC1C,MAAAmzB,SAAW,CAAC7gB,MAAO8gB,MAAMnN,aAAe3T,QAAU,EAAI,EAAIA,MAAQ8gB,IACjE,MAAA,CACHpzB,IAAKmzB,SAASnzB,KAAMF,KAAK0X,IAAI0b,SAC7BnzB,IAAKozB,SAASpzB,IAAKmzB,QAE3B,CACA,SAASG,cAAcC,cAAetK,SAClC,OAAOta,OAAO0B,OAAO1B,OAAO8F,OAAO8e,eAAgBtK,QACvD,CAWI,SAASuK,gBAAgBC,OAAQC,SAAW,CAC5C,IACDC,WAAYf,SAAUgB,UAAY,IAAIH,OAAO,IAC5C,MAAMI,gBAAkBF,YAAcF,OAClC,UAAOb,WAAa,YAAa,CACtBA,SAAAkB,SAAS,YAAaL,OACzC,CACI,MAAMvH,MAAQ,CACV,CAAC5T,OAAOyb,aAAc,SACtBC,WAAY,KACZC,QAASR,OACTS,YAAaL,gBACb/Q,UAAW8P,SACXuB,WAAYP,UACZ9I,SAAWrC,OAAQ+K,gBAAgB,CAC3B/K,SACGgL,QACJC,SAAUG,gBAAiBjB,WAE/B,OAAA,IAAIwB,MAAMlI,MAAO,CAGpB,cAAAmI,CAAgB7f,OAAQ+d,cACb/d,OAAO+d,cACP/d,OAAO8f,aACPb,OAAO,GAAGlB,OACV,OAAA,IACV,EAGD,GAAAhO,CAAK/P,OAAQ+d,OACF,OAAAgC,QAAQ/f,OAAQ+d,MAAM,IAAIiC,qBAAqBjC,MAAMmB,SAAUD,OAAQjf,QACjF,EAID,wBAAAigB,CAA0BjgB,OAAQ+d,OAC9B,OAAOmC,QAAQD,yBAAyBjgB,OAAOyf,QAAQ,GAAI1B,MAC9D,EAGD,cAAAoC,GACI,OAAOD,QAAQC,eAAelB,OAAO,GACxC,EAGD,GAAA/c,CAAKlC,OAAQ+d,OACT,OAAOqC,qBAAqBpgB,QAAQqR,SAAS0M,MAChD,EAGD,OAAAsC,CAASrgB,QACL,OAAOogB,qBAAqBpgB,OAC/B,EAGD,GAAAmI,CAAKnI,OAAQ+d,MAAMhgB,OACf,MAAMuiB,QAAUtgB,OAAOugB,WAAavgB,OAAOugB,SAAWnB,aACtDpf,OAAO+d,OAAQuC,QAAQvC,OAAQhgB,aACxBiC,OAAO8f,MACP,OAAA,IACnB,GAEA,CAQI,SAASU,eAAeC,OAAOhM,QAASiM,SAAUC,oBAClD,MAAMjJ,MAAQ,CACV8H,WAAY,MACZoB,OAAQH,OACRI,SAAUpM,QACVqM,UAAWJ,SACXK,WAAY3Y,IACZ+L,aAAcA,aAAasM,OAAOE,oBAClCK,WAAa5L,KAAMoL,eAAeC,OAAOrL,IAAKsL,SAAUC,oBACxDrK,SAAWrC,OAAQuM,eAAeC,OAAMnK,SAASrC,OAAQQ,QAASiM,SAAUC,qBAEzE,OAAA,IAAIf,MAAMlI,MAAO,CAGpB,cAAAmI,CAAgB7f,OAAQ+d,cACb/d,OAAO+d,cACP0C,OAAM1C,OACN,OAAA,IACV,EAGD,GAAAhO,CAAK/P,OAAQ+d,MAAMkD,UACR,OAAAlB,QAAQ/f,OAAQ+d,MAAM,IAAImD,oBAAoBlhB,OAAQ+d,MAAMkD,UACtE,EAID,wBAAAhB,CAA0BjgB,OAAQ+d,OAC9B,OAAO/d,OAAOmU,aAAagN,QAAUjB,QAAQhe,IAAIue,OAAO1C,OAAQ,CAC5DvW,WAAY,KACZD,aAAc,WACd,EAAY2Y,QAAQD,yBAAyBQ,OAAO1C,MAC3D,EAGD,cAAAoC,GACW,OAAAD,QAAQC,eAAeM,OACjC,EAGD,GAAAve,CAAKlC,OAAQ+d,OACF,OAAAmC,QAAQhe,IAAIue,OAAO1C,MAC7B,EAGD,OAAAsC,GACW,OAAAH,QAAQG,QAAQI,OAC1B,EAGD,GAAAtY,CAAKnI,OAAQ+d,MAAMhgB,OACf0iB,OAAM1C,OAAQhgB,aACPiC,OAAO+d,OACP,OAAA,IACnB,GAEA,CAGI,SAAS5J,aAAasM,OAAOxS,UAAW,CACxCmT,WAAY,KACZC,UAAW,OAEL,MAAA7S,YAAEA,YAAaP,UAASmT,WAAa7S,WAAAA,WAAYN,UAASoT,UAAYC,SAAAA,SAAUrT,UAASkT,SAAaV,OACrG,MAAA,CACHU,QAASG,SACTF,WAAY5S,YACZ6S,UAAW9S,WACXgT,aAAczf,WAAW0M,aAAeA,YAAc,IAAIA,YAC1DgT,YAAa1f,WAAWyM,YAAcA,WAAa,IAAIA,WAE/D,CACA,MAAMkT,QAAU,CAACC,OAAQjT,OAAOiT,OAASA,OAAS/f,YAAY8M,MAAQA,KACtE,MAAMkT,iBAAmB,CAAC5D,MAAMhgB,QAAQK,SAASL,QAAUggB,QAAS,aAAe5jB,OAAOgmB,eAAepiB,SAAW,MAAQA,MAAM5B,cAAgBhC,QAClJ,SAAS4lB,QAAQ/f,OAAQ+d,MAAMO,UACvB,GAAAnkB,OAAO6D,UAAUgD,eAAe9C,KAAK8B,OAAQ+d,QAASA,QAAS,cAAe,CAC9E,OAAO/d,OAAO+d,MACtB,CACI,MAAMhgB,MAAQugB,WAEdte,OAAO+d,OAAQhgB,MACR,OAAAA,KACX,CACA,SAASmjB,oBAAoBlhB,OAAQ+d,MAAMkD,UACvC,MAAML,OAAEA,OAASC,SAAAA,SAAAC,UAAWA,UAAY3M,aAAcN,cAAiB7T,OACnE,IAAAjC,MAAQ6iB,OAAO7C,OAEnB,GAAIjc,WAAW/D,QAAU8V,aAAY0N,aAAaxD,OAAO,CACrDhgB,MAAQ6jB,mBAAmB7D,MAAMhgB,MAAOiC,OAAQihB,SACxD,CACI,GAAIzyB,QAAQuP,QAAUA,MAAM1Q,OAAQ,CAChC0Q,MAAQ8jB,cAAc9D,MAAMhgB,MAAOiC,OAAQ6T,aAAY2N,YAC/D,CACQ,GAAAG,iBAAiB5D,MAAMhgB,OAAQ,CAE/BA,MAAQyiB,eAAeziB,MAAO8iB,SAAUC,WAAaA,UAAU/C,OAAOlK,aAC9E,CACW,OAAA9V,KACX,CACA,SAAS6jB,mBAAmB7D,MAAM+D,SAAU9hB,OAAQihB,UAChD,MAAML,OAAEA,OAAAC,SAASA,SAAWC,UAAAA,UAAAC,OAAYA,QAAY/gB,OAChD,GAAA+gB,OAAO7e,IAAI6b,OAAO,CACZ,MAAA,IAAInzB,MAAM,uBAAyB2D,MAAM4M,KAAK4lB,QAAQgB,KAAK,MAAQ,KAAOhE,MACxF,CACIgD,OAAOlC,IAAId,OACX,IAAIhgB,MAAQ+jB,SAASjB,SAAUC,WAAaG,UAC5CF,OAAOiB,OAAOjE,OACV,GAAA4D,iBAAiB5D,MAAMhgB,OAAQ,CAE/BA,MAAQkkB,kBAAkBrB,OAAOnB,QAASmB,OAAQ7C,MAAMhgB,MAChE,CACW,OAAAA,KACX,CACA,SAAS8jB,cAAc9D,MAAMhgB,MAAOiC,OAAQwhB,aACxC,MAAMZ,OAAEA,OAASC,SAAAA,SAAAC,UAAWA,UAAY3M,aAAcN,cAAiB7T,OACvE,UAAW6gB,SAAS/gB,QAAU,aAAe0hB,YAAYzD,OAAO,CAC5D,OAAOhgB,MAAM8iB,SAAS/gB,MAAQ/B,MAAM1Q,OACvC,MAAU,GAAA+Q,SAASL,MAAM,IAAK,CAE3B,MAAMmkB,IAAMnkB,MACZ,MAAMkhB,OAAS2B,OAAOnB,QAAQ0C,OAAQx0B,GAAIA,IAAMu0B,KAChDnkB,MAAQ,GACR,IAAA,MAAWkE,QAAQigB,IAAI,CACnB,MAAMxgB,SAAWugB,kBAAkBhD,OAAQ2B,OAAQ7C,MAAM9b,MACnDlE,MAAAwD,KAAKif,eAAe9e,SAAUmf,SAAUC,WAAaA,UAAU/C,OAAOlK,cACxF,CACA,CACW,OAAA9V,KACX,CACA,SAASqkB,gBAAgBhE,SAAUL,MAAMhgB,OACrC,OAAO+D,WAAWsc,UAAYA,SAASL,MAAMhgB,OAASqgB,QAC1D,CACA,MAAMiE,SAAW,CAACjiB,IAAKkiB,SAASliB,MAAQ,KAAOkiB,cAAgBliB,MAAQ,SAAWqB,iBAAiB6gB,OAAQliB,UAAO,EAClH,SAASmiB,UAAUpa,KAAKqa,aAAcpiB,IAAKqiB,eAAgB1kB,OACvD,IAAA,MAAWukB,UAAUE,aAAa,CACxB,MAAAvO,MAAQoO,SAASjiB,IAAKkiB,QAC5B,GAAIrO,MAAO,CACP9L,KAAI0W,IAAI5K,OACR,MAAMmK,SAAWgE,gBAAgBnO,MAAM3F,UAAWlO,IAAKrC,OACvD,UAAWqgB,WAAa,aAAeA,WAAahe,KAAOge,WAAaqE,eAAgB,CAG7E,OAAArE,QACvB,CACA,SAAmBnK,QAAU,cAAgBwO,iBAAmB,aAAeriB,MAAQqiB,eAAgB,CAGpF,OAAA,IACnB,CACA,CACW,OAAA,KACX,CACA,SAASR,kBAAkBO,aAAc9gB,SAAUqc,MAAMhgB,OACrD,MAAMohB,WAAazd,SAASge,YAC5B,MAAMtB,SAAWgE,gBAAgB1gB,SAAS4M,UAAWyP,MAAMhgB,OAC3D,MAAM2kB,UAAY,IACXF,gBACArD,YAEDhX,MAAAA,SAAUC,IAChBD,KAAI0W,IAAI9gB,OACR,IAAIqC,IAAMuiB,iBAAiBxa,KAAKua,UAAW3E,MAAMK,UAAYL,MAAMhgB,OACnE,GAAIqC,MAAQ,KAAM,CACP,OAAA,KACf,CACI,UAAWge,WAAa,aAAeA,WAAaL,MAAM,CACtD3d,IAAMuiB,iBAAiBxa,KAAKua,UAAWtE,SAAUhe,IAAKrC,OACtD,GAAIqC,MAAQ,KAAM,CACP,OAAA,KACnB,CACA,CACI,OAAO4e,gBAAgBzwB,MAAM4M,KAAKgN,MAAM,CACpC,IACDgX,WAAYf,SAAU,IAAIwE,aAAalhB,SAAUqc,MAAMhgB,OAC9D,CACA,SAAS4kB,iBAAiBxa,KAAKua,UAAWtiB,IAAKge,SAAUnc,MACrD,MAAM7B,IAAI,CACNA,IAAMmiB,UAAUpa,KAAKua,UAAWtiB,IAAKge,SAAUnc,KACvD,CACW,OAAA7B,GACX,CACA,SAASwiB,aAAalhB,SAAUqc,MAAMhgB,OAC5B,MAAAukB,OAAS5gB,SAASie,aACpB,KAAE5B,SAAQuE,QAAS,CACZvE,OAAAA,OAAQ,CAAE,CACzB,CACU,MAAA/d,OAASsiB,OAAOvE,OACtB,GAAIvvB,QAAQwR,SAAW5B,SAASL,OAAQ,CAE7B,OAAAA,KACf,CACI,OAAOiC,QAAU,CAAE,CACvB,CACA,SAASggB,qBAAqBjC,MAAMmB,SAAUD,OAAQwB,QAC9C,IAAA1iB,MACJ,IAAA,MAAW2jB,UAAUxC,SAAS,CAC1BnhB,MAAQuhB,SAASmC,QAAQC,OAAQ3D,OAAOkB,QACpC,UAAOlhB,QAAU,YAAa,CACvB,OAAA4jB,iBAAiB5D,MAAMhgB,OAASkkB,kBAAkBhD,OAAQwB,OAAO1C,MAAMhgB,OAASA,KACnG,CACA,CACA,CACA,SAASuhB,SAASlf,IAAK6e,QACnB,IAAA,MAAWhL,SAASgL,OAAO,CACvB,IAAKhL,MAAO,CACR,QACZ,CACc,MAAAlW,MAAQkW,MAAM7T,KAChB,UAAOrC,QAAU,YAAa,CACvB,OAAAA,KACnB,CACA,CACA,CACA,SAASqiB,qBAAqBpgB,QAC1B,IAAI9F,KAAO8F,OAAO8f,MAClB,IAAK5lB,KAAM,CACPA,KAAO8F,OAAO8f,MAAQ+C,yBAAyB7iB,OAAOyf,QAC9D,CACW,OAAAvlB,IACX,CACA,SAAS2oB,yBAAyB5D,QACxB9W,MAAAA,SAAUC,IAChB,IAAA,MAAW6L,SAASgL,OAAO,CACvB,IAAA,MAAW7e,OAAOjG,OAAOD,KAAK+Z,OAAOkO,OAAQt0B,IAAKA,EAAE8lB,WAAW,MAAM,CACjExL,KAAI0W,IAAIze,IACpB,CACA,CACW,OAAA7R,MAAM4M,KAAKgN,KACtB,CACA,SAAS2a,4BAA4BrZ,KAAMyN,KAAMvR,MAAOkE,OAC9C,MAAAE,OAAEA,QAAYN,KACpB,MAAMrJ,IAAEA,IAAK,KAAS/D,KAAK0mB,SACrB,MAAAC,OAAS,IAAIz0B,MAAMsb,OACrB,IAAA3b,EAAGwR,KAAMI,OAAOmC,KACpB,IAAI/T,EAAI,EAAGwR,KAAOmK,MAAO3b,EAAIwR,OAAQxR,EAAE,CACnC4R,OAAQ5R,EAAIyX,MACZ1D,KAAOiV,KAAKpX,QACZkjB,OAAO90B,GAAK,CACRlB,EAAG+c,OAAOkZ,MAAMxhB,iBAAiBQ,KAAM7B,KAAMN,QAEzD,CACW,OAAAkjB,MACX,CAEA,MAAME,QAAU5kB,OAAO4kB,SAAW,MAClC,MAAMC,SAAW,CAACzZ,OAAQxb,IAAIA,EAAIwb,OAAOrc,SAAWqc,OAAOxb,GAAGk1B,MAAQ1Z,OAAOxb,GAC7E,MAAMm1B,aAAgB9N,WAAYA,YAAc,IAAM,IAAM,IAC5D,SAAS+N,YAAYC,WAAYC,YAAaC,WAAYloB,GAIhD,MAAAmf,SAAW6I,WAAWH,KAAOI,YAAcD,WACjD,MAAM1iB,QAAU2iB,YACVE,MAAAA,MAAOD,WAAWL,KAAOI,YAAcC,WACvC,MAAAE,IAAMte,sBAAsBxE,QAAS6Z,UACrC,MAAAkJ,IAAMve,sBAAsBqe,MAAM7iB,SACpC,IAAAgjB,IAAMF,KAAOA,IAAMC,KACnB,IAAAE,IAAMF,KAAOD,IAAMC,KAEjBC,IAAA5f,MAAM4f,KAAO,EAAIA,IACjBC,IAAA7f,MAAM6f,KAAO,EAAIA,IACvB,MAAMC,GAAKxoB,EAAIsoB,IACf,MAAMG,GAAKzoB,EAAIuoB,IACR,MAAA,CACHpJ,SAAU,CACNprB,EAAGuR,QAAQvR,EAAIy0B,IAAML,MAAKp0B,EAAIorB,SAASprB,GACvC6R,EAAGN,QAAQM,EAAI4iB,IAAML,MAAKviB,EAAIuZ,SAASvZ,IAE3CuiB,KAAM,CACFp0B,EAAGuR,QAAQvR,EAAI00B,IAAMN,MAAKp0B,EAAIorB,SAASprB,GACvC6R,EAAGN,QAAQM,EAAI6iB,IAAMN,MAAKviB,EAAIuZ,SAASvZ,IAGnD,CAGI,SAAS8iB,eAAeva,OAAQwa,OAAQC,IACxC,MAAMC,UAAY1a,OAAOrc,OACrB,IAAAg3B,OAAQC,MAAOC,KAAMC,iBAAkBC,aACvC,IAAAC,WAAavB,SAASzZ,OAAQ,GAClC,IAAA,IAAQxb,EAAI,EAAGA,EAAIk2B,UAAY,IAAKl2B,EAAE,CACnBu2B,aAAAC,WACFA,WAAAvB,SAASzZ,OAAQxb,EAAI,GAC9B,IAACu2B,eAAiBC,WAAY,CAC9B,QACZ,CACQ,GAAI3hB,aAAamhB,OAAOh2B,GAAI,EAAGg1B,SAAU,CACrCiB,GAAGj2B,GAAKi2B,GAAGj2B,EAAI,GAAK,EACpB,QACZ,CACQm2B,OAASF,GAAGj2B,GAAKg2B,OAAOh2B,GACxBo2B,MAAQH,GAAGj2B,EAAI,GAAKg2B,OAAOh2B,GACRs2B,iBAAAj5B,KAAK2P,IAAImpB,OAAQ,GAAK94B,KAAK2P,IAAIopB,MAAO,GACzD,GAAIE,kBAAoB,EAAG,CACvB,QACZ,CACeD,KAAA,EAAIh5B,KAAKmY,KAAK8gB,kBACrBL,GAAGj2B,GAAKm2B,OAASE,KAAOL,OAAOh2B,GAC/Bi2B,GAAGj2B,EAAI,GAAKo2B,MAAQC,KAAOL,OAAOh2B,EAC1C,CACA,CACA,SAASy2B,gBAAgBjb,OAAQya,GAAI5O,UAAY,KACvC,MAAAqP,UAAYvB,aAAa9N,WAC/B,MAAM6O,UAAY1a,OAAOrc,OACzB,IAAIsjB,MAAOkU,YAAaJ,aACpB,IAAAC,WAAavB,SAASzZ,OAAQ,GAClC,IAAA,IAAQxb,EAAI,EAAGA,EAAIk2B,YAAal2B,EAAE,CAChB22B,YAAAJ,aACCA,aAAAC,WACFA,WAAAvB,SAASzZ,OAAQxb,EAAI,GAClC,IAAKu2B,aAAc,CACf,QACZ,CACc,MAAAK,OAASL,aAAalP,WACtB,MAAAwP,OAASN,aAAaG,WAC5B,GAAIC,YAAa,CACJlU,OAAAmU,OAASD,YAAYtP,YAAc,EAC5CkP,aAAa,MAAMlP,aAAeuP,OAASnU,MAC3C8T,aAAa,MAAMG,aAAeG,OAASpU,MAAQwT,GAAGj2B,EAClE,CACQ,GAAIw2B,WAAY,CACH/T,OAAA+T,WAAWnP,WAAauP,QAAU,EAC3CL,aAAa,MAAMlP,aAAeuP,OAASnU,MAC3C8T,aAAa,MAAMG,aAAeG,OAASpU,MAAQwT,GAAGj2B,EAClE,CACA,CACA,CAMI,SAAS82B,oBAAoBtb,OAAQ6L,UAAY,KAC3C,MAAAqP,UAAYvB,aAAa9N,WAC/B,MAAM6O,UAAY1a,OAAOrc,OACzB,MAAM62B,OAAS31B,MAAM61B,WAAWnK,KAAK,GAC/B,MAAAkK,GAAK51B,MAAM61B,WAEjB,IAAIl2B,EAAG22B,YAAaJ,aAChB,IAAAC,WAAavB,SAASzZ,OAAQ,GAClC,IAAIxb,EAAI,EAAGA,EAAIk2B,YAAal2B,EAAE,CACZ22B,YAAAJ,aACCA,aAAAC,WACFA,WAAAvB,SAASzZ,OAAQxb,EAAI,GAClC,IAAKu2B,aAAc,CACf,QACZ,CACQ,GAAIC,WAAY,CACZ,MAAMO,WAAaP,WAAWnP,WAAakP,aAAalP,WAEjD2O,OAAAh2B,GAAK+2B,aAAe,GAAKP,WAAWE,WAAaH,aAAaG,YAAcK,WAAa,CAC5G,CACQd,GAAGj2B,IAAM22B,YAAcX,OAAOh2B,IAAMw2B,WAAaR,OAAOh2B,EAAI,GAAK4U,KAAKohB,OAAOh2B,EAAI,MAAQ4U,KAAKohB,OAAOh2B,IAAM,GAAKg2B,OAAOh2B,EAAI,GAAKg2B,OAAOh2B,IAAM,CACrJ,CACmB+1B,eAAAva,OAAQwa,OAAQC,IACfQ,gBAAAjb,OAAQya,GAAI5O,UAChC,CACA,SAAS2P,gBAAgBC,GAAI15B,IAAKD,KAC9B,OAAOD,KAAKC,IAAID,KAAKE,IAAI05B,GAAI35B,KAAMC,IACvC,CACA,SAAS25B,gBAAgB1b,OAAQ2Q,MACzB,IAAAnsB,EAAGwR,KAAMiL,MAAO0a,OAAQC,WAC5B,IAAIC,WAAanL,eAAe1Q,OAAO,GAAI2Q,MACvC,IAAAnsB,EAAI,EAAGwR,KAAOgK,OAAOrc,OAAQa,EAAIwR,OAAQxR,EAAE,CAC9Bo3B,WAAAD,OACJA,OAAAE,WACIA,WAAAr3B,EAAIwR,KAAO,GAAK0a,eAAe1Q,OAAOxb,EAAI,GAAImsB,MAC3D,IAAKgL,OAAQ,CACT,QACZ,CACQ1a,MAAQjB,OAAOxb,GACf,GAAIo3B,WAAY,CACZ3a,MAAMoQ,KAAOmK,gBAAgBva,MAAMoQ,KAAMV,KAAKjR,KAAMiR,KAAKhR,OACzDsB,MAAMsQ,KAAOiK,gBAAgBva,MAAMsQ,KAAMZ,KAAKhL,IAAKgL,KAAK/K,OACpE,CACQ,GAAIiW,WAAY,CACZ5a,MAAMqQ,KAAOkK,gBAAgBva,MAAMqQ,KAAMX,KAAKjR,KAAMiR,KAAKhR,OACzDsB,MAAMuQ,KAAOgK,gBAAgBva,MAAMuQ,KAAMb,KAAKhL,IAAKgL,KAAK/K,OACpE,CACA,CACA,CAGI,SAASkW,2BAA2B9b,OAAQnJ,QAAS8Z,KAAMjM,KAAMmH,WAC7D,IAAArnB,EAAGwR,KAAMiL,MAAO8a,cAEpB,GAAIllB,QAAQ2J,SAAU,CAClBR,OAASA,OAAOyY,OAAQgD,KAAMA,GAAG/B,KACzC,CACQ,GAAA7iB,QAAQmlB,yBAA2B,WAAY,CAC/CV,oBAAoBtb,OAAQ6L,UACpC,KAAW,CACC,IAAAoQ,KAAOvX,KAAO1E,OAAOA,OAAOrc,OAAS,GAAKqc,OAAO,GACjD,IAAAxb,EAAI,EAAGwR,KAAOgK,OAAOrc,OAAQa,EAAIwR,OAAQxR,EAAE,CAC3Cyc,MAAQjB,OAAOxb,GACfu3B,cAAgBnC,YAAYqC,KAAMhb,MAAOjB,OAAOne,KAAKE,IAAIyC,EAAI,EAAGwR,MAAQ0O,KAAO,EAAI,IAAM1O,MAAOa,QAAQqlB,SAClGjb,MAAAoQ,KAAO0K,cAAc/K,SAASprB,EAC9Bqb,MAAAsQ,KAAOwK,cAAc/K,SAASvZ,EAC9BwJ,MAAAqQ,KAAOyK,cAAc/B,KAAKp0B,EAC1Bqb,MAAAuQ,KAAOuK,cAAc/B,KAAKviB,EACzBwkB,KAAAhb,KACnB,CACA,CACI,GAAIpK,QAAQ6kB,gBAAiB,CACzBA,gBAAgB1b,OAAQ2Q,KAChC,CACA,CAII,SAASwL,kBACT,cAAcvd,SAAW,oBAAsBwd,WAAa,WAChE,CAGI,SAASC,eAAeC,SACxB,IAAI1D,OAAS0D,QAAQC,WACrB,GAAI3D,QAAUA,OAAOrkB,aAAe,sBAAuB,CACvDqkB,OAASA,OAAO4D,IACxB,CACW,OAAA5D,MACX,CAII,SAAS6D,cAAcC,WAAYrS,KAAMsS,gBACrC,IAAAC,cACA,UAAOF,aAAe,SAAU,CAChBE,cAAA7rB,SAAS2rB,WAAY,IACrC,GAAIA,WAAW/lB,QAAQ,QAAa,EAAA,CAEhCimB,cAAgBA,cAAgB,IAAMvS,KAAKkS,WAAWI,eAClE,CACA,KAAW,CACaC,cAAAF,UACxB,CACW,OAAAE,aACX,CACA,MAAMC,iBAAoBC,SAAUA,QAAQC,cAAcC,YAAYH,iBAAiBC,QAAS,MAChG,SAASG,SAASC,GAAItiB,UAClB,OAAOiiB,iBAAiBK,IAAIC,iBAAiBviB,SACjD,CACA,MAAMwiB,UAAY,CACd,MACA,QACA,SACA,QAEJ,SAASC,mBAAmBC,OAAQhS,MAAOiS,QACvC,MAAMxjB,OAAS,CAAE,EACRwjB,OAAAA,OAAS,IAAMA,OAAS,GACjC,IAAA,IAAQ/4B,EAAI,EAAGA,EAAI,EAAGA,IAAI,CAChB,MAAAg5B,IAAMJ,UAAU54B,GACfuV,OAAAyjB,KAAOpoB,WAAWkoB,OAAOhS,MAAQ,IAAMkS,IAAMD,UAAY,CACxE,CACWxjB,OAAAgP,MAAQhP,OAAO2F,KAAO3F,OAAO4F,MAC7B5F,OAAAkV,OAASlV,OAAO4L,IAAM5L,OAAO6L,OAC7B,OAAA7L,MACX,CACA,MAAM0jB,aAAe,CAAC73B,EAAG6R,EAAGnB,UAAU1Q,EAAI,GAAK6R,EAAI,MAAQnB,SAAWA,OAAOonB,YAKzE,SAASC,kBAAkB56B,EAAG8rB,QAC9B,MAAM+O,QAAU76B,EAAE66B,QAClB,MAAMvnB,OAASunB,SAAWA,QAAQj6B,OAASi6B,QAAQ,GAAK76B,EAClD,MAAA86B,QAAEA,QAAUC,QAAAA,SAAaznB,OAC/B,IAAI0nB,IAAM,MACV,IAAIn4B,EAAG6R,EACP,GAAIgmB,aAAaI,QAASC,QAAS/6B,EAAEuT,QAAS,CACtC1Q,EAAAi4B,QACApmB,EAAAqmB,OACZ,KAAW,CACG,MAAAxN,KAAOzB,OAAOmP,wBAChBp4B,EAAAyQ,OAAO4nB,QAAU3N,KAAK5Q,KACtBjI,EAAApB,OAAO6nB,QAAU5N,KAAK3K,IACpBoY,IAAA,IACd,CACW,MAAA,CACHn4B,IACA6R,IACAsmB,QAER,CAMI,SAASI,oBAAoBC,OAAOrX,OACpC,GAAI,WAAYqX,OAAO,CACZA,OAAAA,MACf,CACU,MAAAvP,OAAEA,OAASH,wBAAAA,yBAA6B3H,MACxC,MAAAuE,MAAQuR,iBAAiBhO,QACzB,MAAAwP,UAAY/S,MAAMgT,YAAc,aAChC,MAAAC,SAAWlB,mBAAmB/R,MAAO,WAC3C,MAAMkT,QAAUnB,mBAAmB/R,MAAO,SAAU,SACpD,MAAM1lB,EAAEA,EAAI6R,EAAAA,EAAAsmB,IAAIA,KAASJ,kBAAkBS,OAAOvP,QAClD,MAAMO,QAAUmP,SAAS7e,MAAQqe,KAAOS,QAAQ9e,MAChD,MAAM2P,QAAUkP,SAAS5Y,KAAOoY,KAAOS,QAAQ7Y,KAC3C,IAAAoD,MAAEA,MAAQkG,OAAAA,QAAYlI,MAC1B,GAAIsX,UAAW,CACFtV,OAAAwV,SAASxV,MAAQyV,QAAQzV,MACxBkG,QAAAsP,SAAStP,OAASuP,QAAQvP,MAC5C,CACW,MAAA,CACHrpB,EAAG/D,KAAKL,OAAOoE,EAAIwpB,SAAWrG,MAAQ8F,OAAO9F,MAAQ2F,yBACrDjX,EAAG5V,KAAKL,OAAOiW,EAAI4X,SAAWJ,OAASJ,OAAOI,OAASP,yBAE/D,CACA,SAAS+P,iBAAiB5P,OAAQ9F,MAAOkG,QACrC,IAAImE,SAAUsL,UACV,GAAA3V,aAAuB,GAAAkG,cAAsB,EAAA,CACvC,MAAA0P,UAAY9P,QAAUwN,eAAexN,QAC3C,IAAK8P,UAAW,CACZ5V,MAAQ8F,OAAO+P,YACf3P,OAASJ,OAAOgQ,YAC5B,KAAe,CACG,MAAAvO,KAAOqO,UAAUX,wBACjB,MAAAc,eAAiBjC,iBAAiB8B,WACxC,MAAMI,gBAAkB1B,mBAAmByB,eAAgB,SAAU,SAC/D,MAAAE,iBAAmB3B,mBAAmByB,eAAgB,WAC5D/V,MAAQuH,KAAKvH,MAAQiW,iBAAiBjW,MAAQgW,gBAAgBhW,MAC9DkG,OAASqB,KAAKrB,OAAS+P,iBAAiB/P,OAAS8P,gBAAgB9P,OACjEmE,SAAWqJ,cAAcqC,eAAe1L,SAAUuL,UAAW,eAC7DD,UAAYjC,cAAcqC,eAAeJ,UAAWC,UAAW,eAC3E,CACA,CACW,MAAA,CACH5V,YACAkG,cACAmE,SAAUA,UAAYva,SACtB6lB,UAAWA,WAAa7lB,SAEhC,CACA,MAAMomB,OAAUx9B,GAAII,KAAKL,MAAMC,EAAI,IAAM,GAEzC,SAASy9B,eAAerQ,OAAQsQ,QAASC,SAAUC,aACzC,MAAA/T,MAAQuR,iBAAiBhO,QACzB,MAAAyQ,QAAUjC,mBAAmB/R,MAAO,UAC1C,MAAM8H,SAAWqJ,cAAcnR,MAAM8H,SAAUvE,OAAQ,gBAAkBhW,SACzE,MAAM6lB,UAAYjC,cAAcnR,MAAMoT,UAAW7P,OAAQ,iBAAmBhW,SAC5E,MAAM0mB,cAAgBd,iBAAiB5P,OAAQsQ,QAASC,UACpD,IAAArW,MAAEA,MAAQkG,OAAAA,QAAYsQ,cACtB,GAAAjU,MAAMgT,YAAc,cAAe,CACnC,MAAME,QAAUnB,mBAAmB/R,MAAO,SAAU,SAC9C,MAAAiT,SAAWlB,mBAAmB/R,MAAO,WAClCvC,OAAAwV,SAASxV,MAAQyV,QAAQzV,MACxBkG,QAAAsP,SAAStP,OAASuP,QAAQvP,MAC5C,CACIlG,MAAQlnB,KAAKC,IAAI,EAAGinB,MAAQuW,QAAQvW,OAC3BkG,OAAAptB,KAAKC,IAAI,EAAGu9B,YAActW,MAAQsW,YAAcpQ,OAASqQ,QAAQrQ,QAC1ElG,MAAQkW,OAAOp9B,KAAKE,IAAIgnB,MAAOqK,SAAUmM,cAAcnM,WACvDnE,OAASgQ,OAAOp9B,KAAKE,IAAIktB,OAAQyP,UAAWa,cAAcb,YACtD,GAAA3V,QAAUkG,OAAQ,CAGTA,OAAAgQ,OAAOlW,MAAQ,EAChC,CACU,MAAAyW,eAAiBL,eAAY,GAAaC,gBAAa,EAC7D,GAAII,gBAAkBH,aAAeE,cAActQ,QAAUA,OAASsQ,cAActQ,OAAQ,CACxFA,OAASsQ,cAActQ,OACvBlG,MAAQkW,OAAOp9B,KAAK8X,MAAMsV,OAASoQ,aAC3C,CACW,MAAA,CACHtW,YACAkG,cAER,CAMI,SAASwQ,YAAY1Y,MAAO2Y,WAAYC,YACxC,MAAMC,WAAaF,YAAc,EACjC,MAAMG,aAAeh+B,KAAK8X,MAAMoN,MAAMkI,OAAS2Q,YAC/C,MAAME,YAAcj+B,KAAK8X,MAAMoN,MAAMgC,MAAQ6W,YAC7C7Y,MAAMkI,OAASptB,KAAK8X,MAAMoN,MAAMkI,QAChClI,MAAMgC,MAAQlnB,KAAK8X,MAAMoN,MAAMgC,OAC/B,MAAM8F,OAAS9H,MAAM8H,OAIjB,GAAAA,OAAOvD,QAAUqU,aAAe9Q,OAAOvD,MAAM2D,SAAWJ,OAAOvD,MAAMvC,OAAQ,CAC7E8F,OAAOvD,MAAM2D,OAAS,GAAGlI,MAAMkI,WAC/BJ,OAAOvD,MAAMvC,MAAQ,GAAGhC,MAAMgC,SACtC,CACQ,GAAAhC,MAAM2H,0BAA4BkR,YAAc/Q,OAAOI,SAAW4Q,cAAgBhR,OAAO9F,QAAU+W,YAAa,CAChH/Y,MAAM2H,wBAA0BkR,WAChC/Q,OAAOI,OAAS4Q,aAChBhR,OAAO9F,MAAQ+W,YACf/Y,MAAM2E,IAAIqU,aAAaH,WAAY,EAAG,EAAGA,WAAY,EAAG,GACjD,OAAA,IACf,CACW,OAAA,KACX,CAKI,MAAMI,6BAA+B,WACrC,IAAIC,iBAAmB,MACnB,IACA,MAAMppB,QAAU,CACZ,WAAIqpB,GACmBD,iBAAA,KACZ,OAAA,KACvB,GAEQ,GAAI9D,kBAAmB,CACZvd,OAAAuhB,iBAAiB,OAAQ,KAAMtpB,SAC/B+H,OAAAwhB,oBAAoB,OAAQ,KAAMvpB,QACrD,CACK,OAAQ9T,GAEb,CACW,OAAAk9B,gBACX,CAjByC,GA0BrC,SAASI,aAAavD,QAASliB,UACzB,MAAAvG,MAAQ4oB,SAASH,QAASliB,UAChC,MAAMkZ,QAAUzf,OAASA,MAAM0f,MAAM,qBACrC,OAAOD,SAAWA,QAAQ,QAAK,CACnC,CAII,SAASwM,aAAa/6B,GAAIC,GAAIqM,EAAGka,MAC1B,MAAA,CACHnmB,EAAGL,GAAGK,EAAIiM,GAAKrM,GAAGI,EAAIL,GAAGK,GACzB6R,EAAGlS,GAAGkS,EAAI5F,GAAKrM,GAAGiS,EAAIlS,GAAGkS,GAEjC,CAGI,SAAS8oB,sBAAsBh7B,GAAIC,GAAIqM,EAAGka,MACnC,MAAA,CACHnmB,EAAGL,GAAGK,EAAIiM,GAAKrM,GAAGI,EAAIL,GAAGK,GACzB6R,EAAGsU,OAAS,SAAWla,EAAI,GAAMtM,GAAGkS,EAAIjS,GAAGiS,EAAIsU,OAAS,QAAUla,EAAI,EAAItM,GAAGkS,EAAIjS,GAAGiS,EAAI5F,EAAI,EAAIrM,GAAGiS,EAAIlS,GAAGkS,EAElH,CAGI,SAAS+oB,qBAAqBj7B,GAAIC,GAAIqM,EAAGka,MACzC,MAAM0U,IAAM,CACR76B,EAAGL,GAAG+rB,KACN7Z,EAAGlS,GAAGisB,MAEV,MAAMkP,IAAM,CACR96B,EAAGJ,GAAG6rB,KACN5Z,EAAGjS,GAAG+rB,MAEV,MAAM5uB,EAAI29B,aAAa/6B,GAAIk7B,IAAK5uB,GAChC,MAAMjP,EAAI09B,aAAaG,IAAKC,IAAK7uB,GACjC,MAAMhP,EAAIy9B,aAAaI,IAAKl7B,GAAIqM,GAChC,MAAM/O,EAAIw9B,aAAa39B,EAAGC,EAAGiP,GAC7B,MAAM9O,EAAIu9B,aAAa19B,EAAGC,EAAGgP,GACtB,OAAAyuB,aAAax9B,EAAGC,EAAG8O,EAC9B,CAEA,MAAM8uB,sBAAwB,SAASC,MAAO7X,OACnC,MAAA,CACH,CAAAnjB,CAAGA,GACQ,OAAAg7B,MAAQA,MAAQ7X,MAAQnjB,CAClC,EACD,QAAAi7B,CAAUv8B,GACEykB,MAAAzkB,CACX,EACD,SAAAutB,CAAWtS,OACP,GAAIA,QAAU,SAAU,CACb,OAAAA,KACvB,CACmB,OAAAA,QAAU,QAAU,OAAS,OACvC,EACD,KAAAuhB,CAAOl7B,EAAGyO,OACN,OAAOzO,EAAIyO,KACd,EACD,UAAA0sB,CAAYn7B,EAAGo7B,WACX,OAAOp7B,EAAIo7B,SACvB,EAEA,EACA,MAAMC,sBAAwB,WACnB,MAAA,CACH,CAAAr7B,CAAGA,GACQ,OAAAA,CACV,EACD,QAAAi7B,CAAUv8B,GAAK,EACf,SAAAutB,CAAWtS,OACA,OAAAA,KACV,EACD,KAAAuhB,CAAOl7B,EAAGyO,OACN,OAAOzO,EAAIyO,KACd,EACD,UAAA0sB,CAAYn7B,EAAGs7B,YACJ,OAAAt7B,CACnB,EAEA,EACA,SAASu7B,cAAcvhB,IAAKghB,MAAO7X,OAC/B,OAAOnJ,IAAM+gB,sBAAsBC,MAAO7X,OAASkY,uBACvD,CACA,SAASG,sBAAsB1V,IAAK2V,WAChC,IAAI/V,MAAOgW,SACP,GAAAD,YAAc,OAASA,YAAc,MAAO,CAC5C/V,MAAQI,IAAImD,OAAOvD,MACRgW,SAAA,CACPhW,MAAM6R,iBAAiB,aACvB7R,MAAMiW,oBAAoB,cAExBjW,MAAAkW,YAAY,YAAaH,UAAW,aAC1C3V,IAAI+V,kBAAoBH,QAChC,CACA,CACA,SAASI,qBAAqBhW,IAAK4V,UAC/B,GAAIA,gBAAwB,EAAA,QACjB5V,IAAI+V,kBACP/V,IAAAmD,OAAOvD,MAAMkW,YAAY,YAAaF,SAAS,GAAIA,SAAS,GACxE,CACA,CAEA,SAASK,WAAW/mB,UAChB,GAAIA,WAAa,QAAS,CACf,MAAA,CACHgnB,QAAS5lB,cACT6lB,QAAS/lB,WACTgmB,UAAW/lB,gBAEvB,CACW,MAAA,CACH6lB,QAASllB,WACTmlB,QAAS,CAACl/B,EAAGC,IAAID,EAAIC,EACrBk/B,UAAYl8B,GAAIA,EAExB,CACA,SAASm8B,kBAAiB9lB,MAAEA,MAAAC,IAAQA,UAAMiE,MAAQuE,KAAAA,KAAA4G,MAAOA,QAC9C,MAAA,CACHrP,MAAOA,MAAQkE,MACfjE,IAAKA,IAAMiE,MACXuE,KAAMA,OAASxI,IAAMD,MAAQ,GAAKkE,QAAU,EAC5CmL,YAER,CACA,SAAS0W,WAAWC,QAASjiB,OAAQiI,QACjC,MAAMrN,SAAEA,SAAWqB,MAAOimB,WAAahmB,IAAKimB,UAAcla,OAC1D,MAAM2Z,QAAEA,QAAAE,UAAUA,WAAeH,WAAW/mB,UAC5C,MAAMuF,MAAQH,OAAOrc,OACrB,IAAIsY,MAAEA,MAAAC,IAAQA,IAAMwI,KAAAA,MAAUud,QAC9B,IAAIz9B,EAAGwR,KACP,GAAI0O,KAAM,CACGzI,OAAAkE,MACFjE,KAAAiE,MACP,IAAI3b,EAAI,EAAGwR,KAAOmK,MAAO3b,EAAIwR,OAAQxR,EAAE,CACnC,IAAKo9B,QAAQE,UAAU9hB,OAAO/D,MAAQkE,OAAOvF,WAAYsnB,WAAYC,UAAW,CAC5E,KAChB,CACYlmB,QACAC,KACZ,CACiBD,OAAAkE,MACFjE,KAAAiE,KACf,CACI,GAAIjE,IAAMD,MAAO,CACNC,KAAAiE,KACf,CACW,MAAA,CACHlE,YACAC,QACAwI,UACA4G,MAAO2W,QAAQ3W,MAEvB,CACC,SAAS8W,cAAcH,QAASjiB,OAAQiI,QACrC,IAAKA,OAAQ,CACF,MAAA,CACHga,QAEZ,CACI,MAAMrnB,SAAEA,SAAWqB,MAAOimB,WAAahmB,IAAKimB,UAAcla,OAC1D,MAAM9H,MAAQH,OAAOrc,OACrB,MAAMk+B,QAAEA,QAAUD,QAAAA,QAAAE,UAAUA,WAAeH,WAAW/mB,UAChD,MAAAqB,MAAEA,UAAQC,IAAMwI,KAAAA,KAAA4G,MAAOA,OAAW0W,WAAWC,QAASjiB,OAAQiI,QACpE,MAAMlO,OAAS,GACf,IAAIsoB,OAAS,MACb,IAAIC,SAAW,KACf,IAAIjuB,MAAO4M,MAAOshB,UACZ,MAAAC,cAAgB,IAAIZ,QAAQM,WAAYK,UAAWluB,QAAUwtB,QAAQK,WAAYK,aAAe,EAChG,MAAAE,YAAc,IAAIZ,QAAQM,SAAU9tB,SAAW,GAAKutB,QAAQO,SAAUI,UAAWluB,OACjF,MAAAquB,YAAc,IAAIL,QAAUG,gBAClC,MAAMG,WAAa,KAAKN,QAAUI,cAClC,IAAA,IAAQj+B,EAAIyX,MAAOggB,KAAOhgB,MAAOzX,GAAK0X,MAAO1X,EAAE,CACnCyc,MAAAjB,OAAOxb,EAAI2b,OACnB,GAAIc,MAAMyY,KAAM,CACZ,QACZ,CACgBrlB,MAAAytB,UAAU7gB,MAAMrG,WACxB,GAAIvG,QAAUkuB,UAAW,CACrB,QACZ,CACiBF,OAAAT,QAAQvtB,MAAO6tB,WAAYC,UAChC,GAAAG,WAAa,MAAQI,cAAe,CACpCJ,SAAWT,QAAQxtB,MAAO6tB,cAAgB,EAAI19B,EAAIy3B,IAC9D,CACY,GAAAqG,WAAa,MAAQK,aAAc,CACnC5oB,OAAOlC,KAAKkqB,iBAAiB,CACzB9lB,MAAOqmB,SACPpmB,IAAK1X,EACLkgB,UACAvE,YACAmL,eAEOgX,SAAA,IACvB,CACerG,KAAAz3B,EACK+9B,UAAAluB,KACpB,CACI,GAAIiuB,WAAa,KAAM,CACnBvoB,OAAOlC,KAAKkqB,iBAAiB,CACzB9lB,MAAOqmB,SACPpmB,QACAwI,UACAvE,YACAmL,cAEZ,CACW,OAAAvR,MACX,CACC,SAAS6oB,eAAe5Q,KAAM/J,QAC3B,MAAMlO,OAAS,GACf,MAAM8oB,SAAW7Q,KAAK6Q,SACtB,IAAA,IAAQr+B,EAAI,EAAGA,EAAIq+B,SAASl/B,OAAQa,IAAI,CACpC,MAAMs+B,IAAMV,cAAcS,SAASr+B,GAAIwtB,KAAKhS,OAAQiI,QACpD,GAAI6a,IAAIn/B,OAAQ,CACLoW,OAAAlC,QAAQirB,IAC3B,CACA,CACW,OAAA/oB,MACX,CACC,SAASgpB,gBAAgB/iB,OAAQG,MAAOuE,KAAMlE,UAC3C,IAAIvE,MAAQ,EACZ,IAAIC,IAAMiE,MAAQ,EACd,GAAAuE,OAASlE,SAAU,CACnB,MAAMvE,MAAQkE,QAAUH,OAAO/D,OAAOyd,KAAK,CACvCzd,OACZ,CACA,CACI,MAAMA,MAAQkE,OAASH,OAAO/D,OAAOyd,KAAK,CACtCzd,OACR,CACaA,OAAAkE,MACT,GAAIuE,KAAM,CACCxI,KAAAD,KACf,CACI,MAAMC,IAAMD,OAAS+D,OAAO9D,IAAMiE,OAAOuZ,KAAK,CAC1Cxd,KACR,CACWA,KAAAiE,MACA,MAAA,CACHlE,YACAC,QAER,CACC,SAAS8mB,cAAchjB,OAAQ/D,MAAOna,IAAK4iB,MACxC,MAAMvE,MAAQH,OAAOrc,OACrB,MAAMoW,OAAS,GACf,IAAImD,KAAOjB,MACP,IAAAggB,KAAOjc,OAAO/D,OACd,IAAAC,IACJ,IAAIA,IAAMD,MAAQ,EAAGC,KAAOpa,MAAOoa,IAAI,CAC7B,MAAA+mB,IAAMjjB,OAAO9D,IAAMiE,OACrB,GAAA8iB,IAAIvJ,MAAQuJ,IAAIC,KAAM,CAClB,IAACjH,KAAKvC,KAAM,CACLhV,KAAA,MACP3K,OAAOlC,KAAK,CACRoE,MAAOA,MAAQkE,MACfjE,KAAMA,IAAM,GAAKiE,MACjBuE,YAEIzI,MAAAiB,KAAO+lB,IAAIC,KAAOhnB,IAAM,IAChD,CACA,KAAe,CACIgB,KAAAhB,IACP,GAAI+f,KAAKvC,KAAM,CACHzd,MAAAC,GACxB,CACA,CACe+f,KAAAgH,GACf,CACI,GAAI/lB,OAAS,KAAM,CACfnD,OAAOlC,KAAK,CACRoE,MAAOA,MAAQkE,MACfjE,IAAKgB,KAAOiD,MACZuE,WAEZ,CACW,OAAA3K,MACX,CACC,SAASopB,iBAAiBnR,KAAMoR,gBAC7B,MAAMpjB,OAASgS,KAAKhS,OACd,MAAAQ,SAAWwR,KAAKnb,QAAQ2J,SAC9B,MAAML,MAAQH,OAAOrc,OACrB,IAAKwc,MAAO,CACR,MAAO,EACf,CACU,MAAAuE,OAASsN,KAAKqR,MACd,MAAApnB,MAAEA,UAAQC,KAAS6mB,gBAAgB/iB,OAAQG,MAAOuE,KAAMlE,UAC9D,GAAIA,WAAa,KAAM,CACnB,OAAO8iB,cAActR,KAAM,CACvB,CACI/V,YACAC,QACAwI,YAEL1E,OAAQojB,eACnB,CACI,MAAMthC,IAAMoa,IAAMD,MAAQC,IAAMiE,MAAQjE,IAClC,MAAAqnB,eAAiBvR,KAAKwR,WAAavnB,QAAU,GAAKC,MAAQiE,MAAQ,EACjE,OAAAmjB,cAActR,KAAMgR,cAAchjB,OAAQ/D,MAAOna,IAAKyhC,cAAevjB,OAAQojB,eACxF,CACC,SAASE,cAActR,KAAM6Q,SAAU7iB,OAAQojB,gBAC5C,IAAKA,iBAAmBA,eAAe9L,aAAetX,OAAQ,CACnD,OAAA6iB,QACf,CACI,OAAOY,gBAAgBzR,KAAM6Q,SAAU7iB,OAAQojB,eACnD,CACC,SAASK,gBAAgBzR,KAAM6Q,SAAU7iB,OAAQojB,gBACxC,MAAAM,aAAe1R,KAAK2R,OAAO7U,aAC3B,MAAA8U,UAAYC,UAAU7R,KAAKnb,SACjC,MAAQitB,cAAe3tB,aAAeU,SAAS2J,SAAEA,WAAiBwR,KAClE,MAAM7R,MAAQH,OAAOrc,OACrB,MAAMoW,OAAS,GACf,IAAIgqB,UAAYH,UACZ,IAAA3nB,MAAQ4mB,SAAS,GAAG5mB,MACxB,IAAIzX,EAAIyX,MACR,SAAS+nB,SAAS//B,EAAGlB,EAAGpB,EAAGsiC,IACjB,MAAAC,IAAM1jB,UAAgB,EAAA,EAC5B,GAAIvc,IAAMlB,EAAG,CACT,MACZ,CACakB,GAAAkc,MACL,MAAMH,OAAO/b,EAAIkc,OAAOuZ,KAAK,CACpBz1B,GAAAigC,GACjB,CACQ,MAAMlkB,OAAOjd,EAAIod,OAAOuZ,KAAK,CACpB32B,GAAAmhC,GACjB,CACY,GAAAjgC,EAAIkc,QAAUpd,EAAIod,MAAO,CACzBpG,OAAOlC,KAAK,CACRoE,MAAOhY,EAAIkc,MACXjE,IAAKnZ,EAAIod,MACTuE,KAAM/iB,EACN2pB,MAAO2Y,KAECF,UAAAE,GACZhoB,MAAQlZ,EAAIod,KACxB,CACA,CACI,IAAA,MAAW8hB,WAAWY,SAAS,CACnB5mB,MAAAuE,SAAWvE,MAAQgmB,QAAQhmB,MAC/B,IAAAggB,KAAOjc,OAAO/D,MAAQkE,OACtB,IAAAmL,MACJ,IAAI9mB,EAAIyX,MAAQ,EAAGzX,GAAKy9B,QAAQ/lB,IAAK1X,IAAI,CAC/B,MAAAi3B,GAAKzb,OAAOxb,EAAI2b,OACtBmL,MAAQuY,UAAUT,eAAe9L,WAAWlC,cAAcsO,aAAc,CACpEhxB,KAAM,UACNyxB,GAAIlI,KACJ12B,GAAIk2B,GACJ2I,aAAc5/B,EAAI,GAAK2b,MACvBkkB,YAAa7/B,EAAI2b,MACjBhK,8BAEA,GAAAmuB,aAAahZ,MAAOyY,WAAY,CAChCC,SAAS/nB,MAAOzX,EAAI,EAAGy9B,QAAQvd,KAAMqf,UACrD,CACmB9H,KAAAR,GACKsI,UAAAzY,KACxB,CACY,GAAArP,MAAQzX,EAAI,EAAG,CACfw/B,SAAS/nB,MAAOzX,EAAI,EAAGy9B,QAAQvd,KAAMqf,UACjD,CACA,CACW,OAAAhqB,MACX,CACA,SAAS8pB,UAAUhtB,SACR,MAAA,CACH8T,gBAAiB9T,QAAQ8T,gBACzB4Z,eAAgB1tB,QAAQ0tB,eACxBC,WAAY3tB,QAAQ2tB,WACpBC,iBAAkB5tB,QAAQ4tB,iBAC1BC,gBAAiB7tB,QAAQ6tB,gBACzBlU,YAAa3Z,QAAQ2Z,YACrB5F,YAAa/T,QAAQ+T,YAE7B,CACA,SAAS0Z,aAAahZ,MAAOyY,WACzB,IAAKA,UAAW,CACL,OAAA,KACf,CACI,MAAM/V,MAAQ,GACR,MAAA2W,SAAW,SAASjuB,IAAKrC,OACvB,IAAC6P,oBAAoB7P,OAAQ,CACtB,OAAAA,KACnB,CACQ,IAAK2Z,MAAMrG,SAAStT,OAAQ,CACxB2Z,MAAMnW,KAAKxD,MACvB,CACe,OAAA2Z,MAAMrX,QAAQtC,MACxB,EACM,OAAA6R,KAAKC,UAAUmF,MAAOqZ,YAAcze,KAAKC,UAAU4d,UAAWY,SACzE,CAEA,SAASC,eAAepY,MAAOqY,UAAWC,OACtC,OAAOtY,MAAM3V,QAAQqR,KAAOsE,MAAMsY,OAASD,UAAUC,MACzD,CACA,SAASC,eAAehlB,KAAM8kB,WACpB,MAAAzjB,OAAEA,OAASC,OAAAA,QAAYtB,KAC7B,GAAIqB,QAAUC,OAAQ,CACX,MAAA,CACH3B,KAAMklB,eAAexjB,OAAQyjB,UAAW,QACxCllB,MAAOilB,eAAexjB,OAAQyjB,UAAW,SACzClf,IAAKif,eAAevjB,OAAQwjB,UAAW,OACvCjf,OAAQgf,eAAevjB,OAAQwjB,UAAW,UAEtD,CACW,OAAAA,SACX,CACA,SAASG,mBAAmBje,MAAOhH,MAC/B,MAAMmI,KAAOnI,KAAKklB,MAClB,GAAI/c,KAAKgd,SAAU,CACR,OAAA,KACf,CACI,MAAMvU,KAAOoU,eAAehlB,KAAMgH,MAAM8d,WACjC,MAAA,CACHnlB,KAAMwI,KAAKxI,OAAS,MAAQ,EAAIiR,KAAKjR,MAAQwI,KAAKxI,OAAS,KAAO,EAAIwI,KAAKxI,MAC3EC,MAAOuI,KAAKvI,QAAU,MAAQoH,MAAMgC,MAAQ4H,KAAKhR,OAASuI,KAAKvI,QAAU,KAAO,EAAIuI,KAAKvI,OACzFgG,IAAKuC,KAAKvC,MAAQ,MAAQ,EAAIgL,KAAKhL,KAAOuC,KAAKvC,MAAQ,KAAO,EAAIuC,KAAKvC,KACvEC,OAAQsC,KAAKtC,SAAW,MAAQmB,MAAMkI,OAAS0B,KAAK/K,QAAUsC,KAAKtC,SAAW,KAAO,EAAIsC,KAAKtC,QAEtG;;;;;;GCvtFA,MAAMuf,SACF,WAAA1yB,GACIE,KAAKyyB,SAAW,KACXzyB,KAAA0yB,YAAcvf,IACnBnT,KAAK2yB,SAAW,MAChB3yB,KAAK4yB,eAAY,CACzB,CACC,OAAAC,CAAQze,MAAO0e,MAAOC,KAAMhzB,MACf,MAAAizB,UAAYF,MAAM9nB,UAAUjL,MAClC,MAAMkzB,SAAWH,MAAMjhB,SACbmhB,UAAA5nB,QAASxI,IAAKA,GAAG,CACnBwR,YACA8e,QAASJ,MAAMI,QACfD,kBACAE,YAAajkC,KAAKE,IAAI2jC,KAAOD,MAAMxpB,MAAO2pB,YAE1D,CACC,QAAAG,GACO,GAAIpzB,KAAKyyB,SAAU,CACf,MACZ,CACQzyB,KAAK2yB,SAAW,KAChB3yB,KAAKyyB,SAAWzmB,iBAAiBnK,KAAKoK,OAAQ,KAC1CjM,KAAKqzB,UACLrzB,KAAKyyB,SAAW,KAChB,GAAIzyB,KAAK2yB,SAAU,CACf3yB,KAAKozB,UACrB,GAEA,CACC,OAAAC,CAAQN,KAAOO,KAAKC,OACb,IAAIC,UAAY,EAChBxzB,KAAK0yB,QAAQtnB,QAAQ,CAAC0nB,MAAO1e,SACzB,IAAK0e,MAAMW,UAAYX,MAAMjnB,MAAM7a,OAAQ,CACvC,MAChB,CACY,MAAM6a,MAAQinB,MAAMjnB,MAChB,IAAAha,EAAIga,MAAM7a,OAAS,EACvB,IAAI0iC,MAAO,MACP,IAAA9tB,KACE,KAAA/T,GAAK,IAAKA,EAAE,CACd+T,KAAOiG,MAAMha,GACb,GAAI+T,KAAK+tB,QAAS,CACV,GAAA/tB,KAAKguB,OAASd,MAAMjhB,SAAU,CAC9BihB,MAAMjhB,SAAWjM,KAAKguB,MAC9C,CACoBhuB,KAAKiuB,KAAKd,MACVW,MAAO,IAC3B,KAAuB,CACH7nB,MAAMha,GAAKga,MAAMA,MAAM7a,OAAS,GAChC6a,MAAMtE,KAC1B,CACA,CACY,GAAImsB,MAAM,CACNtf,MAAMsf,OACN1zB,KAAK6yB,QAAQze,MAAO0e,MAAOC,KAAM,WACjD,CACgB,IAAClnB,MAAM7a,OAAQ,CACf8hC,MAAMW,QAAU,MAChBzzB,KAAK6yB,QAAQze,MAAO0e,MAAOC,KAAM,YACjCD,MAAMI,QAAU,KAChC,CACYM,WAAa3nB,MAAM7a,SAEvBgP,KAAK4yB,UAAYG,KACjB,GAAIS,YAAc,EAAG,CACjBxzB,KAAK2yB,SAAW,KAC5B,CACA,CACC,SAAAmB,CAAU1f,OACH,MAAM2f,OAAS/zB,KAAK0yB,QAChB,IAAAI,MAAQiB,OAAOrgB,IAAIU,OACvB,IAAK0e,MAAO,CACAA,MAAA,CACJW,QAAS,MACTP,QAAS,KACTrnB,MAAO,GACPb,UAAW,CACPgpB,SAAU,GACVC,SAAU,KAGXF,OAAAjoB,IAAIsI,MAAO0e,MAC9B,CACe,OAAAA,KACf,CACC,MAAAoB,CAAO9f,MAAOqX,OAAO0I,IACdn0B,KAAK8zB,UAAU1f,OAAOpJ,UAAUygB,QAAOvmB,KAAKivB,GACpD,CACC,GAAA3R,CAAIpO,MAAOvI,OACJ,IAAKA,QAAUA,MAAM7a,OAAQ,CACzB,MACZ,CACQgP,KAAK8zB,UAAU1f,OAAOvI,MAAM3G,QAAQ2G,MAC5C,CACC,GAAAhG,CAAIuO,OACG,OAAOpU,KAAK8zB,UAAU1f,OAAOvI,MAAM7a,OAAS,CACpD,CACC,KAAAsY,CAAM8K,OACC,MAAM0e,MAAQ9yB,KAAK0yB,QAAQhf,IAAIU,OAC/B,IAAK0e,MAAO,CACR,MACZ,CACQA,MAAMW,QAAU,KACVX,MAAAxpB,MAAQgqB,KAAKC,MACnBT,MAAMjhB,SAAWihB,MAAMjnB,MAAMuoB,OAAO,CAACC,IAAK/D,MAAMphC,KAAKC,IAAIklC,IAAK/D,IAAIgE,WAAY,GAC9Et0B,KAAKozB,UACb,CACI,OAAAK,CAAQrf,OACA,IAACpU,KAAK2yB,SAAU,CACT,OAAA,KACnB,CACQ,MAAMG,MAAQ9yB,KAAK0yB,QAAQhf,IAAIU,OAC3B,IAAC0e,QAAUA,MAAMW,UAAYX,MAAMjnB,MAAM7a,OAAQ,CAC1C,OAAA,KACnB,CACe,OAAA,IACf,CACC,IAAAu/B,CAAKnc,OACE,MAAM0e,MAAQ9yB,KAAK0yB,QAAQhf,IAAIU,OAC/B,IAAK0e,QAAUA,MAAMjnB,MAAM7a,OAAQ,CAC/B,MACZ,CACQ,MAAM6a,MAAQinB,MAAMjnB,MAChB,IAAAha,EAAIga,MAAM7a,OAAS,EACjB,KAAAa,GAAK,IAAKA,EAAE,CACRga,MAAAha,GAAG0iC,QACrB,CACQzB,MAAMjnB,MAAQ,GACd7L,KAAK6yB,QAAQze,MAAO0e,MAAOQ,KAAKC,MAAO,WAC/C,CACC,MAAAiB,CAAOpgB,OACO,OAAApU,KAAK0yB,QAAQ/M,OAAOvR,MACnC,EAEA,IAAIqgB,aAA+BjC,SAEnC,MAAMj0B,YAAc,cACpB,MAAMm2B,cAAgB,CAClB,OAAAC,CAAS71B,MAAMF,IAAIg2B,QACR,OAAAA,OAAS,GAAMh2B,IAAKE,KAC9B,EACJ,KAAAwB,CAAOxB,MAAMF,IAAIg2B,QACJ,MAAAC,GAAKv0B,MAAMxB,OAAQP,aACzB,MAAMiC,GAAKq0B,GAAG10B,OAASG,MAAM1B,KAAML,aAC5B,OAAAiC,IAAMA,GAAGL,MAAQK,GAAGH,IAAIw0B,GAAID,QAAQzjC,YAAcyN,GAC5D,EACD,MAAAk2B,CAAQh2B,MAAMF,IAAIg2B,QACP91B,OAAAA,OAAQF,IAAKE,OAAQ81B,MACpC,GAEA,MAAMG,UACF,WAAAj1B,CAAYk1B,IAAKrxB,OAAQ+d,MAAM9iB,KACrB,MAAAq2B,aAAetxB,OAAO+d,OAC5B9iB,IAAKqjB,QAAQ,CACT+S,IAAIp2B,GACJA,IACAq2B,aACAD,IAAIl2B,OAER,MAAMA,MAAOmjB,QAAQ,CACjB+S,IAAIl2B,KACJm2B,aACAr2B,MAEJoB,KAAK2zB,QAAU,KACf3zB,KAAKk1B,IAAMF,IAAIpyB,IAAM8xB,cAAcM,IAAIj1B,aAAejB,OACtDkB,KAAKm1B,QAAU7lB,QAAQ0lB,IAAIljB,SAAWxC,QAAQC,OACzCvP,KAAAo1B,OAASlmC,KAAK8X,MAAMssB,KAAKC,OAASyB,IAAIzoB,OAAS,IACpDvM,KAAKs0B,UAAYt0B,KAAK4zB,OAAS1kC,KAAK8X,MAAMguB,IAAInjB,UACzC7R,KAAA0wB,QAAUsE,IAAIjjB,KACnB/R,KAAKq1B,QAAU1xB,OACf3D,KAAKs1B,MAAQ5T,MACb1hB,KAAKu1B,MAAQz2B,MACbkB,KAAKw1B,IAAM52B,IACXoB,KAAKy1B,eAAY,CACzB,CACI,MAAAnjB,GACI,OAAOtS,KAAK2zB,OACpB,CACI,MAAA+B,CAAOV,IAAKp2B,IAAIm0B,MACZ,GAAI/yB,KAAK2zB,QAAS,CACd3zB,KAAK6yB,QAAQ,OACb,MAAMoC,aAAej1B,KAAKq1B,QAAQr1B,KAAKs1B,OACjC,MAAAK,QAAU5C,KAAO/yB,KAAKo1B,OACtB,MAAAtgB,OAAS9U,KAAKs0B,UAAYqB,QAChC31B,KAAKo1B,OAASrC,KACT/yB,KAAAs0B,UAAYplC,KAAK8X,MAAM9X,KAAKC,IAAI2lB,OAAQkgB,IAAInjB,WACjD7R,KAAK4zB,QAAU+B,QACV31B,KAAA0wB,QAAUsE,IAAIjjB,KACnB/R,KAAKw1B,IAAMvT,QAAQ,CACf+S,IAAIp2B,GACJA,IACAq2B,aACAD,IAAIl2B,OAERkB,KAAKu1B,MAAQtT,QAAQ,CACjB+S,IAAIl2B,KACJm2B,aACAr2B,KAEhB,CACA,CACI,MAAA21B,GACI,GAAIv0B,KAAK2zB,QAAS,CACT3zB,KAAA6zB,KAAKP,KAAKC,OACfvzB,KAAK2zB,QAAU,MACf3zB,KAAK6yB,QAAQ,MACzB,CACA,CACI,IAAAgB,CAAKd,MACK,MAAA4C,QAAU5C,KAAO/yB,KAAKo1B,OAC5B,MAAMvjB,SAAW7R,KAAKs0B,UACtB,MAAM5S,MAAO1hB,KAAKs1B,MAClB,MAAMx2B,MAAOkB,KAAKu1B,MAClB,MAAMxjB,KAAO/R,KAAK0wB,MAClB,MAAM9xB,IAAKoB,KAAKw1B,IACZ,IAAAZ,OACJ50B,KAAK2zB,QAAU70B,QAASF,MAAOmT,MAAQ4jB,QAAU9jB,UAC7C,IAAC7R,KAAK2zB,QAAS,CACV3zB,KAAAq1B,QAAQ3T,OAAQ9iB,IACrBoB,KAAK6yB,QAAQ,MACb,MACZ,CACQ,GAAI8C,QAAU,EAAG,CACR31B,KAAAq1B,QAAQ3T,OAAQ5iB,MACrB,MACZ,CACQ81B,OAASe,QAAU9jB,SAAW,EAC9B+iB,OAAS7iB,MAAQ6iB,OAAS,EAAI,EAAIA,OAASA,OAClCA,OAAA50B,KAAKm1B,QAAQjmC,KAAKE,IAAI,EAAGF,KAAKC,IAAI,EAAGylC,UAC9C50B,KAAKq1B,QAAQ3T,OAAQ1hB,KAAKk1B,IAAIp2B,MAAMF,IAAIg2B,OAChD,CACI,IAAAgB,GACI,MAAMC,SAAW71B,KAAKy1B,YAAcz1B,KAAKy1B,UAAY,IACrD,OAAO,IAAIK,QAAQ,CAACvqB,IAAKwqB,OACrBF,SAAS3wB,KAAK,CACVqG,QACAwqB,WAGhB,CACI,OAAAlD,CAAQmD,UACE,MAAA3qB,OAAS2qB,SAAW,MAAQ,MAC5B,MAAAH,SAAW71B,KAAKy1B,WAAa,GACnC,IAAA,IAAQ5jC,EAAI,EAAGA,EAAIgkC,SAAS7kC,OAAQa,IAAI,CAC3BgkC,SAAAhkC,GAAGwZ,SACxB,CACA,EAGA,MAAM4qB,WACF,WAAAn2B,CAAYsU,MAAO8hB,QACfl2B,KAAKgxB,OAAS5c,MACTpU,KAAAm2B,gBAAkBhjB,IACvBnT,KAAKo2B,UAAUF,OACvB,CACI,SAAAE,CAAUF,QACF,IAACn0B,SAASm0B,QAAS,CACnB,MACZ,CACQ,MAAMG,iBAAmBv4B,OAAOD,KAAK+T,SAASW,WAC9C,MAAM+jB,cAAgBt2B,KAAKm2B,YAC3Br4B,OAAOy4B,oBAAoBL,QAAQ9qB,QAASrH,MAClC,MAAAixB,IAAMkB,OAAOnyB,KACf,IAAChC,SAASizB,KAAM,CAChB,MAChB,CACY,MAAMgB,SAAW,CAAE,EACnB,IAAA,MAAWQ,UAAUH,iBAAiB,CACzBL,SAAAQ,QAAUxB,IAAIwB,OACvC,EACarkC,QAAQ6iC,IAAI3iB,aAAe2iB,IAAI3iB,YAAc,CAC1CtO,MACDqH,QAASsW,QACR,GAAIA,QAAS3d,MAAQuyB,cAAczwB,IAAI6b,OAAO,CAC5B4U,cAAAxqB,IAAI4V,MAAMsU,SAC5C,KAGA,CACC,eAAAS,CAAgB9yB,OAAQgH,QACjB,MAAM+rB,WAAa/rB,OAAOzG,QACpB,MAAAA,QAAUyyB,qBAAqBhzB,OAAQ+yB,YAC7C,IAAKxyB,QAAS,CACV,MAAO,EACnB,CACQ,MAAMwO,WAAa1S,KAAK42B,kBAAkB1yB,QAASwyB,YACnD,GAAIA,WAAWG,QAAS,CACpBC,SAASnzB,OAAOO,QAAQ6yB,YAAaL,YAAYM,KAAK,KAClDrzB,OAAOO,QAAUwyB,YAClB,OAEf,CACe,OAAAhkB,UACf,CACC,iBAAAkkB,CAAkBjzB,OAAQgH,QACnB,MAAM2rB,cAAgBt2B,KAAKm2B,YAC3B,MAAMzjB,WAAa,GACnB,MAAM+gB,QAAU9vB,OAAOozB,cAAgBpzB,OAAOozB,YAAc,CAAA,GACtD,MAAAxV,MAAQzjB,OAAOD,KAAK8M,QACpB,MAAAooB,KAAOO,KAAKC,MACd,IAAA1hC,EACJ,IAAIA,EAAI0vB,MAAMvwB,OAAS,EAAGa,GAAK,IAAKA,EAAE,CAC5B6vB,MAAAA,MAAOH,MAAM1vB,GACnB,GAAI6vB,MAAK9hB,OAAO,KAAO,IAAK,CACxB,QAChB,CACY,GAAI8hB,QAAS,UAAW,CACpBhP,WAAWxN,QAAQlF,KAAKy2B,gBAAgB9yB,OAAQgH,SAChD,QAChB,CACkB,MAAAjJ,MAAQiJ,OAAO+W,OACjB,IAAAnP,UAAYkhB,QAAQ/R,OAClB,MAAAsT,IAAMsB,cAAc5iB,IAAIgO,OAC9B,GAAInP,UAAW,CACP,GAAAyiB,KAAOziB,UAAUD,SAAU,CACjBC,UAAAmjB,OAAOV,IAAKtzB,MAAOqxB,MAC7B,QACpB,KAAuB,CACHxgB,UAAUgiB,QAC9B,CACA,CACY,IAAKS,MAAQA,IAAInjB,SAAU,CACvBlO,OAAO+d,OAAQhgB,MACf,QAChB,CACoBggB,QAAAA,OAAQnP,UAAY,IAAIwiB,UAAUC,IAAKrxB,OAAQ+d,MAAMhgB,OAC7DgR,WAAWxN,KAAKqN,UAC5B,CACe,OAAAG,UACf,CACC,MAAAgjB,CAAO/xB,OAAQgH,QACJ,GAAA3K,KAAKm2B,YAAYxwB,OAAS,EAAG,CACtB7H,OAAA0B,OAAOmE,OAAQgH,QACtB,MACZ,CACQ,MAAM+H,WAAa1S,KAAK42B,kBAAkBjzB,OAAQgH,QAClD,GAAI+H,WAAW1hB,OAAQ,CACVyjC,SAAAjS,IAAIxiB,KAAKgxB,OAAQte,YACnB,OAAA,IACnB,CACA,EAEA,SAASokB,SAASpkB,WAAYL,YAC1B,MAAMohB,QAAU,GACV,MAAA51B,KAAOC,OAAOD,KAAKwU,YACzB,IAAA,IAAQxgB,EAAI,EAAGA,EAAIgM,KAAK7M,OAAQa,IAAI,CAChC,MAAMolC,KAAOvkB,WAAW7U,KAAKhM,IACzB,GAAAolC,MAAQA,KAAK3kB,SAAU,CACfmhB,QAAAvuB,KAAK+xB,KAAKrB,OAC9B,CACA,CACW,OAAAE,QAAQoB,IAAIzD,QACvB,CACA,SAASkD,qBAAqBhzB,OAAQ+yB,YAClC,IAAKA,WAAY,CACb,MACR,CACI,IAAIxyB,QAAUP,OAAOO,QACrB,IAAKA,QAAS,CACVP,OAAOO,QAAUwyB,WACjB,MACR,CACI,GAAIxyB,QAAQ2yB,QAAS,CACjBlzB,OAAOO,QAAUA,QAAUpG,OAAO0B,OAAO,CAAE,EAAE0E,QAAS,CAClD2yB,QAAS,MACTE,YAAa,CAAA,GAEzB,CACW,OAAA7yB,OACX,CAEA,SAASizB,UAAUtd,MAAOud,iBACtB,MAAMrY,KAAOlF,OAASA,MAAM3V,SAAW,CAAE,EACzC,MAAMjB,QAAU8b,KAAK9b,QACrB,MAAM7T,IAAM2vB,KAAK3vB,WAAQ,EAAYgoC,gBAAkB,EACvD,MAAMjoC,IAAM4vB,KAAK5vB,WAAQ,EAAYioC,gBAAkB,EAChD,MAAA,CACH9tB,MAAOrG,QAAU9T,IAAMC,IACvBma,IAAKtG,QAAU7T,IAAMD,IAE7B,CACA,SAASkoC,YAAY5oB,OAAQC,OAAQ0oB,iBACjC,GAAIA,kBAAoB,MAAO,CACpB,OAAA,KACf,CACU,MAAAnkC,EAAIkkC,UAAU1oB,OAAQ2oB,iBACtB,MAAAtyB,EAAIqyB,UAAUzoB,OAAQ0oB,iBACrB,MAAA,CACHpkB,IAAKlO,EAAEyE,IACPyD,MAAO/Z,EAAEsW,IACT0J,OAAQnO,EAAEwE,MACVyD,KAAM9Z,EAAEqW,MAEhB,CACA,SAASguB,OAAO51B,OACR,IAAAxC,EAAGvO,EAAGV,EAAGjB,EACT,GAAA+S,SAASL,OAAQ,CACjBxC,EAAIwC,MAAMsR,IACVriB,EAAI+Q,MAAMsL,MACV/c,EAAIyR,MAAMuR,OACVjkB,EAAI0S,MAAMqL,IAClB,KAAW,CACC7N,EAAAvO,EAAIV,EAAIjB,EAAI0S,KACxB,CACW,MAAA,CACHsR,IAAK9T,EACL8N,MAAOrc,EACPsiB,OAAQhjB,EACR8c,KAAM/d,EACNujC,SAAU7wB,QAAU,MAE5B,CACA,SAAS61B,wBAAwBnjB,MAAOojB,eACpC,MAAM35B,KAAO,GACP,MAAA45B,SAAWrjB,MAAMsjB,uBAAuBF,eAC9C,IAAI3lC,EAAGwR,KACH,IAAAxR,EAAI,EAAGwR,KAAOo0B,SAASzmC,OAAQa,EAAIwR,OAAQxR,EAAE,CAC7CgM,KAAKqH,KAAKuyB,SAAS5lC,GAAG4R,MAC9B,CACW,OAAA5F,IACX,CACA,SAAS85B,WAAWrpC,MAAOoT,MAAOk2B,QAAS1zB,QAAU,CAAA,GACjD,MAAMrG,KAAOvP,MAAMuP,KACb,MAAAg6B,WAAa3zB,QAAQkV,OAAS,SAChC,IAAAvnB,EAAGwR,KAAMG,aAAcs0B,WAC3B,GAAIp2B,QAAU,KAAM,CAChB,MACR,CACI,IAAIq2B,MAAQ,MACR,IAAAlmC,EAAI,EAAGwR,KAAOxF,KAAK7M,OAAQa,EAAIwR,OAAQxR,EAAE,CAC1B2R,cAAC3F,KAAKhM,GACrB,GAAI2R,eAAiBo0B,QAAS,CAClBG,MAAA,KACR,GAAI7zB,QAAQgzB,IAAK,CACb,QAChB,CACY,KACZ,CACqBY,WAAAxpC,MAAMqc,OAAOnH,cACtB,GAAAxB,eAAe81B,cAAgBD,YAAcn2B,QAAU,GAAK+E,KAAK/E,SAAW+E,KAAKqxB,aAAc,CACtFp2B,OAAAo2B,UACrB,CACA,CACI,IAAKC,QAAU7zB,QAAQgzB,IAAK,CACjB,OAAA,CACf,CACW,OAAAx1B,KACX,CACA,SAASs2B,yBAAyBnd,KAAMzN,MAC9B,MAAAM,OAAEA,OAASC,OAAAA,QAAYP,KAC7B,MAAM6qB,SAAWvqB,OAAOK,OAAS,IAAM,IAAM,IAC7C,MAAMmqB,SAAWvqB,OAAOI,OAAS,IAAM,IAAM,IACvC,MAAAlQ,KAAOC,OAAOD,KAAKgd,MACzB,MAAMsd,MAAQ,IAAIjmC,MAAM2L,KAAK7M,QAC7B,IAAIa,EAAGwR,KAAMU,IACT,IAAAlS,EAAI,EAAGwR,KAAOxF,KAAK7M,OAAQa,EAAIwR,OAAQxR,EAAE,CACzCkS,IAAMlG,KAAKhM,GACXsmC,MAAMtmC,GAAK,CACPomC,CAACA,UAAWl0B,IACZm0B,CAACA,UAAWrd,KAAK9W,KAE7B,CACW,OAAAo0B,KACX,CACA,SAASC,UAAUve,MAAOzM,MAChB,MAAAirB,QAAUxe,OAASA,MAAM3V,QAAQm0B,QACvC,OAAOA,SAAWA,eAAyB,GAAAjrB,KAAK9e,aAAU,CAC9D,CACA,SAASgqC,YAAYC,WAAYC,WAAYprB,MAClC,MAAA,GAAGmrB,WAAW/2B,MAAMg3B,WAAWh3B,MAAM4L,KAAK9e,OAAS8e,KAAKrN,MACnE,CACA,SAASmO,cAAc2L,OACnB,MAAMzqB,IAAEA,IAAMD,IAAAA,IAAA6e,WAAMA,sBAAaC,YAAgB4L,MAAM3L,gBAChD,MAAA,CACH9e,IAAK4e,WAAa5e,IAAM6S,OAAOw2B,kBAC/BtpC,IAAK8e,WAAa9e,IAAM8S,OAAOkE,kBAEvC,CACA,SAASuyB,iBAAiBC,OAAQC,SAAUC,YACxC,MAAMC,SAAWH,OAAOC,YAAcD,OAAOC,UAAY,IACzD,OAAOE,SAASD,cAAgBC,SAASD,YAAc,CAAA,EAC3D,CACA,SAASE,oBAAoBzqC,MAAOqf,OAAQqrB,SAAUj5B,MAClD,IAAA,MAAWqN,QAAQO,OAAOsrB,wBAAwBl5B,MAAMkD,UAAU,CACxD,MAAAvB,MAAQpT,MAAM8e,KAAK3J,OACzB,GAAIu1B,UAAYt3B,MAAQ,IAAMs3B,UAAYt3B,MAAQ,EAAG,CACjD,OAAO0L,KAAK3J,KACxB,CACA,CACW,OAAA,IACX,CACA,SAASy1B,aAAaC,WAAYxS,QAC9B,MAAMvS,MAAEA,MAAQglB,YAAahsB,MAAU+rB,WACvC,MAAMR,OAASvkB,MAAMilB,UAAYjlB,MAAMilB,QAAU,CAAA,GACjD,MAAM3rB,OAAEA,OAAAC,OAASA,OAASlK,MAAOD,cAAkB4J,KACnD,MAAMksB,MAAQ5rB,OAAOK,KACrB,MAAMwrB,MAAQ5rB,OAAOI,KACrB,MAAMhK,IAAMu0B,YAAY5qB,OAAQC,OAAQP,MACxC,MAAM/J,KAAOsjB,OAAO31B,OAChB,IAAA1C,MACJ,IAAA,IAAQuD,EAAI,EAAGA,EAAIwR,OAAQxR,EAAE,CACnB,MAAA+T,KAAO+gB,OAAO90B,GACd,MAAEynC,CAACA,OAAQ71B,OAAQ81B,CAACA,OAAQ73B,OAAWkE,KAC7C,MAAM4zB,WAAa5zB,KAAKyzB,UAAYzzB,KAAKyzB,QAAU,CAAA,GACnD/qC,MAAQkrC,WAAWD,OAASb,iBAAiBC,OAAQ50B,IAAKN,QAC1DnV,MAAMkV,cAAgB9B,MACtBpT,MAAMmrC,KAAOV,oBAAoBzqC,MAAOqf,OAAQ,KAAMP,KAAKrN,MAC3DzR,MAAMorC,QAAUX,oBAAoBzqC,MAAOqf,OAAQ,MAAOP,KAAKrN,MAC/D,MAAM45B,aAAerrC,MAAMsrC,gBAAkBtrC,MAAMsrC,cAAgB,CAAA,GACnED,aAAan2B,cAAgB9B,KACrC,CACA,CACA,SAASm4B,gBAAgBzlB,MAAOrG,MAC5B,MAAM+L,QAAS1F,MAAM0F,OACrB,OAAOhc,OAAOD,KAAKic,SAAQgM,OAAQ/hB,KAAM+V,QAAO/V,KAAKgK,OAASA,MAAM+rB,OACxE,CACA,SAASC,qBAAqB9T,OAAQxiB,QAClC,OAAOgf,cAAcwD,OAAQ,CACzB3T,OAAQ,MACRxE,aAAS,EACTtK,aAAcC,OACdA,MAAAA,OACA2V,KAAM,UACNrZ,KAAM,WAEd,CACA,SAASi6B,kBAAkB/T,OAAQxiB,OAAO0mB,SACtC,OAAO1H,cAAcwD,OAAQ,CACzB3T,OAAQ,MACR2nB,UAAWx2B,OACXkjB,YAAQ,EACRuT,SAAK,EACL/P,gBACA1mB,MAAAA,OACA2V,KAAM,UACNrZ,KAAM,QAEd,CACA,SAASo6B,YAAY/sB,KAAMvB,OACjB,MAAArI,aAAe4J,KAAK+rB,WAAW11B,MACrC,MAAMsK,KAAOX,KAAKO,QAAUP,KAAKO,OAAOI,KACxC,IAAKA,KAAM,CACP,MACR,CACIlC,MAAQA,OAASuB,KAAKQ,QACtB,IAAA,MAAW+Y,UAAU9a,MAAM,CACvB,MAAM8sB,OAAShS,OAAO0S,QAClB,IAACV,QAAUA,OAAO5qB,aAAuB,GAAA4qB,OAAO5qB,MAAMvK,qBAA6B,EAAA,CACnF,MACZ,QACem1B,OAAO5qB,MAAMvK,cAChB,GAAAm1B,OAAO5qB,MAAM6rB,qBAAkB,GAAajB,OAAO5qB,MAAM6rB,cAAcp2B,qBAA6B,EAAA,QAC7Fm1B,OAAO5qB,MAAM6rB,cAAcp2B,aAC9C,CACA,CACA,CACA,MAAM42B,mBAAsBhhB,MAAOA,OAAS,SAAWA,OAAS,OAChE,MAAMihB,iBAAmB,CAACC,OAAQC,SAASA,OAASD,OAASx8B,OAAO0B,OAAO,CAAE,EAAE86B,QAC/E,MAAME,YAAc,CAACC,SAAUrtB,KAAMgH,QAAQqmB,WAAartB,KAAKstB,QAAUttB,KAAKutB,UAAY,CAClF98B,KAAM05B,wBAAwBnjB,MAAO,MACrCzJ,OAAQ,MAEhB,MAAMiwB,kBAIL,WAAA96B,CAAYsU,MAAO5Q,cACZxD,KAAKoU,MAAQA,MACbpU,KAAK+V,KAAO3B,MAAM2E,IAClB/Y,KAAKyD,MAAQD,aACbxD,KAAK66B,gBAAkB,CAAE,EACpB76B,KAAAo5B,YAAcp5B,KAAK86B,UACnB96B,KAAA+6B,MAAQ/6B,KAAKo5B,YAAYr5B,KAC9BC,KAAKkE,aAAU,EACdlE,KAAK0mB,SAAW,MACjB1mB,KAAKg7B,WAAQ,EACbh7B,KAAKi7B,iBAAc,EACnBj7B,KAAKk7B,oBAAiB,EACtBl7B,KAAKm7B,gBAAa,EAClBn7B,KAAKo7B,gBAAa,EAClBp7B,KAAKq7B,oBAAsB,MAC3Br7B,KAAKs7B,mBAAqB,MAC1Bt7B,KAAKu7B,cAAW,EAChBv7B,KAAKw7B,UAAY,GACjBx7B,KAAKy7B,8BAAgCA,mBACrCz7B,KAAK07B,2BAA6BA,gBAClC17B,KAAK27B,YACb,CACI,UAAAA,GACI,MAAMvuB,KAAOpN,KAAKo5B,YAClBp5B,KAAKo2B,YACLp2B,KAAK47B,aACLxuB,KAAKutB,SAAWvC,UAAUhrB,KAAKO,OAAQP,MACvCpN,KAAK67B,cACD,GAAA77B,KAAKkE,QAAQ0Z,OAAS5d,KAAKoU,MAAM0nB,gBAAgB,UAAW,CAC5DntC,QAAQqzB,KAAK,qKACzB,CACA,CACI,WAAA+Z,CAAYv4B,cACJ,GAAAxD,KAAKyD,QAAUD,aAAc,CAC7B22B,YAAYn6B,KAAKo5B,YAC7B,CACQp5B,KAAKyD,MAAQD,YACrB,CACI,UAAAo4B,GACI,MAAMxnB,MAAQpU,KAAKoU,MACnB,MAAMhH,KAAOpN,KAAKo5B,YACZ,MAAAtrB,QAAU9N,KAAKg8B,aACf,MAAAC,SAAW,CAACluB,KAAM9a,EAAG6R,EAAGnU,IAAIod,OAAS,IAAM9a,EAAI8a,OAAS,IAAMpd,EAAImU,EAClE,MAAAo3B,IAAM9uB,KAAK+uB,QAAU95B,eAAeyL,QAAQquB,QAAStC,gBAAgBzlB,MAAO,MAC5E,MAAAgoB,IAAMhvB,KAAKivB,QAAUh6B,eAAeyL,QAAQuuB,QAASxC,gBAAgBzlB,MAAO,MAC5E,MAAAkoB,IAAMlvB,KAAKmvB,QAAUl6B,eAAeyL,QAAQyuB,QAAS1C,gBAAgBzlB,MAAO,MAClF,MAAM8E,UAAY9L,KAAK8L,UACvB,MAAMsjB,IAAMpvB,KAAKqvB,QAAUR,SAAS/iB,UAAWgjB,IAAKE,IAAKE,KACzD,MAAMI,IAAMtvB,KAAKuvB,QAAUV,SAAS/iB,UAAWkjB,IAAKF,IAAKI,KACpDlvB,KAAAqB,OAASzO,KAAK48B,cAAcV,KAC5B9uB,KAAAsB,OAAS1O,KAAK48B,cAAcR,KAC5BhvB,KAAAyvB,OAAS78B,KAAK48B,cAAcN,KAC5BlvB,KAAAM,OAAS1N,KAAK48B,cAAcJ,KAC5BpvB,KAAAO,OAAS3N,KAAK48B,cAAcF,IACzC,CACI,UAAAV,GACI,OAAOh8B,KAAKoU,MAAMyG,KAAK3C,SAASlY,KAAKyD,MAC7C,CACI,OAAAq3B,GACI,OAAO96B,KAAKoU,MAAM0oB,eAAe98B,KAAKyD,MAC9C,CACC,aAAAm5B,CAAcG,SACA,OAAA/8B,KAAKoU,MAAM0F,OAAOijB,QACjC,CACC,cAAAC,CAAenjB,OACR,MAAMzM,KAAOpN,KAAKo5B,YAClB,OAAOvf,QAAUzM,KAAKM,OAASN,KAAKO,OAASP,KAAKM,MAC1D,CACI,KAAAuvB,GACIj9B,KAAKqzB,QAAQ,QACrB,CACC,QAAA6J,GACO,MAAM9vB,KAAOpN,KAAKo5B,YAClB,GAAIp5B,KAAKg7B,MAAO,CACQvvB,oBAAAzL,KAAKg7B,MAAOh7B,KAC5C,CACQ,GAAIoN,KAAKutB,SAAU,CACfR,YAAY/sB,KACxB,CACA,CACC,UAAA+vB,GACa,MAAArvB,QAAU9N,KAAKg8B,aACrB,MAAMnhB,KAAO/M,QAAQ+M,OAAS/M,QAAQ+M,KAAO,IAC7C,MAAMmgB,MAAQh7B,KAAKg7B,MACf,GAAAj5B,SAAS8Y,MAAO,CAChB,MAAMzN,KAAOpN,KAAKo5B,YACbp5B,KAAAg7B,MAAQhD,yBAAyBnd,KAAMzN,KACxD,MAAA,GAAmB4tB,QAAUngB,KAAM,CACvB,GAAImgB,MAAO,CACPvvB,oBAAoBuvB,MAAOh7B,MAC3B,MAAMoN,KAAOpN,KAAKo5B,YAClBe,YAAY/sB,MACZA,KAAKQ,QAAU,EAC/B,CACY,GAAIiN,MAAQ/c,OAAOs/B,aAAaviB,MAAO,CACnChQ,kBAAkBgQ,KAAM7a,KACxC,CACYA,KAAKw7B,UAAY,GACjBx7B,KAAKg7B,MAAQngB,IACzB,CACA,CACI,WAAAghB,GACI,MAAMzuB,KAAOpN,KAAKo5B,YAClBp5B,KAAKm9B,aACL,GAAIn9B,KAAKy7B,mBAAoB,CACpBruB,KAAAU,QAAU,IAAI9N,KAAKy7B,kBACpC,CACA,CACI,qBAAA4B,CAAsBC,kBAClB,MAAMlwB,KAAOpN,KAAKo5B,YACZ,MAAAtrB,QAAU9N,KAAKg8B,aACrB,IAAIuB,aAAe,MACnBv9B,KAAKm9B,aACL,MAAMK,WAAapwB,KAAKutB,SACxBvtB,KAAKutB,SAAWvC,UAAUhrB,KAAKO,OAAQP,MACnC,GAAAA,KAAK9e,QAAUwf,QAAQxf,MAAO,CACfivC,aAAA,KACfpD,YAAY/sB,MACZA,KAAK9e,MAAQwf,QAAQxf,KACjC,CACQ0R,KAAKy9B,gBAAgBH,kBACjB,GAAAC,cAAgBC,aAAepwB,KAAKutB,SAAU,CACjCzB,aAAAl5B,KAAMoN,KAAKQ,SACxBR,KAAKutB,SAAWvC,UAAUhrB,KAAKO,OAAQP,KACnD,CACA,CACC,SAAAgpB,GACa,MAAAF,OAASl2B,KAAKoU,MAAM8hB,OAC1B,MAAMwH,UAAYxH,OAAOyH,iBAAiB39B,KAAK+6B,OAC/C,MAAMnY,OAASsT,OAAO0H,gBAAgB59B,KAAKg8B,aAAc0B,UAAW,MACpE19B,KAAKkE,QAAUgyB,OAAO2H,eAAejb,OAAQ5iB,KAAKmc,cAC7Cnc,KAAA0mB,SAAW1mB,KAAKkE,QAAQwV,QAC7B1Z,KAAK66B,gBAAkB,CAAE,CACjC,CACC,KAAAjU,CAAMtd,MAAOkE,OACN,MAAQ4rB,YAAahsB,KAAO4tB,MAAOngB,MAAU7a,KACvC,MAAA0N,OAAEA,OAASitB,SAAAA,UAAcvtB,KAC/B,MAAMksB,MAAQ5rB,OAAOK,KACrB,IAAI+vB,OAASx0B,QAAU,GAAKkE,QAAUqN,KAAK7pB,OAAS,KAAOoc,KAAKK,QAChE,IAAI6b,KAAOhgB,MAAQ,GAAK8D,KAAKQ,QAAQtE,MAAQ,GAC7C,IAAIzX,EAAGy+B,IAAK3J,OACR,GAAA3mB,KAAK0mB,WAAa,MAAO,CACzBtZ,KAAKQ,QAAUiN,KACfzN,KAAKK,QAAU,KACNkZ,OAAA9L,IACrB,KAAe,CACH,GAAI1oB,QAAQ0oB,KAAKvR,QAAS,CACtBqd,OAAS3mB,KAAK+9B,eAAe3wB,KAAMyN,KAAMvR,MAAOkE,MACnD,MAAU,GAAAzL,SAAS8Y,KAAKvR,QAAS,CAC9Bqd,OAAS3mB,KAAKg+B,gBAAgB5wB,KAAMyN,KAAMvR,MAAOkE,MACjE,KAAmB,CACHmZ,OAAS3mB,KAAKi+B,mBAAmB7wB,KAAMyN,KAAMvR,MAAOkE,MACpE,CACkB,MAAA0wB,2BAA6B,IAAI5N,IAAIgJ,SAAW,MAAQhQ,MAAQgH,IAAIgJ,OAAShQ,KAAKgQ,OACxF,IAAIznC,EAAI,EAAGA,EAAI2b,QAAS3b,EAAE,CACtBub,KAAKQ,QAAQ/b,EAAIyX,OAASgnB,IAAM3J,OAAO90B,GACvC,GAAIisC,OAAQ,CACR,GAAII,6BAA8B,CACrBJ,OAAA,KACjC,CAC2BxU,KAAAgH,GAC3B,CACA,CACYljB,KAAKK,QAAUqwB,MAC3B,CACQ,GAAInD,SAAU,CACVzB,aAAal5B,KAAM2mB,OAC/B,CACA,CACC,kBAAAsX,CAAmB7wB,KAAMyN,KAAMvR,MAAOkE,OACzB,MAAAE,OAAEA,OAASC,OAAAA,QAAYP,KAC7B,MAAMksB,MAAQ5rB,OAAOK,KACrB,MAAMwrB,MAAQ5rB,OAAOI,KACf,MAAAowB,OAASzwB,OAAO0wB,YACtB,MAAMC,YAAc3wB,SAAWC,OACzB,MAAAgZ,OAAS,IAAIz0B,MAAMsb,OACzB,IAAI3b,EAAGwR,KAAMI,OACb,IAAI5R,EAAI,EAAGwR,KAAOmK,MAAO3b,EAAIwR,OAAQxR,EAAE,CACnC4R,OAAQ5R,EAAIyX,MACZqd,OAAO90B,GAAK,CACRynC,CAACA,OAAQ+E,aAAe3wB,OAAOkZ,MAAMuX,OAAO16B,QAAQA,QACpD81B,CAACA,OAAQ5rB,OAAOiZ,MAAM/L,KAAKpX,QAAQA,QAEnD,CACe,OAAAkjB,MACf,CACC,cAAAoX,CAAe3wB,KAAMyN,KAAMvR,MAAOkE,OACrB,MAAAiB,OAAEA,OAASC,OAAAA,QAAYtB,KACvB,MAAAuZ,OAAS,IAAIz0B,MAAMsb,OACrB,IAAA3b,EAAGwR,KAAMI,OAAOmC,KACpB,IAAI/T,EAAI,EAAGwR,KAAOmK,MAAO3b,EAAIwR,OAAQxR,EAAE,CACnC4R,OAAQ5R,EAAIyX,MACZ1D,KAAOiV,KAAKpX,QACZkjB,OAAO90B,GAAK,CACRoB,EAAGwb,OAAOmY,MAAMhhB,KAAK,GAAInC,QACzBqB,EAAG4J,OAAOkY,MAAMhhB,KAAK,GAAInC,QAEzC,CACe,OAAAkjB,MACf,CACC,eAAAqX,CAAgB5wB,KAAMyN,KAAMvR,MAAOkE,OACtB,MAAAiB,OAAEA,OAASC,OAAAA,QAAYtB,KAC7B,MAAMkxB,SAAEA,SAAU,IAAAC,SAAMA,SAAU,KAASv+B,KAAK0mB,SAC1C,MAAAC,OAAS,IAAIz0B,MAAMsb,OACrB,IAAA3b,EAAGwR,KAAMI,OAAOmC,KACpB,IAAI/T,EAAI,EAAGwR,KAAOmK,MAAO3b,EAAIwR,OAAQxR,EAAE,CACnC4R,OAAQ5R,EAAIyX,MACZ1D,KAAOiV,KAAKpX,QACZkjB,OAAO90B,GAAK,CACRoB,EAAGwb,OAAOmY,MAAMxhB,iBAAiBQ,KAAM04B,UAAW76B,QAClDqB,EAAG4J,OAAOkY,MAAMxhB,iBAAiBQ,KAAM24B,UAAW96B,QAElE,CACe,OAAAkjB,MACf,CACC,SAAA6X,CAAU/6B,QACI,OAAAzD,KAAKo5B,YAAYxrB,QAAQnK,OACxC,CACC,cAAAg7B,CAAeh7B,QACD,OAAAzD,KAAKo5B,YAAYve,KAAKpX,OACrC,CACC,UAAAk0B,CAAW9d,MAAO8M,OAAQvN,MACnB,MAAMhF,MAAQpU,KAAKoU,MACnB,MAAMhH,KAAOpN,KAAKo5B,YACZ,MAAA13B,MAAQilB,OAAO9M,MAAM9L,MAC3B,MAAMzf,MAAQ,CACVuP,KAAM05B,wBAAwBnjB,MAAO,MACrCzJ,OAAQgc,OAAO0S,QAAQxf,MAAM9L,MAAM6rB,eAEvC,OAAOjC,WAAWrpC,MAAOoT,MAAO0L,KAAK3J,MAAO,CACxC2V,WAEZ,CACC,qBAAAslB,CAAsB1sC,MAAO6nB,MAAO8M,OAAQr4B,OAC/B,MAAAqwC,YAAchY,OAAO9M,MAAM9L,MAC7B,IAAArM,MAAQi9B,cAAgB,KAAOC,IAAMD,YACzC,MAAMh0B,OAASrc,OAASq4B,OAAO0S,QAAQxf,MAAM9L,MAC7C,GAAIzf,OAASqc,OAAQ,CACjBrc,MAAMqc,OAASA,OACfjJ,MAAQi2B,WAAWrpC,MAAOqwC,YAAa3+B,KAAKo5B,YAAY31B,MACpE,CACQzR,MAAM5C,IAAMF,KAAKE,IAAI4C,MAAM5C,IAAKsS,OAChC1P,MAAM7C,IAAMD,KAAKC,IAAI6C,MAAM7C,IAAKuS,MACxC,CACC,SAAAm9B,CAAUhlB,MAAO4gB,UACV,MAAMrtB,KAAOpN,KAAKo5B,YAClB,MAAMxrB,QAAUR,KAAKQ,QACrB,MAAMkwB,OAAS1wB,KAAKK,SAAWoM,QAAUzM,KAAKM,OAC9C,MAAMrK,KAAOuK,QAAQ5c,OACf,MAAA8tC,WAAa9+B,KAAKg9B,eAAenjB,OACvC,MAAMvrB,MAAQksC,YAAYC,SAAUrtB,KAAMpN,KAAKoU,OAC/C,MAAMpiB,MAAQ,CACV5C,IAAK6S,OAAOkE,kBACZhX,IAAK8S,OAAOw2B,mBAEhB,MAAQrpC,IAAK2vC,SAAW5vC,IAAK6vC,UAAc9wB,cAAc4wB,YACzD,IAAIjtC,EAAG80B,OACP,SAASsY,QACLtY,OAAS/Y,QAAQ/b,GACX,MAAAimC,WAAanR,OAAOmY,WAAW/wB,MAC9B,OAAC/L,eAAe2kB,OAAO9M,MAAM9L,QAAUgxB,SAAWjH,YAAckH,SAAWlH,UAC9F,CACQ,IAAIjmC,EAAI,EAAGA,EAAIwR,OAAQxR,EAAE,CACrB,GAAIotC,QAAS,CACT,QAChB,CACYj/B,KAAK0+B,sBAAsB1sC,MAAO6nB,MAAO8M,OAAQr4B,OACjD,GAAIwvC,OAAQ,CACR,KAChB,CACA,CACQ,GAAIA,OAAQ,CACR,IAAIjsC,EAAIwR,KAAO,EAAGxR,GAAK,IAAKA,EAAE,CAC1B,GAAIotC,QAAS,CACT,QACpB,CACgBj/B,KAAK0+B,sBAAsB1sC,MAAO6nB,MAAO8M,OAAQr4B,OACjD,KAChB,CACA,CACe,OAAA0D,KACf,CACI,kBAAAktC,CAAmBrlB,OACT,MAAA8M,OAAS3mB,KAAKo5B,YAAYxrB,QAChC,MAAMjD,OAAS,GACf,IAAI9Y,EAAGwR,KAAM3B,MACT,IAAA7P,EAAI,EAAGwR,KAAOsjB,OAAO31B,OAAQa,EAAIwR,OAAQxR,EAAE,CAC3C6P,MAAQilB,OAAO90B,GAAGgoB,MAAM9L,MACpB,GAAA/L,eAAeN,OAAQ,CACvBiJ,OAAOzF,KAAKxD,MAC5B,CACA,CACe,OAAAiJ,MACf,CACC,cAAAw0B,GACc,OAAA,KACf,CACC,gBAAAC,CAAiB37B,QACV,MAAM2J,KAAOpN,KAAKo5B,YAClB,MAAM1rB,OAASN,KAAKM,OACpB,MAAMC,OAASP,KAAKO,OACd,MAAAgZ,OAAS3mB,KAAKw+B,UAAU/6B,QACvB,MAAA,CACH47B,MAAO3xB,OAAS,GAAKA,OAAO4xB,iBAAiB3Y,OAAOjZ,OAAOK,OAAS,GACpErM,MAAOiM,OAAS,GAAKA,OAAO2xB,iBAAiB3Y,OAAOhZ,OAAOI,OAAS,GAEhF,CACC,OAAAslB,CAAQja,MACD,MAAMhM,KAAOpN,KAAKo5B,YACbp5B,KAAA01B,OAAOtc,MAAQ,WACpBhM,KAAKklB,MAAQgF,OAAOj1B,eAAerC,KAAKkE,QAAQqR,KAAM8hB,YAAYjqB,KAAKqB,OAAQrB,KAAKsB,OAAQ1O,KAAKm/B,mBACzG,CACC,MAAAzJ,CAAOtc,MAAM,CACV,IAAAsa,GACI,MAAM3a,IAAM/Y,KAAK+V,KACjB,MAAM3B,MAAQpU,KAAKoU,MACnB,MAAMhH,KAAOpN,KAAKo5B,YACZ7gB,MAAAA,UAAWnL,KAAKyN,MAAQ,GAC9B,MAAMmD,KAAO5J,MAAM8d,UACnB,MAAM5f,OAAS,GACT,MAAAhJ,MAAQtJ,KAAKm7B,YAAc,EACjC,MAAM3tB,MAAQxN,KAAKo7B,YAAc7iB,UAASvnB,OAASsY,MAC7C,MAAA0Q,wBAA0Bha,KAAKkE,QAAQ8V,wBACzC,IAAAnoB,EACJ,GAAIub,KAAKU,QAAS,CACdV,KAAKU,QAAQ4lB,KAAK3a,IAAKiF,KAAM1U,MAAOkE,MAChD,CACQ,IAAI3b,EAAIyX,MAAOzX,EAAIyX,MAAQkE,QAAS3b,EAAE,CAC5B,MAAAs4B,QAAU5R,UAAS1mB,GACzB,GAAIs4B,QAAQuQ,OAAQ,CAChB,QAChB,CACgB,GAAAvQ,QAAQ7X,QAAU0H,wBAAyB,CAC3C1H,OAAOpN,KAAKilB,QAC5B,KAAmB,CACKA,QAAAuJ,KAAK3a,IAAKiF,KAClC,CACA,CACQ,IAAInsB,EAAI,EAAGA,EAAIygB,OAAOthB,SAAUa,EAAE,CAC9BygB,OAAOzgB,GAAG6hC,KAAK3a,IAAKiF,KAChC,CACA,CACC,QAAAsM,CAAS7mB,OAAO6O,QACH,MAAA8G,KAAO9G,OAAS,SAAW,UACjC,OAAO7O,cAAU,GAAazD,KAAKo5B,YAAYtrB,QAAU9N,KAAKu/B,6BAA6BnmB,MAAQpZ,KAAKw/B,0BAA0B/7B,QAAS,EAAG2V,KACtJ,CACC,UAAA+C,CAAW1Y,OAAO6O,OAAQ8G,MACb,MAAAtL,QAAU9N,KAAKg8B,aACjB,IAAA5jB,QACJ,GAAI3U,QAAS,GAAKA,OAAQzD,KAAKo5B,YAAYve,KAAK7pB,OAAQ,CACpD,MAAMm5B,QAAUnqB,KAAKo5B,YAAYve,KAAKpX,QAC5B2U,QAAA+R,QAAQoR,WAAapR,QAAQoR,SAAWvB,kBAAkBh6B,KAAKmc,aAAc1Y,OAAO0mB,UACtF/R,QAAAuO,OAAS3mB,KAAKw+B,UAAU/6B,QACxB2U,QAAA8hB,IAAMpsB,QAAQ+M,KAAKpX,QACnB2U,QAAA3U,MAAQ2U,QAAQ6hB,UAAYx2B,MAChD,KAAe,CACO2U,QAAApY,KAAKu7B,WAAav7B,KAAKu7B,SAAWxB,qBAAqB/5B,KAAKoU,MAAM+H,aAAcnc,KAAKyD,QAC/F2U,QAAQtK,QAAUA,QACVsK,QAAA3U,MAAQ2U,QAAQ5U,aAAexD,KAAKyD,KACxD,CACgB2U,QAAA9F,SAAWA,OACnB8F,QAAQgB,KAAOA,KACR,OAAAhB,OACf,CACC,4BAAAmnB,CAA6BnmB,MACtB,OAAOpZ,KAAKy/B,uBAAuBz/B,KAAKy7B,mBAAmBj6B,GAAI4X,KACvE,CACC,yBAAAomB,CAA0B/7B,OAAO2V,MAC1B,OAAOpZ,KAAKy/B,uBAAuBz/B,KAAK07B,gBAAgBl6B,GAAI4X,KAAM3V,OAC1E,CACC,sBAAAg8B,CAAuBC,YAAatmB,KAAO,UAAW3V,QAC/C,MAAM6O,OAAS8G,OAAS,SACxB,MAAMiC,MAAQrb,KAAK66B,gBACb,MAAAvnB,SAAWosB,YAAc,IAAMtmB,KAC/B,MAAAkhB,OAASjf,MAAM/H,UACrB,MAAMqsB,QAAU3/B,KAAKq7B,qBAAuB71B,QAAQ/B,QACpD,GAAI62B,OAAQ,CACD,OAAAD,iBAAiBC,OAAQqF,QAC5C,CACc,MAAAzJ,OAASl2B,KAAKoU,MAAM8hB,OAC1B,MAAMwH,UAAYxH,OAAO0J,wBAAwB5/B,KAAK+6B,MAAO2E,aAC7D,MAAM7c,SAAWvQ,OAAS,CACtB,GAAGotB,mBACH,QACAA,YACA,IACA,CACAA,YACA,IAEJ,MAAM9c,OAASsT,OAAO0H,gBAAgB59B,KAAKg8B,aAAc0B,WACzD,MAAMr/B,OAAQP,OAAOD,KAAK+T,SAAS2G,SAASmnB,cAC5C,MAAMtnB,QAAU,IAAIpY,KAAKmc,WAAW1Y,OAAO6O,OAAQ8G,MACnD,MAAMzO,OAASurB,OAAO2J,oBAAoBjd,OAAQvkB,OAAO+Z,QAASyK,UAClE,GAAIlY,OAAOksB,QAAS,CAChBlsB,OAAOksB,QAAU8I,QACjBtkB,MAAM/H,UAAYxV,OAAOgiC,OAAOzF,iBAAiB1vB,OAAQg1B,SACrE,CACe,OAAAh1B,MACf,CACC,kBAAAo1B,CAAmBt8B,OAAOu8B,WAAY1tB,QAC/B,MAAM8B,MAAQpU,KAAKoU,MACnB,MAAMiH,MAAQrb,KAAK66B,gBACb,MAAAvnB,SAAW,aAAa0sB,aACxB,MAAA1F,OAASjf,MAAM/H,UACrB,GAAIgnB,OAAQ,CACD,OAAAA,MACnB,CACY,IAAAp2B,QACA,GAAAkQ,MAAMlQ,QAAQqO,YAAc,MAAO,CAC7B,MAAA2jB,OAASl2B,KAAKoU,MAAM8hB,OAC1B,MAAMwH,UAAYxH,OAAO+J,0BAA0BjgC,KAAK+6B,MAAOiF,YAC/D,MAAMpd,OAASsT,OAAO0H,gBAAgB59B,KAAKg8B,aAAc0B,WAC/Cx5B,QAAAgyB,OAAO2H,eAAejb,OAAQ5iB,KAAKmc,WAAW1Y,OAAO6O,OAAQ0tB,YACnF,CACQ,MAAMttB,WAAa,IAAIujB,WAAW7hB,MAAOlQ,SAAWA,QAAQwO,YACxD,GAAAxO,SAAWA,QAAQif,WAAY,CAC/B9H,MAAM/H,UAAYxV,OAAOgiC,OAAOptB,WAC5C,CACe,OAAAA,UACf,CACC,gBAAAwtB,CAAiBh8B,SACN,IAACA,QAAQ2yB,QAAS,CAClB,MACZ,CACe,OAAA72B,KAAKk7B,iBAAmBl7B,KAAKk7B,eAAiBp9B,OAAO0B,OAAO,GAAI0E,SAC/E,CACC,cAAAi8B,CAAe/mB,KAAMgnB,eACd,OAAQA,eAAiBhG,mBAAmBhhB,OAASpZ,KAAKoU,MAAMisB,mBACxE,CACC,iBAAAC,CAAkBh3B,MAAO8P,MAClB,MAAMmnB,UAAYvgC,KAAKw/B,0BAA0Bl2B,MAAO8P,MACxD,MAAMonB,wBAA0BxgC,KAAKk7B,eAC/B,MAAAkF,cAAgBpgC,KAAKkgC,iBAAiBK,WAC5C,MAAMJ,eAAiBngC,KAAKmgC,eAAe/mB,KAAMgnB,gBAAkBA,gBAAkBI,wBAChFxgC,KAAAygC,oBAAoBL,cAAehnB,KAAMmnB,WACvC,MAAA,CACHH,4BACAD,8BAEZ,CACC,aAAAO,CAAcvW,QAAS1mB,OAAO4O,WAAY+G,MAC/B,GAAAghB,mBAAmBhhB,MAAO,CACnBtb,OAAA0B,OAAO2qB,QAAS9X,WACnC,KAAe,CACHrS,KAAK+/B,mBAAmBt8B,OAAO2V,MAAMsc,OAAOvL,QAAS9X,WACjE,CACA,CACC,mBAAAouB,CAAoBL,cAAehnB,KAAMsd,YAClC,GAAI0J,gBAAkBhG,mBAAmBhhB,MAAO,CAC5CpZ,KAAK+/B,wBAA8B,EAAA3mB,MAAMsc,OAAO0K,cAAe1J,WAC3E,CACA,CACC,SAAAiK,CAAUxW,QAAS1mB,OAAO2V,KAAM9G,QACzB6X,QAAQ7X,OAASA,OACjB,MAAMpO,QAAUlE,KAAKsqB,SAAS7mB,OAAO6O,QACrCtS,KAAK+/B,mBAAmBt8B,OAAO2V,KAAM9G,QAAQojB,OAAOvL,QAAS,CACzDjmB,SAAUoO,QAAUtS,KAAKkgC,iBAAiBh8B,UAAYA,SAElE,CACI,gBAAA08B,CAAiBzW,QAAS3mB,aAAcC,QACpCzD,KAAK2gC,UAAUxW,QAAS1mB,OAAO,SAAU,MACjD,CACI,aAAAo9B,CAAc1W,QAAS3mB,aAAcC,QACjCzD,KAAK2gC,UAAUxW,QAAS1mB,OAAO,SAAU,KACjD,CACC,wBAAAq9B,GACa,MAAA3W,QAAUnqB,KAAKo5B,YAAYtrB,QACjC,GAAIqc,QAAS,CACTnqB,KAAK2gC,UAAUxW,aAAoB,EAAA,SAAU,MACzD,CACA,CACC,qBAAA4W,GACa,MAAA5W,QAAUnqB,KAAKo5B,YAAYtrB,QACjC,GAAIqc,QAAS,CACTnqB,KAAK2gC,UAAUxW,aAAoB,EAAA,SAAU,KACzD,CACA,CACC,eAAAsT,CAAgBH,kBACT,MAAMziB,KAAO7a,KAAKg7B,MACZziB,MAAAA,UAAWvY,KAAKo5B,YAAYve,KAClC,IAAA,MAAYxP,OAAQ21B,KAAMC,QAASjhC,KAAKw7B,UAAU,CACzCx7B,KAAAqL,QAAQ21B,KAAMC,KAC/B,CACQjhC,KAAKw7B,UAAY,GACjB,MAAM0F,QAAU3oB,UAASvnB,OACzB,MAAMmwC,QAAUtmB,KAAK7pB,OACrB,MAAMwc,MAAQte,KAAKE,IAAI+xC,QAASD,SAChC,GAAI1zB,MAAO,CACFxN,KAAA4mB,MAAM,EAAGpZ,MAC1B,CACQ,GAAI2zB,QAAUD,QAAS,CACnBlhC,KAAKohC,gBAAgBF,QAASC,QAAUD,QAAS5D,iBAC7D,MAAA,GAAmB6D,QAAUD,QAAS,CACrBlhC,KAAAqhC,gBAAgBF,QAASD,QAAUC,QACpD,CACA,CACC,eAAAC,CAAgB93B,MAAOkE,MAAO8vB,iBAAmB,MAC1C,MAAMlwB,KAAOpN,KAAKo5B,YAClB,MAAMve,KAAOzN,KAAKyN,KAClB,MAAMtR,IAAMD,MAAQkE,MAChB,IAAA3b,EACE,MAAAyvC,KAAQzb,MACVA,IAAI70B,QAAUwc,MACd,IAAI3b,EAAIg0B,IAAI70B,OAAS,EAAGa,GAAK0X,IAAK1X,IAAI,CAClCg0B,IAAIh0B,GAAKg0B,IAAIh0B,EAAI2b,MACjC,GAEQ8zB,KAAKzmB,MACL,IAAIhpB,EAAIyX,MAAOzX,EAAI0X,MAAO1X,EAAE,CACxBgpB,KAAKhpB,GAAK,IAAImO,KAAK07B,eAC/B,CACQ,GAAI17B,KAAK0mB,SAAU,CACf4a,KAAKl0B,KAAKQ,QACtB,CACa5N,KAAA4mB,MAAMtd,MAAOkE,OAClB,GAAI8vB,iBAAkB,CAClBt9B,KAAKuhC,eAAe1mB,KAAMvR,MAAOkE,MAAO,QACpD,CACA,CACI,cAAA+zB,CAAepX,QAAS7gB,MAAOkE,MAAO4L,MAAM,CAC/C,eAAAioB,CAAgB/3B,MAAOkE,OAChB,MAAMJ,KAAOpN,KAAKo5B,YAClB,GAAIp5B,KAAK0mB,SAAU,CACf,MAAM8a,QAAUp0B,KAAKQ,QAAQjC,OAAOrC,MAAOkE,OAC3C,GAAIJ,KAAKutB,SAAU,CACfR,YAAY/sB,KAAMo0B,QAClC,CACA,CACap0B,KAAAyN,KAAKlP,OAAOrC,MAAOkE,MAChC,CACC,KAAAi0B,CAAMpzC,MACC,GAAI2R,KAAK0mB,SAAU,CACV1mB,KAAAw7B,UAAUt2B,KAAK7W,KAChC,KAAe,CACH,MAAOgd,OAAQ21B,KAAMC,MAAQ5yC,KACxB2R,KAAAqL,QAAQ21B,KAAMC,KAC/B,CACajhC,KAAAoU,MAAMstB,aAAax8B,KAAK,CACzBlF,KAAKyD,SACFpV,MAEf,CACI,WAAAszC,GACI,MAAMn0B,MAAQo0B,UAAU5wC,OACxBgP,KAAKyhC,MAAM,CACP,kBACAzhC,KAAKg8B,aAAanhB,KAAK7pB,OAASwc,MAChCA,OAEZ,CACI,UAAAq0B,GACI7hC,KAAKyhC,MAAM,CACP,kBACAzhC,KAAKo5B,YAAYve,KAAK7pB,OAAS,EAC/B,GAEZ,CACI,YAAA8wC,GACI9hC,KAAKyhC,MAAM,CACP,kBACA,EACA,GAEZ,CACI,aAAAM,CAAcz4B,MAAOkE,OACjB,GAAIA,MAAO,CACPxN,KAAKyhC,MAAM,CACP,kBACAn4B,MACAkE,OAEhB,CACc,MAAAw0B,SAAWJ,UAAU5wC,OAAS,EACpC,GAAIgxC,SAAU,CACVhiC,KAAKyhC,MAAM,CACP,kBACAn4B,MACA04B,UAEhB,CACA,CACI,cAAAC,GACIjiC,KAAKyhC,MAAM,CACP,kBACA,EACAG,UAAU5wC,QAEtB,EA/kBCkxC,cADKtH,kBACE,WAAW,CAAE,GACpBsH,cAFKtH,kBAEE,qBAAqB,MAC5BsH,cAHKtH,kBAGE,kBAAkB,MAglB1B,SAASuH,kBAAkBtoB,MAAO9Z,MAC1B,IAAC8Z,MAAMuoB,OAAOC,KAAM,CACd,MAAAC,aAAezoB,MAAMof,wBAAwBl5B,MACnD,IAAI4K,OAAS,GACb,IAAA,IAAQ9Y,EAAI,EAAGwR,KAAOi/B,aAAatxC,OAAQa,EAAIwR,KAAMxR,IAAI,CAC5C8Y,OAAAA,OAAO43B,OAAOD,aAAazwC,GAAGsnC,WAAW+F,mBAAmBrlB,OACjF,CACcA,MAAAuoB,OAAOC,KAAOz2B,aAAajB,OAAOrD,KAAK,CAACtX,EAAGC,IAAID,EAAIC,GACjE,CACI,OAAO4pB,MAAMuoB,OAAOC,IACxB,CACC,SAASG,qBAAqBp1B,MAC3B,MAAMyM,MAAQzM,KAAKM,OACnB,MAAM/C,OAASw3B,kBAAkBtoB,MAAOzM,KAAKrN,MAC7C,IAAI3Q,IAAMyqB,MAAM4oB,QACZ,IAAA5wC,EAAGwR,KAAMq/B,KAAMpZ,KACnB,MAAMqZ,iBAAmB,KACjB,GAAAD,OAAS,OAASA,QAAiB,MAAA,CACnC,MACZ,CACY,GAAAl9B,QAAQ8jB,MAAO,CACTl6B,IAAAF,KAAKE,IAAIA,IAAKF,KAAK0X,IAAI87B,KAAOpZ,OAASl6B,IACzD,CACek6B,KAAAoZ,MAEP,IAAA7wC,EAAI,EAAGwR,KAAOsH,OAAO3Z,OAAQa,EAAIwR,OAAQxR,EAAE,CAC3C6wC,KAAO7oB,MAAM1L,iBAAiBxD,OAAO9Y,IACnB8wC,kBAC1B,CACWrZ,UAAA,EACH,IAAAz3B,EAAI,EAAGwR,KAAOwW,MAAM1F,MAAMnjB,OAAQa,EAAIwR,OAAQxR,EAAE,CACzC6wC,KAAA7oB,MAAM+oB,gBAAgB/wC,GACX8wC,kBAC1B,CACW,OAAAvzC,GACX,CACC,SAASyzC,yBAAyBp/B,OAAOq/B,MAAO5+B,QAAS6+B,YACtD,MAAMC,UAAY9+B,QAAQ++B,aAC1B,IAAIt9B,KAAMvG,MACN,GAAAqC,cAAcuhC,WAAY,CACnBr9B,KAAAm9B,MAAM1zC,IAAM8U,QAAQg/B,mBAC3B9jC,MAAQ8E,QAAQi/B,aACxB,KAAW,CACHx9B,KAAOq9B,UAAYD,WACX3jC,MAAA,CAChB,CACW,MAAA,CACHgkC,MAAOz9B,KAAOo9B,WACd3jC,YACAkK,MAAOw5B,MAAMO,OAAO5/B,QAASkC,KAAO,EAE5C,CACC,SAAS29B,0BAA0B7/B,OAAOq/B,MAAO5+B,QAAS6+B,YACvD,MAAMM,OAASP,MAAMO,OACf,MAAAX,KAAOW,OAAO5/B,QACpB,IAAI6lB,KAAO7lB,OAAQ,EAAI4/B,OAAO5/B,OAAQ,GAAK,KACvC4jB,IAAAA,MAAO5jB,OAAQ4/B,OAAOryC,OAAS,EAAIqyC,OAAO5/B,OAAQ,GAAK,KAC3D,MAAM8/B,QAAUr/B,QAAQg/B,mBACxB,GAAI5Z,OAAS,KAAM,CACfA,KAAOoZ,MAAQrb,QAAS,KAAOyb,MAAMv5B,IAAMu5B,MAAMx5B,MAAQ+d,MAAOqb,KACxE,CACI,GAAIrb,QAAS,KAAM,CACfA,MAAOqb,KAAOA,KAAOpZ,IAC7B,CACU,MAAAhgB,MAAQo5B,MAAQA,KAAOxzC,KAAKE,IAAIk6B,KAAMjC,QAAS,EAAIkc,QACzD,MAAM59B,KAAOzW,KAAK0X,IAAIygB,MAAOiC,MAAQ,EAAIia,QAClC,MAAA,CACHH,MAAOz9B,KAAOo9B,WACd3jC,MAAO8E,QAAQi/B,cACf75B,YAER,CACA,SAASk6B,cAAcC,MAAO79B,KAAM+H,OAAQ9b,GACxC,MAAM6xC,WAAa/1B,OAAOiZ,MAAM6c,MAAM,GAAI5xC,GAC1C,MAAM8xC,SAAWh2B,OAAOiZ,MAAM6c,MAAM,GAAI5xC,GACxC,MAAMzC,IAAMF,KAAKE,IAAIs0C,WAAYC,UACjC,MAAMx0C,IAAMD,KAAKC,IAAIu0C,WAAYC,UACjC,IAAIC,SAAWx0C,IACf,IAAIy0C,OAAS10C,IACb,GAAID,KAAK0X,IAAIxX,KAAOF,KAAK0X,IAAIzX,KAAM,CACpBy0C,SAAAz0C,IACF00C,OAAAz0C,GACjB,CACSwW,KAAA+H,OAAOI,MAAQ81B,OACpBj+B,KAAKk+B,QAAU,CACXF,kBACAC,cACAv6B,MAAOo6B,WACPn6B,IAAKo6B,SACLv0C,QACAD,QAER,CACA,SAAS40C,WAAWN,MAAO79B,KAAM+H,OAAQ9b,GACjC,GAAAM,QAAQsxC,OAAQ,CACFD,cAAAC,MAAO79B,KAAM+H,OAAQ9b,EAC3C,KAAW,CACH+T,KAAK+H,OAAOI,MAAQJ,OAAOiZ,MAAM6c,MAAO5xC,EAChD,CACW,OAAA+T,IACX,CACA,SAASo+B,sBAAsB52B,KAAMyN,KAAMvR,MAAOkE,OAC9C,MAAME,OAASN,KAAKM,OACpB,MAAMC,OAASP,KAAKO,OACd,MAAAwwB,OAASzwB,OAAO0wB,YACtB,MAAMC,YAAc3wB,SAAWC,OAC/B,MAAMgZ,OAAS,GACX,IAAA90B,EAAGwR,KAAMuC,KAAM69B,MACf,IAAA5xC,EAAIyX,MAAOjG,KAAOiG,MAAQkE,MAAO3b,EAAIwR,OAAQxR,EAAE,CAC/C4xC,MAAQ5oB,KAAKhpB,GACb+T,KAAO,CAAE,EACJA,KAAA8H,OAAOK,MAAQswB,aAAe3wB,OAAOkZ,MAAMuX,OAAOtsC,GAAIA,GAC3D80B,OAAOzhB,KAAK6+B,WAAWN,MAAO79B,KAAM+H,OAAQ9b,GACpD,CACW,OAAA80B,MACX,CACA,SAASsd,WAAWC,QAChB,OAAOA,QAAUA,OAAON,gBAAa,GAAaM,OAAOL,cAAW,CACxE,CACA,SAASM,QAAQx+B,KAAMgI,OAAQy2B,YAC3B,GAAIz+B,OAAS,EAAG,CACZ,OAAOc,KAAKd,KACpB,CACY,OAAAgI,OAAO02B,eAAiB,OAAW12B,OAAOve,KAAOg1C,WAAa,GAAI,EAC9E,CACA,SAASE,YAAYjyB,YACb,IAAApP,QAASqG,MAAOC,IAAKyJ,IAAKC,OAC9B,GAAIZ,WAAWkyB,WAAY,CACbthC,QAAAoP,WAAW/G,KAAO+G,WAAWpf,EAC/BqW,MAAA,OACFC,IAAA,OACd,KAAW,CACOtG,QAAAoP,WAAW/G,KAAO+G,WAAWvN,EAC/BwE,MAAA,SACFC,IAAA,KACd,CACI,GAAItG,QAAS,CACH+P,IAAA,MACGC,OAAA,OACjB,KAAW,CACGD,IAAA,QACGC,OAAA,KACjB,CACW,MAAA,CACH3J,YACAC,QACAtG,gBACA+P,QACAC,cAER,CACA,SAASuxB,iBAAiBnyB,WAAYnO,QAAS5V,MAAOmV,QAClD,IAAIghC,KAAOvgC,QAAQwgC,cACnB,MAAMn5B,IAAM,CAAE,EACd,IAAKk5B,KAAM,CACPpyB,WAAWqyB,cAAgBn5B,IAC3B,MACR,CACI,GAAIk5B,OAAS,KAAM,CACfpyB,WAAWqyB,cAAgB,CACvB1xB,IAAK,KACLhG,MAAO,KACPiG,OAAQ,KACRlG,KAAM,MAEV,MACR,CACU,MAAAzD,MAAEA,UAAQC,IAAMtG,QAAAA,QAAA+P,IAAUA,WAAMC,QAAYqxB,YAAYjyB,YAC1D,GAAAoyB,OAAS,UAAYn2C,MAAO,CAC5B+jB,WAAWsyB,mBAAqB,KAC3B,IAAAr2C,MAAMmrC,MAAQ,KAAOh2B,OAAO,CACtBghC,KAAAzxB,GACV,MAAW,IAAA1kB,MAAMorC,SAAW,KAAOj2B,OAAO,CAChCghC,KAAAxxB,MACnB,KAAe,CACH1H,IAAIq5B,UAAU3xB,OAAQ3J,MAAOC,IAAKtG,UAAY,KACvCwhC,KAAAzxB,GACnB,CACA,CACIzH,IAAIq5B,UAAUH,KAAMn7B,MAAOC,IAAKtG,UAAY,KAC5CoP,WAAWqyB,cAAgBn5B,GAC/B,CACA,SAASq5B,UAAUH,KAAMz0C,EAAGC,EAAGgT,SAC3B,GAAIA,QAAS,CACFwhC,KAAAI,KAAKJ,KAAMz0C,EAAGC,GACdw0C,KAAAK,SAASL,KAAMx0C,EAAGD,EACjC,KAAW,CACIy0C,KAAAK,SAASL,KAAMz0C,EAAGC,EACjC,CACW,OAAAw0C,IACX,CACA,SAASI,KAAKE,KAAMxhC,GAAIyhC,IACpB,OAAOD,OAASxhC,GAAKyhC,GAAKD,OAASC,GAAKzhC,GAAKwhC,IACjD,CACA,SAASD,SAASh2C,EAAGwa,MAAOC,KACxB,OAAOza,IAAM,QAAUwa,MAAQxa,IAAM,MAAQya,IAAMza,CACvD,CACA,SAASm2C,iBAAiB5yB,YAAY6yB,cAAEA,eAAkB9lC,OACtDiT,WAAW6yB,cAAgBA,gBAAkB,OAAS9lC,QAAU,EAAI,IAAO,EAAI8lC,aACnF,CACA,MAAMC,sBAAsBvK,kBAoC3B,kBAAAqD,CAAmB7wB,KAAMyN,KAAMvR,MAAOkE,OAC/B,OAAOw2B,sBAAsB52B,KAAMyN,KAAMvR,MAAOkE,MACxD,CACC,cAAAuwB,CAAe3wB,KAAMyN,KAAMvR,MAAOkE,OAC3B,OAAOw2B,sBAAsB52B,KAAMyN,KAAMvR,MAAOkE,MACxD,CACC,eAAAwwB,CAAgB5wB,KAAMyN,KAAMvR,MAAOkE,OACtB,MAAAE,OAAEA,OAASC,OAAAA,QAAYP,KAC7B,MAAMkxB,SAAEA,SAAU,IAAAC,SAAMA,SAAU,KAASv+B,KAAK0mB,SAChD,MAAMuR,SAAWvqB,OAAOK,OAAS,IAAMuwB,SAAWC,SAClD,MAAMrG,SAAWvqB,OAAOI,OAAS,IAAMuwB,SAAWC,SAClD,MAAM5X,OAAS,GACX,IAAA90B,EAAGwR,KAAMuC,KAAMxF,IACf,IAAAvO,EAAIyX,MAAOjG,KAAOiG,MAAQkE,MAAO3b,EAAIwR,OAAQxR,EAAE,CAC/CuO,IAAMya,KAAKhpB,GACX+T,KAAO,CAAE,EACJA,KAAA8H,OAAOK,MAAQL,OAAOkZ,MAAMxhB,iBAAiBhF,IAAK63B,UAAWpmC,GAC3D80B,OAAAzhB,KAAK6+B,WAAW3+B,iBAAiBhF,IAAK83B,UAAWtyB,KAAM+H,OAAQ9b,GAClF,CACe,OAAA80B,MACf,CACC,qBAAA+X,CAAsB1sC,MAAO6nB,MAAO8M,OAAQr4B,OACrC82C,MAAM1G,sBAAsB1sC,MAAO6nB,MAAO8M,OAAQr4B,OAClD,MAAM41C,OAASvd,OAAOmd,QACtB,GAAII,QAAUrqB,QAAU7Z,KAAKo5B,YAAYzrB,OAAQ,CAC7C3b,MAAM5C,IAAMF,KAAKE,IAAI4C,MAAM5C,IAAK80C,OAAO90C,KACvC4C,MAAM7C,IAAMD,KAAKC,IAAI6C,MAAM7C,IAAK+0C,OAAO/0C,IACnD,CACA,CACC,cAAAgwC,GACc,OAAA,CACf,CACC,gBAAAC,CAAiB37B,QACV,MAAM2J,KAAOpN,KAAKo5B,YACZ,MAAA1rB,OAAEA,OAASC,OAAAA,QAAYP,KACvB,MAAAuZ,OAAS3mB,KAAKw+B,UAAU/6B,QAC9B,MAAMygC,OAASvd,OAAOmd,QACtB,MAAMpiC,MAAQuiC,WAAWC,QAAU,IAAMA,OAAO56B,MAAQ,KAAO46B,OAAO36B,IAAM,IAAM,GAAKoE,OAAO2xB,iBAAiB3Y,OAAOhZ,OAAOI,OACtH,MAAA,CACHsxB,MAAO,GAAK3xB,OAAO4xB,iBAAiB3Y,OAAOjZ,OAAOK,OAClDrM,YAEZ,CACI,UAAAi6B,GACI37B,KAAKq7B,oBAAsB,KAC3B+J,MAAMzJ,aACN,MAAMvuB,KAAOpN,KAAKo5B,YACbhsB,KAAA9e,MAAQ0R,KAAKg8B,aAAa1tC,KACvC,CACI,MAAAonC,CAAOtc,MACH,MAAMhM,KAAOpN,KAAKo5B,YAClBp5B,KAAKuhC,eAAen0B,KAAKyN,KAAM,EAAGzN,KAAKyN,KAAK7pB,OAAQooB,KAC5D,CACI,cAAAmoB,CAAe8D,KAAM/7B,MAAOkE,MAAO4L,MAC/B,MAAM6jB,OAAQ7jB,OAAS,QACvB,MAAQ3V,MAAAA,OAAQ21B,aAAazrB,OAAEA,SAAe3N,KACxC,MAAAsL,KAAOqC,OAAO23B,eACd,MAAAf,WAAa52B,OAAO02B,eACpB,MAAAvB,MAAQ9iC,KAAKulC,YACnB,MAAMnF,cAAEA,cAAgBD,eAAAA,gBAAoBngC,KAAKsgC,kBAAkBh3B,MAAO8P,MAC1E,IAAA,IAAQvnB,EAAIyX,MAAOzX,EAAIyX,MAAQkE,MAAO3b,IAAI,CAChC,MAAA80B,OAAS3mB,KAAKw+B,UAAU3sC,GAC9B,MAAM2zC,QAAUvI,QAASx7B,cAAcklB,OAAOhZ,OAAOI,OAAS,CAC1DzC,UACAm6B,KAAMn6B,MACNtL,KAAK0lC,yBAAyB7zC,GAClC,MAAM8zC,QAAU3lC,KAAK4lC,yBAAyB/zC,EAAGixC,OACjD,MAAMx0C,OAASq4B,OAAO0S,SAAW,CAAE,GAAE1rB,OAAOI,MAC5C,MAAMsE,WAAa,CACfkyB,sBACAj5B,KAAMk6B,QAAQl6B,KACdq5B,oBAAqBr2C,OAAS21C,WAAWtd,OAAOmd,UAAYrgC,SAAUnV,MAAMmrC,MAAQh2B,SAAUnV,MAAMorC,QACpGzmC,EAAGsxC,WAAaiB,QAAQC,KAAOE,QAAQE,OACvC/gC,EAAGy/B,WAAaoB,QAAQE,OAASL,QAAQC,KACzCnpB,OAAQioB,WAAaoB,QAAQhgC,KAAOzW,KAAK0X,IAAI4+B,QAAQ7/B,MACrDyQ,MAAOmuB,WAAar1C,KAAK0X,IAAI4+B,QAAQ7/B,MAAQggC,QAAQhgC,MAEzD,GAAIw6B,eAAgB,CACL9tB,WAAAnO,QAAUk8B,eAAiBpgC,KAAKw/B,0BAA0B3tC,EAAGwzC,KAAKxzC,GAAGygB,OAAS,SAAW8G,KACpH,CACY,MAAMlV,QAAUmO,WAAWnO,SAAWmhC,KAAKxzC,GAAGqS,QAC7BsgC,iBAAAnyB,WAAYnO,QAAS5V,MAAOmV,QAC5BwhC,iBAAA5yB,WAAYnO,QAAS4+B,MAAM1jC,OAC5CY,KAAK0gC,cAAc2E,KAAKxzC,GAAIA,EAAGwgB,WAAY+G,KACvD,CACA,CACC,UAAA0sB,CAAWv7B,KAAM0vB,WACJ,MAAAvsB,OAAEA,QAAY1N,KAAKo5B,YACzB,MAAM3B,SAAW/pB,OAAOurB,wBAAwBj5B,KAAK+6B,OAAOjV,OAAQ1Y,MAAOA,KAAK+rB,WAAWj1B,QAAQ6hC,SAC7F,MAAA1N,QAAU3qB,OAAOxJ,QAAQm0B,QAC/B,MAAMM,OAAS,GACf,MAAMqN,cAAgBhmC,KAAKo5B,YAAYD,WAAWqF,UAAUvE,WAC5D,MAAMgM,YAAcD,eAAiBA,cAAct4B,OAAOK,MACpD,MAAAm4B,SAAY94B,OACR,MAAAuZ,OAASvZ,KAAKQ,QAAQu4B,KAAMvgC,MAAOA,KAAK8H,OAAOK,QAAUk4B,aAC/D,MAAMllC,IAAM4lB,QAAUA,OAAOvZ,KAAKO,OAAOI,MACzC,GAAItM,cAAcV,MAAQ6G,MAAM7G,KAAM,CAC3B,OAAA,IACvB,GAEQ,IAAA,MAAWqM,QAAQqqB,SAAS,CACxB,GAAIwC,iBAAc,GAAaiM,SAAS94B,MAAO,CAC3C,QAChB,CACY,GAAIirB,UAAY,OAASM,OAAO30B,QAAQoJ,KAAK9e,UAAW,GAAM+pC,eAAY,GAAajrB,KAAK9e,aAAqB,EAAA,CACtGqqC,OAAAzzB,KAAKkI,KAAK9e,MACjC,CACgB,GAAA8e,KAAK3J,QAAU8G,KAAM,CACrB,KAChB,CACA,CACY,IAACouB,OAAO3nC,OAAQ,CAChB2nC,OAAOzzB,UAAc,EACjC,CACe,OAAAyzB,MACf,CACC,cAAAyN,CAAe3iC,QACR,OAAOzD,KAAK8lC,gBAAsBriC,EAAAA,QAAOzS,MACjD,CACI,aAAAq1C,GACW,OAAArmC,KAAKsmC,WAAWt1C,MAC/B,CACI,2BAAAu1C,GACUzsB,MAAAA,QAAS9Z,KAAKoU,MAAM0F,OACpB,MAAA0sB,aAAexmC,KAAKoU,MAAMlQ,QAAQgV,UACxC,OAAOpb,OAAOD,KAAKic,SAAQgM,OAAQ/hB,KAAM+V,QAAO/V,KAAKgK,OAASy4B,cAAc1M,OACpF,CACI,QAAAwM,GACI,MAAMv4B,KAAO,CAAE,EACT,MAAA04B,iBAAmBzmC,KAAKumC,8BAC9B,IAAA,MAAWz4B,WAAW9N,KAAKoU,MAAMyG,KAAK3C,SAAS,CAC3CnK,KAAK1L,eAAerC,KAAKoU,MAAMlQ,QAAQgV,YAAc,IAAMpL,QAAQquB,QAAUruB,QAAQuuB,QAASoK,mBAAqB,IAC/H,CACe,OAAA3oC,OAAOD,KAAKkQ,KAC3B,CACC,cAAA24B,CAAeljC,aAAc4O,KAAM6nB,WAC5B,MAAMtB,OAAS34B,KAAK8lC,WAAWtiC,aAAcy2B,WAC7C,MAAMx2B,OAAQ2O,YAAS,EAAYumB,OAAO30B,QAAQoO,OAAQ,EAC1D,OAAO3O,UAAU,EAAKk1B,OAAO3nC,OAAS,EAAIyS,MAClD,CACC,SAAA8hC,GACO,MAAMxmB,KAAO/e,KAAKkE,QAClB,MAAMkJ,KAAOpN,KAAKo5B,YAClB,MAAM1rB,OAASN,KAAKM,OACpB,MAAM21B,OAAS,GACf,IAAIxxC,EAAGwR,KACH,IAAAxR,EAAI,EAAGwR,KAAO+J,KAAKyN,KAAK7pB,OAAQa,EAAIwR,OAAQxR,EAAE,CACvCwxC,OAAAn+B,KAAKwI,OAAOS,iBAAiBnO,KAAKw+B,UAAU3sC,GAAG6b,OAAOK,MAAOlc,GAChF,CACQ,MAAMoxC,aAAelkB,KAAKkkB,aACpB,MAAA7zC,IAAM6zC,cAAgBT,qBAAqBp1B,MAC1C,MAAA,CACHhe,QACAi0C,cACA/5B,MAAOoE,OAAOi5B,YACdp9B,IAAKmE,OAAOk5B,UACZ7D,WAAY/iC,KAAKomC,iBACjBvsB,MAAOnM,OACPq4B,QAAShnB,KAAKgnB,QACd3mC,MAAO6jC,aAAe,EAAIlkB,KAAKmkB,mBAAqBnkB,KAAKokB,cAErE,CACC,wBAAAuC,CAAyBjiC,QAClB,MAAQ21B,aAAazrB,OAAEA,OAAAgtB,SAASA,SAAWl3B,MAAOD,cAAkBU,SAAWoH,KAAMu7B,UAAYC,aAAAA,eAAqB9mC,KACtH,MAAMokC,WAAayC,WAAa,EAC1B,MAAAlgB,OAAS3mB,KAAKw+B,UAAU/6B,QAC9B,MAAMygC,OAASvd,OAAOmd,QAChB,MAAAiD,SAAW9C,WAAWC,QACxB,IAAAxiC,MAAQilB,OAAOhZ,OAAOI,MAC1B,IAAIzE,MAAQ,EACZ,IAAItY,OAAS2pC,SAAW36B,KAAK23B,WAAWhqB,OAAQgZ,OAAQgU,UAAYj5B,MACpE,IAAI+jC,KAAM9/B,KACV,GAAI3U,SAAW0Q,MAAO,CAClB4H,MAAQtY,OAAS0Q,MACR1Q,OAAA0Q,KACrB,CACQ,GAAIqlC,SAAU,CACVrlC,MAAQwiC,OAAON,SACN5yC,OAAAkzC,OAAOL,OAASK,OAAON,SAC5B,GAAAliC,QAAU,GAAK+E,KAAK/E,SAAW+E,KAAKy9B,OAAOL,QAAS,CAC5Cv6B,MAAA,CACxB,CACqBA,OAAA5H,KACrB,CACQ,MAAMgiC,YAAcjiC,cAAcolC,aAAeE,SAAWF,UAAYv9B,MACpE,IAAAgC,KAAOqC,OAAOQ,iBAAiBu1B,YACnC,GAAI1jC,KAAKoU,MAAM4yB,kBAAkBvjC,QAAQ,CAC9BgiC,KAAA93B,OAAOQ,iBAAiB7E,MAAQtY,OACnD,KAAe,CACIy0C,KAAAn6B,IACnB,CACQ3F,KAAO8/B,KAAOn6B,KACd,GAAIpc,KAAK0X,IAAIjB,MAAQmhC,aAAc,CAC/BnhC,KAAOw+B,QAAQx+B,KAAMgI,OAAQy2B,YAAc0C,aAC3C,GAAIplC,QAAU0iC,WAAY,CACtB94B,MAAQ3F,KAAO,CAC/B,CACkB,MAAAshC,WAAat5B,OAAOu5B,mBAAmB,GACvC,MAAAC,SAAWx5B,OAAOu5B,mBAAmB,GAC3C,MAAM93C,IAAMF,KAAKE,IAAI63C,WAAYE,UACjC,MAAMh4C,IAAMD,KAAKC,IAAI83C,WAAYE,UACjC77B,KAAOpc,KAAKC,IAAID,KAAKE,IAAIkc,KAAMnc,KAAMC,KACrCq2C,KAAOn6B,KAAO3F,KACV,GAAAg1B,WAAaoM,SAAU,CACvBpgB,OAAO0S,QAAQ1rB,OAAOI,MAAM6rB,cAAcp2B,cAAgBmK,OAAOy5B,iBAAiB3B,MAAQ93B,OAAOy5B,iBAAiB97B,KAClI,CACA,CACQ,GAAIA,OAASqC,OAAOQ,iBAAiBi2B,YAAa,CAC9C,MAAMiD,SAAW5gC,KAAKd,MAAQgI,OAAO25B,qBAAqBlD,YAAc,EAChE94B,MAAA+7B,SACA1hC,MAAA0hC,QACpB,CACe,MAAA,CACH1hC,UACA2F,UACAm6B,UACAI,OAAQJ,KAAO9/B,KAAO,EAElC,CACC,wBAAAigC,CAAyBniC,OAAOq/B,OACzB,MAAMjpB,MAAQipB,MAAMjpB,MACpB,MAAM3V,QAAUlE,KAAKkE,QACrB,MAAMgiC,SAAWhiC,QAAQgiC,SACzB,MAAMqB,gBAAkBllC,eAAe6B,QAAQqjC,gBAAiBC,UAChE,IAAI3B,OAAQlgC,KACN,MAAA8hC,UAAYznC,KAAKqmC,gBACvB,GAAIvD,MAAMiD,QAAS,CACf,MAAMhD,WAAamD,SAAWlmC,KAAKomC,eAAe3iC,QAASq/B,MAAMC,WACjE,MAAM/wC,MAAQkS,QAAQ++B,eAAiB,OAASK,0BAA0B7/B,OAAOq/B,MAAO5+B,QAAS6+B,WAAa0E,WAAa5E,yBAAyBp/B,OAAOq/B,MAAO5+B,QAAS6+B,WAAa0E,WACxL,MAAMC,OAAS1nC,KAAKoU,MAAMlQ,QAAQgV,YAAc,IAAMlZ,KAAKg8B,aAAaG,QAAUn8B,KAAKg8B,aAAaK,QAC9F,MAAAsL,WAAa3nC,KAAKsmC,WAAWtiC,QAAQ3B,eAAeqlC,OAAQ1nC,KAAKumC,gCACjE,MAAAqB,WAAa5nC,KAAK0mC,eAAe1mC,KAAKyD,MAAOzD,KAAKo5B,YAAY9qC,MAAO43C,SAAWziC,YAAQ,GAAakkC,WAC3G9B,OAAS7zC,MAAMsX,MAAQtX,MAAMoxC,MAAQwE,WAAa51C,MAAMoxC,MAAQ,EAChEz9B,KAAOzW,KAAKE,IAAIm4C,gBAAiBv1C,MAAMoxC,MAAQpxC,MAAMoN,MACjE,KAAe,CACMymC,OAAAhsB,MAAM1L,iBAAiBnO,KAAKw+B,UAAU/6B,QAAOoW,MAAM9L,MAAOtK,QACnEkC,KAAOzW,KAAKE,IAAIm4C,gBAAiBzE,MAAM1zC,IAAM0zC,MAAM1jC,MAC/D,CACe,MAAA,CACHkM,KAAMu6B,OAASlgC,KAAO,EACtB8/B,KAAMI,OAASlgC,KAAO,EACtBkgC,cACAlgC,UAEZ,CACI,IAAA+tB,GACI,MAAMtmB,KAAOpN,KAAKo5B,YAClB,MAAMzrB,OAASP,KAAKO,OACpB,MAAMk6B,MAAQz6B,KAAKyN,KACnB,MAAMxX,KAAOwkC,MAAM72C,OACnB,IAAIa,EAAI,EACF,KAAAA,EAAIwR,OAAQxR,EAAE,CAChB,GAAImO,KAAKw+B,UAAU3sC,GAAG8b,OAAOI,QAAU,OAAS85B,MAAMh2C,GAAG6oC,OAAQ,CAC7DmN,MAAMh2C,GAAG6hC,KAAK1zB,KAAK+V,KACnC,CACA,CACA,EAnSImsB,cADEiD,cACK,KAAK,OACfjD,cAFKiD,cAEE,WAAW,CACX1J,mBAAoB,MACpBC,gBAAiB,MACjBwH,mBAAoB,GACpBC,cAAe,GACf4C,QAAS,KACTrzB,WAAY,CACRjB,QAAS,CACL1R,KAAM,SACNsS,WAAY,CACR,IACA,IACA,OACA,QACA,cAKnB6vB,cArBKiD,cAqBE,YAAY,CACZrrB,OAAQ,CACJguB,QAAS,CACL/nC,KAAM,WACNqV,OAAQ,KACRK,KAAM,CACFL,OAAQ,OAGhB2yB,QAAS,CACLhoC,KAAM,SACNsV,YAAa,SAuQ7B,MAAM2yB,yBAAyBpN,kBA2B3B,UAAAe,GACI37B,KAAKq7B,oBAAsB,KAC3B+J,MAAMzJ,YACd,CACC,kBAAAsC,CAAmB7wB,KAAMyN,KAAMvR,MAAOkE,OAC/B,MAAMmZ,OAASye,MAAMnH,mBAAmB7wB,KAAMyN,KAAMvR,MAAOkE,OAC3D,IAAA,IAAQ3b,EAAI,EAAGA,EAAI80B,OAAO31B,OAAQa,IAAI,CAClC80B,OAAO90B,GAAGiyC,QAAU9jC,KAAKw/B,0BAA0B3tC,EAAIyX,OAAO0T,MAC1E,CACe,OAAA2J,MACf,CACC,cAAAoX,CAAe3wB,KAAMyN,KAAMvR,MAAOkE,OAC3B,MAAMmZ,OAASye,MAAMrH,eAAe3wB,KAAMyN,KAAMvR,MAAOkE,OACvD,IAAA,IAAQ3b,EAAI,EAAGA,EAAI80B,OAAO31B,OAAQa,IAAI,CAC5B,MAAA+T,KAAOiV,KAAKvR,MAAQzX,GAC1B80B,OAAO90B,GAAGiyC,QAAUzhC,eAAeuD,KAAK,GAAI5F,KAAKw/B,0BAA0B3tC,EAAIyX,OAAO0T,OAClG,CACe,OAAA2J,MACf,CACC,eAAAqX,CAAgB5wB,KAAMyN,KAAMvR,MAAOkE,OAC5B,MAAMmZ,OAASye,MAAMpH,gBAAgB5wB,KAAMyN,KAAMvR,MAAOkE,OACxD,IAAA,IAAQ3b,EAAI,EAAGA,EAAI80B,OAAO31B,OAAQa,IAAI,CAC5B,MAAA+T,KAAOiV,KAAKvR,MAAQzX,GAC1B80B,OAAO90B,GAAGiyC,QAAUzhC,eAAeuD,MAAQA,KAAKjV,IAAMiV,KAAKjV,EAAGqP,KAAKw/B,0BAA0B3tC,EAAIyX,OAAO0T,OACpH,CACe,OAAA2J,MACf,CACC,cAAAwY,GACa,MAAAtkB,KAAO7a,KAAKo5B,YAAYve,KAC9B,IAAI1rB,IAAM,EACV,IAAA,IAAQ0C,EAAIgpB,KAAK7pB,OAAS,EAAGa,GAAK,IAAKA,EAAE,CACrC1C,IAAMD,KAAKC,IAAIA,IAAK0rB,KAAKhpB,GAAG8T,KAAK3F,KAAKw/B,0BAA0B3tC,IAAM,EAClF,CACQ,OAAO1C,IAAM,GAAKA,GAC1B,CACC,gBAAAiwC,CAAiB37B,QACV,MAAM2J,KAAOpN,KAAKo5B,YAClB,MAAM+E,OAASn+B,KAAKoU,MAAMyG,KAAKsjB,QAAU,GACnC,MAAA1vB,OAAEA,OAASC,OAAAA,QAAYtB,KACvB,MAAAuZ,OAAS3mB,KAAKw+B,UAAU/6B,QAC9B,MAAMxQ,EAAIwb,OAAO6wB,iBAAiB3Y,OAAO1zB,GACzC,MAAM6R,EAAI4J,OAAO4wB,iBAAiB3Y,OAAO7hB,GACzC,MAAMnU,EAAIg2B,OAAOmd,QACV,MAAA,CACHzE,MAAOlB,OAAO16B,SAAU,GACxB/B,MAAO,IAAMzO,EAAI,KAAO6R,GAAKnU,EAAI,KAAOA,EAAI,IAAM,IAE9D,CACI,MAAA+kC,CAAOtc,MACG,MAAA/L,OAASrN,KAAKo5B,YAAYve,KAChC7a,KAAKuhC,eAAel0B,OAAQ,EAAGA,OAAOrc,OAAQooB,KACtD,CACI,cAAAmoB,CAAel0B,OAAQ/D,MAAOkE,MAAO4L,MACjC,MAAM6jB,OAAQ7jB,OAAS,QACvB,MAAM1L,OAAEA,OAAAC,OAASA,QAAY3N,KAAKo5B,YAClC,MAAMgH,cAAEA,cAAgBD,eAAAA,gBAAoBngC,KAAKsgC,kBAAkBh3B,MAAO8P,MAC1E,MAAMkgB,MAAQ5rB,OAAOK,KACrB,MAAMwrB,MAAQ5rB,OAAOI,KACrB,IAAA,IAAQlc,EAAIyX,MAAOzX,EAAIyX,MAAQkE,MAAO3b,IAAI,CAChC,MAAAyc,MAAQjB,OAAOxb,GACrB,MAAM80B,QAAUsW,QAASj9B,KAAKw+B,UAAU3sC,GACxC,MAAMwgB,WAAa,CAAE,EACrB,MAAMoW,OAASpW,WAAWinB,OAAS2D,OAAQvvB,OAAOw5B,mBAAmB,IAAOx5B,OAAOS,iBAAiBwY,OAAO2S,QAC3G,MAAM5Q,OAASrW,WAAWknB,OAAS0D,OAAQtvB,OAAO23B,eAAiB33B,OAAOQ,iBAAiBwY,OAAO4S,QAClGlnB,WAAW0U,KAAOnf,MAAM6gB,SAAW7gB,MAAM8gB,QACzC,GAAIyX,eAAgB,CACL9tB,WAAAnO,QAAUk8B,eAAiBpgC,KAAKw/B,0BAA0B3tC,EAAGyc,MAAMgE,OAAS,SAAW8G,MAClG,GAAI6jB,OAAO,CACP5qB,WAAWnO,QAAQ8Y,OAAS,CAChD,CACA,CACYhd,KAAK0gC,cAAcpyB,MAAOzc,EAAGwgB,WAAY+G,KACrD,CACA,CACC,yBAAAomB,CAA0B/7B,OAAO2V,MACpB,MAAAuN,OAAS3mB,KAAKw+B,UAAU/6B,QAC9B,IAAIkH,OAASy6B,MAAM5F,0BAA0B/7B,OAAO2V,MACpD,GAAIzO,OAAOksB,QAAS,CAChBlsB,OAAS7M,OAAO0B,OAAO,CAAA,EAAImL,OAAQ,CAC/BksB,QAAS,OAEzB,CACQ,MAAM7Z,OAASrS,OAAOqS,OACtB,GAAI5D,OAAS,SAAU,CACnBzO,OAAOqS,OAAS,CAC5B,CACQrS,OAAOqS,QAAU3a,eAAeskB,QAAUA,OAAOmd,QAAS9mB,QACnD,OAAArS,MACf,EAlHIu3B,cADE8F,iBACK,KAAK,UACf9F,cAFK8F,iBAEE,WAAW,CACXvM,mBAAoB,MACpBC,gBAAiB,QACjBhpB,WAAY,CACRjB,QAAS,CACL1R,KAAM,SACNsS,WAAY,CACR,IACA,IACA,cACA,cAKnB6vB,cAjBK8F,iBAiBE,YAAY,CACZluB,OAAQ,CACJ7mB,EAAG,CACC8M,KAAM,UAEV+E,EAAG,CACC/E,KAAM,aA+FtB,SAASkoC,kBAAkBlrB,SAAUmrB,cAAeC,QAChD,IAAIC,OAAS,EACb,IAAIC,OAAS,EACb,IAAInd,QAAU,EACd,IAAIC,QAAU,EACd,GAAI+c,cAAgBliC,IAAK,CACrB,MAAMsiC,WAAavrB,SACnB,MAAMwrB,SAAWD,WAAaJ,cACxB,MAAAM,OAASt5C,KAAKmhB,IAAIi4B,YAClB,MAAAG,OAASv5C,KAAKkgB,IAAIk5B,YAClB,MAAAI,KAAOx5C,KAAKmhB,IAAIk4B,UAChB,MAAAI,KAAOz5C,KAAKkgB,IAAIm5B,UACtB,MAAMK,QAAU,CAAC//B,MAAO7Y,EAAGC,IAAIoZ,cAAcR,MAAOy/B,WAAYC,SAAU,MAAQ,EAAIr5C,KAAKC,IAAIa,EAAGA,EAAIm4C,OAAQl4C,EAAGA,EAAIk4C,QACrH,MAAMU,QAAU,CAAChgC,MAAO7Y,EAAGC,IAAIoZ,cAAcR,MAAOy/B,WAAYC,SAAU,OAAQ,EAAKr5C,KAAKE,IAAIY,EAAGA,EAAIm4C,OAAQl4C,EAAGA,EAAIk4C,QACtH,MAAMW,KAAOF,QAAQ,EAAGJ,OAAQE,MAChC,MAAMK,KAAOH,QAAQviC,QAASoiC,OAAQE,MACtC,MAAMK,KAAOH,QAAQ9iC,GAAIyiC,OAAQE,MACjC,MAAMO,KAAOJ,QAAQ9iC,GAAKM,QAASoiC,OAAQE,MAC3CP,QAAUU,KAAOE,MAAQ,EACzBX,QAAUU,KAAOE,MAAQ,EACf/d,UAAE4d,KAAOE,MAAQ,EACjB7d,UAAE4d,KAAOE,MAAQ,CACnC,CACW,MAAA,CACHb,cACAC,cACAnd,gBACAC,gBAER,CACA,MAAM+d,2BAA2BtO,kBAuE7B,WAAA96B,CAAYsU,MAAO5Q,cACf4hC,MAAMhxB,MAAO5Q,cACbxD,KAAKq7B,oBAAsB,KAC3Br7B,KAAKmpC,iBAAc,EACnBnpC,KAAKopC,iBAAc,EACnBppC,KAAKkrB,aAAU,EACflrB,KAAKmrB,aAAU,CACvB,CACI,UAAAyQ,GAAa,CAChB,KAAAhV,CAAMtd,MAAOkE,OACA,MAAAqN,KAAO7a,KAAKg8B,aAAanhB,KAC/B,MAAMzN,KAAOpN,KAAKo5B,YACd,GAAAp5B,KAAK0mB,WAAa,MAAO,CACzBtZ,KAAKQ,QAAUiN,IAC3B,KAAe,CACH,IAAIwuB,OAAUx3C,KAAKgpB,KAAKhpB,IACxB,GAAIkQ,SAAS8Y,KAAKvR,QAAS,CACvB,MAAMvF,IAAEA,IAAK,SAAa/D,KAAK0mB,SAC/B2iB,OAAUx3C,KAAKuT,iBAAiByV,KAAKhpB,IAAIkS,IACzD,CACY,IAAIlS,EAAGwR,KACH,IAAAxR,EAAIyX,MAAOjG,KAAOiG,MAAQkE,MAAO3b,EAAIwR,OAAQxR,EAAE,CAC/Cub,KAAKQ,QAAQ/b,GAAKw3C,OAAOx3C,EACzC,CACA,CACA,CACC,YAAAy3C,GACO,OAAOphC,UAAUlI,KAAKkE,QAAQ6Y,SAAW,GACjD,CACC,iBAAAwsB,GACc,OAAArhC,UAAUlI,KAAKkE,QAAQgkC,cACtC,CACC,mBAAAsB,GACO,IAAIp6C,IAAM4W,IACV,IAAI7W,KAAO6W,IACH,IAAA,IAAAnU,EAAI,EAAGA,EAAImO,KAAKoU,MAAMyG,KAAK3C,SAASlnB,SAAUa,EAAE,CACpD,GAAImO,KAAKoU,MAAMq1B,iBAAiB53C,IAAMmO,KAAKoU,MAAM0oB,eAAejrC,GAAGkO,OAASC,KAAK+6B,MAAO,CACpF,MAAM5B,WAAan5B,KAAKoU,MAAM0oB,eAAejrC,GAAGsnC,WAC1C,MAAApc,SAAWoc,WAAWmQ,eACtB,MAAApB,cAAgB/O,WAAWoQ,oBAC3Bn6C,IAAAF,KAAKE,IAAIA,IAAK2tB,UACpB5tB,IAAMD,KAAKC,IAAIA,IAAK4tB,SAAWmrB,cAC/C,CACA,CACe,MAAA,CACHnrB,SAAU3tB,IACV84C,cAAe/4C,IAAMC,IAEjC,CACC,MAAAsmC,CAAOtc,MACA,MAAMhF,MAAQpU,KAAKoU,MACb,MAAA8d,UAAEA,WAAe9d,MACvB,MAAMhH,KAAOpN,KAAKo5B,YAClB,MAAMsQ,KAAOt8B,KAAKyN,KACZ,MAAA8uB,QAAU3pC,KAAK4pC,oBAAsB5pC,KAAK6pC,aAAaH,MAAQ1pC,KAAKkE,QAAQylC,QAClF,MAAMG,QAAU56C,KAAKC,KAAKD,KAAKE,IAAI8iC,UAAU9b,MAAO8b,UAAU5V,QAAUqtB,SAAW,EAAG,GAChF,MAAAxB,OAASj5C,KAAKE,IAAIkT,aAAatC,KAAKkE,QAAQikC,OAAQ2B,SAAU,GACpE,MAAMC,YAAc/pC,KAAKgqC,eAAehqC,KAAKyD,OAC7C,MAAMykC,cAAEA,cAAAnrB,SAAgBA,UAAc/c,KAAKwpC,sBACrC,MAAApB,OAAEA,cAASC,OAASnd,QAAAA,QAAAC,QAAUA,SAAa8c,kBAAkBlrB,SAAUmrB,cAAeC,QACtF,MAAA1nB,UAAYyR,UAAU9b,MAAQuzB,SAAWvB,OACzC,MAAArc,WAAamG,UAAU5V,OAASqtB,SAAWtB,OAC3C,MAAA4B,UAAY/6C,KAAKC,IAAID,KAAKE,IAAIqxB,SAAUsL,WAAa,EAAG,GAC9D,MAAMqd,YAAc1mC,YAAY1C,KAAKkE,QAAQ8Y,OAAQitB,WACrD,MAAMd,YAAcj6C,KAAKC,IAAIi6C,YAAcjB,OAAQ,GACnD,MAAM+B,cAAgBd,YAAcD,aAAenpC,KAAKmqC,gCACxDnqC,KAAKkrB,QAAUA,QAAUke,YACzBppC,KAAKmrB,QAAUA,QAAUie,YACpBh8B,KAAAg9B,MAAQpqC,KAAKqqC,iBAClBrqC,KAAKopC,YAAcA,YAAcc,aAAelqC,KAAKsqC,qBAAqBtqC,KAAKyD,OAC/EzD,KAAKmpC,YAAcj6C,KAAKC,IAAI6Q,KAAKopC,YAAcc,aAAeH,YAAa,GAC3E/pC,KAAKuhC,eAAemI,KAAM,EAAGA,KAAK14C,OAAQooB,KAClD,CACC,cAAAmxB,CAAe14C,EAAGorC,QACX,MAAMle,KAAO/e,KAAKkE,QAClB,MAAMkJ,KAAOpN,KAAKo5B,YACZ,MAAA8O,cAAgBloC,KAAKupC,oBAC3B,GAAItM,QAASle,KAAKxM,UAAUi4B,gBAAkBxqC,KAAKoU,MAAM4yB,kBAAkBn1C,IAAMub,KAAKQ,QAAQ/b,KAAO,MAAQub,KAAKyN,KAAKhpB,GAAG6oC,OAAQ,CACvH,OAAA,CACnB,CACQ,OAAO16B,KAAKyqC,uBAAuBr9B,KAAKQ,QAAQ/b,GAAKq2C,cAAgBliC,IAC7E,CACI,cAAAu7B,CAAemI,KAAMpgC,MAAOkE,MAAO4L,MAC/B,MAAM6jB,OAAQ7jB,OAAS,QACvB,MAAMhF,MAAQpU,KAAKoU,MACnB,MAAM8d,UAAY9d,MAAM8d,UACxB,MAAMnT,KAAO3K,MAAMlQ,QACnB,MAAMwmC,cAAgB3rB,KAAKxM,UAC3B,MAAMo4B,SAAWzY,UAAUnlB,KAAOmlB,UAAUllB,OAAS,EACrD,MAAM49B,SAAW1Y,UAAUlf,IAAMkf,UAAUjf,QAAU,EAC/C,MAAA43B,aAAe5N,QAASyN,cAAcG,aACtC,MAAA1B,YAAc0B,aAAe,EAAI7qC,KAAKmpC,YACtC,MAAAC,YAAcyB,aAAe,EAAI7qC,KAAKopC,YAC5C,MAAMhJ,cAAEA,cAAgBD,eAAAA,gBAAoBngC,KAAKsgC,kBAAkBh3B,MAAO8P,MACtE,IAAAkvB,WAAatoC,KAAKspC,eAClB,IAAAz3C,EACJ,IAAIA,EAAI,EAAGA,EAAIyX,QAASzX,EAAE,CACRy2C,YAAAtoC,KAAKuqC,eAAe14C,EAAGorC,OACjD,CACQ,IAAIprC,EAAIyX,MAAOzX,EAAIyX,MAAQkE,QAAS3b,EAAE,CAClC,MAAMq2C,cAAgBloC,KAAKuqC,eAAe14C,EAAGorC,QACvC,MAAA3f,IAAMosB,KAAK73C,GACjB,MAAMwgB,WAAa,CACfpf,EAAG03C,QAAU3qC,KAAKkrB,QAClBpmB,EAAG8lC,QAAU5qC,KAAKmrB,QAClBmd,sBACAC,SAAUD,WAAaJ,cACvBA,4BACAkB,wBACAD,yBAEJ,GAAIhJ,eAAgB,CACL9tB,WAAAnO,QAAUk8B,eAAiBpgC,KAAKw/B,0BAA0B3tC,EAAGyrB,IAAIhL,OAAS,SAAW8G,KAChH,CAC0BkvB,YAAAJ,cACdloC,KAAK0gC,cAAcpjB,IAAKzrB,EAAGwgB,WAAY+G,KACnD,CACA,CACI,cAAAixB,GACI,MAAMj9B,KAAOpN,KAAKo5B,YAClB,MAAM0R,SAAW19B,KAAKyN,KACtB,IAAIuvB,MAAQ,EACR,IAAAv4C,EACJ,IAAIA,EAAI,EAAGA,EAAIi5C,SAAS95C,OAAQa,IAAI,CAC1B,MAAA6P,MAAQ0L,KAAKQ,QAAQ/b,GAC3B,GAAI6P,QAAU,OAASkG,MAAMlG,QAAU1B,KAAKoU,MAAM4yB,kBAAkBn1C,KAAOi5C,SAASj5C,GAAG6oC,OAAQ,CAClF0P,OAAAl7C,KAAK0X,IAAIlF,MAClC,CACA,CACe,OAAA0oC,KACf,CACI,sBAAAK,CAAuB/oC,OACb,MAAA0oC,MAAQpqC,KAAKo5B,YAAYgR,MAC/B,GAAIA,MAAQ,IAAMxiC,MAAMlG,OAAQ,CAC5B,OAAOsE,KAAO9W,KAAK0X,IAAIlF,OAAS0oC,MAC5C,CACe,OAAA,CACf,CACI,gBAAAhL,CAAiB37B,QACb,MAAM2J,KAAOpN,KAAKo5B,YAClB,MAAMhlB,MAAQpU,KAAKoU,MACnB,MAAM+pB,OAAS/pB,MAAMyG,KAAKsjB,QAAU,GAC9B,MAAAz8B,MAAQmS,aAAazG,KAAKQ,QAAQnK,QAAQ2Q,MAAMlQ,QAAQmP,QACvD,MAAA,CACHgsB,MAAOlB,OAAO16B,SAAU,GACxB/B,YAEZ,CACI,iBAAAkoC,CAAkBF,MACd,IAAIv6C,IAAM,EACV,MAAMilB,MAAQpU,KAAKoU,MACf,IAAAviB,EAAGwR,KAAM+J,KAAM+rB,WAAYj1B,QAC/B,IAAKwlC,KAAM,CACH,IAAA73C,EAAI,EAAGwR,KAAO+Q,MAAMyG,KAAK3C,SAASlnB,OAAQa,EAAIwR,OAAQxR,EAAE,CACpD,GAAAuiB,MAAMq1B,iBAAiB53C,GAAI,CACpBub,KAAAgH,MAAM0oB,eAAejrC,GAC5B63C,KAAOt8B,KAAKyN,KACZse,WAAa/rB,KAAK+rB,WAClB,KACpB,CACA,CACA,CACQ,IAAKuQ,KAAM,CACA,OAAA,CACnB,CACY,IAAA73C,EAAI,EAAGwR,KAAOqmC,KAAK14C,OAAQa,EAAIwR,OAAQxR,EAAE,CAC/BqS,QAAAi1B,WAAWqG,0BAA0B3tC,GAC3C,GAAAqS,QAAQ6mC,cAAgB,QAAS,CAC3B57C,IAAAD,KAAKC,IAAIA,IAAK+U,QAAQ2Z,aAAe,EAAG3Z,QAAQ8mC,kBAAoB,EAC1F,CACA,CACe,OAAA77C,GACf,CACI,YAAA06C,CAAaH,MACT,IAAIv6C,IAAM,EACF,IAAA,IAAA0C,EAAI,EAAGwR,KAAOqmC,KAAK14C,OAAQa,EAAIwR,OAAQxR,EAAE,CACvC,MAAAqS,QAAUlE,KAAKw/B,0BAA0B3tC,GACzC1C,IAAAD,KAAKC,IAAIA,IAAK+U,QAAQkR,QAAU,EAAGlR,QAAQ+mC,aAAe,EAC5E,CACe,OAAA97C,GACf,CACC,oBAAAm7C,CAAqB9mC,cACd,IAAI0nC,iBAAmB,EACvB,IAAA,IAAQr5C,EAAI,EAAGA,EAAI2R,eAAgB3R,EAAE,CACjC,GAAImO,KAAKoU,MAAMq1B,iBAAiB53C,GAAI,CACZq5C,kBAAAlrC,KAAKgqC,eAAen4C,EACxD,CACA,CACe,OAAAq5C,gBACf,CACC,cAAAlB,CAAexmC,cACR,OAAOtU,KAAKC,IAAIkT,eAAerC,KAAKoU,MAAMyG,KAAK3C,SAAS1U,cAAcjD,OAAQ,GAAI,EAC1F,CACC,6BAAA4pC,GACO,OAAOnqC,KAAKsqC,qBAAqBtqC,KAAKoU,MAAMyG,KAAK3C,SAASlnB,SAAW,CAC7E,EAzQIkxC,cADEgH,mBACK,KAAK,YACfhH,cAFKgH,mBAEE,WAAW,CACXzN,mBAAoB,MACpBC,gBAAiB,MACjBnpB,UAAW,CACPi4B,cAAe,KACfK,aAAc,OAElBn4B,WAAY,CACRjB,QAAS,CACL1R,KAAM,SACNsS,WAAY,CACR,gBACA,WACA,cACA,cACA,aACA,IACA,IACA,SACA,cACA,aAIZ81B,OAAQ,MACRprB,SAAU,EACVmrB,cAAe,IACflrB,OAAQ,OACR2sB,QAAS,EACTzwB,UAAW,MAEfgpB,cAjCEgH,mBAiCK,cAAc,CACjB/2B,YAAcC,MAAOA,OAAS,UAC9BF,WAAaE,MAAOA,OAAS,YAAcA,KAAKkF,WAAW,gBAAkBlF,KAAKkF,WAAW,qBAEpG4qB,cArCKgH,mBAqCE,YAAY,CACZxc,YAAa,EACb/S,QAAS,CACLwxB,OAAQ,CACJhN,OAAQ,CACJ,cAAAiN,CAAgBh3B,OACZ,MAAMyG,KAAOzG,MAAMyG,KACnB,GAAIA,KAAKsjB,OAAOntC,QAAU6pB,KAAK3C,SAASlnB,OAAQ,CACtC,MAAEmtC,QAAQrhB,WAAEA,WAAaxc,MAAAA,SAAc8T,MAAM+2B,OAAOjnC,QAC1D,OAAO2W,KAAKsjB,OAAO/rC,IAAI,CAACitC,MAAOxtC,KACrB,MAAAub,KAAOgH,MAAM0oB,eAAe,GAClC,MAAMnkB,MAAQvL,KAAK+rB,WAAW7O,SAASz4B,GAChC,MAAA,CACHykB,KAAM+oB,MACNpgB,UAAWtG,MAAMX,gBACjB8H,YAAanH,MAAMV,YACnBozB,UAAW/qC,OACXoV,UAAWiD,MAAMkF,YACjBf,sBACA4d,QAAStmB,MAAM4yB,kBAAkBn1C,GACjC4R,MAAO5R,IAG3C,CACwB,MAAO,EAC/B,GAEgB,OAAA4nB,CAASrpB,EAAGk7C,WAAYH,QACbA,OAAA/2B,MAAMm3B,qBAAqBD,WAAW7nC,OAC7C0nC,OAAO/2B,MAAMshB,QACjC,MA0MA,MAAM8V,uBAAuB5Q,kBAkBzB,UAAAe,GACI37B,KAAKq7B,oBAAsB,KAC3Br7B,KAAKs7B,mBAAqB,KAC1B8J,MAAMzJ,YACd,CACI,MAAAjG,CAAOtc,MACH,MAAMhM,KAAOpN,KAAKo5B,YACZ,MAAEtrB,QAASuR,KAAOxE,KAAMxN,OAAS,GAAEo+B,SAAGA,UAAcr+B,KACpD,MAAAE,mBAAqBtN,KAAKoU,MAAMisB,oBACtC,IAAI/2B,MAAEA,MAAQkE,MAAAA,OAAWL,iCAAiCC,KAAMC,OAAQC,oBACxEtN,KAAKm7B,WAAa7xB,MAClBtJ,KAAKo7B,WAAa5tB,MACd,GAAAgB,oBAAoBpB,MAAO,CACnB9D,MAAA,EACRkE,MAAQH,OAAOrc,MAC3B,CACQquB,KAAK2R,OAAShxB,KAAKoU,MACnBiL,KAAK8R,cAAgBnxB,KAAKyD,MACrB4b,KAAAqsB,aAAeD,SAASC,WAC7BrsB,KAAKhS,OAASA,OACR,MAAAnJ,QAAUlE,KAAKu/B,6BAA6BnmB,MAC9C,IAACpZ,KAAKkE,QAAQ6V,SAAU,CACxB7V,QAAQ2Z,YAAc,CAClC,CACgB3Z,QAAAorB,QAAUtvB,KAAKkE,QAAQorB,QAC1BtvB,KAAA0gC,cAAcrhB,UAAiB,EAAA,CAChCssB,UAAWr+B,mBACXpJ,iBACDkV,MACHpZ,KAAKuhC,eAAel0B,OAAQ/D,MAAOkE,MAAO4L,KAClD,CACI,cAAAmoB,CAAel0B,OAAQ/D,MAAOkE,MAAO4L,MACjC,MAAM6jB,OAAQ7jB,OAAS,QACvB,MAAM1L,OAAEA,OAASC,OAAAA,OAAAgtB,SAASA,SAAW8Q,SAAAA,UAAczrC,KAAKo5B,YACxD,MAAMgH,cAAEA,cAAgBD,eAAAA,gBAAoBngC,KAAKsgC,kBAAkBh3B,MAAO8P,MAC1E,MAAMkgB,MAAQ5rB,OAAOK,KACrB,MAAMwrB,MAAQ5rB,OAAOI,KACrB,MAAMF,SAAEA,SAAAyhB,QAAWA,SAAatvB,KAAKkE,QACrC,MAAM0nC,aAAejkC,SAASkG,UAAYA,SAAW5L,OAAOkE,kBAC5D,MAAM0lC,aAAe7rC,KAAKoU,MAAMisB,qBAAuBpD,QAAS7jB,OAAS,OACzE,MAAM7P,IAAMD,MAAQkE,MACpB,MAAMs+B,YAAcz+B,OAAOrc,OAC3B,IAAI+6C,WAAaziC,MAAQ,GAAKtJ,KAAKw+B,UAAUl1B,MAAQ,GACrD,IAAA,IAAQzX,EAAI,EAAGA,EAAIi6C,cAAej6C,EAAE,CAC1B,MAAAyc,MAAQjB,OAAOxb,GACf,MAAAwgB,WAAaw5B,aAAev9B,MAAQ,CAAE,EACxC,GAAAzc,EAAIyX,OAASzX,GAAK0X,IAAK,CACvB8I,WAAW0U,KAAO,KAClB,QAChB,CACkB,MAAAJ,OAAS3mB,KAAKw+B,UAAU3sC,GAC9B,MAAMm6C,SAAWvqC,cAAcklB,OAAO4S,QAChC,MAAA9Q,OAASpW,WAAWinB,OAAS5rB,OAAOS,iBAAiBwY,OAAO2S,OAAQznC,GACpE,MAAA62B,OAASrW,WAAWknB,OAAS0D,QAAS+O,SAAWr+B,OAAO23B,eAAiB33B,OAAOQ,iBAAiBwsB,SAAW36B,KAAK23B,WAAWhqB,OAAQgZ,OAAQgU,UAAYhU,OAAO4S,OAAQ1nC,GAC7KwgB,WAAW0U,KAAOnf,MAAM6gB,SAAW7gB,MAAM8gB,SAAWsjB,SACzC35B,WAAAke,KAAO1+B,EAAI,GAAK3C,KAAK0X,IAAI+f,OAAO2S,OAASyS,WAAWzS,QAAUsS,aACzE,GAAItc,QAAS,CACTjd,WAAWsU,OAASA,OACTtU,WAAA6nB,IAAMuR,SAAS5wB,KAAKhpB,EAC/C,CACY,GAAIsuC,eAAgB,CACL9tB,WAAAnO,QAAUk8B,eAAiBpgC,KAAKw/B,0BAA0B3tC,EAAGyc,MAAMgE,OAAS,SAAW8G,KAClH,CACY,IAAKyyB,aAAc,CACf7rC,KAAK0gC,cAAcpyB,MAAOzc,EAAGwgB,WAAY+G,KACzD,CACyB2yB,WAAAplB,MACzB,CACA,CACC,cAAAwY,GACO,MAAM/xB,KAAOpN,KAAKo5B,YAClB,MAAMtrB,QAAUV,KAAKU,QACrB,MAAMmI,OAASnI,QAAQ5J,SAAW4J,QAAQ5J,QAAQ2Z,aAAe,EAC3D,MAAAhD,KAAOzN,KAAKyN,MAAQ,GACtB,IAACA,KAAK7pB,OAAQ,CACP,OAAAilB,MACnB,CACc,MAAAiR,WAAarM,KAAK,GAAGlV,KAAK3F,KAAKw/B,0BAA0B,IAC/D,MAAMyM,UAAYpxB,KAAKA,KAAK7pB,OAAS,GAAG2U,KAAK3F,KAAKw/B,0BAA0B3kB,KAAK7pB,OAAS,IAC1F,OAAO9B,KAAKC,IAAI8mB,OAAQiR,WAAY+kB,WAAa,CACzD,CACI,IAAAvY,GACI,MAAMtmB,KAAOpN,KAAKo5B,YAClBhsB,KAAKU,QAAQo+B,oBAAoBlsC,KAAKoU,MAAM8d,UAAW9kB,KAAKM,OAAOK,MACnEq3B,MAAM1R,MACd,EAtGIwO,cADEsJ,eACK,KAAK,QACftJ,cAFKsJ,eAEE,WAAW,CACX/P,mBAAoB,OACpBC,gBAAiB,QACjB3hB,SAAU,KACVlM,SAAU,QAEjBq0B,cARKsJ,eAQE,YAAY,CACZ1xB,OAAQ,CACJguB,QAAS,CACL/nC,KAAM,YAEVgoC,QAAS,CACLhoC,KAAM,aA4FtB,MAAMosC,4BAA4BvR,kBA0E9B,WAAA96B,CAAYsU,MAAO5Q,cACf4hC,MAAMhxB,MAAO5Q,cACbxD,KAAKmpC,iBAAc,EACnBnpC,KAAKopC,iBAAc,CAC3B,CACI,gBAAAhK,CAAiB37B,QACb,MAAM2J,KAAOpN,KAAKo5B,YAClB,MAAMhlB,MAAQpU,KAAKoU,MACnB,MAAM+pB,OAAS/pB,MAAMyG,KAAKsjB,QAAU,GAC9B,MAAAz8B,MAAQmS,aAAazG,KAAKQ,QAAQnK,QAAO9S,EAAGyjB,MAAMlQ,QAAQmP,QACzD,MAAA,CACHgsB,MAAOlB,OAAO16B,SAAU,GACxB/B,YAEZ,CACI,eAAAs8B,CAAgB5wB,KAAMyN,KAAMvR,MAAOkE,OAC/B,OAAOiZ,4BAA4B2lB,KAAKpsC,KAAjCymB,CAAuCrZ,KAAMyN,KAAMvR,MAAOkE,MACzE,CACI,MAAAkoB,CAAOtc,MACG,MAAAswB,KAAO1pC,KAAKo5B,YAAYve,KAC9B7a,KAAKqsC,gBACLrsC,KAAKuhC,eAAemI,KAAM,EAAGA,KAAK14C,OAAQooB,KAClD,CACC,SAAAylB,GACO,MAAMzxB,KAAOpN,KAAKo5B,YAClB,MAAMpnC,MAAQ,CACV5C,IAAK6S,OAAOkE,kBACZhX,IAAK8S,OAAOw2B,mBAEhBrrB,KAAKyN,KAAKzP,QAAQ,CAAC+e,QAAS1mB,UACxB,MAAMkjB,OAAS3mB,KAAKw+B,UAAU/6B,QAAO9S,EACjC,IAACiX,MAAM+e,SAAW3mB,KAAKoU,MAAM4yB,kBAAkBvjC,QAAQ,CACnD,GAAAkjB,OAAS30B,MAAM5C,IAAK,CACpB4C,MAAM5C,IAAMu3B,MAChC,CACoB,GAAAA,OAAS30B,MAAM7C,IAAK,CACpB6C,MAAM7C,IAAMw3B,MAChC,CACA,IAEe,OAAA30B,KACf,CACC,aAAAq6C,GACO,MAAMj4B,MAAQpU,KAAKoU,MACnB,MAAM8d,UAAY9d,MAAM8d,UACxB,MAAMnT,KAAO3K,MAAMlQ,QACb,MAAAooC,QAAUp9C,KAAKE,IAAI8iC,UAAUllB,MAAQklB,UAAUnlB,KAAMmlB,UAAUjf,OAASif,UAAUlf,KACxF,MAAMo2B,YAAcl6C,KAAKC,IAAIm9C,QAAU,EAAG,GACpC,MAAAnD,YAAcj6C,KAAKC,IAAI4vB,KAAKwtB,iBAAmBnD,YAAc,IAAMrqB,KAAKwtB,iBAAmB,EAAG,GACpG,MAAMrC,cAAgBd,YAAcD,aAAe/0B,MAAMo4B,yBACpDxsC,KAAAopC,YAAcA,YAAcc,aAAelqC,KAAKyD,MAChDzD,KAAAmpC,YAAcnpC,KAAKopC,YAAcc,YAC9C,CACI,cAAA3I,CAAemI,KAAMpgC,MAAOkE,MAAO4L,MAC/B,MAAM6jB,OAAQ7jB,OAAS,QACvB,MAAMhF,MAAQpU,KAAKoU,MACnB,MAAM2K,KAAO3K,MAAMlQ,QACnB,MAAMwmC,cAAgB3rB,KAAKxM,UACrB,MAAAsH,MAAQ7Z,KAAKo5B,YAAYyD,OAC/B,MAAM8N,QAAU9wB,MAAM4yB,QACtB,MAAM7B,QAAU/wB,MAAM6yB,QACtB,MAAMC,kBAAoB9yB,MAAM+yB,cAAc,GAAK,GAAM7mC,GACzD,IAAI8C,MAAQ8jC,kBACR,IAAA96C,EACE,MAAAg7C,aAAe,IAAM7sC,KAAK8sC,uBAChC,IAAIj7C,EAAI,EAAGA,EAAIyX,QAASzX,EAAE,CACtBgX,OAAS7I,KAAK+sC,cAAcl7C,EAAGunB,KAAMyzB,aACjD,CACQ,IAAIh7C,EAAIyX,MAAOzX,EAAIyX,MAAQkE,MAAO3b,IAAI,CAC5B,MAAAyrB,IAAMosB,KAAK73C,GACjB,IAAIy2C,WAAaz/B,MACjB,IAAI0/B,SAAW1/B,MAAQ7I,KAAK+sC,cAAcl7C,EAAGunB,KAAMyzB,cACnD,IAAIzD,YAAch1B,MAAM4yB,kBAAkBn1C,GAAKgoB,MAAMmzB,8BAA8BhtC,KAAKw+B,UAAU3sC,GAAGlB,GAAK,EAClGkY,MAAA0/B,SACR,GAAItL,OAAO,CACP,GAAIyN,cAAcG,aAAc,CACdzB,YAAA,CAClC,CACgB,GAAIsB,cAAcF,cAAe,CAC7BlC,WAAaC,SAAWoE,iBAC5C,CACA,CACY,MAAMt6B,WAAa,CACfpf,EAAG03C,QACH7lC,EAAG8lC,QACHzB,YAAa,EACbC,wBACAd,sBACAC,kBACArkC,QAASlE,KAAKw/B,0BAA0B3tC,EAAGyrB,IAAIhL,OAAS,SAAW8G,OAEvEpZ,KAAK0gC,cAAcpjB,IAAKzrB,EAAGwgB,WAAY+G,KACnD,CACA,CACI,oBAAA0zB,GACI,MAAM1/B,KAAOpN,KAAKo5B,YAClB,IAAI5rB,MAAQ,EACZJ,KAAKyN,KAAKzP,QAAQ,CAAC+e,QAAS1mB,UACxB,IAAKmE,MAAM5H,KAAKw+B,UAAU/6B,QAAO9S,IAAMqP,KAAKoU,MAAM4yB,kBAAkBvjC,QAAQ,CACxE+J,OAChB,IAEe,OAAAA,KACf,CACC,aAAAu/B,CAActpC,OAAO2V,KAAMyzB,cACpB,OAAO7sC,KAAKoU,MAAM4yB,kBAAkBvjC,QAASyE,UAAUlI,KAAKw/B,0BAA0B/7B,OAAO2V,MAAMvQ,OAASgkC,cAAgB,CACpI,EAnLI3K,cADEiK,oBACK,KAAK,aACfjK,cAFKiK,oBAEE,WAAW,CACXzQ,gBAAiB,MACjBnpB,UAAW,CACPi4B,cAAe,KACfK,aAAc,MAElBn4B,WAAY,CACRjB,QAAS,CACL1R,KAAM,SACNsS,WAAY,CACR,IACA,IACA,aACA,WACA,cACA,iBAIZ6G,UAAW,IACXovB,WAAY,IAEnBpG,cAxBKiK,oBAwBE,YAAY,CACZzf,YAAa,EACb/S,QAAS,CACLwxB,OAAQ,CACJhN,OAAQ,CACJ,cAAAiN,CAAgBh3B,OACZ,MAAMyG,KAAOzG,MAAMyG,KACnB,GAAIA,KAAKsjB,OAAOntC,QAAU6pB,KAAK3C,SAASlnB,OAAQ,CACtC,MAAEmtC,QAAQrhB,WAAEA,WAAaxc,MAAAA,SAAc8T,MAAM+2B,OAAOjnC,QAC1D,OAAO2W,KAAKsjB,OAAO/rC,IAAI,CAACitC,MAAOxtC,KACrB,MAAAub,KAAOgH,MAAM0oB,eAAe,GAClC,MAAMnkB,MAAQvL,KAAK+rB,WAAW7O,SAASz4B,GAChC,MAAA,CACHykB,KAAM+oB,MACNpgB,UAAWtG,MAAMX,gBACjB8H,YAAanH,MAAMV,YACnBozB,UAAW/qC,OACXoV,UAAWiD,MAAMkF,YACjBf,sBACA4d,QAAStmB,MAAM4yB,kBAAkBn1C,GACjC4R,MAAO5R,IAG3C,CACwB,MAAO,EAC/B,GAEgB,OAAA4nB,CAASrpB,EAAGk7C,WAAYH,QACbA,OAAA/2B,MAAMm3B,qBAAqBD,WAAW7nC,OAC7C0nC,OAAO/2B,MAAMshB,QACjC,IAGQ5b,OAAQ,CACJnpB,EAAG,CACCoP,KAAM,eACNktC,WAAY,CACR93B,QAAS,OAEbE,YAAa,KACbI,KAAM,CACFy3B,SAAU,MAEdC,YAAa,CACTh4B,QAAS,OAEbmzB,WAAY,MAiH5B,MAAM8E,sBAAsBlE,oBACxBhH,cADEkL,cACK,KAAK,OACflL,cAFKkL,cAEE,WAAW,CACXjF,OAAQ,EACRprB,SAAU,EACVmrB,cAAe,IACflrB,OAAQ,SAIhB,MAAMqwB,wBAAwBzS,kBAqB7B,gBAAAwE,CAAiB37B,QACJ,MAAAkK,OAAS3N,KAAKo5B,YAAYzrB,OAC1B,MAAAgZ,OAAS3mB,KAAKw+B,UAAU/6B,QACvB,MAAA,CACH47B,MAAO1xB,OAAOywB,YAAY36B,QAC1B/B,MAAO,GAAKiM,OAAO2xB,iBAAiB3Y,OAAOhZ,OAAOI,OAE9D,CACI,eAAAiwB,CAAgB5wB,KAAMyN,KAAMvR,MAAOkE,OAC/B,OAAOiZ,4BAA4B2lB,KAAKpsC,KAAjCymB,CAAuCrZ,KAAMyN,KAAMvR,MAAOkE,MACzE,CACI,MAAAkoB,CAAOtc,MACH,MAAMhM,KAAOpN,KAAKo5B,YAClB,MAAM/Z,KAAOjS,KAAKU,QACZ,MAAAT,OAASD,KAAKyN,MAAQ,GACtB,MAAAsjB,OAAS/wB,KAAKM,OAAO0wB,YAC3B/e,KAAKhS,OAASA,OACd,GAAI+L,OAAS,SAAU,CACb,MAAAlV,QAAUlE,KAAKu/B,6BAA6BnmB,MAC9C,IAACpZ,KAAKkE,QAAQ6V,SAAU,CACxB7V,QAAQ2Z,YAAc,CACtC,CACY,MAAMxL,WAAa,CACfqe,MAAO,KACPG,UAAWsN,OAAOntC,SAAWqc,OAAOrc,OACpCkT,iBAEJlE,KAAK0gC,cAAcrhB,UAAiB,EAAAhN,WAAY+G,KAC5D,CACQpZ,KAAKuhC,eAAel0B,OAAQ,EAAGA,OAAOrc,OAAQooB,KACtD,CACI,cAAAmoB,CAAel0B,OAAQ/D,MAAOkE,MAAO4L,MAC3B,MAAAS,MAAQ7Z,KAAKo5B,YAAYyD,OAC/B,MAAMI,OAAQ7jB,OAAS,QACvB,IAAA,IAAQvnB,EAAIyX,MAAOzX,EAAIyX,MAAQkE,MAAO3b,IAAI,CAChC,MAAAyc,MAAQjB,OAAOxb,GACrB,MAAMqS,QAAUlE,KAAKw/B,0BAA0B3tC,EAAGyc,MAAMgE,OAAS,SAAW8G,MACtE,MAAAk0B,cAAgBzzB,MAAM0zB,yBAAyB17C,EAAGmO,KAAKw+B,UAAU3sC,GAAGlB,GAC1E,MAAMsC,EAAIgqC,OAAQpjB,MAAM4yB,QAAUa,cAAcr6C,EAChD,MAAM6R,EAAIm4B,OAAQpjB,MAAM6yB,QAAUY,cAAcxoC,EAChD,MAAMuN,WAAa,CACfpf,IACA6R,IACA+D,MAAOykC,cAAczkC,MACrBke,KAAMnf,MAAM3U,IAAM2U,MAAM9C,GACxBZ,iBAEJlE,KAAK0gC,cAAcpyB,MAAOzc,EAAGwgB,WAAY+G,KACrD,CACA,EArEI8oB,cADEmL,gBACK,KAAK,SACfnL,cAFKmL,gBAEE,WAAW,CACX5R,mBAAoB,OACpBC,gBAAiB,QACjBxiB,UAAW,IACXa,SAAU,KACVxB,SAAU,CACN8G,KAAM,CACFzB,KAAM,YAIrBskB,cAbKmL,gBAaE,YAAY,CACZ3gB,YAAa,EACb5S,OAAQ,CACJnpB,EAAG,CACCoP,KAAM,mBAwDtB,MAAMytC,0BAA0B5S,kBAqB/B,gBAAAwE,CAAiB37B,QACV,MAAM2J,KAAOpN,KAAKo5B,YAClB,MAAM+E,OAASn+B,KAAKoU,MAAMyG,KAAKsjB,QAAU,GACnC,MAAA1vB,OAAEA,OAASC,OAAAA,QAAYtB,KACvB,MAAAuZ,OAAS3mB,KAAKw+B,UAAU/6B,QAC9B,MAAMxQ,EAAIwb,OAAO6wB,iBAAiB3Y,OAAO1zB,GACzC,MAAM6R,EAAI4J,OAAO4wB,iBAAiB3Y,OAAO7hB,GAClC,MAAA,CACHu6B,MAAOlB,OAAO16B,SAAU,GACxB/B,MAAO,IAAMzO,EAAI,KAAO6R,EAAI,IAExC,CACI,MAAA4wB,CAAOtc,MACH,MAAMhM,KAAOpN,KAAKo5B,YAClB,MAAQve,KAAMxN,OAAS,IAAQD,KACzB,MAAAE,mBAAqBtN,KAAKoU,MAAMisB,oBACtC,IAAI/2B,MAAEA,MAAQkE,MAAAA,OAAWL,iCAAiCC,KAAMC,OAAQC,oBACxEtN,KAAKm7B,WAAa7xB,MAClBtJ,KAAKo7B,WAAa5tB,MACd,GAAAgB,oBAAoBpB,MAAO,CACnB9D,MAAA,EACRkE,MAAQH,OAAOrc,MAC3B,CACY,GAAAgP,KAAKkE,QAAQ6V,SAAU,CACnB,IAAC/Z,KAAKy7B,mBAAoB,CAC1Bz7B,KAAK67B,aACrB,CACY,MAAQ/tB,QAASuR,KAAOosB,SAAAA,UAAcr+B,KACtCiS,KAAK2R,OAAShxB,KAAKoU,MACnBiL,KAAK8R,cAAgBnxB,KAAKyD,MACrB4b,KAAAqsB,aAAeD,SAASC,WAC7BrsB,KAAKhS,OAASA,OACR,MAAAnJ,QAAUlE,KAAKu/B,6BAA6BnmB,MAC1ClV,QAAAorB,QAAUtvB,KAAKkE,QAAQorB,QAC1BtvB,KAAA0gC,cAAcrhB,UAAiB,EAAA,CAChCssB,UAAWr+B,mBACXpJ,iBACDkV,KACf,MAAA,GAAmBpZ,KAAKy7B,mBAAoB,QACzBruB,KAAKU,QACZ9N,KAAKy7B,mBAAqB,KACtC,CACQz7B,KAAKuhC,eAAel0B,OAAQ/D,MAAOkE,MAAO4L,KAClD,CACI,WAAAyiB,GACU,MAAA9hB,SAAEA,UAAc/Z,KAAKkE,QACvB,IAAClE,KAAKy7B,oBAAsB1hB,SAAU,CACtC/Z,KAAKy7B,mBAAqBz7B,KAAKoU,MAAMq5B,SAASC,WAAW,OACrE,CACQtI,MAAMvJ,aACd,CACI,cAAA0F,CAAel0B,OAAQ/D,MAAOkE,MAAO4L,MACjC,MAAM6jB,OAAQ7jB,OAAS,QACvB,MAAM1L,OAAEA,OAASC,OAAAA,OAAAgtB,SAASA,SAAW8Q,SAAAA,UAAczrC,KAAKo5B,YACxD,MAAMmH,UAAYvgC,KAAKw/B,0BAA0Bl2B,MAAO8P,MAClD,MAAAgnB,cAAgBpgC,KAAKkgC,iBAAiBK,WAC5C,MAAMJ,eAAiBngC,KAAKmgC,eAAe/mB,KAAMgnB,eACjD,MAAM9G,MAAQ5rB,OAAOK,KACrB,MAAMwrB,MAAQ5rB,OAAOI,KACrB,MAAMF,SAAEA,SAAAyhB,QAAWA,SAAatvB,KAAKkE,QACrC,MAAM0nC,aAAejkC,SAASkG,UAAYA,SAAW5L,OAAOkE,kBAC5D,MAAM0lC,aAAe7rC,KAAKoU,MAAMisB,qBAAuBpD,QAAS7jB,OAAS,OACzE,IAAI2yB,WAAaziC,MAAQ,GAAKtJ,KAAKw+B,UAAUl1B,MAAQ,GACrD,IAAA,IAAQzX,EAAIyX,MAAOzX,EAAIyX,MAAQkE,QAAS3b,EAAE,CAChC,MAAAyc,MAAQjB,OAAOxb,GACf,MAAA80B,OAAS3mB,KAAKw+B,UAAU3sC,GACxB,MAAAwgB,WAAaw5B,aAAev9B,MAAQ,CAAE,EAC5C,MAAM09B,SAAWvqC,cAAcklB,OAAO4S,QAChC,MAAA9Q,OAASpW,WAAWinB,OAAS5rB,OAAOS,iBAAiBwY,OAAO2S,OAAQznC,GACpE,MAAA62B,OAASrW,WAAWknB,OAAS0D,QAAS+O,SAAWr+B,OAAO23B,eAAiB33B,OAAOQ,iBAAiBwsB,SAAW36B,KAAK23B,WAAWhqB,OAAQgZ,OAAQgU,UAAYhU,OAAO4S,OAAQ1nC,GAC7KwgB,WAAW0U,KAAOnf,MAAM6gB,SAAW7gB,MAAM8gB,SAAWsjB,SACzC35B,WAAAke,KAAO1+B,EAAI,GAAK3C,KAAK0X,IAAI+f,OAAO2S,OAASyS,WAAWzS,QAAUsS,aACzE,GAAItc,QAAS,CACTjd,WAAWsU,OAASA,OACTtU,WAAA6nB,IAAMuR,SAAS5wB,KAAKhpB,EAC/C,CACY,GAAIsuC,eAAgB,CACL9tB,WAAAnO,QAAUk8B,eAAiBpgC,KAAKw/B,0BAA0B3tC,EAAGyc,MAAMgE,OAAS,SAAW8G,KAClH,CACY,IAAKyyB,aAAc,CACf7rC,KAAK0gC,cAAcpyB,MAAOzc,EAAGwgB,WAAY+G,KACzD,CACyB2yB,WAAAplB,MACzB,CACa3mB,KAAAygC,oBAAoBL,cAAehnB,KAAMmnB,UACtD,CACC,cAAApB,GACO,MAAM/xB,KAAOpN,KAAKo5B,YACZ,MAAAve,KAAOzN,KAAKyN,MAAQ,GACtB,IAAC7a,KAAKkE,QAAQ6V,SAAU,CACxB,IAAI5qB,IAAM,EACV,IAAA,IAAQ0C,EAAIgpB,KAAK7pB,OAAS,EAAGa,GAAK,IAAKA,EAAE,CACrC1C,IAAMD,KAAKC,IAAIA,IAAK0rB,KAAKhpB,GAAG8T,KAAK3F,KAAKw/B,0BAA0B3tC,IAAM,EACtF,CACY,OAAO1C,IAAM,GAAKA,GAC9B,CACQ,MAAM2e,QAAUV,KAAKU,QACrB,MAAMmI,OAASnI,QAAQ5J,SAAW4J,QAAQ5J,QAAQ2Z,aAAe,EAC7D,IAAChD,KAAK7pB,OAAQ,CACP,OAAAilB,MACnB,CACc,MAAAiR,WAAarM,KAAK,GAAGlV,KAAK3F,KAAKw/B,0BAA0B,IAC/D,MAAMyM,UAAYpxB,KAAKA,KAAK7pB,OAAS,GAAG2U,KAAK3F,KAAKw/B,0BAA0B3kB,KAAK7pB,OAAS,IAC1F,OAAO9B,KAAKC,IAAI8mB,OAAQiR,WAAY+kB,WAAa,CACzD,EA5HI/J,cADEsL,kBACK,KAAK,WACftL,cAFKsL,kBAEE,WAAW,CACX/R,mBAAoB,MACpBC,gBAAiB,QACjB3hB,SAAU,MACV6D,KAAM,QAEbskB,cARKsL,kBAQE,YAAY,CACZr0B,YAAa,CACTC,KAAM,SAEVU,OAAQ,CACJ7mB,EAAG,CACC8M,KAAM,UAEV+E,EAAG,CACC/E,KAAM,aA+GtB,IAAI4tC,mBAAkC7N,OAAO,CAC7C8N,UAAW,KACXzI,4BACA6C,kCACAkB,sCACAsC,8BACA4B,4BACAjB,wCACAkB,gCACAG,sCAOI,SAASK,WACH,MAAA,IAAIt/C,MAAM,kFACpB,CAMI,MAAMu/C,gBAcN,WAAAhuC,CAAYoE,SADZg+B,cAAAliC,KAAA,WAESA,KAAAkE,QAAUA,SAAW,CAAE,CACpC,CANM,eAAO+V,CAAS8zB,SACPjwC,OAAA0B,OAAOsuC,gBAAgBnsC,UAAWosC,QACjD,CAMI,IAAAC,GAAO,CACP,OAAAC,GACI,OAAOJ,UACf,CACI,KAAAjnB,GACI,OAAOinB,UACf,CACI,MAAA95B,GACI,OAAO85B,UACf,CACI,GAAArrB,GACI,OAAOqrB,UACf,CACI,IAAAK,GACI,OAAOL,UACf,CACI,OAAAM,GACI,OAAON,UACf,CACI,KAAAO,GACI,OAAOP,UACf,EAEA,IAAIQ,SAAW,CACXC,MAAOR,iBAGX,SAASS,aAAaC,QAASzgC,KAAMrM,MAAO2X,WACxC,MAAM8f,WAAEA,WAAAte,KAAaA,KAAOpN,QAAAA,SAAa+gC,QACnC,MAAA9gC,OAASyrB,WAAWC,YAAY1rB,OAChC,MAAAG,SAAW2gC,QAAQ1gC,QAAU0gC,QAAQ1gC,QAAQ5J,QAAUsqC,QAAQ1gC,QAAQ5J,QAAQ2J,SAAW,KAAO,KACnG,GAAAH,QAAUK,OAASL,OAAOK,MAAQA,OAAS,KAAON,SAAWoN,KAAK7pB,OAAQ,CACpE,MAAAy9C,aAAe/gC,OAAOghC,eAAiBjkC,cAAgBH,aAC7D,IAAK+O,UAAW,CACZ,MAAMjS,OAASqnC,aAAa5zB,KAAM9M,KAAMrM,OACxC,GAAImM,SAAU,CACJ,MAAAF,OAAEA,QAAYwrB,WAAWC,YACzB,MAAAxrB,QAAEA,SAAa4gC,QACrB,MAAMpgC,oBAAsBR,QAAQ9L,MAAM,EAAGsF,OAAOgD,GAAK,GAAGnH,UAAUoL,UAAWC,QAAS7M,cAAc6M,MAAMX,OAAOI,QACrH3G,OAAOgD,IAAMlb,KAAKC,IAAI,EAAGif,qBACzB,MAAMG,oBAAsBX,QAAQ9L,MAAMsF,OAAO+C,IAAIkE,UAAWC,QAAS7M,cAAc6M,MAAMX,OAAOI,QACpG3G,OAAO+C,IAAMjb,KAAKC,IAAI,EAAGof,oBACzC,CACmB,OAAAnH,MACnB,MAAA,GAAmB+xB,WAAW+B,eAAgB,CAC5B,MAAA3Q,GAAK1P,KAAK,GAChB,MAAM7oB,aAAeu4B,GAAGokB,WAAa,YAAcpkB,GAAGokB,SAAS5gC,MAC/D,GAAI/b,MAAO,CACP,MAAMsX,MAAQmlC,aAAa5zB,KAAM9M,KAAMrM,MAAQ1P,OAC/C,MAAMuX,IAAMklC,aAAa5zB,KAAM9M,KAAMrM,MAAQ1P,OACtC,MAAA,CACHoY,GAAId,MAAMc,GACVD,GAAIZ,IAAIY,GAE5B,CACA,CACA,CACW,MAAA,CACHC,GAAI,EACJD,GAAI0Q,KAAK7pB,OAAS,EAE1B,CACC,SAAS49C,yBAAyBx6B,MAAOrG,KAAM8gC,SAAUC,QAASz1B,WACzD,MAAAoe,SAAWrjB,MAAM26B,+BACjB,MAAArtC,MAAQmtC,SAAS9gC,MACf,IAAA,IAAAlc,EAAI,EAAGwR,KAAOo0B,SAASzmC,OAAQa,EAAIwR,OAAQxR,EAAE,CACjD,MAAQ4R,MAAAA,OAAAA,KAAQoX,MAAU4c,SAAS5lC,GAC7B,MAAAuY,GAAEA,GAAKD,GAAAA,IAAQokC,aAAa9W,SAAS5lC,GAAIkc,KAAMrM,MAAO2X,WAC5D,IAAA,IAAQrb,EAAIoM,GAAIpM,GAAKmM,KAAMnM,EAAE,CACnB,MAAAmsB,QAAUtP,KAAK7c,GACjB,IAACmsB,QAAQpD,KAAM,CACP+nB,QAAA3kB,QAAS1mB,OAAOzF,EACxC,CACA,CACA,CACA,CACC,SAASgxC,yBAAyBjhC,MAC/B,MAAMkhC,KAAOlhC,KAAK/J,QAAQ,QAAS,EACnC,MAAMkrC,KAAOnhC,KAAK/J,QAAQ,QAAS,EAC5B,OAAA,SAASiF,IAAKC,KACX,MAAAimC,OAASF,KAAO//C,KAAK0X,IAAIqC,IAAIhW,EAAIiW,IAAIjW,GAAK,EAC1C,MAAAm8C,OAASF,KAAOhgD,KAAK0X,IAAIqC,IAAInE,EAAIoE,IAAIpE,GAAK,EACzC,OAAA5V,KAAKmY,KAAKnY,KAAK2P,IAAIswC,OAAQ,GAAKjgD,KAAK2P,IAAIuwC,OAAQ,GAC3D,CACL,CACC,SAASC,kBAAkBj7B,MAAOy6B,SAAU9gC,KAAMuhC,iBAAkBh2B,kBACjE,MAAMzN,MAAQ,GACd,IAAKyN,mBAAqBlF,MAAMm7B,cAAcV,UAAW,CAC9C,OAAAhjC,KACf,CACI,MAAM2jC,eAAiB,SAASrlB,QAAS3mB,aAAcC,QAC/C,IAAC6V,mBAAqByE,eAAeoM,QAAS/V,MAAM8d,UAAW,GAAI,CACnE,MACZ,CACQ,GAAI/H,QAAQslB,QAAQZ,SAAS57C,EAAG47C,SAAS/pC,EAAGwqC,kBAAmB,CAC3DzjC,MAAM3G,KAAK,CACPilB,gBACA3mB,0BACAC,MAAAA,QAEhB,CACK,EACDmrC,yBAAyBx6B,MAAOrG,KAAM8gC,SAAUW,eAAgB,MACzD,OAAA3jC,KACX,CACC,SAAS6jC,sBAAsBt7B,MAAOy6B,SAAU9gC,KAAMuhC,kBACnD,IAAIzjC,MAAQ,GACH,SAAA2jC,eAAerlB,QAAS3mB,aAAcC,QAC3C,MAAM6kC,WAAEA,WAAAC,SAAaA,UAAcpe,QAAQwlB,SAAS,CAChD,aACA,YACDL,kBACH,MAAMzmC,MAAEA,OAAWN,kBAAkB4hB,QAAS,CAC1Cl3B,EAAG47C,SAAS57C,EACZ6R,EAAG+pC,SAAS/pC,IAEhB,GAAIuE,cAAcR,MAAOy/B,WAAYC,UAAW,CAC5C18B,MAAM3G,KAAK,CACPilB,gBACA3mB,0BACAC,MAAAA,QAEhB,CACA,CAC6BmrC,yBAAAx6B,MAAOrG,KAAM8gC,SAAUW,gBACzC,OAAA3jC,KACX,CACC,SAAS+jC,yBAAyBx7B,MAAOy6B,SAAU9gC,KAAMsL,UAAWi2B,iBAAkBh2B,kBACnF,IAAIzN,MAAQ,GACN,MAAAgkC,eAAiBb,yBAAyBjhC,MAChD,IAAI+hC,YAAc7tC,OAAOkE,kBAChB,SAAAqpC,eAAerlB,QAAS3mB,aAAcC,QAC3C,MAAMgsC,SAAUtlB,QAAQslB,QAAQZ,SAAS57C,EAAG47C,SAAS/pC,EAAGwqC,kBACpD,GAAAj2B,YAAco2B,SAAS,CACvB,MACZ,CACc,MAAA5J,OAAS1b,QAAQ4lB,eAAeT,kBACtC,MAAMU,cAAgB12B,kBAAoBlF,MAAMm7B,cAAc1J,QAC1D,IAACmK,cAAgBP,SAAS,CAC1B,MACZ,CACc,MAAA1mC,SAAW8mC,eAAehB,SAAUhJ,QAC1C,GAAI98B,SAAW+mC,YAAa,CAChBjkC,MAAA,CACJ,CACIse,gBACA3mB,0BACAC,MAAAA,SAGMqsC,YAAA/mC,QAC1B,MAAA,GAAmBA,WAAa+mC,YAAa,CACjCjkC,MAAM3G,KAAK,CACPilB,gBACA3mB,0BACAC,MAAAA,QAEhB,CACA,CAC6BmrC,yBAAAx6B,MAAOrG,KAAM8gC,SAAUW,gBACzC,OAAA3jC,KACX,CACC,SAASokC,gBAAgB77B,MAAOy6B,SAAU9gC,KAAMsL,UAAWi2B,iBAAkBh2B,kBAC1E,IAAKA,mBAAqBlF,MAAMm7B,cAAcV,UAAW,CACrD,MAAO,EACf,CACI,OAAO9gC,OAAS,MAAQsL,UAAYq2B,sBAAsBt7B,MAAOy6B,SAAU9gC,KAAMuhC,kBAAoBM,yBAAyBx7B,MAAOy6B,SAAU9gC,KAAMsL,UAAWi2B,iBAAkBh2B,iBACtL,CACC,SAAS42B,aAAa97B,MAAOy6B,SAAU9gC,KAAMsL,UAAWi2B,kBACrD,MAAMzjC,MAAQ,GACR,MAAAskC,YAAcpiC,OAAS,IAAM,WAAa,WAChD,IAAIqiC,eAAiB,MACrBxB,yBAAyBx6B,MAAOrG,KAAM8gC,SAAU,CAAC1kB,QAAS3mB,aAAcC,UAChE,GAAA0mB,QAAQgmB,cAAgBhmB,QAAQgmB,aAAatB,SAAS9gC,MAAOuhC,kBAAmB,CAChFzjC,MAAM3G,KAAK,CACPilB,gBACA3mB,0BACAC,MAAAA,SAEJ2sC,eAAiBA,gBAAkBjmB,QAAQslB,QAAQZ,SAAS57C,EAAG47C,SAAS/pC,EAAGwqC,iBACvF,IAEQ,GAAAj2B,YAAc+2B,eAAgB,CAC9B,MAAO,EACf,CACW,OAAAvkC,KACX,CACC,IAAIwkC,YAAc,CAEfC,MAAO,CACV,KAAA7sC,CAAO2Q,MAAOhkB,EAAG8T,QAASorC,kBACT,MAAAT,SAAWrjB,oBAAoBp7B,EAAGgkB,OAClC,MAAArG,KAAO7J,QAAQ6J,MAAQ,IACvB,MAAAuL,iBAAmBpV,QAAQoV,kBAAoB,MACrD,MAAMzN,MAAQ3H,QAAQmV,UAAYg2B,kBAAkBj7B,MAAOy6B,SAAU9gC,KAAMuhC,iBAAkBh2B,kBAAoB22B,gBAAgB77B,MAAOy6B,SAAU9gC,KAAM,MAAOuhC,iBAAkBh2B,kBACjL,MAAMf,UAAW,GACb,IAAC1M,MAAM7a,OAAQ,CACf,MAAO,EACvB,CACYojB,MAAM26B,+BAA+B3jC,QAASgC,OACpC3J,MAAAA,OAAQoI,MAAM,GAAGpI,MACjB,MAAA0mB,QAAU/c,KAAKyN,KAAKpX,QACtB,GAAA0mB,UAAYA,QAAQpD,KAAM,CAC1BxO,UAASrT,KAAK,CACVilB,gBACA3mB,aAAc4J,KAAK3J,MACnBA,MAAAA,QAExB,IAEmB8U,OAAAA,SACV,EACR,OAAAzK,CAASsG,MAAOhkB,EAAG8T,QAASorC,kBACX,MAAAT,SAAWrjB,oBAAoBp7B,EAAGgkB,OAClC,MAAArG,KAAO7J,QAAQ6J,MAAQ,KACvB,MAAAuL,iBAAmBpV,QAAQoV,kBAAoB,MACrD,IAAIzN,MAAQ3H,QAAQmV,UAAYg2B,kBAAkBj7B,MAAOy6B,SAAU9gC,KAAMuhC,iBAAkBh2B,kBAAoB22B,gBAAgB77B,MAAOy6B,SAAU9gC,KAAM,MAAOuhC,iBAAkBh2B,kBAC3K,GAAAzN,MAAM7a,OAAS,EAAG,CACZ,MAAAwS,aAAeqI,MAAM,GAAGrI,aAC9B,MAAMqX,KAAOzG,MAAM0oB,eAAet5B,cAAcqX,KAChDhP,MAAQ,GACR,IAAA,IAAQha,EAAI,EAAGA,EAAIgpB,KAAK7pB,SAAUa,EAAE,CAChCga,MAAM3G,KAAK,CACPilB,QAAStP,KAAKhpB,GACd2R,0BACAC,MAAO5R,GAE/B,CACA,CACmB,OAAAga,KACV,EACR,KAAAyC,CAAO8F,MAAOhkB,EAAG8T,QAASorC,kBACT,MAAAT,SAAWrjB,oBAAoBp7B,EAAGgkB,OAClC,MAAArG,KAAO7J,QAAQ6J,MAAQ,KACvB,MAAAuL,iBAAmBpV,QAAQoV,kBAAoB,MACrD,OAAO+1B,kBAAkBj7B,MAAOy6B,SAAU9gC,KAAMuhC,iBAAkBh2B,iBACrE,EACR,OAAAi3B,CAASn8B,MAAOhkB,EAAG8T,QAASorC,kBACX,MAAAT,SAAWrjB,oBAAoBp7B,EAAGgkB,OAClC,MAAArG,KAAO7J,QAAQ6J,MAAQ,KACvB,MAAAuL,iBAAmBpV,QAAQoV,kBAAoB,MACrD,OAAO22B,gBAAgB77B,MAAOy6B,SAAU9gC,KAAM7J,QAAQmV,UAAWi2B,iBAAkBh2B,iBACtF,EACR,CAAArmB,CAAGmhB,MAAOhkB,EAAG8T,QAASorC,kBACL,MAAAT,SAAWrjB,oBAAoBp7B,EAAGgkB,OACxC,OAAO87B,aAAa97B,MAAOy6B,SAAU,IAAK3qC,QAAQmV,UAAWi2B,iBAChE,EACR,CAAAxqC,CAAGsP,MAAOhkB,EAAG8T,QAASorC,kBACL,MAAAT,SAAWrjB,oBAAoBp7B,EAAGgkB,OACxC,OAAO87B,aAAa97B,MAAOy6B,SAAU,IAAK3qC,QAAQmV,UAAWi2B,iBACzE,IAIA,MAAMkB,iBAAmB,CACrB,OACA,MACA,QACA,UAEJ,SAASC,iBAAiBzoC,MAAO6mC,UAC7B,OAAO7mC,MAAM8d,OAAQh3B,GAAIA,EAAE+7B,MAAQgkB,SACvC,CACA,SAAS6B,4BAA4B1oC,MAAO+F,MACxC,OAAO/F,MAAM8d,OAAQh3B,GAAI0hD,iBAAiBxsC,QAAQlV,EAAE+7B,QAAS,GAAM/7B,EAAEs8B,IAAIrd,OAASA,KACtF,CACA,SAAS4iC,aAAa3oC,MAAO/E,SACzB,OAAO+E,MAAMV,KAAK,CAACtX,EAAGC,KACZ,MAAAqT,GAAKL,QAAUhT,EAAID,EACnB,MAAAuT,GAAKN,QAAUjT,EAAIC,EAClB,OAAAqT,GAAG/C,SAAWgD,GAAGhD,OAAS+C,GAAGG,MAAQF,GAAGE,MAAQH,GAAG/C,OAASgD,GAAGhD,QAE9E,CACA,SAASqwC,UAAUC,OACf,MAAMC,YAAc,GACpB,IAAIj/C,EAAGwR,KAAM+nB,IAAKP,IAAKv8B,MAAOyiD,YAC1B,IAAAl/C,EAAI,EAAGwR,MAAQwtC,OAAS,IAAI7/C,OAAQa,EAAIwR,OAAQxR,EAAE,CAClDu5B,IAAMylB,MAAMh/C,KACTg9C,SAAUhkB,IAAM3mB,SAAW5V,YAAQyiD,wBAAa,IAAU3lB,KAC7D0lB,YAAY5rC,KAAK,CACbzB,MAAO5R,EACPu5B,QACAP,QACA0Z,WAAYnZ,IAAIiZ,eAChB9jC,OAAQ6qB,IAAI7qB,OACZjS,MAAOA,OAASu8B,IAAMv8B,MACtByiD,yBAEZ,CACW,OAAAD,WACX,CACA,SAASE,YAAYC,UACjB,MAAMtY,OAAS,CAAE,EACjB,IAAA,MAAWuY,QAAQD,SAAQ,CACvB,MAAM3iD,MAAEA,MAAAu8B,IAAQA,IAAMkmB,YAAAA,aAAiBG,KACvC,IAAK5iD,QAAUkiD,iBAAiBx7B,SAAS6V,KAAM,CAC3C,QACZ,CACQ,MAAMnG,OAASiU,OAAOrqC,SAAWqqC,OAAOrqC,OAAS,CAC7Ckf,MAAO,EACP2jC,OAAQ,EACR5wC,OAAQ,EACRoF,KAAM,IAEH+e,OAAAlX,QACPkX,OAAOnkB,QAAUwwC,WACzB,CACW,OAAApY,MACX,CACC,SAASyY,cAAcH,SAASI,QACvB,MAAA1Y,OAASqY,YAAYC,UACrB,MAAAK,aAAEA,aAAeC,cAAAA,eAAmBF,OAC1C,IAAIx/C,EAAGwR,KAAMmuC,OACT,IAAA3/C,EAAI,EAAGwR,KAAO4tC,SAAQjgD,OAAQa,EAAIwR,OAAQxR,EAAE,CAC5C2/C,OAASP,SAAQp/C,GACX,MAAA4/C,SAAEA,UAAcD,OAAOpmB,IACvB,MAAA98B,MAAQqqC,OAAO6Y,OAAOljD,OAC5B,MAAMsmC,OAAStmC,OAASkjD,OAAOT,YAAcziD,MAAMiS,OACnD,GAAIixC,OAAOjN,WAAY,CACnBiN,OAAOp7B,MAAQwe,OAASA,OAAS0c,aAAeG,UAAYJ,OAAOK,eACnEF,OAAOl1B,OAASi1B,aAC5B,KAAe,CACHC,OAAOp7B,MAAQk7B,aACfE,OAAOl1B,OAASsY,OAASA,OAAS2c,cAAgBE,UAAYJ,OAAOM,eACjF,CACA,CACW,OAAAhZ,MACX,CACA,SAASiZ,iBAAiBf,OAChB,MAAAC,YAAcF,UAAUC,OACxB,MAAAY,SAAWd,aAAaG,YAAYhrB,OAAQorB,MAAOA,KAAK9lB,IAAIqmB,UAAW,MAC7E,MAAM1kC,KAAO4jC,aAAaF,iBAAiBK,YAAa,QAAS,MACjE,MAAM9jC,MAAQ2jC,aAAaF,iBAAiBK,YAAa,UACzD,MAAM99B,IAAM29B,aAAaF,iBAAiBK,YAAa,OAAQ,MAC/D,MAAM79B,OAAS09B,aAAaF,iBAAiBK,YAAa,WACpD,MAAAe,iBAAmBnB,4BAA4BI,YAAa,KAC5D,MAAAgB,eAAiBpB,4BAA4BI,YAAa,KACzD,MAAA,CACHW,kBACAM,WAAYhlC,KAAKw1B,OAAOvvB,KACxBg/B,eAAgBhlC,MAAMu1B,OAAOuP,gBAAgBvP,OAAOtvB,QAAQsvB,OAAOsP,kBACnE3f,UAAWue,iBAAiBK,YAAa,aACzCmB,SAAUllC,KAAKw1B,OAAOv1B,OAAOu1B,OAAOuP,gBACpCvN,WAAYvxB,IAAIuvB,OAAOtvB,QAAQsvB,OAAOsP,kBAE9C,CACA,SAASK,eAAeC,WAAYjgB,UAAWliC,EAAGC,GAC9C,OAAOf,KAAKC,IAAIgjD,WAAWniD,GAAIkiC,UAAUliC,IAAMd,KAAKC,IAAIgjD,WAAWliD,GAAIiiC,UAAUjiC,GACrF,CACA,SAASmiD,iBAAiBD,WAAYE,YAClCF,WAAWn/B,IAAM9jB,KAAKC,IAAIgjD,WAAWn/B,IAAKq/B,WAAWr/B,KACrDm/B,WAAWplC,KAAO7d,KAAKC,IAAIgjD,WAAWplC,KAAMslC,WAAWtlC,MACvDolC,WAAWl/B,OAAS/jB,KAAKC,IAAIgjD,WAAWl/B,OAAQo/B,WAAWp/B,QAC3Dk/B,WAAWnlC,MAAQ9d,KAAKC,IAAIgjD,WAAWnlC,MAAOqlC,WAAWrlC,MAC7D,CACA,SAASslC,WAAWpgB,UAAWmf,OAAQG,OAAQ7Y,QACrC,MAAA9N,IAAEA,IAAMO,IAAAA,KAASomB,OACvB,MAAMW,WAAajgB,UAAUigB,WACzB,IAACpwC,SAAS8oB,KAAM,CAChB,GAAI2mB,OAAO7rC,KAAM,CACHusB,UAAArH,MAAQ2mB,OAAO7rC,IACrC,CACQ,MAAMrX,MAAQqqC,OAAO6Y,OAAOljD,QAAU,CAClCqX,KAAM,EACN6H,MAAO,GAELlf,MAAAqX,KAAOzW,KAAKC,IAAIb,MAAMqX,KAAM6rC,OAAOjN,WAAanZ,IAAI9O,OAAS8O,IAAIhV,OAChEo7B,OAAA7rC,KAAOrX,MAAMqX,KAAOrX,MAAMkf,MACvB0kB,UAAArH,MAAQ2mB,OAAO7rC,IACjC,CACI,GAAIylB,IAAImnB,WAAY,CACCH,iBAAAD,WAAY/mB,IAAImnB,aACzC,CACU,MAAAC,SAAWtjD,KAAKC,IAAI,EAAGkiD,OAAOoB,WAAaP,eAAeC,WAAYjgB,UAAW,OAAQ,UACzF,MAAAwgB,UAAYxjD,KAAKC,IAAI,EAAGkiD,OAAOsB,YAAcT,eAAeC,WAAYjgB,UAAW,MAAO,WAC1F,MAAA0gB,aAAeJ,WAAatgB,UAAUvgC,EACtC,MAAAkhD,cAAgBH,YAAcxgB,UAAUjjC,EAC9CijC,UAAUvgC,EAAI6gD,SACdtgB,UAAUjjC,EAAIyjD,UACd,OAAOlB,OAAOjN,WAAa,CACvBuO,KAAMF,aACNG,MAAOF,eACP,CACAC,KAAMD,cACNE,MAAOH,aAEf,CACA,SAASI,iBAAiB9gB,WACtB,MAAMigB,WAAajgB,UAAUigB,WAC7B,SAASc,UAAUpoB,KACT,MAAAvI,OAASpzB,KAAKC,IAAIgjD,WAAWtnB,KAAOqH,UAAUrH,KAAM,GAC1DqH,UAAUrH,MAAQvI,OACX,OAAAA,MACf,CACc4P,UAAAptB,GAAKmuC,UAAU,OACf/gB,UAAAj/B,GAAKggD,UAAU,QACzBA,UAAU,SACVA,UAAU,SACd,CACA,SAASC,WAAW3O,WAAYrS,WAC5B,MAAMigB,WAAajgB,UAAUigB,WAC7B,SAASgB,mBAAmB1oB,YACxB,MAAMxM,OAAS,CACXlR,KAAM,EACNiG,IAAK,EACLhG,MAAO,EACPiG,OAAQ,GAEZwX,WAAUrf,QAASyf,MACR5M,OAAA4M,KAAO37B,KAAKC,IAAI+iC,UAAUrH,KAAMsnB,WAAWtnB,QAE/C,OAAA5M,MACf,CACI,OAAOsmB,WAAa4O,mBAAmB,CACnC,OACA,UACCA,mBAAmB,CACpB,MACA,UAER,CACA,SAASC,SAASvC,MAAO3e,UAAWmf,OAAQ1Y,QACxC,MAAM0a,WAAa,GACnB,IAAIxhD,EAAGwR,KAAMmuC,OAAQpmB,IAAKkoB,MAAOrkC,QAC7B,IAAApd,EAAI,EAAGwR,KAAOwtC,MAAM7/C,OAAQsiD,MAAQ,EAAGzhD,EAAIwR,OAAQxR,EAAE,CACrD2/C,OAASX,MAAMh/C,GACfu5B,IAAMomB,OAAOpmB,IACbA,IAAIsK,OAAO8b,OAAOp7B,OAAS8b,UAAUvgC,EAAG6/C,OAAOl1B,QAAU4V,UAAUjjC,EAAGikD,WAAW1B,OAAOjN,WAAYrS,YAC9F,MAAA4gB,KAAEA,WAAOC,OAAWT,WAAWpgB,UAAWmf,OAAQG,OAAQ7Y,QAChE2a,OAASR,MAAQO,WAAWriD,OAC5Bie,QAAUA,SAAW8jC,MACjB,IAAC3nB,IAAIqmB,SAAU,CACf4B,WAAWnuC,KAAKssC,OAC5B,CACA,CACI,OAAO8B,OAASF,SAASC,WAAYnhB,UAAWmf,OAAQ1Y,SAAW1pB,OACvE,CACA,SAASskC,WAAWnoB,IAAKre,KAAMiG,IAAKoD,MAAOkG,QACvC8O,IAAIpY,IAAMA,IACVoY,IAAIre,KAAOA,KACXqe,IAAIpe,MAAQD,KAAOqJ,MACnBgV,IAAInY,OAASD,IAAMsJ,OACnB8O,IAAIhV,MAAQA,MACZgV,IAAI9O,OAASA,MACjB,CACA,SAASk3B,WAAW3C,MAAO3e,UAAWmf,OAAQ1Y,QAC1C,MAAM8a,YAAcpC,OAAOt+B,QACvB,IAAA9f,EAAEA,EAAI6R,EAAAA,GAAOotB,UACjB,IAAA,MAAWsf,UAAUX,MAAM,CACvB,MAAMzlB,IAAMomB,OAAOpmB,IACnB,MAAM98B,MAAQqqC,OAAO6Y,OAAOljD,QAAU,CAElC6iD,OAAQ,EACR5wC,OAAQ,GAEZ,MAAMA,OAASixC,OAAOT,YAAcziD,MAAMiS,QAAU,EACpD,GAAIixC,OAAOjN,WAAY,CACb,MAAAnuB,MAAQ8b,UAAUvgC,EAAI4O,OACtB,MAAA+b,OAAShuB,MAAMqX,MAAQylB,IAAI9O,OAC7B,GAAA9W,QAAQlX,MAAMgb,OAAQ,CACtBxE,EAAIxW,MAAMgb,KAC1B,CACY,GAAI8hB,IAAIqmB,SAAU,CACH8B,WAAAnoB,IAAKqoB,YAAY1mC,KAAMjI,EAAGusC,OAAOoB,WAAagB,YAAYzmC,MAAQymC,YAAY1mC,KAAMuP,OAC/G,KAAmB,CACHi3B,WAAWnoB,IAAK8G,UAAUnlB,KAAOze,MAAM6iD,OAAQrsC,EAAGsR,MAAOkG,OACzE,CACYhuB,MAAMgb,MAAQxE,EACdxW,MAAM6iD,QAAU/6B,MAChBtR,EAAIsmB,IAAInY,MACpB,KAAe,CACG,MAAAqJ,OAAS4V,UAAUjjC,EAAIsR,OACvB,MAAA6V,MAAQ9nB,MAAMqX,MAAQylB,IAAIhV,MAC5B,GAAA5Q,QAAQlX,MAAMgb,OAAQ,CACtBrW,EAAI3E,MAAMgb,KAC1B,CACY,GAAI8hB,IAAIqmB,SAAU,CACH8B,WAAAnoB,IAAKn4B,EAAGwgD,YAAYzgC,IAAKoD,MAAOi7B,OAAOsB,YAAcc,YAAYxgC,OAASwgC,YAAYzgC,IACjH,KAAmB,CACHugC,WAAWnoB,IAAKn4B,EAAGi/B,UAAUlf,IAAM1kB,MAAM6iD,OAAQ/6B,MAAOkG,OACxE,CACYhuB,MAAMgb,MAAQrW,EACd3E,MAAM6iD,QAAU70B,OAChBrpB,EAAIm4B,IAAIpe,KACpB,CACA,CACIklB,UAAUj/B,EAAIA,EACdi/B,UAAUptB,EAAIA,CAClB,CACA,IAAImsC,QAAU,CACb,MAAAyC,CAAQt/B,MAAOxO,MACJ,IAACwO,MAAMy8B,MAAO,CACdz8B,MAAMy8B,MAAQ,EAC1B,CACajrC,KAAA6rC,SAAW7rC,KAAK6rC,UAAY,MAC5B7rC,KAAAipC,SAAWjpC,KAAKipC,UAAY,MAC5BjpC,KAAArF,OAASqF,KAAKrF,QAAU,EACxBqF,KAAA+tC,QAAU/tC,KAAK+tC,SAAW,WACpB,MAAA,CACH,CACIC,EAAG,EACH,IAAAlgB,CAAMxB,WACFtsB,KAAK8tB,KAAKxB,UAClC,GAGS,EACK9d,MAAAy8B,MAAM3rC,KAAKU,KACpB,EACJ,SAAAiuC,CAAWz/B,MAAO0/B,YACX,MAAMrwC,OAAQ2Q,MAAMy8B,MAAQz8B,MAAMy8B,MAAM7sC,QAAQ8vC,aAAc,EAC9D,GAAIrwC,UAAc,EAAA,CACR2Q,MAAAy8B,MAAMllC,OAAOlI,OAAO,EACtC,CACK,EACJ,SAAA2yB,CAAWhiB,MAAOxO,KAAM1B,SACjB0B,KAAK6rC,SAAWvtC,QAAQutC,SACxB7rC,KAAKipC,SAAW3qC,QAAQ2qC,SACxBjpC,KAAKrF,OAAS2D,QAAQ3D,MACzB,EACJ,MAAAm1B,CAAQthB,MAAOgC,MAAOkG,OAAQy3B,YACvB,IAAK3/B,MAAO,CACR,MACZ,CACQ,MAAMrB,QAAU8O,UAAUzN,MAAMlQ,QAAQstC,OAAOz+B,SAC/C,MAAM2+B,eAAiBxiD,KAAKC,IAAIinB,MAAQrD,QAAQqD,MAAO,GACvD,MAAMu7B,gBAAkBziD,KAAKC,IAAImtB,OAASvJ,QAAQuJ,OAAQ,GACpD,MAAAu0B,MAAQe,iBAAiBx9B,MAAMy8B,OACrC,MAAMmD,cAAgBnD,MAAMoB,SAC5B,MAAMgC,gBAAkBpD,MAAMtM,WACzBxhC,KAAAqR,MAAMy8B,MAAQzlB,MACX,UAAOA,IAAI8oB,eAAiB,WAAY,CACxC9oB,IAAI8oB,cACpB,IAEQ,MAAMC,wBAA0BH,cAAc5f,OAAO,CAACgW,MAAO8G,OAAOA,KAAK9lB,IAAIlnB,SAAWgtC,KAAK9lB,IAAIlnB,QAAQiR,UAAY,MAAQi1B,MAAQA,MAAQ,EAAG,IAAM,EAChJ,MAAAiH,OAASvzC,OAAOgiC,OAAO,CACzB2S,WAAYr8B,MACZu8B,YAAar2B,OACbvJ,gBACA2+B,8BACAC,gCACAL,aAAcI,eAAiB,EAAIyC,wBACnC5C,cAAeI,gBAAkB,IAErC,MAAMQ,WAAar0C,OAAO0B,OAAO,CAAA,EAAIuT,SACpBq/B,iBAAAD,WAAYtwB,UAAUkyB,aACjC,MAAA7hB,UAAYp0B,OAAO0B,OAAO,CAC5B2yC,sBACAxgD,EAAG+/C,eACHziD,EAAG0iD,gBACH1+C,EAAG8f,QAAQhG,KACXjI,EAAGiO,QAAQC,KACZD,SACH,MAAM4lB,OAASyY,cAAc4C,cAAczR,OAAO0R,iBAAkB5C,QACpE+B,SAASvC,MAAMY,SAAUvf,UAAWmf,OAAQ1Y,QACnCya,SAAAY,cAAe9hB,UAAWmf,OAAQ1Y,QAC3C,GAAIya,SAASa,gBAAiB/hB,UAAWmf,OAAQ1Y,QAAS,CAC7Cya,SAAAY,cAAe9hB,UAAWmf,OAAQ1Y,OACvD,CACQqa,iBAAiB9gB,WACjBshB,WAAW3C,MAAMkB,WAAY7f,UAAWmf,OAAQ1Y,QAChDzG,UAAUj/B,GAAKi/B,UAAUvgC,EACzBugC,UAAUptB,GAAKotB,UAAUjjC,EACzBukD,WAAW3C,MAAMmB,eAAgB9f,UAAWmf,OAAQ1Y,QACpDvkB,MAAM8d,UAAY,CACdnlB,KAAMmlB,UAAUnlB,KAChBiG,IAAKkf,UAAUlf,IACfhG,MAAOklB,UAAUnlB,KAAOmlB,UAAUvgC,EAClCshB,OAAQif,UAAUlf,IAAMkf,UAAUjjC,EAClCqtB,OAAQ4V,UAAUjjC,EAClBmnB,MAAO8b,UAAUvgC,GAEhBoR,KAAA8tC,MAAM3e,UAAYsf,SACnB,MAAMpmB,IAAMomB,OAAOpmB,IACZttB,OAAA0B,OAAO4rB,IAAKhX,MAAM8d,WACzB9G,IAAIsK,OAAOxD,UAAUvgC,EAAGugC,UAAUjjC,EAAG,CACjC8d,KAAM,EACNiG,IAAK,EACLhG,MAAO,EACPiG,OAAQ,KAGxB,GAGA,MAAMmhC,aACL,cAAAC,CAAen4B,OAAQwQ,aAAa,CACpC,cAAA4nB,CAAel8B,SACD,OAAA,KACf,CACC,gBAAAoV,CAAiBpZ,MAAOrU,KAAM+K,UAAU,CACxC,mBAAA2iB,CAAoBrZ,MAAOrU,KAAM+K,UAAU,CAC3C,mBAAAwN,GACc,OAAA,CACf,CACC,cAAAiU,CAAepC,QAAS/T,MAAOkG,OAAQoQ,aAChCtW,MAAQlnB,KAAKC,IAAI,EAAGinB,OAAS+T,QAAQ/T,OACrCkG,OAASA,QAAU6N,QAAQ7N,OACpB,MAAA,CACHlG,YACAkG,OAAQptB,KAAKC,IAAI,EAAGu9B,YAAcx9B,KAAK8X,MAAMoP,MAAQsW,aAAepQ,QAEhF,CACC,UAAAi4B,CAAWr4B,QACG,OAAA,IACf,CACC,YAAAs4B,CAAate,QACd,EAGA,MAAMue,sBAAsBL,aACxB,cAAAC,CAAezuC,MACX,OAAOA,MAAQA,KAAKuW,YAAcvW,KAAKuW,WAAW,OAAS,IACnE,CACI,YAAAq4B,CAAate,QACTA,OAAOhyB,QAAQqO,UAAY,KACnC,EAGA,MAAMmiC,YAAc,WACnB,MAAMC,YAAc,CACjBC,WAAY,YACZC,UAAW,YACXC,SAAU,UACVC,aAAc,aACdC,YAAa,YACbC,YAAa,YACbC,UAAW,UACXC,aAAc,WACdC,WAAY,YAEhB,MAAMC,cAAiB3zC,OAAQA,QAAU,MAAQA,QAAU,GAC1D,SAAS4zC,WAAWp5B,OAAQwQ,aACzB,MAAM/T,MAAQuD,OAAOvD,MACf,MAAA48B,aAAer5B,OAAOs5B,aAAa,UACnC,MAAAC,YAAcv5B,OAAOs5B,aAAa,SACxCt5B,OAAOw4B,aAAe,CAClBxhB,QAAS,CACL5W,OAAQi5B,aACRn/B,MAAOq/B,YACP98B,MAAO,CACHxD,QAASwD,MAAMxD,QACfmH,OAAQ3D,MAAM2D,OACdlG,MAAOuC,MAAMvC,SAInBuC,MAAAxD,QAAUwD,MAAMxD,SAAW,QAC3BwD,MAAAgT,UAAYhT,MAAMgT,WAAa,aACjC,GAAA0pB,cAAcI,aAAc,CACtB,MAAAC,aAAehoB,aAAaxR,OAAQ,SAC1C,GAAIw5B,oBAA4B,EAAA,CAC5Bx5B,OAAO9F,MAAQs/B,YAC3B,CACA,CACQ,GAAAL,cAAcE,cAAe,CACzB,GAAAr5B,OAAOvD,MAAM2D,SAAW,GAAI,CACrBJ,OAAAI,OAASJ,OAAO9F,OAASsW,aAAe,EAC3D,KAAe,CACG,MAAAipB,cAAgBjoB,aAAaxR,OAAQ,UAC3C,GAAIy5B,qBAA6B,EAAA,CAC7Bz5B,OAAOI,OAASq5B,aAChC,CACA,CACA,CACW,OAAAz5B,MACX,CACA,MAAM05B,qBAAuBvoB,6BAA+B,CACxDE,QAAS,MACT,MACJ,SAASsoB,YAAYn+B,KAAM3X,KAAM+K,UAC7B,GAAI4M,KAAM,CACDA,KAAA8V,iBAAiBztB,KAAM+K,SAAU8qC,qBAC9C,CACA,CACA,SAASE,eAAe1hC,MAAOrU,KAAM+K,UAC7B,GAAAsJ,OAASA,MAAM8H,OAAQ,CACvB9H,MAAM8H,OAAOuR,oBAAoB1tB,KAAM+K,SAAU8qC,qBACzD,CACA,CACA,SAASG,gBAAgBtqB,OAAOrX,OAC5B,MAAMrU,KAAO40C,YAAYlpB,OAAM1rB,OAAS0rB,OAAM1rB,KAC9C,MAAM9M,EAAEA,EAAI6R,EAAAA,GAAO0mB,oBAAoBC,OAAOrX,OACvC,MAAA,CACHrU,UACAqU,YACA4hC,OAAQvqB,OACRx4B,EAAGA,SAAM,EAAYA,EAAI,KACzB6R,EAAGA,SAAM,EAAYA,EAAI,KAEjC,CACA,SAASmxC,iBAAiBC,SAAUh6B,QAChC,IAAA,MAAWxE,QAAQw+B,SAAS,CACxB,GAAIx+B,OAASwE,QAAUxE,KAAKy+B,SAASj6B,QAAS,CACnC,OAAA,IACnB,CACA,CACA,CACA,SAASk6B,qBAAqBhiC,MAAOrU,KAAM+K,UACvC,MAAMoR,OAAS9H,MAAM8H,OACrB,MAAMm6B,SAAW,IAAIC,iBAAkBC,UACnC,IAAIC,QAAU,MACd,IAAA,MAAW/S,SAAS8S,QAAQ,CACxBC,QAAUA,SAAWP,iBAAiBxS,MAAMgT,WAAYv6B,QACxDs6B,QAAUA,UAAYP,iBAAiBxS,MAAMiT,aAAcx6B,OACvE,CACQ,GAAIs6B,QAAS,CACC1rC,UACtB,IAEIurC,SAASM,QAAQltB,SAAU,CACvBmtB,UAAW,KACXC,QAAS,OAEN,OAAAR,QACX,CACA,SAASS,qBAAqB1iC,MAAOrU,KAAM+K,UACvC,MAAMoR,OAAS9H,MAAM8H,OACrB,MAAMm6B,SAAW,IAAIC,iBAAkBC,UACnC,IAAIC,QAAU,MACd,IAAA,MAAW/S,SAAS8S,QAAQ,CACxBC,QAAUA,SAAWP,iBAAiBxS,MAAMiT,aAAcx6B,QAC1Ds6B,QAAUA,UAAYP,iBAAiBxS,MAAMgT,WAAYv6B,OACrE,CACQ,GAAIs6B,QAAS,CACC1rC,UACtB,IAEIurC,SAASM,QAAQltB,SAAU,CACvBmtB,UAAW,KACXC,QAAS,OAEN,OAAAR,QACX,CACA,MAAMU,uBAAyB5jC,IAC/B,IAAI6jC,oBAAsB,EAC1B,SAASC,iBACL,MAAMC,IAAMjrC,OAAOkM,iBACnB,GAAI++B,MAAQF,oBAAqB,CAC7B,MACR,CAC0BA,oBAAAE,IACHH,mBAAA3rC,QAAQ,CAACoH,OAAQ4B,SAC5B,GAAAA,MAAM2H,0BAA4Bm7B,IAAK,CAC/B1kC,QACpB,GAEA,CACA,SAAS2kC,8BAA8B/iC,MAAO5B,QACtC,IAACukC,mBAAmBpxC,KAAM,CACnBsG,OAAAuhB,iBAAiB,SAAUypB,eAC1C,CACuBF,mBAAAjrC,IAAIsI,MAAO5B,OAClC,CACA,SAAS4kC,gCAAgChjC,OACrC2iC,mBAAmBpxB,OAAOvR,OACtB,IAAC2iC,mBAAmBpxC,KAAM,CACnBsG,OAAAwhB,oBAAoB,SAAUwpB,eAC7C,CACA,CACA,SAASI,qBAAqBjjC,MAAOrU,KAAM+K,UACvC,MAAMoR,OAAS9H,MAAM8H,OACf,MAAA8P,UAAY9P,QAAUwN,eAAexN,QAC3C,IAAK8P,UAAW,CACZ,MACR,CACI,MAAMxZ,OAASrG,UAAU,CAACiK,MAAOkG,UAC7B,MAAM3qB,EAAIq6B,UAAUC,YACpBnhB,SAASsL,MAAOkG,QACZ,GAAA3qB,EAAIq6B,UAAUC,YAAa,CACjBnhB,UACtB,GACOmB,QACH,MAAMoqC,SAAW,IAAIiB,eAAgBf,UAC3B,MAAA9S,MAAQ8S,QAAQ,GAChB,MAAAngC,MAAQqtB,MAAM8T,YAAYnhC,MAC1B,MAAAkG,OAASmnB,MAAM8T,YAAYj7B,OAC7B,GAAAlG,QAAU,GAAKkG,SAAW,EAAG,CAC7B,MACZ,CACQ9J,OAAO4D,MAAOkG,UAElB+5B,SAASM,QAAQ3qB,WACjBmrB,8BAA8B/iC,MAAO5B,QAC9B,OAAA6jC,QACX,CACA,SAASmB,gBAAgBpjC,MAAOrU,KAAMs2C,UAClC,GAAIA,SAAU,CACVA,SAASoB,YACjB,CACI,GAAI13C,OAAS,SAAU,CACnBq3C,gCAAgChjC,MACxC,CACA,CACA,SAASsjC,qBAAqBtjC,MAAOrU,KAAM+K,UACvC,MAAMoR,OAAS9H,MAAM8H,OACfkI,MAAAA,OAAQjY,UAAWsf,SACjB,GAAArX,MAAM2E,MAAQ,KAAM,CACXjO,SAAAirC,gBAAgBtqB,OAAOrX,OAC5C,GACOA,OACSyhC,YAAA35B,OAAQnc,KAAMqkB,QACnBA,OAAAA,MACX,CACC,MAAMuzB,oBAAoBvD,aAC1B,cAAAC,CAAen4B,OAAQwQ,aAChB,MAAMtU,QAAU8D,QAAUA,OAAOC,YAAcD,OAAOC,WAAW,MAC7D,GAAA/D,SAAWA,QAAQ8D,SAAWA,OAAQ,CACtCo5B,WAAWp5B,OAAQwQ,aACZ,OAAAtU,OACnB,CACe,OAAA,IACf,CACC,cAAAk8B,CAAel8B,SACR,MAAM8D,OAAS9D,QAAQ8D,OACnB,IAACA,OAAOw4B,aAAc,CACf,OAAA,KACnB,CACc,MAAAxhB,QAAUhX,OAAOw4B,aAAaxhB,QACpC,CACI,SACA,SACF9nB,QAASsW,QACD,MAAAhgB,MAAQwxB,QAAQxR,OAClB,GAAAjgB,cAAcC,OAAQ,CACtBwa,OAAO07B,gBAAgBl2B,MACvC,KAAmB,CACIxF,OAAA27B,aAAan2B,MAAMhgB,MAC1C,IAEc,MAAAiX,MAAQua,QAAQva,OAAS,CAAE,EACjC7a,OAAOD,KAAK8a,OAAOvN,QAASrH,MACxBmY,OAAOvD,MAAM5U,KAAO4U,MAAM5U,OAE9BmY,OAAO9F,MAAQ8F,OAAO9F,aACf8F,OAAOw4B,aACP,OAAA,IACf,CACC,gBAAAlnB,CAAiBpZ,MAAOrU,KAAM+K,UAClB9K,KAAAytB,oBAAoBrZ,MAAOrU,MAChC,MAAM+3C,QAAU1jC,MAAM2jC,WAAa3jC,MAAM2jC,SAAW,CAAA,GACpD,MAAMC,SAAW,CACbC,OAAQ7B,qBACR8B,OAAQpB,qBACRtkC,OAAQ6kC,sBAEN,MAAAvI,QAAUkJ,SAASj4C,OAAS23C,qBAClCI,QAAQ/3C,MAAQ+uC,QAAQ16B,MAAOrU,KAAM+K,SAC7C,CACC,mBAAA2iB,CAAoBrZ,MAAOrU,MACpB,MAAM+3C,QAAU1jC,MAAM2jC,WAAa3jC,MAAM2jC,SAAW,CAAA,GAC9C3zB,MAAAA,OAAQ0zB,QAAQ/3C,MACtB,IAAKqkB,OAAO,CACR,MACZ,CACQ,MAAM4zB,SAAW,CACbC,OAAQT,gBACRU,OAAQV,gBACRhlC,OAAQglC,iBAEN,MAAA1I,QAAUkJ,SAASj4C,OAAS+1C,eAC1BhH,QAAA16B,MAAOrU,KAAMqkB,QACrB0zB,QAAQ/3C,WAAQ,CACxB,CACI,mBAAAuY,GACI,OAAOrM,OAAOkM,gBACtB,CACC,cAAAoU,CAAerQ,OAAQ9F,MAAOkG,OAAQoQ,aAC/B,OAAOH,eAAerQ,OAAQ9F,MAAOkG,OAAQoQ,YACrD,CACC,UAAA6nB,CAAWr4B,QACE,MAAA8P,UAAY9P,QAAUwN,eAAexN,QACpC,SAAG8P,WAAaA,UAAUmsB,YACzC,EAGA,SAASC,gBAAgBl8B,QACrB,IAAKsN,0BAA4B6uB,kBAAoB,aAAen8B,kBAAkBm8B,gBAAiB,CAC5F,OAAA5D,aACf,CACW,OAAAkD,WACX,CAEA,MAAMW,QAAN,WAAAx4C,GAGIoiC,cAAAliC,KAAA,KACAkiC,cAAAliC,KAAA,KACSkiC,cAAAliC,KAAA,SAAA,OACTkiC,cAAAliC,KAAA,WACAkiC,cAAAliC,KAAA,cAAA,CACA,eAAAu4C,CAAgBjJ,kBACZ,MAAMr8C,EAAEA,EAAA6R,EAAIA,GAAO9E,KAAK2vC,SAAS,CAC7B,IACA,KACDL,kBACI,MAAA,CACHr8C,IACA6R,IAEZ,CACI,QAAA0zC,GACI,OAAO7wC,SAAS3H,KAAK/M,IAAM0U,SAAS3H,KAAK8E,EACjD,CACI,QAAA6qC,CAASpuB,MAAOk3B,OACZ,MAAM3lB,MAAQ9yB,KAAK+2B,YACf,IAAC0hB,QAAU3lB,MAAO,CAEX,OAAA9yB,IACnB,CACQ,MAAM/O,IAAM,CAAE,EACRswB,MAAAnW,QAASsW,QACXzwB,IAAIywB,OAAQoR,MAAMpR,QAASoR,MAAMpR,OAAMpP,SAAWwgB,MAAMpR,OAAM8T,IAAMx1B,KAAK0hB,SAEtE,OAAAzwB,GACf,EA/BIixC,cADEoW,QACK,WAAW,CAAE,GACpBpW,cAFEoW,QAEK,iBAiCX,SAAS1hC,SAASiD,MAAO1F,OACf,MAAAukC,SAAW7+B,MAAM3V,QAAQiQ,MACzB,MAAAwkC,mBAAqBC,kBAAkB/+B,OAC7C,MAAMg/B,WAAa3pD,KAAKE,IAAIspD,SAASI,eAAiBH,mBAAoBA,oBAC1E,MAAMI,aAAeL,SAAS1hC,MAAMgiC,QAAUC,gBAAgB9kC,OAAS,GACvE,MAAM+kC,gBAAkBH,aAAa/nD,OAC/B,MAAAmoD,MAAQJ,aAAa,GACrB,MAAAxuC,KAAOwuC,aAAaG,gBAAkB,GAC5C,MAAME,SAAW,GACjB,GAAIF,gBAAkBL,WAAY,CAC9BQ,WAAWllC,MAAOilC,SAAUL,aAAcG,gBAAkBL,YACrD,OAAAO,QACf,CACI,MAAMzP,QAAU2P,iBAAiBP,aAAc5kC,MAAO0kC,YACtD,GAAIK,gBAAkB,EAAG,CACrB,IAAIrnD,EAAGwR,KACD,MAAAk2C,gBAAkBL,gBAAkB,EAAIhqD,KAAKL,OAAO0b,KAAO4uC,QAAUD,gBAAkB,IAAM,KAC9FnyB,KAAA5S,MAAOilC,SAAUzP,QAASloC,cAAc83C,iBAAmB,EAAIJ,MAAQI,gBAAiBJ,OAC7F,IAAItnD,EAAI,EAAGwR,KAAO61C,gBAAkB,EAAGrnD,EAAIwR,KAAMxR,IAAI,CAC5Ck1B,KAAA5S,MAAOilC,SAAUzP,QAASoP,aAAalnD,GAAIknD,aAAalnD,EAAI,GAC7E,CACak1B,KAAA5S,MAAOilC,SAAUzP,QAASp/B,KAAM9I,cAAc83C,iBAAmBplC,MAAMnjB,OAASuZ,KAAOgvC,iBACrF,OAAAH,QACf,CACSryB,KAAA5S,MAAOilC,SAAUzP,SACf,OAAAyP,QACX,CACA,SAASR,kBAAkB/+B,OACjB,MAAAzE,OAASyE,MAAM3V,QAAQkR,OACvB,MAAAS,WAAagE,MAAM2/B,YACzB,MAAMC,SAAW5/B,MAAM4oB,QAAU5sB,YAAcT,OAAS,EAAI,GACtD,MAAAskC,SAAW7/B,MAAM8/B,WAAa9jC,WACpC,OAAO3mB,KAAK8X,MAAM9X,KAAKE,IAAIqqD,SAAUC,UACzC,CACC,SAASJ,iBAAiBP,aAAc5kC,MAAO0kC,YACtC,MAAAe,iBAAmBC,eAAed,cAClC,MAAApP,QAAUx1B,MAAMnjB,OAAS6nD,WAC/B,IAAKe,iBAAkB,CACZ,OAAA1qD,KAAKC,IAAIw6C,QAAS,EACjC,CACU,MAAAmQ,QAAU3yC,WAAWyyC,kBACnB,IAAA,IAAA/nD,EAAI,EAAGwR,KAAOy2C,QAAQ9oD,OAAS,EAAGa,EAAIwR,KAAMxR,IAAI,CAC9C,MAAA+iC,OAASklB,QAAQjoD,GACvB,GAAI+iC,OAAS+U,QAAS,CACX,OAAA/U,MACnB,CACA,CACW,OAAA1lC,KAAKC,IAAIw6C,QAAS,EAC7B,CACC,SAASsP,gBAAgB9kC,OACtB,MAAM/M,OAAS,GACf,IAAIvV,EAAGwR,KACP,IAAIxR,EAAI,EAAGwR,KAAO8Q,MAAMnjB,OAAQa,EAAIwR,KAAMxR,IAAI,CACtC,GAAAsiB,MAAMtiB,GAAGmlB,MAAO,CAChB5P,OAAOlC,KAAKrT,EACxB,CACA,CACW,OAAAuV,MACX,CACC,SAASiyC,WAAWllC,MAAOilC,SAAUL,aAAcpP,SAChD,IAAIn8B,MAAQ,EACR6Z,IAAAA,MAAO0xB,aAAa,GACpB,IAAAlnD,EACM83C,QAAAz6C,KAAK6qD,KAAKpQ,SACpB,IAAI93C,EAAI,EAAGA,EAAIsiB,MAAMnjB,OAAQa,IAAI,CAC7B,GAAIA,IAAMw1B,MAAM,CACH+xB,SAAAl0C,KAAKiP,MAAMtiB,IACpB2b,QACA6Z,MAAO0xB,aAAavrC,MAAQm8B,QACxC,CACA,CACA,CACC,SAAS5iB,KAAK5S,MAAOilC,SAAUzP,QAASqQ,WAAYC,UAC3C,MAAA3wC,MAAQjH,eAAe23C,WAAY,GACnC,MAAAzwC,IAAMra,KAAKE,IAAIiT,eAAe43C,SAAU9lC,MAAMnjB,QAASmjB,MAAMnjB,QACnE,IAAIwc,MAAQ,EACZ,IAAIxc,OAAQa,EAAGw1B,MACLsiB,QAAAz6C,KAAK6qD,KAAKpQ,SACpB,GAAIsQ,SAAU,CACVjpD,OAASipD,SAAWD,WACpBrQ,QAAU34C,OAAS9B,KAAK8X,MAAMhW,OAAS24C,QAC/C,CACItiB,MAAO/d,MACP,MAAM+d,MAAO,EAAE,CACX7Z,QACA6Z,MAAOn4B,KAAKL,MAAMya,MAAQkE,MAAQm8B,QAC1C,CACQ,IAAA93C,EAAI3C,KAAKC,IAAIma,MAAO,GAAIzX,EAAI0X,IAAK1X,IAAI,CACrC,GAAIA,IAAMw1B,MAAM,CACH+xB,SAAAl0C,KAAKiP,MAAMtiB,IACpB2b,QACA6Z,MAAOn4B,KAAKL,MAAMya,MAAQkE,MAAQm8B,QAC9C,CACA,CACA,CACC,SAASkQ,eAAeh0B,KACrB,MAAM90B,IAAM80B,IAAI70B,OAChB,IAAIa,EAAGq8C,KACP,GAAIn9C,IAAM,EAAG,CACF,OAAA,KACf,CACQ,IAAAm9C,KAAOroB,IAAI,GAAIh0B,EAAI,EAAGA,EAAId,MAAOc,EAAE,CACnC,GAAIg0B,IAAIh0B,GAAKg0B,IAAIh0B,EAAI,KAAOq8C,KAAM,CACvB,OAAA,KACnB,CACA,CACW,OAAAA,IACX,CAEA,MAAMgM,aAAgBttC,OAAQA,QAAU,OAAS,QAAUA,QAAU,QAAU,OAASA,MACxF,MAAMutC,eAAiB,CAACtgC,MAAO4qB,KAAMrvB,SAASqvB,OAAS,OAASA,OAAS,OAAS5qB,MAAM4qB,MAAQrvB,OAASyE,MAAM4qB,MAAQrvB,OACvH,MAAMglC,cAAgB,CAACC,YAAavB,gBAAgB5pD,KAAKE,IAAI0pD,eAAiBuB,YAAaA,aAC1F,SAASC,OAAOz0B,IAAK00B,UAClB,MAAMnzC,OAAS,GACT,MAAAozC,UAAY30B,IAAI70B,OAASupD,SAC/B,MAAMxpD,IAAM80B,IAAI70B,OAChB,IAAIa,EAAI,EACF,KAAAA,EAAId,IAAKc,GAAK2oD,UAAU,CAC1BpzC,OAAOlC,KAAK2gB,IAAI32B,KAAK8X,MAAMnV,IACnC,CACW,OAAAuV,MACX,CACC,SAASqzC,oBAAoB5gC,MAAOpW,OAAOi3C,iBAClC,MAAA1pD,OAAS6oB,MAAM1F,MAAMnjB,OAC3B,MAAM2pD,YAAazrD,KAAKE,IAAIqU,OAAOzS,OAAS,GAC5C,MAAMsY,MAAQuQ,MAAM8sB,YACpB,MAAMp9B,IAAMsQ,MAAM+sB,UAClB,MAAMjgC,QAAU,KACZ,IAAAi0C,UAAY/gC,MAAM+oB,gBAAgB+X,aAClC,IAAAvlC,OACJ,GAAIslC,gBAAiB,CACjB,GAAI1pD,SAAW,EAAG,CACdokB,OAASlmB,KAAKC,IAAIyrD,UAAYtxC,MAAOC,IAAMqxC,UACvD,MAAA,GAAmBn3C,SAAU,EAAG,CACpB2R,QAAUyE,MAAM+oB,gBAAgB,GAAKgY,WAAa,CAC9D,KAAe,CACHxlC,QAAUwlC,UAAY/gC,MAAM+oB,gBAAgB+X,YAAa,IAAM,CAC3E,CACqBA,WAAAA,YAAal3C,OAAQ2R,QAAUA,OAC5C,GAAIwlC,UAAYtxC,MAAQ3C,SAAWi0C,UAAYrxC,IAAM5C,QAAS,CAC1D,MACZ,CACA,CACW,OAAAi0C,SACX,CACC,SAASt/B,eAAeu/B,OAAQ7pD,QACxB+R,KAAA83C,OAASx/B,QACV,MAAMP,GAAKO,MAAMP,GACX,MAAAc,MAAQd,GAAG9pB,OAAS,EACtB,IAAAa,EACJ,GAAI+pB,MAAQ5qB,OAAQ,CAChB,IAAIa,EAAI,EAAGA,EAAI+pB,QAAS/pB,EAAE,QACfwpB,MAAMR,KAAKC,GAAGjpB,GACrC,CACeipB,GAAAnP,OAAO,EAAGiQ,MACzB,GAEA,CACC,SAASk/B,kBAAkB52C,SACjB,OAAAA,QAAQ0R,UAAY1R,QAAQ2R,WAAa,CACpD,CACC,SAASklC,eAAe72C,QAAS6d,UAC1B,IAAC7d,QAAQiR,QAAS,CACX,OAAA,CACf,CACI,MAAMsD,KAAOqJ,OAAO5d,QAAQuU,KAAMsJ,UAC5B,MAAAhP,QAAU8O,UAAU3d,QAAQ6O,SAClC,MAAMqN,MAAQjuB,QAAQ+R,QAAQoS,MAAQpS,QAAQoS,KAAKtlB,OAAS,EACrD,OAAAovB,MAAQ3H,KAAKG,WAAa7F,QAAQuJ,MAC7C,CACA,SAAS0+B,mBAAmB/0B,OAAQpM,OAChC,OAAO4I,cAAcwD,OAAQ,CACzBpM,YACA9Z,KAAM,SAEd,CACA,SAASk7C,kBAAkBh1B,OAAQxiB,OAAOowB,MACtC,OAAOpR,cAAcwD,OAAQ,CACzB4N,UACApwB,MAAAA,OACA1D,KAAM,QAEd,CACA,SAASm7C,WAAWtuC,MAAOiiC,SAAU5rC,SAC5B,IAAAhS,IAAM0b,mBAAmBC,OAC9B,GAAI3J,SAAW4rC,WAAa,UAAY5rC,SAAW4rC,WAAa,QAAS,CACrE59C,IAAMipD,aAAajpD,IAC3B,CACW,OAAAA,GACX,CACA,SAASkqD,UAAUthC,MAAOzE,OAAQy5B,SAAUjiC,OACxC,MAAMoG,IAAEA,IAAMjG,KAAAA,KAAAkG,OAAOA,OAASjG,MAAAA,MAAAoH,MAAQA,OAAWyF,MACjD,MAAMqY,UAAEA,UAAYpY,OAAAA,SAAY1F,MAChC,IAAI2I,SAAW,EACf,IAAI0D,SAAU26B,OAAQC,OACtB,MAAM/+B,OAASrJ,OAASD,IACxB,MAAMoD,MAAQpJ,MAAQD,KAClB,GAAA8M,MAAMwqB,eAAgB,CACb+W,OAAAvuC,eAAeD,MAAOG,KAAMC,OACjC,GAAAjL,SAAS8sC,UAAW,CACpB,MAAMyM,eAAiBx9C,OAAOD,KAAKgxC,UAAU,GACvC,MAAAntC,MAAQmtC,SAASyM,gBACvBD,OAASvhC,QAAOwhC,gBAAgBntC,iBAAiBzM,OAAS4a,OAASlH,MAC/E,MAAA,GAAmBy5B,WAAa,SAAU,CAC9BwM,QAAUnpB,UAAUjf,OAASif,UAAUlf,KAAO,EAAIsJ,OAASlH,MACvE,KAAe,CACMimC,OAAAlB,eAAetgC,MAAOg1B,SAAUz5B,OACrD,CACQqL,SAAWzT,MAAQD,IAC3B,KAAW,CACC,GAAAhL,SAAS8sC,UAAW,CACpB,MAAMyM,eAAiBx9C,OAAOD,KAAKgxC,UAAU,GACvC,MAAAntC,MAAQmtC,SAASyM,gBACvBF,OAASthC,QAAOwhC,gBAAgBntC,iBAAiBzM,OAAS0U,MAAQhB,MAC9E,MAAA,GAAmBy5B,WAAa,SAAU,CAC9BuM,QAAUlpB,UAAUnlB,KAAOmlB,UAAUllB,OAAS,EAAIoJ,MAAQhB,MACtE,KAAe,CACMgmC,OAAAjB,eAAetgC,MAAOg1B,SAAUz5B,OACrD,CACiBimC,OAAAxuC,eAAeD,MAAOqG,OAAQD,KAC5B+J,SAAA8xB,WAAa,QAAUxoC,QAAUA,OACpD,CACW,MAAA,CACH+0C,cACAC,cACA56B,kBACA1D,kBAER,CACA,MAAMw+B,cAAcjD,QAChB,WAAAx4C,CAAYk1B,KACDoQ,QACNplC,KAAKwB,GAAKwzB,IAAIxzB,GACdxB,KAAKD,KAAOi1B,IAAIj1B,KAChBC,KAAKkE,aAAU,EACflE,KAAK+Y,IAAMic,IAAIjc,IACf/Y,KAAKoU,MAAQ4gB,IAAI5gB,MACjBpU,KAAKgT,SAAM,EACXhT,KAAKiT,YAAS,EACdjT,KAAK+M,UAAO,EACZ/M,KAAKgN,WAAQ,EACbhN,KAAKoW,WAAQ,EACbpW,KAAKsc,YAAS,EACftc,KAAKw7C,SAAW,CACZzuC,KAAM,EACNC,MAAO,EACPgG,IAAK,EACLC,OAAQ,GAEXjT,KAAKygB,cAAW,EAChBzgB,KAAK+rB,eAAY,EACjB/rB,KAAKy7C,gBAAa,EAClBz7C,KAAK07C,mBAAgB,EACrB17C,KAAK27C,iBAAc,EACnB37C,KAAK47C,kBAAe,EACpB57C,KAAK+N,UAAO,EACZ/N,KAAK67C,mBAAgB,EACtB77C,KAAK5Q,SAAM,EACX4Q,KAAK7Q,SAAM,EACX6Q,KAAK87C,YAAS,EACb97C,KAAKmU,MAAQ,GACbnU,KAAK+7C,eAAiB,KACtB/7C,KAAKg8C,YAAc,KACnBh8C,KAAKi8C,YAAc,KACpBj8C,KAAKyiC,QAAU,EACfziC,KAAK25C,WAAa,EAClB35C,KAAKk8C,kBAAoB,CAAE,EAC1Bl8C,KAAK2mC,iBAAc,EACnB3mC,KAAK4mC,eAAY,EAClB5mC,KAAK0uC,eAAiB,MACtB1uC,KAAKm8C,cAAW,EAChBn8C,KAAKo8C,cAAW,EAChBp8C,KAAKq8C,mBAAgB,EACrBr8C,KAAKs8C,mBAAgB,EACrBt8C,KAAKu8C,aAAe,EACpBv8C,KAAKw8C,aAAe,EACpBx8C,KAAKoiC,OAAS,CAAE,EAChBpiC,KAAKy8C,kBAAoB,MACzBz8C,KAAKu7B,cAAW,CACxB,CACC,IAAAyS,CAAK9pC,SACElE,KAAKkE,QAAUA,QAAQygB,WAAW3kB,KAAKmc,cACvCnc,KAAK+N,KAAO7J,QAAQ6J,KACpB/N,KAAKo8C,SAAWp8C,KAAK4mB,MAAM1iB,QAAQ9U,KACnC4Q,KAAKm8C,SAAWn8C,KAAK4mB,MAAM1iB,QAAQ/U,KACnC6Q,KAAKs8C,cAAgBt8C,KAAK4mB,MAAM1iB,QAAQw4C,cACxC18C,KAAKq8C,cAAgBr8C,KAAK4mB,MAAM1iB,QAAQy4C,aAChD,CACC,KAAA/1B,CAAMsT,IAAKz2B,QACG,OAAAy2B,GACf,CACC,aAAAhsB,GACO,IAAIkuC,SAAEA,SAAAD,SAAWA,SAAWG,cAAAA,cAAAD,cAAgBA,eAAmBr8C,KACpDo8C,SAAAj6C,gBAAgBi6C,SAAUn6C,OAAOkE,mBACjCg2C,SAAAh6C,gBAAgBg6C,SAAUl6C,OAAOw2B,mBAC5B6jB,cAAAn6C,gBAAgBm6C,cAAer6C,OAAOkE,mBACtCk2C,cAAAl6C,gBAAgBk6C,cAAep6C,OAAOw2B,mBAC/C,MAAA,CACHrpC,IAAK+S,gBAAgBi6C,SAAUE,eAC/BntD,IAAKgT,gBAAgBg6C,SAAUE,eAC/BruC,WAAYhM,eAAeo6C,UAC3BnuC,WAAYjM,eAAem6C,UAEvC,CACC,SAAAtd,CAAUpE,UACH,IAAIrrC,IAAEA,IAAMD,IAAAA,IAAA6e,WAAMA,sBAAaC,YAAgBjO,KAAKkO,gBAChD,IAAAlc,MACJ,GAAIgc,YAAcC,WAAY,CACnB,MAAA,CACH7e,QACAD,QAEhB,CACc,MAAAytD,MAAQ58C,KAAKi5B,0BACX,IAAA,IAAApnC,EAAI,EAAGwR,KAAOu5C,MAAM5rD,OAAQa,EAAIwR,OAAQxR,EAAE,CAC9CG,MAAQ4qD,MAAM/qD,GAAGsnC,WAAW0F,UAAU7+B,KAAMy6B,UAC5C,IAAKzsB,WAAY,CACb5e,IAAMF,KAAKE,IAAIA,IAAK4C,MAAM5C,IAC1C,CACY,IAAK6e,WAAY,CACb9e,IAAMD,KAAKC,IAAIA,IAAK6C,MAAM7C,IAC1C,CACA,CACcC,IAAA6e,YAAc7e,IAAMD,IAAMA,IAAMC,IAChCD,IAAA6e,YAAc5e,IAAMD,IAAMC,IAAMD,IAC/B,MAAA,CACHC,IAAK+S,gBAAgB/S,IAAK+S,gBAAgBhT,IAAKC,MAC/CD,IAAKgT,gBAAgBhT,IAAKgT,gBAAgB/S,IAAKD,MAE3D,CACC,UAAAojD,GACc,MAAA,CACHxlC,KAAM/M,KAAK27C,aAAe,EAC1B3oC,IAAKhT,KAAKy7C,YAAc,EACxBzuC,MAAOhN,KAAK47C,cAAgB,EAC5B3oC,OAAQjT,KAAK07C,eAAiB,EAE1C,CACC,QAAAmB,GACO,OAAO78C,KAAKmU,KACpB,CACC,SAAAiqB,GACa,MAAAvjB,KAAO7a,KAAKoU,MAAMyG,KACxB,OAAO7a,KAAKkE,QAAQi6B,SAAWn+B,KAAKqkC,eAAiBxpB,KAAKiiC,QAAUjiC,KAAKkiC,UAAYliC,KAAKsjB,QAAU,EAC5G,CACC,aAAA6e,CAAc9qB,UAAYlyB,KAAKoU,MAAM8d,WAC9B,MAAMrmB,MAAQ7L,KAAKg8C,cAAgBh8C,KAAKg8C,YAAch8C,KAAKi9C,mBAAmB/qB,YACvE,OAAArmB,KACf,CACI,YAAAqoC,GACIl0C,KAAKoiC,OAAS,CAAE,EAChBpiC,KAAKy8C,kBAAoB,KACjC,CACI,YAAAS,GACav6C,SAAA3C,KAAKkE,QAAQg5C,aAAc,CAChCl9C,MAEZ,CACC,MAAA01B,CAAOjV,SAAUsL,UAAWY,SACrB,MAAMtX,YAAEA,YAAcG,MAAAA,MAAQrB,MAAOukC,UAAc14C,KAAKkE,QACxD,MAAMi5C,WAAazE,SAASyE,WAC5Bn9C,KAAKk9C,eACLl9C,KAAKygB,SAAWA,SAChBzgB,KAAK+rB,UAAYA,UACZ/rB,KAAAw7C,SAAW7uB,QAAU7uB,OAAO0B,OAAO,CACpCuN,KAAM,EACNC,MAAO,EACPgG,IAAK,EACLC,OAAQ,GACT0Z,SACH3sB,KAAKmU,MAAQ,KACbnU,KAAKi8C,YAAc,KACnBj8C,KAAK+7C,eAAiB,KACtB/7C,KAAKg8C,YAAc,KACnBh8C,KAAKo9C,sBACLp9C,KAAKq9C,gBACLr9C,KAAKs9C,qBACLt9C,KAAK25C,WAAa35C,KAAKqkC,eAAiBrkC,KAAKoW,MAAQuW,QAAQ5f,KAAO4f,QAAQ3f,MAAQhN,KAAKsc,OAASqQ,QAAQ3Z,IAAM2Z,QAAQ1Z,OACpH,IAACjT,KAAKy8C,kBAAmB,CACzBz8C,KAAKu9C,mBACLv9C,KAAKw9C,sBACLx9C,KAAKy9C,kBACLz9C,KAAK87C,OAAS15B,UAAUpiB,KAAMwV,MAAOH,aACrCrV,KAAKy8C,kBAAoB,IACrC,CACQz8C,KAAK09C,mBACL19C,KAAKmU,MAAQnU,KAAK29C,cAAgB,GAClC39C,KAAK49C,kBACC,MAAAC,gBAAkBV,WAAan9C,KAAKmU,MAAMnjB,OAC3CgP,KAAA89C,sBAAsBD,gBAAkBvD,OAAOt6C,KAAKmU,MAAOgpC,YAAcn9C,KAAKmU,OACnFnU,KAAKo2B,YACLp2B,KAAK+9C,+BACL/9C,KAAKg+C,yBACLh+C,KAAKi+C,8BACL,GAAIvF,SAASvjC,UAAYujC,SAAS9hC,UAAY8hC,SAASh1C,SAAW,QAAS,CACvE1D,KAAKmU,MAAQyC,SAAS5W,KAAMA,KAAKmU,OACjCnU,KAAKi8C,YAAc,KACnBj8C,KAAKk+C,eACjB,CACQ,GAAIL,gBAAiB,CACZ79C,KAAA89C,sBAAsB99C,KAAKmU,MAC5C,CACQnU,KAAKm+C,YACLn+C,KAAKo+C,MACLp+C,KAAKq+C,WACLr+C,KAAKs+C,aACb,CACC,SAAAloB,GACW,IAAAmoB,cAAgBv+C,KAAKkE,QAAQjB,QACjC,IAAIgkC,WAAYE,SACZ,GAAAnnC,KAAKqkC,eAAgB,CACrB4C,WAAajnC,KAAK+M,KAClBo6B,SAAWnnC,KAAKgN,KAC5B,KAAe,CACHi6B,WAAajnC,KAAKgT,IAClBm0B,SAAWnnC,KAAKiT,OAChBsrC,eAAiBA,aAC7B,CACQv+C,KAAK2mC,YAAcM,WACnBjnC,KAAK4mC,UAAYO,SACjBnnC,KAAK0uC,eAAiB6P,cACtBv+C,KAAKyiC,QAAU0E,SAAWF,WACrBjnC,KAAAw+C,eAAiBx+C,KAAKkE,QAAQu6C,aAC3C,CACI,WAAAH,GACa37C,SAAA3C,KAAKkE,QAAQo6C,YAAa,CAC/Bt+C,MAEZ,CACI,mBAAAo9C,GACaz6C,SAAA3C,KAAKkE,QAAQk5C,oBAAqB,CACvCp9C,MAEZ,CACI,aAAAq9C,GACQ,GAAAr9C,KAAKqkC,eAAgB,CACrBrkC,KAAKoW,MAAQpW,KAAKygB,SAClBzgB,KAAK+M,KAAO,EACZ/M,KAAKgN,MAAQhN,KAAKoW,KAC9B,KAAe,CACHpW,KAAKsc,OAAStc,KAAK+rB,UACnB/rB,KAAKgT,IAAM,EACXhT,KAAKiT,OAASjT,KAAKsc,MAC/B,CACQtc,KAAK27C,YAAc,EACnB37C,KAAKy7C,WAAa,EAClBz7C,KAAK47C,aAAe,EACpB57C,KAAK07C,cAAgB,CAC7B,CACI,kBAAA4B,GACa36C,SAAA3C,KAAKkE,QAAQo5C,mBAAoB,CACtCt9C,MAEZ,CACI,UAAA0+C,CAAWtsC,MACPpS,KAAKoU,MAAMuqC,cAAcvsC,KAAMpS,KAAKmc,cAC3BxZ,SAAA3C,KAAKkE,QAAQkO,MAAO,CACzBpS,MAEZ,CACI,gBAAAu9C,GACIv9C,KAAK0+C,WAAW,mBACxB,CACI,mBAAAlB,GAAsB,CACtB,eAAAC,GACIz9C,KAAK0+C,WAAW,kBACxB,CACI,gBAAAhB,GACI19C,KAAK0+C,WAAW,mBACxB,CACC,UAAAf,GACO,MAAO,EACf,CACI,eAAAC,GACI59C,KAAK0+C,WAAW,kBACxB,CACI,2BAAAE,GACaj8C,SAAA3C,KAAKkE,QAAQ06C,4BAA6B,CAC/C5+C,MAEZ,CACC,kBAAA6+C,CAAmB1qC,OACN,MAAAukC,SAAW14C,KAAKkE,QAAQiQ,MAC9B,IAAItiB,EAAGwR,KAAMwwB,KACb,IAAIhiC,EAAI,EAAGwR,KAAO8Q,MAAMnjB,OAAQa,EAAIwR,KAAMxR,IAAI,CAC1CgiC,KAAO1f,MAAMtiB,GACRgiC,KAAAwL,MAAQ18B,SAAS+1C,SAAS/1C,SAAU,CACrCkxB,KAAKnyB,MACL7P,EACAsiB,OACDnU,KACf,CACA,CACI,0BAAA8+C,GACan8C,SAAA3C,KAAKkE,QAAQ46C,2BAA4B,CAC9C9+C,MAEZ,CACI,4BAAA+9C,GACap7C,SAAA3C,KAAKkE,QAAQ65C,6BAA8B,CAChD/9C,MAEZ,CACI,sBAAAg+C,GACI,MAAM95C,QAAUlE,KAAKkE,QACrB,MAAMw0C,SAAWx0C,QAAQiQ,MACzB,MAAM4qC,SAAW3E,cAAcp6C,KAAKmU,MAAMnjB,OAAQkT,QAAQiQ,MAAM2kC,eAC1D,MAAAviC,YAAcmiC,SAASniC,aAAe,EAC5C,MAAMC,YAAckiC,SAASliC,YAC7B,IAAIqlC,cAAgBtlC,YACpB,IAAIT,UAAWiW,UAAWizB,iBAC1B,IAAKh/C,KAAKi/C,eAAiBvG,SAASvjC,SAAWoB,aAAeC,aAAeuoC,UAAY,IAAM/+C,KAAKqkC,eAAgB,CAChHrkC,KAAK67C,cAAgBtlC,YACrB,MACZ,CACc,MAAA2oC,WAAal/C,KAAKm/C,iBAClB,MAAAC,cAAgBF,WAAWG,OAAOjpC,MAClC,MAAAkpC,eAAiBJ,WAAWK,QAAQjjC,OACpC,MAAAmE,SAAW5W,YAAY7J,KAAKoU,MAAMgC,MAAQgpC,cAAe,EAAGp/C,KAAKygB,UACvE3K,UAAY5R,QAAQkR,OAASpV,KAAKygB,SAAWs+B,SAAWt+B,UAAYs+B,SAAW,GAC3E,GAAAK,cAAgB,EAAItpC,UAAW,CAC/BA,UAAY2K,UAAYs+B,UAAY76C,QAAQkR,OAAS,GAAM,IAC3D2W,UAAY/rB,KAAK+rB,UAAY+uB,kBAAkB52C,QAAQuR,MAAQijC,SAAS3lC,QAAUgoC,eAAe72C,QAAQmS,MAAOrW,KAAKoU,MAAMlQ,QAAQuU,MACnIumC,iBAAmB9vD,KAAKmY,KAAK+3C,cAAgBA,cAAgBE,eAAiBA,gBAC9EzD,cAAgBzzC,UAAUlZ,KAAKE,IAAIF,KAAKswD,KAAK31C,aAAaq1C,WAAWK,QAAQjjC,OAAS,GAAKxG,WAAe,EAAA,IAAK5mB,KAAKswD,KAAK31C,YAAYkiB,UAAYizB,kBAAsB,EAAA,IAAM9vD,KAAKswD,KAAK31C,YAAYy1C,eAAiBN,kBAAkB,EAAI,MAC1OnD,cAAgB3sD,KAAKC,IAAIonB,YAAarnB,KAAKE,IAAIonB,YAAaqlC,eACxE,CACQ77C,KAAK67C,cAAgBA,aAC7B,CACI,2BAAAoC,GACat7C,SAAA3C,KAAKkE,QAAQ+5C,4BAA6B,CAC/Cj+C,MAEZ,CACI,aAAAk+C,GAAgB,CAChB,SAAAC,GACax7C,SAAA3C,KAAKkE,QAAQi6C,UAAW,CAC7Bn+C,MAEZ,CACI,GAAAo+C,GACI,MAAM9R,QAAU,CACZl2B,MAAO,EACPkG,OAAQ,GAEN,MAAAlI,MAAEA,MAAQlQ,SAAWiQ,MAAOukC,SAAWriC,MAAOopC,UAAYhqC,KAAMiqC,WAAiB1/C,KACjF,MAAAmV,QAAUnV,KAAKi/C,aACf,MAAA5a,aAAerkC,KAAKqkC,eAC1B,GAAIlvB,QAAS,CACT,MAAMwqC,YAAc5E,eAAe0E,UAAWrrC,MAAMlQ,QAAQuU,MAC5D,GAAI4rB,aAAc,CACdiI,QAAQl2B,MAAQpW,KAAKygB,SACb6rB,QAAAhwB,OAASw+B,kBAAkB4E,UAAYC,WAC/D,KAAmB,CACHrT,QAAQhwB,OAAStc,KAAK+rB,UACdugB,QAAAl2B,MAAQ0kC,kBAAkB4E,UAAYC,WAC9D,CACY,GAAIjH,SAASvjC,SAAWnV,KAAKmU,MAAMnjB,OAAQ,CACvC,MAAMmoD,MAAEA,MAAQ5uC,KAAAA,KAAA80C,OAAOA,eAASE,SAAav/C,KAAKm/C,iBAC5C,MAAAS,YAAclH,SAAS3lC,QAAU,EACjC,MAAA8sC,aAAe33C,UAAUlI,KAAK67C,eAC9B,MAAAxrC,IAAMnhB,KAAKmhB,IAAIwvC,cACf,MAAAzwC,IAAMlgB,KAAKkgB,IAAIywC,cACrB,GAAIxb,aAAc,CACR,MAAAyb,YAAcpH,SAASjiC,OAAS,EAAIrH,IAAMiwC,OAAOjpC,MAAQ/F,IAAMkvC,QAAQjjC,OACrEgwB,QAAAhwB,OAASptB,KAAKE,IAAI4Q,KAAK+rB,UAAWugB,QAAQhwB,OAASwjC,YAAcF,YAC7F,KAAuB,CACG,MAAAG,WAAarH,SAASjiC,OAAS,EAAIpG,IAAMgvC,OAAOjpC,MAAQhH,IAAMmwC,QAAQjjC,OACpEgwB,QAAAl2B,MAAQlnB,KAAKE,IAAI4Q,KAAKygB,SAAU6rB,QAAQl2B,MAAQ2pC,WAAaH,YACzF,CACgB5/C,KAAKggD,kBAAkB7G,MAAO5uC,KAAM6E,IAAKiB,IACzD,CACA,CACQrQ,KAAKigD,iBACL,GAAI5b,aAAc,CACTrkC,KAAAoW,MAAQpW,KAAKyiC,QAAUruB,MAAMgC,MAAQpW,KAAKw7C,SAASzuC,KAAO/M,KAAKw7C,SAASxuC,MAC7EhN,KAAKsc,OAASgwB,QAAQhwB,MAClC,KAAe,CACHtc,KAAKoW,MAAQk2B,QAAQl2B,MAChBpW,KAAAsc,OAAStc,KAAKyiC,QAAUruB,MAAMkI,OAAStc,KAAKw7C,SAASxoC,IAAMhT,KAAKw7C,SAASvoC,MAC1F,CACA,CACI,iBAAA+sC,CAAkB7G,MAAO5uC,KAAM6E,IAAKiB,KAC1B,MAAE8D,OAAOvH,MAAEA,MAAAmG,QAAQA,SAAa87B,SAAAA,UAAc7uC,KAAKkE,QACnD,MAAAg8C,UAAYlgD,KAAK67C,gBAAkB,EACzC,MAAMsE,iBAAmBtR,WAAa,OAAS7uC,KAAK+N,OAAS,IACzD,GAAA/N,KAAKqkC,eAAgB,CACrB,MAAM+b,WAAapgD,KAAK4iC,gBAAgB,GAAK5iC,KAAK+M,KAC5C,MAAAszC,YAAcrgD,KAAKgN,MAAQhN,KAAK4iC,gBAAgB5iC,KAAKmU,MAAMnjB,OAAS,GAC1E,IAAI2qD,YAAc,EAClB,IAAIC,aAAe,EACnB,GAAIsE,UAAW,CACX,GAAIC,iBAAkB,CAClBxE,YAActrC,IAAM8oC,MAAM/iC,MAC1BwlC,aAAexsC,IAAM7E,KAAK+R,MAC9C,KAAuB,CACHq/B,YAAcvsC,IAAM+pC,MAAM78B,OAC1Bs/B,aAAevrC,IAAM9F,KAAK6L,KAC9C,CACA,MAAA,GAAuBxJ,QAAU,QAAS,CAC1BgvC,aAAerxC,KAAK6L,KACpC,MAAA,GAAuBxJ,QAAU,MAAO,CACxB+uC,YAAcxC,MAAM/iC,KACpC,MAAA,GAAuBxJ,QAAU,QAAS,CAC1B+uC,YAAcxC,MAAM/iC,MAAQ,EAC5BwlC,aAAerxC,KAAK6L,MAAQ,CAC5C,CACiBpW,KAAA27C,YAAczsD,KAAKC,KAAKwsD,YAAcyE,WAAartC,SAAW/S,KAAKoW,OAASpW,KAAKoW,MAAQgqC,YAAa,GACtGpgD,KAAA47C,aAAe1sD,KAAKC,KAAKysD,aAAeyE,YAActtC,SAAW/S,KAAKoW,OAASpW,KAAKoW,MAAQiqC,aAAc,EAC3H,KAAe,CACC,IAAA5E,WAAalxC,KAAK+R,OAAS,EAC3B,IAAAo/B,cAAgBvC,MAAM78B,OAAS,EACnC,GAAI1P,QAAU,QAAS,CACN6uC,WAAA,EACbC,cAAgBvC,MAAM78B,MACtC,MAAA,GAAuB1P,QAAU,MAAO,CACxB6uC,WAAalxC,KAAK+R,OACFo/B,cAAA,CAChC,CACY17C,KAAKy7C,WAAaA,WAAa1oC,QAC/B/S,KAAK07C,cAAgBA,cAAgB3oC,OACjD,CACA,CACC,cAAAktC,GACO,GAAIjgD,KAAKw7C,SAAU,CACVx7C,KAAAw7C,SAASzuC,KAAO7d,KAAKC,IAAI6Q,KAAK27C,YAAa37C,KAAKw7C,SAASzuC,MACzD/M,KAAAw7C,SAASxoC,IAAM9jB,KAAKC,IAAI6Q,KAAKy7C,WAAYz7C,KAAKw7C,SAASxoC,KACvDhT,KAAAw7C,SAASxuC,MAAQ9d,KAAKC,IAAI6Q,KAAK47C,aAAc57C,KAAKw7C,SAASxuC,OAC3DhN,KAAAw7C,SAASvoC,OAAS/jB,KAAKC,IAAI6Q,KAAK07C,cAAe17C,KAAKw7C,SAASvoC,OAC9E,CACA,CACI,QAAAorC,GACa17C,SAAA3C,KAAKkE,QAAQm6C,SAAU,CAC5Br+C,MAEZ,CACC,YAAAqkC,GACO,MAAMt2B,KAAEA,KAAA8gC,SAAOA,UAAc7uC,KAAKkE,QAClC,OAAO2qC,WAAa,OAASA,WAAa,UAAY9gC,OAAS,GACvE,CACC,UAAAuyC,GACO,OAAOtgD,KAAKkE,QAAQutC,QAC5B,CACC,qBAAAqM,CAAsB3pC,OACfnU,KAAK4+C,8BACL5+C,KAAK6+C,mBAAmB1qC,OACxB,IAAItiB,EAAGwR,KACP,IAAIxR,EAAI,EAAGwR,KAAO8Q,MAAMnjB,OAAQa,EAAIwR,KAAMxR,IAAI,CAC1C,GAAI4P,cAAc0S,MAAMtiB,GAAGwtC,OAAQ,CACzBlrB,MAAAxI,OAAO9Z,EAAG,GAChBwR,OACAxR,GAChB,CACA,CACQmO,KAAK8+C,4BACb,CACC,cAAAK,GACO,IAAID,WAAal/C,KAAKi8C,YACtB,IAAKiD,WAAY,CACP,MAAA/B,WAAan9C,KAAKkE,QAAQiQ,MAAMgpC,WACtC,IAAIhpC,MAAQnU,KAAKmU,MACb,GAAAgpC,WAAahpC,MAAMnjB,OAAQ,CACnBmjB,MAAAmmC,OAAOnmC,MAAOgpC,WACtC,CACiBn9C,KAAAi8C,YAAciD,WAAal/C,KAAKugD,mBAAmBpsC,MAAOA,MAAMnjB,OAAQgP,KAAKkE,QAAQiQ,MAAM2kC,cAC5G,CACe,OAAAoG,UACf,CACC,kBAAAqB,CAAmBpsC,MAAOnjB,OAAQ8nD,eAC3B,MAAM//B,IAAEA,IAAMmjC,kBAAmBrB,QAAY76C,KAC7C,MAAMwgD,OAAS,GACf,MAAMC,QAAU,GAChB,MAAMjG,UAAYtrD,KAAK8X,MAAMhW,OAASopD,cAAcppD,OAAQ8nD,gBAC5D,IAAI4H,gBAAkB,EACtB,IAAIC,iBAAmB,EACnB,IAAA9uD,EAAGmM,EAAGwd,KAAM6jB,MAAOuhB,SAAUC,WAAYxlC,MAAOzC,WAAYxC,MAAOkG,OAAQwkC,YAC/E,IAAIjvD,EAAI,EAAGA,EAAIb,OAAQa,GAAK2oD,UAAU,CAC1Bnb,MAAAlrB,MAAMtiB,GAAGwtC,MACNuhB,SAAA5gD,KAAK+gD,wBAAwBlvD,GACpCknB,IAAAN,KAAOooC,WAAaD,SAAS5lC,OACjCK,MAAQw/B,OAAOgG,YAAchG,OAAOgG,aAAe,CAC/ChmC,KAAM,CAAE,EACRC,GAAI,IAERlC,WAAagoC,SAAShoC,WACtBxC,MAAQkG,OAAS,EACjB,IAAK7a,cAAc49B,SAAWltC,QAAQktC,OAAQ,CAC1CjpB,MAAQwE,aAAa7B,IAAKsC,MAAMR,KAAMQ,MAAMP,GAAI1E,MAAOipB,OAC9C/iB,OAAA1D,UACzB,MAAA,GAAuBzmB,QAAQktC,OAAQ,CACnB,IAAArhC,EAAI,EAAGwd,KAAO6jB,MAAMruC,OAAQgN,EAAIwd,OAAQxd,EAAE,CAC1C8iD,YAAezhB,MAAMrhC,GACrB,IAAKyD,cAAcq/C,eAAiB3uD,QAAQ2uD,aAAc,CACtD1qC,MAAQwE,aAAa7B,IAAKsC,MAAMR,KAAMQ,MAAMP,GAAI1E,MAAO0qC,aAC7CxkC,QAAA1D,UAClC,CACA,CACA,CACY4nC,OAAOt7C,KAAKkR,OACZqqC,QAAQv7C,KAAKoX,QACKokC,gBAAAxxD,KAAKC,IAAIinB,MAAOsqC,iBACfC,iBAAAzxD,KAAKC,IAAImtB,OAAQqkC,iBAChD,CACQrlC,eAAeu/B,OAAQ7pD,QACjB,MAAAquD,OAASmB,OAAOx8C,QAAQ08C,iBACxB,MAAAnB,QAAUkB,QAAQz8C,QAAQ28C,kBAC1B,MAAAK,QAAWC,MAAO,CAChB7qC,MAAOoqC,OAAOS,MAAQ,EACtB3kC,OAAQmkC,QAAQQ,MAAQ,IAEzB,MAAA,CACH9H,MAAO6H,QAAQ,GACfz2C,KAAMy2C,QAAQhwD,OAAS,GACvBquD,OAAQ2B,QAAQ3B,QAChBE,QAASyB,QAAQzB,SACjBiB,cACAC,gBAEZ,CACC,gBAAAnhB,CAAiB59B,OACH,OAAAA,KACf,CACC,gBAAAyM,CAAiBzM,MAAO+B,QACV,OAAAm7B,GACf,CACC,gBAAAwI,CAAiBtrB,OAAO,CACxB,eAAA8mB,CAAgBn/B,QACT,MAAM0Q,MAAQnU,KAAKmU,MACnB,GAAI1Q,OAAQ,GAAKA,OAAQ0Q,MAAMnjB,OAAS,EAAG,CAChC,OAAA,IACnB,CACQ,OAAOgP,KAAKmO,iBAAiBgG,MAAM1Q,QAAO/B,MAClD,CACC,kBAAAwlC,CAAmBga,SACZ,GAAIlhD,KAAK0uC,eAAgB,CACrBwS,QAAU,EAAIA,OAC1B,CACQ,MAAMplC,MAAQ9b,KAAK2mC,YAAcua,QAAUlhD,KAAKyiC,QACzC,OAAA34B,YAAY9J,KAAKw+C,eAAiB3iC,YAAY7b,KAAKoU,MAAO0H,MAAO,GAAKA,MACrF,CACC,kBAAAqlC,CAAmBrlC,OACZ,MAAMolC,SAAWplC,MAAQ9b,KAAK2mC,aAAe3mC,KAAKyiC,QAC3C,OAAAziC,KAAK0uC,eAAiB,EAAIwS,QAAUA,OACnD,CACC,YAAA5b,GACO,OAAOtlC,KAAKmO,iBAAiBnO,KAAKohD,eAC1C,CACC,YAAAA,GACa,MAAAhyD,IAAEA,IAAMD,IAAAA,KAAS6Q,KAChB,OAAA5Q,IAAM,GAAKD,IAAM,EAAIA,IAAMC,IAAM,GAAKD,IAAM,EAAIC,IAAM,CACrE,CACC,UAAA+sB,CAAW1Y,QACE,MAAA0Q,MAAQnU,KAAKmU,OAAS,GAC5B,GAAI1Q,QAAS,GAAKA,OAAQ0Q,MAAMnjB,OAAQ,CAC9B,MAAA6iC,KAAO1f,MAAM1Q,QACZ,OAAAowB,KAAK0H,WAAa1H,KAAK0H,SAAW0f,kBAAkBj7C,KAAKmc,aAAc1Y,OAAOowB,MACjG,CACe,OAAA7zB,KAAKu7B,WAAav7B,KAAKu7B,SAAWyf,mBAAmBh7C,KAAKoU,MAAM+H,aAAcnc,MAC7F,CACC,SAAAw5C,GACa,MAAA6H,YAAcrhD,KAAKkE,QAAQiQ,MAC3B,MAAAmtC,IAAMp5C,UAAUlI,KAAK67C,eAC3B,MAAMxrC,IAAMnhB,KAAK0X,IAAI1X,KAAKmhB,IAAIixC,MAC9B,MAAMlyC,IAAMlgB,KAAK0X,IAAI1X,KAAKkgB,IAAIkyC,MACxB,MAAApC,WAAal/C,KAAKm/C,iBAClB,MAAApsC,QAAUsuC,YAAYxqC,iBAAmB,EAC/C,MAAMllB,EAAIutD,WAAaA,WAAWG,OAAOjpC,MAAQrD,QAAU,EAC3D,MAAM9jB,EAAIiwD,WAAaA,WAAWK,QAAQjjC,OAASvJ,QAAU,EAC7D,OAAO/S,KAAKqkC,eAAiBp1C,EAAIohB,IAAM1e,EAAIyd,IAAMzd,EAAI0e,IAAMphB,EAAImgB,IAAMngB,EAAImgB,IAAMzd,EAAI0e,IAAMphB,EAAIohB,IAAM1e,EAAIyd,GAC/G,CACC,UAAA6vC,GACa,MAAA9pC,QAAUnV,KAAKkE,QAAQiR,QAC7B,GAAIA,UAAY,OAAQ,CACpB,QAASA,OACrB,CACe,OAAAnV,KAAKi5B,0BAA0BjoC,OAAS,CACvD,CACC,qBAAAuwD,CAAsBrvB,WACf,MAAMnkB,KAAO/N,KAAK+N,KAClB,MAAMqG,MAAQpU,KAAKoU,MACnB,MAAMlQ,QAAUlE,KAAKkE,QACrB,MAAMuR,KAAEA,KAAAo5B,SAAOA,SAAW54B,OAAAA,QAAY/R,QACtC,MAAMkR,OAASK,KAAKL,OACd,MAAAivB,aAAerkC,KAAKqkC,eAC1B,MAAMlwB,MAAQnU,KAAKmU,MACnB,MAAMkmC,YAAclmC,MAAMnjB,QAAUokB,OAAS,EAAI,GAC3C,MAAAosC,GAAK1G,kBAAkBrlC,MAC7B,MAAM5J,MAAQ,GACd,MAAM41C,WAAaxrC,OAAO0O,WAAW3kB,KAAKmc,cAC1C,MAAMulC,UAAYD,WAAWtsC,QAAUssC,WAAWrrC,MAAQ,EAC1D,MAAMurC,cAAgBD,UAAY,EAC5B,MAAAE,iBAAmB,SAAS9lC,OACvB,OAAAD,YAAYzH,MAAO0H,MAAO4lC,UACpC,EACG,IAAAG,YAAahwD,EAAG+oD,UAAWkH,iBAC/B,IAAIC,IAAKC,IAAKC,IAAKC,IAAKC,GAAIC,GAAIC,GAAIC,GACpC,GAAIzT,WAAa,MAAO,CACNgT,YAAAD,iBAAiB5hD,KAAKiT,QACpC+uC,IAAMhiD,KAAKiT,OAASuuC,GACpBU,IAAML,YAAcF,cACfS,GAAAR,iBAAiB1vB,UAAUlf,KAAO2uC,cACvCW,GAAKpwB,UAAUjf,MAC3B,MAAA,GAAmB47B,WAAa,SAAU,CAChBgT,YAAAD,iBAAiB5hD,KAAKgT,KACpCovC,GAAKlwB,UAAUlf,IACVsvC,GAAAV,iBAAiB1vB,UAAUjf,QAAU0uC,cAC1CK,IAAMH,YAAcF,cACpBO,IAAMliD,KAAKgT,IAAMwuC,EAC7B,MAAA,GAAmB3S,WAAa,OAAQ,CACdgT,YAAAD,iBAAiB5hD,KAAKgN,OACpC+0C,IAAM/hD,KAAKgN,MAAQw0C,GACnBS,IAAMJ,YAAcF,cACfQ,GAAAP,iBAAiB1vB,UAAUnlB,MAAQ40C,cACxCU,GAAKnwB,UAAUllB,KAC3B,MAAA,GAAmB6hC,WAAa,QAAS,CACfgT,YAAAD,iBAAiB5hD,KAAK+M,MACpCo1C,GAAKjwB,UAAUnlB,KACVs1C,GAAAT,iBAAiB1vB,UAAUllB,OAAS20C,cACzCI,IAAMF,YAAcF,cACpBM,IAAMjiD,KAAK+M,KAAOy0C,EAC9B,MAAA,GAAmBzzC,OAAS,IAAK,CACrB,GAAI8gC,WAAa,SAAU,CACvBgT,YAAcD,kBAAkB1vB,UAAUlf,IAAMkf,UAAUjf,QAAU,EAAI,GACxF,MAAA,GAAuBlR,SAAS8sC,UAAW,CAC3B,MAAMyM,eAAiBx9C,OAAOD,KAAKgxC,UAAU,GACvC,MAAAntC,MAAQmtC,SAASyM,gBACTuG,YAAAD,iBAAiB5hD,KAAKoU,MAAM0F,OAAOwhC,gBAAgBntC,iBAAiBzM,OAClG,CACY0gD,GAAKlwB,UAAUlf,IACfsvC,GAAKpwB,UAAUjf,OACf+uC,IAAMH,YAAcF,cACpBO,IAAMF,IAAMR,EACxB,MAAA,GAAmBzzC,OAAS,IAAK,CACrB,GAAI8gC,WAAa,SAAU,CACvBgT,YAAcD,kBAAkB1vB,UAAUnlB,KAAOmlB,UAAUllB,OAAS,EACpF,MAAA,GAAuBjL,SAAS8sC,UAAW,CAC3B,MAAMyM,eAAiBx9C,OAAOD,KAAKgxC,UAAU,GACvC,MAAAntC,MAAQmtC,SAASyM,gBACTuG,YAAAD,iBAAiB5hD,KAAKoU,MAAM0F,OAAOwhC,gBAAgBntC,iBAAiBzM,OAClG,CACYqgD,IAAMF,YAAcF,cACpBM,IAAMF,IAAMP,GACZW,GAAKjwB,UAAUnlB,KACfs1C,GAAKnwB,UAAUllB,KAC3B,CACQ,MAAMu1C,MAAQlgD,eAAe6B,QAAQiQ,MAAM2kC,cAAeuB,aACpD,MAAAmI,KAAOtzD,KAAKC,IAAI,EAAGD,KAAK6qD,KAAKM,YAAckI,QACjD,IAAI1wD,EAAI,EAAGA,EAAIwoD,YAAaxoD,GAAK2wD,KAAK,CAC5B,MAAApqC,QAAUpY,KAAKmc,WAAWtqB,GAC1B,MAAA4wD,YAAchtC,KAAKkP,WAAWvM,SAC9B,MAAAsqC,kBAAoBzsC,OAAO0O,WAAWvM,SAC5C,MAAM1C,UAAY+sC,YAAY/sC,UAC9B,MAAMitC,UAAYF,YAAYniD,MACxB,MAAAuxB,WAAa6wB,kBAAkBxsC,MAAQ,GAC7C,MAAM4b,iBAAmB4wB,kBAAkBvsC,WAC3C,MAAML,UAAY2sC,YAAY3sC,UAC9B,MAAME,UAAYysC,YAAYzsC,UACxB,MAAA4sC,eAAiBH,YAAYG,gBAAkB,GACrD,MAAMC,qBAAuBJ,YAAYI,qBAC7BjI,UAAAH,oBAAoBz6C,KAAMnO,EAAGujB,QACzC,GAAIwlC,iBAAyB,EAAA,CACzB,QAChB,CAC+BkH,iBAAAjmC,YAAYzH,MAAOwmC,UAAWllC,WACjD,GAAI2uB,aAAc,CACR0d,IAAAE,IAAME,GAAKE,GAAKP,gBACtC,KAAmB,CACGE,IAAAE,IAAME,GAAKE,GAAKR,gBACtC,CACYj2C,MAAM3G,KAAK,CACP68C,QACAC,QACAC,QACAC,QACAC,MACAC,MACAC,MACAC,MACAlsC,MAAOV,UACPpV,MAAOqiD,UACP9wB,sBACAC,kCACAhc,oBACAE,oBACA4sC,8BACAC,2CAEhB,CACQ7iD,KAAKu8C,aAAelC,YACpBr6C,KAAKw8C,aAAeqF,YACb,OAAAh2C,KACf,CACC,kBAAAoxC,CAAmB/qB,WACZ,MAAMnkB,KAAO/N,KAAK+N,KAClB,MAAM7J,QAAUlE,KAAKkE,QACrB,MAAM2qC,SAAEA,SAAW16B,MAAOktC,aAAiBn9C,QACrC,MAAAmgC,aAAerkC,KAAKqkC,eAC1B,MAAMlwB,MAAQnU,KAAKmU,MACnB,MAAMvH,MAAEA,MAAAqK,WAAQA,WAAalE,QAAAA,QAAA0D,OAAUA,QAAY4qC,YAC7C,MAAAG,GAAK1G,kBAAkB52C,QAAQuR,MACrC,MAAMqtC,eAAiBtB,GAAKzuC,QACtB,MAAAgwC,gBAAkBtsC,QAAU1D,QAAU+vC,eAC5C,MAAM/lC,UAAY7U,UAAUlI,KAAK67C,eACjC,MAAMhwC,MAAQ,GACV,IAAAha,EAAGwR,KAAMwwB,KAAMwL,MAAOpsC,EAAG6R,EAAGoa,UAAWpD,MAAOrD,KAAMG,WAAYoqC,UAAWC,WAC/E,IAAI9jC,aAAe,SACnB,GAAI0vB,WAAa,MAAO,CACpB/pC,EAAI9E,KAAKiT,OAAS8vC,gBAClB7jC,UAAYlf,KAAKkjD,yBAC7B,MAAA,GAAmBrU,WAAa,SAAU,CAC9B/pC,EAAI9E,KAAKgT,IAAM+vC,gBACf7jC,UAAYlf,KAAKkjD,yBAC7B,MAAA,GAAmBrU,WAAa,OAAQ,CACtB,MAAA59C,IAAM+O,KAAKmjD,wBAAwB3B,IACzCtiC,UAAYjuB,IAAIiuB,UAChBjsB,EAAIhC,IAAIgC,CACpB,MAAA,GAAmB47C,WAAa,QAAS,CACvB,MAAA59C,IAAM+O,KAAKmjD,wBAAwB3B,IACzCtiC,UAAYjuB,IAAIiuB,UAChBjsB,EAAIhC,IAAIgC,CACpB,MAAA,GAAmB8a,OAAS,IAAK,CACrB,GAAI8gC,WAAa,SAAU,CACvB/pC,GAAKotB,UAAUlf,IAAMkf,UAAUjf,QAAU,EAAI6vC,cAC7D,MAAA,GAAuB/gD,SAAS8sC,UAAW,CAC3B,MAAMyM,eAAiBx9C,OAAOD,KAAKgxC,UAAU,GACvC,MAAAntC,MAAQmtC,SAASyM,gBACvBx2C,EAAI9E,KAAKoU,MAAM0F,OAAOwhC,gBAAgBntC,iBAAiBzM,OAASohD,cAChF,CACY5jC,UAAYlf,KAAKkjD,yBAC7B,MAAA,GAAmBn1C,OAAS,IAAK,CACrB,GAAI8gC,WAAa,SAAU,CACvB57C,GAAKi/B,UAAUnlB,KAAOmlB,UAAUllB,OAAS,EAAI81C,cAC7D,MAAA,GAAuB/gD,SAAS8sC,UAAW,CAC3B,MAAMyM,eAAiBx9C,OAAOD,KAAKgxC,UAAU,GACvC,MAAAntC,MAAQmtC,SAASyM,gBACvBroD,EAAI+M,KAAKoU,MAAM0F,OAAOwhC,gBAAgBntC,iBAAiBzM,MACvE,CACwBwd,UAAAlf,KAAKmjD,wBAAwB3B,IAAItiC,SACzD,CACQ,GAAInR,OAAS,IAAK,CACd,GAAInB,QAAU,QAAS,CACJuS,aAAA,KAC/B,MAAA,GAAuBvS,QAAU,MAAO,CACTuS,aAAA,QAC/B,CACA,CACc,MAAA+/B,WAAal/C,KAAKm/C,iBACpB,IAAAttD,EAAI,EAAGwR,KAAO8Q,MAAMnjB,OAAQa,EAAIwR,OAAQxR,EAAE,CAC1CgiC,KAAO1f,MAAMtiB,GACbwtC,MAAQxL,KAAKwL,MACb,MAAMojB,YAAcpB,YAAY18B,WAAW3kB,KAAKmc,WAAWtqB,IAC3DiqB,MAAQ9b,KAAK4iC,gBAAgB/wC,GAAKwvD,YAAYvqC,YACvC2B,KAAAzY,KAAK+gD,wBAAwBlvD,GACpC+mB,WAAaH,KAAKG,WAClBoqC,UAAY7wD,QAAQktC,OAASA,MAAMruC,OAAS,EAC5C,MAAMoyD,UAAYJ,UAAY,EAC9B,MAAM1iD,OAAQmiD,YAAYniD,MAC1B,MAAMggB,YAAcmiC,YAAY9rC,gBAChC,MAAM0J,YAAcoiC,YAAY/rC,gBAChC,IAAI2sC,cAAgBnkC,UACpB,GAAImlB,aAAc,CACVpxC,EAAA6oB,MACJ,GAAIoD,YAAc,QAAS,CACnB,GAAArtB,IAAMwR,KAAO,EAAG,CAChBggD,eAAiBrjD,KAAKkE,QAAQjB,QAAU,QAAU,MAC1E,MAAA,GAA+BpR,IAAM,EAAG,CAChBwxD,eAAiBrjD,KAAKkE,QAAQjB,QAAU,OAAS,OACzE,KAA2B,CACaogD,cAAA,QACxC,CACA,CACgB,GAAIxU,WAAa,MAAO,CAChB,GAAA53B,aAAe,QAAU8F,WAAa,EAAG,CAC5BkmC,YAACD,UAAYpqC,WAAaA,WAAa,CAC5E,MAAA,GAA+B3B,aAAe,SAAU,CAChCgsC,YAAc/D,WAAWK,QAAQjjC,OAAS,EAAI8mC,UAAYxqC,WAAaA,UAC/F,KAA2B,CACHqqC,YAAc/D,WAAWK,QAAQjjC,OAAS1D,WAAa,CAC/E,CACA,KAAuB,CACC,GAAA3B,aAAe,QAAU8F,WAAa,EAAG,CACzCkmC,WAAarqC,WAAa,CAClD,MAAA,GAA+B3B,aAAe,SAAU,CAChCgsC,WAAa/D,WAAWK,QAAQjjC,OAAS,EAAI8mC,UAAYxqC,UACjF,KAA2B,CACUqqC,WAAA/D,WAAWK,QAAQjjC,OAAS0mC,UAAYpqC,UAC7E,CACA,CACgB,GAAInC,OAAQ,CACMwsC,aAAA,CAClC,CACgB,GAAIlmC,WAAa,IAAM0lC,YAAYvrC,kBAAmB,CAClDjkB,GAAK2lB,WAAa,EAAI1pB,KAAKkgB,IAAI2N,SACnD,CACA,KAAmB,CACCjY,EAAAgX,MACUmnC,YAAA,EAAID,WAAapqC,WAAa,CAC5D,CACgB,IAAA2H,SACJ,GAAIkiC,YAAYvrC,kBAAmB,CACzB,MAAAosC,aAAezhC,UAAU4gC,YAAYrrC,iBACrC,MAAAkF,OAAS4iC,WAAWuB,QAAQ5uD,GAC5B,MAAAukB,MAAQ8oC,WAAWsB,OAAO3uD,GAC5B,IAAAmhB,IAAMiwC,WAAaK,aAAatwC,IAChC,IAAAjG,KAAO,EAAIu2C,aAAav2C,KAC5B,OAAOoS,cACH,IAAK,SACDnM,KAAOsJ,OAAS,EAChB,MACJ,IAAK,SACMtJ,KAAAsJ,OACP,MAER,OAAO4C,WACH,IAAK,SACDnS,MAAQqJ,MAAQ,EAChB,MACJ,IAAK,QACOrJ,MAAAqJ,MACR,MACJ,IAAK,QACG,GAAAvkB,IAAMwR,KAAO,EAAG,CACR0J,MAAAqJ,KACpC,MAAA,GAAmCvkB,EAAI,EAAG,CACdkb,MAAQqJ,MAAQ,CAC5C,CACwB,MAEGmK,SAAA,CACPxT,UACAiG,QACAoD,MAAOA,MAAQktC,aAAaltC,MAC5BkG,OAAQA,OAASgnC,aAAahnC,OAC9Bhc,MAAOmiD,YAAYtrC,cAEvC,CACYtL,MAAM3G,KAAK,CACPm6B,YACA5mB,UACAwqC,sBACA/+C,QAAS,CACL6Y,kBACAzc,MAAAA,OACAggB,wBACAD,wBACAnB,UAAWmkC,cACXlkC,0BACAH,YAAa,CACT/rB,EACA6R,GAEJyb,oBAGpB,CACe,OAAA1U,KACf,CACI,uBAAAq3C,GACI,MAAMrU,SAAEA,SAAA16B,MAAWA,OAAWnU,KAAKkE,QACnC,MAAM6Y,UAAY7U,UAAUlI,KAAK67C,eACjC,GAAI9+B,SAAU,CACH,OAAA8xB,WAAa,MAAQ,OAAS,OACjD,CACQ,IAAIjiC,MAAQ,SACR,GAAAuH,MAAMvH,QAAU,QAAS,CACjBA,MAAA,MACpB,MAAA,GAAmBuH,MAAMvH,QAAU,MAAO,CACtBA,MAAA,OACpB,MAAA,GAAmBuH,MAAMvH,QAAU,QAAS,CACxBA,MAAA,OACpB,CACe,OAAAA,KACf,CACI,uBAAAu2C,CAAwB3B,IACd,MAAA3S,SAAEA,SAAW16B,OAAO8C,WAAEA,kBAAaR,OAAS1D,QAAAA,UAAgB/S,KAAKkE,QACjE,MAAAg7C,WAAal/C,KAAKm/C,iBACxB,MAAM2D,eAAiBtB,GAAKzuC,QACtB,MAAAssC,OAASH,WAAWG,OAAOjpC,MAC7B,IAAA8I,UACA,IAAAjsB,EACJ,GAAI47C,WAAa,OAAQ,CACrB,GAAIp4B,OAAQ,CACRxjB,EAAI+M,KAAKgN,MAAQ+F,QACjB,GAAIkE,aAAe,OAAQ,CACXiI,UAAA,MAChC,MAAA,GAA2BjI,aAAe,SAAU,CACpBiI,UAAA,SACZjsB,GAAKosD,OAAS,CAClC,KAAuB,CACSngC,UAAA,QACPjsB,GAAAosD,MACzB,CACA,KAAmB,CACHpsD,EAAI+M,KAAKgN,MAAQ81C,eACjB,GAAI7rC,aAAe,OAAQ,CACXiI,UAAA,OAChC,MAAA,GAA2BjI,aAAe,SAAU,CACpBiI,UAAA,SACZjsB,GAAKosD,OAAS,CAClC,KAAuB,CACSngC,UAAA,OACZjsB,EAAI+M,KAAK+M,IAC7B,CACA,CACA,MAAA,GAAmB8hC,WAAa,QAAS,CAC7B,GAAIp4B,OAAQ,CACRxjB,EAAI+M,KAAK+M,KAAOgG,QAChB,GAAIkE,aAAe,OAAQ,CACXiI,UAAA,OAChC,MAAA,GAA2BjI,aAAe,SAAU,CACpBiI,UAAA,SACZjsB,GAAKosD,OAAS,CAClC,KAAuB,CACSngC,UAAA,OACPjsB,GAAAosD,MACzB,CACA,KAAmB,CACHpsD,EAAI+M,KAAK+M,KAAO+1C,eAChB,GAAI7rC,aAAe,OAAQ,CACXiI,UAAA,MAChC,MAAA,GAA2BjI,aAAe,SAAU,CACpBiI,UAAA,SACZjsB,GAAKosD,OAAS,CAClC,KAAuB,CACSngC,UAAA,QACZjsB,EAAI+M,KAAKgN,KAC7B,CACA,CACA,KAAe,CACSkS,UAAA,OACxB,CACe,MAAA,CACHA,oBACAjsB,IAEZ,CACC,iBAAAswD,GACW,GAAAvjD,KAAKkE,QAAQiQ,MAAMsC,OAAQ,CAC3B,MACZ,CACQ,MAAMrC,MAAQpU,KAAKoU,MACb,MAAAy6B,SAAW7uC,KAAKkE,QAAQ2qC,SAC1B,GAAAA,WAAa,QAAUA,WAAa,QAAS,CACtC,MAAA,CACH77B,IAAK,EACLjG,KAAM/M,KAAK+M,KACXkG,OAAQmB,MAAMkI,OACdtP,MAAOhN,KAAKgN,MAE5B,CACY,GAAA6hC,WAAa,OAASA,WAAa,SAAU,CACtC,MAAA,CACH77B,IAAKhT,KAAKgT,IACVjG,KAAM,EACNkG,OAAQjT,KAAKiT,OACbjG,MAAOoH,MAAMgC,MAE7B,CACA,CACC,cAAAotC,GACa,MAAAzqC,IAAEA,IAAM7U,SAAS8T,gBAAEA,sBAAqBjL,KAAOiG,IAAAA,IAAAoD,MAAMA,MAAQkG,OAAAA,QAAYtc,KAC/E,GAAIgY,gBAAiB,CACjBe,IAAIwC,OACJxC,IAAIkG,UAAYjH,gBAChBe,IAAImH,SAASnT,KAAMiG,IAAKoD,MAAOkG,QAC/BvD,IAAI4C,SAChB,CACA,CACI,oBAAA2rB,CAAqB5lC,OACX,MAAA+T,KAAOzV,KAAKkE,QAAQuR,KAC1B,IAAKzV,KAAKi/C,eAAiBxpC,KAAKN,QAAS,CAC9B,OAAA,CACnB,CACQ,MAAMhB,MAAQnU,KAAKmU,MACnB,MAAM1Q,OAAQ0Q,MAAM9F,UAAWnP,GAAIA,EAAEwC,QAAUA,OAC/C,GAAI+B,QAAS,EAAG,CACZ,MAAMsb,KAAOtJ,KAAKkP,WAAW3kB,KAAKmc,WAAW1Y,SAC7C,OAAOsb,KAAKrJ,SACxB,CACe,OAAA,CACf,CACC,QAAA+tC,CAASvxB,WACI,MAAAzc,KAAOzV,KAAKkE,QAAQuR,KAC1B,MAAMsD,IAAM/Y,KAAK+Y,IACjB,MAAMlN,MAAQ7L,KAAK+7C,iBAAmB/7C,KAAK+7C,eAAiB/7C,KAAKuhD,sBAAsBrvB,YACvF,IAAIrgC,EAAGwR,KACP,MAAMqgD,SAAW,CAAC9wD,GAAIC,GAAI8lB,SACtB,IAAKA,MAAMvC,QAAUuC,MAAMrY,MAAO,CAC9B,MAChB,CACYyY,IAAIwC,OACJxC,IAAIrD,UAAYiD,MAAMvC,MACtB2C,IAAI+G,YAAcnH,MAAMrY,MACxByY,IAAI4qC,YAAYhrC,MAAMkZ,YAAc,IACpC9Y,IAAI6qC,eAAiBjrC,MAAMmZ,iBAC3B/Y,IAAIqE,YACJrE,IAAIyE,OAAO5qB,GAAGK,EAAGL,GAAGkS,GACpBiU,IAAI0E,OAAO5qB,GAAGI,EAAGJ,GAAGiS,GACpBiU,IAAI+E,SACJ/E,IAAI4C,WAER,GAAIlG,KAAKN,QAAS,CACV,IAAAtjB,EAAI,EAAGwR,KAAOwI,MAAM7a,OAAQa,EAAIwR,OAAQxR,EAAE,CACpC,MAAA+T,KAAOiG,MAAMha,GACnB,GAAI4jB,KAAKE,gBAAiB,CACb+tC,SAAA,CACLzwD,EAAG2S,KAAKu8C,GACRr9C,EAAGc,KAAKw8C,IACT,CACCnvD,EAAG2S,KAAKy8C,GACRv9C,EAAGc,KAAK08C,IACT18C,KACvB,CACgB,GAAI6P,KAAKG,UAAW,CACP8tC,SAAA,CACLzwD,EAAG2S,KAAKm8C,IACRj9C,EAAGc,KAAKo8C,KACT,CACC/uD,EAAG2S,KAAKq8C,IACRn9C,EAAGc,KAAKs8C,KACT,CACC5hD,MAAOsF,KAAKoQ,UACZI,MAAOxQ,KAAKkQ,UACZ+b,WAAYjsB,KAAKg9C,eACjB9wB,iBAAkBlsB,KAAKi9C,sBAE/C,CACA,CACA,CACA,CACC,UAAAgB,GACa,MAAAzvC,MAAEA,UAAQ2E,IAAM7U,SAAS+R,OAAEA,OAASR,KAAAA,OAAazV,KACvD,MAAMyhD,WAAaxrC,OAAO0O,WAAW3kB,KAAKmc,cAC1C,MAAMulC,UAAYzrC,OAAOd,QAAUssC,WAAWrrC,MAAQ,EACtD,IAAKsrC,UAAW,CACZ,MACZ,CACQ,MAAMoC,cAAgBruC,KAAKkP,WAAW3kB,KAAKmc,WAAW,IAAIzG,UAC1D,MAAMmsC,YAAc7hD,KAAKw8C,aACrB,IAAA2F,GAAIE,GAAID,GAAIE,GACZ,GAAAtiD,KAAKqkC,eAAgB,CACrB8d,GAAKtmC,YAAYzH,MAAOpU,KAAK+M,KAAM20C,WAAaA,UAAY,EAC5DW,GAAKxmC,YAAYzH,MAAOpU,KAAKgN,MAAO82C,eAAiBA,cAAgB,EACrE1B,GAAKE,GAAKT,WACtB,KAAe,CACHO,GAAKvmC,YAAYzH,MAAOpU,KAAKgT,IAAK0uC,WAAaA,UAAY,EAC3DY,GAAKzmC,YAAYzH,MAAOpU,KAAKiT,OAAQ6wC,eAAiBA,cAAgB,EACtE3B,GAAKE,GAAKR,WACtB,CACQ9oC,IAAIwC,OACJxC,IAAIrD,UAAY+rC,WAAWrrC,MAC3B2C,IAAI+G,YAAc2hC,WAAWnhD,MAC7ByY,IAAIqE,YACArE,IAAAyE,OAAO2kC,GAAIC,IACXrpC,IAAA0E,OAAO4kC,GAAIC,IACfvpC,IAAI+E,SACJ/E,IAAI4C,SACZ,CACC,UAAAooC,CAAW7xB,WACE,MAAAmvB,YAAcrhD,KAAKkE,QAAQiQ,MAC7B,IAACktC,YAAYlsC,QAAS,CACtB,MACZ,CACQ,MAAM4D,IAAM/Y,KAAK+Y,IACX,MAAAiF,KAAOhe,KAAKujD,oBAClB,GAAIvlC,KAAM,CACNE,SAASnF,IAAKiF,KAC1B,CACc,MAAAnS,MAAQ7L,KAAKg9C,cAAc9qB,WACjC,IAAA,MAAWtsB,QAAQiG,MAAM,CACrB,MAAMm4C,kBAAoBp+C,KAAK1B,QAC/B,MAAM08C,SAAWh7C,KAAK6S,KACtB,MAAM4mB,MAAQz5B,KAAKy5B,MACnB,MAAMv6B,EAAIc,KAAKq9C,WACf9iC,WAAWpH,IAAKsmB,MAAO,EAAGv6B,EAAG87C,SAAUoD,kBACnD,CACQ,GAAIhmC,KAAM,CACNG,WAAWpF,IACvB,CACA,CACC,SAAAkrC,GACa,MAAAlrC,IAAEA,IAAM7U,SAAS2qC,SAAEA,eAAWx4B,MAAQpT,QAAAA,UAAgBjD,KACxD,IAACqW,MAAMlB,QAAS,CAChB,MACZ,CACc,MAAAsD,KAAOqJ,OAAOzL,MAAMoC,MACpB,MAAA1F,QAAU8O,UAAUxL,MAAMtD,SAChC,MAAMnG,MAAQyJ,MAAMzJ,MAChB,IAAAwI,OAASqD,KAAKG,WAAa,EAC/B,GAAIi2B,WAAa,UAAYA,WAAa,UAAY9sC,SAAS8sC,UAAW,CACtEz5B,QAAUrC,QAAQE,OACd,GAAA9gB,QAAQkkB,MAAMC,MAAO,CACrBlB,QAAUqD,KAAKG,YAAcvC,MAAMC,KAAKtlB,OAAS,EACjE,CACA,KAAe,CACHokB,QAAUrC,QAAQC,GAC9B,CACc,MAAAooC,OAAEA,OAASC,OAAAA,OAAA56B,SAASA,SAAW1D,SAAAA,UAAco+B,UAAUn7C,KAAMoV,OAAQy5B,SAAUjiC,OACrFuT,WAAWpH,IAAK1C,MAAMC,KAAM,EAAG,EAAGmC,KAAM,CACpCnY,MAAO+V,MAAM/V,MACbmgB,kBACA1D,kBACAmC,UAAWg8B,WAAWtuC,MAAOiiC,SAAU5rC,SACvCkc,aAAc,SACdH,YAAa,CACTo8B,OACAC,SAGhB,CACI,IAAA3nB,CAAKxB,WACG,IAAClyB,KAAKi/C,aAAc,CACpB,MACZ,CACQj/C,KAAKwjD,iBACLxjD,KAAKyjD,SAASvxB,WACdlyB,KAAK6jD,aACL7jD,KAAKikD,YACLjkD,KAAK+jD,WAAW7xB,UACxB,CACC,OAAAyhB,GACO,MAAM50B,KAAO/e,KAAKkE,QAClB,MAAMggD,GAAKnlC,KAAK5K,OAAS4K,KAAK5K,MAAMy/B,GAAK,EACzC,MAAMuQ,GAAK9hD,eAAe0c,KAAKtJ,MAAQsJ,KAAKtJ,KAAKm+B,GAAK,GACtD,MAAMwQ,GAAK/hD,eAAe0c,KAAK9I,QAAU8I,KAAK9I,OAAO29B,EAAG,GACpD,IAAC5zC,KAAKi/C,cAAgBj/C,KAAK0zB,OAAS6nB,MAAM55C,UAAU+xB,KAAM,CACnD,MAAA,CACH,CACIkgB,EAAGsQ,GACHxwB,KAAOxB,YACHlyB,KAAK0zB,KAAKxB,aAIlC,CACe,MAAA,CACH,CACI0hB,EAAGuQ,GACHzwB,KAAOxB,YACHlyB,KAAKwjD,iBACLxjD,KAAKyjD,SAASvxB,WACdlyB,KAAKikD,cAGb,CACIrQ,EAAGwQ,GACH1wB,KAAM,KACF1zB,KAAK6jD,eAGb,CACIjQ,EAAGsQ,GACHxwB,KAAOxB,YACHlyB,KAAK+jD,WAAW7xB,aAIpC,CACC,uBAAA+G,CAAwBl5B,MACX,MAAA68C,MAAQ58C,KAAKoU,MAAM26B,+BACnB,MAAArH,OAAS1nC,KAAK+N,KAAO,SAC3B,MAAM3G,OAAS,GACf,IAAIvV,EAAGwR,KACH,IAAAxR,EAAI,EAAGwR,KAAOu5C,MAAM5rD,OAAQa,EAAIwR,OAAQxR,EAAE,CACpC,MAAAub,KAAOwvC,MAAM/qD,GACf,GAAAub,KAAKs6B,UAAY1nC,KAAKwB,MAAQzB,MAAQqN,KAAKrN,OAASA,MAAO,CAC3DqH,OAAOlC,KAAKkI,KAC5B,CACA,CACe,OAAAhG,MACf,CACC,uBAAA25C,CAAwBt9C,QACX,MAAAsb,KAAO/e,KAAKkE,QAAQiQ,MAAMwQ,WAAW3kB,KAAKmc,WAAW1Y,SACpD,OAAAqe,OAAO/C,KAAKtG,KAC3B,CACC,UAAA4rC,GACO,MAAMC,SAAWtkD,KAAK+gD,wBAAwB,GAAGnoC,WACjD,OAAQ5Y,KAAKqkC,eAAiBrkC,KAAKoW,MAAQpW,KAAKsc,QAAUgoC,QAClE,EAGA,MAAMC,cACF,WAAAzkD,CAAYC,KAAM6X,MAAOqC,UACrBja,KAAKD,KAAOA,KACZC,KAAK4X,MAAQA,MACb5X,KAAKia,SAAWA,SACXja,KAAA6L,MAAe/N,OAAA8F,OAAO,KACnC,CACI,SAAA4gD,CAAUzkD,MACC,OAAAjC,OAAO6D,UAAU8iD,cAAc5iD,KAAK7B,KAAKD,KAAK4B,UAAW5B,KAAK4B,UAC7E,CACC,QAAA+iD,CAAS9+C,MACI,MAAArG,MAAQzB,OAAOgmB,eAAele,MAChC,IAAA++C,YACA,GAAAC,kBAAkBrlD,OAAQ,CACZolD,YAAA3kD,KAAK0kD,SAASnlD,MACxC,CACQ,MAAMsM,MAAQ7L,KAAK6L,MACnB,MAAMrK,GAAKoE,KAAKpE,GACV,MAAAoW,MAAQ5X,KAAK4X,MAAQ,IAAMpW,GACjC,IAAKA,GAAI,CACC,MAAA,IAAIjT,MAAM,2BAA6BqX,KACzD,CACQ,GAAIpE,MAAMqK,MAAO,CACN,OAAA+L,KACnB,CACQ/L,MAAMrK,IAAMoE,KACKi/C,iBAAAj/C,KAAMgS,MAAO+sC,aAC9B,GAAI3kD,KAAKia,SAAU,CACfrI,SAASqI,SAASrU,KAAKpE,GAAIoE,KAAK2R,UAC5C,CACe,OAAAK,KACf,CACC,GAAAlE,CAAIlS,IACU,OAAAxB,KAAK6L,MAAMrK,GAC1B,CACC,UAAAsjD,CAAWl/C,MACJ,MAAMiG,MAAQ7L,KAAK6L,MACnB,MAAMrK,GAAKoE,KAAKpE,GAChB,MAAMoW,MAAQ5X,KAAK4X,MACnB,GAAIpW,MAAMqK,MAAO,QACNA,MAAMrK,GACzB,CACQ,GAAIoW,OAASpW,MAAMoQ,SAASgG,OAAQ,QACzBhG,SAASgG,OAAOpW,IACvB,GAAIxB,KAAKia,SAAU,QACR1C,UAAU/V,GACjC,CACA,CACA,EAEA,SAASqjD,iBAAiBj/C,KAAMgS,MAAO+sC,aACnC,MAAMI,aAAe1gD,MAAavG,OAAA8F,OAAO,MAAO,CAC5C+gD,YAAc/yC,SAAS8B,IAAIixC,aAAe,CAAE,EAC5C/yC,SAAS8B,IAAIkE,OACbhS,KAAKgM,WAEAA,SAAA9F,IAAI8L,MAAOmtC,cACpB,GAAIn/C,KAAKo/C,cAAe,CACNC,cAAArtC,MAAOhS,KAAKo/C,cAClC,CACI,GAAIp/C,KAAK4R,YAAa,CACT5F,SAAAI,SAAS4F,MAAOhS,KAAK4R,YACtC,CACA,CACA,SAASytC,cAAcrtC,MAAOstC,QAC1BpnD,OAAOD,KAAKqnD,QAAQ95C,QAASnD,WACnB,MAAAk9C,cAAgBl9C,SAASxZ,MAAM,KAC/B,MAAA22D,WAAaD,cAAc59C,MACjC,MAAM89C,YAAc,CAChBztC,OACF2qB,OAAO4iB,eAAez/B,KAAK,KAC7B,MAAM1gB,MAAQkgD,OAAOj9C,UAAUxZ,MAAM,KAC/B,MAAA0rB,WAAanV,MAAMuC,MACnB,MAAA2S,YAAclV,MAAM0gB,KAAK,KAC/B9T,SAASyF,MAAMguC,YAAaD,WAAYlrC,YAAaC,aAE7D,CACA,SAASyqC,kBAAkBrlD,OAChB,MAAA,OAAQA,OAAS,aAAcA,KAC1C,CAEA,MAAM+lD,SACF,WAAAxlD,GACIE,KAAK2tC,YAAc,IAAI4W,cAAc3pB,kBAAmB,WAAY,MACpE56B,KAAKuY,SAAW,IAAIgsC,cAAcjM,QAAS,YAC3Ct4C,KAAK2Z,QAAU,IAAI4qC,cAAczmD,OAAQ,WACzCkC,KAAK8Z,OAAS,IAAIyqC,cAAchJ,MAAO,UACvCv7C,KAAKulD,iBAAmB,CACpBvlD,KAAK2tC,YACL3tC,KAAK8Z,OACL9Z,KAAKuY,SAEjB,CACC,GAAAiK,IAAOn0B,MACK2R,KAAAwlD,MAAM,WAAYn3D,KAC/B,CACI,MAAAmmC,IAAUnmC,MACD2R,KAAAwlD,MAAM,aAAcn3D,KACjC,CACC,cAAAo3D,IAAkBp3D,MACX2R,KAAKwlD,MAAM,WAAYn3D,KAAM2R,KAAK2tC,YAC1C,CACC,WAAA9R,IAAextC,MACR2R,KAAKwlD,MAAM,WAAYn3D,KAAM2R,KAAKuY,SAC1C,CACC,UAAAmtC,IAAcr3D,MACP2R,KAAKwlD,MAAM,WAAYn3D,KAAM2R,KAAK2Z,QAC1C,CACC,SAAAgsC,IAAat3D,MACN2R,KAAKwlD,MAAM,WAAYn3D,KAAM2R,KAAK8Z,OAC1C,CACC,aAAA8rC,CAAcpkD,IACP,OAAOxB,KAAK6lD,KAAKrkD,GAAIxB,KAAK2tC,YAAa,aAC/C,CACC,UAAAD,CAAWlsC,IACJ,OAAOxB,KAAK6lD,KAAKrkD,GAAIxB,KAAKuY,SAAU,UAC5C,CACC,SAAAutC,CAAUtkD,IACH,OAAOxB,KAAK6lD,KAAKrkD,GAAIxB,KAAK2Z,QAAS,SAC3C,CACC,QAAAosC,CAASvkD,IACF,OAAOxB,KAAK6lD,KAAKrkD,GAAIxB,KAAK8Z,OAAQ,QAC1C,CACC,iBAAAksC,IAAqB33D,MACd2R,KAAKwlD,MAAM,aAAcn3D,KAAM2R,KAAK2tC,YAC5C,CACC,cAAAsY,IAAkB53D,MACX2R,KAAKwlD,MAAM,aAAcn3D,KAAM2R,KAAKuY,SAC5C,CACC,aAAA2tC,IAAiB73D,MACV2R,KAAKwlD,MAAM,aAAcn3D,KAAM2R,KAAK2Z,QAC5C,CACC,YAAAwsC,IAAgB93D,MACT2R,KAAKwlD,MAAM,aAAcn3D,KAAM2R,KAAK8Z,OAC5C,CACC,KAAA0rC,CAAMn6C,OAAQhd,KAAM+3D,eACb,IACO/3D,MACL+c,QAASi7C,MACP,MAAMC,IAAMF,eAAiBpmD,KAAKumD,oBAAoBF,KAClD,GAAAD,eAAiBE,IAAI9B,UAAU6B,MAAQC,MAAQtmD,KAAK2Z,SAAW0sC,IAAI7kD,GAAI,CAClExB,KAAAwmD,MAAMn7C,OAAQi7C,IAAKD,IACxC,KAAmB,CACEtjD,KAAAsjD,IAAMzgD,OACP,MAAM6gD,QAAUL,eAAiBpmD,KAAKumD,oBAAoB3gD,MACrD5F,KAAAwmD,MAAMn7C,OAAQo7C,QAAS7gD,OAEhD,GAEA,CACC,KAAA4gD,CAAMn7C,OAAQoiC,UAAUiZ,WACX,MAAAC,YAAcrhD,YAAY+F,QAChC1I,SAAS+jD,UAAU,SAAWC,aAAc,GAAID,WAChDjZ,UAASpiC,QAAQq7C,WACjB/jD,SAAS+jD,UAAU,QAAUC,aAAc,GAAID,UACvD,CACC,mBAAAH,CAAoBxmD,MACb,IAAA,IAAQlO,EAAI,EAAGA,EAAImO,KAAKulD,iBAAiBv0D,OAAQa,IAAI,CAC3C,MAAAy0D,IAAMtmD,KAAKulD,iBAAiB1zD,GAC9B,GAAAy0D,IAAI9B,UAAUzkD,MAAO,CACd,OAAAumD,GACvB,CACA,CACQ,OAAOtmD,KAAK2Z,OACpB,CACC,IAAAksC,CAAKrkD,GAAI4kD,cAAermD,MACX,MAAA6F,KAAOwgD,cAAc1yC,IAAIlS,IAC/B,GAAIoE,YAAoB,EAAA,CACpB,MAAM,IAAIrX,MAAM,IAAMiT,GAAK,yBAA2BzB,KAAO,IACzE,CACe,OAAA6F,IACf,EAEA,IAAI6nC,aAA+B6X,SAEnC,MAAMsB,cACF,WAAA9mD,GACIE,KAAK6mD,MAAQ,EACrB,CACC,MAAAC,CAAO1yC,MAAO2yC,KAAM14D,KAAMy3B,QACnB,GAAIihC,OAAS,aAAc,CACvB/mD,KAAK6mD,MAAQ7mD,KAAKgnD,mBAAmB5yC,MAAO,MAC5CpU,KAAK6yB,QAAQ7yB,KAAK6mD,MAAOzyC,MAAO,UAC5C,CACcoD,MAAAA,aAAcsO,OAAS9lB,KAAK8X,aAAa1D,OAAO0R,OAAOA,QAAU9lB,KAAK8X,aAAa1D,OACzF,MAAMhN,OAASpH,KAAK6yB,QAAQrb,aAAapD,MAAO2yC,KAAM14D,MACtD,GAAI04D,OAAS,eAAgB,CACpB/mD,KAAA6yB,QAAQrb,aAAapD,MAAO,QACjCpU,KAAK6yB,QAAQ7yB,KAAK6mD,MAAOzyC,MAAO,YAC5C,CACe,OAAAhN,MACf,CACC,OAAAyrB,CAAQrb,aAAapD,MAAO2yC,KAAM14D,MAC3BA,KAAOA,MAAQ,CAAE,EACjB,IAAA,MAAW44D,cAAczvC,aAAY,CACjC,MAAM0vC,OAASD,WAAWC,OACpB,MAAA77C,OAAS67C,OAAOH,MACtB,MAAM1V,OAAS,CACXj9B,MACA/lB,KACA44D,WAAW/iD,SAEf,GAAIvB,SAAS0I,OAAQgmC,OAAQ6V,UAAY,OAAS74D,KAAK84D,WAAY,CACxD,OAAA,KACvB,CACA,CACe,OAAA,IACf,CACI,UAAAC,GACI,IAAK3lD,cAAczB,KAAKoiC,QAAS,CAC7BpiC,KAAKqnD,UAAYrnD,KAAKoiC,OACtBpiC,KAAKoiC,YAAS,CAC1B,CACA,CACC,YAAAtqB,CAAa1D,OACN,GAAIpU,KAAKoiC,OAAQ,CACb,OAAOpiC,KAAKoiC,MACxB,CACQ,MAAM5qB,aAAcxX,KAAKoiC,OAASpiC,KAAKgnD,mBAAmB5yC,OAC1DpU,KAAKsnD,oBAAoBlzC,OAClBoD,OAAAA,YACf,CACI,kBAAAwvC,CAAmB5yC,MAAO8iB,KAChB,MAAAhB,OAAS9hB,OAASA,MAAM8hB,OACxB,MAAAhyB,QAAU7B,eAAe6zB,OAAOhyB,SAAWgyB,OAAOhyB,QAAQyV,QAAS,IACnEA,MAAAA,SAAU4tC,WAAWrxB,QACpB,OAAAhyB,UAAY,QAAUgzB,IAAM,GAAKswB,kBAAkBpzC,MAAOuF,SAASzV,QAASgzB,IAC3F,CACC,mBAAAowB,CAAoBlzC,OACP,MAAAqzC,oBAAsBznD,KAAKqnD,WAAa,GAC9C,MAAM7vC,aAAcxX,KAAKoiC,OACzB,MAAM8L,KAAO,CAACl+C,EAAGC,IAAID,EAAE81B,OAAQ7yB,IAAKhD,EAAEy3D,KAAM5iD,GAAI7R,EAAEi0D,OAAO1lD,KAAOsD,EAAEoiD,OAAO1lD,KACzExB,KAAK6yB,QAAQqb,KAAKuZ,oBAAqBjwC,cAAcpD,MAAO,QAC5DpU,KAAK6yB,QAAQqb,KAAK12B,aAAaiwC,qBAAsBrzC,MAAO,QACpE,EAEC,SAASmzC,WAAWrxB,QACjB,MAAMyxB,SAAW,CAAE,EACnB,MAAMhuC,SAAU,GAChB,MAAM9b,KAAOC,OAAOD,KAAK4vC,SAAS9zB,QAAQ9N,OAC1C,IAAA,IAAQha,EAAI,EAAGA,EAAIgM,KAAK7M,OAAQa,IAAI,CAChC8nB,SAAQzU,KAAKuoC,SAASqY,UAAUjoD,KAAKhM,IAC7C,CACU,MAAA4oB,MAAQyb,OAAOvc,SAAW,GAChC,IAAA,IAAQ9nB,EAAI,EAAGA,EAAI4oB,MAAMzpB,OAAQa,IAAI,CAC3B,MAAAq1D,OAASzsC,MAAM5oB,GACrB,GAAI8nB,SAAQ3V,QAAQkjD,WAAgB,EAAA,CAChCvtC,SAAQzU,KAAKgiD,QACJS,SAAAT,OAAO1lD,IAAM,IAClC,CACA,CACW,MAAA,CACHmY,QAAAA,SACAguC,kBAER,CACA,SAASC,QAAQ1jD,QAASgzB,KAClB,IAACA,KAAOhzB,UAAY,MAAO,CACpB,OAAA,IACf,CACI,GAAIA,UAAY,KAAM,CAClB,MAAO,CAAE,CACjB,CACW,OAAAA,OACX,CACA,SAASsjD,kBAAkBpzC,OAASuF,QAAAA,kBAAUguC,UAAazjD,QAASgzB,KAChE,MAAM9vB,OAAS,GACT,MAAAgR,QAAUhE,MAAM+H,aACtB,IAAA,MAAW+qC,UAAUvtC,SAAQ,CACzB,MAAMnY,GAAK0lD,OAAO1lD,GAClB,MAAMud,KAAO6oC,QAAQ1jD,QAAQ1C,IAAK01B,KAClC,GAAInY,OAAS,KAAM,CACf,QACZ,CACQ3X,OAAOlC,KAAK,CACRgiD,cACAhjD,QAAS2jD,WAAWzzC,MAAM8hB,OAAQ,CAC9BgxB,cACAzsC,MAAOktC,SAASnmD,KACjBud,KAAM3G,UAErB,CACW,OAAAhR,MACX,CACA,SAASygD,WAAW3xB,QAAQgxB,OAAEA,aAASzsC,OAAUsE,KAAM3G,SAC7C,MAAAva,KAAOq4B,OAAO4xB,gBAAgBZ,QACpC,MAAMtkC,OAASsT,OAAO0H,gBAAgB7e,KAAMlhB,MACxC,GAAA4c,OAASysC,OAAOt1C,SAAU,CACnBgR,OAAA1d,KAAKgiD,OAAOt1C,SAC3B,CACW,OAAAskB,OAAO2H,eAAejb,OAAQxK,QAAS,CAC1C,IACD,CACC2M,WAAY,MACZC,UAAW,MACXF,QAAS,MAEjB,CAEA,SAASijC,aAAahoD,KAAMmE,SACxB,MAAM8jD,gBAAkBp2C,SAASsG,SAASnY,OAAS,CAAE,EACrD,MAAMkoD,gBAAkB/jD,QAAQgU,UAAY,CAAE,GAAEnY,OAAS,CAAE,EAC3D,OAAOkoD,eAAe/uC,WAAahV,QAAQgV,WAAa8uC,gBAAgB9uC,WAAa,GACzF,CACA,SAASgvC,0BAA0B1mD,GAAI0X,WACnC,IAAInL,KAAOvM,GACX,GAAIA,KAAO,UAAW,CACXuM,KAAAmL,SACf,MAAA,GAAe1X,KAAO,UAAW,CAClBuM,KAAAmL,YAAc,IAAM,IAAM,GACzC,CACW,OAAAnL,IACX,CACA,SAASo6C,0BAA0Bp6C,KAAMmL,WAC9B,OAAAnL,OAASmL,UAAY,UAAY,SAC5C,CACA,SAASkvC,cAAc5mD,IACnB,GAAIA,KAAO,KAAOA,KAAO,KAAOA,KAAO,IAAK,CACjC,OAAAA,EACf,CACA,CACA,SAAS6mD,iBAAiBxZ,UAClB,GAAAA,WAAa,OAASA,WAAa,SAAU,CACtC,MAAA,GACf,CACQ,GAAAA,WAAa,QAAUA,WAAa,QAAS,CACtC,MAAA,GACf,CACA,CACA,SAASyZ,cAAc9mD,MAAO+mD,cACtB,GAAAH,cAAc5mD,IAAK,CACZ,OAAAA,EACf,CACI,IAAA,MAAWud,QAAQwpC,aAAa,CAC5B,MAAMx6C,KAAOgR,KAAKhR,MAAQs6C,iBAAiBtpC,KAAK8vB,WAAartC,GAAGxQ,OAAS,GAAKo3D,cAAc5mD,GAAG,GAAGhD,eAClG,GAAIuP,KAAM,CACC,OAAAA,IACnB,CACA,CACI,MAAM,IAAIxf,MAAM,6BAA6BiT,wDACjD,CACA,SAASgnD,mBAAmBhnD,GAAIuM,KAAMD,SAClC,GAAIA,QAAQC,KAAO,YAAcvM,GAAI,CAC1B,MAAA,CACHuM,UAEZ,CACA,CACA,SAAS06C,yBAAyBjnD,GAAI00B,QAClC,GAAIA,OAAOrb,MAAQqb,OAAOrb,KAAK3C,SAAU,CACrC,MAAMwwC,QAAUxyB,OAAOrb,KAAK3C,SAAS4N,OAAQ31B,GAAIA,EAAEgsC,UAAY36B,IAAMrR,EAAEksC,UAAY76B,IACnF,GAAIknD,QAAQ13D,OAAQ,CAChB,OAAOw3D,mBAAmBhnD,GAAI,IAAKknD,QAAQ,KAAOF,mBAAmBhnD,GAAI,IAAKknD,QAAQ,GAClG,CACA,CACI,MAAO,CAAE,CACb,CACA,SAASC,iBAAiBzyB,OAAQhyB,SAC9B,MAAM0kD,cAAgBrxC,UAAU2e,OAAOn2B,OAAS,CAC5C+Z,OAAQ,CAAA,GAEN,MAAA+uC,aAAe3kD,QAAQ4V,QAAU,CAAE,EACzC,MAAMgvC,eAAiBf,aAAa7xB,OAAOn2B,KAAMmE,SAC3C4V,MAAAA,QAAgBhc,OAAA8F,OAAO,MAC7B9F,OAAOD,KAAKgrD,cAAcz9C,QAAS5J,KACzB,MAAAunD,UAAYF,aAAarnD,IAC3B,IAACO,SAASgnD,WAAY,CACtB,OAAOp6D,QAAQq6D,MAAM,0CAA0CxnD,KAC3E,CACQ,GAAIunD,UAAUxkC,OAAQ,CAClB,OAAO51B,QAAQqzB,KAAK,kDAAkDxgB,KAClF,CACQ,MAAMuM,KAAOu6C,cAAc9mD,GAAIunD,UAAWN,yBAAyBjnD,GAAI00B,QAAStkB,SAASkI,OAAOivC,UAAUhpD,OACpG,MAAAkpD,UAAYd,0BAA0Bp6C,KAAM+6C,gBAC5C,MAAAI,oBAAsBN,cAAc9uC,QAAU,CAAE,EACtDA,QAAOtY,IAAMiD,QAAe3G,OAAA8F,OAAO,MAAO,CACtC,CACImK,WAEJg7C,UACAG,oBAAoBn7C,MACpBm7C,oBAAoBD,eAG5B/yB,OAAOrb,KAAK3C,SAAS9M,QAAS0C,UACpB,MAAA/N,KAAO+N,QAAQ/N,MAAQm2B,OAAOn2B,KACpC,MAAMmZ,UAAYpL,QAAQoL,WAAa6uC,aAAahoD,KAAMmE,SAC1D,MAAM8jD,gBAAkBzwC,UAAUxX,OAAS,CAAE,EACvC,MAAAmpD,oBAAsBlB,gBAAgBluC,QAAU,CAAE,EACxDhc,OAAOD,KAAKqrD,qBAAqB99C,QAAS+9C,YAChC,MAAAp7C,KAAOm6C,0BAA0BiB,UAAWjwC,WAClD,MAAM1X,GAAKsM,QAAQC,KAAO,WAAaA,KACvC+L,QAAOtY,IAAMsY,QAAOtY,KAAO1D,OAAO8F,OAAO,MACjCkW,QAAAA,QAAOtY,IAAK,CAChB,CACIuM,WAEJ86C,aAAarnD,IACb0nD,oBAAoBC,iBAIhCrrD,OAAOD,KAAKic,SAAQ1O,QAASrH,MACnB,MAAA8V,MAAQC,QAAO/V,KACrBU,QAAQoV,MAAO,CACXjI,SAASkI,OAAOD,MAAM9Z,MACtB6R,SAASiI,UAGVC,OAAAA,OACX,CACA,SAASsvC,YAAYlzB,QACjB,MAAMhyB,QAAUgyB,OAAOhyB,UAAYgyB,OAAOhyB,QAAU,CAAA,GACpDA,QAAQyV,QAAUtX,eAAe6B,QAAQyV,QAAS,CAAA,GAC1CzV,QAAA4V,OAAS6uC,iBAAiBzyB,OAAQhyB,QAC9C,CACA,SAASmlD,SAASxuC,MACdA,KAAOA,MAAQ,CAAE,EACZA,KAAA3C,SAAW2C,KAAK3C,UAAY,GAC5B2C,KAAAsjB,OAAStjB,KAAKsjB,QAAU,GACtB,OAAAtjB,IACX,CACA,SAASyuC,WAAWpzB,QAChBA,OAASA,QAAU,CAAE,EACdA,OAAArb,KAAOwuC,SAASnzB,OAAOrb,MAC9BuuC,YAAYlzB,QACL,OAAAA,MACX,CACA,MAAMqzB,aAAep2C,IACrB,MAAMq2C,eAAiBz9C,IACvB,SAAS09C,WAAWn2C,SAAUo2C,UACtB,IAAA7rD,KAAO0rD,SAAS71C,IAAIJ,UACxB,IAAKzV,KAAM,CACPA,KAAO6rD,WACEH,SAAAz9C,IAAIwH,SAAUzV,MACvB2rD,WAAWhnC,IAAI3kB,KACvB,CACW,OAAAA,IACX,CACA,MAAM8rD,WAAa,CAAC79C,KAAK1L,IAAK2D,OACpB,MAAAgb,KAAO3Z,iBAAiBhF,IAAK2D,KACnC,GAAIgb,YAAoB,EAAA,CACpBjT,KAAI0W,IAAIzD,KAChB,GAEA,MAAM6qC,OACF,WAAA9pD,CAAYo2B,QACHl2B,KAAA6pD,QAAUP,WAAWpzB,QACrBl2B,KAAA8pD,gBAAkB32C,IAClBnT,KAAA+pD,mBAAqB52C,GAClC,CACI,YAAIkF,GACA,OAAOrY,KAAK6pD,QAAQxxC,QAC5B,CACI,QAAItY,GACA,OAAOC,KAAK6pD,QAAQ9pD,IAC5B,CACI,QAAIA,CAAKA,MACLC,KAAK6pD,QAAQ9pD,KAAOA,IAC5B,CACI,QAAI8a,GACA,OAAO7a,KAAK6pD,QAAQhvC,IAC5B,CACI,QAAIA,CAAKA,MACA7a,KAAA6pD,QAAQhvC,KAAOwuC,SAASxuC,KACrC,CACI,WAAI3W,GACA,OAAOlE,KAAK6pD,QAAQ3lD,OAC5B,CACI,WAAIA,CAAQA,SACRlE,KAAK6pD,QAAQ3lD,QAAUA,OAC/B,CACI,WAAIyV,GACA,OAAO3Z,KAAK6pD,QAAQlwC,OAC5B,CACI,MAAA+b,GACI,MAAMQ,OAASl2B,KAAK6pD,QACpB7pD,KAAKgqD,aACLZ,YAAYlzB,OACpB,CACI,UAAA8zB,GACIhqD,KAAK8pD,YAAYG,QACjBjqD,KAAK+pD,eAAeE,OAC5B,CACC,gBAAAtsB,CAAiBusB,aACH,OAAAT,WAAWS,YAAa,IAAI,CAC3B,CACI,YAAYA,cACZ,KAGpB,CACC,yBAAAjqB,CAA0BiqB,YAAalqB,YAChC,OAAOypB,WAAW,GAAGS,0BAA0BlqB,aAAc,IAAI,CACzD,CACI,YAAYkqB,2BAA2BlqB,aACvC,eAAeA,cAEnB,CACI,YAAYkqB,cACZ,KAGpB,CACC,uBAAAtqB,CAAwBsqB,YAAaxqB,aAC9B,OAAO+pB,WAAW,GAAGS,eAAexqB,cAAe,IAAI,CAC/C,CACI,YAAYwqB,wBAAwBxqB,cACpC,YAAYwqB,cACZ,YAAYxqB,cACZ,KAGpB,CACC,eAAAooB,CAAgBZ,QACT,MAAM1lD,GAAK0lD,OAAO1lD,GAClB,MAAMzB,KAAOC,KAAKD,KAClB,OAAO0pD,WAAW,GAAG1pD,eAAeyB,KAAM,IAAI,CACtC,CACI,WAAWA,QACR0lD,OAAOiD,wBAA0B,KAGxD,CACC,aAAAC,CAAcC,UAAWC,YAClB,MAAMR,YAAc9pD,KAAK8pD,YACrB,IAAAzuC,MAAQyuC,YAAYp2C,IAAI22C,WACxB,IAAChvC,OAASivC,WAAY,CACtBjvC,UAAYlI,IACA22C,YAAAh+C,IAAIu+C,UAAWhvC,MACvC,CACe,OAAAA,KACf,CACC,eAAAuiB,CAAgBysB,UAAWE,SAAUD,YACxB,MAAApmD,QAAEA,QAAUnE,KAAAA,MAAUC,KAC5B,MAAMqb,MAAQrb,KAAKoqD,cAAcC,UAAWC,YACtC,MAAAhwB,OAASjf,MAAM3H,IAAI62C,UACzB,GAAIjwB,OAAQ,CACD,OAAAA,MACnB,CACc,MAAA1X,WAAa7W,IACVw+C,SAAAn/C,QAASvN,OACd,GAAIwsD,UAAW,CACXznC,OAAOJ,IAAI6nC,WACXxsD,KAAKuN,QAASrH,KAAM4lD,WAAW/mC,OAAQynC,UAAWtmD,KAClE,CACYlG,KAAKuN,QAASrH,KAAM4lD,WAAW/mC,OAAQ1e,QAASH,MAC3ClG,KAAAuN,QAASrH,KAAM4lD,WAAW/mC,OAAQrL,UAAUxX,OAAS,GAAIgE,MAC9DlG,KAAKuN,QAASrH,KAAM4lD,WAAW/mC,OAAQhR,SAAU7N,MACjDlG,KAAKuN,QAASrH,KAAM4lD,WAAW/mC,OAAQpL,YAAazT,QAElD,MAAAiE,MAAQ9V,MAAM4M,KAAK8jB,QACrB,GAAA5a,MAAMhX,SAAW,EAAG,CACpBgX,MAAM9C,KAAKpH,OAAO8F,OAAO,MACrC,CACY,GAAA4lD,WAAW3jD,IAAI0kD,UAAW,CACpBlvC,MAAAvP,IAAIy+C,SAAUviD,MAChC,CACe,OAAAA,KACf,CACC,iBAAAwiD,GACa,MAAAtmD,QAAEA,QAAUnE,KAAAA,MAAUC,KACrB,MAAA,CACHkE,QACAqT,UAAUxX,OAAS,CAAE,EACrB6R,SAASsG,SAASnY,OAAS,CAAE,EAC7B,CACIA,WAEJ6R,SACA4F,YAEZ,CACC,mBAAAqoB,CAAoBjd,OAAQvkB,OAAO+Z,QAASyK,SAAW,CAChD,KAEA,MAAMzb,OAAS,CACXyvB,QAAS,MAEP,MAAAxxB,SAAEA,qBAAWolD,aAAiBC,YAAY1qD,KAAK+pD,eAAgBnnC,OAAQC,UAC7E,IAAI3e,QAAUmB,SACV,GAAAslD,YAAYtlD,SAAUhH,QAAQ,CAC9B+I,OAAOyvB,QAAU,MACjBze,QAAU3S,WAAW2S,SAAWA,UAAYA,QAC5C,MAAMwyC,YAAc5qD,KAAK69B,eAAejb,OAAQxK,QAASqyC,aAC/CvmD,QAAAigB,eAAe9e,SAAU+S,QAASwyC,YACxD,CACQ,IAAA,MAAWlpC,SAAQrjB,OAAM,CACdqjB,OAAAA,OAAQxd,QAAQwd,MACnC,CACe,OAAAta,MACf,CACC,cAAAy2B,CAAejb,OAAQxK,QAASyK,SAAW,CACpC,IACDyB,oBACC,MAAMjf,SAAEA,UAAcqlD,YAAY1qD,KAAK+pD,eAAgBnnC,OAAQC,UACxD,OAAA9gB,SAASqW,SAAW+L,eAAe9e,SAAU+S,aAAS,EAAWkM,oBAAsBjf,QACtG,EAEA,SAASqlD,YAAYG,cAAejoC,OAAQC,UACpC,IAAAxH,MAAQwvC,cAAcn3C,IAAIkP,QAC9B,IAAKvH,MAAO,CACRA,UAAYlI,IACE03C,cAAA/+C,IAAI8W,OAAQvH,MAClC,CACU,MAAA/H,SAAWuP,SAAS6C,OACtB,IAAA4U,OAASjf,MAAM3H,IAAIJ,UACvB,IAAKgnB,OAAQ,CACH,MAAAj1B,SAAWsd,gBAAgBC,OAAQC,UAChCyX,OAAA,CACLj1B,kBACAolD,YAAa5nC,SAASiD,OAAQnlB,IAAKA,EAAEnC,cAAcwW,SAAS,WAE1DqG,MAAAvP,IAAIwH,SAAUgnB,OAC5B,CACW,OAAAA,MACX,CACA,MAAMwwB,YAAeppD,OAAQK,SAASL,QAAU5D,OAAOy4B,oBAAoB70B,OAAOgmD,KAAM3jD,KAAM0B,WAAW/D,MAAMqC,OAC/G,SAAS4mD,YAAYvmC,OAAO/lB,QACxB,MAAM6mB,aAAEA,aAAAC,YAAeA,aAAiBrN,aAAasM,QACrD,IAAA,MAAW1C,SAAQrjB,OAAM,CACf,MAAA0mB,WAAaG,aAAaxD,OAC1B,MAAAsD,UAAYG,YAAYzD,OAC9B,MAAMhgB,OAASsjB,WAAaD,aAAeX,OAAM1C,OAC7C,GAAAqD,aAAetf,WAAW/D,QAAUopD,YAAYppD,SAAWsjB,WAAa7yB,QAAQuP,OAAQ,CACjF,OAAA,IACnB,CACA,CACW,OAAA,KACX,CAEA,IAAIqpD,QAAU,QAEd,MAAMC,gBAAkB,CACpB,MACA,SACA,OACA,QACA,aAEJ,SAASC,qBAAqBpc,SAAU9gC,MAC7B,OAAA8gC,WAAa,OAASA,WAAa,UAAYmc,gBAAgBhnD,QAAQ6qC,aAAc,GAAM9gC,OAAS,GAC/G,CACA,SAASm9C,cAAcC,GAAIC,IAChB,OAAA,SAASp7D,EAAGC,GACf,OAAOD,EAAEm7D,MAAQl7D,EAAEk7D,IAAMn7D,EAAEo7D,IAAMn7D,EAAEm7D,IAAMp7D,EAAEm7D,IAAMl7D,EAAEk7D,GACtD,CACL,CACA,SAASE,qBAAqBjzC,SAC1B,MAAMhE,MAAQgE,QAAQhE,MAChB,MAAAiiB,iBAAmBjiB,MAAMlQ,QAAQqO,UACvC6B,MAAMuqC,cAAc,eACXh8C,SAAA0zB,kBAAoBA,iBAAiBi1B,WAAY,CACtDlzC,SACDhE,MACP,CACA,SAASm3C,oBAAoBnzC,SACzB,MAAMhE,MAAQgE,QAAQhE,MAChB,MAAAiiB,iBAAmBjiB,MAAMlQ,QAAQqO,UAC9B5P,SAAA0zB,kBAAoBA,iBAAiBm1B,WAAY,CACtDpzC,SACDhE,MACP,CACC,SAASq3C,UAAU7lD,MAChB,GAAI4jB,0BAA4B5jB,OAAS,SAAU,CACxCA,KAAA6jB,SAASiiC,eAAe9lD,KACvC,MAAA,GAAeA,MAAQA,KAAK5U,OAAQ,CAC5B4U,KAAOA,KAAK,EACpB,CACQ,GAAAA,MAAQA,KAAKsW,OAAQ,CACrBtW,KAAOA,KAAKsW,MACpB,CACW,OAAAtW,IACX,CACA,MAAM+lD,UAAY,CAAE,EACpB,MAAMC,SAAY7nD,MACR,MAAAmY,OAASuvC,UAAU1nD,KAClB,OAAAjG,OAAO6M,OAAOghD,WAAW7lC,OAAQ51B,GAAIA,EAAEgsB,SAAWA,QAAQ3U,OAErE,SAASskD,gBAAgBzrD,IAAKkJ,MAAOg4B,MAC3B,MAAAzjC,KAAOC,OAAOD,KAAKuC,KACzB,IAAA,MAAW2D,OAAOlG,KAAK,CACnB,MAAMiuD,QAAU/nD,IAChB,GAAI+nD,QAAUxiD,MAAO,CACX,MAAA5H,MAAQtB,IAAI2D,YACX3D,IAAI2D,KACP,GAAAu9B,KAAO,GAAKwqB,OAASxiD,MAAO,CACxBlJ,IAAA0rD,OAASxqB,MAAQ5/B,KACrC,CACA,CACA,CACA,CACC,SAASqqD,mBAAmB37D,EAAG47D,UAAWC,YAAaC,SACpD,IAAKD,aAAe77D,EAAE2P,OAAS,WAAY,CAChC,OAAA,IACf,CACI,GAAImsD,QAAS,CACF,OAAAF,SACf,CACW,OAAA57D,CACX,CACA,MAAM+7D,MAOF,eAAOzH,IAAY74C,OACN4hC,SAAAjrB,OAAO3W,OACGugD,mBAC3B,CACI,iBAAOtH,IAAcj5C,OACR4hC,SAAAjZ,UAAU3oB,OACAugD,mBAC3B,CACI,WAAAtsD,CAAY8F,KAAMymD,YACd,MAAMn2B,OAASl2B,KAAKk2B,OAAS,IAAI0zB,OAAOyC,YAClC,MAAAC,cAAgBb,UAAU7lD,MAC1B,MAAA2mD,cAAgBX,SAASU,eAC/B,GAAIC,cAAe,CACT,MAAA,IAAIh+D,MAAM,4CAA+Cg+D,cAAc/qD,GAAK,kDAA2D+qD,cAAcrwC,OAAO1a,GAAK,mBACnL,CACc,MAAA0C,QAAUgyB,OAAO2H,eAAe3H,OAAOs0B,oBAAqBxqD,KAAKmc,cACvEnc,KAAKqY,SAAW,IAAK6d,OAAO7d,UAAY+/B,gBAAgBkU,gBACnDtsD,KAAAqY,SAASm8B,aAAate,QAC3B,MAAM9d,QAAUpY,KAAKqY,SAASg8B,eAAeiY,cAAepoD,QAAQwoB,aAC9D,MAAAxQ,OAAS9D,SAAWA,QAAQ8D,OAC5B,MAAAI,OAASJ,QAAUA,OAAOI,OAC1B,MAAAlG,MAAQ8F,QAAUA,OAAO9F,MAC/BpW,KAAKwB,GAAKD,MACVvB,KAAK+Y,IAAMX,QACXpY,KAAKkc,OAASA,OACdlc,KAAKoW,MAAQA,MACbpW,KAAKsc,OAASA,OACdtc,KAAKwsD,SAAWtoD,QAChBlE,KAAKysD,aAAezsD,KAAK0sB,YACzB1sB,KAAK2zC,QAAU,GACf3zC,KAAK0sD,UAAY,GACjB1sD,KAAKq5B,aAAU,EACfr5B,KAAK6wC,MAAQ,GACb7wC,KAAK+b,6BAA0B,EAC/B/b,KAAKkyB,eAAY,EACjBlyB,KAAK2zB,QAAU,GACf3zB,KAAK2sD,gBAAa,EAClB3sD,KAAK4sD,WAAa,CAAE,EACnB5sD,KAAK6sD,0BAAuB,EAC7B7sD,KAAK8sD,gBAAkB,GACvB9sD,KAAK8Z,OAAS,CAAE,EACX9Z,KAAA+sD,SAAW,IAAInG,cACpB5mD,KAAK+3C,SAAW,CAAE,EAClB/3C,KAAKgtD,eAAiB,CAAE,EACxBhtD,KAAKitD,SAAW,MAChBjtD,KAAKqgC,yBAAsB,EAC3BrgC,KAAKu7B,cAAW,EACXv7B,KAAAktD,UAAY5gD,SAAU8M,MAAOpZ,KAAK01B,OAAOtc,MAAOlV,QAAQipD,aAAe,GAC5EntD,KAAK0hC,aAAe,GACViqB,UAAA3rD,KAAKwB,IAAMxB,KACjB,IAACoY,UAAY8D,OAAQ,CACrBvtB,QAAQq6D,MAAM,qEACd,MACZ,CACiBv0B,SAAAP,OAAOl0B,KAAM,WAAYqrD,sBACzB52B,SAAAP,OAAOl0B,KAAM,WAAYurD,qBAClCvrD,KAAKotD,cACL,GAAIptD,KAAKitD,SAAU,CACfjtD,KAAK01B,QACjB,CACA,CACI,eAAIhJ,GACM,MAAExoB,SAASwoB,YAAEA,YAAAnT,oBAAcA,qBAAyBnD,MAAAA,MAAAkG,OAAQA,OAASmwC,aAAAA,cAAkBzsD,KACzF,IAACyB,cAAcirB,aAAc,CACtB,OAAAA,WACnB,CACQ,GAAInT,qBAAuBkzC,aAAc,CAC9B,OAAAA,YACnB,CACe,OAAAnwC,OAASlG,MAAQkG,OAAS,IACzC,CACI,QAAIzB,GACA,OAAO7a,KAAKk2B,OAAOrb,IAC3B,CACI,QAAIA,CAAKA,MACL7a,KAAKk2B,OAAOrb,KAAOA,IAC3B,CACI,WAAI3W,GACA,OAAOlE,KAAKwsD,QACpB,CACI,WAAItoD,CAAQA,SACRlE,KAAKk2B,OAAOhyB,QAAUA,OAC9B,CACI,YAAIupC,GACO,OAAAA,QACf,CACC,WAAA2f,GACOptD,KAAK2+C,cAAc,cACf,GAAA3+C,KAAKkE,QAAQ0V,WAAY,CACzB5Z,KAAKwS,QACjB,KAAe,CACSsa,YAAA9sB,KAAMA,KAAKkE,QAAQiU,iBAC3C,CACQnY,KAAKqtD,aACLrtD,KAAK2+C,cAAc,aACZ,OAAA3+C,IACf,CACI,KAAAiqD,GACgBhuC,YAAAjc,KAAKkc,OAAQlc,KAAK+Y,KACvB,OAAA/Y,IACf,CACI,IAAAuwB,GACIkE,SAASlE,KAAKvwB,MACP,OAAAA,IACf,CACC,MAAAwS,CAAO4D,MAAOkG,QACP,IAAKmY,SAAShB,QAAQzzB,MAAO,CACpBA,KAAAstD,QAAQl3C,MAAOkG,OAChC,KAAe,CACHtc,KAAKutD,kBAAoB,CACrBn3C,YACAkG,cAEhB,CACA,CACI,OAAAgxC,CAAQl3C,MAAOkG,QACX,MAAMpY,QAAUlE,KAAKkE,QACrB,MAAMgY,OAASlc,KAAKkc,OACd,MAAAwQ,YAAcxoB,QAAQqV,qBAAuBvZ,KAAK0sB,YACxD,MAAM8gC,QAAUxtD,KAAKqY,SAASkU,eAAerQ,OAAQ9F,MAAOkG,OAAQoQ,aACpE,MAAM+gC,SAAWvpD,QAAQiU,kBAAoBnY,KAAKqY,SAASC,sBACrD,MAAAc,KAAOpZ,KAAKoW,MAAQ,SAAW,SACrCpW,KAAKoW,MAAQo3C,QAAQp3C,MACrBpW,KAAKsc,OAASkxC,QAAQlxC,OACtBtc,KAAKysD,aAAezsD,KAAK0sB,YACzB,IAAKI,YAAY9sB,KAAMytD,SAAU,MAAO,CACpC,MACZ,CACQztD,KAAK2+C,cAAc,SAAU,CACzBh5C,KAAM6nD,UAEV7qD,SAASuB,QAAQwpD,SAAU,CACvB1tD,KACAwtD,SACDxtD,MACH,GAAIA,KAAKitD,SAAU,CACX,GAAAjtD,KAAKktD,UAAU9zC,MAAO,CACtBpZ,KAAK2tD,QACrB,CACA,CACA,CACI,mBAAAC,GACI,MAAM1pD,QAAUlE,KAAKkE,QACf,MAAA2pD,cAAgB3pD,QAAQ4V,QAAU,CAAE,EACrC/W,KAAA8qD,cAAe,CAACC,YAAapmB,UAC9BomB,YAAYtsD,GAAKkmC,QAE7B,CACC,mBAAAqmB,GACO,MAAM7pD,QAAUlE,KAAKkE,QACrB,MAAM8pD,UAAY9pD,QAAQ4V,OAC1B,MAAMA,QAAS9Z,KAAK8Z,OACd,MAAAm0C,QAAUnwD,OAAOD,KAAKic,SAAQsa,OAAO,CAACh0B,IAAKoB,MAC7CpB,IAAIoB,IAAM,MACH,OAAApB,KACR,IACH,IAAIyL,MAAQ,GACZ,GAAImiD,UAAW,CACHniD,MAAAA,MAAM02B,OAAOzkC,OAAOD,KAAKmwD,WAAW57D,IAAKoP,KACvC,MAAA+mD,aAAeyF,UAAUxsD,IACzB,MAAAuM,KAAOu6C,cAAc9mD,GAAI+mD,cAC/B,MAAM2F,SAAWngD,OAAS,IAC1B,MAAMs2B,aAAet2B,OAAS,IACvB,MAAA,CACH7J,QAASqkD,aACT4F,UAAWD,SAAW,YAAc7pB,aAAe,SAAW,OAC9D+pB,MAAOF,SAAW,eAAiB7pB,aAAe,WAAa,YAGnF,CACathC,KAAA8I,MAAQjG,OACT,MAAM2iD,aAAe3iD,KAAK1B,QAC1B,MAAM1C,GAAK+mD,aAAa/mD,GAClB,MAAAuM,KAAOu6C,cAAc9mD,GAAI+mD,cAC/B,MAAM8F,UAAYhsD,eAAekmD,aAAaxoD,KAAM6F,KAAKwoD,OACrD,GAAA7F,aAAa1Z,gBAAa,GAAaoc,qBAAqB1C,aAAa1Z,SAAU9gC,QAAUk9C,qBAAqBrlD,KAAKuoD,WAAY,CACnI5F,aAAa1Z,SAAWjpC,KAAKuoD,SAC7C,CACYF,QAAQzsD,IAAM,KACd,IAAIqY,MAAQ,KACZ,GAAIrY,MAAMsY,SAAUA,QAAOtY,IAAIzB,OAASsuD,UAAW,CAC/Cx0C,MAAQC,QAAOtY,GAC/B,KAAmB,CACG,MAAA8sD,WAAa7gB,SAASsY,SAASsI,WACrCx0C,MAAQ,IAAIy0C,WAAW,CACnB9sD,MACAzB,KAAMsuD,UACNt1C,IAAK/Y,KAAK+Y,IACV3E,MAAOpU,OAEX8Z,QAAOD,MAAMrY,IAAMqY,KACnC,CACkBA,MAAAm0B,KAAKua,aAAcrkD,WAExBnB,KAAAkrD,QAAS,CAACM,WAAY/sD,MACvB,IAAK+sD,WAAY,QACNz0C,QAAOtY,GAC9B,IAEasY,KAAAA,QAASD,QACVo3B,QAAQ7a,UAAUp2B,KAAM6Z,MAAOA,MAAM3V,SAC7B+sC,QAAAyC,OAAO1zC,KAAM6Z,QAEjC,CACC,eAAA20C,GACO,MAAM/2B,SAAWz3B,KAAK0sD,UAChB,MAAAvrB,QAAUnhC,KAAK6a,KAAK3C,SAASlnB,OACnC,MAAMkwC,QAAUzJ,SAASzmC,OACzBymC,SAASnwB,KAAK,CAACtX,EAAGC,IAAID,EAAEyT,MAAQxT,EAAEwT,OAClC,GAAIy9B,QAAUC,QAAS,CACnB,IAAA,IAAQtvC,EAAIsvC,QAAStvC,EAAIqvC,UAAWrvC,EAAE,CAClCmO,KAAKyuD,oBAAoB58D,EACzC,CACqB4lC,SAAA9rB,OAAOw1B,QAASD,QAAUC,QAC/C,CACanhC,KAAA8sD,gBAAkBr1B,SAAS31B,MAAM,GAAGwF,KAAK4jD,cAAc,QAAS,SAC7E,CACC,2BAAAwD,GACO,MAAQhC,UAAWj1B,SAAW5c,MAAM3C,SAAEA,WAAiBlY,KACnD,GAAAy3B,SAASzmC,OAASknB,SAASlnB,OAAQ,QAC5BgP,KAAKq5B,OACxB,CACiB5B,SAAArsB,QAAQ,CAACgC,KAAM3J,UAChB,GAAAyU,SAAS4N,OAAQ7yB,GAAIA,IAAMma,KAAKq+B,UAAUz6C,SAAW,EAAG,CACxDgP,KAAKyuD,oBAAoBhrD,OACzC,GAEA,CACI,wBAAAkrD,GACI,MAAMC,eAAiB,GACjB,MAAA12C,SAAWlY,KAAK6a,KAAK3C,SAC3B,IAAIrmB,EAAGwR,KACPrD,KAAK0uD,8BACL,IAAI78D,EAAI,EAAGwR,KAAO6U,SAASlnB,OAAQa,EAAIwR,KAAMxR,IAAI,CACvC,MAAAic,QAAUoK,SAASrmB,GACrB,IAAAub,KAAOpN,KAAK88B,eAAejrC,GAC/B,MAAMkO,KAAO+N,QAAQ/N,MAAQC,KAAKk2B,OAAOn2B,KACzC,GAAIqN,KAAKrN,MAAQqN,KAAKrN,OAASA,KAAM,CACjCC,KAAKyuD,oBAAoB58D,GAClBub,KAAApN,KAAK88B,eAAejrC,EAC3C,CACYub,KAAKrN,KAAOA,KACZqN,KAAK8L,UAAYpL,QAAQoL,WAAa6uC,aAAahoD,KAAMC,KAAKkE,SACzDkJ,KAAAyhD,MAAQ/gD,QAAQ+gD,OAAS,EAC9BzhD,KAAK3J,MAAQ5R,EACRub,KAAAiyB,MAAQ,GAAKvxB,QAAQuxB,MACrBjyB,KAAAuF,QAAU3S,KAAKypC,iBAAiB53C,GACrC,GAAIub,KAAK+rB,WAAY,CACZ/rB,KAAA+rB,WAAW4C,YAAYlqC,GAC5Bub,KAAK+rB,WAAWyC,YAChC,KAAmB,CACG,MAAAkzB,gBAAkBrhB,SAASmY,cAAc7lD,MAC/C,MAAM07B,mBAAEA,mBAAqBC,gBAAAA,iBAAqB9pB,SAASsG,SAASnY,MACpEjC,OAAO0B,OAAOsvD,gBAAiB,CAC3BpzB,gBAAiB+R,SAASC,WAAWhS,iBACrCD,mBAAoBA,oBAAsBgS,SAASC,WAAWjS,sBAElEruB,KAAK+rB,WAAa,IAAI21B,gBAAgB9uD,KAAMnO,GAC7B+8D,eAAA1pD,KAAKkI,KAAK+rB,WACzC,CACA,CACQn5B,KAAKwuD,kBACE,OAAAI,cACf,CACC,cAAAG,GACOhsD,KAAK/C,KAAK6a,KAAK3C,SAAU,CAACpK,QAAStK,gBAC/BxD,KAAK88B,eAAet5B,cAAc21B,WAAW8D,SAC9Cj9B,KACX,CACC,KAAAi9B,GACOj9B,KAAK+uD,iBACL/uD,KAAK2+C,cAAc,QAC3B,CACI,MAAAjpB,CAAOtc,MACH,MAAM8c,OAASl2B,KAAKk2B,OACpBA,OAAOR,SACD,MAAAxxB,QAAUlE,KAAKwsD,SAAWt2B,OAAO2H,eAAe3H,OAAOs0B,oBAAqBxqD,KAAKmc,cACvF,MAAM6yC,cAAgBhvD,KAAKqgC,qBAAuBn8B,QAAQqO,UAC1DvS,KAAKivD,gBACLjvD,KAAKkvD,sBACLlvD,KAAKmvD,uBACLnvD,KAAK+sD,SAAS3F,aACV,GAAApnD,KAAK2+C,cAAc,eAAgB,CACnCvlC,UACA+tC,WAAY,SACT,MAAO,CACV,MACZ,CACc,MAAAyH,eAAiB5uD,KAAK2uD,2BAC5B3uD,KAAK2+C,cAAc,wBACnB,IAAI5K,WAAa,EACT,IAAA,IAAAliD,EAAI,EAAGwR,KAAOrD,KAAK6a,KAAK3C,SAASlnB,OAAQa,EAAIwR,KAAMxR,IAAI,CAC3D,MAAMsnC,WAAEA,YAAgBn5B,KAAK88B,eAAejrC,GAC5C,MAAMorC,QAAS+xB,eAAiBJ,eAAe5qD,QAAQm1B,eAAgB,EACvEA,WAAWkE,sBAAsBJ,QACjC8W,WAAa7kD,KAAKC,KAAKgqC,WAAWgG,iBAAkB4U,WAChE,CACQA,WAAa/zC,KAAKovD,YAAclrD,QAAQstC,OAAO1+B,YAAcihC,WAAa,EAC1E/zC,KAAKqvD,cAActb,YACnB,IAAKib,cAAe,CACXjsD,KAAA6rD,eAAiBz1B,aAClBA,WAAW8D,SAE3B,CACQj9B,KAAKsvD,gBAAgBl2C,MACrBpZ,KAAK2+C,cAAc,cAAe,CAC9BvlC,YAEJpZ,KAAK2zC,QAAQrsC,KAAK4jD,cAAc,IAAK,SAC/B,MAAAv3B,QAAEA,QAAUg5B,WAAAA,YAAgB3sD,KAClC,GAAI2sD,WAAY,CACP3sD,KAAAuvD,cAAc5C,WAAY,KAC3C,MAAA,GAAmBh5B,QAAQ3iC,OAAQ,CAClBgP,KAAAwvD,mBAAmB77B,QAASA,QAAS,KACtD,CACQ3zB,KAAK2tD,QACb,CACC,aAAAsB,GACYlsD,KAAA/C,KAAK8Z,OAASD,QACPo3B,QAAA4C,UAAU7zC,KAAM6Z,SAE5B7Z,KAAK4tD,sBACL5tD,KAAK+tD,qBACb,CACC,mBAAAmB,GACO,MAAMhrD,QAAUlE,KAAKkE,QACrB,MAAMurD,eAAiB,IAAI1jD,IAAIjO,OAAOD,KAAKmC,KAAK4sD,aAChD,MAAM8C,UAAY,IAAI3jD,IAAI7H,QAAQsU,QAC9B,IAAC9S,UAAU+pD,eAAgBC,cAAgB1vD,KAAK6sD,uBAAyB3oD,QAAQ0V,WAAY,CAC7F5Z,KAAK2vD,eACL3vD,KAAKqtD,YACjB,CACA,CACC,oBAAA8B,GACa,MAAAnC,eAAEA,gBAAoBhtD,KAC5B,MAAM4vD,QAAU5vD,KAAK6vD,0BAA4B,GACjD,IAAA,MAAWxkD,OAAEA,OAAA/B,MAASA,MAAQkE,MAAAA,SAAYoiD,QAAQ,CAC9C,MAAMtuB,KAAOj2B,SAAW,mBAAqBmC,MAAQA,MACrCq+C,gBAAAmB,eAAgB1jD,MAAOg4B,KACnD,CACA,CACC,sBAAAuuB,GACO,MAAMnuB,aAAe1hC,KAAK0hC,aAC1B,IAAKA,eAAiBA,aAAa1wC,OAAQ,CACvC,MACZ,CACQgP,KAAK0hC,aAAe,GACd,MAAAouB,aAAe9vD,KAAK6a,KAAK3C,SAASlnB,OAClC,MAAA++D,QAAW9O,KAAM,IAAIl1C,IAAI21B,aAAa5b,OAAQ51B,GAAIA,EAAE,KAAO+wD,KAAK7uD,IAAI,CAAClC,EAAG2B,IAAIA,EAAI,IAAM3B,EAAEyb,OAAO,GAAG+Z,KAAK,OACvG,MAAAsqC,UAAYD,QAAQ,GAC1B,IAAA,IAAQl+D,EAAI,EAAGA,EAAIi+D,aAAcj+D,IAAI,CACjC,IAAK6T,UAAUsqD,UAAWD,QAAQl+D,IAAK,CACnC,MAChB,CACA,CACQ,OAAOK,MAAM4M,KAAKkxD,WAAW59D,IAAKlC,GAAIA,EAAEzB,MAAM,MAAM2D,IAAKpC,IAAK,CACtDqb,OAAQrb,EAAE,GACVsZ,OAAQtZ,EAAE,GACVwd,OAAQxd,EAAE,KAE1B,CACC,aAAAq/D,CAActb,YACH,GAAA/zC,KAAK2+C,cAAc,eAAgB,CACnCwI,WAAY,SACT,MAAO,CACV,MACZ,CACQlW,QAAQvb,OAAO11B,KAAMA,KAAKoW,MAAOpW,KAAKsc,OAAQy3B,YAC9C,MAAM/1B,KAAOhe,KAAKkyB,UAClB,MAAM+9B,OAASjyC,KAAK5H,OAAS,GAAK4H,KAAK1B,QAAU,EACjDtc,KAAK2zC,QAAU,GACV5wC,KAAA/C,KAAK6wC,MAAQzlB,MACV,GAAA6kC,QAAU7kC,IAAIyjB,WAAa,YAAa,CACxC,MAChB,CACY,GAAIzjB,IAAIgL,UAAW,CACfhL,IAAIgL,WACpB,CACYp2B,KAAK2zC,QAAQzuC,QAAQkmB,IAAIuoB,YAC1B3zC,MACHA,KAAK2zC,QAAQvoC,QAAQ,CAACxF,KAAMnC,UACxBmC,KAAKsqD,KAAOzsD,SAEhBzD,KAAK2+C,cAAc,cAC3B,CACC,eAAA2Q,CAAgBl2C,MACL,GAAApZ,KAAK2+C,cAAc,uBAAwB,CAC3CvlC,UACA+tC,WAAY,SACT,MAAO,CACV,MACZ,CACgB,IAAA,IAAAt1D,EAAI,EAAGwR,KAAOrD,KAAK6a,KAAK3C,SAASlnB,OAAQa,EAAIwR,OAAQxR,EAAE,CAC3DmO,KAAK88B,eAAejrC,GAAGsnC,WAAW/C,WAC9C,CACgB,IAAA,IAAAvkC,EAAI,EAAGwR,KAAOrD,KAAK6a,KAAK3C,SAASlnB,OAAQa,EAAIwR,OAAQxR,EAAE,CAC3DmO,KAAKmwD,eAAet+D,EAAG4T,WAAW2T,MAAQA,KAAK,CAC3C5V,aAAc3R,IACbunB,KACjB,CACQpZ,KAAK2+C,cAAc,sBAAuB,CACtCvlC,WAEZ,CACC,cAAA+2C,CAAe1sD,OAAO2V,MACT,MAAAhM,KAAOpN,KAAK88B,eAAer5B,QACjC,MAAMpV,KAAO,CACT+e,UACA3J,MAAAA,OACA2V,UACA+tC,WAAY,MAEhB,GAAInnD,KAAK2+C,cAAc,sBAAuBtwD,QAAU,MAAO,CAC3D,MACZ,CACa+e,KAAA+rB,WAAW9F,QAAQja,MACxB/qB,KAAK84D,WAAa,MACbnnD,KAAA2+C,cAAc,qBAAsBtwD,KACjD,CACI,MAAAs/D,GACQ,GAAA3tD,KAAK2+C,cAAc,eAAgB,CACnCwI,WAAY,SACT,MAAO,CACV,MACZ,CACY,GAAA1yB,SAAS5uB,IAAI7F,MAAO,CACpB,GAAIA,KAAKitD,WAAax4B,SAAShB,QAAQzzB,MAAO,CAC1Cy0B,SAASnrB,MAAMtJ,KAC/B,CACA,KAAe,CACHA,KAAK0zB,OACgB23B,qBAAA,CACjBj3C,MAAOpU,MAEvB,CACA,CACI,IAAA0zB,GACQ,IAAA7hC,EACJ,GAAImO,KAAKutD,kBAAmB,CACxB,MAAMn3C,MAAEA,MAAAkG,OAAQA,QAAYtc,KAAKutD,kBACjCvtD,KAAKutD,kBAAoB,KACpBvtD,KAAAstD,QAAQl3C,MAAOkG,OAChC,CACQtc,KAAKiqD,QACL,GAAIjqD,KAAKoW,OAAS,GAAKpW,KAAKsc,QAAU,EAAG,CACrC,MACZ,CACY,GAAAtc,KAAK2+C,cAAc,aAAc,CACjCwI,WAAY,SACT,MAAO,CACV,MACZ,CACQ,MAAMiJ,OAASpwD,KAAK2zC,QAChB,IAAA9hD,EAAI,EAAGA,EAAIu+D,OAAOp/D,QAAUo/D,OAAOv+D,GAAG+hD,GAAK,IAAK/hD,EAAE,CAClDu+D,OAAOv+D,GAAG6hC,KAAK1zB,KAAKkyB,UAChC,CACQlyB,KAAKqwD,gBACL,KAAMx+D,EAAIu+D,OAAOp/D,SAAUa,EAAE,CACzBu+D,OAAOv+D,GAAG6hC,KAAK1zB,KAAKkyB,UAChC,CACQlyB,KAAK2+C,cAAc,YAC3B,CACC,sBAAAjnB,CAAuBF,eAChB,MAAMC,SAAWz3B,KAAK8sD,gBACtB,MAAM1lD,OAAS,GACf,IAAIvV,EAAGwR,KACH,IAAAxR,EAAI,EAAGwR,KAAOo0B,SAASzmC,OAAQa,EAAIwR,OAAQxR,EAAE,CACvC,MAAAub,KAAOqqB,SAAS5lC,GAClB,IAAC2lC,eAAiBpqB,KAAKuF,QAAS,CAChCvL,OAAOlC,KAAKkI,KAC5B,CACA,CACe,OAAAhG,MACf,CACC,4BAAA2nC,GACc,OAAA/uC,KAAK03B,uBAAuB,KAC3C,CACC,aAAA24B,GACW,GAAArwD,KAAK2+C,cAAc,qBAAsB,CACzCwI,WAAY,SACT,MAAO,CACV,MACZ,CACc,MAAA1vB,SAAWz3B,KAAK+uC,+BACtB,IAAA,IAAQl9C,EAAI4lC,SAASzmC,OAAS,EAAGa,GAAK,IAAKA,EAAE,CACpCmO,KAAAswD,aAAa74B,SAAS5lC,GACvC,CACQmO,KAAK2+C,cAAc,oBAC3B,CACC,YAAA2R,CAAaljD,MACN,MAAM2L,IAAM/Y,KAAK+Y,IACjB,MAAM1qB,KAAO,CACT+e,UACA3J,MAAO2J,KAAK3J,MACZ0jD,WAAY,MAEV,MAAA5xC,KAAO8c,mBAAmBryB,KAAMoN,MACtC,GAAIpN,KAAK2+C,cAAc,oBAAqBtwD,QAAU,MAAO,CACzD,MACZ,CACQ,GAAIknB,KAAM,CACN2I,SAASnF,IAAKxD,KAC1B,CACQnI,KAAK+rB,WAAWzF,OAChB,GAAIne,KAAM,CACN4I,WAAWpF,IACvB,CACQ1qB,KAAK84D,WAAa,MACbnnD,KAAA2+C,cAAc,mBAAoBtwD,KAC/C,CACC,aAAAkhD,CAAcjhC,OACP,OAAOyP,eAAezP,MAAOtO,KAAKkyB,UAAWlyB,KAAKovD,YAC1D,CACI,yBAAAmB,CAA0BngE,EAAGgpB,KAAMlV,QAASorC,kBAClC,MAAAjkC,OAASglC,YAAYC,MAAMl3B,MAC7B,UAAO/N,SAAW,WAAY,CAC9B,OAAOA,OAAOrL,KAAM5P,EAAG8T,QAASorC,iBAC5C,CACQ,MAAO,EACf,CACI,cAAAxS,CAAet5B,cACX,MAAMsK,QAAU9N,KAAK6a,KAAK3C,SAAS1U,cACnC,MAAMi0B,SAAWz3B,KAAK0sD,UAClB,IAAAt/C,KAAOqqB,SAAS3R,OAAQ7yB,GAAIA,GAAKA,EAAEw4C,WAAa39B,SAASvG,MAC7D,IAAK6F,KAAM,CACAA,KAAA,CACHrN,KAAM,KACN8a,KAAM,GACN/M,QAAS,KACTqrB,WAAY,KACZuB,OAAQ,KACRyB,QAAS,KACTE,QAAS,KACTwyB,MAAO/gD,SAAWA,QAAQ+gD,OAAS,EACnCprD,MAAOD,aACPioC,SAAU39B,QACVF,QAAS,GACTH,QAAS,OAEbgqB,SAASvyB,KAAKkI,KAC1B,CACe,OAAAA,IACf,CACI,UAAA+O,GACI,OAAOnc,KAAKu7B,WAAav7B,KAAKu7B,SAAW9Y,cAAc,KAAM,CACzDrO,MAAOpU,KACPD,KAAM,UAElB,CACI,sBAAAysC,GACW,OAAAxsC,KAAK+uC,+BAA+B/9C,MACnD,CACI,gBAAAy4C,CAAiBjmC,cACb,MAAMsK,QAAU9N,KAAK6a,KAAK3C,SAAS1U,cACnC,IAAKsK,QAAS,CACH,OAAA,KACnB,CACc,MAAAV,KAAOpN,KAAK88B,eAAet5B,cAC1B,cAAO4J,KAAKstB,SAAW,WAAattB,KAAKstB,QAAU5sB,QAAQ4sB,MAC1E,CACI,oBAAA81B,CAAqBhtD,aAAcmP,SACzB,MAAAvF,KAAOpN,KAAK88B,eAAet5B,cACjC4J,KAAKstB,QAAU/nB,OACvB,CACI,oBAAA44B,CAAqB9nC,QACjBzD,KAAKgtD,eAAevpD,SAAUzD,KAAKgtD,eAAevpD,OAC1D,CACI,iBAAAujC,CAAkBvjC,QACP,OAACzD,KAAKgtD,eAAevpD,OACpC,CACC,iBAAAgtD,CAAkBjtD,aAAcy2B,UAAWtnB,SAC9B,MAAAyG,KAAOzG,QAAU,OAAS,OAC1B,MAAAvF,KAAOpN,KAAK88B,eAAet5B,cACjC,MAAMsvB,MAAQ1lB,KAAK+rB,WAAW4G,0BAA8B3mB,MACxD,GAAA5T,QAAQy0B,WAAY,CACpB7sB,KAAKyN,KAAKof,WAAWS,QAAU/nB,QAC/B3S,KAAK01B,QACjB,KAAe,CACE11B,KAAAwwD,qBAAqBhtD,aAAcmP,SACxCmgB,MAAM4C,OAAOtoB,KAAM,CACfuF,kBAEJ3S,KAAK01B,OAAQ3c,KAAMA,IAAIvV,eAAiBA,aAAe4V,UAAgB,EACnF,CACA,CACI,IAAAxG,CAAKpP,aAAcy2B,WACVj6B,KAAAywD,kBAAkBjtD,aAAcy2B,UAAW,MACxD,CACI,IAAAxnB,CAAKjP,aAAcy2B,WACVj6B,KAAAywD,kBAAkBjtD,aAAcy2B,UAAW,KACxD,CACC,mBAAAw0B,CAAoBjrD,cACP,MAAA4J,KAAOpN,KAAK0sD,UAAUlpD,cACxB,GAAA4J,MAAQA,KAAK+rB,WAAY,CACzB/rB,KAAK+rB,WAAW+D,UAC5B,QACel9B,KAAK0sD,UAAUlpD,aAC9B,CACI,KAAAktD,GACI,IAAI7+D,EAAGwR,KACPrD,KAAKuwB,OACLkE,SAASD,OAAOx0B,MACZ,IAAAnO,EAAI,EAAGwR,KAAOrD,KAAK6a,KAAK3C,SAASlnB,OAAQa,EAAIwR,OAAQxR,EAAE,CACvDmO,KAAKyuD,oBAAoB58D,EACrC,CACA,CACI,OAAA8+D,GACI3wD,KAAK2+C,cAAc,iBACb,MAAAziC,OAAEA,OAASnD,IAAAA,KAAS/Y,KAC1BA,KAAK0wD,QACL1wD,KAAKk2B,OAAO8zB,aACZ,GAAI9tC,OAAQ,CACRlc,KAAK2vD,eACL1zC,YAAYC,OAAQnD,KACf/Y,KAAAqY,SAASi8B,eAAev7B,KAC7B/Y,KAAKkc,OAAS,KACdlc,KAAK+Y,IAAM,IACvB,QACe4yC,UAAU3rD,KAAKwB,IACtBxB,KAAK2+C,cAAc,eAC3B,CACI,aAAAiS,IAAiBviE,MACb,OAAO2R,KAAKkc,OAAO20C,aAAaxiE,KACxC,CACC,UAAAg/D,GACOrtD,KAAK8wD,iBACD,GAAA9wD,KAAKkE,QAAQ0V,WAAY,CACzB5Z,KAAK+wD,sBACjB,KAAe,CACH/wD,KAAKitD,SAAW,IAC5B,CACA,CACC,cAAA6D,GACO,MAAM9lD,UAAYhL,KAAK4sD,WACvB,MAAMv0C,SAAWrY,KAAKqY,SAChB,MAAA24C,KAAO,CAACjxD,KAAM+K,aACPuN,SAAAmV,iBAAiBxtB,KAAMD,KAAM+K,WACtCE,UAAUjL,MAAQ+K,WAEtB,MAAMA,SAAW,CAAC1a,EAAG6C,EAAG6R,KACpB1U,EAAE86B,QAAUj4B,EACZ7C,EAAE+6B,QAAUrmB,EACZ9E,KAAKuvD,cAAcn/D,IAElB2S,KAAA/C,KAAKkE,QAAQsU,OAASzY,MAAOixD,KAAKjxD,KAAM+K,UACrD,CACC,oBAAAimD,GACW,IAAC/wD,KAAK6sD,qBAAsB,CAC5B7sD,KAAK6sD,qBAAuB,CAAE,CAC1C,CACQ,MAAM7hD,UAAYhL,KAAK6sD,qBACvB,MAAMx0C,SAAWrY,KAAKqY,SAChB,MAAA24C,KAAO,CAACjxD,KAAM+K,aACPuN,SAAAmV,iBAAiBxtB,KAAMD,KAAM+K,WACtCE,UAAUjL,MAAQ+K,WAEhB,MAAAmmD,QAAU,CAAClxD,KAAM+K,aACf,GAAAE,UAAUjL,MAAO,CACRsY,SAAAoV,oBAAoBztB,KAAMD,KAAM+K,kBAClCE,UAAUjL,KACjC,GAEc,MAAA+K,SAAW,CAACsL,MAAOkG,UACrB,GAAItc,KAAKkc,OAAQ,CACRlc,KAAAwS,OAAO4D,MAAOkG,OACnC,GAEY,IAAA40C,SACJ,MAAMjE,SAAW,KACbgE,QAAQ,SAAUhE,UAClBjtD,KAAKitD,SAAW,KAChBjtD,KAAKwS,SACLw+C,KAAK,SAAUlmD,UACfkmD,KAAK,SAAUE,WAEnBA,SAAW,KACPlxD,KAAKitD,SAAW,MAChBgE,QAAQ,SAAUnmD,UAClB9K,KAAK0wD,QACA1wD,KAAAstD,QAAQ,EAAG,GAChB0D,KAAK,SAAU/D,WAEnB,GAAI50C,SAASk8B,WAAWv0C,KAAKkc,QAAS,CACxB+wC,UACtB,KAAe,CACOiE,UACtB,CACA,CACC,YAAAvB,GACO5sD,KAAK/C,KAAK4sD,WAAY,CAAC9hD,SAAU/K,QAC7BC,KAAKqY,SAASoV,oBAAoBztB,KAAMD,KAAM+K,YAElD9K,KAAK4sD,WAAa,CAAE,EACpB7pD,KAAK/C,KAAK6sD,qBAAsB,CAAC/hD,SAAU/K,QACvCC,KAAKqY,SAASoV,oBAAoBztB,KAAMD,KAAM+K,YAElD9K,KAAK6sD,0BAAuB,CACpC,CACI,gBAAAsE,CAAiBtlD,MAAOuN,KAAM4/B,SACpB,MAAA3zB,OAAS2zB,QAAU,MAAQ,SAC7B,IAAA5rC,KAAMxH,KAAM/T,EAAGwR,KACnB,GAAI+V,OAAS,UAAW,CACpBhM,KAAOpN,KAAK88B,eAAejxB,MAAM,GAAGrI,cACpC4J,KAAK+rB,WAAW,IAAM9T,OAAS,sBAC3C,CACY,IAAAxzB,EAAI,EAAGwR,KAAOwI,MAAM7a,OAAQa,EAAIwR,OAAQxR,EAAE,CAC1C+T,KAAOiG,MAAMha,GACb,MAAMsnC,WAAavzB,MAAQ5F,KAAK88B,eAAel3B,KAAKpC,cAAc21B,WAClE,GAAIA,WAAY,CACDA,WAAA9T,OAAS,cAAczf,KAAKukB,QAASvkB,KAAKpC,aAAcoC,KAAKnC,MACxF,CACA,CACA,CACC,iBAAA2tD,GACc,OAAApxD,KAAK2zB,SAAW,EAC/B,CACC,iBAAA09B,CAAkBC,gBACL,MAAAC,WAAavxD,KAAK2zB,SAAW,GAC7B,MAAArhB,OAASg/C,eAAel/D,IAAI,EAAGoR,0BAAeC,MAAAA,WAC1C,MAAA2J,KAAOpN,KAAK88B,eAAet5B,cACjC,IAAK4J,KAAM,CACD,MAAA,IAAI7e,MAAM,6BAA+BiV,aAC/D,CACmB,MAAA,CACHA,0BACA2mB,QAAS/c,KAAKyN,KAAKpX,QACnBA,MAAAA,UAGR,MAAMwL,SAAW/L,eAAeoP,OAAQi/C,YACxC,GAAItiD,QAAS,CACTjP,KAAK2zB,QAAUrhB,OACftS,KAAK2sD,WAAa,KACb3sD,KAAAwvD,mBAAmBl9C,OAAQi/C,WAC5C,CACA,CACC,aAAA5S,CAAcoI,KAAM14D,KAAMy3B,QACnB,OAAO9lB,KAAK+sD,SAASjG,OAAO9mD,KAAM+mD,KAAM14D,KAAMy3B,OACtD,CACC,eAAAgW,CAAgB01B,UACF,OAAAxxD,KAAK+sD,SAAS3qB,OAAOtc,OAAQnlB,GAAIA,EAAEumD,OAAO1lD,KAAOgwD,UAAUxgE,SAAW,CACrF,CACC,kBAAAw+D,CAAmBl9C,OAAQi/C,WAAYE,QAC1B,MAAAC,aAAe1xD,KAAKkE,QAAQ2U,MAC5B,MAAAq1B,KAAO,CAACl+C,EAAGC,IAAID,EAAE81B,OAAQ7yB,IAAKhD,EAAEy3D,KAAM5iD,GAAI7R,EAAEuQ,eAAiBsB,EAAEtB,cAAgBvQ,EAAEwQ,QAAUqB,EAAErB,QAC7F,MAAAkuD,YAAczjB,KAAKqjB,WAAYj/C,QACrC,MAAMs/C,UAAYH,OAASn/C,OAAS47B,KAAK57B,OAAQi/C,YACjD,GAAII,YAAY3gE,OAAQ,CACpBgP,KAAKmxD,iBAAiBQ,YAAaD,aAAat4C,KAAM,MAClE,CACY,GAAAw4C,UAAU5gE,QAAU0gE,aAAat4C,KAAM,CACvCpZ,KAAKmxD,iBAAiBS,UAAWF,aAAat4C,KAAM,KAChE,CACA,CACC,aAAAm2C,CAAcn/D,EAAGqhE,QACV,MAAMpjE,KAAO,CACTo9B,MAAOr7B,EACPqhE,cACAtK,WAAY,KACZ8E,YAAajsD,KAAKuvC,cAAcn/C,IAEpC,MAAMyhE,YAAe3K,SAAUA,OAAOhjD,QAAQsU,QAAUxY,KAAKkE,QAAQsU,QAAQxD,SAAS5kB,EAAE4lD,OAAOj2C,MAC/F,GAAIC,KAAK2+C,cAAc,cAAetwD,KAAMwjE,eAAiB,MAAO,CAChE,MACZ,CACQ,MAAM5iD,QAAUjP,KAAK8xD,aAAa1hE,EAAGqhE,OAAQpjE,KAAK49D,aAClD59D,KAAK84D,WAAa,MACbnnD,KAAA2+C,cAAc,aAActwD,KAAMwjE,aACnC,GAAA5iD,SAAW5gB,KAAK4gB,QAAS,CACzBjP,KAAK2tD,QACjB,CACe,OAAA3tD,IACf,CACC,YAAA8xD,CAAa1hE,EAAGqhE,OAAQxF,aACjB,MAAQt4B,QAAS49B,WAAa,GAAArtD,QAAKA,SAAalE,KAChD,MAAMsvC,iBAAmBmiB,OACzB,MAAMn/C,OAAStS,KAAK+xD,mBAAmB3hE,EAAGmhE,WAAYtF,YAAa3c,kBAC7D,MAAA4c,QAAUpmD,cAAc1V,GAC9B,MAAM47D,UAAYD,mBAAmB37D,EAAG4P,KAAK2sD,WAAYV,YAAaC,SACtE,GAAID,YAAa,CACbjsD,KAAK2sD,WAAa,KAClBhqD,SAASuB,QAAQsV,QAAS,CACtBppB,EACAkiB,OACAtS,MACDA,MACH,GAAIksD,QAAS,CACTvpD,SAASuB,QAAQuV,QAAS,CACtBrpB,EACAkiB,OACAtS,MACDA,KACnB,CACA,CACQ,MAAMiP,SAAW/L,eAAeoP,OAAQi/C,YACxC,GAAItiD,SAAWwiD,OAAQ,CACnBzxD,KAAK2zB,QAAUrhB,OACVtS,KAAAwvD,mBAAmBl9C,OAAQi/C,WAAYE,OACxD,CACQzxD,KAAK2sD,WAAaX,UACX,OAAA/8C,OACf,CACC,kBAAA8iD,CAAmB3hE,EAAGmhE,WAAYtF,YAAa3c,kBACpC,GAAAl/C,EAAE2P,OAAS,WAAY,CACvB,MAAO,EACnB,CACQ,IAAKksD,YAAa,CACP,OAAAsF,UACnB,CACc,MAAAG,aAAe1xD,KAAKkE,QAAQ2U,MAClC,OAAO7Y,KAAKuwD,0BAA0BngE,EAAGshE,aAAat4C,KAAMs4C,aAAcpiB,iBAClF,EAjzBIpN,cADEiqB,MACK,WAAWv6C,UAClBswB,cAFEiqB,MAEK,YAAYR,WACnBzpB,cAHEiqB,MAGK,YAAY50C,WACnB2qB,cAJEiqB,MAIK,WAAW1e,UAClBvL,cALEiqB,MAKK,UAAUpB,SACjB7oB,cANEiqB,MAMK,WAAWP,UA8yBtB,SAASQ,oBACE,OAAArpD,KAAKopD,MAAMR,UAAYv3C,OAAQA,MAAM24C,SAAS3F,aACzD,CAEA,SAAS4K,SAASj5C,IAAKoR,QAASoe,UAC5B,MAAMD,WAAEA,WAAar1C,EAAAA,EAAA6R,EAAIA,cAAIskC,YAAcD,YAAAA,YAAAjlC,QAAcA,SAAaimB,QAChE,MAAAtM,YAAEA,YAAckU,gBAAAA,iBAAqB7tB,QACrC,MAAA+tD,eAAiB/iE,KAAKE,IAAIyuB,YAAcurB,YAAahgC,gBAAgBk/B,WAAaC,WACxFxvB,IAAIqE,YACArE,IAAAuE,IAAIrqB,EAAG6R,EAAGskC,YAAcvrB,YAAc,EAAGyqB,WAAa2pB,eAAiB,EAAG1pB,SAAW0pB,eAAiB,GAC1G,GAAI9oB,YAAc,EAAG,CACX,MAAA+oB,eAAiBhjE,KAAKE,IAAIyuB,YAAcsrB,YAAa//B,gBAAgBk/B,WAAaC,WACxFxvB,IAAIuE,IAAIrqB,EAAG6R,EAAGqkC,YAActrB,YAAc,EAAG0qB,SAAW2pB,eAAiB,EAAG5pB,WAAa4pB,eAAiB,EAAG,KACrH,KAAW,CACG,MAAAC,UAAYjjE,KAAKE,IAAIyuB,YAAc,EAAGurB,YAAchgC,gBAAgBk/B,WAAaC,WACvF,GAAIxW,kBAAoB,QAAS,CACzBhZ,IAAAuE,IAAIrqB,EAAG6R,EAAGqtD,UAAW5pB,SAAWxiC,GAAK,EAAGuiC,WAAaviC,GAAK,EAAG,KAC7E,MAAA,GAAmBgsB,kBAAoB,QAAS,CAC9B,MAAAphC,EAAI,EAAIwhE,UAAYA,UACpB,MAAAzpB,MAAQ/3C,EAAIzB,KAAKmhB,IAAIk4B,SAAWxiC,GAAK,GAAK9S,EAC1C,MAAA01C,MAAQh4C,EAAIzB,KAAKkgB,IAAIm5B,SAAWxiC,GAAK,GAAKjB,EAChD,MAAM0jC,OAAS73C,EAAIzB,KAAKmhB,IAAIi4B,WAAaviC,GAAK,GAAK9S,EACnD,MAAMw1C,OAAS93C,EAAIzB,KAAKkgB,IAAIk5B,WAAaviC,GAAK,GAAKjB,EAC/CiU,IAAA0E,OAAOirB,KAAMC,MACb5vB,IAAA0E,OAAO+qB,OAAQC,OAC/B,CACA,CACI1vB,IAAIwE,YACAxE,IAAAyE,OAAO,EAAG,GACVzE,IAAA4E,KAAK,EAAG,EAAG5E,IAAImD,OAAO9F,MAAO2C,IAAImD,OAAOI,QAC5CvD,IAAIxD,KAAK,UACb,CACA,SAAS68C,QAAQr5C,IAAKoR,QAASoe,UAC3B,MAAMD,WAAEA,WAAa+pB,YAAAA,YAAAp/D,EAAcA,IAAI6R,EAAIskC,YAAAA,YAAAD,YAAcA,aAAiBhf,QAC1E,IAAImoC,YAAcD,YAAcjpB,YAGhCrwB,IAAIqE,YACJrE,IAAIuE,IAAIrqB,EAAG6R,EAAGskC,YAAad,WAAagqB,YAAa/pB,SAAW+pB,aAChE,GAAInpB,YAAckpB,YAAa,CAC3BC,YAAcD,YAAclpB,YACxBpwB,IAAAuE,IAAIrqB,EAAG6R,EAAGqkC,YAAaZ,SAAW+pB,YAAahqB,WAAagqB,YAAa,KACrF,KAAW,CACHv5C,IAAIuE,IAAIrqB,EAAG6R,EAAGutD,YAAa9pB,SAAWliC,QAASiiC,WAAajiC,QACpE,CACI0S,IAAIwE,YACJxE,IAAIxD,MACR,CACA,SAASg9C,gBAAgB7wD,OACrB,OAAO4f,kBAAkB5f,MAAO,CAC5B,aACA,WACA,aACA,YAER,CAGI,SAAS8wD,oBAAoBl1C,IAAK6rB,YAAaC,YAAaqpB,YAC5D,MAAM5tD,EAAI0tD,gBAAgBj1C,IAAIpZ,QAAQwuD,cAChC,MAAAC,eAAiBvpB,YAAcD,aAAe,EACpD,MAAMypB,WAAa1jE,KAAKE,IAAIujE,cAAeF,WAAatpB,YAAc,GAQhE,MAAA0pB,kBAAqB9xD,MACvB,MAAM+xD,eAAiB1pB,YAAcl6C,KAAKE,IAAIujE,cAAe5xD,MAAQ0xD,WAAa,EAClF,OAAO5oD,YAAY9I,IAAK,EAAG7R,KAAKE,IAAIujE,cAAeG,iBAEhD,MAAA,CACHC,WAAYF,kBAAkBhuD,EAAEkuD,YAChCC,SAAUH,kBAAkBhuD,EAAEmuD,UAC9BC,WAAYppD,YAAYhF,EAAEouD,WAAY,EAAGL,YACzCM,SAAUrpD,YAAYhF,EAAEquD,SAAU,EAAGN,YAE7C,CAGI,SAASO,WAAWxiE,EAAGyiE,MAAOngE,EAAG6R,GAC1B,MAAA,CACH7R,EAAGA,EAAItC,EAAIzB,KAAKmhB,IAAI+iD,OACpBtuD,EAAGA,EAAInU,EAAIzB,KAAKkgB,IAAIgkD,OAE5B,CAcI,SAASC,QAAQt6C,IAAKoR,QAAS/U,OAAQu0B,QAASpgC,IAAK2jC,UAC/C,MAAAj6C,EAAEA,IAAI6R,EAAIwjC,WAAYh/B,kBAAQ+oD,YAAclpB,YAAamqB,QAAYnpC,QACrE,MAAAif,YAAcl6C,KAAKC,IAAIg7B,QAAQif,YAAcO,QAAUv0B,OAASi9C,YAAa,GACnF,MAAMlpB,YAAcmqB,OAAS,EAAIA,OAAS3pB,QAAUv0B,OAASi9C,YAAc,EAC3E,IAAIkB,cAAgB,EACpB,MAAMriE,OAAQqY,IAAMD,MACpB,GAAIqgC,QAAS,CAIT,MAAM6pB,qBAAuBF,OAAS,EAAIA,OAAS3pB,QAAU,EAC7D,MAAM8pB,qBAAuBrqB,YAAc,EAAIA,YAAcO,QAAU,EACjE,MAAA+pB,oBAAsBF,qBAAuBC,sBAAwB,EAC3E,MAAME,cAAgBD,qBAAuB,EAAIxiE,OAAQwiE,oBAAsBA,mBAAqB/pB,SAAWz4C,OAC/GqiE,eAAiBriE,OAAQyiE,eAAiB,CAClD,CACU,MAAAC,KAAO1kE,KAAKC,IAAI,KAAO+B,OAAQk4C,YAAch0B,OAASrP,IAAMqjC,YAC5D,MAAAyqB,aAAe3iE,OAAQ0iE,MAAQ,EAC/B,MAAAtrB,WAAah/B,MAAQuqD,YAAcN,cACnC,MAAAhrB,SAAWh/B,IAAMsqD,YAAcN,cAC/B,MAAAR,WAAEA,WAAaC,SAAAA,SAAAC,WAAWA,WAAaC,SAAAA,UAAcV,oBAAoBroC,QAASgf,YAAaC,YAAab,SAAWD,YAC7H,MAAMwrB,yBAA2B1qB,YAAc2pB,WAC/C,MAAMgB,uBAAyB3qB,YAAc4pB,SACvC,MAAAgB,wBAA0B1rB,WAAayqB,WAAae,yBACpD,MAAAG,sBAAwB1rB,SAAWyqB,SAAWe,uBACpD,MAAMG,yBAA2B/qB,YAAc8pB,WAC/C,MAAMkB,uBAAyBhrB,YAAc+pB,SACvC,MAAAkB,wBAA0B9rB,WAAa2qB,WAAaiB,yBACpD,MAAAG,sBAAwB9rB,SAAW2qB,SAAWiB,uBACpDp7C,IAAIqE,YACJ,GAAI8vB,SAAU,CAEJ,MAAAonB,uBAAyBN,wBAA0BC,uBAAyB,EAClFl7C,IAAIuE,IAAIrqB,EAAG6R,EAAGskC,YAAa4qB,wBAAyBM,uBACpDv7C,IAAIuE,IAAIrqB,EAAG6R,EAAGskC,YAAakrB,sBAAuBL,uBAElD,GAAIjB,SAAW,EAAG,CACd,MAAMuB,QAAUpB,WAAWY,uBAAwBE,sBAAuBhhE,EAAG6R,GACzEiU,IAAAuE,IAAIi3C,QAAQthE,EAAGshE,QAAQzvD,EAAGkuD,SAAUiB,sBAAuB1rB,SAAWliC,QACtF,CAEQ,MAAMmuD,GAAKrB,WAAWgB,uBAAwB5rB,SAAUt1C,EAAG6R,GAC3DiU,IAAI0E,OAAO+2C,GAAGvhE,EAAGuhE,GAAG1vD,GAEpB,GAAIouD,SAAW,EAAG,CACd,MAAMqB,QAAUpB,WAAWgB,uBAAwBE,sBAAuBphE,EAAG6R,GACzEiU,IAAAuE,IAAIi3C,QAAQthE,EAAGshE,QAAQzvD,EAAGouD,SAAU3qB,SAAWliC,QAASguD,sBAAwBnlE,KAAK6W,GACrG,CAEQ,MAAM0uD,uBAAyBlsB,SAAW2qB,SAAW/pB,aAAeb,WAAa2qB,WAAa9pB,cAAgB,EAC1GpwB,IAAAuE,IAAIrqB,EAAG6R,EAAGqkC,YAAaZ,SAAW2qB,SAAW/pB,YAAasrB,sBAAuB,MACjF17C,IAAAuE,IAAIrqB,EAAG6R,EAAGqkC,YAAasrB,sBAAuBnsB,WAAa2qB,WAAa9pB,YAAa,MAEzF,GAAI8pB,WAAa,EAAG,CAChB,MAAMsB,QAAUpB,WAAWe,yBAA0BE,wBAAyBnhE,EAAG6R,GAC7EiU,IAAAuE,IAAIi3C,QAAQthE,EAAGshE,QAAQzvD,EAAGmuD,WAAYmB,wBAA0BllE,KAAK6W,GAAIuiC,WAAajiC,QACtG,CAEQ,MAAMquD,GAAKvB,WAAWW,yBAA0BxrB,WAAYr1C,EAAG6R,GAC/DiU,IAAI0E,OAAOi3C,GAAGzhE,EAAGyhE,GAAG5vD,GAEpB,GAAIiuD,WAAa,EAAG,CAChB,MAAMwB,QAAUpB,WAAWW,yBAA0BE,wBAAyB/gE,EAAG6R,GAC7EiU,IAAAuE,IAAIi3C,QAAQthE,EAAGshE,QAAQzvD,EAAGiuD,WAAYzqB,WAAajiC,QAAS2tD,wBAC5E,CACA,KAAW,CACCj7C,IAAAyE,OAAOvqB,EAAG6R,GACd,MAAM6vD,YAAczlE,KAAKmhB,IAAI2jD,yBAA2B5qB,YAAcn2C,EACtE,MAAM2hE,YAAc1lE,KAAKkgB,IAAI4kD,yBAA2B5qB,YAActkC,EAClEiU,IAAA0E,OAAOk3C,YAAaC,aACxB,MAAMC,UAAY3lE,KAAKmhB,IAAI4jD,uBAAyB7qB,YAAcn2C,EAClE,MAAM6hE,UAAY5lE,KAAKkgB,IAAI6kD,uBAAyB7qB,YAActkC,EAC9DiU,IAAA0E,OAAOo3C,UAAWC,UAC9B,CACI/7C,IAAIwE,WACR,CACA,SAASw3C,QAAQh8C,IAAKoR,QAAS/U,OAAQu0B,QAASuD,UAC5C,MAAM8nB,YAAEA,YAAA1sB,WAAcA,WAAaJ,cAAAA,eAAmB/d,QACtD,IAAIoe,SAAWpe,QAAQoe,SACvB,GAAIysB,YAAa,CACb3B,QAAQt6C,IAAKoR,QAAS/U,OAAQu0B,QAASpB,SAAU2E,UACjD,IAAA,IAAQr7C,EAAI,EAAGA,EAAImjE,cAAenjE,EAAE,CAChCknB,IAAI6E,MAChB,CACY,IAAChW,MAAMsgC,eAAgB,CACZK,SAAAD,YAAcJ,cAAgBliC,KAAOA,IAC5D,CACA,CACIqtD,QAAQt6C,IAAKoR,QAAS/U,OAAQu0B,QAASpB,SAAU2E,UACjDn0B,IAAI6E,OACG,OAAA2qB,QACX,CACA,SAASsb,WAAW9qC,IAAKoR,QAAS/U,OAAQu0B,QAASuD,UAC/C,MAAM8nB,YAAEA,YAAA1sB,WAAcA,WAAaJ,cAAAA,cAAAhkC,QAAgBA,SAAaimB,QAChE,MAAMtM,YAAEA,YAAckU,gBAAAA,gBAAAF,WAAkBA,WAAaC,iBAAAA,iBAAA4gC,aAAmBA,cAAkBxuD,QACpF,MAAA+wD,MAAQ/wD,QAAQ6mC,cAAgB,QACtC,IAAKltB,YAAa,CACd,MACR,CACQ9E,IAAA4qC,YAAY9xB,YAAc,IAC9B9Y,IAAI6qC,eAAiB9xB,iBACrB,GAAImjC,MAAO,CACPl8C,IAAIrD,UAAYmI,YAAc,EAC9B9E,IAAIm8C,SAAWnjC,iBAAmB,OAC1C,KAAW,CACHhZ,IAAIrD,UAAYmI,YAChB9E,IAAIm8C,SAAWnjC,iBAAmB,OAC1C,CACI,IAAIwW,SAAWpe,QAAQoe,SACvB,GAAIysB,YAAa,CACb3B,QAAQt6C,IAAKoR,QAAS/U,OAAQu0B,QAASpB,SAAU2E,UACjD,IAAA,IAAQr7C,EAAI,EAAGA,EAAImjE,cAAenjE,EAAE,CAChCknB,IAAI+E,QAChB,CACY,IAAClW,MAAMsgC,eAAgB,CACZK,SAAAD,YAAcJ,cAAgBliC,KAAOA,IAC5D,CACA,CACI,GAAIivD,MAAO,CACC7C,QAAAr5C,IAAKoR,QAASoe,SAC9B,CACQ,GAAArkC,QAAQixD,UAAY5sB,SAAWD,YAAcviC,IAAM2sD,eAAiB,GAAK3gC,kBAAoB,QAAS,CAC7FigC,SAAAj5C,IAAKoR,QAASoe,SAC/B,CACI,IAAKysB,YAAa,CACd3B,QAAQt6C,IAAKoR,QAAS/U,OAAQu0B,QAASpB,SAAU2E,UACjDn0B,IAAI+E,QACZ,CACA,CACA,MAAMs3C,mBAAmB9c,QA8BrB,WAAAx4C,CAAYk1B,KACDoQ,QARXlD,cAAAliC,KAAA,iBACAkiC,cAAAliC,KAAA,YACAkiC,cAAAliC,KAAA,eACAkiC,cAAAliC,KAAA,eACAkiC,cAAAliC,KAAA,eACAkiC,cAAAliC,KAAA,eACAkiC,cAAAliC,KAAA,cAGIA,KAAKkE,aAAU,EACflE,KAAKkoC,mBAAgB,EACrBloC,KAAKsoC,gBAAa,EAClBtoC,KAAKuoC,cAAW,EAChBvoC,KAAKmpC,iBAAc,EACnBnpC,KAAKopC,iBAAc,EACnBppC,KAAKqyD,YAAc,EACnBryD,KAAKg1D,YAAc,EACnB,GAAIhgC,IAAK,CACEl3B,OAAA0B,OAAOQ,KAAMg1B,IAChC,CACA,CACI,OAAAya,CAAQ4lB,OAAQC,OAAQhmB,kBACd,MAAAhhC,MAAQtO,KAAK2vC,SAAS,CACxB,IACA,KACDL,kBACH,MAAMzmC,MAAEA,MAAAE,SAAQA,UAAcR,kBAAkB+F,MAAO,CACnDrb,EAAGoiE,OACHvwD,EAAGwwD,SAED,MAAAhtB,WAAEA,oBAAaC,SAAWY,YAAAA,YAAAC,YAAcA,0BAAclB,eAAmBloC,KAAK2vC,SAAS,CACzF,aACA,WACA,cACA,cACA,iBACDL,kBACH,MAAMimB,SAAWv1D,KAAKkE,QAAQylC,QAAU3pC,KAAKkE,QAAQ2Z,aAAe,EACpE,MAAM0sB,eAAiBloC,eAAe6lC,cAAeK,SAAWD,YAChE,MAAMktB,eAAiBnsD,cAAcR,MAAOy/B,WAAYC,WAAaD,aAAeC,SAC9E,MAAAktB,cAAgBlrB,gBAAkBvkC,KAAOwvD,eAC/C,MAAME,aAAe3rD,WAAWhB,SAAUogC,YAAcosB,QAASnsB,YAAcmsB,SAC/E,OAAOE,eAAiBC,YAChC,CACI,cAAA3lB,CAAeT,kBACL,MAAAr8C,EAAEA,IAAI6R,EAAIwjC,WAAAA,WAAAC,SAAaA,qBAAWY,YAAcC,YAAAA,aAAiBppC,KAAK2vC,SAAS,CACjF,IACA,IACA,aACA,WACA,cACA,eACDL,kBACH,MAAMl6B,OAAEA,OAAAu0B,QAASA,SAAa3pC,KAAKkE,QAC7B,MAAAyxD,WAAartB,WAAaC,UAAY,EAC5C,MAAMqtB,YAAczsB,YAAcC,YAAcO,QAAUv0B,QAAU,EAC7D,MAAA,CACHniB,EAAGA,EAAI/D,KAAKmhB,IAAIslD,WAAaC,WAC7B9wD,EAAGA,EAAI5V,KAAKkgB,IAAIumD,WAAaC,WAEzC,CACI,eAAArd,CAAgBjJ,kBACL,OAAAtvC,KAAK+vC,eAAeT,iBACnC,CACI,IAAA5b,CAAK3a,KACK,MAAA7U,QAAEA,QAAUgkC,cAAAA,eAAmBloC,KAC/B,MAAAoV,QAAUlR,QAAQkR,QAAU,GAAK,EACjC,MAAAu0B,SAAWzlC,QAAQylC,SAAW,GAAK,EACzC,MAAMuD,SAAWhpC,QAAQgpC,SACzBltC,KAAKqyD,YAAcnuD,QAAQ6mC,cAAgB,QAAU,IAAO,EAC5D/qC,KAAKg1D,YAAc9sB,cAAgBliC,IAAM9W,KAAK8X,MAAMkhC,cAAgBliC,KAAO,EAC3E,GAAIkiC,gBAAkB,GAAKloC,KAAKmpC,YAAc,GAAKnpC,KAAKopC,YAAc,EAAG,CACrE,MACZ,CACQrwB,IAAIwC,OACJ,MAAMo6C,WAAa31D,KAAKsoC,WAAatoC,KAAKuoC,UAAY,EAClDxvB,IAAAmE,UAAUhuB,KAAKmhB,IAAIslD,WAAavgD,OAAQlmB,KAAKkgB,IAAIumD,WAAavgD,QAC5D,MAAAygD,IAAM,EAAI3mE,KAAKkgB,IAAIlgB,KAAKE,IAAI2W,GAAImiC,eAAiB,IACvD,MAAM4tB,aAAe1gD,OAASygD,IAC9B98C,IAAIkG,UAAY/a,QAAQ8T,gBACxBe,IAAI+G,YAAc5b,QAAQ+T,YAC1B88C,QAAQh8C,IAAK/Y,KAAM81D,aAAcnsB,QAASuD,UAC1C2W,WAAW9qC,IAAK/Y,KAAM81D,aAAcnsB,QAASuD,UAC7Cn0B,IAAI4C,SACZ,EA1GIumB,cADEkzB,WACK,KAAK,OACZlzB,cAFEkzB,WAEK,WAAW,CACdrqB,YAAa,SACb9yB,YAAa,OACb4Z,WAAY,GACZC,iBAAkB,EAClBC,qBAAiB,EACjB2gC,aAAc,EACd70C,YAAa,EACbzI,OAAQ,EACRu0B,QAAS,EACT9gC,WAAO,EACPqkC,SAAU,KACVioB,SAAU,QAEdjzB,cAhBEkzB,WAgBK,gBAAgB,CACnBp9C,gBAAiB,oBAErBkqB,cAnBEkzB,WAmBK,cAAc,CACjBjjD,YAAa,KACbD,WAAaE,MAAOA,OAAS,eAyFrC,SAAS2jD,SAASh9C,IAAK7U,QAASyU,MAAQzU,SACpC6U,IAAIi9C,QAAU3zD,eAAesW,MAAMiZ,eAAgB1tB,QAAQ0tB,gBAC3D7Y,IAAI4qC,YAAYthD,eAAesW,MAAMkZ,WAAY3tB,QAAQ2tB,aACzD9Y,IAAI6qC,eAAiBvhD,eAAesW,MAAMmZ,iBAAkB5tB,QAAQ4tB,kBACpE/Y,IAAIm8C,SAAW7yD,eAAesW,MAAMoZ,gBAAiB7tB,QAAQ6tB,iBAC7DhZ,IAAIrD,UAAYrT,eAAesW,MAAMkF,YAAa3Z,QAAQ2Z,aAC1D9E,IAAI+G,YAAczd,eAAesW,MAAMV,YAAa/T,QAAQ+T,YAChE,CACA,SAASwF,OAAO1E,IAAKsF,SAAU1a,QAC3BoV,IAAI0E,OAAO9Z,OAAO1Q,EAAG0Q,OAAOmB,EAChC,CACC,SAASmxD,cAAc/xD,SACpB,GAAIA,QAAQgyD,QAAS,CACV,OAAA93C,cACf,CACI,GAAIla,QAAQqlB,SAAWrlB,QAAQmlB,yBAA2B,WAAY,CAC3D,OAAA7K,cACf,CACW,OAAAf,MACX,CACA,SAAS04C,SAAS9oD,OAAQiiB,QAAS+hB,OAAS,CAAA,GACxC,MAAM7jC,MAAQH,OAAOrc,OACf,MAAEsY,MAAO8sD,YAAc,EAAI7sD,IAAK8sD,UAAY7oD,MAAQ,GAAO6jC,OACjE,MAAQ/nC,MAAOgtD,aAAe/sD,IAAKgtD,YAAgBjnC,QACnD,MAAMhmB,MAAQpa,KAAKC,IAAIinE,YAAaE,cACpC,MAAM/sD,IAAMra,KAAKE,IAAIinE,UAAWE,YAChC,MAAMC,QAAUJ,YAAcE,cAAgBD,UAAYC,cAAgBF,YAAcG,YAAcF,UAAYE,WAC3G,MAAA,CACH/oD,YACAlE,YACAyI,KAAMud,QAAQvd,KACd1O,KAAMkG,IAAMD,QAAUktD,QAAUhpD,MAAQjE,IAAMD,MAAQC,IAAMD,MAEpE,CACC,SAASmtD,YAAY19C,IAAKsG,KAAMiQ,QAAS+hB,QAChC,MAAAhkC,OAAEA,OAASnJ,QAAAA,SAAamb,KACxB,MAAA7R,MAAEA,YAAQlE,MAAQyI,KAAAA,KAAA1O,KAAOA,MAAU8yD,SAAS9oD,OAAQiiB,QAAS+hB,QAC7D,MAAAqlB,WAAaT,cAAc/xD,SACjC,IAAIo9B,KAAEA,KAAM,KAAAr+B,QAAOA,SAAaouC,QAAU,CAAE,EAC5C,IAAIx/C,EAAGyc,MAAOgb,KACd,IAAIz3B,EAAI,EAAGA,GAAKwR,OAAQxR,EAAE,CACtByc,MAAQjB,QAAQ/D,OAASrG,QAAUI,KAAOxR,EAAIA,IAAM2b,OACpD,GAAIc,MAAMyY,KAAM,CACZ,QACH,SAAUua,KAAM,CACbvoB,IAAIyE,OAAOlP,MAAMrb,EAAGqb,MAAMxJ,GACnBw8B,KAAA,KACnB,KAAe,CACHo1B,WAAW39C,IAAKuQ,KAAMhb,MAAOrL,QAASiB,QAAQgyD,QAC1D,CACe5sC,KAAAhb,KACf,CACI,GAAIyD,KAAM,CACNzD,MAAQjB,QAAQ/D,OAASrG,QAAUI,KAAO,IAAMmK,OAChDkpD,WAAW39C,IAAKuQ,KAAMhb,MAAOrL,QAASiB,QAAQgyD,QACtD,CACI,QAASnkD,IACb,CACC,SAAS4kD,gBAAgB59C,IAAKsG,KAAMiQ,QAAS+hB,QAC1C,MAAMhkC,OAASgS,KAAKhS,OACd,MAAAG,MAAEA,YAAQlE,MAAQjG,KAAAA,MAAU8yD,SAAS9oD,OAAQiiB,QAAS+hB,QAC5D,MAAM/P,KAAEA,KAAM,KAAAr+B,QAAOA,SAAaouC,QAAU,CAAE,EAC9C,IAAIulB,KAAO,EACX,IAAIC,OAAS,EACb,IAAIhlE,EAAGyc,MAAOwoD,MAAO7tB,KAAMF,KAAMguB,MACjC,MAAMC,WAAcvzD,SAAS6F,OAASrG,QAAUI,KAAOI,OAAQA,SAAU+J,MACzE,MAAMypD,MAAQ,KACV,GAAIhuB,OAASF,KAAM,CACXhwB,IAAA0E,OAAOm5C,KAAM7tB,MACbhwB,IAAA0E,OAAOm5C,KAAM3tB,MACblwB,IAAA0E,OAAOm5C,KAAMG,MAC7B,GAEI,GAAIz1B,KAAM,CACEhzB,MAAAjB,OAAO2pD,WAAW,IAC1Bj+C,IAAIyE,OAAOlP,MAAMrb,EAAGqb,MAAMxJ,EAClC,CACI,IAAIjT,EAAI,EAAGA,GAAKwR,OAAQxR,EAAE,CACdyc,MAAAjB,OAAO2pD,WAAWnlE,IAC1B,GAAIyc,MAAMyY,KAAM,CACZ,QACZ,CACQ,MAAM9zB,EAAIqb,MAAMrb,EAChB,MAAM6R,EAAIwJ,MAAMxJ,EAChB,MAAMoyD,OAASjkE,EAAI,EACnB,GAAIikE,SAAWJ,MAAO,CAClB,GAAIhyD,EAAImkC,KAAM,CACHA,KAAAnkC,CACvB,MAAA,GAAuBA,EAAIikC,KAAM,CACVA,KAAAjkC,CACvB,CACoB8xD,MAAAC,OAASD,KAAO3jE,KAAO4jE,MAC3C,KAAe,CACII,QACHl+C,IAAA0E,OAAOxqB,EAAG6R,GACNgyD,MAAAI,OACCL,OAAA,EACT5tB,KAAOF,KAAOjkC,CAC1B,CACgBiyD,MAAAjyD,CAChB,CACWmyD,OACX,CACC,SAASE,kBAAkB93C,MACxB,MAAMN,KAAOM,KAAKnb,QAClB,MAAM2tB,WAAa9S,KAAK8S,YAAc9S,KAAK8S,WAAW7gC,OACtD,MAAMomE,aAAe/3C,KAAKqsB,aAAersB,KAAKqR,QAAU3R,KAAKwK,SAAWxK,KAAKsK,yBAA2B,aAAetK,KAAKm3C,UAAYrkC,WACxI,OAAOulC,YAAcT,gBAAkBF,WAC3C,CACC,SAASY,wBAAwBnzD,SAC9B,GAAIA,QAAQgyD,QAAS,CACV,OAAAtoC,qBACf,CACI,GAAI1pB,QAAQqlB,SAAWrlB,QAAQmlB,yBAA2B,WAAY,CAC3D,OAAAwE,oBACf,CACW,OAAAF,YACX,CACA,SAAS2pC,oBAAoBv+C,IAAKsG,KAAM/V,MAAOkE,OAC3C,IAAI+pD,KAAOl4C,KAAKm4C,MAChB,IAAKD,KAAM,CACAA,KAAAl4C,KAAKm4C,MAAQ,IAAIC,OACxB,GAAIp4C,KAAKk4C,KAAKA,KAAMjuD,MAAOkE,OAAQ,CAC/B+pD,KAAKh6C,WACjB,CACA,CACaw4C,SAAAh9C,IAAKsG,KAAKnb,SACnB6U,IAAI+E,OAAOy5C,KACf,CACA,SAASG,iBAAiB3+C,IAAKsG,KAAM/V,MAAOkE,OAClC,MAAA0iB,SAAEA,SAAWhsB,QAAAA,SAAamb,KAC1B,MAAAs4C,cAAgBR,kBAAkB93C,MACxC,IAAA,MAAWiQ,WAAWY,SAAS,CAClB6lC,SAAAh9C,IAAK7U,QAASorB,QAAQ3W,OAC/BI,IAAIqE,YACA,GAAAu6C,cAAc5+C,IAAKsG,KAAMiQ,QAAS,CAClChmB,YACAC,IAAKD,MAAQkE,MAAQ,IACrB,CACAuL,IAAIwE,WAChB,CACQxE,IAAI+E,QACZ,CACA,CACA,MAAM85C,iBAAmBH,SAAW,WACpC,SAAS/jC,KAAK3a,IAAKsG,KAAM/V,MAAOkE,OAC5B,GAAIoqD,YAAcv4C,KAAKnb,QAAQorB,QAAS,CAChBgoC,oBAAAv+C,IAAKsG,KAAM/V,MAAOkE,MAC9C,KAAW,CACckqD,iBAAA3+C,IAAKsG,KAAM/V,MAAOkE,MAC3C,CACA,CACA,MAAMqqD,oBAAoBvf,QAuBtB,WAAAx4C,CAAYk1B,KACDoQ,QACPplC,KAAK2rC,SAAW,KAChB3rC,KAAKkE,aAAU,EACflE,KAAKgxB,YAAS,EACdhxB,KAAK0wB,WAAQ,EACb1wB,KAAK6wB,eAAY,EACjB7wB,KAAKw3D,WAAQ,EACbx3D,KAAK83D,aAAU,EACf93D,KAAK+3D,eAAY,EACjB/3D,KAAK0rC,WAAa,MAClB1rC,KAAKg4D,eAAiB,MACtBh4D,KAAKmxB,mBAAgB,EACrB,GAAI6D,IAAK,CACEl3B,OAAA0B,OAAOQ,KAAMg1B,IAChC,CACA,CACI,mBAAAkX,CAAoBha,UAAWhZ,WAC3B,MAAMhV,QAAUlE,KAAKkE,QAChB,IAAAA,QAAQqlB,SAAWrlB,QAAQmlB,yBAA2B,cAAgBnlB,QAAQgyD,UAAYl2D,KAAKg4D,eAAgB,CAChH,MAAMjmD,KAAO7N,QAAQ2J,SAAW7N,KAAK0wB,MAAQ1wB,KAAK6wB,UAClD1H,2BAA2BnpB,KAAK83D,QAAS5zD,QAASguB,UAAWngB,KAAMmH,WACnElZ,KAAKg4D,eAAiB,IAClC,CACA,CACI,UAAI3qD,CAAOA,QACPrN,KAAK83D,QAAUzqD,cACRrN,KAAK+3D,iBACL/3D,KAAKw3D,MACZx3D,KAAKg4D,eAAiB,KAC9B,CACI,UAAI3qD,GACA,OAAOrN,KAAK83D,OACpB,CACI,YAAI5nC,GACO,OAAAlwB,KAAK+3D,YAAc/3D,KAAK+3D,UAAYvnC,iBAAiBxwB,KAAMA,KAAKkE,QAAQorB,SACvF,CACC,KAAA6pB,GACO,MAAMjpB,SAAWlwB,KAAKkwB,SACtB,MAAM7iB,OAASrN,KAAKqN,OACpB,OAAO6iB,SAASl/B,QAAUqc,OAAO6iB,SAAS,GAAG5mB,MACrD,CACC,IAAAiB,GACO,MAAM2lB,SAAWlwB,KAAKkwB,SACtB,MAAM7iB,OAASrN,KAAKqN,OACpB,MAAMG,MAAQ0iB,SAASl/B,OACvB,OAAOwc,OAASH,OAAO6iB,SAAS1iB,MAAQ,GAAGjE,IACnD,CACC,WAAAxK,CAAYuP,MAAOrG,UACZ,MAAM/D,QAAUlE,KAAKkE,QACf,MAAAxC,MAAQ4M,MAAMrG,UACpB,MAAMoF,OAASrN,KAAKqN,OACd,MAAA6iB,SAAWD,eAAejwB,KAAM,CAClCiI,kBACAqB,MAAO5H,MACP6H,IAAK7H,QAEL,IAACwuB,SAASl/B,OAAQ,CAClB,MACZ,CACQ,MAAMoW,OAAS,GACT,MAAA6wD,aAAeZ,wBAAwBnzD,SAC7C,IAAIrS,EAAGwR,KACH,IAAAxR,EAAI,EAAGwR,KAAO6sB,SAASl/B,OAAQa,EAAIwR,OAAQxR,EAAE,CAC7C,MAAMyX,MAAEA,MAAAC,IAAQA,KAAS2mB,SAASr+B,GAC5B,MAAAe,GAAKya,OAAO/D,OACZ,MAAAzW,GAAKwa,OAAO9D,KAClB,GAAI3W,KAAOC,GAAI,CACXuU,OAAOlC,KAAKtS,IACZ,QAChB,CACY,MAAMsM,EAAIhQ,KAAK0X,KAAKlF,MAAQ9O,GAAGqV,YAAcpV,GAAGoV,UAAYrV,GAAGqV,YAC/D,MAAMiwD,aAAeD,aAAarlE,GAAIC,GAAIqM,EAAGgF,QAAQgyD,SACxCgC,aAAAjwD,UAAYqG,MAAMrG,UAC/Bb,OAAOlC,KAAKgzD,aACxB,CACQ,OAAO9wD,OAAOpW,SAAW,EAAIoW,OAAO,GAAKA,MACjD,CACC,WAAAqvD,CAAY19C,IAAKuW,QAAS+hB,QACb,MAAAsmB,cAAgBR,kBAAkBn3D,MACxC,OAAO23D,cAAc5+C,IAAK/Y,KAAMsvB,QAAS+hB,OACjD,CACC,IAAAkmB,CAAKx+C,IAAKzP,MAAOkE,OACV,MAAM0iB,SAAWlwB,KAAKkwB,SAChB,MAAAynC,cAAgBR,kBAAkBn3D,MACxC,IAAI+R,KAAO/R,KAAK0wB,MAChBpnB,MAAQA,OAAS,EACTkE,MAAAA,OAASxN,KAAKqN,OAAOrc,OAASsY,MACtC,IAAA,MAAWgmB,WAAWY,SAAS,CACnBne,MAAA4lD,cAAc5+C,IAAK/Y,KAAMsvB,QAAS,CACtChmB,YACAC,IAAKD,MAAQkE,MAAQ,GAErC,CACQ,QAASuE,IACjB,CACC,IAAA2hB,CAAK3a,IAAKmZ,UAAW5oB,MAAOkE,OACf,MAAAtJ,QAAUlE,KAAKkE,SAAW,CAAE,EAC5B,MAAAmJ,OAASrN,KAAKqN,QAAU,GAC1B,GAAAA,OAAOrc,QAAUkT,QAAQ2Z,YAAa,CACtC9E,IAAIwC,OACCmY,KAAA3a,IAAK/Y,KAAMsJ,MAAOkE,OACvBuL,IAAI4C,SAChB,CACQ,GAAI3b,KAAK2rC,SAAU,CACf3rC,KAAKg4D,eAAiB,MACtBh4D,KAAKw3D,WAAQ,CACzB,CACA,EAlIIt1B,cADE21B,YACK,KAAK,QACf31B,cAFK21B,YAEE,WAAW,CACXjmC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBlU,YAAa,EACbkL,gBAAiB,KACjBM,uBAAwB,UACxBzL,KAAM,MACN/P,SAAU,MACVqoD,QAAS,MACT3sC,QAAS,IAEhB2Y,cAfK21B,YAeE,gBAAgB,CAChB7/C,gBAAiB,kBACjBC,YAAa,gBAEjBiqB,cAnBE21B,YAmBK,cAAc,CACjB1lD,YAAa,KACbD,WAAaE,MAAOA,OAAS,cAAgBA,OAAS,SAiH9D,SAAS+lD,UAAU5tC,GAAIM,IAAK9c,KAAMuhC,kBAC9B,MAAMprC,QAAUqmB,GAAGrmB,QACnB,MAAQ6J,CAACA,MAAOrM,OAAW6oB,GAAGolB,SAAS,CACnC5hC,MACDuhC,kBACH,OAAOpgD,KAAK0X,IAAIikB,IAAMnpB,OAASwC,QAAQ8Y,OAAS9Y,QAAQk0D,SAC5D,CACA,MAAMC,qBAAqB/f,QAsBvB,WAAAx4C,CAAYk1B,KACDoQ,QArBXlD,cAAAliC,KAAA,UACAkiC,cAAAliC,KAAA,QACAkiC,cAAAliC,KAAA,QAoBIA,KAAKkE,aAAU,EACflE,KAAK2mB,YAAS,EACd3mB,KAAK+mB,UAAO,EACZ/mB,KAAKuwB,UAAO,EACZ,GAAIyE,IAAK,CACEl3B,OAAA0B,OAAOQ,KAAMg1B,IAChC,CACA,CACI,OAAAya,CAAQ6oB,OAAQC,OAAQjpB,kBACpB,MAAMprC,QAAUlE,KAAKkE,QACrB,MAAMjR,EAAEA,EAAA6R,EAAIA,GAAO9E,KAAK2vC,SAAS,CAC7B,IACA,KACDL,kBACH,OAAOpgD,KAAK2P,IAAIy5D,OAASrlE,EAAG,GAAK/D,KAAK2P,IAAI05D,OAASzzD,EAAG,GAAK5V,KAAK2P,IAAIqF,QAAQk0D,UAAYl0D,QAAQ8Y,OAAQ,EAChH,CACI,QAAAw7C,CAASF,OAAQhpB,kBACb,OAAO6oB,UAAUn4D,KAAMs4D,OAAQ,IAAKhpB,iBAC5C,CACI,QAAAmpB,CAASF,OAAQjpB,kBACb,OAAO6oB,UAAUn4D,KAAMu4D,OAAQ,IAAKjpB,iBAC5C,CACI,cAAAS,CAAeT,kBACX,MAAMr8C,EAAEA,EAAA6R,EAAIA,GAAO9E,KAAK2vC,SAAS,CAC7B,IACA,KACDL,kBACI,MAAA,CACHr8C,IACA6R,IAEZ,CACI,IAAAa,CAAKzB,SACSA,QAAAA,SAAWlE,KAAKkE,SAAW,CAAE,EACnC,IAAA8Y,OAAS9Y,QAAQ8Y,QAAU,EAC/BA,OAAS9tB,KAAKC,IAAI6tB,OAAQA,QAAU9Y,QAAQw0D,aAAe,GACrD,MAAA76C,YAAcb,QAAU9Y,QAAQ2Z,aAAe,EACrD,OAAQb,OAASa,aAAe,CACxC,CACI,IAAA6V,CAAK3a,IAAKiF,MACN,MAAM9Z,QAAUlE,KAAKkE,QACrB,GAAIlE,KAAK+mB,MAAQ7iB,QAAQ8Y,OAAS,KAAQe,eAAe/d,KAAMge,KAAMhe,KAAK2F,KAAKzB,SAAW,GAAI,CAC1F,MACZ,CACQ6U,IAAI+G,YAAc5b,QAAQ+T,YAC1Bc,IAAIrD,UAAYxR,QAAQ2Z,YACxB9E,IAAIkG,UAAY/a,QAAQ8T,gBACxBuE,UAAUxD,IAAK7U,QAASlE,KAAK/M,EAAG+M,KAAK8E,EAC7C,CACI,QAAA6pC,GACU,MAAAzqC,QAAUlE,KAAKkE,SAAW,CAAE,EAE3B,OAAAA,QAAQ8Y,OAAS9Y,QAAQk0D,SACxC,EA5EIl2B,cADEm2B,aACK,KAAK,SAMVn2B,cAPAm2B,aAOO,WAAW,CAChBx6C,YAAa,EACbu6C,UAAW,EACXptB,iBAAkB,EAClB0tB,YAAa,EACb57C,WAAY,SACZE,OAAQ,EACRD,SAAU,IAIZmlB,cAlBAm2B,aAkBO,gBAAgB,CACrBrgD,gBAAiB,kBACjBC,YAAa,gBA4DrB,SAAS0gD,aAAaC,IAAKtpB,kBACjB,MAAAr8C,EAAEA,IAAI6R,EAAIwG,KAAAA,KAAA8K,MAAOA,aAAQkG,QAAas8C,IAAIjpB,SAAS,CACrD,IACA,IACA,OACA,QACA,UACDL,kBACC,IAAAviC,KAAMC,MAAOgG,IAAKC,OAAQ4lD,KAC9B,GAAID,IAAIr0B,WAAY,CAChBs0B,KAAOv8C,OAAS,EACTvP,KAAA7d,KAAKE,IAAI6D,EAAGqY,MACX0B,MAAA9d,KAAKC,IAAI8D,EAAGqY,MACpB0H,IAAMlO,EAAI+zD,KACV5lD,OAASnO,EAAI+zD,IACrB,KAAW,CACHA,KAAOziD,MAAQ,EACfrJ,KAAO9Z,EAAI4lE,KACX7rD,MAAQ/Z,EAAI4lE,KACN7lD,IAAA9jB,KAAKE,IAAI0V,EAAGwG,MACT2H,OAAA/jB,KAAKC,IAAI2V,EAAGwG,KAC7B,CACW,MAAA,CACHyB,UACAiG,QACAhG,YACAiG,cAER,CACA,SAAS6lD,YAAY/xC,MAAMrlB,MAAOtS,IAAKD,KACnC,OAAO43B,MAAO,EAAIld,YAAYnI,MAAOtS,IAAKD,IAC9C,CACA,SAAS4pE,iBAAiBH,IAAKI,KAAMC,MAC3B,MAAAv3D,MAAQk3D,IAAI10D,QAAQ2Z,YAC1B,MAAMkJ,MAAO6xC,IAAIl0B,cACX,MAAA7/B,EAAI8c,OAAOjgB,OACV,MAAA,CACHxC,EAAG45D,YAAY/xC,MAAK/T,IAAKnO,EAAEmO,IAAK,EAAGimD,MACnCtoE,EAAGmoE,YAAY/xC,MAAK/Z,MAAOnI,EAAEmI,MAAO,EAAGgsD,MACvC/oE,EAAG6oE,YAAY/xC,MAAK9T,OAAQpO,EAAEoO,OAAQ,EAAGgmD,MACzCjqE,EAAG8pE,YAAY/xC,MAAKha,KAAMlI,EAAEkI,KAAM,EAAGisD,MAE7C,CACA,SAASE,kBAAkBN,IAAKI,KAAMC,MAClC,MAAMt0B,mBAAEA,oBAAwBi0B,IAAIjpB,SAAS,CACzC,uBAEE,MAAAjuC,MAAQk3D,IAAI10D,QAAQwuD,aACpB,MAAA7tD,EAAI+c,cAAclgB,OACxB,MAAMy3D,KAAOjqE,KAAKE,IAAI4pE,KAAMC,MAC5B,MAAMlyC,MAAO6xC,IAAIl0B,cACX,MAAA00B,aAAez0B,oBAAsB5iC,SAASL,OAC7C,MAAA,CACHkf,QAASk4C,aAAaM,cAAgBryC,MAAK/T,KAAO+T,MAAKha,KAAMlI,EAAE+b,QAAS,EAAGu4C,MAC3Ep4C,SAAU+3C,aAAaM,cAAgBryC,MAAK/T,KAAO+T,MAAK/Z,MAAOnI,EAAEkc,SAAU,EAAGo4C,MAC9Et4C,WAAYi4C,aAAaM,cAAgBryC,MAAK9T,QAAU8T,MAAKha,KAAMlI,EAAEgc,WAAY,EAAGs4C,MACpFr4C,YAAag4C,aAAaM,cAAgBryC,MAAK9T,QAAU8T,MAAK/Z,MAAOnI,EAAEic,YAAa,EAAGq4C,MAE/F,CACA,SAASE,cAAcT,KACb,MAAAtjD,OAASqjD,aAAaC,KACtB,MAAAxiD,MAAQd,OAAOtI,MAAQsI,OAAOvI,KAC9B,MAAAuP,OAAShH,OAAOrC,OAASqC,OAAOtC,IACtC,MAAMiD,OAAS8iD,iBAAiBH,IAAKxiD,MAAQ,EAAGkG,OAAS,GACzD,MAAMU,OAASk8C,kBAAkBN,IAAKxiD,MAAQ,EAAGkG,OAAS,GACnD,MAAA,CACHg9C,MAAO,CACHrmE,EAAGqiB,OAAOvI,KACVjI,EAAGwQ,OAAOtC,IACVrhB,EAAGykB,MACHnnB,EAAGqtB,OACHU,eAEJi4C,MAAO,CACHhiE,EAAGqiB,OAAOvI,KAAOkJ,OAAOjnB,EACxB8V,EAAGwQ,OAAOtC,IAAMiD,OAAO/W,EACvBvN,EAAGykB,MAAQH,OAAOjnB,EAAIinB,OAAOtlB,EAC7B1B,EAAGqtB,OAASrG,OAAO/W,EAAI+W,OAAOhmB,EAC9B+sB,OAAQ,CACJ4D,QAAS1xB,KAAKC,IAAI,EAAG6tB,OAAO4D,QAAU1xB,KAAKC,IAAI8mB,OAAO/W,EAAG+W,OAAOjnB,IAChE+xB,SAAU7xB,KAAKC,IAAI,EAAG6tB,OAAO+D,SAAW7xB,KAAKC,IAAI8mB,OAAO/W,EAAG+W,OAAOtlB,IAClEkwB,WAAY3xB,KAAKC,IAAI,EAAG6tB,OAAO6D,WAAa3xB,KAAKC,IAAI8mB,OAAOhmB,EAAGgmB,OAAOjnB,IACtE8xB,YAAa5xB,KAAKC,IAAI,EAAG6tB,OAAO8D,YAAc5xB,KAAKC,IAAI8mB,OAAOhmB,EAAGgmB,OAAOtlB,MAIxF,CACA,SAAS8+C,QAAQmpB,IAAK3lE,EAAG6R,EAAGwqC,kBACxB,MAAMiqB,MAAQtmE,IAAM,KACpB,MAAMumE,MAAQ10D,IAAM,KACpB,MAAM20D,SAAWF,OAASC,MAC1B,MAAMlkD,OAASsjD,MAAQa,UAAYd,aAAaC,IAAKtpB,kBACrD,OAAOh6B,SAAWikD,OAASxvD,WAAW9W,EAAGqiB,OAAOvI,KAAMuI,OAAOtI,UAAYwsD,OAASzvD,WAAWjF,EAAGwQ,OAAOtC,IAAKsC,OAAOrC,QACvH,CACA,SAASymD,UAAU18C,QACf,OAAOA,OAAO4D,SAAW5D,OAAO+D,UAAY/D,OAAO6D,YAAc7D,OAAO8D,WAC5E,CACC,SAAS64C,kBAAkB5gD,IAAK4E,MACzB5E,IAAA4E,KAAKA,KAAK1qB,EAAG0qB,KAAK7Y,EAAG6Y,KAAKhsB,EAAGgsB,KAAK1uB,EAC1C,CACA,SAAS2qE,YAAYj8C,KAAMk8C,OAAQC,QAAU,CAAA,GACzC,MAAM7mE,EAAI0qB,KAAK1qB,IAAM6mE,QAAQ7mE,GAAK4mE,OAAS,EAC3C,MAAM/0D,EAAI6Y,KAAK7Y,IAAMg1D,QAAQh1D,GAAK+0D,OAAS,EACrC,MAAAloE,GAAKgsB,KAAK1qB,EAAI0qB,KAAKhsB,IAAMmoE,QAAQ7mE,EAAI6mE,QAAQnoE,EAAIkoE,OAAS,GAAK5mE,EAC/D,MAAAhE,GAAK0uB,KAAK7Y,EAAI6Y,KAAK1uB,IAAM6qE,QAAQh1D,EAAIg1D,QAAQ7qE,EAAI4qE,OAAS,GAAK/0D,EAC9D,MAAA,CACH7R,EAAG0qB,KAAK1qB,EAAIA,EACZ6R,EAAG6Y,KAAK7Y,EAAIA,EACZnT,EAAGgsB,KAAKhsB,EAAIA,EACZ1C,EAAG0uB,KAAK1uB,EAAIA,EACZ+tB,OAAQW,KAAKX,OAErB,CACA,MAAM+8C,mBAAmBzhB,QAarB,WAAAx4C,CAAYk1B,KACDoQ,QACPplC,KAAKkE,aAAU,EACflE,KAAKukC,gBAAa,EAClBvkC,KAAKsL,UAAO,EACZtL,KAAKoW,WAAQ,EACbpW,KAAKsc,YAAS,EACdtc,KAAKklC,mBAAgB,EACrB,GAAIlQ,IAAK,CACEl3B,OAAA0B,OAAOQ,KAAMg1B,IAChC,CACA,CACI,IAAAtB,CAAK3a,KACD,MAAMmsB,cAAEA,cAAgBhhC,SAAS+T,YAAEA,YAAcD,gBAAAA,kBAAwBhY,KACzE,MAAMi1D,MAAEA,MAAAqE,MAAQA,OAAWD,cAAcr5D,MACzC,MAAMg6D,YAAcN,UAAUJ,MAAMt8C,QAAU2D,mBAAqBg5C,kBACnE5gD,IAAIwC,OACJ,GAAI+9C,MAAM3nE,IAAMsjE,MAAMtjE,GAAK2nE,MAAMrqE,IAAMgmE,MAAMhmE,EAAG,CAC5C8pB,IAAIqE,YACJ48C,YAAYjhD,IAAK6gD,YAAYN,MAAOp0B,cAAe+vB,QACnDl8C,IAAIxD,OACJykD,YAAYjhD,IAAK6gD,YAAY3E,OAAQ/vB,cAAeo0B,QACpDvgD,IAAIkG,UAAYhH,YAChBc,IAAI6E,KAAK,UACrB,CACQ7E,IAAIqE,YACJ48C,YAAYjhD,IAAK6gD,YAAY3E,MAAO/vB,gBACpCnsB,IAAIkG,UAAYjH,gBAChBe,IAAI6E,OACJ7E,IAAI4C,SACZ,CACI,OAAA8zB,CAAQ6oB,OAAQC,OAAQjpB,kBACpB,OAAOG,QAAQzvC,KAAMs4D,OAAQC,OAAQjpB,iBAC7C,CACI,QAAAkpB,CAASF,OAAQhpB,kBACb,OAAOG,QAAQzvC,KAAMs4D,OAAQ,KAAMhpB,iBAC3C,CACI,QAAAmpB,CAASF,OAAQjpB,kBACb,OAAOG,QAAQzvC,KAAM,KAAMu4D,OAAQjpB,iBAC3C,CACI,cAAAS,CAAeT,kBACX,MAAMr8C,EAAEA,EAAI6R,EAAAA,EAAAwG,KAAIA,gBAAOi5B,YAAiBvkC,KAAK2vC,SAAS,CAClD,IACA,IACA,OACA,cACDL,kBACI,MAAA,CACHr8C,EAAGsxC,YAActxC,EAAIqY,MAAQ,EAAIrY,EACjC6R,EAAGy/B,WAAaz/B,GAAKA,EAAIwG,MAAQ,EAE7C,CACI,QAAAqjC,CAAS5gC,MACL,OAAOA,OAAS,IAAM/N,KAAKoW,MAAQ,EAAIpW,KAAKsc,OAAS,CAC7D,EAlEI4lB,cADE63B,WACK,KAAK,OACf73B,cAFK63B,WAEE,WAAW,CACXr1B,cAAe,QACf7mB,YAAa,EACb60C,aAAc,EACdxtB,cAAe,OACfpoB,gBAAY,IAEnBolB,cATK63B,WASE,gBAAgB,CAChB/hD,gBAAiB,kBACjBC,YAAa,gBA2DrB,IAAIM,gBAA+BunB,OAAO,CAC1C8N,UAAW,KACXwnB,sBACA2E,sBACAlC,wBACAQ,4BAGA,MAAM4B,cAAgB,CAClB,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,sBAGJ,MAAMC,kBAAoCD,cAAc7nE,IAAKkO,QAAQA,OAAMnC,QAAQ,OAAQ,SAASA,QAAQ,IAAK,WACjH,SAASg8D,eAAetoE,GACb,OAAAooE,cAAcpoE,EAAIooE,cAAcjpE,OAC3C,CACA,SAASopE,mBAAmBvoE,GACjB,OAAAqoE,kBAAkBroE,EAAIqoE,kBAAkBlpE,OACnD,CACA,SAASqpE,uBAAuBvsD,QAASjc,GAC7Bic,QAAAmK,YAAckiD,eAAetoE,GAC7Bic,QAAAkK,gBAAkBoiD,mBAAmBvoE,GAC7C,QAASA,CACb,CACA,SAASyoE,wBAAwBxsD,QAASjc,GACtCic,QAAQkK,gBAAkBlK,QAAQ+M,KAAKzoB,IAAI,IAAI+nE,eAAetoE,MACvD,OAAAA,CACX,CACA,SAAS0oE,yBAAyBzsD,QAASjc,GACvCic,QAAQkK,gBAAkBlK,QAAQ+M,KAAKzoB,IAAI,IAAIgoE,mBAAmBvoE,MAC3D,OAAAA,CACX,CACA,SAAS2oE,aAAapmD,OAClB,IAAIviB,EAAI,EACD,MAAA,CAACic,QAAStK,gBACb,MAAM21B,WAAa/kB,MAAM0oB,eAAet5B,cAAc21B,WACtD,GAAIA,sBAAsB+P,mBAAoB,CACtCr3C,EAAAyoE,wBAAwBxsD,QAASjc,EACjD,MAAA,GAAmBsnC,sBAAsBgT,oBAAqB,CAC9Ct6C,EAAA0oE,yBAAyBzsD,QAASjc,EACzC,SAAUsnC,WAAY,CACftnC,EAAAwoE,uBAAuBvsD,QAASjc,EAChD,EAEA,CACA,SAAS4oE,0BAA0BjjD,cAC3B,IAAAhmB,EACJ,IAAIA,KAAKgmB,aAAY,CACjB,GAAIA,aAAYhmB,GAAGymB,aAAeT,aAAYhmB,GAAGwmB,gBAAiB,CACvD,OAAA,IACnB,CACA,CACW,OAAA,KACX,CACA,SAAS0iD,yBAAyBzT,YACvB,OAAAA,aAAeA,WAAWhvC,aAAegvC,WAAWjvC,gBAC/D,CACA,SAAS2iD,mCACL,OAAO/oD,SAASqG,cAAgB,mBAAqBrG,SAASoG,kBAAoB,iBACtF,CACA,IAAI4iD,cAAgB,CAChBp5D,GAAI,SACJoQ,SAAU,CACNonC,QAAS,KACT6hB,cAAe,OAEnB,YAAA3mB,CAAc9/B,MAAO0mD,MAAO52D,SACpB,IAACA,QAAQ80C,QAAS,CAClB,MACZ,CACc,MAAEn+B,MAAM3C,SAAEA,UAAchU,QAAS62D,cAAkB3mD,MAAM8hB,OACzD,MAAE3d,SAAAA,WAAcwiD,aAChB,MAAAC,wBAA0BP,0BAA0BviD,WAAawiD,yBAAyBK,eAAiBxiD,WAAYkiD,0BAA0BliD,YAAaoiD,mCAChK,IAACz2D,QAAQ22D,eAAiBG,wBAAyB,CACnD,MACZ,CACc,MAAAC,UAAYT,aAAapmD,OAC/B8D,SAAS9M,QAAQ6vD,UACzB,GAGA,SAASC,eAAergD,KAAMvR,MAAOkE,MAAOkkC,eAAgBxtC,SACrD,MAAAi3D,QAAUj3D,QAAQi3D,SAAWzpB,eAChC,GAAIypB,SAAW3tD,MAAO,CAClB,OAAOqN,KAAK/Y,MAAMwH,MAAOA,MAAQkE,MACzC,CACI,MAAM4tD,UAAY,GACZ,MAAAC,aAAe7tD,MAAQ,IAAM2tD,QAAU,GAC7C,IAAIG,aAAe,EACb,MAAAC,SAAWjyD,MAAQkE,MAAQ,EACjC,IAAIxd,EAAIsZ,MACJ,IAAAzX,EAAG2pE,aAAcC,QAASz9C,KAAM09C,MAC1BN,UAAAE,gBAAkBzgD,KAAK7qB,GACjC,IAAI6B,EAAI,EAAGA,EAAIspE,QAAU,EAAGtpE,IAAI,CAC5B,IAAI+kE,KAAO,EACX,IAAI+E,KAAO,EACP,IAAA39D,EACJ,MAAM49D,cAAgB1sE,KAAK8X,OAAOnV,EAAI,GAAKwpE,aAAe,EAAI/xD,MACxD,MAAAuyD,YAAc3sE,KAAKE,IAAIF,KAAK8X,OAAOnV,EAAI,GAAKwpE,aAAe,EAAG7tD,OAASlE,MAC7E,MAAMwyD,eAAiBD,YAAcD,cACrC,IAAI59D,EAAI49D,cAAe59D,EAAI69D,YAAa79D,IAAI,CAChC44D,MAAA/7C,KAAK7c,GAAG/K,EACR0oE,MAAA9gD,KAAK7c,GAAG8G,CAC5B,CACgB8xD,MAAAkF,eACAH,MAAAG,eACR,MAAMC,UAAY7sE,KAAK8X,MAAMnV,EAAIwpE,aAAe,EAAI/xD,MAC9C,MAAA0yD,QAAU9sE,KAAKE,IAAIF,KAAK8X,OAAOnV,EAAI,GAAKwpE,aAAe,EAAG7tD,OAASlE,MACzE,MAAQrW,EAAGgpE,QAAUn3D,EAAGo3D,SAAarhD,KAAK7qB,GAC1CyrE,QAAUz9C,MAAO,EACjB,IAAIhgB,EAAI+9D,UAAW/9D,EAAIg+D,QAASh+D,IAAI,CAChCggB,KAAO,GAAM9uB,KAAK0X,KAAKq1D,QAAUrF,OAAS/7C,KAAK7c,GAAG8G,EAAIo3D,UAAYD,QAAUphD,KAAK7c,GAAG/K,IAAM0oE,KAAOO,UACjG,GAAIl+C,KAAOy9C,QAAS,CACNA,QAAAz9C,KACVw9C,aAAe3gD,KAAK7c,GACZ09D,MAAA19D,CACxB,CACA,CACQo9D,UAAUE,gBAAkBE,aACxBxrE,EAAA0rE,KACZ,CACcN,UAAAE,gBAAkBzgD,KAAK0gD,UAC1B,OAAAH,SACX,CACA,SAASe,iBAAiBthD,KAAMvR,MAAOkE,MAAOkkC,gBAC1C,IAAIklB,KAAO,EACX,IAAIC,OAAS,EACT,IAAAhlE,EAAGyc,MAAOrb,EAAG6R,EAAGgyD,MAAOsF,SAAUC,SAAUC,WAAYrzB,KAAMF,KACjE,MAAMqyB,UAAY,GACZ,MAAAG,SAAWjyD,MAAQkE,MAAQ,EAC3B,MAAA+uD,KAAO1hD,KAAKvR,OAAOrW,EACnB,MAAAupE,KAAO3hD,KAAK0gD,UAAUtoE,EAC5B,MAAMwpE,GAAKD,KAAOD,KAClB,IAAI1qE,EAAIyX,MAAOzX,EAAIyX,MAAQkE,QAAS3b,EAAE,CAClCyc,MAAQuM,KAAKhpB,GACRoB,GAAAqb,MAAMrb,EAAIspE,MAAQE,GAAK/qB,eAC5B5sC,EAAIwJ,MAAMxJ,EACV,MAAMoyD,OAASjkE,EAAI,EACnB,GAAIikE,SAAWJ,MAAO,CAClB,GAAIhyD,EAAImkC,KAAM,CACHA,KAAAnkC,EACIs3D,SAAAvqE,CAC3B,MAAA,GAAuBiT,EAAIikC,KAAM,CACVA,KAAAjkC,EACIu3D,SAAAxqE,CAC3B,CACY+kE,MAAQC,OAASD,KAAOtoD,MAAMrb,KAAO4jE,MACjD,KAAe,CACH,MAAM6F,UAAY7qE,EAAI,EACtB,IAAK4P,cAAc26D,YAAc36D,cAAc46D,UAAW,CACtD,MAAMM,mBAAqBztE,KAAKE,IAAIgtE,SAAUC,UAC9C,MAAMO,mBAAqB1tE,KAAKC,IAAIitE,SAAUC,UAC1C,GAAAM,qBAAuBL,YAAcK,qBAAuBD,UAAW,CACvEtB,UAAUl2D,KAAK,IACR2V,KAAK8hD,oBACR1pE,EAAG2jE,MAE3B,CACoB,GAAAgG,qBAAuBN,YAAcM,qBAAuBF,UAAW,CACvEtB,UAAUl2D,KAAK,IACR2V,KAAK+hD,oBACR3pE,EAAG2jE,MAE3B,CACA,CACgB,GAAA/kE,EAAI,GAAK6qE,YAAcJ,WAAY,CACzBlB,UAAAl2D,KAAK2V,KAAK6hD,WACpC,CACYtB,UAAUl2D,KAAKoJ,OACPwoD,MAAAI,OACCL,OAAA,EACT5tB,KAAOF,KAAOjkC,EACds3D,SAAWC,SAAWC,WAAazqE,CAC/C,CACA,CACW,OAAAupE,SACX,CACA,SAASyB,sBAAsB/uD,SAC3B,GAAIA,QAAQ49B,WAAY,CACpB,MAAM7wB,KAAO/M,QAAQktB,aACdltB,QAAQ49B,kBACR59B,QAAQktB,MACRl9B,OAAAmN,eAAe6C,QAAS,OAAQ,CACnC5C,aAAc,KACdC,WAAY,KACZqP,SAAU,KACV9Y,MAAOmZ,MAEnB,CACA,CACA,SAASiiD,mBAAmB1oD,OACxBA,MAAMyG,KAAK3C,SAAS9M,QAAS0C,UACzB+uD,sBAAsB/uD,UAE9B,CACA,SAASivD,0CAA0C3vD,KAAMC,QACrD,MAAME,WAAaF,OAAOrc,OAC1B,IAAIsY,MAAQ,EACR,IAAAkE,MACE,MAAAE,OAAEA,QAAYN,KACpB,MAAMhe,IAAEA,IAAMD,IAAAA,IAAA6e,WAAMA,sBAAaC,YAAgBP,OAAOQ,gBACxD,GAAIF,WAAY,CACJ1E,MAAAO,YAAYS,aAAa+C,OAAQK,OAAOK,KAAM3e,KAAKgb,GAAI,EAAGmD,WAAa,EACvF,CACI,GAAIU,WAAY,CACJT,MAAA3D,YAAYS,aAAa+C,OAAQK,OAAOK,KAAM5e,KAAKgb,GAAK,EAAGb,MAAOiE,YAAcjE,KAChG,KAAW,CACHkE,MAAQD,WAAajE,KAC7B,CACW,MAAA,CACHA,YACAkE,YAER,CACA,IAAIwvD,kBAAoB,CACpBx7D,GAAI,aACJoQ,SAAU,CACNqrD,UAAW,UACXjkB,QAAS,OAEbkkB,qBAAsB,CAAC9oD,MAAO/lB,KAAM6V,WAC5B,IAACA,QAAQ80C,QAAS,CAClB8jB,mBAAmB1oD,OACnB,MACZ,CACQ,MAAMs9B,eAAiBt9B,MAAMgC,MAC7BhC,MAAMyG,KAAK3C,SAAS9M,QAAQ,CAAC0C,QAAStK,gBAC5B,MAAAw3B,MAAEA,MAAQ9hB,UAAAA,WAAepL,QACzB,MAAAV,KAAOgH,MAAM0oB,eAAet5B,cAC5B,MAAAqX,KAAOmgB,OAASltB,QAAQ+M,KAC9B,GAAIoH,QAAQ,CACR/I,UACA9E,MAAMlQ,QAAQgV,cACX,IAAK,CACR,MAChB,CACgB,IAAC9L,KAAK+rB,WAAWmC,mBAAoB,CACrC,MAChB,CACY,MAAM6hC,MAAQ/oD,MAAM0F,OAAO1M,KAAK+uB,SAChC,GAAIghC,MAAMp9D,OAAS,UAAYo9D,MAAMp9D,OAAS,OAAQ,CAClD,MAChB,CACgB,GAAAqU,MAAMlQ,QAAQwV,QAAS,CACvB,MAChB,CACY,IAAIpQ,MAAEA,MAAQkE,MAAAA,OAAWuvD,0CAA0C3vD,KAAMyN,MACnE,MAAAuiD,UAAYl5D,QAAQk5D,WAAa,EAAI1rB,eAC3C,GAAIlkC,OAAS4vD,UAAW,CACpBP,sBAAsB/uD,SACtB,MAChB,CACgB,GAAArM,cAAcu5B,OAAQ,CACtBltB,QAAQktB,MAAQngB,YACT/M,QAAQ+M,KACR/c,OAAAmN,eAAe6C,QAAS,OAAQ,CACnC5C,aAAc,KACdC,WAAY,KACZuI,IAAK,WACD,OAAO1T,KAAK0rC,UACf,EACD5/B,IAAK,SAAS3b,GACV6P,KAAKg7B,MAAQ7qC,CACrC,GAEA,CACgB,IAAAirE,UACJ,OAAOl3D,QAAQ+4D,WACX,IAAK,OACD7B,UAAYF,eAAergD,KAAMvR,MAAOkE,MAAOkkC,eAAgBxtC,SAC/D,MACJ,IAAK,UACDk3D,UAAYe,iBAAiBthD,KAAMvR,MAAOkE,MAAOkkC,gBACjD,MACJ,QACI,MAAM,IAAInjD,MAAM,qCAAqC2V,QAAQ+4D,cAErEnvD,QAAQ49B,WAAa0vB,aAG7B,OAAAzK,CAASv8C,OACL0oD,mBAAmB1oD,MAC3B,GAGA,SAAS2jD,UAAU14C,KAAM1b,OAAQsE,UAC7B,MAAMioB,SAAW7Q,KAAK6Q,SACtB,MAAM7iB,OAASgS,KAAKhS,OACpB,MAAMgwD,QAAU15D,OAAO0J,OACvB,MAAMrI,MAAQ,GACd,IAAA,MAAWsqB,WAAWY,SAAS,CACvB,IAAA5mB,MAAEA,MAAQC,IAAAA,KAAS+lB,QACjB/lB,IAAA+zD,gBAAgBh0D,MAAOC,IAAK8D,QAC5B,MAAAiI,OAASioD,WAAWt1D,SAAUoF,OAAO/D,OAAQ+D,OAAO9D,KAAM+lB,QAAQvd,MACpE,IAACpO,OAAOusB,SAAU,CAClBlrB,MAAME,KAAK,CACPxB,OAAQ4rB,QACR3rB,OAAQ2R,OACRhM,MAAO+D,OAAO/D,OACdC,IAAK8D,OAAO9D,OAEhB,QACZ,CACc,MAAAi0D,eAAiBvtC,eAAetsB,OAAQ2R,QAC9C,IAAA,MAAWmoD,OAAOD,eAAe,CAC7B,MAAME,UAAYH,WAAWt1D,SAAUo1D,QAAQI,IAAIn0D,OAAQ+zD,QAAQI,IAAIl0D,KAAMk0D,IAAI1rD,MACjF,MAAM4rD,YAAcluC,cAAcH,QAASjiB,OAAQqwD,WACnD,IAAA,MAAWE,cAAcD,YAAY,CACjC34D,MAAME,KAAK,CACPxB,OAAQk6D,WACRj6D,OAAQ85D,IACRn0D,MAAO,CACHrB,CAACA,UAAW41D,SAASvoD,OAAQooD,UAAW,QAASxuE,KAAKC,MAE1Doa,IAAK,CACDtB,CAACA,UAAW41D,SAASvoD,OAAQooD,UAAW,MAAOxuE,KAAKE,OAG5E,CACA,CACA,CACW,OAAA4V,KACX,CACA,SAASu4D,WAAWt1D,SAAUkxC,MAAO5uC,KAAMwH,MACvC,GAAIA,KAAM,CACN,MACR,CACQ,IAAAzI,MAAQ6vC,MAAMlxC,UACd,IAAAsB,IAAMgB,KAAKtC,UACf,GAAIA,WAAa,QAAS,CACtBqB,MAAQF,gBAAgBE,OACxBC,IAAMH,gBAAgBG,IAC9B,CACW,MAAA,CACHtB,kBACAqB,YACAC,QAER,CACA,SAASu0D,oBAAoBC,SAAU1+C,MACnC,MAAMpsB,EAAEA,EAAG,KAAA6R,EAAOA,EAAG,MAAUi5D,UAAY,CAAE,EAC7C,MAAMC,WAAa3+C,KAAKhS,OACxB,MAAMA,OAAS,GACfgS,KAAK6Q,SAAS9kB,QAAQ,EAAG9B,YAAQC,YACvBA,IAAA+zD,gBAAgBh0D,MAAOC,IAAKy0D,YAC5B,MAAA7kB,MAAQ6kB,WAAW10D,OACnB,MAAAiB,KAAOyzD,WAAWz0D,KACxB,GAAIzE,IAAM,KAAM,CACZuI,OAAOnI,KAAK,CACRjS,EAAGkmD,MAAMlmD,EACT6R,MAEJuI,OAAOnI,KAAK,CACRjS,EAAGsX,KAAKtX,EACR6R,KAEhB,MAAA,GAAmB7R,IAAM,KAAM,CACnBoa,OAAOnI,KAAK,CACRjS,IACA6R,EAAGq0C,MAAMr0C,IAEbuI,OAAOnI,KAAK,CACRjS,IACA6R,EAAGyF,KAAKzF,GAExB,IAEW,OAAAuI,MACX,CACA,SAASiwD,gBAAgBh0D,MAAOC,IAAK8D,QAC3B,KAAA9D,IAAMD,MAAOC,MAAM,CACf,MAAA+E,MAAQjB,OAAO9D,KACjB,IAAC3B,MAAM0G,MAAMrb,KAAO2U,MAAM0G,MAAMxJ,GAAI,CACpC,KACZ,CACA,CACW,OAAAyE,GACX,CACA,SAASs0D,SAAS7tE,EAAGC,EAAGyxB,MAAM9e,IAC1B,GAAI5S,GAAKC,EAAG,CACR,OAAO2S,GAAG5S,EAAE0xB,OAAOzxB,EAAEyxB,OAC7B,CACI,OAAO1xB,EAAIA,EAAE0xB,OAAQzxB,EAAIA,EAAEyxB,OAAQ,CACvC,CAEA,SAASu8C,oBAAoBF,SAAU1+C,MACnC,IAAIhS,OAAS,GACb,IAAIqjB,MAAQ,MACR,GAAAv+B,QAAQ4rE,UAAW,CACXrtC,MAAA,KACCrjB,OAAA0wD,QACjB,KAAW,CACM1wD,OAAAywD,oBAAoBC,SAAU1+C,KAC/C,CACW,OAAAhS,OAAOrc,OAAS,IAAI6mE,YAAY,CACnCxqD,cACAnJ,QAAS,CACLqlB,QAAS,GAEbmH,YACAG,UAAWH,QACV,IACT,CACA,SAASwtC,iBAAiBx6D,QACf,OAAAA,QAAUA,OAAOka,OAAS,KACrC,CAEA,SAASugD,eAAe75D,QAASb,OAAO26D,WAC9B,MAAA16D,OAASY,QAAQb,QACvB,IAAIma,MAAOla,OAAOka,KAClB,MAAMygD,QAAU,CACZ56D,QAEA,IAAAE,OACJ,IAAKy6D,UAAW,CACLxgD,OAAAA,KACf,CACI,MAAMA,QAAS,OAASygD,QAAQr6D,QAAQ4Z,UAAa,EAAA,CAC7C,IAAC5b,eAAe4b,OAAO,CAChBA,OAAAA,KACnB,CACQja,OAASW,QAAQsZ,OACjB,IAAKja,OAAQ,CACF,OAAA,KACnB,CACQ,GAAIA,OAAOgP,QAAS,CACTiL,OAAAA,KACnB,CACQygD,QAAQn5D,KAAK0Y,OACbA,MAAOja,OAAOia,IACtB,CACW,OAAA,KACX,CACC,SAAS0gD,YAAYj/C,KAAM5b,OAAO+J,OACxBoQ,MAAAA,MAAO2gD,gBAAgBl/C,MAC1B,GAAAtd,SAAS6b,OAAO,CAChB,OAAOhW,MAAMgW,MAAKlc,OAAS,MAAQkc,KAC3C,CACQ,IAAAja,OAASlB,WAAWmb,OACxB,GAAI5b,eAAe2B,SAAWzU,KAAK8X,MAAMrD,UAAYA,OAAQ,CACzD,OAAO66D,kBAAkB5gD,MAAK,GAAIna,OAAOE,OAAQ6J,MACzD,CACW,MAAA,CACH,SACA,QACA,MACA,QACA,SACFxJ,QAAQ4Z,QAAS,GAAKA,KAC5B,CACA,SAAS4gD,kBAAkBC,QAASh7D,OAAOE,OAAQ6J,OAC3C,GAAAixD,UAAY,KAAOA,UAAY,IAAK,CACpC96D,OAASF,OAAQE,MACzB,CACI,GAAIA,SAAWF,QAASE,OAAS,GAAKA,QAAU6J,MAAO,CAC5C,OAAA,KACf,CACW,OAAA7J,MACX,CACC,SAAS+6D,gBAAgB9gD,MAAM/D,OAC5B,IAAIiC,MAAQ,KACZ,GAAI8B,QAAS,QAAS,CAClB9B,MAAQjC,MAAM5G,MACtB,MAAA,GAAe2K,QAAS,MAAO,CACvB9B,MAAQjC,MAAM7G,GACtB,MAAA,GAAejR,SAAS6b,OAAO,CACf9B,MAAAjC,MAAM1L,iBAAiByP,MAAKlc,MAC5C,MAAA,GAAemY,MAAMyrB,aAAc,CAC3BxpB,MAAQjC,MAAMyrB,cACtB,CACW,OAAAxpB,KACX,CACC,SAAS6iD,gBAAgB/gD,MAAM/D,MAAO6pB,YAC/B,IAAAhiC,MACJ,GAAIkc,QAAS,QAAS,CACVlc,MAAAgiC,UAChB,MAAA,GAAe9lB,QAAS,MAAO,CACvBlc,MAAQmY,MAAM3V,QAAQjB,QAAU4W,MAAMzqB,IAAMyqB,MAAM1qB,GAC1D,MAAA,GAAe4S,SAAS6b,OAAO,CACvBlc,MAAQkc,MAAKlc,KACrB,KAAW,CACHA,MAAQmY,MAAMunC,cACtB,CACW,OAAA1/C,KACX,CACC,SAAS68D,gBAAgBl/C,MACtB,MAAMnb,QAAUmb,KAAKnb,QACrB,MAAM06D,WAAa16D,QAAQ0Z,KAC3B,IAAIA,MAAOvb,eAAeu8D,YAAcA,WAAWj7D,OAAQi7D,YAC3D,GAAIhhD,aAAoB,EAAA,CACpBA,QAAS1Z,QAAQ8T,eACzB,CACQ4F,GAAAA,QAAS,OAASA,QAAS,KAAM,CAC1B,OAAA,KACf,CACI,GAAIA,QAAS,KAAM,CACR,MAAA,QACf,CACWA,OAAAA,KACX,CAEA,SAASihD,gBAAgBn7D,QACrB,MAAMmW,MAAEA,MAAQpW,MAAAA,OAAAA,KAAQ4b,MAAU3b,OAClC,MAAM2J,OAAS,GACf,MAAM6iB,SAAW7Q,KAAK6Q,SACtB,MAAM4uC,aAAez/C,KAAKhS,OACpB,MAAA0xD,WAAaC,cAAcnlD,MAAOpW,QACxCs7D,WAAW75D,KAAK+4D,oBAAoB,CAChChrE,EAAG,KACH6R,EAAG+U,MAAM5G,QACVoM,OACH,IAAA,IAAQxtB,EAAI,EAAGA,EAAIq+B,SAASl/B,OAAQa,IAAI,CAC9B,MAAAy9B,QAAUY,SAASr+B,GACzB,IAAA,IAAQmM,EAAIsxB,QAAQhmB,MAAOtL,GAAKsxB,QAAQ/lB,IAAKvL,IAAI,CAC7CihE,eAAe5xD,OAAQyxD,aAAa9gE,GAAI+gE,WACpD,CACA,CACI,OAAO,IAAIlH,YAAY,CACnBxqD,cACAnJ,QAAS,CAAA,GAEjB,CACC,SAAS86D,cAAcnlD,MAAOpW,QAC3B,MAAMy7D,MAAQ,GACR,MAAAtiB,MAAQ/iC,MAAMof,wBAAwB,QAC5C,IAAA,IAAQpnC,EAAI,EAAGA,EAAI+qD,MAAM5rD,OAAQa,IAAI,CAC3B,MAAAub,KAAOwvC,MAAM/qD,GACf,GAAAub,KAAK3J,QAAUA,OAAO,CACtB,KACZ,CACY,IAAC2J,KAAKstB,OAAQ,CACRwkC,MAAAC,QAAQ/xD,KAAKU,QAC/B,CACA,CACW,OAAAoxD,KACX,CACC,SAASD,eAAe5xD,OAAQ+xD,YAAaL,YAC1C,MAAMM,UAAY,GAClB,IAAA,IAAQrhE,EAAI,EAAGA,EAAI+gE,WAAW/tE,OAAQgN,IAAI,CAChC,MAAAqhB,KAAO0/C,WAAW/gE,GAClB,MAAAm7C,MAAEA,WAAQ5uC,KAAO+D,MAAAA,OAAWgxD,UAAUjgD,KAAM+/C,YAAa,KAC3D,IAAC9wD,OAAS6qC,OAAS5uC,KAAM,CACzB,QACZ,CACQ,GAAI4uC,MAAO,CACPkmB,UAAUF,QAAQ7wD,MAC9B,KAAe,CACHjB,OAAOnI,KAAKoJ,OACZ,IAAK/D,KAAM,CACP,KAChB,CACA,CACA,CACW8C,OAAAnI,QAAQm6D,UACnB,CACC,SAASC,UAAUjgD,KAAM+/C,YAAan3D,UACnC,MAAMqG,MAAQ+Q,KAAKtgB,YAAYqgE,YAAan3D,UAC5C,IAAKqG,MAAO,CACR,MAAO,CAAE,CACjB,CACU,MAAAixD,WAAajxD,MAAMrG,UACzB,MAAMioB,SAAW7Q,KAAK6Q,SACtB,MAAM8tC,WAAa3+C,KAAKhS,OACxB,IAAI8rC,MAAQ,MACZ,IAAI5uC,KAAO,MACX,IAAA,IAAQ1Y,EAAI,EAAGA,EAAIq+B,SAASl/B,OAAQa,IAAI,CAC9B,MAAAy9B,QAAUY,SAASr+B,GACzB,MAAM2tE,WAAaxB,WAAW1uC,QAAQhmB,OAAOrB,UAC7C,MAAMw3D,UAAYzB,WAAW1uC,QAAQ/lB,KAAKtB,UAC1C,GAAI8B,WAAWw1D,WAAYC,WAAYC,WAAY,CAC/CtmB,MAAQomB,aAAeC,WACvBj1D,KAAOg1D,aAAeE,UACtB,KACZ,CACA,CACW,MAAA,CACHtmB,YACA5uC,UACA+D,YAER,CAEA,MAAMoxD,UACF,WAAA5/D,CAAYif,MACR/e,KAAK/M,EAAI8rB,KAAK9rB,EACd+M,KAAK8E,EAAIia,KAAKja,EACd9E,KAAKgd,OAAS+B,KAAK/B,MAC3B,CACI,WAAAy5C,CAAY19C,IAAKzD,OAAQyJ,MACrB,MAAM9rB,EAAEA,EAAA6R,EAAIA,EAAIkY,OAAAA,QAAYhd,KAC5BsV,OAASA,QAAU,CACfhM,MAAO,EACPC,IAAKvD,KAEL+S,IAAAuE,IAAIrqB,EAAG6R,EAAGkY,OAAQ1H,OAAO/L,IAAK+L,OAAOhM,MAAO,MAChD,OAAQyV,KAAKzJ,MACrB,CACI,WAAAvW,CAAYuP,OACR,MAAMrb,EAAEA,EAAA6R,EAAIA,EAAIkY,OAAAA,QAAYhd,KAC5B,MAAM6I,MAAQyF,MAAMzF,MACb,MAAA,CACH5V,EAAGA,EAAI/D,KAAKmhB,IAAIxH,OAASmU,OACzBlY,EAAGA,EAAI5V,KAAKkgB,IAAIvG,OAASmU,OACzBnU,YAEZ,EAGA,SAASya,WAAW5f,QAChB,MAAM0Q,MAAEA,MAAQwJ,KAAAA,MAAAA,KAAOyB,MAAU3b,OAC7B,GAAA1B,eAAe4b,OAAO,CACf,OAAA+hD,eAAevrD,MAAOwJ,MACrC,CACI,GAAIA,QAAS,QAAS,CAClB,OAAOihD,gBAAgBn7D,OAC/B,CACI,GAAIka,QAAS,QAAS,CACX,OAAA,IACf,CACU,MAAAmgD,SAAW6B,gBAAgBl8D,QACjC,GAAIq6D,oBAAoB2B,UAAW,CACxB,OAAA3B,QACf,CACW,OAAAE,oBAAoBF,SAAU1+C,KACzC,CACC,SAASsgD,eAAevrD,MAAO3Q,QACtB,MAAA2J,KAAOgH,MAAM0oB,eAAer5B,QAClC,MAAMkP,QAAUvF,MAAQgH,MAAMq1B,iBAAiBhmC,QACxC,OAAAkP,QAAUvF,KAAKU,QAAU,IACpC,CACA,SAAS8xD,gBAAgBl8D,QACf,MAAAmW,MAAQnW,OAAOmW,OAAS,CAAE,EAChC,GAAIA,MAAM0zB,yBAA0B,CAChC,OAAOsyB,wBAAwBn8D,OACvC,CACI,OAAOo8D,sBAAsBp8D,OACjC,CACA,SAASo8D,sBAAsBp8D,QAC3B,MAAMmW,MAAEA,MAAO,GAAK+D,KAAAA,OAAUla,OACxB,MAAAoY,MAAQ4iD,gBAAgB9gD,MAAM/D,OAChC,GAAA7X,eAAe8Z,OAAQ,CACjB,MAAAyoB,WAAa1qB,MAAMwqB,eAClB,MAAA,CACHpxC,EAAGsxC,WAAazoB,MAAQ,KACxBhX,EAAGy/B,WAAa,KAAOzoB,MAEnC,CACW,OAAA,IACX,CACA,SAAS+jD,wBAAwBn8D,QAC7B,MAAMmW,MAAEA,MAAQ+D,KAAAA,OAAUla,OAC1B,MAAMQ,QAAU2V,MAAM3V,QAChB,MAAAlT,OAAS6oB,MAAMukB,YAAYptC,OACjC,MAAMsY,MAAQpF,QAAQjB,QAAU4W,MAAM1qB,IAAM0qB,MAAMzqB,IAClD,MAAMsS,MAAQi9D,gBAAgB/gD,MAAM/D,MAAOvQ,OAC3C,MAAM3F,OAAS,GACX,GAAAO,QAAQuR,KAAKy3B,SAAU,CACvB,MAAMrH,OAAShsB,MAAM0zB,yBAAyB,EAAGjkC,OACjD,OAAO,IAAIo2D,UAAU,CACjBzsE,EAAG4yC,OAAO5yC,EACV6R,EAAG+gC,OAAO/gC,EACVkY,OAAQnD,MAAMmzB,8BAA8BtrC,QAExD,CACI,IAAA,IAAQ7P,EAAI,EAAGA,EAAIb,SAAUa,EAAE,CAC3B8R,OAAOuB,KAAK2U,MAAM0zB,yBAAyB17C,EAAG6P,OACtD,CACW,OAAAiC,MACX,CAEA,SAASo8D,UAAUhnD,IAAKrV,OAAQsa,MACtB,MAAAra,OAAS2f,WAAW5f,QAC1B,MAAM0Q,MAAEA,MAAQ3Q,MAAAA,YAAQ4b,KAAOxF,MAAAA,MAAA9L,KAAQA,MAAUrK,OACjD,MAAMs8D,SAAW3gD,KAAKnb,QACtB,MAAM06D,WAAaoB,SAASpiD,KAC5B,MAAMtd,OAAQ0/D,SAAShoD,gBACvB,MAAMioD,MAAEA,MAAO3/D,OAAAA,MAAQ4+D,MAAO5+D,QAAWs+D,YAAc,CAAE,EACnD,MAAAxxD,KAAOgH,MAAM0oB,eAAer5B,QAC5B,MAAA8R,KAAO8c,mBAAmBje,MAAOhH,MACnC,GAAAzJ,QAAU0b,KAAKhS,OAAOrc,OAAQ,CAC9BktB,SAASnF,IAAKiF,MACdkiD,OAAOnnD,IAAK,CACRsG,UACA1b,cACAs8D,YACAf,YACAlhD,UACAnE,YACA9L,UACAwH,YAEJ4I,WAAWpF,IACnB,CACA,CACA,SAASmnD,OAAOnnD,IAAKic,KACX,MAAA3V,KAAEA,YAAO1b,OAASs8D,MAAAA,MAAAf,MAAQA,WAAQlhD,KAAOnE,MAAAA,MAAAtE,KAAQA,MAAUyf,IACjE,MAAM/sB,SAAWoX,KAAKqR,MAAQ,QAAUsE,IAAIjnB,KAC5CgL,IAAIwC,OACJ,IAAI4kD,UAAYjB,MAChB,GAAIA,QAAUe,MAAO,CACjB,GAAIh4D,WAAa,IAAK,CACLm4D,aAAArnD,IAAKpV,OAAQqa,KAAKhL,KAC/B4K,KAAK7E,IAAK,CACNsG,UACA1b,cACArD,MAAO2/D,MACPpmD,YACA5R,kBACAsN,YAEJwD,IAAI4C,UACJ5C,IAAIwC,OACS6kD,aAAArnD,IAAKpV,OAAQqa,KAAK/K,OAC3C,MAAA,GAAmBhL,WAAa,IAAK,CACVo4D,eAAAtnD,IAAKpV,OAAQqa,KAAKjR,MACjC6Q,KAAK7E,IAAK,CACNsG,UACA1b,cACArD,MAAO4+D,MACPrlD,YACA5R,kBACAsN,YAEJwD,IAAI4C,UACJ5C,IAAIwC,OACW8kD,eAAAtnD,IAAKpV,OAAQqa,KAAKhR,OACrBmzD,UAAAF,KACxB,CACA,CACIriD,KAAK7E,IAAK,CACNsG,UACA1b,cACArD,MAAO6/D,UACPtmD,YACA5R,kBACAsN,YAEJwD,IAAI4C,SACR,CACA,SAASykD,aAAarnD,IAAKpV,OAAQ28D,OACzB,MAAApwC,SAAEA,SAAW7iB,OAAAA,QAAY1J,OAC/B,IAAIw1C,MAAQ,KACZ,IAAIonB,SAAW,MACfxnD,IAAIqE,YACJ,IAAA,MAAWkS,WAAWY,SAAS,CACrB,MAAA5mB,MAAEA,MAAQC,IAAAA,KAAS+lB,QACnB,MAAApI,WAAa7Z,OAAO/D,OAC1B,MAAM2iC,UAAY5+B,OAAOiwD,gBAAgBh0D,MAAOC,IAAK8D,SACrD,GAAI8rC,MAAO,CACPpgC,IAAIyE,OAAO0J,WAAWj0B,EAAGi0B,WAAWpiB,GAC5Bq0C,MAAA,KACpB,KAAe,CACCpgC,IAAA0E,OAAOyJ,WAAWj0B,EAAGqtE,OACzBvnD,IAAI0E,OAAOyJ,WAAWj0B,EAAGi0B,WAAWpiB,EAChD,CACQy7D,WAAa58D,OAAO8yD,YAAY19C,IAAKuW,QAAS,CAC1CgS,KAAMi/B,WAEV,GAAIA,SAAU,CACVxnD,IAAIwE,WAChB,KAAe,CACCxE,IAAA0E,OAAOwuB,UAAUh5C,EAAGqtE,MACpC,CACA,CACIvnD,IAAI0E,OAAO9Z,OAAOw1C,QAAQlmD,EAAGqtE,OAC7BvnD,IAAIwE,YACJxE,IAAIxD,MACR,CACA,SAAS8qD,eAAetnD,IAAKpV,OAAQ68D,OAC3B,MAAAtwC,SAAEA,SAAW7iB,OAAAA,QAAY1J,OAC/B,IAAIw1C,MAAQ,KACZ,IAAIonB,SAAW,MACfxnD,IAAIqE,YACJ,IAAA,MAAWkS,WAAWY,SAAS,CACrB,MAAA5mB,MAAEA,MAAQC,IAAAA,KAAS+lB,QACnB,MAAApI,WAAa7Z,OAAO/D,OAC1B,MAAM2iC,UAAY5+B,OAAOiwD,gBAAgBh0D,MAAOC,IAAK8D,SACrD,GAAI8rC,MAAO,CACPpgC,IAAIyE,OAAO0J,WAAWj0B,EAAGi0B,WAAWpiB,GAC5Bq0C,MAAA,KACpB,KAAe,CACCpgC,IAAA0E,OAAO+iD,MAAOt5C,WAAWpiB,GAC7BiU,IAAI0E,OAAOyJ,WAAWj0B,EAAGi0B,WAAWpiB,EAChD,CACQy7D,WAAa58D,OAAO8yD,YAAY19C,IAAKuW,QAAS,CAC1CgS,KAAMi/B,WAEV,GAAIA,SAAU,CACVxnD,IAAIwE,WAChB,KAAe,CACCxE,IAAA0E,OAAO+iD,MAAOv0B,UAAUnnC,EACxC,CACA,CACIiU,IAAI0E,OAAO+iD,MAAO78D,OAAOw1C,QAAQr0C,GACjCiU,IAAIwE,YACJxE,IAAIxD,MACR,CACA,SAASqI,KAAK7E,IAAKic,KACT,MAAA3V,KAAEA,YAAO1b,OAASsE,SAAAA,SAAW3H,MAAAA,OAAQuZ,MAAAA,MAAAtE,KAAQA,MAAUyf,IAC7D,MAAM9E,SAAW6nC,UAAU14C,KAAM1b,OAAQsE,UAC9B,IAAA,MAAEvE,OAAQ+8D,IAAM98D,OAAQ85D,UAAMn0D,MAAQC,IAAAA,OAAU2mB,SAAS,CAC1D,MAAEvX,OAAOX,gBAAEA,gBAAiB1X,QAAW,CAAE,GAAMmgE,IACrD,MAAMC,SAAW/8D,SAAW,KAC5BoV,IAAIwC,OACJxC,IAAIkG,UAAYjH,gBACL2oD,WAAA5nD,IAAKc,MAAOtE,KAAMmrD,UAAYnD,WAAWt1D,SAAUqB,MAAOC,MACrEwP,IAAIqE,YACJ,MAAMmjD,WAAalhD,KAAKo3C,YAAY19C,IAAK0nD,KACrC,IAAA1uD,KACJ,GAAI2uD,SAAU,CACV,GAAIH,SAAU,CACVxnD,IAAIwE,WACpB,KAAmB,CACgBqjD,mBAAA7nD,IAAKpV,OAAQ4F,IAAKtB,SACrD,CACY,MAAM44D,aAAel9D,OAAO8yD,YAAY19C,IAAK0kD,IAAK,CAC9Cn8B,KAAMi/B,SACNt9D,QAAS,OAEb8O,KAAOwuD,UAAYM,WACnB,IAAK9uD,KAAM,CACY6uD,mBAAA7nD,IAAKpV,OAAQ2F,MAAOrB,SACvD,CACA,CACQ8Q,IAAIwE,YACAxE,IAAA6E,KAAK7L,KAAO,UAAY,WAC5BgH,IAAI4C,SACZ,CACA,CACA,SAASglD,WAAW5nD,IAAKc,MAAOtE,KAAMD,QAC5B,MAAA4c,UAAYrY,MAAMzF,MAAM8d,UAC9B,MAAMjqB,SAAEA,SAAWqB,MAAAA,MAAAC,IAAQA,KAAS+L,QAAU,CAAE,EAC5C,GAAArN,WAAa,KAAOA,WAAa,IAAK,CAClC,IAAA8E,KAAMiG,IAAKhG,MAAOiG,OACtB,GAAIhL,WAAa,IAAK,CACX8E,KAAAzD,MACP0J,IAAMkf,UAAUlf,IACRhG,MAAAzD,IACR0J,OAASif,UAAUjf,MAC/B,KAAe,CACHlG,KAAOmlB,UAAUnlB,KACXiG,IAAA1J,MACN0D,MAAQklB,UAAUllB,MACTiG,OAAA1J,GACrB,CACQwP,IAAIqE,YACJ,GAAI7H,KAAM,CACNxI,KAAO7d,KAAKC,IAAI4d,KAAMwI,KAAKxI,MAC3BC,MAAQ9d,KAAKE,IAAI4d,MAAOuI,KAAKvI,OAC7BgG,IAAM9jB,KAAKC,IAAI6jB,IAAKuC,KAAKvC,KACzBC,OAAS/jB,KAAKE,IAAI6jB,OAAQsC,KAAKtC,OAC3C,CACQ8F,IAAI4E,KAAK5Q,KAAMiG,IAAKhG,MAAQD,KAAMkG,OAASD,KAC3C+F,IAAIxD,MACZ,CACA,CACA,SAASqrD,mBAAmB7nD,IAAKpV,OAAQ2K,MAAOrG,UAC5C,MAAM64D,kBAAoBn9D,OAAO5E,YAAYuP,MAAOrG,UACpD,GAAI64D,kBAAmB,CACnB/nD,IAAI0E,OAAOqjD,kBAAkB7tE,EAAG6tE,kBAAkBh8D,EAC1D,CACA,CAEA,IAAIrB,MAAQ,CACRjC,GAAI,SACJ,mBAAAu/D,CAAqB3sD,MAAO0mD,MAAO52D,SAC/B,MAAMsJ,OAAS4G,MAAMyG,KAAK3C,UAAY,IAAIlnB,OAC1C,MAAMsT,QAAU,GACZ,IAAA8I,KAAMvb,EAAGwtB,KAAM3b,OACnB,IAAI7R,EAAI,EAAGA,EAAI2b,QAAS3b,EAAE,CACfub,KAAAgH,MAAM0oB,eAAejrC,GAC5BwtB,KAAOjS,KAAKU,QACHpK,OAAA,KACT,GAAI2b,MAAQA,KAAKnb,SAAWmb,gBAAgBw4C,YAAa,CAC5Cn0D,OAAA,CACLiP,QAASyB,MAAMq1B,iBAAiB53C,GAChC4R,MAAO5R,EACP+rB,KAAM0gD,YAAYj/C,KAAMxtB,EAAG2b,OAC3B4G,YACArG,KAAMX,KAAK+rB,WAAWj1B,QAAQgV,UAC9BW,MAAOzM,KAAKO,OACZ0R,UAEpB,CACYjS,KAAK4zD,QAAUt9D,OACfY,QAAQY,KAAKxB,OACzB,CACQ,IAAI7R,EAAI,EAAGA,EAAI2b,QAAS3b,EAAE,CACtB6R,OAASY,QAAQzS,GACjB,IAAK6R,QAAUA,OAAOka,OAAS,MAAO,CAClC,QAChB,CACYla,OAAOka,KAAOugD,eAAe75D,QAASzS,EAAGqS,QAAQk6D,UAC7D,CACK,EACD,UAAA6C,CAAY7sD,MAAO0mD,MAAO52D,SAChBwvB,MAAAA,MAAOxvB,QAAQg9D,WAAa,aAC5B,MAAAzpC,SAAWrjB,MAAM26B,+BACvB,MAAM/wB,KAAO5J,MAAM8d,UACnB,IAAA,IAAQrgC,EAAI4lC,SAASzmC,OAAS,EAAGa,GAAK,IAAKA,EAAE,CACnC,MAAA6R,OAAS+zB,SAAS5lC,GAAGmvE,QAC3B,IAAKt9D,OAAQ,CACT,QAChB,CACYA,OAAO2b,KAAK6sB,oBAAoBluB,KAAMta,OAAOqK,MACzC2lB,GAAAA,OAAQhwB,OAAOka,KAAM,CACXmiD,UAAA3rD,MAAM2E,IAAKrV,OAAQsa,KAC7C,CACA,CACK,EACD,kBAAAmjD,CAAoB/sD,MAAO0mD,MAAO52D,SAC1B,GAAAA,QAAQg9D,WAAa,qBAAsB,CAC3C,MACZ,CACc,MAAAzpC,SAAWrjB,MAAM26B,+BACvB,IAAA,IAAQl9C,EAAI4lC,SAASzmC,OAAS,EAAGa,GAAK,IAAKA,EAAE,CACnC,MAAA6R,OAAS+zB,SAAS5lC,GAAGmvE,QACvB,GAAA9C,iBAAiBx6D,QAAS,CAC1Bq8D,UAAU3rD,MAAM2E,IAAKrV,OAAQ0Q,MAAM8d,UACnD,CACA,CACK,EACD,iBAAAkvC,CAAmBhtD,MAAO/lB,KAAM6V,SACtB,MAAAR,OAASrV,KAAK+e,KAAK4zD,QACzB,IAAK9C,iBAAiBx6D,SAAWQ,QAAQg9D,WAAa,oBAAqB,CACvE,MACZ,CACQnB,UAAU3rD,MAAM2E,IAAKrV,OAAQ0Q,MAAM8d,UACtC,EACDtgB,SAAU,CACNwsD,UAAW,KACX8C,SAAU,sBAIlB,MAAMG,WAAa,CAACC,UAAWhd,YAC3B,IAAIid,UAAEA,UAAWjd,SAAWkd,SAAAA,SAAUld,UAAcgd,UACpD,GAAIA,UAAUG,cAAe,CACbF,UAAAryE,KAAKE,IAAImyE,UAAWjd,UAChCkd,SAAWF,UAAUI,iBAAmBxyE,KAAKE,IAAIoyE,SAAUld,SACnE,CACW,MAAA,CACHkd,kBACAD,oBACAI,WAAYzyE,KAAKC,IAAIm1D,SAAUid,aAGvC,MAAMK,WAAa,CAAC5xE,EAAGC,IAAID,IAAM,MAAQC,IAAM,MAAQD,EAAEwT,eAAiBvT,EAAEuT,cAAgBxT,EAAEyT,QAAUxT,EAAEwT,MAC1G,MAAMo+D,eAAevpB,QACpB,WAAAx4C,CAAYo2B,QACEkP,QACPplC,KAAK8hE,OAAS,MACd9hE,KAAK+hE,eAAiB,GAC7B/hE,KAAKgiE,aAAe,KACbhiE,KAAKiiE,aAAe,MACpBjiE,KAAKoU,MAAQ8hB,OAAO9hB,MACpBpU,KAAKkE,QAAUgyB,OAAOhyB,QACtBlE,KAAK+Y,IAAMmd,OAAOnd,IAClB/Y,KAAKkiE,iBAAc,EACnBliE,KAAKmiE,iBAAc,EACnBniE,KAAKoiE,gBAAa,EAClBpiE,KAAK+rB,eAAY,EACjB/rB,KAAKygB,cAAW,EAChBzgB,KAAKgT,SAAM,EACXhT,KAAKiT,YAAS,EACdjT,KAAK+M,UAAO,EACZ/M,KAAKgN,WAAQ,EACbhN,KAAKsc,YAAS,EACdtc,KAAKoW,WAAQ,EACbpW,KAAKw7C,cAAW,EAChBx7C,KAAK6uC,cAAW,EAChB7uC,KAAKO,YAAS,EACdP,KAAKyxC,cAAW,CACxB,CACI,MAAA/b,CAAOjV,SAAUsL,UAAWY,SACxB3sB,KAAKygB,SAAWA,SAChBzgB,KAAK+rB,UAAYA,UACjB/rB,KAAKw7C,SAAW7uB,QAChB3sB,KAAKq9C,gBACLr9C,KAAKqiE,cACLriE,KAAKo+C,KACb,CACI,aAAAf,GACQ,GAAAr9C,KAAKqkC,eAAgB,CACrBrkC,KAAKoW,MAAQpW,KAAKygB,SACbzgB,KAAA+M,KAAO/M,KAAKw7C,SAASzuC,KAC1B/M,KAAKgN,MAAQhN,KAAKoW,KAC9B,KAAe,CACHpW,KAAKsc,OAAStc,KAAK+rB,UACd/rB,KAAAgT,IAAMhT,KAAKw7C,SAASxoC,IACzBhT,KAAKiT,OAASjT,KAAKsc,MAC/B,CACA,CACI,WAAA+lD,GACI,MAAMf,UAAYthE,KAAKkE,QAAQi6B,QAAU,CAAE,EACvC,IAAA+jC,YAAcv/D,SAAS2+D,UAAUl2B,eAAgB,CACjDprC,KAAKoU,OACNpU,OAAS,GACZ,GAAIshE,UAAUx7C,OAAQ,CACJo8C,YAAAA,YAAYp8C,OAAQlgB,MAAO07D,UAAUx7C,OAAOlgB,KAAM5F,KAAKoU,MAAMyG,MACvF,CACQ,GAAIymD,UAAUh6D,KAAM,CAChB46D,YAAcA,YAAY56D,KAAK,CAACtX,EAAGC,IAAIqxE,UAAUh6D,KAAKtX,EAAGC,EAAG+P,KAAKoU,MAAMyG,MACnF,CACY,GAAA7a,KAAKkE,QAAQjB,QAAS,CACtBi/D,YAAYj/D,SACxB,CACQjD,KAAKkiE,YAAcA,WAC3B,CACI,GAAA9jB,GACU,MAAAl6C,QAAEA,QAAU6U,IAAAA,KAAS/Y,KACvB,IAACkE,QAAQiR,QAAS,CACbnV,KAAAoW,MAAQpW,KAAKsc,OAAS,EAC3B,MACZ,CACQ,MAAMglD,UAAYp9D,QAAQi6B,OACpB,MAAAmkC,UAAYxgD,OAAOw/C,UAAU7oD,MACnC,MAAM6rC,SAAWge,UAAU38D,KACrB,MAAAg6C,YAAc3/C,KAAKuiE,sBACzB,MAAMf,SAAEA,SAAWG,WAAAA,YAAgBN,WAAWC,UAAWhd,UACzD,IAAIluC,MAAOkG,OACXvD,IAAIN,KAAO6pD,UAAUtnD,OACjB,GAAAhb,KAAKqkC,eAAgB,CACrBjuB,MAAQpW,KAAKygB,SACbnE,OAAStc,KAAKwiE,SAAS7iB,YAAa2E,SAAUkd,SAAUG,YAAc,EAClF,KAAe,CACHrlD,OAAStc,KAAK+rB,UACd3V,MAAQpW,KAAKyiE,SAAS9iB,YAAa2iB,UAAWd,SAAUG,YAAc,EAClF,CACQ3hE,KAAKoW,MAAQlnB,KAAKE,IAAIgnB,MAAOlS,QAAQuc,UAAYzgB,KAAKygB,UACtDzgB,KAAKsc,OAASptB,KAAKE,IAAIktB,OAAQpY,QAAQ6nB,WAAa/rB,KAAK+rB,UACjE,CACC,QAAAy2C,CAAS7iB,YAAa2E,SAAUkd,SAAUG,YAC7B,MAAA5oD,IAAEA,IAAM0H,SAAAA,SAAWvc,SAAWi6B,QAAQprB,QAAEA,WAAmB/S,KAC3D,MAAA0iE,SAAW1iE,KAAK+hE,eAAiB,GACjC,MAAAK,WAAapiE,KAAKoiE,WAAa,CACjC,GAEJ,MAAMxpD,WAAa+oD,WAAa5uD,QAChC,IAAI4vD,YAAchjB,YAClB5mC,IAAImG,UAAY,OAChBnG,IAAIoG,aAAe,SACnB,IAAIyjD,KAAM,EACV,IAAI5vD,KAAO4F,WACX5Y,KAAKkiE,YAAY92D,QAAQ,CAACkgC,WAAYz5C,KAC5B,MAAAw8B,UAAYmzC,SAAWld,SAAW,EAAIvrC,IAAImC,YAAYowB,WAAWh1B,MAAMF,MACzE,GAAAvkB,IAAM,GAAKuwE,WAAWA,WAAWpxE,OAAS,GAAKq9B,UAAY,EAAItb,QAAU0N,SAAU,CACpEkiD,aAAA/pD,WACfwpD,WAAWA,WAAWpxE,QAAUa,EAAI,EAAI,EAAI,IAAM,EAC3CmhB,KAAA4F,WACPgqD,KAChB,CACYF,SAAS7wE,GAAK,CACVkb,KAAM,EACNiG,QACA4vD,QACAxsD,MAAOiY,UACP/R,OAAQqlD,YAEZS,WAAWA,WAAWpxE,OAAS,IAAMq9B,UAAYtb,UAE9C,OAAA4vD,WACf,CACI,QAAAF,CAAS9iB,YAAa2iB,UAAWd,SAAUqB,aACjC,MAAA9pD,IAAEA,IAAMgT,UAAAA,UAAY7nB,SAAWi6B,QAAQprB,QAAEA,WAAmB/S,KAC5D,MAAA0iE,SAAW1iE,KAAK+hE,eAAiB,GACjC,MAAAI,YAAcniE,KAAKmiE,YAAc,GACvC,MAAMW,YAAc/2C,UAAY4zB,YAChC,IAAIojB,WAAahwD,QACjB,IAAIiwD,gBAAkB,EACtB,IAAIC,iBAAmB,EACvB,IAAIl2D,KAAO,EACX,IAAIm2D,IAAM,EACVljE,KAAKkiE,YAAY92D,QAAQ,CAACkgC,WAAYz5C,KAC5B,MAAAw8B,UAAEA,qBAAYszC,YAAgBwB,kBAAkB3B,SAAUc,UAAWvpD,IAAKuyB,WAAYu3B,aAC5F,GAAIhxE,EAAI,GAAKoxE,iBAAmBtB,WAAa,EAAI5uD,QAAU+vD,YAAa,CACpEC,YAAcC,gBAAkBjwD,QAChCovD,YAAYj9D,KAAK,CACbkR,MAAO4sD,gBACP1mD,OAAQ2mD,mBAEZl2D,MAAQi2D,gBAAkBjwD,QAC1BmwD,MACAF,gBAAkBC,iBAAmB,CACrD,CACYP,SAAS7wE,GAAK,CACVkb,UACAiG,IAAKiwD,iBACLC,QACA9sD,MAAOiY,UACP/R,OAAQqlD,YAEMqB,gBAAA9zE,KAAKC,IAAI6zE,gBAAiB30C,WAC5C40C,kBAAoBtB,WAAa5uD,UAEvBgwD,YAAAC,gBACdb,YAAYj9D,KAAK,CACbkR,MAAO4sD,gBACP1mD,OAAQ2mD,mBAEL,OAAAF,UACf,CACI,cAAAK,GACQ,IAACpjE,KAAKkE,QAAQiR,QAAS,CACvB,MACZ,CACc,MAAAwqC,YAAc3/C,KAAKuiE,sBACzB,MAAQR,eAAgBW,SAAWx+D,SAAS0I,MAAEA,MAAQuxB,QAAQprB,QAAEA,SAAO9F,IAAMA,MAAYjN,KACzF,MAAMqjE,UAAY70C,cAAcvhB,IAAKjN,KAAK+M,KAAM/M,KAAKoW,OACjD,GAAApW,KAAKqkC,eAAgB,CACrB,IAAIu+B,IAAM,EACN,IAAA71D,KAAOF,eAAeD,MAAO5M,KAAK+M,KAAOgG,QAAS/S,KAAKgN,MAAQhN,KAAKoiE,WAAWQ,MACnF,IAAA,MAAWU,UAAUZ,SAAS,CACtB,GAAAE,MAAQU,OAAOV,IAAK,CACpBA,IAAMU,OAAOV,IACN71D,KAAAF,eAAeD,MAAO5M,KAAK+M,KAAOgG,QAAS/S,KAAKgN,MAAQhN,KAAKoiE,WAAWQ,KACnG,CACuBU,OAAAtwD,KAAOhT,KAAKgT,IAAM2sC,YAAc5sC,QAChCuwD,OAAAv2D,KAAOs2D,UAAUj1C,WAAWi1C,UAAUpwE,EAAE8Z,MAAOu2D,OAAOltD,OAC7DrJ,MAAQu2D,OAAOltD,MAAQrD,OACvC,CACA,KAAe,CACH,IAAImwD,IAAM,EACV,IAAIlwD,IAAMnG,eAAeD,MAAO5M,KAAKgT,IAAM2sC,YAAc5sC,QAAS/S,KAAKiT,OAASjT,KAAKmiE,YAAYe,KAAK5mD,QACtG,IAAA,MAAWgnD,UAAUZ,SAAS,CACtB,GAAAY,OAAOJ,MAAQA,IAAK,CACpBA,IAAMI,OAAOJ,IACblwD,IAAMnG,eAAeD,MAAO5M,KAAKgT,IAAM2sC,YAAc5sC,QAAS/S,KAAKiT,OAASjT,KAAKmiE,YAAYe,KAAK5mD,OACtH,CACgBgnD,OAAOtwD,IAAMA,IACNswD,OAAAv2D,MAAQ/M,KAAK+M,KAAOgG,QACpBuwD,OAAAv2D,KAAOs2D,UAAUj1C,WAAWi1C,UAAUpwE,EAAEqwE,OAAOv2D,MAAOu2D,OAAOltD,OACpEpD,KAAOswD,OAAOhnD,OAASvJ,OACvC,CACA,CACA,CACI,YAAAsxB,GACI,OAAOrkC,KAAKkE,QAAQ2qC,WAAa,OAAS7uC,KAAKkE,QAAQ2qC,WAAa,QAC5E,CACI,IAAAnb,GACQ,GAAA1zB,KAAKkE,QAAQiR,QAAS,CACtB,MAAM4D,IAAM/Y,KAAK+Y,IACjBmF,SAASnF,IAAK/Y,MACdA,KAAKujE,QACLplD,WAAWpF,IACvB,CACA,CACC,KAAAwqD,GACO,MAAQr/D,QAAS6a,KAAAojD,YAAOA,YAAcC,WAAAA,WAAArpD,IAAaA,KAAS/Y,KAC5D,MAAM4M,MAAEA,MAAQuxB,OAAQmjC,WAAeviD,KACvC,MAAMykD,aAAe5xD,SAAStR,MAC9B,MAAM+iE,UAAY70C,cAAczP,KAAK9R,IAAKjN,KAAK+M,KAAM/M,KAAKoW,OACpD,MAAAksD,UAAYxgD,OAAOw/C,UAAU7oD,MAC7B,MAAA1F,QAAEA,SAAauuD,UACrB,MAAMhd,SAAWge,UAAU38D,KAC3B,MAAM89D,aAAenf,SAAW,EAC5B,IAAAof,OACJ1jE,KAAKikD,YACDlrC,IAAAmG,UAAYmkD,UAAUnkD,UAAU,QACpCnG,IAAIoG,aAAe,SACnBpG,IAAIrD,UAAY,GAChBqD,IAAIN,KAAO6pD,UAAUtnD,OACrB,MAAMwmD,SAAEA,SAAWD,UAAAA,UAAAI,WAAYA,YAAgBN,WAAWC,UAAWhd,UACrE,MAAMqf,cAAgB,SAAS1wE,EAAG6R,EAAGwmC,YAC7B,GAAA1jC,MAAM45D,WAAaA,UAAY,GAAK55D,MAAM25D,YAAcA,UAAY,EAAG,CACvE,MAChB,CACYxoD,IAAIwC,OACJ,MAAM7F,UAAYrT,eAAeipC,WAAW51B,UAAW,GACvDqD,IAAIkG,UAAY5c,eAAeipC,WAAWrsB,UAAWukD,cACrDzqD,IAAIi9C,QAAU3zD,eAAeipC,WAAW0qB,QAAS,QACjDj9C,IAAI6qC,eAAiBvhD,eAAeipC,WAAWsY,eAAgB,GAC/D7qC,IAAIm8C,SAAW7yD,eAAeipC,WAAW4pB,SAAU,SACnDn8C,IAAIrD,UAAYA,UAChBqD,IAAI+G,YAAczd,eAAeipC,WAAWxrB,YAAa0jD,cACzDzqD,IAAI4qC,YAAYthD,eAAeipC,WAAWs4B,SAAU,KACpD,GAAItC,UAAUG,cAAe,CACzB,MAAMoC,YAAc,CAChB7mD,OAAQukD,UAAYryE,KAAK40E,MAAQ,EACjChnD,WAAYwuB,WAAWxuB,WACvBC,SAAUuuB,WAAWvuB,SACrBc,YAAanI,WAEjB,MAAMi1B,QAAU04B,UAAUl1C,MAAMl7B,EAAGuuE,SAAW,GAC9C,MAAM52B,QAAU9lC,EAAI2+D,aACpBjnD,gBAAgBzD,IAAK8qD,YAAal5B,QAASC,QAAS02B,UAAUI,iBAAmBF,SACjG,KAAmB,CACH,MAAMuC,QAAUj/D,EAAI5V,KAAKC,KAAKm1D,SAAWid,WAAa,EAAG,GACzD,MAAMyC,SAAWX,UAAUj1C,WAAWn7B,EAAGuuE,UACnC,MAAA9O,aAAe9wC,cAAc0pB,WAAWonB,cAC9C35C,IAAIqE,YACA,GAAAtf,OAAO6M,OAAO+nD,cAAchL,KAAM54D,GAAIA,IAAM,GAAI,CAChD6xB,mBAAmB5H,IAAK,CACpB9lB,EAAG+wE,SACHl/D,EAAGi/D,QACHpyE,EAAG6vE,SACHvyE,EAAGsyE,UACHvkD,OAAQ01C,cAEhC,KAAuB,CACH35C,IAAI4E,KAAKqmD,SAAUD,QAASvC,SAAUD,UAC1D,CACgBxoD,IAAI6E,OACJ,GAAIlI,YAAc,EAAG,CACjBqD,IAAI+E,QACxB,CACA,CACY/E,IAAI4C,SACP,EACD,MAAM+E,SAAW,SAASztB,EAAG6R,EAAGwmC,YAC5BnrB,WAAWpH,IAAKuyB,WAAWh1B,KAAMrjB,EAAG6R,EAAI68D,WAAa,EAAGW,UAAW,CAC/DhjD,cAAegsB,WAAW5Q,OAC1Bxb,UAAWmkD,UAAUnkD,UAAUosB,WAAWpsB,YAEjD,EACK,MAAAmlB,aAAerkC,KAAKqkC,eACpB,MAAAsb,YAAc3/C,KAAKuiE,sBACzB,GAAIl+B,aAAc,CACLq/B,OAAA,CACLzwE,EAAG4Z,eAAeD,MAAO5M,KAAK+M,KAAOgG,QAAS/S,KAAKgN,MAAQo1D,WAAW,IACtEt9D,EAAG9E,KAAKgT,IAAMD,QAAU4sC,YACxBtgC,KAAM,EAEtB,KAAe,CACMqkD,OAAA,CACLzwE,EAAG+M,KAAK+M,KAAOgG,QACfjO,EAAG+H,eAAeD,MAAO5M,KAAKgT,IAAM2sC,YAAc5sC,QAAS/S,KAAKiT,OAASkvD,YAAY,GAAG7lD,QACxF+C,KAAM,EAEtB,CAC8BoP,sBAAAzuB,KAAK+Y,IAAKgG,KAAKklD,eACrC,MAAMrrD,WAAa+oD,WAAa5uD,QAChC/S,KAAKkiE,YAAY92D,QAAQ,CAACkgC,WAAYz5C,KAClCknB,IAAI+G,YAAcwrB,WAAWD,UAC7BtyB,IAAIkG,UAAYqsB,WAAWD,UAC3B,MAAMpwB,UAAYlC,IAAImC,YAAYowB,WAAWh1B,MAAMF,MAC7C,MAAA8I,UAAYmkD,UAAUnkD,UAAUosB,WAAWpsB,YAAcosB,WAAWpsB,UAAYoiD,UAAUpiD,YAC1F,MAAA9I,MAAQorD,SAAWiC,aAAexoD,UACxC,IAAIhoB,EAAIywE,OAAOzwE,EACf,IAAI6R,EAAI4+D,OAAO5+D,EACLu+D,UAAAn1C,SAASluB,KAAKoW,OACxB,GAAIiuB,aAAc,CACd,GAAIxyC,EAAI,GAAKoB,EAAImjB,MAAQrD,QAAU/S,KAAKgN,MAAO,CAC3ClI,EAAI4+D,OAAO5+D,GAAK8T,WACT8qD,OAAArkD,OACPpsB,EAAIywE,OAAOzwE,EAAI4Z,eAAeD,MAAO5M,KAAK+M,KAAOgG,QAAS/S,KAAKgN,MAAQo1D,WAAWsB,OAAOrkD,MAC7G,CACA,SAAuBxtB,EAAI,GAAKiT,EAAI8T,WAAa5Y,KAAKiT,OAAQ,CAC9ChgB,EAAIywE,OAAOzwE,EAAIA,EAAIkvE,YAAYuB,OAAOrkD,MAAMjJ,MAAQrD,QAC7C2wD,OAAArkD,OACPva,EAAI4+D,OAAO5+D,EAAI+H,eAAeD,MAAO5M,KAAKgT,IAAM2sC,YAAc5sC,QAAS/S,KAAKiT,OAASkvD,YAAYuB,OAAOrkD,MAAM/C,OAC9H,CACkB,MAAA4nD,MAAQb,UAAUpwE,EAAEA,GACZ0wE,cAAAO,MAAOp/D,EAAGwmC,YACpBr4C,EAAA6Z,OAAOoS,UAAWjsB,EAAIuuE,SAAWiC,aAAcp/B,aAAepxC,EAAImjB,MAAQpW,KAAKgN,MAAO+R,KAAK9R,KAC/FyT,SAAS2iD,UAAUpwE,EAAEA,GAAI6R,EAAGwmC,YAC5B,GAAIjH,aAAc,CACdq/B,OAAOzwE,GAAKmjB,MAAQrD,OACvB,MAAU,UAAOu4B,WAAWh1B,OAAS,SAAU,CAC5C,MAAM6tD,eAAiB7B,UAAU1pD,WACjC8qD,OAAO5+D,GAAKs/D,0BAA0B94B,WAAY64B,gBAAkBpxD,OACpF,KAAmB,CACH2wD,OAAO5+D,GAAK8T,UAC5B,IAE6BmW,qBAAA/uB,KAAK+Y,IAAKgG,KAAKklD,cAC5C,CACC,SAAAhgB,GACO,MAAMllC,KAAO/e,KAAKkE,QAClB,MAAMu7C,UAAY1gC,KAAK1I,MACjB,MAAAguD,UAAYviD,OAAO29B,UAAUhnC,MAC7B,MAAA6rD,aAAeziD,UAAU49B,UAAU1sC,SACrC,IAAC0sC,UAAUtqC,QAAS,CACpB,MACZ,CACQ,MAAMkuD,UAAY70C,cAAczP,KAAK9R,IAAKjN,KAAK+M,KAAM/M,KAAKoW,OAC1D,MAAM2C,IAAM/Y,KAAK+Y,IACjB,MAAM81B,SAAW4Q,UAAU5Q,SACrB,MAAA40B,aAAeY,UAAU1+D,KAAO,EAChC,MAAA4+D,2BAA6BD,aAAatxD,IAAMywD,aAClD,IAAA3+D,EACJ,IAAIiI,KAAO/M,KAAK+M,KAChB,IAAI0T,SAAWzgB,KAAKoW,MAChB,GAAApW,KAAKqkC,eAAgB,CACrB5jB,SAAWvxB,KAAKC,OAAO6Q,KAAKoiE,YAC5Bt9D,EAAI9E,KAAKgT,IAAMuxD,2BACfx3D,KAAOF,eAAekS,KAAKnS,MAAOG,KAAM/M,KAAKgN,MAAQyT,SACjE,KAAe,CACH,MAAMsL,UAAY/rB,KAAKmiE,YAAY/tC,OAAO,CAACC,IAAK1uB,OAAOzW,KAAKC,IAAIklC,IAAK1uB,KAAK2W,QAAS,GACnFxX,EAAIy/D,2BAA6B13D,eAAekS,KAAKnS,MAAO5M,KAAKgT,IAAKhT,KAAKiT,OAAS8Y,UAAYhN,KAAKof,OAAOprB,QAAU/S,KAAKuiE,sBACvI,CACQ,MAAMtvE,EAAI4Z,eAAegiC,SAAU9hC,KAAMA,KAAO0T,UAChD1H,IAAImG,UAAYmkD,UAAUnkD,UAAUvS,mBAAmBkiC,WACvD91B,IAAIoG,aAAe,SACnBpG,IAAI+G,YAAc2/B,UAAUn/C,MAC5ByY,IAAIkG,UAAYwgC,UAAUn/C,MAC1ByY,IAAIN,KAAO4rD,UAAUrpD,OACrBmF,WAAWpH,IAAK0mC,UAAUnpC,KAAMrjB,EAAG6R,EAAGu/D,UAC9C,CACC,mBAAA9B,GACa,MAAA9iB,UAAYz/C,KAAKkE,QAAQmS,MACzB,MAAAguD,UAAYviD,OAAO29B,UAAUhnC,MAC7B,MAAA6rD,aAAeziD,UAAU49B,UAAU1sC,SACzC,OAAO0sC,UAAUtqC,QAAUkvD,UAAUzrD,WAAa0rD,aAAahoD,OAAS,CAChF,CACC,gBAAAkoD,CAAiBvxE,EAAG6R,GACb,IAAIjT,EAAG4yE,OAAQC,GACf,GAAI36D,WAAW9W,EAAG+M,KAAK+M,KAAM/M,KAAKgN,QAAUjD,WAAWjF,EAAG9E,KAAKgT,IAAKhT,KAAKiT,QAAS,CAC9EyxD,GAAK1kE,KAAK+hE,eACV,IAAIlwE,EAAI,EAAGA,EAAI6yE,GAAG1zE,SAAUa,EAAE,CAC1B4yE,OAASC,GAAG7yE,GACZ,GAAIkY,WAAW9W,EAAGwxE,OAAO13D,KAAM03D,OAAO13D,KAAO03D,OAAOruD,QAAUrM,WAAWjF,EAAG2/D,OAAOzxD,IAAKyxD,OAAOzxD,IAAMyxD,OAAOnoD,QAAS,CAC1G,OAAAtc,KAAKkiE,YAAYrwE,EAC5C,CACA,CACA,CACe,OAAA,IACf,CACC,WAAA8yE,CAAYv0E,GACL,MAAM2uB,KAAO/e,KAAKkE,QAClB,IAAK0gE,WAAWx0E,EAAE2P,KAAMgf,MAAO,CAC3B,MACZ,CACQ,MAAM8lD,YAAc7kE,KAAKwkE,iBAAiBp0E,EAAE6C,EAAG7C,EAAE0U,GACjD,GAAI1U,EAAE2P,OAAS,aAAe3P,EAAE2P,OAAS,WAAY,CACjD,MAAMse,SAAWre,KAAKgiE,aAChB,MAAA8C,SAAWlD,WAAWvjD,SAAUwmD,aAClC,GAAAxmD,WAAaymD,SAAU,CACvBniE,SAASoc,KAAKgmD,QAAS,CACnB30E,EACAiuB,SACAre,MACDA,KACnB,CACYA,KAAKgiE,aAAe6C,YAChB,GAAAA,cAAgBC,SAAU,CAC1BniE,SAASoc,KAAKvF,QAAS,CACnBppB,EACAy0E,YACA7kE,MACDA,KACnB,CACS,SAAU6kE,YAAa,CACpBliE,SAASoc,KAAKtF,QAAS,CACnBrpB,EACAy0E,YACA7kE,MACDA,KACf,CACA,EAEA,SAASmjE,kBAAkB3B,SAAUc,UAAWvpD,IAAKuyB,WAAYu3B,aAC7D,MAAMx0C,UAAY22C,mBAAmB15B,WAAYk2B,SAAUc,UAAWvpD,KACtE,MAAM4oD,WAAasD,oBAAoBpC,YAAav3B,WAAYg3B,UAAU1pD,YACnE,MAAA,CACHyV,oBACAszC,sBAER,CACA,SAASqD,mBAAmB15B,WAAYk2B,SAAUc,UAAWvpD,KACzD,IAAImsD,eAAiB55B,WAAWh1B,KAC5B,GAAA4uD,uBAAyBA,iBAAmB,SAAU,CACrCA,eAAAA,eAAe9wC,OAAO,CAACpkC,EAAGC,IAAID,EAAEgB,OAASf,EAAEe,OAAShB,EAAIC,EACjF,CACI,OAAOuxE,SAAWc,UAAU38D,KAAO,EAAIoT,IAAImC,YAAYgqD,gBAAgB9uD,KAC3E,CACA,SAAS6uD,oBAAoBpC,YAAav3B,WAAY64B,gBAClD,IAAIxC,WAAakB,YACb,UAAOv3B,WAAWh1B,OAAS,SAAU,CACxBqrD,WAAAyC,0BAA0B94B,WAAY64B,eAC3D,CACW,OAAAxC,UACX,CACA,SAASyC,0BAA0B94B,WAAY64B,gBAC3C,MAAMrkB,YAAcxU,WAAWh1B,KAAOg1B,WAAWh1B,KAAKtlB,OAAS,EAC/D,OAAOmzE,eAAiBrkB,WAC5B,CACA,SAAS8kB,WAAW7kE,KAAMgf,MACtB,IAAKhf,OAAS,aAAeA,OAAS,cAAgBgf,KAAKvF,SAAWuF,KAAKgmD,SAAU,CAC1E,OAAA,IACf,CACI,GAAIhmD,KAAKtF,UAAY1Z,OAAS,SAAWA,OAAS,WAAY,CACnD,OAAA,IACf,CACW,OAAA,KACX,CACA,IAAIolE,cAAgB,CAChB3jE,GAAI,SACP4jE,SAAUvD,OACP,KAAAv4D,CAAO8K,MAAO0mD,MAAO52D,SACjB,MAAMinC,OAAS/2B,MAAM+2B,OAAS,IAAI02B,OAAO,CACrC9oD,IAAK3E,MAAM2E,IACX7U,gBACAkQ,cAEI68B,QAAA7a,UAAUhiB,MAAO+2B,OAAQjnC,SACzB+sC,QAAAyC,OAAOt/B,MAAO+2B,OACzB,EACD,IAAA5a,CAAMnc,OACM68B,QAAA4C,UAAUz/B,MAAOA,MAAM+2B,eACxB/2B,MAAM+2B,MAChB,EACD,YAAA+R,CAAc9oC,MAAO0mD,MAAO52D,SACxB,MAAMinC,OAAS/2B,MAAM+2B,OACb8F,QAAA7a,UAAUhiB,MAAO+2B,OAAQjnC,SACjCinC,OAAOjnC,QAAUA,OACpB,EACD,WAAAo6C,CAAalqC,OACT,MAAM+2B,OAAS/2B,MAAM+2B,OACrBA,OAAOk3B,cACPl3B,OAAOi4B,gBACV,EACD,UAAAiC,CAAYjxD,MAAO/lB,MACX,IAACA,KAAKojE,OAAQ,CACRr9C,MAAA+2B,OAAOw5B,YAAYt2E,KAAKo9B,MAC1C,CACK,EACD7Z,SAAU,CACNuD,QAAS,KACT05B,SAAU,MACVjiC,MAAO,SACP6kC,SAAU,KACVxuC,QAAS,MACT1C,OAAQ,IACR,OAAAkZ,CAASrpB,EAAGk7C,WAAYH,QACpB,MAAM1nC,OAAQ6nC,WAAW9nC,aACzB,MAAM8hE,GAAKn6B,OAAO/2B,MACd,GAAAkxD,GAAG77B,iBAAiBhmC,QAAQ,CAC5B6hE,GAAG1yD,KAAKnP,QACR6nC,WAAW5Q,OAAS,IACpC,KAAmB,CACH4qC,GAAG7yD,KAAKhP,QACR6nC,WAAW5Q,OAAS,KACpC,CACS,EACDlhB,QAAS,KACTurD,QAAS,KACT5mC,OAAQ,CACJ79B,MAAQyY,KAAMA,IAAI3E,MAAMlQ,QAAQ5D,MAChCkhE,SAAU,GACVzuD,QAAS,GACT,cAAAq4B,CAAgBh3B,OACN,MAAA8D,SAAW9D,MAAMyG,KAAK3C,SAC5B,MAAQimB,QAAQsjC,cAAEA,cAAA3kD,WAAgBA,WAAaoC,UAAAA,UAAY5e,MAAAA,OAAAA,gBAAQilE,gBAAkB7S,aAAAA,eAAqBt+C,MAAM+2B,OAAOjnC,QACvH,OAAOkQ,MAAMsjB,yBAAyBtlC,IAAKgb,OACvC,MAAMuL,MAAQvL,KAAK+rB,WAAW7O,SAASm3C,cAAgB,OAAa,GAC9D,MAAA5jD,YAAcgE,UAAUlJ,MAAMkF,aAC7B,MAAA,CACHvH,KAAM4B,SAAS9K,KAAK3J,OAAO47B,MAC3BpgB,UAAWtG,MAAMX,gBACjBqzB,UAAW/qC,OACXo6B,QAASttB,KAAKuF,QACdqjD,QAASr9C,MAAMiZ,eACfgyC,SAAUjrD,MAAMkZ,WAChB+xB,eAAgBjrC,MAAMmZ,iBACtBojC,SAAUv8C,MAAMoZ,gBAChBrc,WAAYmI,YAAYzH,MAAQyH,YAAYvB,QAAU,EACtDwD,YAAanH,MAAMV,YACnB6E,WAAYA,YAAcnE,MAAMmE,WAChCC,SAAUpE,MAAMoE,SAChBmC,UAAWA,WAAavG,MAAMuG,UAC9BwzC,aAAc6S,kBAAoB7S,cAAgB/5C,MAAM+5C,cACxDlvD,aAAc4J,KAAK3J,QAExBzD,KACnB,GAEQqW,MAAO,CACH/V,MAAQyY,KAAMA,IAAI3E,MAAMlQ,QAAQ5D,MAChC6U,QAAS,MACT05B,SAAU,SACVv4B,KAAM,KAGdkB,YAAa,CACTrF,YAAcC,OAAQA,KAAKkF,WAAW,MACtC6mB,OAAQ,CACJhsB,YAAcC,OAAQ,CACd,iBACA,SACA,QACF4C,SAAS5C,SAK3B,MAAMozD,cAAcltB,QACnB,WAAAx4C,CAAYo2B,QACEkP,QACPplC,KAAKoU,MAAQ8hB,OAAO9hB,MACpBpU,KAAKkE,QAAUgyB,OAAOhyB,QACtBlE,KAAK+Y,IAAMmd,OAAOnd,IAClB/Y,KAAKylE,cAAW,EAChBzlE,KAAKgT,SAAM,EACXhT,KAAKiT,YAAS,EACdjT,KAAK+M,UAAO,EACZ/M,KAAKgN,WAAQ,EACbhN,KAAKoW,WAAQ,EACbpW,KAAKsc,YAAS,EACdtc,KAAK6uC,cAAW,EAChB7uC,KAAKO,YAAS,EACdP,KAAKyxC,cAAW,CACxB,CACI,MAAA/b,CAAOjV,SAAUsL,WACb,MAAMhN,KAAO/e,KAAKkE,QAClBlE,KAAK+M,KAAO,EACZ/M,KAAKgT,IAAM,EACP,IAAC+L,KAAK5J,QAAS,CACfnV,KAAKoW,MAAQpW,KAAKsc,OAAStc,KAAKgN,MAAQhN,KAAKiT,OAAS,EACtD,MACZ,CACajT,KAAAoW,MAAQpW,KAAKgN,MAAQyT,SACrBzgB,KAAAsc,OAAStc,KAAKiT,OAAS8Y,UAC5B,MAAMi3B,UAAY7wD,QAAQ4sB,KAAKzI,MAAQyI,KAAKzI,KAAKtlB,OAAS,EACrDgP,KAAAylE,SAAW5jD,UAAU9C,KAAKhM,SACzB,MAAA2yD,SAAW1iB,UAAYlhC,OAAO/C,KAAKtG,MAAMG,WAAa5Y,KAAKylE,SAASnpD,OACtE,GAAAtc,KAAKqkC,eAAgB,CACrBrkC,KAAKsc,OAASopD,QAC1B,KAAe,CACH1lE,KAAKoW,MAAQsvD,QACzB,CACA,CACI,YAAArhC,GACU,MAAAxZ,IAAM7qB,KAAKkE,QAAQ2qC,SAClB,OAAAhkB,MAAQ,OAASA,MAAQ,QACxC,CACI,SAAA86C,CAAUvwD,QACN,MAAMpC,IAAEA,IAAMjG,KAAAA,KAAAkG,OAAOA,OAASjG,MAAAA,MAAA9I,QAAQA,SAAalE,KACnD,MAAM4M,MAAQ1I,QAAQ0I,MACtB,IAAImQ,SAAW,EACf,IAAI0D,SAAU26B,OAAQC,OAClB,GAAAr7C,KAAKqkC,eAAgB,CACZ+W,OAAAvuC,eAAeD,MAAOG,KAAMC,OACrCquC,OAASroC,IAAMoC,OACfqL,SAAWzT,MAAQD,IAC/B,KAAe,CACC,GAAA7I,QAAQ2qC,WAAa,OAAQ,CAC7BuM,OAASruC,KAAOqI,OACPimC,OAAAxuC,eAAeD,MAAOqG,OAAQD,KACvC+J,SAAWhX,IAAK,EAChC,KAAmB,CACHq1C,OAASpuC,MAAQoI,OACRimC,OAAAxuC,eAAeD,MAAOoG,IAAKC,QACpC8J,SAAWhX,GAAK,EAChC,CACY0a,SAAWxN,OAASD,GAChC,CACe,MAAA,CACHooC,cACAC,cACA56B,kBACA1D,kBAEZ,CACI,IAAA2W,GACI,MAAM3a,IAAM/Y,KAAK+Y,IACjB,MAAMgG,KAAO/e,KAAKkE,QACd,IAAC6a,KAAK5J,QAAS,CACf,MACZ,CACc,MAAAywD,SAAW9jD,OAAO/C,KAAKtG,MAC7B,MAAMG,WAAagtD,SAAShtD,WAC5B,MAAMxD,OAASwD,WAAa,EAAI5Y,KAAKylE,SAASzyD,IACxC,MAAAooC,OAAEA,cAASC,OAAS56B,SAAAA,SAAA1D,SAAWA,UAAc/c,KAAK2lE,UAAUvwD,QAClE+K,WAAWpH,IAAKgG,KAAKzI,KAAM,EAAG,EAAGsvD,SAAU,CACvCtlE,MAAOye,KAAKze,MACZmgB,kBACA1D,kBACAmC,UAAWvS,mBAAmBoS,KAAKnS,OACnCuS,aAAc,SACdH,YAAa,CACTo8B,OACAC,SAGhB,EAEA,SAASwqB,YAAYzxD,MAAOqrC,WAClB,MAAAppC,MAAQ,IAAImvD,MAAM,CACpBzsD,IAAK3E,MAAM2E,IACX7U,QAASu7C,UACTrrC,cAEI68B,QAAA7a,UAAUhiB,MAAOiC,MAAOopC,WACxBxO,QAAAyC,OAAOt/B,MAAOiC,OACtBjC,MAAM0xD,WAAazvD,KACvB,CACA,IAAI0vD,aAAe,CACfvkE,GAAI,QACP4jE,SAAUI,MACP,KAAAl8D,CAAO8K,MAAO0mD,MAAO52D,SACjB2hE,YAAYzxD,MAAOlQ,QACtB,EACD,IAAAqsB,CAAMnc,OACF,MAAM0xD,WAAa1xD,MAAM0xD,WACjB70B,QAAA4C,UAAUz/B,MAAO0xD,mBAClB1xD,MAAM0xD,UAChB,EACD,YAAA5oB,CAAc9oC,MAAO0mD,MAAO52D,SACxB,MAAMmS,MAAQjC,MAAM0xD,WACZ70B,QAAA7a,UAAUhiB,MAAOiC,MAAOnS,SAChCmS,MAAMnS,QAAUA,OACnB,EACD0N,SAAU,CACNhF,MAAO,SACPuI,QAAS,MACTsD,KAAM,CACFlY,OAAQ,QAEZkxC,SAAU,KACV1+B,QAAS,GACT87B,SAAU,MACVv4B,KAAM,GACN/V,OAAQ,KAEZykD,cAAe,CACX1kD,MAAO,SAEXkX,YAAa,CACTrF,YAAa,KACbD,WAAY,QAIpB,MAAM9f,QAAU4zE,QAChB,IAAIC,gBAAkB,CAClBzkE,GAAI,WACJ,KAAA8H,CAAO8K,MAAO0mD,MAAO52D,SACX,MAAAmS,MAAQ,IAAImvD,MAAM,CACpBzsD,IAAK3E,MAAM2E,IACX7U,gBACAkQ,cAEI68B,QAAA7a,UAAUhiB,MAAOiC,MAAOnS,SACxB+sC,QAAAyC,OAAOt/B,MAAOiC,OAClBjkB,IAAA0Z,IAAIsI,MAAOiC,MAClB,EACD,IAAAka,CAAMnc,OACF68B,QAAQ4C,UAAUz/B,MAAOhiB,IAAIshB,IAAIU,QACjChiB,IAAIuzB,OAAOvR,MACd,EACD,YAAA8oC,CAAc9oC,MAAO0mD,MAAO52D,SAClB,MAAAmS,MAAQjkB,IAAIshB,IAAIU,OACd68B,QAAA7a,UAAUhiB,MAAOiC,MAAOnS,SAChCmS,MAAMnS,QAAUA,OACnB,EACD0N,SAAU,CACNhF,MAAO,SACPuI,QAAS,MACTsD,KAAM,CACFlY,OAAQ,UAEZkxC,SAAU,KACV1+B,QAAS,EACT87B,SAAU,MACVv4B,KAAM,GACN/V,OAAQ,MAEZykD,cAAe,CACX1kD,MAAO,SAEXkX,YAAa,CACTrF,YAAa,KACbD,WAAY,QAIpB,MAAMg0D,YAAc,CACnB,OAAAC,CAASt6D,OACE,IAACA,MAAM7a,OAAQ,CACR,OAAA,KACnB,CACQ,IAAIa,EAAGd,IACH,IAAAq1E,SAAWr6D,IACf,IAAIjH,EAAI,EACR,IAAI0I,MAAQ,EACR,IAAA3b,EAAI,EAAGd,IAAM8a,MAAM7a,OAAQa,EAAId,MAAOc,EAAE,CAClC,MAAA04B,GAAK1e,MAAMha,GAAGs4B,QAChB,GAAAI,IAAMA,GAAGiuB,WAAY,CACf,MAAA3tB,IAAMN,GAAGguB,kBACV6tB,KAAA5jD,IAAIqI,IAAI53B,GACb6R,GAAK+lB,IAAI/lB,IACP0I,KAClB,CACA,CACQ,GAAIA,QAAU,GAAK44D,KAAKzgE,OAAS,EAAG,CACzB,OAAA,KACnB,CACQ,MAAM0gE,SAAW,IACVD,MACLhyC,OAAO,CAACpkC,EAAGC,IAAID,EAAIC,GAAKm2E,KAAKzgE,KACxB,MAAA,CACH1S,EAAGozE,SACHvhE,EAAGA,EAAI0I,MAEd,EACJ,OAAA+iC,CAAS1kC,MAAOy6D,eACL,IAACz6D,MAAM7a,OAAQ,CACR,OAAA,KACnB,CACQ,IAAIiC,EAAIqzE,cAAcrzE,EACtB,IAAI6R,EAAIwhE,cAAcxhE,EACtB,IAAIgrC,YAAc7tC,OAAOkE,kBACzB,IAAItU,EAAGd,IAAKw1E,eACR,IAAA10E,EAAI,EAAGd,IAAM8a,MAAM7a,OAAQa,EAAId,MAAOc,EAAE,CAClC,MAAA04B,GAAK1e,MAAMha,GAAGs4B,QAChB,GAAAI,IAAMA,GAAGiuB,WAAY,CACf,MAAA3S,OAAStb,GAAGwlB,iBACZ,MAAA5/C,EAAI6Y,sBAAsBs9D,cAAezgC,QAC/C,GAAI11C,EAAI2/C,YAAa,CACHA,YAAA3/C,EACGo2E,eAAAh8C,EACrC,CACA,CACA,CACQ,GAAIg8C,eAAgB,CACV,MAAAC,GAAKD,eAAehuB,kBAC1BtlD,EAAIuzE,GAAGvzE,EACP6R,EAAI0hE,GAAG1hE,CACnB,CACe,MAAA,CACH7R,IACA6R,IAEZ,GAEA,SAAS2hE,aAAan7D,KAAMo7D,QACxB,GAAIA,OAAQ,CACJ,GAAAv0E,QAAQu0E,QAAS,CACjBx0E,MAAMyP,UAAUuD,KAAKpC,MAAMwI,KAAMo7D,OAC7C,KAAe,CACHp7D,KAAKpG,KAAKwhE,OACtB,CACA,CACW,OAAAp7D,IACX,CACC,SAASq7D,cAAc71E,KACf,WAAOA,MAAQ,UAAYA,eAAe81E,SAAW91E,IAAIkT,QAAQ,OAAY,EAAA,CACvE,OAAAlT,IAAIrC,MAAM,KACzB,CACW,OAAAqC,GACX,CACC,SAAS+1E,kBAAkBzyD,MAAOxO,MAC/B,MAAMukB,QAAEA,QAAA3mB,aAAUA,aAAeC,MAAAA,QAAWmC,KAC5C,MAAMuzB,WAAa/kB,MAAM0oB,eAAet5B,cAAc21B,WACtD,MAAMkG,MAAEA,MAAQ39B,MAAAA,OAAWy3B,WAAWiG,iBAAiB37B,QAChD,MAAA,CACH2Q,YACAirB,YACA1Y,OAAQwS,WAAWqF,UAAU/6B,QAC7By2B,IAAK9lB,MAAMyG,KAAK3C,SAAS1U,cAAcqX,KAAKpX,QAC5CqjE,eAAgBplE,MAChBoM,QAASqrB,WAAW6C,aACpB/B,UAAWx2B,OACXD,0BACA2mB,gBAER,CACC,SAAS48C,eAAeC,QAAS9iE,SACxB,MAAA6U,IAAMiuD,QAAQ5yD,MAAM2E,IAC1B,MAAMkuD,KAAEA,KAAAC,OAAOA,OAAS7wD,MAAAA,OAAW2wD,QAC7B,MAAAxF,SAAEA,SAAWD,UAAAA,WAAer9D,QAC5B,MAAAijE,SAAWrlD,OAAO5d,QAAQijE,UAC1B,MAAA9C,UAAYviD,OAAO5d,QAAQmgE,WAC3B,MAAA+C,WAAatlD,OAAO5d,QAAQkjE,YAClC,MAAMC,eAAiBhxD,MAAMrlB,OAC7B,MAAMs2E,gBAAkBJ,OAAOl2E,OAC/B,MAAMu2E,kBAAoBN,KAAKj2E,OACzB,MAAA+hB,QAAU8O,UAAU3d,QAAQ6O,SAClC,IAAIuJ,OAASvJ,QAAQuJ,OACrB,IAAIlG,MAAQ,EACZ,IAAIoxD,mBAAqBP,KAAK7yC,OAAO,CAAC5mB,MAAOi6D,WAAWj6D,MAAQi6D,SAASC,OAAO12E,OAASy2E,SAASrnD,MAAMpvB,OAASy2E,SAASE,MAAM32E,OAAQ,GACxIw2E,oBAAsBR,QAAQY,WAAW52E,OAASg2E,QAAQa,UAAU72E,OACpE,GAAIq2E,eAAgB,CAChB/qD,QAAU+qD,eAAiBhD,UAAUzrD,YAAcyuD,eAAiB,GAAKnjE,QAAQ4jE,aAAe5jE,QAAQ6jE,iBAChH,CACI,GAAIP,mBAAoB,CACd,MAAAQ,eAAiB9jE,QAAQ+jE,cAAgB/4E,KAAKC,IAAIoyE,UAAW4F,SAASvuD,YAAcuuD,SAASvuD,WACzF0D,QAAAirD,kBAAoBS,gBAAkBR,mBAAqBD,mBAAqBJ,SAASvuD,YAAc4uD,mBAAqB,GAAKtjE,QAAQgkE,WAC3J,CACI,GAAIZ,gBAAiB,CACjBhrD,QAAUpY,QAAQikE,gBAAkBb,gBAAkBF,WAAWxuD,YAAc0uD,gBAAkB,GAAKpjE,QAAQkkE,aACtH,CACI,IAAIC,aAAe,EACb,MAAAC,aAAe,SAASjpD,MAClBjJ,MAAAlnB,KAAKC,IAAIinB,MAAO2C,IAAImC,YAAYmE,MAAMjJ,MAAQiyD,aACzD,EACDtvD,IAAIwC,OACJxC,IAAIN,KAAO4rD,UAAUrpD,OAChBjY,KAAAikE,QAAQ3wD,MAAOiyD,cACpBvvD,IAAIN,KAAO0uD,SAASnsD,OACpBjY,KAAKikE,QAAQY,WAAWrlC,OAAOykC,QAAQa,WAAYS,cACnDD,aAAenkE,QAAQ+jE,cAAgBzG,SAAW,EAAIt9D,QAAQmuC,WAAa,EACtEtvC,KAAAkkE,KAAOQ,WACH1kE,KAAA0kE,SAASC,OAAQY,cACjBvlE,KAAA0kE,SAASrnD,MAAOkoD,cAChBvlE,KAAA0kE,SAASE,MAAOW,gBAEVD,aAAA,EACftvD,IAAIN,KAAO2uD,WAAWpsD,OACjBjY,KAAAikE,QAAQE,OAAQoB,cACrBvvD,IAAI4C,UACJvF,OAASrD,QAAQqD,MACV,MAAA,CACHA,YACAkG,cAER,CACA,SAASisD,gBAAgBn0D,MAAOzO,MACtB,MAAAb,EAAEA,EAAIwX,OAAAA,QAAY3W,KACpB,GAAAb,EAAIwX,OAAS,EAAG,CACT,MAAA,KACV,MAAU,GAAAxX,EAAIsP,MAAMkI,OAASA,OAAS,EAAG,CAC/B,MAAA,QACf,CACW,MAAA,QACX,CACA,SAASksD,oBAAoBC,OAAQr0D,MAAOlQ,QAASyB,MAC3C,MAAA1S,EAAEA,EAAImjB,MAAAA,OAAWzQ,KACjB,MAAA+iE,MAAQxkE,QAAQykE,UAAYzkE,QAAQ0kE,aAC1C,GAAIH,SAAW,QAAUx1E,EAAImjB,MAAQsyD,MAAQt0D,MAAMgC,MAAO,CAC/C,OAAA,IACf,CACI,GAAIqyD,SAAW,SAAWx1E,EAAImjB,MAAQsyD,MAAQ,EAAG,CACtC,OAAA,IACf,CACA,CACA,SAASG,gBAAgBz0D,MAAOlQ,QAASyB,KAAMmjE,QACrC,MAAA71E,EAAEA,EAAImjB,MAAAA,OAAWzQ,KACjB,MAAEyQ,MAAO2yD,WAAa72C,WAAWnlB,KAAEA,KAAOC,MAAAA,QAAcoH,MAC9D,IAAIq0D,OAAS,SACb,GAAIK,SAAW,SAAU,CACrBL,OAASx1E,IAAM8Z,KAAOC,OAAS,EAAI,OAAS,OACpD,MAAA,GAAe/Z,GAAKmjB,MAAQ,EAAG,CACdqyD,OAAA,MACZ,MAAU,GAAAx1E,GAAK81E,WAAa3yD,MAAQ,EAAG,CAC3BqyD,OAAA,OACjB,CACI,GAAID,oBAAoBC,OAAQr0D,MAAOlQ,QAASyB,MAAO,CAC1C8iE,OAAA,QACjB,CACW,OAAAA,MACX,CACC,SAASO,mBAAmB50D,MAAOlQ,QAASyB,MACzC,MAAMmjE,OAASnjE,KAAKmjE,QAAU5kE,QAAQ4kE,QAAUP,gBAAgBn0D,MAAOzO,MAChE,MAAA,CACH8iE,OAAQ9iE,KAAK8iE,QAAUvkE,QAAQukE,QAAUI,gBAAgBz0D,MAAOlQ,QAASyB,KAAMmjE,QAC/EA,cAER,CACA,SAASG,OAAOtjE,KAAM8iE,QACd,IAAAx1E,EAAEA,EAAImjB,MAAAA,OAAWzQ,KACrB,GAAI8iE,SAAW,QAAS,CACfx1E,GAAAmjB,KACb,MAAA,GAAeqyD,SAAW,SAAU,CAC5Bx1E,GAAKmjB,MAAQ,CACrB,CACW,OAAAnjB,CACX,CACA,SAASi2E,OAAOvjE,KAAMmjE,OAAQK,gBACtB,IAAArkE,EAAEA,EAAIwX,OAAAA,QAAY3W,KACtB,GAAImjE,SAAW,MAAO,CACbhkE,GAAAqkE,cACb,MAAA,GAAeL,SAAW,SAAU,CAC5BhkE,GAAKwX,OAAS6sD,cACtB,KAAW,CACHrkE,GAAKwX,OAAS,CACtB,CACW,OAAAxX,CACX,CACC,SAASskE,mBAAmBllE,QAASyB,KAAM0jE,UAAWj1D,OACnD,MAAMu0D,UAAEA,UAAAC,aAAYA,aAAejsD,aAAAA,cAAkBzY,QAC/C,MAAAukE,OAAEA,OAASK,OAAAA,QAAYO,UAC7B,MAAMF,eAAiBR,UAAYC,aACnC,MAAMhoD,QAAEA,QAAUG,SAAAA,SAAAF,WAAWA,uBAAaC,aAAiBc,cAAcjF,cACrE,IAAA1pB,EAAIg2E,OAAOtjE,KAAM8iE,QACrB,MAAM3jE,EAAIokE,OAAOvjE,KAAMmjE,OAAQK,gBAC/B,GAAIL,SAAW,SAAU,CACrB,GAAIL,SAAW,OAAQ,CACdx1E,GAAAk2E,cACjB,MAAA,GAAmBV,SAAW,QAAS,CACtBx1E,GAAAk2E,cACjB,CACA,MAAA,GAAeV,SAAW,OAAQ,CAC1Bx1E,GAAK/D,KAAKC,IAAIyxB,QAASC,YAAc8nD,SAC7C,MAAA,GAAeF,SAAW,QAAS,CAC3Bx1E,GAAK/D,KAAKC,IAAI4xB,SAAUD,aAAe6nD,SAC/C,CACW,MAAA,CACH11E,EAAG4W,YAAY5W,EAAG,EAAGmhB,MAAMgC,MAAQzQ,KAAKyQ,OACxCtR,EAAG+E,YAAY/E,EAAG,EAAGsP,MAAMkI,OAAS3W,KAAK2W,QAEjD,CACA,SAASgtD,YAAYtC,QAASp6D,MAAO1I,SAC3B,MAAA6O,QAAU8O,UAAU3d,QAAQ6O,SAClC,OAAOnG,QAAU,SAAWo6D,QAAQ/zE,EAAI+zE,QAAQ5wD,MAAQ,EAAIxJ,QAAU,QAAUo6D,QAAQ/zE,EAAI+zE,QAAQ5wD,MAAQrD,QAAQ/F,MAAQg6D,QAAQ/zE,EAAI8f,QAAQhG,IACpJ,CACC,SAASw8D,wBAAwB5mE,WAC9B,OAAO8jE,aAAa,GAAIE,cAAchkE,WAC1C,CACA,SAAS6mE,qBAAqBvjD,OAAQ+gD,QAASyC,cAC3C,OAAOhnD,cAAcwD,OAAQ,CACzB+gD,gBACAyC,0BACA1pE,KAAM,WAEd,CACA,SAAS2pE,kBAAkB12C,UAAW5a,SAC5B,MAAA6B,SAAW7B,SAAWA,QAAQtK,SAAWsK,QAAQtK,QAAQk5D,SAAW5uD,QAAQtK,QAAQk5D,QAAQh0C,UAClG,OAAO/Y,SAAW+Y,UAAU/Y,SAASA,UAAY+Y,SACrD,CACA,MAAM22C,iBAAmB,CACrBC,YAAatoE,KACb,KAAA+U,CAAOozD,cACC,GAAAA,aAAaz4E,OAAS,EAAG,CACnB,MAAA4U,KAAO6jE,aAAa,GACpB,MAAAtrC,OAASv4B,KAAKwO,MAAMyG,KAAKsjB,OACzB,MAAA0rC,WAAa1rC,OAASA,OAAOntC,OAAS,EAC5C,GAAIgP,MAAQA,KAAKkE,SAAWlE,KAAKkE,QAAQkV,OAAS,UAAW,CAClD,OAAAxT,KAAKkI,QAAQuxB,OAAS,EAC7C,MAAA,GAAuBz5B,KAAKy5B,MAAO,CACnB,OAAOz5B,KAAKy5B,KACf,MAAU,GAAAwqC,WAAa,GAAKjkE,KAAKq0B,UAAY4vC,WAAY,CAC/C,OAAA1rC,OAAOv4B,KAAKq0B,UACnC,CACA,CACe,MAAA,EACV,EACD6vC,WAAYxoE,KACZsmE,WAAYtmE,KACZyoE,YAAazoE,KACb,KAAA+9B,CAAO2qC,aACH,GAAIhqE,MAAQA,KAAKkE,SAAWlE,KAAKkE,QAAQkV,OAAS,UAAW,CACzD,OAAO4wD,YAAY3qC,MAAQ,KAAO2qC,YAAYlD,gBAAkBkD,YAAYlD,cACxF,CACY,IAAAznC,MAAQ2qC,YAAYl8D,QAAQuxB,OAAS,GACzC,GAAIA,MAAO,CACEA,OAAA,IACrB,CACQ,MAAM39B,MAAQsoE,YAAYlD,eACtB,IAACrlE,cAAcC,OAAQ,CACd29B,OAAA39B,KACrB,CACe,OAAA29B,KACV,EACD,UAAA4qC,CAAYD,aACR,MAAM58D,KAAO48D,YAAY51D,MAAM0oB,eAAektC,YAAYxmE,cAC1D,MAAMU,QAAUkJ,KAAK+rB,WAAW7O,SAAS0/C,YAAY/vC,WAC9C,MAAA,CACHhiB,YAAa/T,QAAQ+T,YACrBD,gBAAiB9T,QAAQ8T,gBACzB6F,YAAa3Z,QAAQ2Z,YACrBgU,WAAY3tB,QAAQ2tB,WACpBC,iBAAkB5tB,QAAQ4tB,iBAC1B4gC,aAAc,EAErB,EACD,cAAAwX,GACI,OAAOlqE,KAAKkE,QAAQimE,SACvB,EACD,eAAAC,CAAiBJ,aACb,MAAM58D,KAAO48D,YAAY51D,MAAM0oB,eAAektC,YAAYxmE,cAC1D,MAAMU,QAAUkJ,KAAK+rB,WAAW7O,SAAS0/C,YAAY/vC,WAC9C,MAAA,CACHnd,WAAY5Y,QAAQ4Y,WACpBC,SAAU7Y,QAAQ6Y,SAEzB,EACDstD,WAAY/oE,KACZumE,UAAWvmE,KACXgpE,aAAchpE,KACd4lE,OAAQ5lE,KACRipE,YAAajpE,MAEhB,SAASkpE,2BAA2Bx3C,UAAW5gB,KAAM2G,IAAKstC,KACvD,MAAMj/C,OAAS4rB,UAAU5gB,MAAMvQ,KAAKkX,IAAKstC,KACrC,UAAOj/C,SAAW,YAAa,CAC/B,OAAOuiE,iBAAiBv3D,MAAMvQ,KAAKkX,IAAKstC,IAChD,CACW,OAAAj/C,MACX,CACA,MAAMqjE,gBAAgBnyB,QAElB,WAAAx4C,CAAYo2B,QACDkP,QACPplC,KAAK0qE,QAAU,EACf1qE,KAAK2zB,QAAU,GACf3zB,KAAK2qE,oBAAiB,EACtB3qE,KAAK4qE,WAAQ,EACb5qE,KAAK6qE,uBAAoB,EACzB7qE,KAAK8qE,cAAgB,GACrB9qE,KAAK+2B,iBAAc,EACnB/2B,KAAKu7B,cAAW,EAChBv7B,KAAKoU,MAAQ8hB,OAAO9hB,MACpBpU,KAAKkE,QAAUgyB,OAAOhyB,QACtBlE,KAAK+qE,gBAAa,EAClB/qE,KAAKqW,WAAQ,EACbrW,KAAK4nE,gBAAa,EAClB5nE,KAAKinE,UAAO,EACZjnE,KAAK6nE,eAAY,EACjB7nE,KAAKknE,YAAS,EACdlnE,KAAKyoE,YAAS,EACdzoE,KAAK8oE,YAAS,EACd9oE,KAAK/M,OAAI,EACT+M,KAAK8E,OAAI,EACT9E,KAAKsc,YAAS,EACdtc,KAAKoW,WAAQ,EACbpW,KAAKgrE,YAAS,EACdhrE,KAAKirE,YAAS,EACdjrE,KAAKkrE,iBAAc,EACnBlrE,KAAKmrE,sBAAmB,EACxBnrE,KAAKorE,qBAAkB,CAC/B,CACI,UAAAzvC,CAAWz3B,SACPlE,KAAKkE,QAAUA,QACflE,KAAK6qE,uBAAoB,EACzB7qE,KAAKu7B,cAAW,CACxB,CACC,kBAAAwE,GACO,MAAMzF,OAASt6B,KAAK6qE,kBACpB,GAAIvwC,OAAQ,CACD,OAAAA,MACnB,CACQ,MAAMlmB,MAAQpU,KAAKoU,MACnB,MAAMlQ,QAAUlE,KAAKkE,QAAQygB,WAAW3kB,KAAKmc,cAC7C,MAAM4C,KAAO7a,QAAQ80C,SAAW5kC,MAAMlQ,QAAQqO,WAAarO,QAAQwO,WACnE,MAAMA,WAAa,IAAIujB,WAAWj2B,KAAKoU,MAAO2K,MAC9C,GAAIA,KAAKoE,WAAY,CACZnjB,KAAA6qE,kBAAoB/sE,OAAOgiC,OAAOptB,WACnD,CACe,OAAAA,UACf,CACC,UAAAyJ,GACc,OAAAnc,KAAKu7B,WAAav7B,KAAKu7B,SAAWiuC,qBAAqBxpE,KAAKoU,MAAM+H,aAAcnc,KAAMA,KAAK8qE,eAC1G,CACI,QAAAO,CAASjzD,QAASlU,SACR,MAAA8uB,UAAEA,WAAe9uB,QACvB,MAAM0lE,YAAcY,2BAA2Bx3C,UAAW,cAAehzB,KAAMoY,SAC/E,MAAM/B,MAAQm0D,2BAA2Bx3C,UAAW,QAAShzB,KAAMoY,SACnE,MAAM0xD,WAAaU,2BAA2Bx3C,UAAW,aAAchzB,KAAMoY,SAC7E,IAAIgI,MAAQ,GACZA,MAAQqmD,aAAarmD,MAAOumD,cAAciD,cAC1CxpD,MAAQqmD,aAAarmD,MAAOumD,cAActwD,QAC1C+J,MAAQqmD,aAAarmD,MAAOumD,cAAcmD,aACnC,OAAA1pD,KACf,CACI,aAAAkrD,CAAc7B,aAAcvlE,SACxB,OAAOqlE,wBAAwBiB,2BAA2BtmE,QAAQ8uB,UAAW,aAAchzB,KAAMypE,cACzG,CACI,OAAA8B,CAAQ9B,aAAcvlE,SACZ,MAAA8uB,UAAEA,WAAe9uB,QACvB,MAAMsnE,UAAY,GACbzoE,KAAA0mE,aAAerxD,UAChB,MAAMqvD,SAAW,CACbC,OAAQ,GACRtnD,MAAO,GACPunD,MAAO,IAEL,MAAA8D,OAAS/B,kBAAkB12C,UAAW5a,SAC/BquD,aAAAgB,SAASC,OAAQf,cAAc6D,2BAA2BiB,OAAQ,cAAezrE,KAAMoY,WACpGquD,aAAagB,SAASrnD,MAAOoqD,2BAA2BiB,OAAQ,QAASzrE,KAAMoY,UAClEquD,aAAAgB,SAASE,MAAOhB,cAAc6D,2BAA2BiB,OAAQ,aAAczrE,KAAMoY,WAClGozD,UAAUtmE,KAAKuiE,YAEZ,OAAA+D,SACf,CACI,YAAAE,CAAajC,aAAcvlE,SACvB,OAAOqlE,wBAAwBiB,2BAA2BtmE,QAAQ8uB,UAAW,YAAahzB,KAAMypE,cACxG,CACI,SAAAkC,CAAUlC,aAAcvlE,SACd,MAAA8uB,UAAEA,WAAe9uB,QACvB,MAAMomE,aAAeE,2BAA2Bx3C,UAAW,eAAgBhzB,KAAMypE,cACjF,MAAMvC,OAASsD,2BAA2Bx3C,UAAW,SAAUhzB,KAAMypE,cACrE,MAAMc,YAAcC,2BAA2Bx3C,UAAW,cAAehzB,KAAMypE,cAC/E,IAAIrpD,MAAQ,GACZA,MAAQqmD,aAAarmD,MAAOumD,cAAc2D,eAC1ClqD,MAAQqmD,aAAarmD,MAAOumD,cAAcO,SAC1C9mD,MAAQqmD,aAAarmD,MAAOumD,cAAc4D,cACnC,OAAAnqD,KACf,CACC,YAAAwrD,CAAa1nE,SACN,MAAMoO,OAAStS,KAAK2zB,QACd,MAAA9Y,KAAO7a,KAAKoU,MAAMyG,KACxB,MAAMqwD,YAAc,GACpB,MAAMC,iBAAmB,GACzB,MAAMC,gBAAkB,GACxB,IAAI3B,aAAe,GACnB,IAAI53E,EAAGd,IACH,IAAAc,EAAI,EAAGd,IAAMuhB,OAAOthB,OAAQa,EAAId,MAAOc,EAAE,CACzC43E,aAAavkE,KAAK2hE,kBAAkB7mE,KAAKoU,MAAO9B,OAAOzgB,IACnE,CACQ,GAAIqS,QAAQ4hB,OAAQ,CAChB2jD,aAAeA,aAAa3jD,OAAO,CAACqE,QAAS1mB,OAAOuE,QAAQ9D,QAAQ4hB,OAAOqE,QAAS1mB,OAAOuE,MAAO6S,MAC9G,CACQ,GAAI3W,QAAQ2nE,SAAU,CACHpC,aAAAA,aAAaniE,KAAK,CAACtX,EAAGC,IAAIiU,QAAQ2nE,SAAS77E,EAAGC,EAAG4qB,MAC5E,CACa9X,KAAA0mE,aAAerxD,UAChB,MAAMqzD,OAAS/B,kBAAkBxlE,QAAQ8uB,UAAW5a,SACpD8yD,YAAYhmE,KAAKslE,2BAA2BiB,OAAQ,aAAczrE,KAAMoY,UACxE+yD,iBAAiBjmE,KAAKslE,2BAA2BiB,OAAQ,kBAAmBzrE,KAAMoY,UAClFgzD,gBAAgBlmE,KAAKslE,2BAA2BiB,OAAQ,iBAAkBzrE,KAAMoY,YAEpFpY,KAAKkrE,YAAcA,YACnBlrE,KAAKmrE,iBAAmBA,iBACxBnrE,KAAKorE,gBAAkBA,gBACvBprE,KAAK+qE,WAAatB,aACX,OAAAA,YACf,CACI,MAAA/zC,CAAOzmB,QAASwiD,QACZ,MAAMvtD,QAAUlE,KAAKkE,QAAQygB,WAAW3kB,KAAKmc,cAC7C,MAAM7J,OAAStS,KAAK2zB,QAChB,IAAAthB,WACJ,IAAIo3D,aAAe,GACf,IAACn3D,OAAOthB,OAAQ,CACZ,GAAAgP,KAAK0qE,UAAY,EAAG,CACPr4D,WAAA,CACTq4D,QAAS,EAE7B,CACA,KAAe,CACG,MAAA77B,SAAWq3B,YAAYhiE,QAAQ2qC,UAAUhtC,KAAK7B,KAAMsS,OAAQtS,KAAK2qE,gBACxDlB,aAAAzpE,KAAK4rE,aAAa1nE,SACjClE,KAAKqW,MAAQrW,KAAKqrE,SAAS5B,aAAcvlE,SACzClE,KAAK4nE,WAAa5nE,KAAKsrE,cAAc7B,aAAcvlE,SACnDlE,KAAKinE,KAAOjnE,KAAKurE,QAAQ9B,aAAcvlE,SACvClE,KAAK6nE,UAAY7nE,KAAK0rE,aAAajC,aAAcvlE,SACjDlE,KAAKknE,OAASlnE,KAAK2rE,UAAUlC,aAAcvlE,SAC3C,MAAMyB,KAAO3F,KAAK4qE,MAAQ7D,eAAe/mE,KAAMkE,SAC/C,MAAM4nE,gBAAkBhuE,OAAO0B,OAAO,CAAA,EAAIqvC,SAAUlpC,MACpD,MAAM0jE,UAAYL,mBAAmBhpE,KAAKoU,MAAOlQ,QAAS4nE,iBAC1D,MAAMC,gBAAkB3C,mBAAmBllE,QAAS4nE,gBAAiBzC,UAAWrpE,KAAKoU,OACrFpU,KAAKyoE,OAASY,UAAUZ,OACxBzoE,KAAK8oE,OAASO,UAAUP,OACXz2D,WAAA,CACTq4D,QAAS,EACTz3E,EAAG84E,gBAAgB94E,EACnB6R,EAAGinE,gBAAgBjnE,EACnBsR,MAAOzQ,KAAKyQ,MACZkG,OAAQ3W,KAAK2W,OACb0uD,OAAQn8B,SAAS57C,EACjBg4E,OAAQp8B,SAAS/pC,EAEjC,CACQ9E,KAAK8qE,cAAgBrB,aACrBzpE,KAAKu7B,cAAW,EAChB,GAAIlpB,WAAY,CACZrS,KAAK+/B,qBAAqBrK,OAAO11B,KAAMqS,WACnD,CACY,GAAApD,SAAW/K,QAAQ8nE,SAAU,CACrB9nE,QAAA8nE,SAASnqE,KAAK7B,KAAM,CACxBoU,MAAOpU,KAAKoU,MACZ4yD,QAAShnE,KACTyxD,eAEhB,CACA,CACI,SAAAwa,CAAUC,aAAcnzD,IAAKpT,KAAMzB,SAC/B,MAAMioE,cAAgBnsE,KAAKosE,iBAAiBF,aAAcvmE,KAAMzB,SAChE6U,IAAI0E,OAAO0uD,cAAchqB,GAAIgqB,cAAc/pB,IAC3CrpC,IAAI0E,OAAO0uD,cAAc9pB,GAAI8pB,cAAc7pB,IAC3CvpC,IAAI0E,OAAO0uD,cAAcE,GAAIF,cAAcG,GACnD,CACI,gBAAAF,CAAiBF,aAAcvmE,KAAMzB,SAC3B,MAAAukE,OAAEA,OAASK,OAAAA,QAAY9oE,KACvB,MAAA2oE,UAAEA,UAAYhsD,aAAAA,cAAkBzY,QACtC,MAAM0c,QAAEA,QAAUG,SAAAA,SAAAF,WAAWA,uBAAaC,aAAiBc,cAAcjF,cACzE,MAAQ1pB,EAAGs5E,IAAMznE,EAAG0nE,KAASN,aACvB,MAAA91D,MAAEA,MAAQkG,OAAAA,QAAY3W,KAC5B,IAAIw8C,GAAIE,GAAIgqB,GAAIjqB,GAAIE,GAAIgqB,GACxB,GAAIxD,SAAW,SAAU,CACrBxmB,GAAKkqB,IAAMlwD,OAAS,EACpB,GAAImsD,SAAW,OAAQ,CACdtmB,GAAAoqB,IACLlqB,GAAKF,GAAKwmB,UACVvmB,GAAKE,GAAKqmB,UACV2D,GAAKhqB,GAAKqmB,SAC1B,KAAmB,CACHxmB,GAAKoqB,IAAMn2D,MACXisC,GAAKF,GAAKwmB,UACVvmB,GAAKE,GAAKqmB,UACV2D,GAAKhqB,GAAKqmB,SAC1B,CACiB0D,GAAAlqB,EACjB,KAAe,CACH,GAAIsmB,SAAW,OAAQ,CACnBpmB,GAAKkqB,IAAMr9E,KAAKC,IAAIyxB,QAASC,YAAc8nD,SAC3D,MAAA,GAAuBF,SAAW,QAAS,CAC3BpmB,GAAKkqB,IAAMn2D,MAAQlnB,KAAKC,IAAI4xB,SAAUD,aAAe6nD,SACrE,KAAmB,CACHtmB,GAAKriD,KAAKgrE,MAC1B,CACY,GAAIlC,SAAW,MAAO,CACb1mB,GAAAoqB,IACLlqB,GAAKF,GAAKumB,UACVxmB,GAAKE,GAAKsmB,UACV0D,GAAKhqB,GAAKsmB,SAC1B,KAAmB,CACHvmB,GAAKoqB,IAAMlwD,OACXgmC,GAAKF,GAAKumB,UACVxmB,GAAKE,GAAKsmB,UACV0D,GAAKhqB,GAAKsmB,SAC1B,CACiB2D,GAAAlqB,EACjB,CACe,MAAA,CACHD,MACAE,MACAgqB,MACAjqB,MACAE,MACAgqB,MAEZ,CACI,SAAAroB,CAAUn7B,GAAI/P,IAAK7U,SACf,MAAMmS,MAAQrW,KAAKqW,MACnB,MAAMrlB,OAASqlB,MAAMrlB,OACrB,IAAIqzE,UAAWyD,aAAcj2E,EAC7B,GAAIb,OAAQ,CACR,MAAMqyE,UAAY70C,cAActqB,QAAQ+I,IAAKjN,KAAK/M,EAAG+M,KAAKoW,OAC1D0S,GAAG71B,EAAIq2E,YAAYtpE,KAAMkE,QAAQg3C,WAAYh3C,SAC7C6U,IAAImG,UAAYmkD,UAAUnkD,UAAUhb,QAAQg3C,YAC5CniC,IAAIoG,aAAe,SACPklD,UAAAviD,OAAO5d,QAAQmgE,WAC3ByD,aAAe5jE,QAAQ4jE,aACvB/uD,IAAIkG,UAAY/a,QAAQuoE,WACxB1zD,IAAIN,KAAO4rD,UAAUrpD,OACrB,IAAInpB,EAAI,EAAGA,EAAIb,SAAUa,EAAE,CACvBknB,IAAI2H,SAASrK,MAAMxkB,GAAIwxE,UAAUpwE,EAAE61B,GAAG71B,GAAI61B,GAAGhkB,EAAIu/D,UAAUzrD,WAAa,GACrEkQ,GAAAhkB,GAAKu/D,UAAUzrD,WAAakvD,aAC3B,GAAAj2E,EAAI,IAAMb,OAAQ,CACf83B,GAAAhkB,GAAKZ,QAAQ6jE,kBAAoBD,YACxD,CACA,CACA,CACA,CACC,aAAA4E,CAAc3zD,IAAK+P,GAAIj3B,EAAGwxE,UAAWn/D,SACxB,MAAA+lE,WAAajqE,KAAKkrE,YAAYr5E,GAC9B,MAAAu4E,gBAAkBpqE,KAAKmrE,iBAAiBt5E,GACxC,MAAA0vE,UAAEA,UAAYC,SAAAA,UAAct9D,QAC5B,MAAAijE,SAAWrlD,OAAO5d,QAAQijE,UAChC,MAAMwF,OAASrD,YAAYtpE,KAAM,OAAQkE,SACnC,MAAA0oE,UAAYvJ,UAAUpwE,EAAE05E,QAC9B,MAAME,QAAUtL,UAAY4F,SAASvuD,YAAcuuD,SAASvuD,WAAa2oD,WAAa,EAAI,EACpF,MAAAuL,OAAShkD,GAAGhkB,EAAI+nE,QACtB,GAAI3oE,QAAQu9D,cAAe,CACvB,MAAMoC,YAAc,CAChB7mD,OAAQ9tB,KAAKE,IAAIoyE,SAAUD,WAAa,EACxCzkD,WAAYstD,gBAAgBttD,WAC5BC,SAAUqtD,gBAAgBrtD,SAC1Bc,YAAa,GAEjB,MAAM8sB,QAAU04B,UAAUj1C,WAAWw+C,UAAWpL,UAAYA,SAAW,EACjE,MAAA52B,QAAUkiC,OAASvL,UAAY,EACrCxoD,IAAI+G,YAAc5b,QAAQ6oE,mBAC1Bh0D,IAAIkG,UAAY/a,QAAQ6oE,mBACdxwD,UAAAxD,IAAK8qD,YAAal5B,QAASC,SACrC7xB,IAAI+G,YAAcmqD,WAAWhyD,YAC7Bc,IAAIkG,UAAYgrD,WAAWjyD,gBACjBuE,UAAAxD,IAAK8qD,YAAal5B,QAASC,QACjD,KAAe,CACH7xB,IAAIrD,UAAY3T,SAASkoE,WAAWpsD,aAAe3uB,KAAKC,OAAO2O,OAAO6M,OAAOs/D,WAAWpsD,cAAgBosD,WAAWpsD,aAAe,EAClI9E,IAAI+G,YAAcmqD,WAAWhyD,YAC7Bc,IAAI4qC,YAAYsmB,WAAWp4C,YAAc,IACrC9Y,IAAA6qC,eAAiBqmB,WAAWn4C,kBAAoB,EACpD,MAAMk7C,OAAS3J,UAAUj1C,WAAWw+C,UAAWpL,UACzC,MAAAyL,OAAS5J,UAAUj1C,WAAWi1C,UAAUl1C,MAAMy+C,UAAW,GAAIpL,SAAW,GACxE,MAAA9O,aAAe9wC,cAAcqoD,WAAWvX,cAC1C,GAAA50D,OAAO6M,OAAO+nD,cAAchL,KAAM54D,GAAIA,IAAM,GAAI,CAChDiqB,IAAIqE,YACJrE,IAAIkG,UAAY/a,QAAQ6oE,mBACxBpsD,mBAAmB5H,IAAK,CACpB9lB,EAAG+5E,OACHloE,EAAGgoE,OACHn7E,EAAG6vE,SACHvyE,EAAGsyE,UACHvkD,OAAQ01C,eAEZ35C,IAAI6E,OACJ7E,IAAI+E,SACJ/E,IAAIkG,UAAYgrD,WAAWjyD,gBAC3Be,IAAIqE,YACJuD,mBAAmB5H,IAAK,CACpB9lB,EAAGg6E,OACHnoE,EAAGgoE,OAAS,EACZn7E,EAAG6vE,SAAW,EACdvyE,EAAGsyE,UAAY,EACfvkD,OAAQ01C,eAEZ35C,IAAI6E,MACpB,KAAmB,CACH7E,IAAIkG,UAAY/a,QAAQ6oE,mBACxBh0D,IAAImH,SAAS8sD,OAAQF,OAAQtL,SAAUD,WACvCxoD,IAAIm0D,WAAWF,OAAQF,OAAQtL,SAAUD,WACzCxoD,IAAIkG,UAAYgrD,WAAWjyD,gBAC3Be,IAAImH,SAAS+sD,OAAQH,OAAS,EAAGtL,SAAW,EAAGD,UAAY,EAC3E,CACA,CACYxoD,IAAAkG,UAAYjf,KAAKorE,gBAAgBv5E,EAC7C,CACI,QAAAs7E,CAASrkD,GAAI/P,IAAK7U,SACR,MAAA+iE,KAAEA,MAAUjnE,KAClB,MAAMkoE,YAAEA,YAAckF,UAAAA,UAAAnF,cAAYA,wBAAgB1G,UAAYC,SAAAA,SAAAnvB,WAAWA,YAAgBnuC,QACnF,MAAAijE,SAAWrlD,OAAO5d,QAAQijE,UAChC,IAAIa,eAAiBb,SAASvuD,WAC9B,IAAIy0D,aAAe,EACnB,MAAMhK,UAAY70C,cAActqB,QAAQ+I,IAAKjN,KAAK/M,EAAG+M,KAAKoW,OACpD,MAAAk3D,eAAiB,SAASjuD,MACxBtG,IAAA2H,SAASrB,KAAMgkD,UAAUpwE,EAAE61B,GAAG71B,EAAIo6E,cAAevkD,GAAGhkB,EAAIkjE,eAAiB,GAC7El/C,GAAGhkB,GAAKkjE,eAAiBE,WAC5B,EACK,MAAAqF,wBAA0BlK,UAAUnkD,UAAUkuD,WACpD,IAAI3F,SAAU+F,UAAWptD,MAAOvuB,EAAGmM,EAAGqF,KAAMmY,KAC5CzC,IAAImG,UAAYkuD,UAChBr0D,IAAIoG,aAAe,SACnBpG,IAAIN,KAAO0uD,SAASnsD,OACpB8N,GAAG71B,EAAIq2E,YAAYtpE,KAAMutE,wBAAyBrpE,SAClD6U,IAAIkG,UAAY/a,QAAQimE,UACnBpnE,KAAA/C,KAAK4nE,WAAY0F,gBACPD,aAAApF,eAAiBsF,0BAA4B,QAAUH,YAAc,SAAW5L,SAAW,EAAInvB,WAAamvB,SAAW,EAAInvB,WAAa,EACnJ,IAAAxgD,EAAI,EAAGwR,KAAO4jE,KAAKj2E,OAAQa,EAAIwR,OAAQxR,EAAE,CACzC41E,SAAWR,KAAKp1E,GACJ27E,UAAAxtE,KAAKorE,gBAAgBv5E,GACjCknB,IAAIkG,UAAYuuD,UACXzqE,KAAA0kE,SAASC,OAAQ4F,gBACtBltD,MAAQqnD,SAASrnD,MACb,GAAA6nD,eAAiB7nD,MAAMpvB,OAAQ,CAC/BgP,KAAK0sE,cAAc3zD,IAAK+P,GAAIj3B,EAAGwxE,UAAWn/D,SAC1C8jE,eAAiB94E,KAAKC,IAAIg4E,SAASvuD,WAAY2oD,UAC/D,CACgB,IAAAvjE,EAAI,EAAGwd,KAAO4E,MAAMpvB,OAAQgN,EAAIwd,OAAQxd,EAAE,CAC3BsvE,eAAAltD,MAAMpiB,IACrBgqE,eAAiBb,SAASvuD,UAC1C,CACiB7V,KAAA0kE,SAASE,MAAO2F,eACjC,CACuBD,aAAA,EACfrF,eAAiBb,SAASvuD,WACrB7V,KAAA/C,KAAK6nE,UAAWyF,gBACrBxkD,GAAGhkB,GAAKojE,WAChB,CACI,UAAAuF,CAAW3kD,GAAI/P,IAAK7U,SAChB,MAAMgjE,OAASlnE,KAAKknE,OACpB,MAAMl2E,OAASk2E,OAAOl2E,OACtB,IAAIo2E,WAAYv1E,EAChB,GAAIb,OAAQ,CACR,MAAMqyE,UAAY70C,cAActqB,QAAQ+I,IAAKjN,KAAK/M,EAAG+M,KAAKoW,OAC1D0S,GAAG71B,EAAIq2E,YAAYtpE,KAAMkE,QAAQwpE,YAAaxpE,SAC9C4kB,GAAGhkB,GAAKZ,QAAQikE,gBAChBpvD,IAAImG,UAAYmkD,UAAUnkD,UAAUhb,QAAQwpE,aAC5C30D,IAAIoG,aAAe,SACNioD,WAAAtlD,OAAO5d,QAAQkjE,YAC5BruD,IAAIkG,UAAY/a,QAAQypE,YACxB50D,IAAIN,KAAO2uD,WAAWpsD,OACtB,IAAInpB,EAAI,EAAGA,EAAIb,SAAUa,EAAE,CACvBknB,IAAI2H,SAASwmD,OAAOr1E,GAAIwxE,UAAUpwE,EAAE61B,GAAG71B,GAAI61B,GAAGhkB,EAAIsiE,WAAWxuD,WAAa,GACvEkQ,GAAAhkB,GAAKsiE,WAAWxuD,WAAa1U,QAAQkkE,aACxD,CACA,CACA,CACI,cAAA5kB,CAAe16B,GAAI/P,IAAK60D,YAAa1pE,SAC3B,MAAAukE,OAAEA,OAASK,OAAAA,QAAY9oE,KACvB,MAAA/M,EAAEA,EAAI6R,EAAAA,GAAOgkB,GACb,MAAA1S,MAAEA,MAAQkG,OAAAA,QAAYsxD,YACtB,MAAAhtD,QAAEA,iBAAUG,SAAWF,WAAAA,WAAAC,YAAaA,aAAiBc,cAAc1d,QAAQyY,cACjF5D,IAAIkG,UAAY/a,QAAQ8T,gBACxBe,IAAI+G,YAAc5b,QAAQ+T,YAC1Bc,IAAIrD,UAAYxR,QAAQ2Z,YACxB9E,IAAIqE,YACArE,IAAAyE,OAAOvqB,EAAI2tB,QAAS9b,GACxB,GAAIgkE,SAAW,MAAO,CAClB9oE,KAAKisE,UAAUnjD,GAAI/P,IAAK60D,YAAa1pE,QACjD,CACQ6U,IAAI0E,OAAOxqB,EAAImjB,MAAQ2K,SAAUjc,GACjCiU,IAAI80D,iBAAiB56E,EAAImjB,MAAOtR,EAAG7R,EAAImjB,MAAOtR,EAAIic,UAC9C,GAAA+nD,SAAW,UAAYL,SAAW,QAAS,CAC3CzoE,KAAKisE,UAAUnjD,GAAI/P,IAAK60D,YAAa1pE,QACjD,CACQ6U,IAAI0E,OAAOxqB,EAAImjB,MAAOtR,EAAIwX,OAASwE,aAC/B/H,IAAA80D,iBAAiB56E,EAAImjB,MAAOtR,EAAIwX,OAAQrpB,EAAImjB,MAAQ0K,YAAahc,EAAIwX,QACzE,GAAIwsD,SAAW,SAAU,CACrB9oE,KAAKisE,UAAUnjD,GAAI/P,IAAK60D,YAAa1pE,QACjD,CACQ6U,IAAI0E,OAAOxqB,EAAI4tB,WAAY/b,EAAIwX,QAC/BvD,IAAI80D,iBAAiB56E,EAAG6R,EAAIwX,OAAQrpB,EAAG6R,EAAIwX,OAASuE,YAChD,GAAAioD,SAAW,UAAYL,SAAW,OAAQ,CAC1CzoE,KAAKisE,UAAUnjD,GAAI/P,IAAK60D,YAAa1pE,QACjD,CACY6U,IAAA0E,OAAOxqB,EAAG6R,EAAI8b,SAClB7H,IAAI80D,iBAAiB56E,EAAG6R,EAAG7R,EAAI2tB,QAAS9b,GACxCiU,IAAIwE,YACJxE,IAAI6E,OACA,GAAA1Z,QAAQ2Z,YAAc,EAAG,CACzB9E,IAAI+E,QAChB,CACA,CACC,sBAAAgwD,CAAuB5pE,SAChB,MAAMkQ,MAAQpU,KAAKoU,MACnB,MAAM0e,MAAQ9yB,KAAK+2B,YACb,MAAAg3C,MAAQj7C,OAASA,MAAM7/B,EACvB,MAAA+6E,MAAQl7C,OAASA,MAAMhuB,EAC7B,GAAIipE,OAASC,MAAO,CACV,MAAAn/B,SAAWq3B,YAAYhiE,QAAQ2qC,UAAUhtC,KAAK7B,KAAMA,KAAK2zB,QAAS3zB,KAAK2qE,gBAC7E,IAAK97B,SAAU,CACX,MAChB,CACY,MAAMlpC,KAAO3F,KAAK4qE,MAAQ7D,eAAe/mE,KAAMkE,SAC/C,MAAM4nE,gBAAkBhuE,OAAO0B,OAAO,CAAE,EAAEqvC,SAAU7uC,KAAK4qE,OACzD,MAAMvB,UAAYL,mBAAmB50D,MAAOlQ,QAAS4nE,iBACrD,MAAMx9D,MAAQ86D,mBAAmBllE,QAAS4nE,gBAAiBzC,UAAWj1D,OACtE,GAAI25D,MAAMv4C,MAAQlnB,MAAMrb,GAAK+6E,MAAMx4C,MAAQlnB,MAAMxJ,EAAG,CAChD9E,KAAKyoE,OAASY,UAAUZ,OACxBzoE,KAAK8oE,OAASO,UAAUP,OACxB9oE,KAAKoW,MAAQzQ,KAAKyQ,MAClBpW,KAAKsc,OAAS3W,KAAK2W,OACnBtc,KAAKgrE,OAASn8B,SAAS57C,EACvB+M,KAAKirE,OAASp8B,SAAS/pC,EACvB9E,KAAK+/B,qBAAqBrK,OAAO11B,KAAMsO,MACvD,CACA,CACA,CACC,WAAA2/D,GACc,QAAEjuE,KAAK0qE,OACtB,CACI,IAAAh3C,CAAK3a,KACD,MAAM7U,QAAUlE,KAAKkE,QAAQygB,WAAW3kB,KAAKmc,cAC7C,IAAIuuD,QAAU1qE,KAAK0qE,QACnB,IAAKA,QAAS,CACV,MACZ,CACQ1qE,KAAK8tE,uBAAuB5pE,SAC5B,MAAM0pE,YAAc,CAChBx3D,MAAOpW,KAAKoW,MACZkG,OAAQtc,KAAKsc,QAEjB,MAAMwM,GAAK,CACP71B,EAAG+M,KAAK/M,EACR6R,EAAG9E,KAAK8E,GAEZ4lE,QAAUx7E,KAAK0X,IAAI8jE,SAAW,KAAO,EAAIA,QACnC,MAAA33D,QAAU8O,UAAU3d,QAAQ6O,SAClC,MAAMm7D,kBAAoBluE,KAAKqW,MAAMrlB,QAAUgP,KAAK4nE,WAAW52E,QAAUgP,KAAKinE,KAAKj2E,QAAUgP,KAAK6nE,UAAU72E,QAAUgP,KAAKknE,OAAOl2E,OAC9H,GAAAkT,QAAQ80C,SAAWk1B,kBAAmB,CACtCn1D,IAAIwC,OACJxC,IAAIo1D,YAAczD,QAClB1qE,KAAKwjD,eAAe16B,GAAI/P,IAAK60D,YAAa1pE,SACpBuqB,sBAAA1V,IAAK7U,QAAQ+/D,eACnCn7C,GAAGhkB,GAAKiO,QAAQC,IACXhT,KAAAikD,UAAUn7B,GAAI/P,IAAK7U,SACnBlE,KAAAmtE,SAASrkD,GAAI/P,IAAK7U,SAClBlE,KAAAytE,WAAW3kD,GAAI/P,IAAK7U,SACJ6qB,qBAAAhW,IAAK7U,QAAQ+/D,eAClClrD,IAAI4C,SAChB,CACA,CACC,iBAAAy1C,GACc,OAAApxD,KAAK2zB,SAAW,EAC/B,CACC,iBAAA09B,CAAkBC,eAAgBgV,eAC3B,MAAM/U,WAAavxD,KAAK2zB,QAClB,MAAArhB,OAASg/C,eAAel/D,IAAI,EAAGoR,0BAAeC,MAAAA,WAChD,MAAM2J,KAAOpN,KAAKoU,MAAM0oB,eAAet5B,cACvC,IAAK4J,KAAM,CACD,MAAA,IAAI7e,MAAM,kCAAoCiV,aACpE,CACmB,MAAA,CACHA,0BACA2mB,QAAS/c,KAAKyN,KAAKpX,QACnBA,MAAAA,UAGR,MAAMwL,SAAW/L,eAAequD,WAAYj/C,QAC5C,MAAM87D,gBAAkBpuE,KAAKquE,iBAAiB/7D,OAAQg0D,eACtD,GAAIr3D,SAAWm/D,gBAAiB,CAC5BpuE,KAAK2zB,QAAUrhB,OACftS,KAAK2qE,eAAiBrE,cACtBtmE,KAAKsuE,oBAAsB,KAC3BtuE,KAAK01B,OAAO,KACxB,CACA,CACC,WAAAivC,CAAYv0E,EAAGqhE,OAAQxF,YAAc,MAC1B,GAAAwF,QAAUzxD,KAAKsuE,oBAAqB,CAC7B,OAAA,KACnB,CACQtuE,KAAKsuE,oBAAsB,MAC3B,MAAMpqE,QAAUlE,KAAKkE,QACf,MAAAqtD,WAAavxD,KAAK2zB,SAAW,GACnC,MAAMrhB,OAAStS,KAAK+xD,mBAAmB3hE,EAAGmhE,WAAYE,OAAQxF,aAC9D,MAAMmiB,gBAAkBpuE,KAAKquE,iBAAiB/7D,OAAQliB,GACtD,MAAM6e,QAAUwiD,SAAWvuD,eAAeoP,OAAQi/C,aAAe6c,gBACjE,GAAIn/D,QAAS,CACTjP,KAAK2zB,QAAUrhB,OACX,GAAApO,QAAQ80C,SAAW90C,QAAQ8nE,SAAU,CACrChsE,KAAK2qE,eAAiB,CAClB13E,EAAG7C,EAAE6C,EACL6R,EAAG1U,EAAE0U,GAEJ9E,KAAA01B,OAAO,KAAM+7B,OAClC,CACA,CACe,OAAAxiD,OACf,CACC,kBAAA8iD,CAAmB3hE,EAAGmhE,WAAYE,OAAQxF,aACnC,MAAM/nD,QAAUlE,KAAKkE,QACjB,GAAA9T,EAAE2P,OAAS,WAAY,CACvB,MAAO,EACnB,CACQ,IAAKksD,YAAa,CACP,OAAAsF,WAAWzrC,OAAQj0B,GAAImO,KAAKoU,MAAMyG,KAAK3C,SAASrmB,EAAE2R,eAAiBxD,KAAKoU,MAAM0oB,eAAejrC,EAAE2R,cAAc21B,WAAWqF,UAAU3sC,EAAE4R,cAAoB,EAC3K,CACc,MAAA6O,OAAStS,KAAKoU,MAAMm8C,0BAA0BngE,EAAG8T,QAAQkV,KAAMlV,QAASutD,QAC9E,GAAIvtD,QAAQjB,QAAS,CACjBqP,OAAOrP,SACnB,CACe,OAAAqP,MACf,CACC,gBAAA+7D,CAAiB/7D,OAAQliB,GAClB,MAAM46E,OAAEA,OAAAC,OAASA,OAAS/mE,QAAAA,SAAalE,KACjC,MAAA6uC,SAAWq3B,YAAYhiE,QAAQ2qC,UAAUhtC,KAAK7B,KAAMsS,OAAQliB,GAClE,OAAOy+C,WAAa,QAAUm8B,SAAWn8B,SAAS57C,GAAKg4E,SAAWp8B,SAAS/pC,EACnF,EA1hBCo9B,cADKuoC,QACE,cAAcvE,aA4hBtB,IAAIqI,eAAiB,CACjB/sE,GAAI,UACJ4jE,SAAUqF,QACVvE,wBACA,SAAAsI,CAAWp6D,MAAO0mD,MAAO52D,SACrB,GAAIA,QAAS,CACHkQ,MAAA4yD,QAAU,IAAIyD,QAAQ,CACxBr2D,YACAlQ,iBAEhB,CACK,EACD,YAAAg5C,CAAc9oC,MAAO0mD,MAAO52D,SACxB,GAAIkQ,MAAM4yD,QAAS,CACT5yD,MAAA4yD,QAAQrrC,WAAWz3B,QACrC,CACK,EACD,KAAA+4B,CAAO7oB,MAAO0mD,MAAO52D,SACjB,GAAIkQ,MAAM4yD,QAAS,CACT5yD,MAAA4yD,QAAQrrC,WAAWz3B,QACrC,CACK,EACD,SAAAuqE,CAAWr6D,OACP,MAAM4yD,QAAU5yD,MAAM4yD,QAClB,GAAAA,SAAWA,QAAQiH,cAAe,CAClC,MAAM5/E,KAAO,CACT24E,iBAEA,GAAA5yD,MAAMuqC,cAAc,oBAAqB,IACtCtwD,KACH84D,WAAY,SACT,MAAO,CACV,MAChB,CACoB6f,QAAAtzC,KAAKtf,MAAM2E,KACb3E,MAAAuqC,cAAc,mBAAoBtwD,KACpD,CACK,EACD,UAAAg3E,CAAYjxD,MAAO/lB,MACf,GAAI+lB,MAAM4yD,QAAS,CACf,MAAM13B,iBAAmBjhD,KAAKojE,OAC1B,GAAAr9C,MAAM4yD,QAAQrC,YAAYt2E,KAAKo9B,MAAO6jB,iBAAkBjhD,KAAK49D,aAAc,CAC3E59D,KAAK4gB,QAAU,IAC/B,CACA,CACK,EACD2C,SAAU,CACNonC,QAAS,KACTgzB,SAAU,KACVn9B,SAAU,UACV72B,gBAAiB,kBACjBy0D,WAAY,OACZpI,UAAW,CACP9jE,OAAQ,QAEZunE,aAAc,EACdC,kBAAmB,EACnB7sB,WAAY,OACZivB,UAAW,OACXjC,YAAa,EACbf,SAAU,CAAE,EACZiG,UAAW,OACXO,YAAa,OACbvF,cAAe,EACfD,gBAAiB,EACjBf,WAAY,CACR7mE,OAAQ,QAEZmtE,YAAa,OACb36D,QAAS,EACT61D,aAAc,EACdD,UAAW,EACXhsD,aAAc,EACd4kD,UAAW,CAACxoD,IAAKgG,OAAOA,KAAKooD,SAASxhE,KACtC67D,SAAU,CAACzoD,IAAKgG,OAAOA,KAAKooD,SAASxhE,KACrConE,mBAAoB,OACpB9E,cAAe,KACf51B,WAAY,EACZp6B,YAAa,gBACb4F,YAAa,EACbtL,UAAW,CACPV,SAAU,IACVC,OAAQ,gBAEZY,WAAY,CACRjB,QAAS,CACL1R,KAAM,SACNsS,WAAY,CACR,IACA,IACA,QACA,SACA,SACA,WAGRq4D,QAAS,CACL54D,OAAQ,SACRD,SAAU,MAGlBmhB,UAAW22C,kBAEf3kB,cAAe,CACXmiB,SAAU,OACVC,WAAY,OACZ/C,UAAW,QAEf7sD,YAAa,CACTrF,YAAcC,MAAOA,OAAS,UAAYA,OAAS,YAAcA,OAAS,WAC1EF,WAAY,MACZ8gB,UAAW,CACP7gB,YAAa,MACbD,WAAY,OAEhBK,UAAW,CACPN,UAAW,OAEfS,WAAY,CACRT,UAAW,cAGnBk4C,uBAAwB,CACpB,gBAIR,IAAIxwC,eAA8BmmB,OAAO,CACzC8N,UAAW,KACX8gC,OAAQ9T,cACR+T,WAAY3R,kBACZ4R,OAAQnrE,MACRo+D,OAAQsD,cACR0J,SAAU5I,gBACVT,MAAOO,aACP0E,QAAS8D,iBAGT,MAAMO,YAAc,CAAC3wC,OAAQjE,IAAKz2B,OAAOsrE,eACjC,UAAO70C,MAAQ,SAAU,CACzBz2B,OAAQ06B,OAAOj5B,KAAKg1B,KAAO,EAC3B60C,YAAY5P,QAAQ,CAChB17D,MAAAA,OACA47B,MAAOnF,KAEnB,MAAA,GAAetyB,MAAMsyB,KAAM,CACnBz2B,OAAQ,IAChB,CACWA,OAAAA,QAEX,SAASurE,eAAe7wC,OAAQjE,IAAKz2B,OAAOsrE,aAClC,MAAA51B,MAAQhb,OAAOn6B,QAAQk2B,KAC7B,GAAIif,SAAc,EAAA,CACd,OAAO21B,YAAY3wC,OAAQjE,IAAKz2B,OAAOsrE,YAC/C,CACU,MAAAxkE,KAAO4zB,OAAO8wC,YAAY/0C,KACzB,OAAAif,QAAU5uC,KAAO9G,OAAQ01C,KACpC,CACA,MAAMwB,WAAa,CAACl3C,OAAOtU,MAAMsU,SAAU,KAAO,KAAOoG,YAAY3a,KAAKL,MAAM4U,QAAQ,EAAGtU,KAC3F,SAAS+/E,kBAAkBxtE,OACjB,MAAAy8B,OAASn+B,KAAKo+B,YACpB,GAAI18B,OAAS,GAAKA,MAAQy8B,OAAOntC,OAAQ,CACrC,OAAOmtC,OAAOz8B,MACtB,CACW,OAAAA,KACX,CACA,MAAMytE,sBAAsB5zB,MAOxB,WAAAz7C,CAAYk1B,KACRoQ,MAAMpQ,KACLh1B,KAAKovE,iBAAc,EACpBpvE,KAAKqvE,YAAc,EACnBrvE,KAAKsvE,aAAe,EAC5B,CACI,IAAAthC,CAAKua,cACD,MAAMgnB,MAAQvvE,KAAKsvE,aACnB,GAAIC,MAAMv+E,OAAQ,CACR,MAAAmtC,OAASn+B,KAAKo+B,YACpB,IAAA,MAAa36B,MAAAA,OAAQ47B,MAAAA,SAAYkwC,MAAM,CAC/B,GAAApxC,OAAO16B,UAAW47B,MAAO,CAClBlB,OAAAxyB,OAAOlI,OAAO,EACzC,CACA,CACYzD,KAAKsvE,aAAe,EAChC,CACQlqC,MAAM4I,KAAKua,aACnB,CACI,KAAA3hC,CAAMsT,IAAKz2B,QACH,GAAAhC,cAAcy4B,KAAM,CACb,OAAA,IACnB,CACc,MAAAiE,OAASn+B,KAAKo+B,YACpB36B,OAAQvB,SAASuB,SAAU06B,OAAO16B,UAAWy2B,IAAMz2B,OAAQurE,eAAe7wC,OAAQjE,IAAK73B,eAAeoB,OAAOy2B,KAAMl6B,KAAKsvE,cACxH,OAAO30B,WAAWl3C,OAAO06B,OAAOntC,OAAS,EACjD,CACI,mBAAAwsD,GACI,MAAMxvC,WAAEA,WAAAC,WAAaA,YAAgBjO,KAAKkO,gBAC1C,IAAI9e,IAAEA,IAAMD,IAAAA,KAAS6Q,KAAK6+B,UAAU,MAChC,GAAA7+B,KAAKkE,QAAQoR,SAAW,QAAS,CACjC,IAAKtH,WAAY,CACP5e,IAAA,CACtB,CACY,IAAK6e,WAAY,CACP9e,IAAA6Q,KAAKo+B,YAAYptC,OAAS,CAChD,CACA,CACQgP,KAAK5Q,IAAMA,IACX4Q,KAAK7Q,IAAMA,GACnB,CACI,UAAAwuD,GACI,MAAMvuD,IAAM4Q,KAAK5Q,IACjB,MAAMD,IAAM6Q,KAAK7Q,IACX,MAAAimB,OAASpV,KAAKkE,QAAQkR,OAC5B,MAAMjB,MAAQ,GACV,IAAAgqB,OAASn+B,KAAKo+B,YACTD,OAAA/uC,MAAQ,GAAKD,MAAQgvC,OAAOntC,OAAS,EAAImtC,OAASA,OAAOr8B,MAAM1S,IAAKD,IAAM,GAC9E6Q,KAAAqvE,YAAcngF,KAAKC,IAAIgvC,OAAOntC,QAAUokB,OAAS,EAAI,GAAI,GAC9DpV,KAAKovE,YAAcpvE,KAAK5Q,KAAOgmB,OAAS,GAAM,GAC9C,IAAA,IAAQ1T,MAAQtS,IAAKsS,OAASvS,IAAKuS,QAAQ,CACvCyS,MAAMjP,KAAK,CACPxD,aAEhB,CACe,OAAAyS,KACf,CACI,gBAAAmrB,CAAiB59B,OACN,OAAAwtE,kBAAkBrtE,KAAK7B,KAAM0B,MAC5C,CACC,SAAA00B,GACOgP,MAAMhP,YACF,IAACp2B,KAAKqkC,eAAgB,CACjBrkC,KAAA0uC,gBAAkB1uC,KAAK0uC,cACxC,CACA,CACI,gBAAAvgC,CAAiBzM,OACT,UAAOA,QAAU,SAAU,CACnBA,MAAA1B,KAAK4mB,MAAMllB,MAC/B,CACe,OAAAA,QAAU,KAAOk9B,IAAM5+B,KAAKknC,oBAAoBxlC,MAAQ1B,KAAKovE,aAAepvE,KAAKqvE,YAChG,CACI,eAAAzsC,CAAgBn/B,QACZ,MAAM0Q,MAAQnU,KAAKmU,MACnB,GAAI1Q,OAAQ,GAAKA,OAAQ0Q,MAAMnjB,OAAS,EAAG,CAChC,OAAA,IACnB,CACQ,OAAOgP,KAAKmO,iBAAiBgG,MAAM1Q,QAAO/B,MAClD,CACI,gBAAA0lC,CAAiBtrB,OACN,OAAA5sB,KAAKL,MAAMmR,KAAKovE,YAAcpvE,KAAKmhD,mBAAmBrlC,OAAS9b,KAAKqvE,YACnF,CACI,YAAA/pC,GACI,OAAOtlC,KAAKiT,MACpB,EA1FIivB,cADEitC,cACK,KAAK,YACfjtC,cAFKitC,cAEE,WAAW,CACXh7D,MAAO,CACHxR,SAAUusE,qBA0FtB,SAASM,gBAAgBC,kBAAmBC,WACxC,MAAMv7D,MAAQ,GACd,MAAMw7D,YAAc,MACd,MAAAr6D,OAAEA,OAASktC,KAAAA,KAAApzD,IAAOA,IAAMD,IAAAA,IAAAygF,UAAMA,gBAAYpiE,MAAQqiE,SAAAA,SAAAC,UAAWA,UAAYC,cAAAA,eAAmBN,kBAClG,MAAMO,KAAOxtB,MAAQ,EACrB,MAAMytB,UAAYJ,SAAW,EAC7B,MAAQzgF,IAAK8gF,KAAO/gF,IAAKghF,MAAUT,UAC7B,MAAA1hE,YAAcvM,cAAcrS,KAC5B,MAAA6e,YAAcxM,cAActS,KAC5B,MAAAihF,cAAgB3uE,cAAc+L,OAC9B,MAAA6iE,YAAcF,KAAOD,OAASJ,UAAY,GAChD,IAAInmC,QAAU9iC,SAASspE,KAAOD,MAAQD,UAAYD,MAAQA,KACtD,IAAAp7C,OAAQ07C,QAASC,QAASC,UAC9B,GAAI7mC,QAAUgmC,cAAgB3hE,aAAeC,WAAY,CAC9C,MAAA,CACH,CACIvM,MAAOwuE,MAEX,CACIxuE,MAAOyuE,MAGvB,CACgBK,UAAAthF,KAAK6qD,KAAKo2B,KAAOxmC,SAAWz6C,KAAK8X,MAAMkpE,KAAOvmC,SAC1D,GAAI6mC,UAAYP,UAAW,CACvBtmC,QAAU9iC,QAAQ2pE,UAAY7mC,QAAUsmC,UAAYD,MAAQA,IACpE,CACQ,IAACvuE,cAAcmuE,WAAY,CAClBh7C,OAAA1lC,KAAK2P,IAAI,GAAI+wE,WACtBjmC,QAAUz6C,KAAK6qD,KAAKpQ,QAAU/U,QAAUA,MAChD,CACI,GAAItf,SAAW,QAAS,CACpBg7D,QAAUphF,KAAK8X,MAAMkpE,KAAOvmC,SAAWA,QACvC4mC,QAAUrhF,KAAK6qD,KAAKo2B,KAAOxmC,SAAWA,OAC9C,KAAW,CACO2mC,QAAAJ,KACAK,QAAAJ,IAClB,CACQ,GAAAniE,YAAcC,YAAcu0C,MAAQ36C,aAAa1Y,IAAMC,KAAOozD,KAAM7Y,QAAU,KAAO,CACzE6mC,UAAAthF,KAAKL,MAAMK,KAAKE,KAAKD,IAAMC,KAAOu6C,QAASkmC,WACvDlmC,SAAWx6C,IAAMC,KAAOohF,UACdF,QAAAlhF,IACAmhF,QAAAphF,GACb,SAAUihF,aAAc,CACrBE,QAAUtiE,WAAa5e,IAAMkhF,QAC7BC,QAAUtiE,WAAa9e,IAAMohF,QAC7BC,UAAYhjE,MAAQ,EACpBm8B,SAAW4mC,QAAUD,SAAWE,SACxC,KAAW,CACHA,WAAaD,QAAUD,SAAW3mC,QAC9B,GAAAjjC,aAAa8pE,UAAWthF,KAAKL,MAAM2hF,WAAY7mC,QAAU,KAAO,CACpD6mC,UAAAthF,KAAKL,MAAM2hF,UACnC,KAAe,CACSA,UAAAthF,KAAK6qD,KAAKy2B,UAClC,CACA,CACU,MAAAC,cAAgBvhF,KAAKC,IAAImZ,eAAeqhC,SAAUrhC,eAAegoE,UACvE17C,OAAS1lC,KAAK2P,IAAI,GAAI4C,cAAcmuE,WAAaa,cAAgBb,WACjEU,QAAUphF,KAAKL,MAAMyhF,QAAU17C,QAAUA,OACzC27C,QAAUrhF,KAAKL,MAAM0hF,QAAU37C,QAAUA,OACzC,IAAI52B,EAAI,EACR,GAAIgQ,WAAY,CACR,GAAA+hE,eAAiBO,UAAYlhF,IAAK,CAClC+kB,MAAMjP,KAAK,CACPxD,MAAOtS,MAEX,GAAIkhF,QAAUlhF,IAAK,CACf4O,GAChB,CACY,GAAI0I,aAAaxX,KAAKL,OAAOyhF,QAAUtyE,EAAI2rC,SAAW/U,QAAUA,OAAQxlC,IAAKshF,kBAAkBthF,IAAKihF,WAAYZ,oBAAqB,CACjIzxE,GAChB,CACA,MAAA,GAAmBsyE,QAAUlhF,IAAK,CACtB4O,GACZ,CACA,CACU,KAAAA,EAAIwyE,YAAaxyE,EAAE,CACrB,MAAMkW,UAAYhlB,KAAKL,OAAOyhF,QAAUtyE,EAAI2rC,SAAW/U,QAAUA,OAC7D,GAAA3mB,YAAciG,UAAY/kB,IAAK,CAC/B,KACZ,CACQglB,MAAMjP,KAAK,CACPxD,MAAOwS,WAEnB,CACQ,GAAAjG,YAAc8hE,eAAiBQ,UAAYphF,IAAK,CAChD,GAAIglB,MAAMnjB,QAAU0V,aAAayN,MAAMA,MAAMnjB,OAAS,GAAG0Q,MAAOvS,IAAKuhF,kBAAkBvhF,IAAKkhF,WAAYZ,oBAAqB,CACzHt7D,MAAMA,MAAMnjB,OAAS,GAAG0Q,MAAQvS,GAC5C,KAAe,CACHglB,MAAMjP,KAAK,CACPxD,MAAOvS,KAEvB,CACK,MAAU,IAAC8e,YAAcsiE,UAAYphF,IAAK,CACvCglB,MAAMjP,KAAK,CACPxD,MAAO6uE,SAEnB,CACW,OAAAp8D,KACX,CACA,SAASu8D,kBAAkBhvE,MAAO2uE,YAAY9rC,WAAEA,WAAAhuB,YAAaA,cACnD,MAAA0G,IAAM/U,UAAUqO,aAChB,MAAAnX,OAASmlC,WAAar1C,KAAKkgB,IAAI6N,KAAO/tB,KAAKmhB,IAAI4M,OAAS,KAC9D,MAAMjsB,OAAS,IAAOq/E,YAAc,GAAK3uE,OAAO1Q,OAChD,OAAO9B,KAAKE,IAAIihF,WAAajxE,MAAOpO,OACxC,CACA,MAAM2/E,wBAAwBp1B,MAC1B,WAAAz7C,CAAYk1B,KACRoQ,MAAMpQ,KACLh1B,KAAKsJ,WAAQ,EACbtJ,KAAKuJ,SAAM,EACXvJ,KAAKovE,iBAAc,EACnBpvE,KAAK4wE,eAAY,EAClB5wE,KAAKqvE,YAAc,CAC3B,CACI,KAAAzoD,CAAMsT,IAAKz2B,QACH,GAAAhC,cAAcy4B,KAAM,CACb,OAAA,IACnB,CACa,WAAOA,MAAQ,UAAYA,eAAej4B,UAAYC,UAAUg4B,KAAM,CAChE,OAAA,IACnB,CACQ,OAAQA,GAChB,CACI,sBAAA22C,GACU,MAAAx7D,YAAEA,aAAiBrV,KAAKkE,QAC9B,MAAM8J,WAAEA,WAAAC,WAAaA,YAAgBjO,KAAKkO,gBACtC,IAAA9e,IAAEA,IAAMD,IAAAA,KAAS6Q,KACrB,MAAM8wE,OAAUhiF,GAAIM,IAAM4e,WAAa5e,IAAMN,EAC7C,MAAMiiF,OAAUjiF,GAAIK,IAAM8e,WAAa9e,IAAML,EAC7C,GAAIumB,YAAa,CACP,MAAA27D,QAAUvqE,KAAKrX,KACf,MAAA6hF,QAAUxqE,KAAKtX,KACjB,GAAA6hF,QAAU,GAAKC,QAAU,EAAG,CAC5BF,OAAO,EACV,MAAU,GAAAC,QAAU,GAAKC,QAAU,EAAG,CACnCH,OAAO,EACvB,CACA,CACQ,GAAI1hF,MAAQD,IAAK,CACb,IAAIimB,OAASjmB,MAAQ,EAAI,EAAID,KAAK0X,IAAIzX,IAAM,KAC5C4hF,OAAO5hF,IAAMimB,QACb,IAAKC,YAAa,CACdy7D,OAAO1hF,IAAMgmB,OAC7B,CACA,CACQpV,KAAK5Q,IAAMA,IACX4Q,KAAK7Q,IAAMA,GACnB,CACI,YAAA+hF,GACU,MAAAx4B,SAAW14C,KAAKkE,QAAQiQ,MAC1B,IAAA2kC,cAAEA,cAAgBq4B,SAAAA,UAAcz4B,SAChC,IAAAm3B,SACJ,GAAIsB,SAAU,CACCtB,SAAA3gF,KAAK6qD,KAAK/5C,KAAK7Q,IAAMgiF,UAAYjiF,KAAK8X,MAAMhH,KAAK5Q,IAAM+hF,UAAY,EAC9E,GAAItB,SAAW,IAAM,CACTlhF,QAAAqzB,KAAK,UAAUhiB,KAAKwB,sBAAsB2vE,0CAA0CtB,qCACjFA,SAAA,GAC3B,CACA,KAAe,CACHA,SAAW7vE,KAAKoxE,mBAChBt4B,cAAgBA,eAAiB,EAC7C,CACQ,GAAIA,cAAe,CACJ+2B,SAAA3gF,KAAKE,IAAI0pD,cAAe+2B,SAC/C,CACe,OAAAA,QACf,CACC,gBAAAuB,GACO,OAAOnvE,OAAOkE,iBACtB,CACI,UAAAw3C,GACI,MAAM5+B,KAAO/e,KAAKkE,QAClB,MAAMw0C,SAAW35B,KAAK5K,MAClB,IAAA07D,SAAW7vE,KAAKkxE,eACTrB,SAAA3gF,KAAKC,IAAI,EAAG0gF,UACvB,MAAMwB,wBAA0B,CAC5BxB,kBACAv6D,OAAQyJ,KAAKzJ,OACblmB,IAAK2vB,KAAK3vB,IACVD,IAAK4vB,KAAK5vB,IACVygF,UAAWl3B,SAASk3B,UACpBptB,KAAM9J,SAASy4B,SACf3jE,MAAOkrC,SAASlrC,MAChBsiE,UAAW9vE,KAAKqkD,aAChB9f,WAAYvkC,KAAKqkC,eACjB9tB,YAAamiC,SAASniC,aAAe,EACrCw5D,cAAer3B,SAASq3B,gBAAkB,OAExC,MAAAL,UAAY1vE,KAAK87C,QAAU97C,KAC3B,MAAAmU,MAAQq7D,gBAAgB6B,wBAAyB3B,WACnD,GAAA3wD,KAAKzJ,SAAW,QAAS,CACNvN,mBAAAoM,MAAOnU,KAAM,QAC5C,CACQ,GAAI+e,KAAK9b,QAAS,CACdkR,MAAMlR,UACNjD,KAAKsJ,MAAQtJ,KAAK7Q,IAClB6Q,KAAKuJ,IAAMvJ,KAAK5Q,GAC5B,KAAe,CACH4Q,KAAKsJ,MAAQtJ,KAAK5Q,IAClB4Q,KAAKuJ,IAAMvJ,KAAK7Q,GAC5B,CACe,OAAAglB,KACf,CACC,SAAAiiB,GACO,MAAMjiB,MAAQnU,KAAKmU,MACnB,IAAI7K,MAAQtJ,KAAK5Q,IACjB,IAAIma,IAAMvJ,KAAK7Q,IACfi2C,MAAMhP,YACN,GAAIp2B,KAAKkE,QAAQkR,QAAUjB,MAAMnjB,OAAQ,CAC/B,MAAAokB,QAAU7L,IAAMD,OAASpa,KAAKC,IAAIglB,MAAMnjB,OAAS,EAAG,GAAK,EACtDsY,OAAA8L,OACF7L,KAAA6L,MACnB,CACQpV,KAAKovE,YAAc9lE,MACnBtJ,KAAK4wE,UAAYrnE,IACjBvJ,KAAKqvE,YAAc9lE,IAAMD,KACjC,CACI,gBAAAg2B,CAAiB59B,OACN,OAAAmS,aAAanS,MAAO1B,KAAKoU,MAAMlQ,QAAQmP,OAAQrT,KAAKkE,QAAQiQ,MAAMJ,OACjF,EAGA,MAAMu9D,oBAAoBX,gBAOtB,mBAAAnzB,GACI,MAAMpuD,IAAEA,IAAMD,IAAAA,KAAS6Q,KAAK6+B,UAAU,MACtC7+B,KAAK5Q,IAAM4S,eAAe5S,KAAOA,IAAM,EACvC4Q,KAAK7Q,IAAM6S,eAAe7S,KAAOA,IAAM,EACvC6Q,KAAK6wE,wBACb,CACC,gBAAAO,GACa,MAAA7sC,WAAavkC,KAAKqkC,eACxB,MAAMrzC,OAASuzC,WAAavkC,KAAKoW,MAAQpW,KAAKsc,OAC9C,MAAM/F,YAAcrO,UAAUlI,KAAKkE,QAAQiQ,MAAMoC,aAC3C,MAAAnX,OAASmlC,WAAar1C,KAAKkgB,IAAImH,aAAernB,KAAKmhB,IAAIkG,eAAiB,KACxE,MAAAqqC,SAAW5gD,KAAK+gD,wBAAwB,GACvC,OAAA7xD,KAAK6qD,KAAK/oD,OAAS9B,KAAKE,IAAI,GAAIwxD,SAAShoC,WAAaxZ,OACrE,CACI,gBAAA+O,CAAiBzM,OACN,OAAAA,QAAU,KAAOk9B,IAAM5+B,KAAKknC,oBAAoBxlC,MAAQ1B,KAAKovE,aAAepvE,KAAKqvE,YAChG,CACI,gBAAAjoC,CAAiBtrB,OACb,OAAO9b,KAAKovE,YAAcpvE,KAAKmhD,mBAAmBrlC,OAAS9b,KAAKqvE,WACxE,EAzBIntC,cADEovC,YACK,KAAK,UACfpvC,cAFKovC,YAEE,WAAW,CACXn9D,MAAO,CACHxR,SAAUsS,MAAMjB,WAAWC,WAyBvC,MAAMs9D,WAAcziF,GAAII,KAAK8X,MAAMR,MAAM1X,IACzC,MAAM0iF,eAAiB,CAAC1iF,EAAG4D,IAAIxD,KAAK2P,IAAI,GAAI0yE,WAAWziF,GAAK4D,GAC5D,SAAS++E,QAAQC,SACb,MAAM58D,OAAS48D,QAAUxiF,KAAK2P,IAAI,GAAI0yE,WAAWG,UACjD,OAAO58D,SAAW,CACtB,CACA,SAAS68D,MAAMviF,IAAKD,IAAKyiF,UACrB,MAAMC,UAAY3iF,KAAK2P,IAAI,GAAI+yE,UAC/B,MAAMtoE,MAAQpa,KAAK8X,MAAM5X,IAAMyiF,WAC/B,MAAMtoE,IAAMra,KAAK6qD,KAAK5qD,IAAM0iF,WAC5B,OAAOtoE,IAAMD,KACjB,CACA,SAASwoE,SAAS1iF,IAAKD,KACnB,MAAM6C,MAAQ7C,IAAMC,IAChB,IAAAwiF,SAAWL,WAAWv/E,OAC1B,MAAM2/E,MAAMviF,IAAKD,IAAKyiF,UAAY,GAAG,CACjCA,UACR,CACI,MAAMD,MAAMviF,IAAKD,IAAKyiF,UAAY,GAAG,CACjCA,UACR,CACI,OAAO1iF,KAAKE,IAAIwiF,SAAUL,WAAWniF,KACzC,CACC,SAAS2iF,cAActC,mBAAmBrgF,IAAEA,IAAAD,IAAMA,MACzCC,IAAA+S,gBAAgBstE,kBAAkBrgF,IAAKA,KAC7C,MAAM+kB,MAAQ,GACR,MAAA69D,OAAST,WAAWniF,KACtB,IAAA6iF,IAAMH,SAAS1iF,IAAKD,KACpB,IAAAygF,UAAYqC,IAAM,EAAI/iF,KAAK2P,IAAI,GAAI3P,KAAK0X,IAAIqrE,MAAQ,EACxD,MAAMd,SAAWjiF,KAAK2P,IAAI,GAAIozE,KAC9B,MAAM3mE,KAAO0mE,OAASC,IAAM/iF,KAAK2P,IAAI,GAAImzE,QAAU,EACnD,MAAM1oE,MAAQpa,KAAKL,OAAOO,IAAMkc,MAAQskE,WAAaA,UAC/C,MAAAx6D,OAASlmB,KAAK8X,OAAO5X,IAAMkc,MAAQ6lE,SAAW,IAAMA,SAAW,GACjE,IAAAp8D,YAAc7lB,KAAK8X,OAAOsC,MAAQ8L,QAAUlmB,KAAK2P,IAAI,GAAIozE,MAC7D,IAAIvwE,MAAQS,gBAAgBstE,kBAAkBrgF,IAAKF,KAAKL,OAAOyc,KAAO8J,OAASL,YAAc7lB,KAAK2P,IAAI,GAAIozE,MAAQrC,WAAaA,WAC/H,MAAMluE,MAAQvS,IAAI,CACdglB,MAAMjP,KAAK,CACPxD,YACAsV,MAAOy6D,QAAQ/vE,OACfqT,0BAEJ,GAAIA,aAAe,GAAI,CACLA,YAAAA,YAAc,GAAK,GAAK,EAClD,KAAe,CACHA,aACZ,CACQ,GAAIA,aAAe,GAAI,CACnBk9D,MACcl9D,YAAA,EACF66D,UAAAqC,KAAO,EAAI,EAAIrC,SACvC,CACgBluE,MAAAxS,KAAKL,OAAOyc,KAAO8J,OAASL,YAAc7lB,KAAK2P,IAAI,GAAIozE,MAAQrC,WAAaA,SAC5F,CACI,MAAMsC,SAAW/vE,gBAAgBstE,kBAAkBtgF,IAAKuS,OACxDyS,MAAMjP,KAAK,CACPxD,MAAOwwE,SACPl7D,MAAOy6D,QAAQS,UACfn9D,0BAEG,OAAAZ,KACX,CACA,MAAMg+D,yBAAyB52B,MAU3B,WAAAz7C,CAAYk1B,KACRoQ,MAAMpQ,KACLh1B,KAAKsJ,WAAQ,EACbtJ,KAAKuJ,SAAM,EACXvJ,KAAKovE,iBAAc,EACpBpvE,KAAKqvE,YAAc,CAC3B,CACI,KAAAzoD,CAAMsT,IAAKz2B,QACP,MAAM/B,MAAQivE,gBAAgBhvE,UAAUilB,MAAM9jB,MAAM9C,KAAM,CACtDk6B,IACAz2B,SAEJ,GAAI/B,QAAU,EAAG,CACb1B,KAAKoyE,MAAQ,KACN,YAAA,CACnB,CACQ,OAAOpwE,eAAeN,QAAUA,MAAQ,EAAIA,MAAQ,IAC5D,CACI,mBAAA87C,GACI,MAAMpuD,IAAEA,IAAMD,IAAAA,KAAS6Q,KAAK6+B,UAAU,MACjC7+B,KAAA5Q,IAAM4S,eAAe5S,KAAOF,KAAKC,IAAI,EAAGC,KAAO,KAC/C4Q,KAAA7Q,IAAM6S,eAAe7S,KAAOD,KAAKC,IAAI,EAAGA,KAAO,KAChD,GAAA6Q,KAAKkE,QAAQmR,YAAa,CAC1BrV,KAAKoyE,MAAQ,IACzB,CACY,GAAApyE,KAAKoyE,OAASpyE,KAAK5Q,MAAQ4Q,KAAKs8C,gBAAkBt6C,eAAehC,KAAKo8C,UAAW,CACjFp8C,KAAK5Q,IAAMA,MAAQoiF,eAAexxE,KAAK5Q,IAAK,GAAKoiF,eAAexxE,KAAK5Q,KAAO,GAAIoiF,eAAexxE,KAAK5Q,IAAK,EACrH,CACQ4Q,KAAK6wE,wBACb,CACI,sBAAAA,GACI,MAAM7iE,WAAEA,WAAAC,WAAaA,YAAgBjO,KAAKkO,gBAC1C,IAAI9e,IAAM4Q,KAAK5Q,IACf,IAAID,IAAM6Q,KAAK7Q,IACf,MAAM2hF,OAAUhiF,GAAIM,IAAM4e,WAAa5e,IAAMN,EAC7C,MAAMiiF,OAAUjiF,GAAIK,IAAM8e,WAAa9e,IAAML,EAC7C,GAAIM,MAAQD,IAAK,CACb,GAAIC,KAAO,EAAG,CACV0hF,OAAO,GACPC,OAAO,GACvB,KAAmB,CACID,OAAAU,eAAepiF,KAAK,IACpB2hF,OAAAS,eAAeriF,IAAK,GAC3C,CACA,CACQ,GAAIC,KAAO,EAAG,CACH0hF,OAAAU,eAAeriF,KAAK,GACvC,CACQ,GAAIA,KAAO,EAAG,CACH4hF,OAAAS,eAAepiF,IAAK,GACvC,CACQ4Q,KAAK5Q,IAAMA,IACX4Q,KAAK7Q,IAAMA,GACnB,CACI,UAAAwuD,GACI,MAAM5+B,KAAO/e,KAAKkE,QAClB,MAAMurE,kBAAoB,CACtBrgF,IAAK4Q,KAAKo8C,SACVjtD,IAAK6Q,KAAKm8C,UAER,MAAAhoC,MAAQ49D,cAActC,kBAAmBzvE,MAC3C,GAAA+e,KAAKzJ,SAAW,QAAS,CACNvN,mBAAAoM,MAAOnU,KAAM,QAC5C,CACQ,GAAI+e,KAAK9b,QAAS,CACdkR,MAAMlR,UACNjD,KAAKsJ,MAAQtJ,KAAK7Q,IAClB6Q,KAAKuJ,IAAMvJ,KAAK5Q,GAC5B,KAAe,CACH4Q,KAAKsJ,MAAQtJ,KAAK5Q,IAClB4Q,KAAKuJ,IAAMvJ,KAAK7Q,GAC5B,CACe,OAAAglB,KACf,CACC,gBAAAmrB,CAAiB59B,OACV,OAAOA,aAAU,EAAY,IAAMmS,aAAanS,MAAO1B,KAAKoU,MAAMlQ,QAAQmP,OAAQrT,KAAKkE,QAAQiQ,MAAMJ,OAC7G,CACC,SAAAqiB,GACO,MAAM9sB,MAAQtJ,KAAK5Q,IACnBg2C,MAAMhP,YACDp2B,KAAAovE,YAAc5oE,MAAM8C,OACzBtJ,KAAKqvE,YAAc7oE,MAAMxG,KAAK7Q,KAAOqX,MAAM8C,MACnD,CACI,gBAAA6E,CAAiBzM,OACT,GAAAA,aAAuB,GAAAA,QAAU,EAAG,CACpCA,MAAQ1B,KAAK5Q,GACzB,CACQ,GAAIsS,QAAU,MAAQkG,MAAMlG,OAAQ,CACzB,OAAAk9B,GACnB,CACQ,OAAO5+B,KAAKknC,mBAAmBxlC,QAAU1B,KAAK5Q,IAAM,GAAKoX,MAAM9E,OAAS1B,KAAKovE,aAAepvE,KAAKqvE,YACzG,CACI,gBAAAjoC,CAAiBtrB,OACP,MAAAolC,QAAUlhD,KAAKmhD,mBAAmBrlC,OACxC,OAAO5sB,KAAK2P,IAAI,GAAImB,KAAKovE,YAAcluB,QAAUlhD,KAAKqvE,YAC9D,EAxGIntC,cADEiwC,iBACK,KAAK,eACfjwC,cAFKiwC,iBAEE,WAAW,CACXh+D,MAAO,CACHxR,SAAUsS,MAAMjB,WAAWa,YAC3BmC,MAAO,CACHgiC,QAAS,SAsGzB,SAASq5B,sBAAsBtzD,MAC3B,MAAM25B,SAAW35B,KAAK5K,MAClB,GAAAukC,SAASvjC,SAAW4J,KAAK5J,QAAS,CAC5B,MAAApC,QAAU8O,UAAU62B,SAASthC,iBAC5B,OAAA/U,eAAeq2C,SAASjgC,MAAQigC,SAASjgC,KAAK9S,KAAMiM,SAAS6G,KAAK9S,MAAQoN,QAAQuJ,MACjG,CACW,OAAA,CACX,CACA,SAASg2D,iBAAiBv5D,IAAKN,KAAM4mB,OACzBA,MAAAltC,QAAQktC,OAASA,MAAQ,CAC7BA,OAEG,MAAA,CACH1tC,EAAGwpB,aAAapC,IAAKN,KAAKuC,OAAQqkB,OAClCpwC,EAAGowC,MAAMruC,OAASynB,KAAKG,WAE/B,CACA,SAAS25D,gBAAgB1pE,MAAOgiB,IAAKllB,KAAMvW,IAAKD,KACxC,GAAA0Z,QAAUzZ,KAAOyZ,QAAU1Z,IAAK,CACzB,MAAA,CACHma,MAAOuhB,IAAMllB,KAAO,EACpB4D,IAAKshB,IAAMllB,KAAO,EAEzB,MAAU,GAAAkD,MAAQzZ,KAAOyZ,MAAQ1Z,IAAK,CAC5B,MAAA,CACHma,MAAOuhB,IAAMllB,KACb4D,IAAKshB,IAEjB,CACW,MAAA,CACHvhB,MAAOuhB,IACPthB,IAAKshB,IAAMllB,KAEnB,CACC,SAAS6sE,mBAAmB34D,OACzB,MAAMkrB,KAAO,CACT/1C,EAAG6qB,MAAM9M,KAAO8M,MAAM4rD,SAAS14D,KAC/Bpc,EAAGkpB,MAAM7M,MAAQ6M,MAAM4rD,SAASz4D,MAChC9N,EAAG2a,MAAM7G,IAAM6G,MAAM4rD,SAASzyD,IAC9B/iB,EAAG4pB,MAAM5G,OAAS4G,MAAM4rD,SAASxyD,QAErC,MAAMw/D,OAAS30E,OAAO0B,OAAO,CAAA,EAAIulC,MACjC,MAAMma,WAAa,GACnB,MAAMnsC,QAAU,GACV,MAAA2/D,WAAa74D,MAAM84D,aAAa3hF,OAChC,MAAA4hF,eAAiB/4D,MAAM3V,QAAQipC,YACrC,MAAM0lC,gBAAkBD,eAAeE,kBAAoB/sE,GAAK2sE,WAAa,EAC7E,IAAA,IAAQ7gF,EAAI,EAAGA,EAAI6gF,WAAY7gF,IAAI,CAC/B,MAAMktB,KAAO6zD,eAAejuD,WAAW9K,MAAMk5D,qBAAqBlhF,IAC1DkhB,QAAAlhB,GAAKktB,KAAKhM,QACZ,MAAAu6B,cAAgBzzB,MAAMm5D,iBAAiBnhF,EAAGgoB,MAAMo5D,YAAclgE,QAAQlhB,GAAIghF,iBAC1E,MAAAK,OAASpxD,OAAO/C,KAAKtG,MACrB,MAAAitD,SAAW4M,iBAAiBz4D,MAAMd,IAAKm6D,OAAQr5D,MAAM84D,aAAa9gF,IACxEqtD,WAAWrtD,GAAK6zE,SAChB,MAAM7lB,aAAez2C,gBAAgByQ,MAAM+yB,cAAc/6C,GAAKghF,iBAC9D,MAAMhqE,MAAQ3Z,KAAKL,MAAMuZ,UAAUy3C,eAC7B,MAAAszB,QAAUZ,gBAAgB1pE,MAAOykC,cAAcr6C,EAAGyyE,SAAS/zE,EAAG,EAAG,KACjE,MAAAyhF,QAAUb,gBAAgB1pE,MAAOykC,cAAcxoC,EAAG4gE,SAASz2E,EAAG,GAAI,KACxEokF,aAAaZ,OAAQ1tC,KAAM8a,aAAcszB,QAASC,QAC1D,CACIv5D,MAAMy5D,eAAevuC,KAAK/1C,EAAIyjF,OAAOzjF,EAAGyjF,OAAO9hF,EAAIo0C,KAAKp0C,EAAGo0C,KAAK7lC,EAAIuzE,OAAOvzE,EAAGuzE,OAAOxiF,EAAI80C,KAAK90C,GAC9F4pB,MAAM05D,iBAAmBC,qBAAqB35D,MAAOqlC,WAAYnsC,QACrE,CACA,SAASsgE,aAAaZ,OAAQ1tC,KAAMl8B,MAAOsqE,QAASC,SAChD,MAAMhkE,IAAMlgB,KAAK0X,IAAI1X,KAAKkgB,IAAIvG,QAC9B,MAAMwH,IAAMnhB,KAAK0X,IAAI1X,KAAKmhB,IAAIxH,QAC9B,IAAI5V,EAAI,EACR,IAAI6R,EAAI,EACJ,GAAAquE,QAAQ7pE,MAAQy7B,KAAK/1C,EAAG,CACnBiE,GAAA8xC,KAAK/1C,EAAImkF,QAAQ7pE,OAAS8F,IAC/BqjE,OAAOzjF,EAAIE,KAAKE,IAAIqjF,OAAOzjF,EAAG+1C,KAAK/1C,EAAIiE,EAC1C,MAAU,GAAAkgF,QAAQ5pE,IAAMw7B,KAAKp0C,EAAG,CACxBsC,GAAAkgF,QAAQ5pE,IAAMw7B,KAAKp0C,GAAKye,IAC7BqjE,OAAO9hF,EAAIzB,KAAKC,IAAIsjF,OAAO9hF,EAAGo0C,KAAKp0C,EAAIsC,EAC/C,CACQ,GAAAmgF,QAAQ9pE,MAAQy7B,KAAK7lC,EAAG,CACnB4F,GAAAigC,KAAK7lC,EAAIk0E,QAAQ9pE,OAAS+G,IAC/BoiE,OAAOvzE,EAAIhQ,KAAKE,IAAIqjF,OAAOvzE,EAAG6lC,KAAK7lC,EAAI4F,EAC1C,MAAU,GAAAsuE,QAAQ7pE,IAAMw7B,KAAK90C,EAAG,CACxB6U,GAAAsuE,QAAQ7pE,IAAMw7B,KAAK90C,GAAKogB,IAC7BoiE,OAAOxiF,EAAIf,KAAKC,IAAIsjF,OAAOxiF,EAAG80C,KAAK90C,EAAI6U,EAC/C,CACA,CACA,SAAS2uE,qBAAqB55D,MAAOpW,OAAOiwE,UACxC,MAAMC,cAAgB95D,MAAMo5D,YAC5B,MAAMW,MAAEA,MAAAf,gBAAQA,gBAAkB9/D,QAAAA,QAAApN,KAAUA,MAAU+tE,SACtD,MAAMG,mBAAqBh6D,MAAMm5D,iBAAiBvvE,OAAOkwE,cAAgBC,MAAQ7gE,QAAS8/D,iBACpF,MAAAhqE,MAAQ3Z,KAAKL,MAAMuZ,UAAUgB,gBAAgByqE,mBAAmBhrE,MAAQxC,WAC9E,MAAMvB,EAAIgvE,UAAUD,mBAAmB/uE,EAAGa,KAAK1W,EAAG4Z,OAC5C,MAAAqW,UAAY60D,qBAAqBlrE,OACvC,MAAMkE,KAAOinE,iBAAiBH,mBAAmB5gF,EAAG0S,KAAKhU,EAAGutB,WACrD,MAAA,CACHvM,QAAS,KACT1f,EAAG4gF,mBAAmB5gF,EACtB6R,IACAoa,oBACAnS,UACAiG,IAAKlO,EACLkI,MAAOD,KAAOpH,KAAKhU,EACnBshB,OAAQnO,EAAIa,KAAK1W,EAEzB,CACA,SAASglF,gBAAgBruE,KAAMoY,MAC3B,IAAKA,KAAM,CACA,OAAA,IACf,CACI,MAAMjR,KAAEA,KAAAiG,IAAOA,IAAMhG,MAAAA,MAAAiG,OAAQA,QAAYrN,KACzC,MAAMsuE,aAAen2D,eAAe,CAChC9qB,EAAG8Z,KACHjI,EAAGkO,KACJgL,OAASD,eAAe,CACvB9qB,EAAG8Z,KACHjI,EAAGmO,QACJ+K,OAASD,eAAe,CACvB9qB,EAAG+Z,MACHlI,EAAGkO,KACJgL,OAASD,eAAe,CACvB9qB,EAAG+Z,MACHlI,EAAGmO,QACJ+K,MACH,OAAQk2D,YACZ,CACA,SAASV,qBAAqB35D,MAAOqlC,WAAYnsC,SAC7C,MAAMlH,MAAQ,GACR,MAAA6mE,WAAa74D,MAAM84D,aAAa3hF,OACtC,MAAM+tB,KAAOlF,MAAM3V,QACnB,MAAM4uE,kBAAEA,kBAAA39D,QAAoBA,SAAa4J,KAAKouB,YAC9C,MAAMumC,SAAW,CACbE,MAAOvB,sBAAsBtzD,MAAQ,EACrC8zD,gBAAiBC,kBAAoB/sE,GAAK2sE,WAAa,GAEvD,IAAA10D,KACJ,IAAA,IAAQnsB,EAAI,EAAGA,EAAI6gF,WAAY7gF,IAAI,CACtB6hF,SAAA3gE,QAAUA,QAAQlhB,GAClB6hF,SAAA/tE,KAAOu5C,WAAWrtD,GAC3B,MAAM+T,KAAO6tE,qBAAqB55D,MAAOhoB,EAAG6hF,UAC5C7nE,MAAM3G,KAAKU,MACX,GAAIuP,UAAY,OAAQ,CACfvP,KAAA+M,QAAUshE,gBAAgBruE,KAAMoY,MACrC,GAAIpY,KAAK+M,QAAS,CACPqL,KAAApY,IACvB,CACA,CACA,CACW,OAAAiG,KACX,CACA,SAASkoE,qBAAqBlrE,OACtB,GAAAA,QAAU,GAAKA,QAAU,IAAK,CACvB,MAAA,QACf,MAAA,GAAeA,MAAQ,IAAK,CACb,MAAA,MACf,CACW,MAAA,OACX,CACA,SAASmrE,iBAAiB/gF,EAAGtB,EAAGib,OAC5B,GAAIA,QAAU,QAAS,CACd3Z,GAAAtB,CACb,MAAA,GAAeib,QAAU,SAAU,CAC3B3Z,GAAKtB,EAAI,CACjB,CACW,OAAAsB,CACX,CACA,SAAS6gF,UAAUhvE,EAAG7V,EAAG4Z,OACjB,GAAAA,QAAU,IAAMA,QAAU,IAAK,CAC/B/D,GAAK7V,EAAI,CACZ,MAAU,GAAA4Z,MAAQ,KAAOA,MAAQ,GAAI,CAC7B/D,GAAA7V,CACb,CACW,OAAA6V,CACX,CACA,SAASqvE,kBAAkBp7D,IAAKgG,KAAMnZ,MAClC,MAAMmH,KAAEA,KAAAiG,IAAOA,IAAMhG,MAAAA,MAAAiG,OAAQA,QAAYrN,KACnC,MAAAuR,cAAEA,eAAmB4H,KACvB,IAACtd,cAAc0V,eAAgB,CACzB,MAAAu7C,aAAe9wC,cAAc7C,KAAK2zC,cAClC,MAAA3/C,QAAU8O,UAAU9C,KAAK3H,iBAC/B2B,IAAIkG,UAAY9H,cACV,MAAAi9D,aAAernE,KAAOgG,QAAQhG,KAC9B,MAAAsnE,YAAcrhE,IAAMD,QAAQC,IAC5B,MAAAshE,cAAgBtnE,MAAQD,KAAOgG,QAAQqD,MACvC,MAAAm+D,eAAiBthE,OAASD,IAAMD,QAAQuJ,OAC1C,GAAAxe,OAAO6M,OAAO+nD,cAAchL,KAAM54D,GAAIA,IAAM,GAAI,CAChDiqB,IAAIqE,YACJuD,mBAAmB5H,IAAK,CACpB9lB,EAAGmhF,aACHtvE,EAAGuvE,YACH1iF,EAAG2iF,cACHrlF,EAAGslF,eACHv3D,OAAQ01C,eAEZ35C,IAAI6E,MAChB,KAAe,CACH7E,IAAImH,SAASk0D,aAAcC,YAAaC,cAAeC,eACnE,CACA,CACA,CACA,SAASC,gBAAgB36D,MAAOgwD,YAC5B,MAAM9wD,IAAEA,IAAM7U,SAASipC,YAAEA,cAAoBtzB,MAC7C,IAAA,IAAQhoB,EAAIg4E,WAAa,EAAGh4E,GAAK,EAAGA,IAAI,CAC9B,MAAA+T,KAAOiU,MAAM05D,iBAAiB1hF,GAChC,IAAC+T,KAAK+M,QAAS,CACf,QACZ,CACQ,MAAM8vC,YAActV,YAAYxoB,WAAW9K,MAAMk5D,qBAAqBlhF,IACpDsiF,kBAAAp7D,IAAK0pC,YAAa78C,MAC9B,MAAAstE,OAASpxD,OAAO2gC,YAAYhqC,MAClC,MAAMxlB,EAAEA,EAAA6R,EAAIA,EAAIoa,UAAAA,WAAetZ,KACpBua,WAAApH,IAAKc,MAAM84D,aAAa9gF,GAAIoB,EAAG6R,EAAIouE,OAAOt6D,WAAa,EAAGs6D,OAAQ,CACzE5yE,MAAOmiD,YAAYniD,MACnB4e,oBACAC,aAAc,UAE1B,CACA,CACA,SAASs1D,eAAe56D,MAAOmD,OAAQkwB,SAAU28B,YACvC,MAAA9wD,IAAEA,KAASc,MACjB,GAAIqzB,SAAU,CACVn0B,IAAIuE,IAAIzD,MAAM4yB,QAAS5yB,MAAM6yB,QAAS1vB,OAAQ,EAAGhX,IACzD,KAAW,CACH,IAAIsnC,cAAgBzzB,MAAMm5D,iBAAiB,EAAGh2D,QAC9CjE,IAAIyE,OAAO8vB,cAAcr6C,EAAGq6C,cAAcxoC,GAC1C,IAAA,IAAQjT,EAAI,EAAGA,EAAIg4E,WAAYh4E,IAAI,CACfy7C,cAAAzzB,MAAMm5D,iBAAiBnhF,EAAGmrB,QAC1CjE,IAAI0E,OAAO6vB,cAAcr6C,EAAGq6C,cAAcxoC,EACtD,CACA,CACA,CACA,SAAS4vE,eAAe76D,MAAO86D,aAAc33D,OAAQ6sD,WAAYpoB,YAC7D,MAAM1oC,IAAMc,MAAMd,IAClB,MAAMm0B,SAAWynC,aAAaznC,SAC9B,MAAQ5sC,MAAAA,OAAQoV,UAAAA,WAAei/D,aAC3B,IAACznC,WAAa28B,aAAevpE,SAAUoV,WAAasH,OAAS,EAAG,CAChE,MACR,CACIjE,IAAIwC,OACJxC,IAAI+G,YAAcxf,OAClByY,IAAIrD,UAAYA,UAChBqD,IAAI4qC,YAAYlC,WAAWvrC,MAAQ,IACnC6C,IAAI6qC,eAAiBnC,WAAWtrC,WAChC4C,IAAIqE,YACWq3D,eAAA56D,MAAOmD,OAAQkwB,SAAU28B,YACxC9wD,IAAIwE,YACJxE,IAAI+E,SACJ/E,IAAI4C,SACR,CACA,SAASi5D,wBAAwB3uD,OAAQxiB,OAAO47B,OAC5C,OAAO5c,cAAcwD,OAAQ,CACzBoZ,YACA57B,MAAAA,OACA1D,KAAM,cAEd,CACA,MAAM80E,0BAA0BlE,gBA4C5B,WAAA7wE,CAAYk1B,KACRoQ,MAAMpQ,KACLh1B,KAAKysC,aAAU,EACfzsC,KAAK0sC,aAAU,EACf1sC,KAAKizE,iBAAc,EACnBjzE,KAAK2yE,aAAe,GACrB3yE,KAAKuzE,iBAAmB,EAChC,CACI,aAAAl2B,GACU,MAAAtqC,QAAU/S,KAAKylE,SAAW5jD,UAAUwwD,sBAAsBryE,KAAKkE,SAAW,GAChF,MAAMvS,EAAIqO,KAAKoW,MAAQpW,KAAKygB,SAAW1N,QAAQqD,MAC/C,MAAMnnB,EAAI+Q,KAAKsc,OAAStc,KAAK+rB,UAAYhZ,QAAQuJ,OAC5Ctc,KAAAysC,QAAUv9C,KAAK8X,MAAMhH,KAAK+M,KAAOpb,EAAI,EAAIohB,QAAQhG,MACjD/M,KAAA0sC,QAAUx9C,KAAK8X,MAAMhH,KAAKgT,IAAM/jB,EAAI,EAAI8jB,QAAQC,KAChDhT,KAAAizE,YAAc/jF,KAAK8X,MAAM9X,KAAKE,IAAIuC,EAAG1C,GAAK,EACvD,CACI,mBAAAuuD,GACI,MAAMpuD,IAAEA,IAAMD,IAAAA,KAAS6Q,KAAK6+B,UAAU,OACjC7+B,KAAA5Q,IAAM4S,eAAe5S,OAASwY,MAAMxY,KAAOA,IAAM,EACjD4Q,KAAA7Q,IAAM6S,eAAe7S,OAASyY,MAAMzY,KAAOA,IAAM,EACtD6Q,KAAK6wE,wBACb,CACC,gBAAAO,GACO,OAAOliF,KAAK6qD,KAAK/5C,KAAKizE,YAAcZ,sBAAsBryE,KAAKkE,SACvE,CACI,kBAAA26C,CAAmB1qC,OACfw8D,gBAAgBhvE,UAAUk9C,mBAAmBh9C,KAAK7B,KAAMmU,OACxDnU,KAAK2yE,aAAe3yE,KAAKo+B,YAAYhsC,IAAI,CAACsP,MAAO+B,UAC7C,MAAM47B,MAAQ18B,SAAS3C,KAAKkE,QAAQipC,YAAYxqC,SAAU,CACtDjB,MACA+B,QACDzD,MACI,OAAAq/B,OAASA,QAAU,EAAIA,MAAQ,KACvCvZ,OAAO,CAACh3B,EAAG+C,IAAImO,KAAKoU,MAAM4yB,kBAAkBn1C,GACvD,CACI,GAAAusD,GACI,MAAMr/B,KAAO/e,KAAKkE,QAClB,GAAI6a,KAAK5J,SAAW4J,KAAKouB,YAAYh4B,QAAS,CAC1Cq9D,mBAAmBxyE,KAC/B,KAAe,CACHA,KAAKszE,eAAe,EAAG,EAAG,EAAG,EACzC,CACA,CACI,cAAAA,CAAewB,aAAcC,cAAeC,YAAaC,gBACrDj1E,KAAKysC,SAAWv9C,KAAK8X,OAAO8tE,aAAeC,eAAiB,GAC5D/0E,KAAK0sC,SAAWx9C,KAAK8X,OAAOguE,YAAcC,gBAAkB,GAC5Dj1E,KAAKizE,aAAe/jF,KAAKE,IAAI4Q,KAAKizE,YAAc,EAAG/jF,KAAKC,IAAI2lF,aAAcC,cAAeC,YAAaC,gBAC9G,CACI,aAAAroC,CAAcnpC,QACV,MAAMyxE,gBAAkBlvE,KAAOhG,KAAK2yE,aAAa3hF,QAAU,GACrD,MAAAs3C,WAAatoC,KAAKkE,QAAQokC,YAAc,EAC9C,OAAOl/B,gBAAgB3F,OAAQyxE,gBAAkBhtE,UAAUogC,YACnE,CACI,6BAAA0E,CAA8BtrC,OACtB,GAAAD,cAAcC,OAAQ,CACf,OAAAk9B,GACnB,CACQ,MAAMu2C,cAAgBn1E,KAAKizE,aAAejzE,KAAK7Q,IAAM6Q,KAAK5Q,KACtD,GAAA4Q,KAAKkE,QAAQjB,QAAS,CACd,OAAAjD,KAAK7Q,IAAMuS,OAASyzE,aACxC,CACgB,OAAAzzE,MAAQ1B,KAAK5Q,KAAO+lF,aACpC,CACI,6BAAAC,CAA8BrsE,UACtB,GAAAtH,cAAcsH,UAAW,CAClB,OAAA61B,GACnB,CACQ,MAAMy2C,eAAiBtsE,UAAY/I,KAAKizE,aAAejzE,KAAK7Q,IAAM6Q,KAAK5Q,MACvE,OAAO4Q,KAAKkE,QAAQjB,QAAUjD,KAAK7Q,IAAMkmF,eAAiBr1E,KAAK5Q,IAAMimF,cAC7E,CACI,oBAAAtC,CAAqBtvE,QACX,MAAA0pC,YAAcntC,KAAK2yE,cAAgB,GACzC,GAAIlvE,QAAS,GAAKA,OAAQ0pC,YAAYn8C,OAAQ,CACpC,MAAAskF,WAAanoC,YAAY1pC,QAC/B,OAAOmxE,wBAAwB50E,KAAKmc,aAAc1Y,OAAO6xE,WACrE,CACA,CACI,gBAAAtC,CAAiBvvE,OAAO8xE,mBAAoB1C,gBAAkB,GAC1D,MAAMhqE,MAAQ7I,KAAK4sC,cAAcnpC,QAAS4C,QAAUwsE,gBAC7C,MAAA,CACH5/E,EAAG/D,KAAKmhB,IAAIxH,OAAS0sE,mBAAqBv1E,KAAKysC,QAC/C3nC,EAAG5V,KAAKkgB,IAAIvG,OAAS0sE,mBAAqBv1E,KAAK0sC,QAC/C7jC,YAEZ,CACI,wBAAA0kC,CAAyB9pC,OAAO/B,OAC5B,OAAO1B,KAAKgzE,iBAAiBvvE,OAAOzD,KAAKgtC,8BAA8BtrC,OAC/E,CACI,eAAA8zE,CAAgB/xE,QACZ,OAAOzD,KAAKutC,yBAAyB9pC,QAAS,EAAGzD,KAAKohD,eAC9D,CACI,qBAAAq0B,CAAsBhyE,QACZ,MAAAsJ,KAAEA,SAAOiG,IAAMhG,MAAAA,MAAAiG,OAAQA,QAAYjT,KAAKuzE,iBAAiB9vE,QACxD,MAAA,CACHsJ,UACAiG,QACAhG,YACAiG,cAEZ,CACC,cAAAuwC,GACO,MAAMxrC,gBAAEA,gBAAkBvC,MAAMy3B,SAAEA,WAAiBltC,KAAKkE,QACxD,GAAI8T,gBAAiB,CACjB,MAAMe,IAAM/Y,KAAK+Y,IACjBA,IAAIwC,OACJxC,IAAIqE,YACWq3D,eAAAz0E,KAAMA,KAAKgtC,8BAA8BhtC,KAAK4wE,WAAY1jC,SAAUltC,KAAK2yE,aAAa3hF,QACrG+nB,IAAIwE,YACJxE,IAAIkG,UAAYjH,gBAChBe,IAAI6E,OACJ7E,IAAI4C,SAChB,CACA,CACC,QAAA8nC,GACO,MAAM1qC,IAAM/Y,KAAK+Y,IACjB,MAAMgG,KAAO/e,KAAKkE,QAClB,MAAM+oC,WAAEA,WAAAx3B,KAAaA,KAAOQ,OAAAA,QAAY8I,KAClC,MAAA8qD,WAAa7pE,KAAK2yE,aAAa3hF,OACrC,IAAIa,EAAGujB,OAAQy5B,SACX,GAAA9vB,KAAKouB,YAAYh4B,QAAS,CAC1Bq/D,gBAAgBx0E,KAAM6pE,WAClC,CACQ,GAAIp0D,KAAKN,QAAS,CACdnV,KAAKmU,MAAM/I,QAAQ,CAACyoB,KAAMpwB,UACtB,GAAIA,SAAU,GAAKA,SAAU,GAAKzD,KAAK5Q,IAAM,EAAG,CACnCgmB,OAAApV,KAAKgtC,8BAA8BnZ,KAAKnyB,OAC3C,MAAA0W,QAAUpY,KAAKmc,WAAW1Y,QAC1B,MAAAg/C,YAAchtC,KAAKkP,WAAWvM,SAC9B,MAAAsqC,kBAAoBzsC,OAAO0O,WAAWvM,SAC5Cs8D,eAAe10E,KAAMyiD,YAAartC,OAAQy0D,WAAYnnB,kBAC1E,GAEA,CACQ,GAAIzV,WAAW93B,QAAS,CACpB4D,IAAIwC,OACJ,IAAI1pB,EAAIg4E,WAAa,EAAGh4E,GAAK,EAAGA,IAAI,CAChC,MAAM4wD,YAAcxV,WAAWtoB,WAAW3kB,KAAK+yE,qBAAqBlhF,IACpE,MAAQyO,MAAAA,OAAQoV,UAAAA,WAAe+sC,YAC3B,IAAC/sC,YAAcpV,OAAO,CACtB,QACpB,CACgByY,IAAIrD,UAAYA,UAChBqD,IAAI+G,YAAcxf,OACdyY,IAAA4qC,YAAYlB,YAAY5wB,YAC5B9Y,IAAI6qC,eAAiBnB,YAAY3wB,iBACjC1c,OAASpV,KAAKgtC,8BAA8BjuB,KAAK9b,QAAUjD,KAAK5Q,IAAM4Q,KAAK7Q,KAChE0/C,SAAA7uC,KAAKgzE,iBAAiBnhF,EAAGujB,QACpC2D,IAAIqE,YACJrE,IAAIyE,OAAOxd,KAAKysC,QAASzsC,KAAK0sC,SAC9B3zB,IAAI0E,OAAOoxB,SAAS57C,EAAG47C,SAAS/pC,GAChCiU,IAAI+E,QACpB,CACY/E,IAAI4C,SAChB,CACA,CACC,UAAAkoC,GAAa,CACb,UAAAE,GACO,MAAMhrC,IAAM/Y,KAAK+Y,IACjB,MAAMgG,KAAO/e,KAAKkE,QAClB,MAAMw0C,SAAW35B,KAAK5K,MAClB,IAACukC,SAASvjC,QAAS,CACnB,MACZ,CACc,MAAAmzB,WAAatoC,KAAK4sC,cAAc,GACtC,IAAIx3B,OAAQgB,MACZ2C,IAAIwC,OACJxC,IAAImE,UAAUld,KAAKysC,QAASzsC,KAAK0sC,SACjC3zB,IAAIjmB,OAAOw1C,YACXvvB,IAAImG,UAAY,SAChBnG,IAAIoG,aAAe,SACnBnf,KAAKmU,MAAM/I,QAAQ,CAACyoB,KAAMpwB,UACtB,GAAIA,SAAU,GAAKzD,KAAK5Q,KAAO,IAAM2vB,KAAK9b,QAAS,CAC/C,MAChB,CACY,MAAMw/C,YAAc/J,SAAS/zB,WAAW3kB,KAAKmc,WAAW1Y,SAClD,MAAAm9C,SAAW9+B,OAAO2gC,YAAYhqC,MACpCrD,OAASpV,KAAKgtC,8BAA8BhtC,KAAKmU,MAAM1Q,QAAO/B,OAC9D,GAAI+gD,YAAYvrC,kBAAmB,CAC/B6B,IAAIN,KAAOmoC,SAAS5lC,OACpB5E,MAAQ2C,IAAImC,YAAY2Y,KAAKwL,OAAOjpB,MACpC2C,IAAIkG,UAAYwjC,YAAYtrC,cACtB,MAAApE,QAAU8O,UAAU4gC,YAAYrrC,iBACtC2B,IAAImH,UAAU9J,MAAQ,EAAIrD,QAAQhG,MAAOqI,OAASwrC,SAASj7C,KAAO,EAAIoN,QAAQC,IAAKoD,MAAQrD,QAAQqD,MAAOwqC,SAASj7C,KAAOoN,QAAQuJ,OAClJ,CACY6D,WAAWpH,IAAK8a,KAAKwL,MAAO,GAAIjqB,OAAQwrC,SAAU,CAC9CtgD,MAAOmiD,YAAYniD,MACnBggB,YAAamiC,YAAY9rC,gBACzB0J,YAAaoiC,YAAY/rC,oBAGjCqC,IAAI4C,SACZ,CACC,SAAAsoC,GAAY,EA3OT/hB,cADE2yC,kBACK,KAAK,gBACf3yC,cAFK2yC,kBAEE,WAAW,CACX1/D,QAAS,KACTugE,QAAS,KACT7mC,SAAU,YACV5B,WAAY,CACR93B,QAAS,KACTO,UAAW,EACXmc,WAAY,GACZC,iBAAkB,GAEtBrc,KAAM,CACFy3B,SAAU,OAEd5E,WAAY,EACZn0B,MAAO,CACH+C,kBAAmB,KACnBvU,SAAUsS,MAAMjB,WAAWC,SAE/Bk5B,YAAa,CACTh2B,mBAAe,EACfC,gBAAiB,EACjBjC,QAAS,KACTsD,KAAM,CACF9S,KAAM,IAEV,QAAAhD,CAAU08B,OACC,OAAAA,KACV,EACDtsB,QAAS,EACT+/D,kBAAmB,SAG3B5wC,cAlCE2yC,kBAkCK,gBAAgB,CACnB,mBAAoB,cACpB,oBAAqB,QACrB,cAAe,UAEnB3yC,cAvCE2yC,kBAuCK,cAAc,CACjB5nC,WAAY,CACRh7B,UAAW,UAsMvB,MAAM0jE,UAAY,CACdC,YAAa,CACTC,OAAQ,KACRlwE,KAAM,EACNgsE,MAAO,KAEXmE,OAAQ,CACJD,OAAQ,KACRlwE,KAAM,IACNgsE,MAAO,IAEXoE,OAAQ,CACJF,OAAQ,KACRlwE,KAAM,IACNgsE,MAAO,IAEXqE,KAAM,CACFH,OAAQ,KACRlwE,KAAM,KACNgsE,MAAO,IAEXsE,IAAK,CACDJ,OAAQ,KACRlwE,KAAM,MACNgsE,MAAO,IAEXuE,KAAM,CACFL,OAAQ,MACRlwE,KAAM,OACNgsE,MAAO,GAEXwE,MAAO,CACHN,OAAQ,KACRlwE,KAAM,OACNgsE,MAAO,IAEXyE,QAAS,CACLP,OAAQ,MACRlwE,KAAM,OACNgsE,MAAO,GAEX0E,KAAM,CACFR,OAAQ,KACRlwE,KAAM,SAGb,MAAM2wE,MAAgCx4E,OAAAD,KAAK83E,WAC3C,SAASY,OAAOvmF,EAAGC,GAChB,OAAOD,EAAIC,CACf,CACC,SAAS22B,MAAM/M,MAAOna,OACf,GAAA+B,cAAc/B,OAAQ,CACf,OAAA,IACf,CACI,MAAM82E,QAAU38D,MAAM48D,SACtB,MAAMC,OAAEA,OAAS7nF,MAAAA,OAAQ8nF,WAAAA,YAAgB98D,MAAM+8D,WAC/C,IAAIl1E,MAAQhC,MACR,UAAOg3E,SAAW,WAAY,CAC9Bh1E,MAAQg1E,OAAOh1E,MACvB,CACQ,IAACM,eAAeN,OAAQ,CAChBA,aAAOg1E,SAAW,SAAWF,QAAQ5vD,MAAMllB,MAAOg1E,QAAUF,QAAQ5vD,MAAMllB,MAC1F,CACI,GAAIA,QAAU,KAAM,CACT,OAAA,IACf,CACI,GAAI7S,OAAO,CACP6S,MAAQ7S,SAAU,SAAW8Y,SAASgvE,aAAeA,aAAe,MAAQH,QAAQroC,QAAQzsC,MAAO,UAAWi1E,YAAcH,QAAQroC,QAAQzsC,MAAO7S,OAC3J,CACI,OAAQ6S,KACZ,CACC,SAASm1E,0BAA0BC,QAAS1nF,IAAKD,IAAK4nF,UACnD,MAAM1zE,KAAOizE,MAAMtlF,OACX,IAAA,IAAAa,EAAIykF,MAAMtyE,QAAQ8yE,SAAUjlF,EAAIwR,KAAO,IAAKxR,EAAE,CAClD,MAAMmlF,SAAWrB,UAAUW,MAAMzkF,IACjC,MAAM+iC,OAASoiD,SAASrF,MAAQqF,SAASrF,MAAQ1vE,OAAOg1E,iBACpD,GAAAD,SAASnB,QAAU3mF,KAAK6qD,MAAM5qD,IAAMC,MAAQwlC,OAASoiD,SAASrxE,QAAUoxE,SAAU,CAClF,OAAOT,MAAMzkF,EACzB,CACA,CACW,OAAAykF,MAAMjzE,KAAO,EACxB,CACC,SAAS6zE,2BAA2Br9D,MAAOklC,SAAU+3B,QAAS1nF,IAAKD,KACxD,IAAA,IAAA0C,EAAIykF,MAAMtlF,OAAS,EAAGa,GAAKykF,MAAMtyE,QAAQ8yE,SAAUjlF,IAAI,CACrD,MAAAm+E,KAAOsG,MAAMzkF,GACnB,GAAI8jF,UAAU3F,MAAM6F,QAAUh8D,MAAM48D,SAASvoC,KAAK/+C,IAAKC,IAAK4gF,OAASjxB,SAAW,EAAG,CACxE,OAAAixB,IACnB,CACA,CACI,OAAOsG,MAAMQ,QAAUR,MAAMtyE,QAAQ8yE,SAAW,EACpD,CACC,SAASK,mBAAmBnH,MACzB,IAAA,IAAQn+E,EAAIykF,MAAMtyE,QAAQgsE,MAAQ,EAAG3sE,KAAOizE,MAAMtlF,OAAQa,EAAIwR,OAAQxR,EAAE,CACpE,GAAI8jF,UAAUW,MAAMzkF,IAAIgkF,OAAQ,CAC5B,OAAOS,MAAMzkF,EACzB,CACA,CACA,CACC,SAASulF,QAAQjjE,MAAOkjE,KAAMC,YAC3B,IAAKA,WAAY,CACbnjE,MAAMkjE,MAAQ,IACtB,MAAA,GAAeC,WAAWtmF,OAAQ,CAC1B,MAAMoZ,GAAEA,GAAKD,GAAAA,IAAQH,QAAQstE,WAAYD,MACnC,MAAAE,UAAYD,WAAWltE,KAAOitE,KAAOC,WAAWltE,IAAMktE,WAAWntE,IACvEgK,MAAMojE,WAAa,IAC3B,CACA,CACC,SAASC,cAAc39D,MAAO1F,MAAO/hB,KAAKqlF,WACvC,MAAMjB,QAAU38D,MAAM48D,SAChB,MAAAt9B,OAASq9B,QAAQroC,QAAQh6B,MAAM,GAAGzS,MAAO+1E,WAC/C,MAAMltE,KAAO4J,MAAMA,MAAMnjB,OAAS,GAAG0Q,MACrC,IAAIsV,MAAOvT,OACP,IAAAuT,MAAQmiC,MAAOniC,OAASzM,KAAMyM,OAASw/D,QAAQh0D,IAAIxL,MAAO,EAAGygE,WAAW,CACxEh0E,OAAQrR,KAAI4kB,OACZ,GAAIvT,QAAS,EAAG,CACNA,MAAAA,QAAOuT,MAAQ,IACjC,CACA,CACW,OAAA7C,KACX,CACC,SAASujE,oBAAoB79D,MAAOlP,OAAQ8sE,WACzC,MAAMtjE,MAAQ,GACb,MAAM/hB,KAAM,CAAE,EACf,MAAMiR,KAAOsH,OAAO3Z,OACpB,IAAIa,EAAG6P,MACP,IAAI7P,EAAI,EAAGA,EAAIwR,OAAQxR,EAAE,CACrB6P,MAAQiJ,OAAO9Y,GACfO,KAAIsP,OAAS7P,EACbsiB,MAAMjP,KAAK,CACPxD,YACAsV,MAAO,OAEnB,CACW,OAAA3T,OAAS,IAAMo0E,UAAYtjE,MAAQqjE,cAAc39D,MAAO1F,MAAO/hB,KAAKqlF,UAC/E,CACA,MAAME,kBAAkBp8B,MAqBvB,WAAAz7C,CAAYyhB,OACL6jB,MAAM7jB,OACLvhB,KAAKoiC,OAAS,CACXvnB,KAAM,GACNsjB,OAAQ,GACRjH,IAAK,IAERl3B,KAAK43E,MAAQ,MACb53E,KAAK63E,gBAAa,EACnB73E,KAAK83E,SAAW,CAAE,EAClB93E,KAAK+3E,YAAc,MACnB/3E,KAAK42E,gBAAa,CAC1B,CACI,IAAA5oC,CAAKggB,UAAWjvC,KAAO,IACnB,MAAMs4D,KAAOrpB,UAAUqpB,OAASrpB,UAAUqpB,KAAO,CAAA,GAC1C,MAAAb,QAAUx2E,KAAKy2E,SAAW,IAAIpoC,SAASC,MAAM0f,UAAU3f,SAAStb,MACvEyjD,QAAQxoC,KAAKjvB,MACbta,QAAQ4yE,KAAKW,eAAgBxB,QAAQvoC,WACrCjuC,KAAK42E,WAAa,CACdF,OAAQW,KAAKX,OACb7nF,MAAOwoF,KAAKxoF,MACZ8nF,WAAYU,KAAKV,YAErBvxC,MAAM4I,KAAKggB,WACXhuD,KAAK+3E,YAAch5D,KAAKk5D,UAChC,CACC,KAAArxD,CAAMsT,IAAKz2B,QACJ,GAAIy2B,WAAmB,EAAA,CACZ,OAAA,IACnB,CACe,OAAAtT,MAAM5mB,KAAMk6B,IAC3B,CACI,YAAAga,GACI9O,MAAM8O,eACNl0C,KAAKoiC,OAAS,CACVvnB,KAAM,GACNsjB,OAAQ,GACRjH,IAAK,GAEjB,CACI,mBAAAsmB,GACI,MAAMt5C,QAAUlE,KAAKkE,QACrB,MAAMsyE,QAAUx2E,KAAKy2E,SACf,MAAAzG,KAAO9rE,QAAQmzE,KAAKrH,MAAQ,MAClC,IAAI5gF,IAAEA,IAAMD,IAAAA,IAAA6e,WAAMA,sBAAaC,YAAgBjO,KAAKkO,gBAC3D,SAASgqE,aAAa5iE,QACX,IAAKtH,aAAepG,MAAM0N,OAAOlmB,KAAM,CACnCA,IAAMF,KAAKE,IAAIA,IAAKkmB,OAAOlmB,IAC3C,CACY,IAAK6e,aAAerG,MAAM0N,OAAOnmB,KAAM,CACnCA,IAAMD,KAAKC,IAAIA,IAAKmmB,OAAOnmB,IAC3C,CACA,CACY,IAAC6e,aAAeC,WAAY,CACfiqE,aAAAl4E,KAAKm4E,mBAClB,GAAIj0E,QAAQoR,SAAW,SAAWpR,QAAQiQ,MAAMzQ,SAAW,SAAU,CACpDw0E,aAAAl4E,KAAK6+B,UAAU,OAC5C,CACA,CACQzvC,IAAM4S,eAAe5S,OAASwY,MAAMxY,KAAOA,KAAOonF,QAAQroC,QAAQ7a,KAAKC,MAAOy8C,MAC9E7gF,IAAM6S,eAAe7S,OAASyY,MAAMzY,KAAOA,KAAOqnF,QAAQpoC,MAAM9a,KAAKC,MAAOy8C,MAAQ,EACpFhwE,KAAK5Q,IAAMF,KAAKE,IAAIA,IAAKD,IAAM,GAC/B6Q,KAAK7Q,IAAMD,KAAKC,IAAIC,IAAM,EAAGD,IACrC,CACC,eAAAgpF,GACa,MAAAtyD,IAAM7lB,KAAKo4E,qBACjB,IAAIhpF,IAAM6S,OAAOkE,kBACjB,IAAIhX,IAAM8S,OAAOw2B,kBACjB,GAAI5S,IAAI70B,OAAQ,CACZ5B,IAAMy2B,IAAI,GACJ12B,IAAA02B,IAAIA,IAAI70B,OAAS,EACnC,CACe,MAAA,CACH5B,QACAD,QAEZ,CACC,UAAAwuD,GACO,MAAMz5C,QAAUlE,KAAKkE,QACrB,MAAMm0E,SAAWn0E,QAAQmzE,KACzB,MAAM3+B,SAAWx0C,QAAQiQ,MACnB,MAAAmjE,WAAa5+B,SAASh1C,SAAW,SAAW1D,KAAKo4E,qBAAuBp4E,KAAKs4E,YACnF,GAAIp0E,QAAQoR,SAAW,SAAWgiE,WAAWtmF,OAAQ,CACjDgP,KAAK5Q,IAAM4Q,KAAKo8C,UAAYk7B,WAAW,GACvCt3E,KAAK7Q,IAAM6Q,KAAKm8C,UAAYm7B,WAAWA,WAAWtmF,OAAS,EACvE,CACQ,MAAM5B,IAAM4Q,KAAK5Q,IACjB,MAAMD,IAAM6Q,KAAK7Q,IACjB,MAAMglB,MAAQzJ,eAAe4sE,WAAYloF,IAAKD,KACzC6Q,KAAA43E,MAAQS,SAASrI,OAASt3B,SAAS9hC,SAAWigE,0BAA0BwB,SAASvB,QAAS92E,KAAK5Q,IAAK4Q,KAAK7Q,IAAK6Q,KAAKu4E,kBAAkBnpF,MAAQ8nF,2BAA2Bl3E,KAAMmU,MAAMnjB,OAAQqnF,SAASvB,QAAS92E,KAAK5Q,IAAK4Q,KAAK7Q,MAC7N6Q,KAAA63E,YAAcn/B,SAAS1hC,MAAMgiC,SAAWh5C,KAAK43E,QAAU,YAAS,EAAYT,mBAAmBn3E,KAAK43E,OACzG53E,KAAKw4E,YAAYlB,YACjB,GAAIpzE,QAAQjB,QAAS,CACjBkR,MAAMlR,SAClB,CACQ,OAAOy0E,oBAAoB13E,KAAMmU,MAAOnU,KAAK63E,WACrD,CACI,aAAA35B,GACQ,GAAAl+C,KAAKkE,QAAQu0E,oBAAqB,CAC7Bz4E,KAAAw4E,YAAYx4E,KAAKmU,MAAM/hB,IAAKyhC,OAAQA,KAAKnyB,OAC1D,CACA,CACC,WAAA82E,CAAYlB,WAAa,IAClB,IAAIhuE,MAAQ,EACZ,IAAIC,IAAM,EACV,IAAI4vC,MAAO5uC,KACX,GAAIvK,KAAKkE,QAAQkR,QAAUkiE,WAAWtmF,OAAQ,CAC1CmoD,MAAQn5C,KAAK04E,mBAAmBpB,WAAW,IACvC,GAAAA,WAAWtmF,SAAW,EAAG,CACzBsY,MAAQ,EAAI6vC,KAC5B,KAAmB,CACH7vC,OAAStJ,KAAK04E,mBAAmBpB,WAAW,IAAMn+B,OAAS,CAC3E,CACY5uC,KAAOvK,KAAK04E,mBAAmBpB,WAAWA,WAAWtmF,OAAS,IAC1D,GAAAsmF,WAAWtmF,SAAW,EAAG,CACnBuY,IAAAgB,IACtB,KAAmB,CACIhB,KAAAgB,KAAOvK,KAAK04E,mBAAmBpB,WAAWA,WAAWtmF,OAAS,KAAO,CAC5F,CACA,CACQ,MAAMuxD,MAAQ+0B,WAAWtmF,OAAS,EAAI,GAAM,IACpCsY,MAAAO,YAAYP,MAAO,EAAGi5C,OACxBh5C,IAAAM,YAAYN,IAAK,EAAGg5C,OAC1BviD,KAAK83E,SAAW,CACZxuE,YACAC,QACAqrB,OAAQ,GAAKtrB,MAAQ,EAAIC,KAErC,CACC,SAAA+uE,GACO,MAAM9B,QAAUx2E,KAAKy2E,SACrB,MAAMrnF,IAAM4Q,KAAK5Q,IACjB,MAAMD,IAAM6Q,KAAK7Q,IACjB,MAAM+U,QAAUlE,KAAKkE,QACrB,MAAMm0E,SAAWn0E,QAAQmzE,KACnB,MAAAtgE,MAAQshE,SAASrI,MAAQ6G,0BAA0BwB,SAASvB,QAAS1nF,IAAKD,IAAK6Q,KAAKu4E,kBAAkBnpF,MAC5G,MAAM+hF,SAAW9uE,eAAe6B,QAAQiQ,MAAMg9D,SAAU,GACxD,MAAMwH,QAAU5hE,QAAU,OAASshE,SAAS1B,WAAa,MACzD,MAAMiC,WAAajxE,SAASgxE,UAAYA,UAAY,KACpD,MAAMxkE,MAAQ,CAAE,EAChB,IAAIglC,MAAQ/pD,IACZ,IAAIioF,KAAM7pE,MACV,GAAIorE,WAAY,CACZz/B,OAASq9B,QAAQroC,QAAQgL,MAAO,UAAWw/B,QACvD,CACQx/B,OAASq9B,QAAQroC,QAAQgL,MAAOy/B,WAAa,MAAQ7hE,OACrD,GAAIy/D,QAAQtoC,KAAK/+C,IAAKC,IAAK2nB,OAAS,IAASo6D,SAAU,CAC7C,MAAA,IAAI5iF,MAAMa,IAAM,QAAUD,IAAM,uCAAyCgiF,SAAW,IAAMp6D,MAC5G,CACQ,MAAMugE,WAAapzE,QAAQiQ,MAAMzQ,SAAW,QAAU1D,KAAK64E,oBAC3D,IAAIxB,KAAOl+B,MAAO3rC,MAAQ,EAAG6pE,KAAOloF,IAAKkoF,MAAQb,QAAQh0D,IAAI60D,KAAMlG,SAAUp6D,OAAQvJ,QAAQ,CACjF4pE,QAAAjjE,MAAOkjE,KAAMC,WACjC,CACQ,GAAID,OAASloF,KAAO+U,QAAQoR,SAAW,SAAW9H,QAAU,EAAG,CACnD4pE,QAAAjjE,MAAOkjE,KAAMC,WACjC,CACe,OAAAx5E,OAAOD,KAAKsW,OAAO7M,KAAKivE,QAAQnkF,IAAKa,IAAKA,EACzD,CACC,gBAAAqsC,CAAiB59B,OACV,MAAM80E,QAAUx2E,KAAKy2E,SACf,MAAA4B,SAAWr4E,KAAKkE,QAAQmzE,KAC9B,GAAIgB,SAASS,cAAe,CACxB,OAAOtC,QAAQziE,OAAOrS,MAAO22E,SAASS,cAClD,CACQ,OAAOtC,QAAQziE,OAAOrS,MAAO22E,SAASL,eAAee,SAC7D,CACC,MAAAhlE,CAAOrS,MAAOqS,QACP,MAAM7P,QAAUlE,KAAKkE,QACf,MAAA+pC,QAAU/pC,QAAQmzE,KAAKW,eAC7B,MAAMhI,KAAOhwE,KAAK43E,MACZ,MAAAoB,IAAMjlE,QAAUk6B,QAAQ+hC,MAC9B,OAAOhwE,KAAKy2E,SAAS1iE,OAAOrS,MAAOs3E,IAC3C,CACC,mBAAAC,CAAoB5B,KAAM5zE,OAAO0Q,MAAOJ,QACjC,MAAM7P,QAAUlE,KAAKkE,QACf,MAAAuP,UAAYvP,QAAQiQ,MAAMxR,SAChC,GAAI8Q,UAAW,CACX,OAAO9Q,SAAS8Q,UAAW,CACvB4jE,KACA5zE,OACA0Q,OACDnU,KACf,CACc,MAAAiuC,QAAU/pC,QAAQmzE,KAAKW,eAC7B,MAAMhI,KAAOhwE,KAAK43E,MAClB,MAAMH,UAAYz3E,KAAK63E,WACjB,MAAAqB,YAAclJ,MAAQ/hC,QAAQ+hC,MAC9B,MAAAmJ,YAAc1B,WAAaxpC,QAAQwpC,WACnC,MAAA5jD,KAAO1f,MAAM1Q,QACnB,MAAMuT,MAAQygE,WAAa0B,aAAetlD,MAAQA,KAAK7c,MACvD,OAAOhX,KAAKy2E,SAAS1iE,OAAOsjE,KAAMtjE,SAAWiD,MAAQmiE,YAAcD,aAC3E,CACC,kBAAAr6B,CAAmB1qC,OACZ,IAAItiB,EAAGwR,KAAMwwB,KACT,IAAAhiC,EAAI,EAAGwR,KAAO8Q,MAAMnjB,OAAQa,EAAIwR,OAAQxR,EAAE,CAC1CgiC,KAAO1f,MAAMtiB,GACbgiC,KAAKwL,MAAQr/B,KAAKi5E,oBAAoBplD,KAAKnyB,MAAO7P,EAAGsiB,MACjE,CACA,CACC,kBAAAukE,CAAmBh3E,OACL,OAAAA,QAAU,KAAOk9B,KAAOl9B,MAAQ1B,KAAK5Q,MAAQ4Q,KAAK7Q,IAAM6Q,KAAK5Q,IAC5E,CACC,gBAAA+e,CAAiBzM,OACV,MAAM03E,QAAUp5E,KAAK83E,SACf,MAAAjtD,IAAM7qB,KAAK04E,mBAAmBh3E,OACpC,OAAO1B,KAAKknC,oBAAoBkyC,QAAQ9vE,MAAQuhB,KAAOuuD,QAAQxkD,OACvE,CACC,gBAAAwS,CAAiBtrB,OACV,MAAMs9D,QAAUp5E,KAAK83E,SACrB,MAAMjtD,IAAM7qB,KAAKmhD,mBAAmBrlC,OAASs9D,QAAQxkD,OAASwkD,QAAQ7vE,IACtE,OAAOvJ,KAAK5Q,IAAMy7B,KAAO7qB,KAAK7Q,IAAM6Q,KAAK5Q,IACjD,CACC,aAAAiqF,CAAch6C,OACD,MAAAi6C,UAAYt5E,KAAKkE,QAAQiQ,MAC/B,MAAMolE,eAAiBv5E,KAAK+Y,IAAImC,YAAYmkB,OAAOjpB,MAC7C,MAAAvN,MAAQX,UAAUlI,KAAKqkC,eAAiBi1C,UAAU9iE,YAAc8iE,UAAU/iE,aAC1E,MAAAijE,YAActqF,KAAKmhB,IAAIxH,OACvB,MAAA4wE,YAAcvqF,KAAKkgB,IAAIvG,OAC7B,MAAM6wE,aAAe15E,KAAK+gD,wBAAwB,GAAGp7C,KAC9C,MAAA,CACHhU,EAAG4nF,eAAiBC,YAAcE,aAAeD,YACjDxqF,EAAGsqF,eAAiBE,YAAcC,aAAeF,YAE7D,CACC,iBAAAjB,CAAkBoB,aACL,MAAAtB,SAAWr4E,KAAKkE,QAAQmzE,KAC9B,MAAMW,eAAiBK,SAASL,eAChC,MAAMjkE,OAASikE,eAAeK,SAASrI,OAASgI,eAAepC,YAC/D,MAAMgE,aAAe55E,KAAKi5E,oBAAoBU,YAAa,EAAGjC,oBAAoB13E,KAAM,CACpF25E,aACD35E,KAAK63E,YAAa9jE,QACf,MAAApO,KAAO3F,KAAKq5E,cAAcO,cAChC,MAAM7C,SAAW7nF,KAAK8X,MAAMhH,KAAKqkC,eAAiBrkC,KAAKoW,MAAQzQ,KAAKhU,EAAIqO,KAAKsc,OAAS3W,KAAK1W,GAAK,EACzF,OAAA8nF,SAAW,EAAIA,SAAW,CACzC,CACC,iBAAA8B,GACO,IAAIvB,WAAat3E,KAAKoiC,OAAOvnB,MAAQ,GACrC,IAAIhpB,EAAGwR,KACP,GAAIi0E,WAAWtmF,OAAQ,CACZ,OAAAsmF,UACnB,CACc,MAAA16B,MAAQ58C,KAAKi5B,0BACf,GAAAj5B,KAAK+3E,aAAen7B,MAAM5rD,OAAQ,CAC3B,OAAAgP,KAAKoiC,OAAOvnB,KAAO+hC,MAAM,GAAGzjB,WAAW+F,mBAAmBl/B,KAC7E,CACY,IAAAnO,EAAI,EAAGwR,KAAOu5C,MAAM5rD,OAAQa,EAAIwR,OAAQxR,EAAE,CAC7BylF,WAAAA,WAAW/0C,OAAOqa,MAAM/qD,GAAGsnC,WAAW+F,mBAAmBl/B,MAClF,CACQ,OAAOA,KAAKoiC,OAAOvnB,KAAO7a,KAAKmvB,UAAUmoD,WACjD,CACC,kBAAAc,GACO,MAAMd,WAAat3E,KAAKoiC,OAAOjE,QAAU,GACzC,IAAItsC,EAAGwR,KACP,GAAIi0E,WAAWtmF,OAAQ,CACZ,OAAAsmF,UACnB,CACc,MAAAn5C,OAASn+B,KAAKo+B,YAChB,IAAAvsC,EAAI,EAAGwR,KAAO86B,OAAOntC,OAAQa,EAAIwR,OAAQxR,EAAE,CAC3CylF,WAAWpyE,KAAK0hB,MAAM5mB,KAAMm+B,OAAOtsC,IAC/C,CACe,OAAAmO,KAAKoiC,OAAOjE,OAASn+B,KAAK+3E,YAAcT,WAAat3E,KAAKmvB,UAAUmoD,WACnF,CACC,SAAAnoD,CAAUxkB,QACH,OAAOiB,aAAajB,OAAOrD,KAAKivE,QACxC,EA5RIr0C,cADEy1C,UACK,KAAK,QACfz1C,cAFKy1C,UAEE,WAAW,CAClBriE,OAAQ,OACD+4B,SAAU,CAAE,EACZgpC,KAAM,CACFX,OAAQ,MACR1G,KAAM,MACNnhF,MAAO,MACP8nF,WAAY,MACZG,QAAS,cACTkB,eAAgB,CAAA,GAEpB7jE,MAAO,CACdzQ,OAAQ,OACGf,SAAU,MACVqU,MAAO,CACHgiC,QAAS,UA+QzB,SAASj6C,YAAYkL,MAAOlJ,IAAKkC,SAC7B,IAAImH,GAAK,EACL,IAAAD,GAAKF,MAAMjZ,OAAS,EACpB,IAAA6oF,WAAYC,WAAYC,WAAYC,WACxC,GAAI/2E,QAAS,CACL,GAAAlC,KAAOkJ,MAAMG,IAAIygB,KAAO9pB,KAAOkJ,MAAME,IAAI0gB,IAAK,GAC3CzgB,MAAKD,OAAQG,aAAaL,MAAO,MAAOlJ,KACvD,GACW8pB,IAAKgvD,WAAaxC,KAAM0C,YAAgB9vE,MAAMG,OAC9CygB,IAAKivD,WAAazC,KAAM2C,YAAgB/vE,MAAME,IACzD,KAAW,CACC,GAAApJ,KAAOkJ,MAAMG,IAAIitE,MAAQt2E,KAAOkJ,MAAME,IAAIktE,KAAM,GAC7CjtE,MAAKD,OAAQG,aAAaL,MAAO,OAAQlJ,KACxD,GACWs2E,KAAMwC,WAAahvD,IAAKkvD,YAAgB9vE,MAAMG,OAC9CitE,KAAMyC,WAAajvD,IAAKmvD,YAAgB/vE,MAAME,IACzD,CACI,MAAM8vE,KAAOH,WAAaD,WAC1B,OAAOI,KAAOF,YAAcC,WAAaD,aAAeh5E,IAAM84E,YAAcI,KAAOF,UACvF,CACA,MAAMG,wBAAwBvC,UAG7B,WAAA73E,CAAYyhB,OACL6jB,MAAM7jB,OACLvhB,KAAKm6E,OAAS,GACdn6E,KAAKo6E,aAAU,EACfp6E,KAAKq6E,iBAAc,CAC5B,CACC,WAAA7B,GACa,MAAAlB,WAAat3E,KAAKs6E,yBACxB,MAAMrwE,MAAQjK,KAAKm6E,OAASn6E,KAAKu6E,iBAAiBjD,YAClDt3E,KAAKo6E,QAAUr7E,YAAYkL,MAAOjK,KAAK5Q,KACvC4Q,KAAKq6E,YAAct7E,YAAYkL,MAAOjK,KAAK7Q,KAAO6Q,KAAKo6E,QACvDh1C,MAAMozC,YAAYlB,WAC1B,CACC,gBAAAiD,CAAiBjD,YACJ,MAAAloF,IAAEA,IAAMD,IAAAA,KAAS6Q,KACvB,MAAM6L,MAAQ,GACd,MAAM5B,MAAQ,GACV,IAAApY,EAAGwR,KAAMimB,KAAMoZ,KAAMrb,MACrB,IAAAx1B,EAAI,EAAGwR,KAAOi0E,WAAWtmF,OAAQa,EAAIwR,OAAQxR,EAAE,CAC/C6wC,KAAO40C,WAAWzlF,GACd,GAAA6wC,MAAQtzC,KAAOszC,MAAQvzC,IAAK,CAC5B0c,MAAM3G,KAAKw9B,KAC3B,CACA,CACY,GAAA72B,MAAM7a,OAAS,EAAG,CACX,MAAA,CACH,CACIqmF,KAAMjoF,IACNy7B,IAAK,GAET,CACIwsD,KAAMloF,IACN07B,IAAK,GAGzB,CACY,IAAAh5B,EAAI,EAAGwR,KAAOwI,MAAM7a,OAAQa,EAAIwR,OAAQxR,EAAE,CAC1Cw1B,MAAOxb,MAAMha,EAAI,GACVy3B,KAAAzd,MAAMha,EAAI,GACjB6wC,KAAO72B,MAAMha,GACb,GAAI3C,KAAKL,OAAOw4B,MAAOiC,MAAQ,KAAOoZ,KAAM,CACxCz4B,MAAM/E,KAAK,CACPmyE,KAAM30C,KACN7X,IAAKh5B,GAAKwR,KAAO,IAErC,CACA,CACe,OAAA4G,KACf,CACC,SAAAquE,GACO,MAAMlpF,IAAM4Q,KAAK5Q,IACjB,MAAMD,IAAM6Q,KAAK7Q,IACb,IAAAmoF,WAAalyC,MAAMyzC,oBACvB,IAAKvB,WAAWtiE,SAAS5lB,OAASkoF,WAAWtmF,OAAQ,CACtCsmF,WAAA3rE,OAAO,EAAG,EAAGvc,IACpC,CACQ,IAAKkoF,WAAWtiE,SAAS7lB,MAAQmoF,WAAWtmF,SAAW,EAAG,CACtDsmF,WAAWpyE,KAAK/V,IAC5B,CACQ,OAAOmoF,WAAWhwE,KAAK,CAACtX,EAAGC,IAAID,EAAIC,EAC3C,CACC,sBAAAqqF,GACO,IAAIhD,WAAat3E,KAAKoiC,OAAOlL,KAAO,GACpC,GAAIogD,WAAWtmF,OAAQ,CACZ,OAAAsmF,UACnB,CACc,MAAAz8D,KAAO7a,KAAK64E,oBACZ,MAAAx5C,MAAQr/B,KAAKo4E,qBACf,GAAAv9D,KAAK7pB,QAAUquC,MAAMruC,OAAQ,CAC7BsmF,WAAat3E,KAAKmvB,UAAUtU,KAAK0nB,OAAOlD,OACpD,KAAe,CACUi4C,WAAAz8D,KAAK7pB,OAAS6pB,KAAOwkB,KAC9C,CACqBi4C,WAAAt3E,KAAKoiC,OAAOlL,IAAMogD,WACxB,OAAAA,UACf,CACC,kBAAAoB,CAAmBh3E,OACZ,OAAQ3C,YAAYiB,KAAKm6E,OAAQz4E,OAAS1B,KAAKo6E,SAAWp6E,KAAKq6E,WACvE,CACC,gBAAAjzC,CAAiBtrB,OACV,MAAMs9D,QAAUp5E,KAAK83E,SACrB,MAAM52B,QAAUlhD,KAAKmhD,mBAAmBrlC,OAASs9D,QAAQxkD,OAASwkD,QAAQ7vE,IACnE,OAAAxK,YAAYiB,KAAKm6E,OAAQj5B,QAAUlhD,KAAKq6E,YAAcr6E,KAAKo6E,QAAS,KACnF,EArFIl4C,cADEg4C,gBACK,KAAK,cACfh4C,cAFKg4C,gBAEE,WAAWvC,UAAU/lE,UAuF7B,IAAIkI,cAA6BgmB,OAAO,CACxC8N,UAAW,KACXuhC,4BACAmC,wBACAa,kCACA0C,oCACA8C,oBACAuC,kCAGA,MAAMM,cAAgB,CAClB7sC,YACAp1B,SACAoB,QACAG,QC/zWJqyC,MAAMzH,YAAY81B,oGC8BRC,cAAgBC,EAAAC,UAAAC,WACnB,IAAAC,IAAAF,WAAA,OACLC,aACD,2zGAjBC,IAAAvkE,MAAQykE,KAAAC,QAAA,QAAA,EAAA,oCAERC,SAAAF,KAAAC,QAAA,WAAA,EAAA,YACAH,UAAAE,KAAAC,QAAA,YAAA,EAAA,SAAA,GAGG,IAAAE,SAAAC,IAAAC,MAAmC,MAAI,YACvC,IAAAR,UAAAO,IAAAC,MAAmB,OAAK,aAE5BC,QAAoBC,0BACnBJ,eAAiBK,cAAA,MACjBC,MAAAZ,UAAYa,wBAAsBX,IAAAY,GAAA/nE,IAAAunE,YAAAJ,UAAAA,EAAAA,GAAUa,OAAVb,UAAAA,EAAAA,GAAgB96E,OAAQ47E,SAASC,cAAY,kTAyCrEZ,SAAQh7E,KAAA67E,OAAAC,mBAAA,CAAA,GAAA,yGASPrB,cAAaE,UAAAC,qUAFnBD,WAASoB,SAAAC,iBAAAD,SAAAE,UAAA,mEArCb5lE,4VC1BD,IAAA5D,KAAAqoE,KAAAC,QAAA,OAAA,GAAiB,OACjBmB,SAA2BpB,KAAAC,QAAA,WAAA,GAAA,KAC1BtoE,KAAO,SAER0pE,QAA0BrB,KAAAC,QAAA,UAAA,GAAA,KACzBtoE,KAAO,myBCQR,IAAAA,KAAAqoE,KAAAC,QAAA,OAAA,GAAiB,MAMjBqB,UAAYtB,KAAAC,QAAA,YAAA,EAAA,yBAGT,IAAAsB,WAAAnB,IAAAC,MAAoB,OAAK,cACzB,IAAAmB,UAAApB,IAAAC,MAAmB,OAAK,aACxB,IAAAoB,WAAArB,IAAAC,MAAoB,IAAE,cACtB,IAAAqB,YAAAtB,IAAAC,MAAqB,OAAK,eAC1B,IAAAsB,aAAAvB,IAAAC,MAAsB,IAAE,oBACxBuB,QAAU,OACVC,gBAAkB,MAIb,SAAAC,OACRC,gBACAC,UACAC,QACAC,WACAC,UAEIruF,IAAAuzB,KAAA,0BACuB06D,8BAA6BC,sBAAsBC,uBAAuBC,wBAAwBC,WAE9H,UAESC,oBACRZ,UAAY,aACZC,WAAa,UACbC,YAAc,aACdC,aAAe,IACGE,gBAAA,KACnB,CAGS,SAAAQ,aACRC,UAAoB,iFAEhB,UACHf,WAAa,aACbG,YAAc,MACda,MAAAZ,aAAeW,UAAA,KAChB,OAAShtF,GACRxB,IAAIo6D,MAAM54D,EACX,CACD,CAGeirF,eAAAiC,cAAcC,IAAaZ,kBACrC,UACGa,eAAiBC,eACnB,IAAAC,cAAgCC,aAChCC,GAAAA,cAAAF,QAAY,MAAM,CACHG,iBAAA,MACZ,KAAA,wBACP,KAEIC,iBAAmB,KAEnB,GAAAC,gBAAgBL,QAAQ7iE,MAAO,CAClCijE,iBAAmBE,SAASN,eACtBO,YAAYP,SAAS,UAAA,EAAAA,QAAA7iE,KAAM2iE,gBAAgBxmD,KAAM5vB,SACrDs2E,QAAoB7iE,KAAOzT,QAE9B,CAEKw2E,GAAAA,cAAAF,QAAQ7iE,KAAqB6hE,QAAYA,QAAWC,QAAAA,cAAAA,iBAAoB,OAAO,CACjEkB,iBAAA,MACZ,KAAA,2BACP,kBAEInB,QAAagB,QAAQ7iE,KAAqB6hE,SAAS,CAC5CgB,QAAA,KACH,OAAAI,qBACD,CACYD,iBAAA,MACZ,KAAA,wBACP,CACD,OAASztF,GACRxB,IAAIo6D,MAAM54D,GACQytF,iBAAA,MACX,OAAA,IACR,CACD,CAEexC,eAAA6C,eAAexB,UACzB,QACCgB,cAAgCJ,cAAcZ,SAASC,iBACvDiB,GAAAA,cAAAF,QAAY,MAAM,CACf,KAAA,wBACP,CACD,OAASttF,GACRxB,IAAIo6D,MAAM54D,EACX,CACD,qFAKY+sF,wBACAe,+DAFD7B,+BAAAgB,MAAAhB,WAAU8B,QAAA,iFAKsB5B,oBAAoBW,kCAAtCZ,8BAAAe,MAAAf,UAAS6B,QAAA,6EACK1B,sBAAsBS,kCAA1CV,gCAAAa,MAAAb,YAAW2B,QAAA,wyBCpH7B,IAAAC,UAA2BtD,KAAAC,QAAA,YAAA,GAAA,IAAAsD,UAAAC,MAAA,CAAA,IAAAC,wBAAA,cAC3BC,eAAiB1D,KAAAC,QAAA,iBAAA,EAAA0D,0CAQHC,cACV,IACQ,IAAA,MAAAC,YAAYP,YAAW,CAC7B,IACG,MAAAQ,gBAAkBD,SAASE,eAAA,GAAA9D,QAAA+D,UAAA/D,QAAAgE,YAC7BnB,GAAAA,cAAAgB,UAAc,MAAM,CACnBI,MAAA78D,6CACqCw8D,SAASM,cAAAlE,QAAA+D,UAAA/D,QAAAgE,oBAGnD,CACAG,WAAWpzE,IAAI8yE,gBAEhB,OAAS51B,OACRp6D,MAAIo6D,MAAmC,6BAAA21B,SAASM,aAAc,MAAOj2B,MACtE,CACD,CACD,OAASA,OACJg2B,MAAAh2B,MAAM,gBAAiB,MAAOA,MACnC,CACD,CAEAoyB,QAAc,KACT,IACC,GAAAwC,cAAAQ,YAAUptF,OAAW,GAAG,CAC3BotF,UAAiB,CAAA,IAAAG,uBAClB,CAEAG,cAEAS,kBAAkBC,SAAS,2BAA4BV,YAAaF,kBACpEW,kBAAkBE,WAAW,2BAC9B,OAASr2B,OACRp6D,MAAIo6D,MAAMA,MACX,IAGDs2B,UAAgB,KACfH,kBAAkBI,UAAU,4BAC5BL,WAAWpzE,IAAI,8DAIK0zE,QAAA9nE,KAAA,IAAAqjE,QAAA0E,UAAAC,OAAA,MAAAC,MAAOC,mhCClD3Bb,SAAWjE,KAAAC,QAAA,WAAA,EAAA,OACX8E,gBAAkB/E,KAAAC,QAAA,kBAAA,EAAA,OAClB+E,SAAWhF,KAAAC,QAAA,WAAA,EAAA,GACXgF,YAAcjF,KAAAC,QAAA,cAAA,EAAA,IACdiF,aAAAlF,KAAAC,QAAA,eAAA,GAAA,IAAA,CAAgB,WAAY,cAGzB,IAAAkF,iBAAmB9sE,IACnB,IAAA+sE,gBAAAhF,IAAAC,MAAAmD,MAAA,KAAA,mBAEJlD,QAAoBC,UACf,IACH4E,aAAan0E,IAAI,WAAgB,IAAAyyE,uBACjC0B,aAAan0E,IAAI,YAAiB,IAAAq0E,wBAElC9C,MAAA6C,gBAAkBF,eAChB5tF,IAAKggB,MAAS6tE,aAAavsE,IAAItB,OAC/B0T,OAAQ64D,UAAwCf,cAAAe,gBAAsB,QAAA,KACzE,OAAS31B,OACJg2B,MAAAh2B,MAAM,cAAe,MAAOA,MACjC,2GAKoB,IAAA22B,kBAAA,UAAA,EAAAS,SAAAT,ofAOkCU,WAAWV,QAAMW,uEADhET,mBAAmBF,QAAMW,qBAAWtE,mGAFK+C,YAAQ,4CADrB,IAAAwB,YAAYZ,QAAMA,MAAQG,gBAEfS,YAAYZ,QAAMA,oXAUzD,GAAAE,kBAAe9D,SAAAyE,yDAHCC,SAAAC,OAAA,IAAA3F,QAAA+D,OAAA/D,QAAA+D,OAAA,SAAS,OAAAC,WAAWA,WAAW,SAAM,OAFzB,CAAA,IAAAwB,YAAY,4DARzC,GAAA3C,cAAA+B,QAAU,KAAI,gBAAAgB,mBAAA5E,SAAAE,UAAA,qFADqB8D,kKAFEG,2FC1CtC,MAAMU,eAAiBC,WAAaC,MAAM,CAChDC,UAAWC,WAETC,SAAS,qCACT9/D,QAAQ,mCAAoC,iDAC9C04C,OAAQqnB,WAEND,SAAS,oCACTE,SAAS,EAAG,oCASF,MAAAC,WAAa5mE,SAA6C,IAGvE6gE,eAAsBgG,aAAaxmE,MAC9B,IACQumE,WAAAt1E,IAAI,UACT80E,eAAeU,SAASzmE,KAAM,CAAE0mE,WAAY,QAC3C,OAAA,WACCv4B,OACJ,GAAAA,iBAAiBw4B,gBAAqB,CACzC,MAAMC,OAA6C,CAAC,EAC9Cz4B,MAAAiM,MAAM7pD,QAASs2E,MACpB,GAAIA,IAAInqB,KAAM,CACNkqB,OAAAC,IAAInqB,MAAQmqB,IAAItzF,OAAA,IAGzBgzF,WAAWt1E,IAAI21E,OAAM,CAEf,OAAA,KAAA,CAET,qnBCrCK5mE,KACH8mE,eAAA,CAAAZ,UAAW,GACXlnB,OAAQ,KAGL,IAAA4nB,OAAAE,eAAA,mBAMWC,eACR,MAAAC,cAAgBR,iBAAaxmE,UAC/BgnE,QAAS,CACZjzF,MAAIuzB,KAAK,6BAA8B,MAAA04D,IAAOhgE,WAExC,CACNjsB,MAAIo6D,MAAM,0BAA2B,MAAA6xB,IAAO4G,QAC7C,CACD,uCAZcL,WAAAU,UAAWpgF,cACxB+/E,OAAS//E,oQAmBqBqgF,gBAAA,IAAAtB,SAAAnqE,KAAAukE,IAAA4G,QAAOV,8DADhC,GAAAlG,IAAA4G,QAAOV,mBAAS/E,4PASS+F,gBAAA,IAAAtB,SAAAuB,OAAAnH,IAAA4G,QAAO5nB,+DADhC,GAAAghB,IAAA4G,QAAO5nB,gBAAM8mB,mDATasB,WAAAviF,MAAA,IAAAm7E,IAAAhgE,MAAKkmE,UAAS5C,SAAA+D,OAAdrnE,KAAAggE,IAAAhgE,MAAKkmE,UAAS5C,UAQZ8D,WAAAE,QAAA,IAAAtH,IAAAhgE,MAAKg/C,OAAMskB,SAAA+D,OAAXrnE,KAAAggE,IAAAhgE,MAAKg/C,OAAMskB,6CAXdyD,2hBCtBpBnvE,KAAOqoE,KAAAC,QAAA,OAAA,GAAA,WACP1kE,MAAQykE,KAAAC,QAAA,QAAA,EAAA,mBACRqH,YAActH,KAAAC,QAAA,cAAA,EAAA,yDACdqB,UAAYtB,KAAAC,QAAA,YAAA,EAAA,IACZ,IAAAoB,QAAArB,KAAAC,QAAA,UAAA,EAAA,IAAiBtoE,KAAO,+dAaxB0pE,QAAOn8E,KAAA67E,OAAAwG,cAAA,CAAA,GAAA,4MCoHTC,QACRC,KAAKC,aACN,0SAqRiB,IAAAC,SAAA,CAAA/H,EAAAgI,gBAAAnH,MAAAmH,cAAgB,MAOhB,IAAAC,WAAA,CAAAC,IAAAC,WAAAtH,MAAAsH,SAAW,MAOX,IAAAC,WAAA,CAAAC,IAAAC,gBAAAzH,MAAAyH,cAAgB,MAOhB,IAAAC,WAAA,CAAAC,IAAAC,0BAAA5H,MAAA4H,wBAA0B,MAO1B,IAAAC,WAAA,CAAAC,IAAAC,oBAAA/H,MAAA+H,kBAAoB,MAQpB,IAAAC,WAAA,CAAAC,IAAAC,iBAAArqE,QACdmiE,MAAAkI,iBAAmB,MACnBlI,MAAAniE,KAAO,WAWO,IAAAsqE,WAAA,CAAAC,IAAAF,iBAAArqE,QACdmiE,MAAAkI,iBAAmB,MACnBlI,MAAAniE,KAAO,o4GA8CO,IAAAwqE,WAAA,CAAAC,IAAAC,uBAAAvI,MAAAuI,qBAAuB,MAOvB,IAAAC,WAAA,CAAAC,IAAAC,cAAA1I,MAAA0I,YAAc,MAOd,IAAAC,WAAA,CAAAC,IAAAC,mBAAA7I,MAAA6I,iBAAmB,MAOnB,IAAAC,YAAA,CAAAC,KAAAC,cAAAhJ,MAAAgJ,YAAc,MAOd,IAAAC,YAAA,CAAAC,KAAAC,eAAAnJ,MAAAmJ,aAAe,MAOf,IAAAC,YAAA,CAAAC,KAAAC,kBAAAtJ,MAAAsJ,gBAAkB,MAOlB,IAAAC,YAAA,CAAAC,KAAAC,oBAAAzJ,MAAAyJ,kBAAoB,MAOrB,IAAAC,YAAA,CAAAC,KAAAC,oBACdv2F,IAAIw2F,MAAM,oBACV7J,MAAA4J,iBAAmB,OAQJ,IAAAE,YAAA,CAAAC,KAAAC,eAAAhK,MAAAgK,aAAe,i7GAhgB5B,IAAAJ,iBAAAjK,IAAAC,MAA0B,OAAK,oBAC/B,IAAA2I,qBAAA5I,IAAAC,MAA8B,OAAK,wBACnC,IAAA0J,gBAAA3J,IAAAC,MAAyB,OAAK,mBAC9B,IAAA6J,kBAAA9J,IAAAC,MAA2B,OAAK,qBAChC,IAAAiJ,iBAAAlJ,IAAAC,MAA0B,OAAK,oBAC/B,IAAA8I,YAAA/I,IAAAC,MAAqB,OAAK,eAC1B,IAAAoK,aAAArK,IAAAC,MAAsB,OAAK,gBAC3B,IAAAuJ,aAAAxJ,IAAAC,MAAsB,OAAK,gBAC3B,IAAAoJ,YAAArJ,IAAAC,MAAqB,OAAK,eAC1B,IAAAsI,iBAAAvI,IAAAC,MAA0B,OAAK,oBAC/B,IAAAgI,wBAAAjI,IAAAC,MAAiC,OAAK,2BACtC,IAAAmI,kBAAApI,IAAAC,MAA2B,OAAK,qBAChC,IAAA0H,SAAA3H,IAAAC,MAAkB,OAAK,YACvB,IAAAuH,cAAAxH,IAAAC,MAAuB,OAAK,iBAC5B,IAAA6H,cAAA9H,IAAAC,MAAuB,OAAK,iBAE5B,IAAA0B,eAAA3B,IAAAC,WAAA,GAAA,kBAEA,IAAA/hE,KAAA8hE,IAAAC,MAAmC,UAAQ,QAC3C,IAAAF,SAAAC,IAAAC,MAAmC,MAAI,YACvC,IAAAR,UAAAO,IAAAC,MAAmB,OAAK,iBAExBqK,kBAA8C,KAC9C,IAAA7G,SAAAzD,IAAAC,WAAA,GAAA,gBACAsK,QAAU,EACV,IAAAC,WAAAxK,IAAAC,WAAA,GAAA,cACA,IAAAwK,YAAAzK,IAAAC,WAAA,GAAA,eACA,IAAAyK,aAAA1K,IAAAC,WAAA,GAAA,gBAGJC,QAAoBC,0BACf,UAEHJ,eAAiBK,cAAA,MACjBC,MAAAZ,UAAYa,wBAAsBX,IAAAY,GAAA/nE,IAAAunE,YAAAJ,UAAAA,EAAAA,GAAUa,OAAVb,UAAAA,EAAAA,GAAgB96E,OAAQ47E,SAASC,cAAY,MAEzE,MAAAiK,wBAA0BC,4BAG5B,IAAAC,GAAAF,kBAAkBG,YAAlB,UAAA,EAAAD,GAA6BE,QAAS,CACzC1K,MAAAsB,eAAiBgJ,kBAAkBG,UAAUC,QAAA,KAAA,CAEpCR,UAAAS,GAAAL,kBAAkBG,YAAlB,UAAA,EAAAE,GAA6BT,UAAW,EAC9C7H,GAAAA,cAAA4H,kBAAsB,MAAM,KAC3BW,OAAwB,KACnBA,OAAAC,cAAcC,aACrB,WAAS,CACT,YACDZ,QACA,uCAEGU,OAAQ,CACN,IAAAA,OAAOG,YAAa,CAClB,MAAAC,iBAAmBC,sCACrB,GAAAD,YAAcA,WAAWE,iBAAkBN,OAAOO,UAAUH,WAAWE,WAAU,CAGtFlL,MAAAoD,SAAWwH,OAAOQ,cAAA,aACdhI,UAAU,CACP,MAAAiI,OAAST,OAAOG,eAClBM,OAAQ,CACXlzE,IAAAirE,UAAS+H,UAAUE,OAAM,CAE1BrL,MAAAmK,WAAaS,OAAOU,gBAAA,MAEpBxJ,MAAAsI,YAAkB,IAAAmB,mBAAAjM,IAAmB6K,gBAAwB/G,WAAS,MACtEpD,MAAAqK,aAAA,IAAmBmB,iBAAarB,aAAsB,KAAA,CAGvD,CACD,QAEO18B,OACE76D,UAAA,kBAAmB,MAAO66D,MAAK,IAgBlC,SAAA4zB,OACRC,gBACAC,UACAC,QACAC,WACAC,UACC,CAYO,SAAA+J,eAAeC,iBAA+B,CAK9C,SAAAC,cAAcC,iBAA+B,CAK7C,SAAAC,aAAaC,UAAuB,CAKpC,SAAAC,kBAAkB5K,SAAiB,CAKnC,SAAA6K,aAAaC,WAAoBC,YAAoB,CAKrD,SAAAC,kBAAkBL,UAAqB,CAKvC,SAAAM,yBAAyB,CAKzB,SAAAC,qBAAqB,CAKrB,SAAAC,mBAAmBC,QAAkB15F,eAE7Cq1F,iBAAmB,MAAA,CAIX,SAAAsE,sBAAsB,qGA+BJ/E,kCAAA3F,MAAA2F,cAAa7E,QAAA,KAAA,6GAM5B4J,oBACM/M,SAAA,6BAFLmI,4CAAA9F,MAAA8F,wBAAuBhF,QAAA,KAAA,mUASvBuE,kCAAArF,MAAAqF,cAAavE,QAAA,KAAA,4UAWb0E,6BAAAxF,MAAAwF,SAAQ1E,QAAA,KAAA,8GAaF,KACE6J,YAAA,KAClBzM,MAAA+H,kBAAoB,OACpB/H,MAAAyJ,kBAAoB,OAECiD,eAAA,KACrB1M,MAAA+H,kBAAoB,OACpB/H,MAAA4J,iBAAmB,OAEHvK,UAAA,KAChBW,MAAA+H,kBAAoB,OACpB/H,MAAAniE,KAAO,UACPmiE,MAAAkI,iBAAmB,OAECyE,cAAA,KACpB3M,MAAA+H,kBAAoB,OACpB/H,MAAAsJ,gBAAkB,6BAjBRvB,sCAAAjG,MAAAiG,kBAAiBnF,QAAA,KAAA,sGAyBlBwJ,uEADC7D,yCAAAzG,MAAAyG,qBAAoB3F,QAAA,KAAA,qGASnBmJ,kEADDlD,qCAAA/G,MAAA+G,iBAAgBjG,QAAA,KAAA,+FAOiBoJ,6DAAzBtD,gCAAA5G,MAAA4G,YAAW9F,QAAA,KAAA,0GAMlBuJ,kEADD7C,oCAAAxH,MAAAwH,gBAAe1G,QAAA,KAAA,0GASdiJ,6DADDpC,sCAAA3H,MAAA2H,kBAAiB7G,QAAA,KAAA,0GAShByJ,mEADDzC,qCAAA9H,MAAA8H,iBAAgBhH,QAAA,KAAA,2GAOwB6I,+DAA/BzB,iCAAAlI,MAAAkI,aAAYpH,QAAA,KAAA,2GAImB+I,oCAA/BxC,iCAAArH,MAAAqH,aAAYvG,QAAA,KAAA,kGAKS,mEAAtBoG,gCAAAlH,MAAAkH,YAAWpG,QAAA,KAAA,4IAIoC0J,yCAArCpE,qCAAApG,MAAAoG,iBAAgBtF,QAAA,KAAA,2KAKxB,IAAAwB,kBAAA,UAAA,EAAAS,SAAAT,yRAGhBc,SAAAnqE,KAAA,GAAAqpE,QAAMA,OAAK,6CAEuBwI,SAAAnG,OAAArC,QAAMhB,8IAJvC,GAAAf,cAAA+B,QAAU,KAAI,gBAAA3D,iBAAAD,SAAAE,UAAA,qwDAmFjBtB,oBAASgG,mBAAA5E,SAAAqM,YAAA,6xBAiIJ9F","x_google_ignoreList":[1,2,3,4]}