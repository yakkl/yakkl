import{c as check_target,l as legacy_api}from"../chunks/BXFaAXnq.js";import{p as push,h as tag,i as state,ae as proxy,e as set,o as onMount,f as first_child,s as sibling,c as child,t as template_effect,a as pop,g as get,F as FILENAME,b as strict_equals,$ as $document,r as reset}from"../chunks/BaS8d5lg.js";import{a as add_locations}from"../chunks/3AhEABF_.js";import{s as set_text}from"../chunks/Cmwrv3PW.js";import{i as if_block}from"../chunks/Q1yPWpQ-.js";import{a as append,f as from_html}from"../chunks/Cm3jf07C.js";import{v as validate_store}from"../chunks/Dv9a3G0k.js";import{h as head}from"../chunks/twIkBoiu.js";import{s as set_attribute}from"../chunks/DTBsVM-c.js";import{d as delegate}from"../chunks/DiU70Is3.js";import{b as store_set,s as setup_stores,a as store_get}from"../chunks/CViNpZsE.js";import{a as browser_ext,b as browserSvelte}from"../chunks/CgCfpVku.js";import{p as page}from"../chunks/eULPtkAc.js";import{b as yakklDappConnectRequestStore,l as log$1,an as DEFAULT_TITLE,o as getYakklAccounts,x as isEncryptedData,z as decryptData,g as getSettings,C as getYakklCurrentlySelected,h as getMiscStore,Y as YAKKL_DAPP,U as ETH_BASE_SCA_GAS_UNITS,X as ETH_BASE_EOA_GAS_UNITS}from"../chunks/Cb2naUpm.js";import{l as log}from"../chunks/WDN37msH.js";import{W as WalletManager}from"../chunks/BJK8DTVo.js";import{v as verifySessionToken,b as sessionToken}from"../chunks/CMG1aIle.js";import{C as Confirmation}from"../chunks/BWiVuumU.js";import{C as Copyright}from"../chunks/w2W0-xnm.js";import"../chunks/DwnXGTX-.js";import{F as Failed,c as createPortManagerWithStream}from"../chunks/tXuNREEA.js";import{s as safeLogout}from"../chunks/COpD6KvM.js";import{e as formatEther}from"../chunks/CnIbzB-6.js";async function requestSigning(requestId,type,params,token){if(typeof window==="undefined"){throw new Error("This function can only be called in a browser environment")}if(!requestId||!type||!params||!token){throw new Error("Missing required parameters for signing request")}log.info("requestSigning - Sending request to background",false,{requestId:requestId,type:type,params:params,token:token});try{const response=await browser_ext.runtime.sendMessage({type:type,requestId:requestId,params:params,token:token});log.info("requestSigning - Received response from background",false,{response:response});if(!response){throw new Error("No response received from background script")}if(response.error){throw new Error(response.error.message||"Unknown error occurred")}return response}catch(error){log.error("requestSigning - Error sending request to background",false,error);throw error}}_page[FILENAME]="src/routes/(dapp)/dapp/popups/sign/+page.svelte";function handleConfirm(_,showConfirm){set(showConfirm,true)}var on_click=(__1,handleReject)=>handleReject();var root_3=add_locations(from_html(`<div class="flex justify-between items-center"><span class="font-medium">Data:</span> <span class="text-sm truncate max-w-[200px]"> </span></div>`),_page[FILENAME],[[448,6,[[449,7],[450,7]]]]);var root_2=add_locations(from_html(`<span class="text-sm">Transaction Details:</span> <div class="bg-base-200 rounded-lg p-4 space-y-3 mt-2"><div class="flex justify-between items-center border-b border-base-300 pb-2"><span class="font-medium">From:</span> <span class="font-mono text-sm"> </span></div> <div class="flex justify-between items-center border-b border-base-300 pb-2"><span class="font-medium">To:</span> <span class="font-mono text-sm"> </span></div> <div class="flex justify-between items-center border-b border-base-300 pb-2"><span class="font-medium">Value:</span> <span class="font-bold text-primary"> </span></div> <div class="flex justify-between items-center border-b border-base-300 pb-2"><span class="font-medium">Gas Limit:</span> <span> </span></div> <!></div>`,1),_page[FILENAME],[[429,4],[430,4,[[431,5,[[432,6],[433,6]]],[435,5,[[436,6],[437,6]]],[439,5,[[440,6],[441,6]]],[443,5,[[444,6],[445,6]]]]]]);var root_4=add_locations(from_html(`<span class="text-sm">Data to sign:</span> <pre class="text-md border-2 border-blue-500 rounded-md p-2 bg-opacity-25"> </pre>`,1),_page[FILENAME],[[455,4],[456,4]]);var on_click_1=(__2,handleReject)=>handleReject();var root=add_locations(from_html(`<!> <!> <div class="flex flex-col h-full max-h-screen overflow-hidden"><div class="p-4 border-b border-base-300 flex-shrink-0"><div class="flex items-center justify-between"><div class="flex items-center gap-2 min-w-0"><img id="dappImageId" crossorigin="anonymous" alt="Dapp logo" class="w-8 h-8 rounded-full flex-shrink-0"/> <span class="font-semibold truncate"> </span></div> <button class="btn btn-ghost btn-sm flex-shrink-0 svelte-ffsqec" aria-label="Close"><svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg></button></div></div> <div class="flex-1 p-6 flex flex-col max-w-[428px]"><div class="text-center mb-4 flex-shrink-0 border-2 border-red-500 rounded-md p-2"><p class="text-md font-extrabold animate-pulse mb-2">Important!:</p> <span class="text-sm font-bold mb-2">Signing of Message requesting permission to execute: PLEASE be mindful and know what you\n\t\t\t\tare doing.</span> <span class="text-sm font-bold mb-2">There is no cancel or return option! Be 100% sure or REJECT this transaction and research\n\t\t\t\tmore before trying again.</span></div> <div class="overflow-auto flex-1 min-h-0 mb-4 svelte-ffsqec"><!></div></div> <div class="p-4 border-t border-base-300 flex-shrink-0"><div class="flex gap-4 justify-end"><button class="btn btn-outline svelte-ffsqec">Reject</button> <button class="btn btn-primary svelte-ffsqec">Approve</button></div></div></div> <!>`,1),_page[FILENAME],[[376,0,[[378,1,[[379,2,[[380,3,[[381,4],[388,4]]],[392,3,[[397,4,[[403,5]]]]]]]]],[414,1,[[415,2,[[416,3],[417,3],[421,3]]],[427,2]]],[462,1,[[463,2,[[464,3],[465,3]]]]]]]]);function _page($$anchor,$$props){check_target(new.target);push($$props,true,_page);const[$$stores,$$cleanup]=setup_stores();const $sessionToken=()=>(validate_store(sessionToken,"sessionToken"),store_get(sessionToken,"$sessionToken",$$stores));let currentlySelected;let yakklMiscStore;let wallet;let showConfirm=tag(state(false),"showConfirm");let showSuccess=tag(state(false),"showSuccess");let showFailure=tag(state(false),"showFailure");let errorValue=tag(state("No domain/site name was found. Access to YAKKL® is denied."),"errorValue");let domain=tag(state(""),"domain");let domainLogo=tag(state(""),"domainLogo");let domainTitle=tag(state(""),"domainTitle");let title=tag(state(proxy(DEFAULT_TITLE)),"title");let request;let method=tag(state(""),"method");let requestId;let message=tag(state(""),"message");let address=tag(state(""),"address");let chainId;let params=tag(state(proxy([])),"params");let personal_sign={dataToSign:"",address:"",description:""};let signTypedData_v3v4={address:"",dataToSign:""};let transaction=tag(state(proxy({})),"transaction");let transactionDisplay=tag(state(proxy({})),"transactionDisplay");let gasLimit=tag(state(0n),"gasLimit");let messageValue;let pass=false;let portManager=null;let stream=null;if(browserSvelte){try{requestId=page.url.searchParams.get("requestId");set(method,page.url.searchParams.get("method")??"",true);store_set(yakklDappConnectRequestStore,requestId);if(requestId){pass=true}}catch(e){log$1.error(e);handleReject("No requestId or method was found. Access to YAKKL® is denied.")}}async function formatTransactionForDisplay(){var _a;set(transactionDisplay,{from:get(transaction).from,to:get(transaction).to,value:get(transaction).quantity?formatEther(get(transaction).quantity.toString())+" ETH":"0 ETH",data:get(transaction).data?`Data: ${get(transaction).data.slice(0,10)}...`:"No data",gasLimit:"Will be calculated",estimatedFee:"Calculating..."},true);if(!get(transaction).gasLimit){const blockchain=wallet==null?void 0:wallet.getBlockchain();if(blockchain==null?void 0:blockchain.isSmartContractSupported()){const isSmartContract=await blockchain.isSmartContract(get(transaction).to);set(gasLimit,isSmartContract?BigInt(ETH_BASE_SCA_GAS_UNITS):BigInt(ETH_BASE_EOA_GAS_UNITS),true);if(get(transaction).data){const dataLength=get(transaction).data.length-2;set(gasLimit,BigInt(get(gasLimit))+BigInt(dataLength*68))}}else{set(gasLimit,BigInt(ETH_BASE_EOA_GAS_UNITS),true)}if((_a=currentlySelected==null?void 0:currentlySelected.shortcuts)==null?void 0:_a.gasLimit){set(gasLimit,BigInt(currentlySelected.shortcuts.gasLimit),true)}get(transactionDisplay).gasLimit=get(gasLimit).toString()}}async function onMessageListener(event){var _a;try{if(!get(domainLogo))set(domainLogo,"/images/failIcon48x48.png");if(strict_equals(event.method,"get_params")){request=event.result;if(!request||!request.data){return await handleReject("No request was found. Access to YAKKL® is denied.")}const requestData=request.data;if(!requestData||!requestData.params||!requestData.params[0]||!requestData.metaData){return await handleReject("Invalid request data. Access to YAKKL® is denied.")}if(!requestData.metaData.metaData.isConnected){return await handleReject("Domain is not connected. Connect to {domain} first via requestAccounts. Access to YAKKL® is denied.")}set(domainTitle,requestData.metaData.metaData.title,true);set(domain,requestData.metaData.metaData.domain,true);set(domainLogo,requestData.metaData.metaData.icon,true);set(message,requestData.metaData.metaData.message??"Nothing was passed to explain the intent of this approval. Be mindful of this request!",true);set(params,requestData.params??[],true);if(!Array.isArray(get(params))){set(params,[get(params)],true)}if(!requestId)requestId=(requestData==null?void 0:requestData.id)??null;if(!requestId){return await handleReject("No request ID was found. Access to YAKKL® is denied.")}set(title,get(domainTitle)||get(domain)||DEFAULT_TITLE,true);let data;switch(get(method)){case"personal_sign":personal_sign.dataToSign=get(params)[0];personal_sign.address=set(address,get(params)[1],true);personal_sign.description=get(message);log$1.info("Sign: personal_sign:",false,personal_sign);break;case"eth_signTypedData_v4":log$1.info("Sign: eth_signTypedData_v4:",false,get(params));signTypedData_v3v4.address=set(address,get(params)[0],true);signTypedData_v3v4.dataToSign=get(params)[1];if(strict_equals(typeof signTypedData_v3v4.dataToSign,"string")){data=JSON.parse(signTypedData_v3v4.dataToSign)}else{data=signTypedData_v3v4.dataToSign}set(message,((_a=data==null?void 0:data.message)==null?void 0:_a.contents)||data,true);log$1.info("Sign: eth_signTypedData_v4:",false,{data:data,message:get(message)});break;case"eth_signTransaction":set(transaction,get(params)[0],true);set(address,get(transaction).from,true);if(!wallet){wallet=WalletManager.getInstance(["Alchemy"],["Ethereum"],chainId,"pBm4VA9q8Laz9x3bmXTNZ9m-ArxczEWk")}await formatTransactionForDisplay();set(message,`Sign transaction from ${get(transaction).from} to ${get(transaction).to}`);log$1.info("Sign: eth_signTransaction:",false,get(transaction));break;default:messageValue="No message request was passed in. Error.";break}}}catch(e){log$1.error(e);await handleReject("An error occurred while processing the request. Access to YAKKL® is denied.")}}onMount(async()=>{try{if(browserSvelte){log$1.info("Dapp - sign page mounted:",false);const settings=await getSettings();if(!settings.init||!settings.legal.termsAgreed){set(errorValue,"You must register and agree to the terms of service before using YAKKL®. Click on 'Open Wallet' to register.");set(showFailure,true);return}currentlySelected=await getYakklCurrentlySelected();yakklMiscStore=getMiscStore();chainId=currentlySelected.shortcuts.chainId;if(strict_equals(get(method),"eth_signTransaction")){wallet=WalletManager.getInstance(["Alchemy"],["Ethereum"],chainId,"pBm4VA9q8Laz9x3bmXTNZ9m-ArxczEWk")}const sessionInfo=await browser_ext.runtime.sendMessage({type:"REQUEST_SESSION_PORT",requestId:requestId});log$1.info("Received session info:",false,sessionInfo);if(!sessionInfo||!sessionInfo.success){log$1.warn("Failed to verify session port. No response received. Using YAKKL_DAPP.")}portManager=createPortManagerWithStream((sessionInfo==null?void 0:sessionInfo.portName)??YAKKL_DAPP);portManager.setRequestId(requestId);const success=await portManager.createPort();if(!success){set(errorValue,"Failed to connect to session port.");set(showFailure,true);return}stream=portManager.getStream();if(!stream){set(errorValue,"Stream is not available.");set(showFailure,true);return}stream.on("data",onMessageListener);stream.write({method:"get_params",id:requestId})}}catch(e){log$1.error(e);set(errorValue,"Port setup error occurred while processing the request. Access to YAKKL® is denied.");set(showFailure,true)}});async function handleReject(message2="User rejected the request."){try{if(browserSvelte){set(showConfirm,false);set(showFailure,false);set(showSuccess,false);if(stream){stream.write({type:"YAKKL_RESPONSE:EIP6963",jsonrpc:"2.0",id:requestId,error:{code:4001,message:message2}})}}}catch(e){log$1.error(e)}finally{close()}}async function handleProcess(){try{if(!browserSvelte){await handleReject()}if(!verifySessionToken($sessionToken())){await handleReject("Session token is invalid. Login again.")}if(strict_equals(get(method),"eth_signTransaction")){await handleSignTransaction()}else{const response=await requestSigning(requestId,get(method),get(params),$sessionToken());if(!response){await handleReject("Request failed due to no response from the signing request.")}if(response.error){await handleReject(response.error.message||"Signing request failed")}if(stream){const jsonRpcResponse={type:"YAKKL_RESPONSE:EIP6963",jsonrpc:"2.0",id:requestId,result:response.result};stream.write(jsonRpcResponse);log$1.info("Sign: handleProcess - response:",false,{jsonRpcResponse:jsonRpcResponse})}else{await handleReject("Request failed to send to dapp due to connection port not found.")}}close()}catch(e){log$1.error(e);set(errorValue,e instanceof Error?e.message:"Unknown error occurred",true);set(showFailure,true)}}async function handleSignTransaction(){try{const accounts=await getYakklAccounts();const account=accounts.find(acc=>{var _a;return strict_equals(acc.address.toLowerCase(),(_a=get(transaction).from)==null?void 0:_a.toLowerCase())});if(!account){await handleReject("Account not found.");return}if(isEncryptedData(account.data)){account.data=await decryptData(account.data,yakklMiscStore)}if(!account.data.privateKey){await handleReject("Account key not available.");return}get(transaction).gasLimit=get(gasLimit);get(transaction).nonce=get(transaction).nonce??-1;get(transaction).type=get(transaction).type??2;get(transaction).chainId=chainId;await wallet.setSigner(account.data.privateKey);const blockchain=wallet.getBlockchain();const provider=blockchain.getProvider();const signer=provider.getSigner();const signedTx=await signer.signTransaction(get(transaction));if(stream){const jsonRpcResponse={type:"YAKKL_RESPONSE:EIP6963",jsonrpc:"2.0",id:requestId,result:signedTx};stream.write(jsonRpcResponse);log$1.info("Sign: eth_signTransaction - response:",false,{jsonRpcResponse:jsonRpcResponse})}else{await handleReject("Request failed to send to dapp due to connection port not found.")}}catch(e){log$1.error("Transaction signing error:",false,e);set(errorValue,e instanceof Error?e.message:"Transaction signing failed",true);set(showFailure,true)}}async function close(){if(browserSvelte){try{if(portManager){await portManager.waitForIdle(1500);portManager.disconnect()}}catch(e){log$1.warn("Port did not go idle in time",false,e)}safeLogout()}}var fragment=root();head($$anchor2=>{template_effect(()=>$document.title=get(title))});var node=first_child(fragment);Failed(node,{title:"Failed!",get content(){return get(errorValue)},onReject:handleReject,get show(){return get(showFailure)},set show($$value){set(showFailure,$$value,true)}});var node_1=sibling(node,2);Confirmation(node_1,{get title(){return`Connect to ${get(domain)??""}`},get message(){return`This will connect ${get(domain)??""} to ${get(address)??""} and sign the transaction or message! Do you wish to continue?`},onConfirm:handleProcess,get show(){return get(showConfirm)},set show($$value){set(showConfirm,$$value,true)}});var div=sibling(node_1,2);var div_1=child(div);var div_2=child(div_1);var div_3=child(div_2);var img=child(div_3);var span=sibling(img,2);var text=child(span,true);reset(span);reset(div_3);var button=sibling(div_3,2);button.__click=[on_click,handleReject];reset(div_2);reset(div_1);var div_4=sibling(div_1,2);var div_5=sibling(child(div_4),2);var node_2=child(div_5);{var consequent_1=$$anchor2=>{var fragment_1=root_2();var div_6=sibling(first_child(fragment_1),2);var div_7=child(div_6);var span_1=sibling(child(div_7),2);var text_1=child(span_1,true);reset(span_1);reset(div_7);var div_8=sibling(div_7,2);var span_2=sibling(child(div_8),2);var text_2=child(span_2,true);reset(span_2);reset(div_8);var div_9=sibling(div_8,2);var span_3=sibling(child(div_9),2);var text_3=child(span_3,true);reset(span_3);reset(div_9);var div_10=sibling(div_9,2);var span_4=sibling(child(div_10),2);var text_4=child(span_4,true);reset(span_4);reset(div_10);var node_3=sibling(div_10,2);{var consequent=$$anchor3=>{var div_11=root_3();var span_5=sibling(child(div_11),2);var text_5=child(span_5,true);reset(span_5);reset(div_11);template_effect(()=>set_text(text_5,get(transactionDisplay).data));append($$anchor3,div_11)};if_block(node_3,$$render=>{if(get(transaction).data)$$render(consequent)})}reset(div_6);template_effect(()=>{set_text(text_1,get(transactionDisplay).from);set_text(text_2,get(transactionDisplay).to);set_text(text_3,get(transactionDisplay).value);set_text(text_4,get(transactionDisplay).gasLimit)});append($$anchor2,fragment_1)};var alternate=$$anchor2=>{var fragment_2=root_4();var pre=sibling(first_child(fragment_2),2);var text_6=child(pre,true);reset(pre);template_effect(()=>set_text(text_6,get(message)));append($$anchor2,fragment_2)};if_block(node_2,$$render=>{if(strict_equals(get(method),"eth_signTransaction"))$$render(consequent_1);else $$render(alternate,false)})}reset(div_5);reset(div_4);var div_12=sibling(div_4,2);var div_13=child(div_12);var button_1=child(div_13);button_1.__click=[on_click_1,handleReject];var button_2=sibling(button_1,2);button_2.__click=[handleConfirm,showConfirm];reset(div_13);reset(div_12);reset(div);var node_4=sibling(div,2);Copyright(node_4,{});template_effect(()=>{set_attribute(img,"src",get(domainLogo));set_attribute(span,"title",get(domainTitle)||get(domain));set_text(text,get(domainTitle)||get(domain))});append($$anchor,fragment);var $$pop=pop({...legacy_api()});$$cleanup();return $$pop}delegate(["click"]);export{_page as component};
//# sourceMappingURL=22.CdGSa6-A.js.map
