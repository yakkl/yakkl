import{T as get_descriptor,a9 as props_invalid_value,aa as LEGACY_DERIVED_PROP,ab as derived,k as derived_safe_equal,ac as PROPS_IS_UPDATED,g as get,ad as safe_equals,ae as proxy,e as set,a7 as untrack,af as source,ag as PROPS_IS_BINDABLE,S as STATE_SYMBOL,U as LEGACY_PROPS,ah as legacy_mode_flag,ai as PROPS_IS_RUNES,aj as PROPS_IS_IMMUTABLE,m as mutable_source,ak as update,al as is_function,am as PROPS_IS_LAZY_INITIAL,an as props_rest_readonly,ao as captured_signals}from"./BaS8d5lg.js";import{c as capture_store_binding}from"./CViNpZsE.js";const rest_props_handler={get(target,key){if(target.exclude.includes(key))return;return target.props[key]},set(target,key){{props_rest_readonly(`${target.name}.${String(key)}`)}return false},getOwnPropertyDescriptor(target,key){if(target.exclude.includes(key))return;if(key in target.props){return{enumerable:true,configurable:true,value:target.props[key]}}},has(target,key){if(target.exclude.includes(key))return false;return key in target.props},ownKeys(target){return Reflect.ownKeys(target.props).filter(key=>!target.exclude.includes(key))}};function rest_props(props,exclude,name){return new Proxy({props:props,exclude:exclude,name:name,other:{},to_proxy:[]},rest_props_handler)}const legacy_rest_props_handler={get(target,key){if(target.exclude.includes(key))return;get(target.version);return key in target.special?target.special[key]():target.props[key]},set(target,key,value){if(!(key in target.special)){target.special[key]=prop({get[key](){return target.props[key]}},key,PROPS_IS_UPDATED)}target.special[key](value);update(target.version);return true},getOwnPropertyDescriptor(target,key){if(target.exclude.includes(key))return;if(key in target.props){return{enumerable:true,configurable:true,value:target.props[key]}}},deleteProperty(target,key){if(target.exclude.includes(key))return true;target.exclude.push(key);update(target.version);return true},has(target,key){if(target.exclude.includes(key))return false;return key in target.props},ownKeys(target){return Reflect.ownKeys(target.props).filter(key=>!target.exclude.includes(key))}};function legacy_rest_props(props,exclude){return new Proxy({props:props,exclude:exclude,special:{},version:source(0)},legacy_rest_props_handler)}const spread_props_handler={get(target,key){let i=target.props.length;while(i--){let p=target.props[i];if(is_function(p))p=p();if(typeof p==="object"&&p!==null&&key in p)return p[key]}},set(target,key,value){let i=target.props.length;while(i--){let p=target.props[i];if(is_function(p))p=p();const desc=get_descriptor(p,key);if(desc&&desc.set){desc.set(value);return true}}return false},getOwnPropertyDescriptor(target,key){let i=target.props.length;while(i--){let p=target.props[i];if(is_function(p))p=p();if(typeof p==="object"&&p!==null&&key in p){const descriptor=get_descriptor(p,key);if(descriptor&&!descriptor.configurable){descriptor.configurable=true}return descriptor}}},has(target,key){if(key===STATE_SYMBOL||key===LEGACY_PROPS)return false;for(let p of target.props){if(is_function(p))p=p();if(p!=null&&key in p)return true}return false},ownKeys(target){const keys=[];for(let p of target.props){if(is_function(p))p=p();if(!p)continue;for(const key in p){if(!keys.includes(key))keys.push(key)}for(const key of Object.getOwnPropertySymbols(p)){if(!keys.includes(key))keys.push(key)}}return keys}};function spread_props(...props){return new Proxy({props:props},spread_props_handler)}function has_destroyed_component_ctx(current_value){var _a;return((_a=current_value.ctx)==null?void 0:_a.d)??false}function prop(props,key,flags,fallback){var _a;var immutable=(flags&PROPS_IS_IMMUTABLE)!==0;var runes=!legacy_mode_flag||(flags&PROPS_IS_RUNES)!==0;var bindable=(flags&PROPS_IS_BINDABLE)!==0;var lazy=(flags&PROPS_IS_LAZY_INITIAL)!==0;var is_store_sub=false;var prop_value;if(bindable){[prop_value,is_store_sub]=capture_store_binding(()=>props[key])}else{prop_value=props[key]}var is_entry_props=STATE_SYMBOL in props||LEGACY_PROPS in props;var setter=bindable&&(((_a=get_descriptor(props,key))==null?void 0:_a.set)??(is_entry_props&&key in props&&(v=>props[key]=v)))||void 0;var fallback_value=fallback;var fallback_dirty=true;var fallback_used=false;var get_fallback=()=>{fallback_used=true;if(fallback_dirty){fallback_dirty=false;if(lazy){fallback_value=untrack(fallback)}else{fallback_value=fallback}}return fallback_value};if(prop_value===void 0&&fallback!==void 0){if(setter&&runes){props_invalid_value(key)}prop_value=get_fallback();if(setter)setter(prop_value)}var getter;if(runes){getter=()=>{var value=props[key];if(value===void 0)return get_fallback();fallback_dirty=true;fallback_used=false;return value}}else{var derived_getter=(immutable?derived:derived_safe_equal)(()=>props[key]);derived_getter.f|=LEGACY_DERIVED_PROP;getter=()=>{var value=get(derived_getter);if(value!==void 0)fallback_value=void 0;return value===void 0?fallback_value:value}}if((flags&PROPS_IS_UPDATED)===0&&runes){return getter}if(setter){var legacy_parent=props.$$legacy;return function(value,mutation){if(arguments.length>0){if(!runes||!mutation||legacy_parent||is_store_sub){setter(mutation?getter():value)}return value}else{return getter()}}}var from_child=false;var was_from_child=false;var inner_current_value=mutable_source(prop_value);var current_value=derived(()=>{var parent_value=getter();var child_value=get(inner_current_value);if(from_child){from_child=false;was_from_child=true;return child_value}was_from_child=false;return inner_current_value.v=parent_value});if(bindable){get(current_value)}if(!immutable)current_value.equals=safe_equals;return function(value,mutation){if(captured_signals!==null){from_child=was_from_child;getter();get(inner_current_value)}if(arguments.length>0){const new_value=mutation?get(current_value):runes&&bindable?proxy(value):value;if(!current_value.equals(new_value)){from_child=true;set(inner_current_value,new_value);if(fallback_used&&fallback_value!==void 0){fallback_value=new_value}if(has_destroyed_component_ctx(current_value)){return value}untrack(()=>get(current_value))}return value}if(has_destroyed_component_ctx(current_value)){return current_value.v}return get(current_value)}}export{legacy_rest_props as l,prop as p,rest_props as r,spread_props as s};
//# sourceMappingURL=BYboeQtC.js.map
