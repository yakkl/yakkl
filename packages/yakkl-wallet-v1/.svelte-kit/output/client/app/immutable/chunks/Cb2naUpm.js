const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./CFbi9Boi.js","./WDN37msH.js","./yYzfI9LL.js","./DpKLkluw.js","./BOosul_h.js","./B2gA1VsD.js","./BaS8d5lg.js"])))=>i.map(i=>d[i]);
var __defProp=Object.defineProperty;var __typeError=msg=>{throw TypeError(msg)};var __defNormalProp=(obj,key2,value)=>key2 in obj?__defProp(obj,key2,{enumerable:true,configurable:true,writable:true,value:value}):obj[key2]=value;var __publicField=(obj,key2,value)=>__defNormalProp(obj,typeof key2!=="symbol"?key2+"":key2,value);var __accessCheck=(obj,member,msg)=>member.has(obj)||__typeError("Cannot "+msg);var __privateGet=(obj,member,getter)=>(__accessCheck(obj,member,"read from private field"),getter?getter.call(obj):member.get(obj));var __privateAdd=(obj,member,value)=>member.has(obj)?__typeError("Cannot add the same private member more than once"):member instanceof WeakSet?member.add(obj):member.set(obj,value);var __privateSet=(obj,member,value,setter)=>(__accessCheck(obj,member,"write to private field"),setter?setter.call(obj,value):member.set(obj,value),value);var __privateMethod=(obj,member,method)=>(__accessCheck(obj,member,"access private method"),method);var __privateWrapper=(obj,member,setter,getter)=>({set _(value){__privateSet(obj,member,value,setter)},get _(){return __privateGet(obj,member,getter)}});var _listener,_listeners,_cancelled,_allowInsecure,_gzip,_headers,_method,_timeout,_url,_body,_bodyType,_creds,_preflight,_process,_retry,_signal,_throttle,_getUrlFunc,_FetchRequest_instances,send_fn,_statusCode,_statusMessage,_headers2,_body2,_request,_error,_format,_val,_tens,_FixedNumber_instances,checkFormat_fn,checkValue_fn,add_fn,sub_fn,mul_fn,div_fn,_a,_names,_data,_dataLength,_Writer_instances,writeData_fn,_data2,_offset,_bytesRead,_parent,_maxInflation,_Reader_instances,incrementBytesRead_fn,peekBytes_fn,_r,_s,_v,_networkV,_b,_privateKey,_c,_options,_type,_to,_data3,_nonce,_gasLimit,_gasPrice,_maxPriorityFeePerGas,_maxFeePerGas,_value,_chainId,_sig,_accessList,_maxFeePerBlobGas,_blobVersionedHashes,_kzg,_blobs,_auths,_Transaction_instances,getSerialized_fn,_types,_fullTypes,_encoderCache,_TypedDataEncoder_instances,getEncoder_fn,_d,_offset2,_tokens,_TokenString_instances,subTokenString_fn,_ParamType_instances,walkAsync_fn,_AbiCoder_instances,getCoder_fn,_errors,_events,_functions,_abiCoder,_Interface_instances,getFunction_fn,getEvent_fn,_transactions,_logs,_startBlock,_iface,_iface2,_filter,_e,_supports2544,_resolver,_EnsResolver_instances,fetch_fn,_EnsResolver_static,getResolver_fn,_url2,_processFunc,_name,_chainId2,_plugins,_f,_provider,_poller,_interval,_blockNumber,_PollingBlockSubscriber_instances,poll_fn,_provider2,_poll,_running,_tag,_lastBlock,_filter2,_hash,_provider3,_filter3,_poller2,_running2,_blockNumber2,_PollingEventSubscriber_instances,poll_fn2,_subs,_plugins2,_pausedState,_destroyed,_networkPromise,_anyNetwork,_performCache,_lastBlockNumber,_nextTimer,_timers,_disableCcipRead,_options2,_AbstractProvider_instances,perform_fn,call_fn,checkNetwork_fn,getAccountValue_fn,getBlock_fn,hasSub_fn,getSub_fn,_g,_VoidSigner_instances,throwUnsupported_fn,_provider4,_filterIdPromise,_poller3,_running3,_network,_hault,_FilterIdSubscriber_instances,poll_fn3,teardown_fn,_event,_options3,_nextId,_payloads,_drainTimer,_notReady,_network2,_pendingDetectNetwork,_JsonRpcApiProvider_instances,scheduleDrain_fn,_pollingInterval,_connect,_signingKey,_data4,_checksum,_words,_WordlistOwl_instances,loadWords_fn,_HDNodeWallet_instances,account_fn,_HDNodeWallet_static,fromSeed_fn,_Wallet_static,_h,fromAccount_fn;import{l as log$1,p as process$1,c as commonjsGlobal,g as getDefaultExportFromCjs,L as LogLevel$4,a as LogLevelDirection}from"./WDN37msH.js";import{a as browser_ext,b as browserSvelte}from"./CgCfpVku.js";import{g as get,w as writable,d as derived}from"./B2gA1VsD.js";import"./BaS8d5lg.js";import{B as Buffer$1,a as Buffer$1$1}from"./BOosul_h.js";const scriptRel="modulepreload";const assetsURL=function(dep,importerUrl){return new URL(dep,importerUrl).href};const seen={};const __vitePreload=function preload(baseModule,deps,importerUrl){let promise=Promise.resolve();if(deps&&deps.length>0){let allSettled2=function(promises){return Promise.all(promises.map(p=>Promise.resolve(p).then(value=>({status:"fulfilled",value:value}),reason=>({status:"rejected",reason:reason}))))};const links=document.getElementsByTagName("link");const cspNonceMeta=document.querySelector("meta[property=csp-nonce]");const cspNonce=(cspNonceMeta==null?void 0:cspNonceMeta.nonce)||(cspNonceMeta==null?void 0:cspNonceMeta.getAttribute("nonce"));promise=allSettled2(deps.map(dep=>{dep=assetsURL(dep,importerUrl);if(dep in seen)return;seen[dep]=true;const isCss=dep.endsWith(".css");const cssSelector=isCss?'[rel="stylesheet"]':"";const isBaseRelative=!!importerUrl;if(isBaseRelative){for(let i=links.length-1;i>=0;i--){const link2=links[i];if(link2.href===dep&&(!isCss||link2.rel==="stylesheet")){return}}}else if(document.querySelector(`link[href="${dep}"]${cssSelector}`)){return}const link=document.createElement("link");link.rel=isCss?"stylesheet":scriptRel;if(!isCss){link.as="script"}link.crossOrigin="";link.href=dep;if(cspNonce){link.setAttribute("nonce",cspNonce)}document.head.appendChild(link);if(isCss){return new Promise((res,rej)=>{link.addEventListener("load",res);link.addEventListener("error",()=>rej(new Error(`Unable to preload CSS for ${dep}`)))})}}))}function handlePreloadError(err){const e=new Event("vite:preloadError",{cancelable:true});e.payload=err;window.dispatchEvent(e);if(!e.defaultPrevented){throw err}}return promise.then(res=>{for(const item of res||[]){if(item.status!=="rejected")continue;handlePreloadError(item.reason)}return baseModule().catch(handlePreloadError)})};const getObjectFromLocalStorage=async(key2,timeoutMs=1e3)=>{try{if(!browser_ext){return null}const storagePromise=browser_ext.storage.local.get(key2);const timeoutPromise=new Promise(resolve=>setTimeout(()=>{resolve(null)},timeoutMs));const result=await Promise.race([storagePromise,timeoutPromise]);if(!result||!(key2 in result)){return null}return result[key2]}catch(error){log$1.error("Error getting object from local storage",false,error);return null}};const setObjectInLocalStorage=async(key2,obj)=>{if(!browser_ext)return;try{await browser_ext.storage.local.set({[key2]:obj})}catch(error){log$1.error("Error setting object in local storage",false,error);throw error}};function dateString(){return(new Date).toISOString()}function formatDate(date){return date.toLocaleString()}function formatTimestamp(timestamp,{placeholder:placeholder="------",locale:locale="en-US",options:options={month:"short",day:"numeric",hour:"2-digit",minute:"2-digit"}}={}){try{if(timestamp===void 0||typeof timestamp==="number"&&Number.isNaN(timestamp)){return placeholder}let date;if(typeof timestamp==="string"||typeof timestamp==="number"){date=new Date(timestamp);if(isNaN(date.getTime())){return placeholder}}else if(timestamp instanceof Date){date=timestamp}else{return placeholder}return new Intl.DateTimeFormat(locale,options).format(date)}catch(e){log$1.error(e);return placeholder}}var SystemTheme=(SystemTheme2=>{SystemTheme2["DARK"]="dark";SystemTheme2["LIGHT"]="light";SystemTheme2["SYSTEM"]="system";return SystemTheme2})(SystemTheme||{});var AccountTypeCategory=(AccountTypeCategory2=>{AccountTypeCategory2["PRIMARY"]="primary";AccountTypeCategory2["SUB"]="sub";AccountTypeCategory2["CONTRACT"]="contract";AccountTypeCategory2["IMPORTED"]="imported";return AccountTypeCategory2})(AccountTypeCategory||{});var PlanType=(PlanType2=>{PlanType2["TRIAL"]="trial";PlanType2["BASIC_MEMBER"]="basic_member";PlanType2["FOUNDING_MEMBER"]="founding_member";PlanType2["EARLY_ADOPTER"]="early_adopter";PlanType2["YAKKL_PRO"]="yakkl_pro";PlanType2["INSTITUTION"]="institution";PlanType2["BUSINESS"]="business";PlanType2["ENTERPRISE"]="enterprise";return PlanType2})(PlanType||{});var AccessSourceType=(AccessSourceType2=>{AccessSourceType2["STANDARD"]="standard";AccessSourceType2["SUBSCRIBED"]="subscribed";AccessSourceType2["TRIAL"]="trial";AccessSourceType2["PROMO"]="promo";return AccessSourceType2})(AccessSourceType||{});var PromoClassificationType=(PromoClassificationType2=>{PromoClassificationType2["FOUNDING_MEMBER"]="founding_member";PromoClassificationType2["EARLY_ADOPTER"]="early_adopter";PromoClassificationType2["YAKKL_PRO"]="yakkl_pro";PromoClassificationType2["INFLUENCER"]="influencer";PromoClassificationType2["EMPLOYEE"]="employee";PromoClassificationType2["SPECIAL"]="special";PromoClassificationType2["EVENT"]="event";PromoClassificationType2["OTHER"]="other";PromoClassificationType2["NONE"]="none";return PromoClassificationType2})(PromoClassificationType||{});var NetworkType=(NetworkType2=>{NetworkType2["MAINNET"]="mainnet";NetworkType2["TESTNET"]="testnet";NetworkType2["PRIVATE"]="private";NetworkType2["OTHER"]="other";return NetworkType2})(NetworkType||{});var MessageType=(MessageType2=>{MessageType2["ACTIVE_TAB_CHANGED"]="ACTIVE_TAB_CHANGED";MessageType2["TAB_UPDATED"]="TAB_UPDATED";MessageType2["TAB_REMOVED"]="TAB_REMOVED";MessageType2["WINDOW_FOCUSED"]="WINDOW_FOCUSED";return MessageType2})(MessageType||{});const VERSION$3="2.0.0";const YEAR="2025";const PRO_ELIGIBLE_PROMO_TYPES=["investor","influencer","employee","special","founding","early","partner","founder","internal","press"];const FOUNDING_MEMBER_DEADLINE="2025-08-15T04:00:00.000Z";const EARLY_ADOPTER_DEADLINES=[{date:"2025-10-01T04:00:00.000Z",price:120},{date:"2025-11-15T04:00:00.000Z",price:132},{date:"2026-01-01T04:00:00.000Z",price:144}];const DEFAULT_PERSONA="default";const TIMELINES=["1h","24h","7d","30d"];const NUM_OF_SPLASH_IMAGES=3;const SPLASH_DELAY=3e3;const ALERT_DELAY=3e3;const IDLE_AUTO_LOCK_CYCLE=2;const TIMER_CHECK_PRICE_INTERVAL_TIME=1e4;const TIMER_PRICE_INTERVAL_TIME=1e4;const TIMER_CHECK_GAS_PRICE_INTERVAL_TIME=1e4;const TIMER_TOKEN_PRICE_CYCLE_TIME=15e3;const TIMER_SWAP_FETCH_PRICES_TIME=6e4;const TIMER_GAS_PRICE_CHECK="gas_checkGasPrices";const ETH_BASE_EOA_GAS_UNITS=21e3;const ETH_BASE_SCA_GAS_UNITS=45e3;const ETH_BASE_SWAP_GAS_UNITS=500000n;const YAKKL_GAS_ESTIMATE_MIN_USD=3.5;const YAKKL_GAS_ESTIMATE_MULTIHOP_SWAP_DEFAULT=375e4;const YAKKL_GAS_ESTIMATE_MULTIPLIER_BASIS_POINTS=30000n;const YAKKL_FEE_BASIS_POINTS=42.25;const YAKKL_FEE_BASIS_POINTS_DIVISOR=1e4;const YAKKL_ZERO_ADDRESS="0x0000000000000000000000000000000000000000";const YAKKL_ZERO_ACCOUNT_NAME="YAKKL - Zero Account - YAKKL";const YAKKL_INTERNAL="yakkl-internal";const YAKKL_SPLASH="yakkl-splash";const YAKKL_DAPP="yakkl-dapp";const DEFAULT_POPUP_WIDTH=428;const DEFAULT_POPUP_HEIGHT=926;const DEFAULT_EXT_HEIGHT=926;const DEFAULT_TITLE="YAKKL® Smart Wallet";const DEFAULT_DERIVED_PATH_ETH="m/44'/60'/";const STORAGE_YAKKL_PREFERENCES="preferences";const STORAGE_YAKKL_SETTINGS="settings";const STORAGE_YAKKL_CURRENTLY_SELECTED="yakklCurrentlySelected";const STORAGE_YAKKL_REGISTERED_DATA="yakklRegisteredData";const STORAGE_YAKKL_PROFILE="profile";const STORAGE_YAKKL_ACCOUNTS="yakklAccounts";const STORAGE_YAKKL_PRIMARY_ACCOUNTS="yakklPrimaryAccounts";const STORAGE_YAKKL_CONTACTS="yakklContacts";const STORAGE_YAKKL_TOKENDATA="yakklTokenData";const STORAGE_YAKKL_TOKENDATA_CUSTOM="yakklTokenDataCustom";const STORAGE_YAKKL_COMBINED_TOKENS="yakklCombinedTokens";const STORAGE_YAKKL_CHATS="yakklChats";const STORAGE_YAKKL_WATCHLIST="yakklWatchList";const STORAGE_YAKKL_BLOCKEDLIST="yakklBlockedList";const STORAGE_YAKKL_CONNECTED_DOMAINS="yakklConnectedDomains";const STORAGE_YAKKL_WALLET_PROVIDERS="yakklWalletProviders";const STORAGE_YAKKL_WALLET_BLOCKCHAINS="yakklWalletBlockchains";const PATH_REGISTER="/register/Register";const PATH_LOGIN="/login/Login";const PATH_WELCOME="/welcome/welcome";const PATH_LOGOUT="/logout";const PATH_ACCOUNTS="/accounts";const PATH_ACCOUNTS_ETHEREUM_CREATE_PRIMARY="/accounts/ethereum/create/primary";const PATH_ACCOUNTS_ETHEREUM_CREATE_DERIVED="/accounts/ethereum/create/derived";const PATH_LEGAL="/legal/Legal";const PATH_SECURITY="/security";const PATH_DAPP_ACCOUNTS="/dapp/popups/accounts";const PATH_ETHEREUM_TRANSACTIONS_SEND="/accounts/ethereum/transactions/send";const yakklPreferences={id:"",persona:DEFAULT_PERSONA,idleDelayInterval:60,showTestNetworks:true,dark:SystemTheme.SYSTEM,chart:"line",screenWidth:0,screenHeight:0,idleAutoLock:true,idleAutoLockCycle:IDLE_AUTO_LOCK_CYCLE,locale:"en_US",currency:{code:"USD",symbol:"$"},words:32,wallet:{title:DEFAULT_TITLE,extensionHeight:DEFAULT_EXT_HEIGHT,popupHeight:DEFAULT_POPUP_HEIGHT,popupWidth:DEFAULT_POPUP_WIDTH,enableContextMenu:false,enableResize:false,splashDelay:SPLASH_DELAY,alertDelay:ALERT_DELAY,splashImages:NUM_OF_SPLASH_IMAGES,autoLockTimer:0,autoLockAsk:false,autoLockAskTimer:10,animationLockScreen:false,pinned:true,pinnedLocation:"M",defaultWallet:true},theme:"yakkl",themes:[{name:"yakkl",animation:{lockScreen:""},colors:{primary:"",secondary:"",primaryBackgroundLight:"",primaryBackgroundDark:""}}],version:VERSION$3,createDate:dateString(),updateDate:dateString()};let yakklSettings={id:"",persona:DEFAULT_PERSONA,version:VERSION$3,previousVersion:"",plan:{type:PlanType.BASIC_MEMBER,source:AccessSourceType.STANDARD,promo:null,trialEndDate:null,upgradeDate:null},trialCountdownPinned:false,legal:{termsAgreed:false,privacyViewed:false,updated:false},platform:{arch:"",nacl_arch:"",os:"",osVersion:"",browser:"",browserVersion:"",platform:""},init:false,showHints:true,isLocked:true,isLockedHow:"",transactions:{retry:{enabled:true,howManyAttempts:3,seconds:30,baseFeeIncrease:.1,priorityFeeIncrease:.1},retain:{enabled:true,days:-1,includeRaw:true}},meta:{},upgradeDate:"",lastAccessDate:dateString(),createDate:dateString(),updateDate:dateString()};let yakklWatch={id:"",persona:DEFAULT_PERSONA,blockchain:"",name:"",tags:[],quantity:0n,includeInPortfolio:false,explorer:"",address:"",addressAlias:"",version:VERSION$3,createDate:dateString(),updateDate:dateString()};({createDate:dateString(),updateDate:dateString()});let yakklBlocked={id:"",persona:DEFAULT_PERSONA,domain:""};let yakklRegisteredData={id:"",persona:DEFAULT_PERSONA,key:"",plan:{type:PlanType.BASIC_MEMBER,source:AccessSourceType.STANDARD,promo:PromoClassificationType.NONE,trialEndDate:"",upgradeDate:""},version:VERSION$3,createDate:dateString(),updateDate:dateString()};let profile={id:"",persona:DEFAULT_PERSONA,userName:"",preferences:yakklPreferences,data:{},version:VERSION$3,createDate:dateString(),updateDate:dateString()};let yakklChat={id:"",persona:DEFAULT_PERSONA,text:"",sender:"",timestamp:"",version:VERSION$3,createDate:dateString(),updateDate:dateString()};let yakklCurrentlySelected={id:"",persona:DEFAULT_PERSONA,shortcuts:{quantity:0n,accountType:AccountTypeCategory.PRIMARY,accountName:YAKKL_ZERO_ACCOUNT_NAME,smartContract:false,address:YAKKL_ZERO_ADDRESS,alias:"",primary:null,init:false,legal:false,isLocked:true,showTestNetworks:false,profile:{userName:"",name:null,email:""},gasLimit:21e3,networks:[{blockchain:"Ethereum",name:"Mainnet",chainId:1,symbol:"ETH",type:NetworkType.MAINNET,explorer:"https://etherscan.io",decimals:18},{blockchain:"Ethereum",name:"Sepolia",chainId:11155111,symbol:"ETH",type:NetworkType.TESTNET,explorer:"https://sepolia.etherscan.io",decimals:18}],network:{blockchain:"Ethereum",name:"Mainnet",chainId:1,symbol:"ETH",type:NetworkType.MAINNET,explorer:"https://etherscan.io",decimals:18},blockchain:"Ethereum",type:"Mainnet",chainId:1,symbol:"ETH",explorer:"https://etherscan.io"},preferences:{locale:"en_US",currency:{code:"USD",symbol:"$"}},data:{},version:VERSION$3,createDate:dateString(),updateDate:dateString()};let yakklPrimaryAccount={id:"",persona:DEFAULT_PERSONA,name:YAKKL_ZERO_ACCOUNT_NAME,address:YAKKL_ZERO_ADDRESS,quantity:0n,index:0,data:{},account:{},subIndex:0,subAccounts:[],version:VERSION$3,createDate:dateString(),updateDate:dateString()};let yakklAccount={id:"",persona:DEFAULT_PERSONA,index:0,blockchain:"Ethereum",smartContract:false,address:YAKKL_ZERO_ADDRESS,alias:"",accountType:AccountTypeCategory.PRIMARY,name:YAKKL_ZERO_ACCOUNT_NAME,description:"",primaryAccount:yakklPrimaryAccount,data:{},quantity:0n,class:"Default",level:"L1",isSigner:true,avatar:"",tags:["Ethereum"],includeInPortfolio:true,connectedDomains:[],version:VERSION$3,createDate:dateString(),updateDate:dateString()};yakklPrimaryAccount.account=yakklAccount;({createDate:dateString(),updateDate:dateString()});let yakklContact={id:"",persona:DEFAULT_PERSONA,name:"",address:"",addressType:"EOA",avatar:"",blockchain:"Ethereum",alias:"",note:"",version:VERSION$3,createDate:dateString(),updateDate:dateString(),meta:{}};({createDate:dateString(),updateDate:dateString()});let yakklAccounts=[yakklAccount];let yakklPrimaryAccounts=[yakklPrimaryAccount];let yakklContacts=[yakklContact];let yakklChats=[yakklChat];let yakklBlockedList=[yakklBlocked];let yakklWatchList=[yakklWatch];[{id:"",persona:DEFAULT_PERSONA,blockchain:"Ethereum",name:"Watcher 1",tags:["Binance 8","Uniswap"],quantity:".000455",includeInPortfolio:true,explorer:"",address:"0xf977814e90da44bfa03b6295a0616a897441acec",addressAlias:"",version:VERSION$3,createDate:dateString(),updateDate:dateString()},{id:"",persona:DEFAULT_PERSONA,blockchain:"Ethereum",name:"Watcher 2",tags:["Vb","Token holdings"],quantity:"0.0",includeInPortfolio:false,explorer:"https://etherscan.io/tokenholdings?a=0xab5801a7d398351b8be11c439e05c5b3259aec9b",address:"0xAb5801a7D398351b8bE11C439e05C5B3259aeC9B",addressAlias:"Vb",version:VERSION$3,createDate:dateString(),updateDate:dateString()},{id:"",persona:DEFAULT_PERSONA,blockchain:"Ethereum",name:"Watcher 3",tags:["barmstrong.eth","coinbase","address"],quantity:"0.0",includeInPortfolio:false,explorer:"https://etherscan.io/address/0x5b76f5b8fc9d700624f78208132f91ad4e61a1f0",address:"0x5b76f5B8fc9D700624F78208132f91AD4e61a1f0",addressAlias:"barmstrong.eth",version:VERSION$3,createDate:dateString(),updateDate:dateString()}];const global=globalThis||void 0||self;class YakklError extends Error{constructor(message,code,info){super(message);__publicField(this,"code");__publicField(this,"info");this.name="YakklError";this.code=code;this.info=info}}function makeError$1(message,code,info){return new YakklError(message,code,info)}function parseJsonRpcError(errorString){try{let parsed;try{parsed=typeof errorString==="string"?JSON.parse(errorString):errorString}catch{const jsonMatch=errorString.match(/\{.*\}/);if(jsonMatch){parsed=JSON.parse(jsonMatch[0])}}if(parsed){const errorObj=parsed.error||parsed;return{message:formatErrorMessage(errorObj.message||"Unknown error"),code:errorObj.code||-1,details:{requestMethod:extractValue(errorString,"requestMethod"),url:extractValue(errorString,"url"),jsonrpc:parsed.jsonrpc,id:parsed.id}}}return{message:errorString,code:-1}}catch(e){log$1.error("Error parsing error message:",false,e);return{message:errorString,code:-1}}}function formatErrorMessage(message){const errorMappings={"transaction underpriced":"Transaction failed: Gas price too low. Please try again with a higher gas price. Maybe add a tip as well.","insufficient funds":"Transaction failed: Insufficient funds to complete this transaction.","nonce too low":"Transaction failed: Please wait for your previous transaction to complete.","already known":"This transaction has already been submitted.","replacement transaction underpriced":"Cannot replace existing transaction: New gas price too low.","gas limit reached":"Transaction failed: Network is busy. Please try again later or increase gas limit."};for(const[pattern,friendlyMessage]of Object.entries(errorMappings)){if(message.toLowerCase().includes(pattern.toLowerCase())){return friendlyMessage}}message=message.replace(/[{}"\\]/g,"");message=message.charAt(0).toUpperCase()+message.slice(1);return message}function extractValue(errorString,key2){const match=new RegExp(`${key2}="([^"]*)"`,"i").exec(errorString);return match?match[1]:void 0}let BigNumber$2=class BigNumber{constructor(value=null){__publicField(this,"_value");this._value=value}get value(){return this._value}set value(newValue){this._value=newValue}compare(other){const a=this.toBigInt();const b2=BigNumber.from(other).toBigInt();if(a===null||b2===null){throw new Error("Cannot compare null values")}if(a<b2)return-1;if(a>b2)return 1;return 0}static isBigNumber(value){return value instanceof BigNumber}static isHexObject(value){return typeof value==="object"&&value!==null&&"hex"in value&&"type"in value}toNumber(){if(this._value===null){return null}if(typeof this._value==="string"||typeof this._value==="number"){return Number(this._value)}if(typeof this._value==="bigint"){return Number(this._value)}if(BigNumber.isBigNumber(this._value)){return this._value.toNumber()}if(BigNumber.isHexObject(this._value)){return Number(BigInt(this._value.hex))}return null}toBigInt(){if(this._value===null){return null}if(typeof this._value==="string"){return BigInt(this._value)}if(typeof this._value==="number"){return BigInt(this._value)}if(typeof this._value==="bigint"){return this._value}if(BigNumber.isBigNumber(this._value)){return this._value.toBigInt()}if(BigNumber.isHexObject(this._value)){return BigInt(this._value.hex)}return null}fromValue(value){this._value=value}max(other){return BigNumber.max(this._value,other)}min(other){return BigNumber.min(this._value,other)}add(other){return BigNumber.add(this._value,other)}subtract(other){return BigNumber.subtract(this._value,other)}sub(other){return this.subtract(other)}div(other){return BigNumber.div(this._value,other)}mul(other){return BigNumber.mul(this._value,other)}mod(other){return BigNumber.mod(this._value,other)}toString(){const bigintValue=this.toBigInt();if(bigintValue===null){return""}return bigintValue.toString()}toHex(isEthereum=true){if(this._value===null){return""}if(typeof this._value==="string"){return this._value}const bigintValue=this.toBigInt();if(bigintValue===null){return""}let hexString=bigintValue.toString(16);if(isEthereum&&hexString.length%2!==0){hexString="0"+hexString}return"0x"+hexString}static from(value){if(BigNumber.isHexObject(value)){return new BigNumber(BigInt(value.hex))}return new BigNumber(value)}static toNumber(value){if(value===null){return null}if(typeof value==="string"||typeof value==="number"){return Number(value)}if(typeof value==="bigint"){return Number(value)}if(BigNumber.isBigNumber(value)){return value.toNumber()}if(BigNumber.isHexObject(value)){return Number(BigInt(value.hex))}return null}static toBigInt(value,decimals=18){if(value===null){return null}if(typeof value==="number"){if(!Number.isInteger(value)){const factor=Math.pow(10,decimals);return BigInt(Math.round(value*factor))}else{return BigInt(value)}}if(typeof value==="string"){if(value.includes(".")){const[integerPart,fractionalPart=""]=value.split(".");const factor=BigInt("1"+"0".repeat(decimals));const scaledValue=BigInt(integerPart)*factor+BigInt((fractionalPart+"0".repeat(decimals)).slice(0,decimals));return scaledValue}else{return BigInt(value)}}if(typeof value==="bigint"){return value}if(BigNumber.isBigNumber(value)){return value.toBigInt()}if(BigNumber.isHexObject(value)){return BigInt(value.hex)}return null}static max(value1,value2){const bigint1=BigNumber.toBigInt(value1);const bigint2=BigNumber.toBigInt(value2);if(bigint1===null||bigint2===null){throw new Error("Invalid BigNumberish value")}return new BigNumber(bigint1>bigint2?bigint1:bigint2)}static min(value1,value2){const bigint1=BigNumber.toBigInt(value1);const bigint2=BigNumber.toBigInt(value2);if(bigint1===null||bigint2===null){throw new Error("Invalid BigNumberish value")}return new BigNumber(bigint1<bigint2?bigint1:bigint2)}static add(value1,value2){const bigint1=BigNumber.toBigInt(value1);const bigint2=BigNumber.toBigInt(value2);if(bigint1===null||bigint2===null){throw new Error("Invalid BigNumberish value")}return new BigNumber(bigint1+bigint2)}static subtract(value1,value2){const bigint1=BigNumber.toBigInt(value1);const bigint2=BigNumber.toBigInt(value2);if(bigint1===null||bigint2===null){throw new Error("Invalid BigNumberish value")}return new BigNumber(bigint1-bigint2)}static sub(value1,value2){return BigNumber.subtract(value1,value2)}static div(value1,value2){const bigint1=BigNumber.toBigInt(value1);const bigint2=BigNumber.toBigInt(value2);if(bigint1===null||bigint2===null||bigint2===BigInt(0)){throw new Error("Invalid BigNumberish value or division by zero")}return new BigNumber(bigint1/bigint2)}static mul(value1,value2){const bigint1=BigNumber.toBigInt(value1);const bigint2=BigNumber.toBigInt(value2);if(bigint1===null||bigint2===null){throw new Error("Invalid BigNumberish value")}return new BigNumber(bigint1*bigint2)}static mod(value1,value2){const bigint1=BigNumber.toBigInt(value1);const bigint2=BigNumber.toBigInt(value2);if(bigint1===null||bigint2===null||bigint2===BigInt(0)){throw new Error("Invalid BigNumberish value or modulus by zero")}return new BigNumber(bigint1%bigint2)}static toHex(value){const bigintValue=BigNumber.toBigInt(value);if(bigintValue===null){throw new Error("Invalid BigNumberish value")}return"0x"+bigintValue.toString(16)}static fromHex(hex){if(typeof hex!=="string"||!/^0x[0-9a-fA-F]+$/.test(hex)){throw new Error("Invalid hex string")}return new BigNumber(BigInt(hex))}toFiat(price){const numberValue=this.toNumber();if(numberValue===null){throw new Error("Invalid BigNumberish value")}return numberValue*price}toFormattedFiat(price,currencyCode,locale=""){const fiatValue=this.toFiat(price);const formatter=new Intl.NumberFormat(locale||void 0,{style:"currency",currency:currencyCode});return formatter.format(fiatValue)}};function encodeJSON$1(obj){const jsonString=JSON.stringify(obj,(_,value)=>{if(typeof value==="bigint"){return value.toString()+"n"}if(typeof value==="object"&&value!==null&&Object.keys(value).length===0){if(Array.isArray(value)){return[]}return"{}"}return value});return jsonString}function isEmptyNullOrUndefined(obj){return obj===null||obj===void 0||typeof obj==="object"&&Object.keys(obj).length===0&&obj.constructor===Object}function isEncryptedData(data){return!isEmptyNullOrUndefined(data)&&typeof data.iv==="string"&&typeof data.data==="string"&&typeof data.salt==="string"}function isProfileData(data){return data.pincode!==void 0}function isMetaData(meta){return meta!==null&&typeof meta==="object"}function isString$1(value){return typeof value==="string"}function isYakklPrimaryAccount(account){return account&&account.subAccounts!==void 0}function isBigNumber(value){return value instanceof BigNumber$2}function toHex$3(value){if(isBigNumber(value)){return value.toHex()}const hex=BigNumber$2.from(value).toHex();return hex.length%2===0?hex:"0x0"+hex.slice(2)}const Nibbles$2="0123456789abcdef";BigInt(0);BigInt(1);const maxValue$1=BigInt(2)**BigInt(256)-BigInt(1);function getBigInt$1(value,name){try{if(value===null){throw new Error("value cannot be null")}switch(typeof value){case"bigint":return value;case"number":if(!Number.isInteger(value)){throw new Error("underflow")}if(value<-maxValue$1||value>maxValue$1){throw new Error("overflow")}return BigInt(value);case"string":if(value===""){throw new Error("empty string")}if(value[0]==="-"&&value[1]!=="-"){return-BigInt(value.substring(1))}if(value==="0"||value==="0.0"||value==="0.00"){return 0n}return BigInt(value);default:throw new Error("invalid BigNumberish value")}}catch(error){log$1.error(`getBigInt: ${error}`);if(error instanceof Error){throw makeError$1(error.message,"INVALID_ARGUMENT",{argument:"value",value:value})}else{throw error}}}function toBigInt$1(value,decimals){if(value instanceof Uint8Array){let result="0x0";for(const v of value){result+=Nibbles$2[v>>4];result+=Nibbles$2[v&15]}return BigInt(result)}return getBigInt$1(value)}function safeConvertToBigInt(value){try{if(value===null||value===void 0)return void 0;if(typeof value==="bigint")return value;if(value instanceof BigNumber$2){return BigInt(value.toString())}if(typeof value==="object"&&value!==null&&"_hex"in value){return BigInt(value._hex)}return toBigInt$1(value)}catch(error){log$1.error(`safeConvertToBigInt: ${error}`);return 0n}}const version$t="6.14.4";function checkType(value,type,name){const types=type.split("|").map(t=>t.trim());for(let i=0;i<types.length;i++){switch(type){case"any":return;case"bigint":case"boolean":case"number":case"string":if(typeof value===type){return}}}const error=new Error(`invalid value for type ${type}`);error.code="INVALID_ARGUMENT";error.argument=`value.${name}`;error.value=value;throw error}async function resolveProperties$2(value){const keys2=Object.keys(value);const results=await Promise.all(keys2.map(k=>Promise.resolve(value[k])));return results.reduce((accum,v,index)=>{accum[keys2[index]]=v;return accum},{})}function defineProperties(target,values,types){for(let key2 in values){let value=values[key2];const type=types?types[key2]:null;if(type){checkType(value,type,key2)}Object.defineProperty(target,key2,{enumerable:true,value:value,writable:false})}}function stringify$1(value,seen2){if(value==null){return"null"}if(seen2==null){seen2=new Set}if(typeof value==="object"){if(seen2.has(value)){return"[Circular]"}seen2.add(value)}if(Array.isArray(value)){return"[ "+value.map(v=>stringify$1(v,seen2)).join(", ")+" ]"}if(value instanceof Uint8Array){const HEX2="0123456789abcdef";let result="0x";for(let i=0;i<value.length;i++){result+=HEX2[value[i]>>4];result+=HEX2[value[i]&15]}return result}if(typeof value==="object"&&typeof value.toJSON==="function"){return stringify$1(value.toJSON(),seen2)}switch(typeof value){case"boolean":case"number":case"symbol":return value.toString();case"bigint":return BigInt(value).toString();case"string":return JSON.stringify(value);case"object":{const keys2=Object.keys(value);keys2.sort();return"{ "+keys2.map(k=>`${stringify$1(k,seen2)}: ${stringify$1(value[k],seen2)}`).join(", ")+" }"}}return`[ COULD NOT SERIALIZE ]`}function isError(error,code){return error&&error.code===code}function isCallException(error){return isError(error,"CALL_EXCEPTION")}function makeError(message,code,info){let shortMessage=message;{const details=[];if(info){if("message"in info||"code"in info||"name"in info){throw new Error(`value will overwrite populated values: ${stringify$1(info)}`)}for(const key2 in info){if(key2==="shortMessage"){continue}const value=info[key2];details.push(key2+"="+stringify$1(value))}}details.push(`code=${code}`);details.push(`version=${version$t}`);if(details.length){message+=" ("+details.join(", ")+")"}}let error;switch(code){case"INVALID_ARGUMENT":error=new TypeError(message);break;case"NUMERIC_FAULT":case"BUFFER_OVERRUN":error=new RangeError(message);break;default:error=new Error(message)}defineProperties(error,{code:code});if(info){Object.assign(error,info)}if(error.shortMessage==null){defineProperties(error,{shortMessage:shortMessage})}return error}function assert$7(check,message,code,info){if(!check){throw makeError(message,code,info)}}function assertArgument(check,message,name,value){assert$7(check,message,"INVALID_ARGUMENT",{argument:name,value:value})}function assertArgumentCount(count,expectedCount,message){if(message==null){message=""}if(message){message=": "+message}assert$7(count>=expectedCount,"missing argument"+message,"MISSING_ARGUMENT",{count:count,expectedCount:expectedCount});assert$7(count<=expectedCount,"too many arguments"+message,"UNEXPECTED_ARGUMENT",{count:count,expectedCount:expectedCount})}const _normalizeForms=["NFD","NFC","NFKD","NFKC"].reduce((accum,form)=>{try{if("test".normalize(form)!=="test"){throw new Error("bad")}if(form==="NFD"){const check=String.fromCharCode(233).normalize("NFD");const expected=String.fromCharCode(101,769);if(check!==expected){throw new Error("broken")}}accum.push(form)}catch(error){}return accum},[]);function assertNormalize(form){assert$7(_normalizeForms.indexOf(form)>=0,"platform missing String.prototype.normalize","UNSUPPORTED_OPERATION",{operation:"String.prototype.normalize",info:{form:form}})}function assertPrivate(givenGuard,guard,className){if(className==null){className=""}if(givenGuard!==guard){let method=className,operation="new";if(className){method+=".";operation+=" "+className}assert$7(false,`private constructor; use ${method}from* methods`,"UNSUPPORTED_OPERATION",{operation:operation})}}function _getBytes(value,name,copy2){if(value instanceof Uint8Array){if(copy2){return new Uint8Array(value)}return value}if(typeof value==="string"&&value.match(/^0x(?:[0-9a-f][0-9a-f])*$/i)){const result=new Uint8Array((value.length-2)/2);let offset=2;for(let i=0;i<result.length;i++){result[i]=parseInt(value.substring(offset,offset+2),16);offset+=2}return result}assertArgument(false,"invalid BytesLike value",name||"value",value)}function getBytes(value,name){return _getBytes(value,name,false)}function getBytesCopy(value,name){return _getBytes(value,name,true)}function isHexString$2(value,length){if(typeof value!=="string"||!value.match(/^0x[0-9A-Fa-f]*$/)){return false}if(typeof length==="number"&&value.length!==2+2*length){return false}if(length===true&&value.length%2!==0){return false}return true}function isBytesLike$2(value){return isHexString$2(value,true)||value instanceof Uint8Array}const HexCharacters$2="0123456789abcdef";function hexlify$2(data){const bytes2=getBytes(data);let result="0x";for(let i=0;i<bytes2.length;i++){const v=bytes2[i];result+=HexCharacters$2[(v&240)>>4]+HexCharacters$2[v&15]}return result}function concat$2(datas){return"0x"+datas.map(d=>hexlify$2(d).substring(2)).join("")}function dataLength(data){if(isHexString$2(data,true)){return(data.length-2)/2}return getBytes(data).length}function dataSlice(data,start,end){const bytes2=getBytes(data);if(end!=null&&end>bytes2.length){assert$7(false,"cannot slice beyond data bounds","BUFFER_OVERRUN",{buffer:bytes2,length:bytes2.length,offset:end})}return hexlify$2(bytes2.slice(start==null?0:start,end==null?bytes2.length:end))}function zeroPad$2(data,length,left){const bytes2=getBytes(data);assert$7(length>=bytes2.length,"padding exceeds data length","BUFFER_OVERRUN",{buffer:new Uint8Array(bytes2),length:length,offset:length+1});const result=new Uint8Array(length);result.fill(0);if(left){result.set(bytes2,length-bytes2.length)}else{result.set(bytes2,0)}return hexlify$2(result)}function zeroPadValue(data,length){return zeroPad$2(data,length,true)}function zeroPadBytes(data,length){return zeroPad$2(data,length,false)}const BN_0$a=BigInt(0);const BN_1$4=BigInt(1);const maxValue=9007199254740991;function fromTwos(_value2,_width){const value=getUint(_value2,"value");const width=BigInt(getNumber(_width,"width"));assert$7(value>>width===BN_0$a,"overflow","NUMERIC_FAULT",{operation:"fromTwos",fault:"overflow",value:_value2});if(value>>width-BN_1$4){const mask2=(BN_1$4<<width)-BN_1$4;return-((~value&mask2)+BN_1$4)}return value}function toTwos(_value2,_width){let value=getBigInt(_value2,"value");const width=BigInt(getNumber(_width,"width"));const limit=BN_1$4<<width-BN_1$4;if(value<BN_0$a){value=-value;assert$7(value<=limit,"too low","NUMERIC_FAULT",{operation:"toTwos",fault:"overflow",value:_value2});const mask2=(BN_1$4<<width)-BN_1$4;return(~value&mask2)+BN_1$4}else{assert$7(value<limit,"too high","NUMERIC_FAULT",{operation:"toTwos",fault:"overflow",value:_value2})}return value}function mask(_value2,_bits){const value=getUint(_value2,"value");const bits=BigInt(getNumber(_bits,"bits"));return value&(BN_1$4<<bits)-BN_1$4}function getBigInt(value,name){switch(typeof value){case"bigint":return value;case"number":assertArgument(Number.isInteger(value),"underflow",name||"value",value);assertArgument(value>=-maxValue&&value<=maxValue,"overflow",name||"value",value);return BigInt(value);case"string":try{if(value===""){throw new Error("empty string")}if(value[0]==="-"&&value[1]!=="-"){return-BigInt(value.substring(1))}return BigInt(value)}catch(e){assertArgument(false,`invalid BigNumberish string: ${e.message}`,name||"value",value)}}assertArgument(false,"invalid BigNumberish value",name||"value",value)}function getUint(value,name){const result=getBigInt(value,name);assert$7(result>=BN_0$a,"unsigned value cannot be negative","NUMERIC_FAULT",{fault:"overflow",operation:"getUint",value:value});return result}const Nibbles$1="0123456789abcdef";function toBigInt(value){if(value instanceof Uint8Array){let result="0x0";for(const v of value){result+=Nibbles$1[v>>4];result+=Nibbles$1[v&15]}return BigInt(result)}return getBigInt(value)}function getNumber(value,name){switch(typeof value){case"bigint":assertArgument(value>=-maxValue&&value<=maxValue,"overflow",name||"value",value);return Number(value);case"number":assertArgument(Number.isInteger(value),"underflow",name||"value",value);assertArgument(value>=-maxValue&&value<=maxValue,"overflow",name||"value",value);return value;case"string":try{if(value===""){throw new Error("empty string")}return getNumber(BigInt(value),name)}catch(e){assertArgument(false,`invalid numeric string: ${e.message}`,name||"value",value)}}assertArgument(false,"invalid numeric value",name||"value",value)}function toNumber(value){return getNumber(toBigInt(value))}function toBeHex(_value2,_width){const value=getUint(_value2,"value");let result=value.toString(16);if(_width==null){if(result.length%2){result="0"+result}}else{const width=getNumber(_width,"width");assert$7(width*2>=result.length,`value exceeds width (${width} bytes)`,"NUMERIC_FAULT",{operation:"toBeHex",fault:"overflow",value:_value2});while(result.length<width*2){result="0"+result}}return"0x"+result}function toBeArray(_value2){const value=getUint(_value2,"value");if(value===BN_0$a){return new Uint8Array([])}let hex=value.toString(16);if(hex.length%2){hex="0"+hex}const result=new Uint8Array(hex.length/2);for(let i=0;i<result.length;i++){const offset=i*2;result[i]=parseInt(hex.substring(offset,offset+2),16)}return result}function toQuantity(value){let result=hexlify$2(isBytesLike$2(value)?value:toBeArray(value)).substring(2);while(result.startsWith("0")){result=result.substring(1)}if(result===""){result="0"}return"0x"+result}const Alphabet="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";let Lookup=null;function getAlpha(letter){if(Lookup==null){Lookup={};for(let i=0;i<Alphabet.length;i++){Lookup[Alphabet[i]]=BigInt(i)}}const result=Lookup[letter];assertArgument(result!=null,`invalid base58 value`,"letter",letter);return result}const BN_0$9=BigInt(0);const BN_58=BigInt(58);function encodeBase58(_value2){const bytes2=getBytes(_value2);let value=toBigInt(bytes2);let result="";while(value){result=Alphabet[Number(value%BN_58)]+result;value/=BN_58}for(let i=0;i<bytes2.length;i++){if(bytes2[i]){break}result=Alphabet[0]+result}return result}function decodeBase58(value){let result=BN_0$9;for(let i=0;i<value.length;i++){result*=BN_58;result+=getAlpha(value[i])}return result}function decodeBase64(textData){textData=atob(textData);const data=new Uint8Array(textData.length);for(let i=0;i<textData.length;i++){data[i]=textData.charCodeAt(i)}return getBytes(data)}function encodeBase64(_data5){const data=getBytes(_data5);let textData="";for(let i=0;i<data.length;i++){textData+=String.fromCharCode(data[i])}return btoa(textData)}class EventPayload{constructor(emitter,listener,filter2){__publicField(this,"filter");__publicField(this,"emitter");__privateAdd(this,_listener);__privateSet(this,_listener,listener);defineProperties(this,{emitter:emitter,filter:filter2})}async removeListener(){if(__privateGet(this,_listener)==null){return}await this.emitter.off(this.filter,__privateGet(this,_listener))}}_listener=new WeakMap;function errorFunc$1(reason,offset,bytes2,output2,badCodepoint){assertArgument(false,`invalid codepoint at offset ${offset}; ${reason}`,"bytes",bytes2)}function ignoreFunc$1(reason,offset,bytes2,output2,badCodepoint){if(reason==="BAD_PREFIX"||reason==="UNEXPECTED_CONTINUE"){let i=0;for(let o=offset+1;o<bytes2.length;o++){if(bytes2[o]>>6!==2){break}i++}return i}if(reason==="OVERRUN"){return bytes2.length-offset-1}return 0}function replaceFunc$1(reason,offset,bytes2,output2,badCodepoint){if(reason==="OVERLONG"){assertArgument(typeof badCodepoint==="number","invalid bad code point for replacement","badCodepoint",badCodepoint);output2.push(badCodepoint);return 0}output2.push(65533);return ignoreFunc$1(reason,offset,bytes2)}const Utf8ErrorFuncs$1=Object.freeze({error:errorFunc$1,ignore:ignoreFunc$1,replace:replaceFunc$1});function getUtf8CodePoints$1(_bytes,onError2){if(onError2==null){onError2=Utf8ErrorFuncs$1.error}const bytes2=getBytes(_bytes,"bytes");const result=[];let i=0;while(i<bytes2.length){const c=bytes2[i++];if(c>>7===0){result.push(c);continue}let extraLength=null;let overlongMask=null;if((c&224)===192){extraLength=1;overlongMask=127}else if((c&240)===224){extraLength=2;overlongMask=2047}else if((c&248)===240){extraLength=3;overlongMask=65535}else{if((c&192)===128){i+=onError2("UNEXPECTED_CONTINUE",i-1,bytes2,result)}else{i+=onError2("BAD_PREFIX",i-1,bytes2,result)}continue}if(i-1+extraLength>=bytes2.length){i+=onError2("OVERRUN",i-1,bytes2,result);continue}let res=c&(1<<8-extraLength-1)-1;for(let j=0;j<extraLength;j++){let nextChar=bytes2[i];if((nextChar&192)!=128){i+=onError2("MISSING_CONTINUE",i,bytes2,result);res=null;break}res=res<<6|nextChar&63;i++}if(res===null){continue}if(res>1114111){i+=onError2("OUT_OF_RANGE",i-1-extraLength,bytes2,result,res);continue}if(res>=55296&&res<=57343){i+=onError2("UTF16_SURROGATE",i-1-extraLength,bytes2,result,res);continue}if(res<=overlongMask){i+=onError2("OVERLONG",i-1-extraLength,bytes2,result,res);continue}result.push(res)}return result}function toUtf8Bytes$1(str,form){assertArgument(typeof str==="string","invalid string value","str",str);if(form!=null){assertNormalize(form);str=str.normalize(form)}let result=[];for(let i=0;i<str.length;i++){const c=str.charCodeAt(i);if(c<128){result.push(c)}else if(c<2048){result.push(c>>6|192);result.push(c&63|128)}else if((c&64512)==55296){i++;const c2=str.charCodeAt(i);assertArgument(i<str.length&&(c2&64512)===56320,"invalid surrogate pair","str",str);const pair=65536+((c&1023)<<10)+(c2&1023);result.push(pair>>18|240);result.push(pair>>12&63|128);result.push(pair>>6&63|128);result.push(pair&63|128)}else{result.push(c>>12|224);result.push(c>>6&63|128);result.push(c&63|128)}}return new Uint8Array(result)}function _toUtf8String$1(codePoints){return codePoints.map(codePoint=>{if(codePoint<=65535){return String.fromCharCode(codePoint)}codePoint-=65536;return String.fromCharCode((codePoint>>10&1023)+55296,(codePoint&1023)+56320)}).join("")}function toUtf8String$1(bytes2,onError2){return _toUtf8String$1(getUtf8CodePoints$1(bytes2,onError2))}function createGetUrl(options){async function getUrl2(req,_signal2){assert$7(_signal2==null||!_signal2.cancelled,"request cancelled before sending","CANCELLED");const protocol=req.url.split(":")[0].toLowerCase();assert$7(protocol==="http"||protocol==="https",`unsupported protocol ${protocol}`,"UNSUPPORTED_OPERATION",{info:{protocol:protocol},operation:"request"});assert$7(protocol==="https"||!req.credentials||req.allowInsecureAuthentication,"insecure authorized connections unsupported","UNSUPPORTED_OPERATION",{operation:"request"});let error=null;const controller=new AbortController;const timer=setTimeout(()=>{error=makeError("request timeout","TIMEOUT");controller.abort()},req.timeout);if(_signal2){_signal2.addListener(()=>{error=makeError("request cancelled","CANCELLED");controller.abort()})}const init4=Object.assign({},options,{method:req.method,headers:new Headers(Array.from(req)),body:req.body||void 0,signal:controller.signal});let resp;try{resp=await fetch(req.url,init4)}catch(_error2){clearTimeout(timer);if(error){throw error}throw _error2}clearTimeout(timer);const headers={};resp.headers.forEach((value,key2)=>{headers[key2.toLowerCase()]=value});const respBody=await resp.arrayBuffer();const body=respBody==null?null:new Uint8Array(respBody);return{statusCode:resp.status,statusMessage:resp.statusText,headers:headers,body:body}}return getUrl2}const MAX_ATTEMPTS=12;const SLOT_INTERVAL=250;let defaultGetUrlFunc=createGetUrl();const reData=new RegExp("^data:([^;:]*)?(;base64)?,(.*)$","i");const reIpfs=new RegExp("^ipfs://(ipfs/)?(.*)$","i");let locked$5=false;async function dataGatewayFunc(url,signal){try{const match=url.match(reData);if(!match){throw new Error("invalid data")}return new FetchResponse(200,"OK",{"content-type":match[1]||"text/plain"},match[2]?decodeBase64(match[3]):unpercent$1(match[3]))}catch(error){return new FetchResponse(599,"BAD REQUEST (invalid data: URI)",{},null,new FetchRequest(url))}}function getIpfsGatewayFunc(baseUrl){async function gatewayIpfs(url,signal){try{const match=url.match(reIpfs);if(!match){throw new Error("invalid link")}return new FetchRequest(`${baseUrl}${match[2]}`)}catch(error){return new FetchResponse(599,"BAD REQUEST (invalid IPFS URI)",{},null,new FetchRequest(url))}}return gatewayIpfs}const Gateways={data:dataGatewayFunc,ipfs:getIpfsGatewayFunc("https://gateway.ipfs.io/ipfs/")};const fetchSignals=new WeakMap;class FetchCancelSignal{constructor(request){__privateAdd(this,_listeners);__privateAdd(this,_cancelled);__privateSet(this,_listeners,[]);__privateSet(this,_cancelled,false);fetchSignals.set(request,()=>{if(__privateGet(this,_cancelled)){return}__privateSet(this,_cancelled,true);for(const listener of __privateGet(this,_listeners)){setTimeout(()=>{listener()},0)}__privateSet(this,_listeners,[])})}addListener(listener){assert$7(!__privateGet(this,_cancelled),"singal already cancelled","UNSUPPORTED_OPERATION",{operation:"fetchCancelSignal.addCancelListener"});__privateGet(this,_listeners).push(listener)}get cancelled(){return __privateGet(this,_cancelled)}checkSignal(){assert$7(!this.cancelled,"cancelled","CANCELLED",{})}}_listeners=new WeakMap;_cancelled=new WeakMap;function checkSignal(signal){if(signal==null){throw new Error("missing signal; should not happen")}signal.checkSignal();return signal}const _FetchRequest=class _FetchRequest{constructor(url){__privateAdd(this,_FetchRequest_instances);__privateAdd(this,_allowInsecure);__privateAdd(this,_gzip);__privateAdd(this,_headers);__privateAdd(this,_method);__privateAdd(this,_timeout);__privateAdd(this,_url);__privateAdd(this,_body);__privateAdd(this,_bodyType);__privateAdd(this,_creds);__privateAdd(this,_preflight);__privateAdd(this,_process);__privateAdd(this,_retry);__privateAdd(this,_signal);__privateAdd(this,_throttle);__privateAdd(this,_getUrlFunc);__privateSet(this,_url,String(url));__privateSet(this,_allowInsecure,false);__privateSet(this,_gzip,true);__privateSet(this,_headers,{});__privateSet(this,_method,"");__privateSet(this,_timeout,3e5);__privateSet(this,_throttle,{slotInterval:SLOT_INTERVAL,maxAttempts:MAX_ATTEMPTS});__privateSet(this,_getUrlFunc,null)}get url(){return __privateGet(this,_url)}set url(url){__privateSet(this,_url,String(url))}get body(){if(__privateGet(this,_body)==null){return null}return new Uint8Array(__privateGet(this,_body))}set body(body){if(body==null){__privateSet(this,_body,void 0);__privateSet(this,_bodyType,void 0)}else if(typeof body==="string"){__privateSet(this,_body,toUtf8Bytes$1(body));__privateSet(this,_bodyType,"text/plain")}else if(body instanceof Uint8Array){__privateSet(this,_body,body);__privateSet(this,_bodyType,"application/octet-stream")}else if(typeof body==="object"){__privateSet(this,_body,toUtf8Bytes$1(JSON.stringify(body)));__privateSet(this,_bodyType,"application/json")}else{throw new Error("invalid body")}}hasBody(){return __privateGet(this,_body)!=null}get method(){if(__privateGet(this,_method)){return __privateGet(this,_method)}if(this.hasBody()){return"POST"}return"GET"}set method(method){if(method==null){method=""}__privateSet(this,_method,String(method).toUpperCase())}get headers(){const headers=Object.assign({},__privateGet(this,_headers));if(__privateGet(this,_creds)){headers["authorization"]=`Basic ${encodeBase64(toUtf8Bytes$1(__privateGet(this,_creds)))}`}if(this.allowGzip){headers["accept-encoding"]="gzip"}if(headers["content-type"]==null&&__privateGet(this,_bodyType)){headers["content-type"]=__privateGet(this,_bodyType)}if(this.body){headers["content-length"]=String(this.body.length)}return headers}getHeader(key2){return this.headers[key2.toLowerCase()]}setHeader(key2,value){__privateGet(this,_headers)[String(key2).toLowerCase()]=String(value)}clearHeaders(){__privateSet(this,_headers,{})}[Symbol.iterator](){const headers=this.headers;const keys2=Object.keys(headers);let index=0;return{next:()=>{if(index<keys2.length){const key2=keys2[index++];return{value:[key2,headers[key2]],done:false}}return{value:void 0,done:true}}}}get credentials(){return __privateGet(this,_creds)||null}setCredentials(username,password){assertArgument(!username.match(/:/),"invalid basic authentication username","username","[REDACTED]");__privateSet(this,_creds,`${username}:${password}`)}get allowGzip(){return __privateGet(this,_gzip)}set allowGzip(value){__privateSet(this,_gzip,!!value)}get allowInsecureAuthentication(){return!!__privateGet(this,_allowInsecure)}set allowInsecureAuthentication(value){__privateSet(this,_allowInsecure,!!value)}get timeout(){return __privateGet(this,_timeout)}set timeout(timeout){assertArgument(timeout>=0,"timeout must be non-zero","timeout",timeout);__privateSet(this,_timeout,timeout)}get preflightFunc(){return __privateGet(this,_preflight)||null}set preflightFunc(preflight){__privateSet(this,_preflight,preflight)}get processFunc(){return __privateGet(this,_process)||null}set processFunc(process){__privateSet(this,_process,process)}get retryFunc(){return __privateGet(this,_retry)||null}set retryFunc(retry){__privateSet(this,_retry,retry)}get getUrlFunc(){return __privateGet(this,_getUrlFunc)||defaultGetUrlFunc}set getUrlFunc(value){__privateSet(this,_getUrlFunc,value)}toString(){return`<FetchRequest method=${JSON.stringify(this.method)} url=${JSON.stringify(this.url)} headers=${JSON.stringify(this.headers)} body=${__privateGet(this,_body)?hexlify$2(__privateGet(this,_body)):"null"}>`}setThrottleParams(params){if(params.slotInterval!=null){__privateGet(this,_throttle).slotInterval=params.slotInterval}if(params.maxAttempts!=null){__privateGet(this,_throttle).maxAttempts=params.maxAttempts}}send(){assert$7(__privateGet(this,_signal)==null,"request already sent","UNSUPPORTED_OPERATION",{operation:"fetchRequest.send"});__privateSet(this,_signal,new FetchCancelSignal(this));return __privateMethod(this,_FetchRequest_instances,send_fn).call(this,0,getTime$1()+this.timeout,0,this,new FetchResponse(0,"",{},null,this))}cancel(){assert$7(__privateGet(this,_signal)!=null,"request has not been sent","UNSUPPORTED_OPERATION",{operation:"fetchRequest.cancel"});const signal=fetchSignals.get(this);if(!signal){throw new Error("missing signal; should not happen")}signal()}redirect(location){const current=this.url.split(":")[0].toLowerCase();const target=location.split(":")[0].toLowerCase();assert$7(this.method==="GET"&&(current!=="https"||target!=="http")&&location.match(/^https?:/),`unsupported redirect`,"UNSUPPORTED_OPERATION",{operation:`redirect(${this.method} ${JSON.stringify(this.url)} => ${JSON.stringify(location)})`});const req=new _FetchRequest(location);req.method="GET";req.allowGzip=this.allowGzip;req.timeout=this.timeout;__privateSet(req,_headers,Object.assign({},__privateGet(this,_headers)));if(__privateGet(this,_body)){__privateSet(req,_body,new Uint8Array(__privateGet(this,_body)))}__privateSet(req,_bodyType,__privateGet(this,_bodyType));return req}clone(){const clone=new _FetchRequest(this.url);__privateSet(clone,_method,__privateGet(this,_method));if(__privateGet(this,_body)){__privateSet(clone,_body,__privateGet(this,_body))}__privateSet(clone,_bodyType,__privateGet(this,_bodyType));__privateSet(clone,_headers,Object.assign({},__privateGet(this,_headers)));__privateSet(clone,_creds,__privateGet(this,_creds));if(this.allowGzip){clone.allowGzip=true}clone.timeout=this.timeout;if(this.allowInsecureAuthentication){clone.allowInsecureAuthentication=true}__privateSet(clone,_preflight,__privateGet(this,_preflight));__privateSet(clone,_process,__privateGet(this,_process));__privateSet(clone,_retry,__privateGet(this,_retry));__privateSet(clone,_throttle,Object.assign({},__privateGet(this,_throttle)));__privateSet(clone,_getUrlFunc,__privateGet(this,_getUrlFunc));return clone}static lockConfig(){locked$5=true}static getGateway(scheme){return Gateways[scheme.toLowerCase()]||null}static registerGateway(scheme,func){scheme=scheme.toLowerCase();if(scheme==="http"||scheme==="https"){throw new Error(`cannot intercept ${scheme}; use registerGetUrl`)}if(locked$5){throw new Error("gateways locked")}Gateways[scheme]=func}static registerGetUrl(getUrl2){if(locked$5){throw new Error("gateways locked")}defaultGetUrlFunc=getUrl2}static createGetUrlFunc(options){return createGetUrl(options)}static createDataGateway(){return dataGatewayFunc}static createIpfsGatewayFunc(baseUrl){return getIpfsGatewayFunc(baseUrl)}};_allowInsecure=new WeakMap;_gzip=new WeakMap;_headers=new WeakMap;_method=new WeakMap;_timeout=new WeakMap;_url=new WeakMap;_body=new WeakMap;_bodyType=new WeakMap;_creds=new WeakMap;_preflight=new WeakMap;_process=new WeakMap;_retry=new WeakMap;_signal=new WeakMap;_throttle=new WeakMap;_getUrlFunc=new WeakMap;_FetchRequest_instances=new WeakSet;send_fn=async function(attempt,expires,delay,_request2,_response){var _a2,_b2,_c2;if(attempt>=__privateGet(this,_throttle).maxAttempts){return _response.makeServerError("exceeded maximum retry limit")}assert$7(getTime$1()<=expires,"timeout","TIMEOUT",{operation:"request.send",reason:"timeout",request:_request2});if(delay>0){await wait(delay)}let req=this.clone();const scheme=(req.url.split(":")[0]||"").toLowerCase();if(scheme in Gateways){const result=await Gateways[scheme](req.url,checkSignal(__privateGet(_request2,_signal)));if(result instanceof FetchResponse){let response2=result;if(this.processFunc){checkSignal(__privateGet(_request2,_signal));try{response2=await this.processFunc(req,response2)}catch(error){if(error.throttle==null||typeof error.stall!=="number"){response2.makeServerError("error in post-processing function",error).assertOk()}}}return response2}req=result}if(this.preflightFunc){req=await this.preflightFunc(req)}const resp=await this.getUrlFunc(req,checkSignal(__privateGet(_request2,_signal)));let response=new FetchResponse(resp.statusCode,resp.statusMessage,resp.headers,resp.body,_request2);if(response.statusCode===301||response.statusCode===302){try{const location=response.headers.location||"";return __privateMethod(_a2=req.redirect(location),_FetchRequest_instances,send_fn).call(_a2,attempt+1,expires,0,_request2,response)}catch(error){}return response}else if(response.statusCode===429){if(this.retryFunc==null||await this.retryFunc(req,response,attempt)){const retryAfter=response.headers["retry-after"];let delay2=__privateGet(this,_throttle).slotInterval*Math.trunc(Math.random()*Math.pow(2,attempt));if(typeof retryAfter==="string"&&retryAfter.match(/^[1-9][0-9]*$/)){delay2=parseInt(retryAfter)}return __privateMethod(_b2=req.clone(),_FetchRequest_instances,send_fn).call(_b2,attempt+1,expires,delay2,_request2,response)}}if(this.processFunc){checkSignal(__privateGet(_request2,_signal));try{response=await this.processFunc(req,response)}catch(error){if(error.throttle==null||typeof error.stall!=="number"){response.makeServerError("error in post-processing function",error).assertOk()}let delay2=__privateGet(this,_throttle).slotInterval*Math.trunc(Math.random()*Math.pow(2,attempt));if(error.stall>=0){delay2=error.stall}return __privateMethod(_c2=req.clone(),_FetchRequest_instances,send_fn).call(_c2,attempt+1,expires,delay2,_request2,response)}}return response};let FetchRequest=_FetchRequest;const _FetchResponse=class _FetchResponse{constructor(statusCode,statusMessage,headers,body,request){__privateAdd(this,_statusCode);__privateAdd(this,_statusMessage);__privateAdd(this,_headers2);__privateAdd(this,_body2);__privateAdd(this,_request);__privateAdd(this,_error);__privateSet(this,_statusCode,statusCode);__privateSet(this,_statusMessage,statusMessage);__privateSet(this,_headers2,Object.keys(headers).reduce((accum,k)=>{accum[k.toLowerCase()]=String(headers[k]);return accum},{}));__privateSet(this,_body2,body==null?null:new Uint8Array(body));__privateSet(this,_request,request||null);__privateSet(this,_error,{message:""})}toString(){return`<FetchResponse status=${this.statusCode} body=${__privateGet(this,_body2)?hexlify$2(__privateGet(this,_body2)):"null"}>`}get statusCode(){return __privateGet(this,_statusCode)}get statusMessage(){return __privateGet(this,_statusMessage)}get headers(){return Object.assign({},__privateGet(this,_headers2))}get body(){return __privateGet(this,_body2)==null?null:new Uint8Array(__privateGet(this,_body2))}get bodyText(){try{return __privateGet(this,_body2)==null?"":toUtf8String$1(__privateGet(this,_body2))}catch(error){assert$7(false,"response body is not valid UTF-8 data","UNSUPPORTED_OPERATION",{operation:"bodyText",info:{response:this}})}}get bodyJson(){try{return JSON.parse(this.bodyText)}catch(error){assert$7(false,"response body is not valid JSON","UNSUPPORTED_OPERATION",{operation:"bodyJson",info:{response:this}})}}[Symbol.iterator](){const headers=this.headers;const keys2=Object.keys(headers);let index=0;return{next:()=>{if(index<keys2.length){const key2=keys2[index++];return{value:[key2,headers[key2]],done:false}}return{value:void 0,done:true}}}}makeServerError(message,error){let statusMessage;if(!message){message=`${this.statusCode} ${this.statusMessage}`;statusMessage=`CLIENT ESCALATED SERVER ERROR (${message})`}else{statusMessage=`CLIENT ESCALATED SERVER ERROR (${this.statusCode} ${this.statusMessage}; ${message})`}const response=new _FetchResponse(599,statusMessage,this.headers,this.body,__privateGet(this,_request)||void 0);__privateSet(response,_error,{message:message,error:error});return response}throwThrottleError(message,stall2){if(stall2==null){stall2=-1}else{assertArgument(Number.isInteger(stall2)&&stall2>=0,"invalid stall timeout","stall",stall2)}const error=new Error(message||"throttling requests");defineProperties(error,{stall:stall2,throttle:true});throw error}getHeader(key2){return this.headers[key2.toLowerCase()]}hasBody(){return __privateGet(this,_body2)!=null}get request(){return __privateGet(this,_request)}ok(){return __privateGet(this,_error).message===""&&this.statusCode>=200&&this.statusCode<300}assertOk(){if(this.ok()){return}let{message:message,error:error}=__privateGet(this,_error);if(message===""){message=`server response ${this.statusCode} ${this.statusMessage}`}let requestUrl=null;if(this.request){requestUrl=this.request.url}let responseBody=null;try{if(__privateGet(this,_body2)){responseBody=toUtf8String$1(__privateGet(this,_body2))}}catch(e){}assert$7(false,message,"SERVER_ERROR",{request:this.request||"unknown request",response:this,error:error,info:{requestUrl:requestUrl,responseBody:responseBody,responseStatus:`${this.statusCode} ${this.statusMessage}`}})}};_statusCode=new WeakMap;_statusMessage=new WeakMap;_headers2=new WeakMap;_body2=new WeakMap;_request=new WeakMap;_error=new WeakMap;let FetchResponse=_FetchResponse;function getTime$1(){return(new Date).getTime()}function unpercent$1(value){return toUtf8Bytes$1(value.replace(/%([0-9a-f][0-9a-f])/gi,(all3,code)=>String.fromCharCode(parseInt(code,16))))}function wait(delay){return new Promise(resolve=>setTimeout(resolve,delay))}const BN_N1=BigInt(-1);const BN_0$8=BigInt(0);const BN_1$3=BigInt(1);const BN_5=BigInt(5);const _guard$5={};let Zeros$1="0000";while(Zeros$1.length<80){Zeros$1+=Zeros$1}function getTens(decimals){let result=Zeros$1;while(result.length<decimals){result+=result}return BigInt("1"+result.substring(0,decimals))}function checkValue(val,format,safeOp){const width=BigInt(format.width);if(format.signed){const limit=BN_1$3<<width-BN_1$3;assert$7(safeOp==null||val>=-limit&&val<limit,"overflow","NUMERIC_FAULT",{operation:safeOp,fault:"overflow",value:val});if(val>BN_0$8){val=fromTwos(mask(val,width),width)}else{val=-fromTwos(mask(-val,width),width)}}else{const limit=BN_1$3<<width;assert$7(safeOp==null||val>=0&&val<limit,"overflow","NUMERIC_FAULT",{operation:safeOp,fault:"overflow",value:val});val=(val%limit+limit)%limit&limit-BN_1$3}return val}function getFormat(value){if(typeof value==="number"){value=`fixed128x${value}`}let signed2=true;let width=128;let decimals=18;if(typeof value==="string"){if(value==="fixed");else if(value==="ufixed"){signed2=false}else{const match=value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);assertArgument(match,"invalid fixed format","format",value);signed2=match[1]!=="u";width=parseInt(match[2]);decimals=parseInt(match[3])}}else if(value){const v=value;const check=(key2,type,defaultValue)=>{if(v[key2]==null){return defaultValue}assertArgument(typeof v[key2]===type,"invalid fixed format ("+key2+" not "+type+")","format."+key2,v[key2]);return v[key2]};signed2=check("signed","boolean",signed2);width=check("width","number",width);decimals=check("decimals","number",decimals)}assertArgument(width%8===0,"invalid FixedNumber width (not byte aligned)","format.width",width);assertArgument(decimals<=80,"invalid FixedNumber decimals (too large)","format.decimals",decimals);const name=(signed2?"":"u")+"fixed"+String(width)+"x"+String(decimals);return{signed:signed2,width:width,decimals:decimals,name:name}}function toString$1(val,decimals){let negative="";if(val<BN_0$8){negative="-";val*=BN_N1}let str=val.toString();if(decimals===0){return negative+str}while(str.length<=decimals){str=Zeros$1+str}const index=str.length-decimals;str=str.substring(0,index)+"."+str.substring(index);while(str[0]==="0"&&str[1]!=="."){str=str.substring(1)}while(str[str.length-1]==="0"&&str[str.length-2]!=="."){str=str.substring(0,str.length-1)}return negative+str}let FixedNumber$1=(_a=class{constructor(guard,value,format){__privateAdd(this,_FixedNumber_instances);__publicField(this,"format");__privateAdd(this,_format);__privateAdd(this,_val);__privateAdd(this,_tens);__publicField(this,"_value");assertPrivate(guard,_guard$5,"FixedNumber");__privateSet(this,_val,value);__privateSet(this,_format,format);const _value2=toString$1(value,format.decimals);defineProperties(this,{format:format.name,_value:_value2});__privateSet(this,_tens,getTens(format.decimals))}get signed(){return __privateGet(this,_format).signed}get width(){return __privateGet(this,_format).width}get decimals(){return __privateGet(this,_format).decimals}get value(){return __privateGet(this,_val)}addUnsafe(other){return __privateMethod(this,_FixedNumber_instances,add_fn).call(this,other)}add(other){return __privateMethod(this,_FixedNumber_instances,add_fn).call(this,other,"add")}subUnsafe(other){return __privateMethod(this,_FixedNumber_instances,sub_fn).call(this,other)}sub(other){return __privateMethod(this,_FixedNumber_instances,sub_fn).call(this,other,"sub")}mulUnsafe(other){return __privateMethod(this,_FixedNumber_instances,mul_fn).call(this,other)}mul(other){return __privateMethod(this,_FixedNumber_instances,mul_fn).call(this,other,"mul")}mulSignal(other){__privateMethod(this,_FixedNumber_instances,checkFormat_fn).call(this,other);const value=__privateGet(this,_val)*__privateGet(other,_val);assert$7(value%__privateGet(this,_tens)===BN_0$8,"precision lost during signalling mul","NUMERIC_FAULT",{operation:"mulSignal",fault:"underflow",value:this});return __privateMethod(this,_FixedNumber_instances,checkValue_fn).call(this,value/__privateGet(this,_tens),"mulSignal")}divUnsafe(other){return __privateMethod(this,_FixedNumber_instances,div_fn).call(this,other)}div(other){return __privateMethod(this,_FixedNumber_instances,div_fn).call(this,other,"div")}divSignal(other){assert$7(__privateGet(other,_val)!==BN_0$8,"division by zero","NUMERIC_FAULT",{operation:"div",fault:"divide-by-zero",value:this});__privateMethod(this,_FixedNumber_instances,checkFormat_fn).call(this,other);const value=__privateGet(this,_val)*__privateGet(this,_tens);assert$7(value%__privateGet(other,_val)===BN_0$8,"precision lost during signalling div","NUMERIC_FAULT",{operation:"divSignal",fault:"underflow",value:this});return __privateMethod(this,_FixedNumber_instances,checkValue_fn).call(this,value/__privateGet(other,_val),"divSignal")}cmp(other){let a=this.value,b2=other.value;const delta=this.decimals-other.decimals;if(delta>0){b2*=getTens(delta)}else if(delta<0){a*=getTens(-delta)}if(a<b2){return-1}if(a>b2){return 1}return 0}eq(other){return this.cmp(other)===0}lt(other){return this.cmp(other)<0}lte(other){return this.cmp(other)<=0}gt(other){return this.cmp(other)>0}gte(other){return this.cmp(other)>=0}floor(){let val=__privateGet(this,_val);if(__privateGet(this,_val)<BN_0$8){val-=__privateGet(this,_tens)-BN_1$3}val=__privateGet(this,_val)/__privateGet(this,_tens)*__privateGet(this,_tens);return __privateMethod(this,_FixedNumber_instances,checkValue_fn).call(this,val,"floor")}ceiling(){let val=__privateGet(this,_val);if(__privateGet(this,_val)>BN_0$8){val+=__privateGet(this,_tens)-BN_1$3}val=__privateGet(this,_val)/__privateGet(this,_tens)*__privateGet(this,_tens);return __privateMethod(this,_FixedNumber_instances,checkValue_fn).call(this,val,"ceiling")}round(decimals){if(decimals==null){decimals=0}if(decimals>=this.decimals){return this}const delta=this.decimals-decimals;const bump=BN_5*getTens(delta-1);let value=this.value+bump;const tens=getTens(delta);value=value/tens*tens;checkValue(value,__privateGet(this,_format),"round");return new _a(_guard$5,value,__privateGet(this,_format))}isZero(){return __privateGet(this,_val)===BN_0$8}isNegative(){return __privateGet(this,_val)<BN_0$8}toString(){return this._value}toUnsafeFloat(){return parseFloat(this.toString())}toFormat(format){return _a.fromString(this.toString(),format)}static fromValue(_value2,_decimals,_format2){const decimals=_decimals==null?0:getNumber(_decimals);const format=getFormat(_format2);let value=getBigInt(_value2,"value");const delta=decimals-format.decimals;if(delta>0){const tens=getTens(delta);assert$7(value%tens===BN_0$8,"value loses precision for format","NUMERIC_FAULT",{operation:"fromValue",fault:"underflow",value:_value2});value/=tens}else if(delta<0){value*=getTens(-delta)}checkValue(value,format,"fromValue");return new _a(_guard$5,value,format)}static fromString(_value2,_format2){const match=_value2.match(/^(-?)([0-9]*)\.?([0-9]*)$/);assertArgument(match&&match[2].length+match[3].length>0,"invalid FixedNumber string value","value",_value2);const format=getFormat(_format2);let whole=match[2]||"0",decimal=match[3]||"";while(decimal.length<format.decimals){decimal+=Zeros$1}assert$7(decimal.substring(format.decimals).match(/^0*$/),"too many decimals for format","NUMERIC_FAULT",{operation:"fromString",fault:"underflow",value:_value2});decimal=decimal.substring(0,format.decimals);const value=BigInt(match[1]+whole+decimal);checkValue(value,format,"fromString");return new _a(_guard$5,value,format)}static fromBytes(_value2,_format2){let value=toBigInt(getBytes(_value2,"value"));const format=getFormat(_format2);if(format.signed){value=fromTwos(value,format.width)}checkValue(value,format,"fromBytes");return new _a(_guard$5,value,format)}},_format=new WeakMap,_val=new WeakMap,_tens=new WeakMap,_FixedNumber_instances=new WeakSet,checkFormat_fn=function(other){assertArgument(this.format===other.format,"incompatible format; use fixedNumber.toFormat","other",other)},checkValue_fn=function(val,safeOp){val=checkValue(val,__privateGet(this,_format),safeOp);return new _a(_guard$5,val,__privateGet(this,_format))},add_fn=function(o,safeOp){__privateMethod(this,_FixedNumber_instances,checkFormat_fn).call(this,o);return __privateMethod(this,_FixedNumber_instances,checkValue_fn).call(this,__privateGet(this,_val)+__privateGet(o,_val),safeOp)},sub_fn=function(o,safeOp){__privateMethod(this,_FixedNumber_instances,checkFormat_fn).call(this,o);return __privateMethod(this,_FixedNumber_instances,checkValue_fn).call(this,__privateGet(this,_val)-__privateGet(o,_val),safeOp)},mul_fn=function(o,safeOp){__privateMethod(this,_FixedNumber_instances,checkFormat_fn).call(this,o);return __privateMethod(this,_FixedNumber_instances,checkValue_fn).call(this,__privateGet(this,_val)*__privateGet(o,_val)/__privateGet(this,_tens),safeOp)},div_fn=function(o,safeOp){assert$7(__privateGet(o,_val)!==BN_0$8,"division by zero","NUMERIC_FAULT",{operation:"div",fault:"divide-by-zero",value:this});__privateMethod(this,_FixedNumber_instances,checkFormat_fn).call(this,o);return __privateMethod(this,_FixedNumber_instances,checkValue_fn).call(this,__privateGet(this,_val)*__privateGet(this,_tens)/__privateGet(o,_val),safeOp)},_a);function hexlifyByte(value){let result=value.toString(16);while(result.length<2){result="0"+result}return"0x"+result}function unarrayifyInteger$1(data,offset,length){let result=0;for(let i=0;i<length;i++){result=result*256+data[offset+i]}return result}function _decodeChildren$1(data,offset,childOffset,length){const result=[];while(childOffset<offset+1+length){const decoded=_decode$1(data,childOffset);result.push(decoded.result);childOffset+=decoded.consumed;assert$7(childOffset<=offset+1+length,"child data too short","BUFFER_OVERRUN",{buffer:data,length:length,offset:offset})}return{consumed:1+length,result:result}}function _decode$1(data,offset){assert$7(data.length!==0,"data too short","BUFFER_OVERRUN",{buffer:data,length:0,offset:1});const checkOffset=offset2=>{assert$7(offset2<=data.length,"data short segment too short","BUFFER_OVERRUN",{buffer:data,length:data.length,offset:offset2})};if(data[offset]>=248){const lengthLength=data[offset]-247;checkOffset(offset+1+lengthLength);const length=unarrayifyInteger$1(data,offset+1,lengthLength);checkOffset(offset+1+lengthLength+length);return _decodeChildren$1(data,offset,offset+1+lengthLength,lengthLength+length)}else if(data[offset]>=192){const length=data[offset]-192;checkOffset(offset+1+length);return _decodeChildren$1(data,offset,offset+1,length)}else if(data[offset]>=184){const lengthLength=data[offset]-183;checkOffset(offset+1+lengthLength);const length=unarrayifyInteger$1(data,offset+1,lengthLength);checkOffset(offset+1+lengthLength+length);const result=hexlify$2(data.slice(offset+1+lengthLength,offset+1+lengthLength+length));return{consumed:1+lengthLength+length,result:result}}else if(data[offset]>=128){const length=data[offset]-128;checkOffset(offset+1+length);const result=hexlify$2(data.slice(offset+1,offset+1+length));return{consumed:1+length,result:result}}return{consumed:1,result:hexlifyByte(data[offset])}}function decodeRlp(_data5){const data=getBytes(_data5,"data");const decoded=_decode$1(data,0);assertArgument(decoded.consumed===data.length,"unexpected junk after rlp payload","data",_data5);return decoded.result}function arrayifyInteger$2(value){const result=[];while(value){result.unshift(value&255);value>>=8}return result}function _encode$2(object2){if(Array.isArray(object2)){let payload=[];object2.forEach(function(child){payload=payload.concat(_encode$2(child))});if(payload.length<=55){payload.unshift(192+payload.length);return payload}const length2=arrayifyInteger$2(payload.length);length2.unshift(247+length2.length);return length2.concat(payload)}const data=Array.prototype.slice.call(getBytes(object2,"object"));if(data.length===1&&data[0]<=127){return data}else if(data.length<=55){data.unshift(128+data.length);return data}const length=arrayifyInteger$2(data.length);length.unshift(183+length.length);return length.concat(data)}const nibbles="0123456789abcdef";function encodeRlp(object2){let result="0x";for(const v of _encode$2(object2)){result+=nibbles[v>>4];result+=nibbles[v&15]}return result}const names$1=["wei","kwei","mwei","gwei","szabo","finney","ether"];function formatUnits$1(value,unit){let decimals=18;if(typeof unit==="string"){const index=names$1.indexOf(unit);assertArgument(index>=0,"invalid unit","unit",unit);decimals=3*index}else if(unit!=null){decimals=getNumber(unit,"unit")}return FixedNumber$1.fromValue(value,decimals,{decimals:decimals,width:512}).toString()}function parseUnits$1(value,unit){assertArgument(typeof value==="string","value must be a string","value",value);let decimals=18;if(typeof unit==="string"){const index=names$1.indexOf(unit);assertArgument(index>=0,"invalid unit","unit",unit);decimals=3*index}else if(unit!=null){decimals=getNumber(unit,"unit")}return FixedNumber$1.fromString(value,{decimals:decimals,width:512}).value}function formatEther$1(wei){return formatUnits$1(wei,18)}function parseEther(ether){return parseUnits$1(ether,18)}function uuidV4$1(randomBytes2){const bytes2=getBytes(randomBytes2,"randomBytes");bytes2[6]=bytes2[6]&15|64;bytes2[8]=bytes2[8]&63|128;const value=hexlify$2(bytes2);return[value.substring(2,10),value.substring(10,14),value.substring(14,18),value.substring(18,22),value.substring(22,34)].join("-")}const WordSize=32;const Padding=new Uint8Array(WordSize);const passProperties$1=["then"];const _guard$4={};const resultNames=new WeakMap;function getNames(result){return resultNames.get(result)}function setNames(result,names2){resultNames.set(result,names2)}function throwError(name,error){const wrapped=new Error(`deferred error during ABI decoding triggered accessing ${name}`);wrapped.error=error;throw wrapped}function toObject(names2,items,deep){if(names2.indexOf(null)>=0){return items.map((item,index)=>{if(item instanceof Result){return toObject(getNames(item),item,deep)}return item})}return names2.reduce((accum,name,index)=>{let item=items.getValue(name);if(!(name in accum)){if(deep&&item instanceof Result){item=toObject(getNames(item),item,deep)}accum[name]=item}return accum},{})}const _Result=class _Result extends Array{constructor(...args){const guard=args[0];let items=args[1];let names2=(args[2]||[]).slice();let wrap=true;if(guard!==_guard$4){items=args;names2=[];wrap=false}super(items.length);__privateAdd(this,_names);items.forEach((item,index)=>{this[index]=item});const nameCounts=names2.reduce((accum,name)=>{if(typeof name==="string"){accum.set(name,(accum.get(name)||0)+1)}return accum},new Map);setNames(this,Object.freeze(items.map((item,index)=>{const name=names2[index];if(name!=null&&nameCounts.get(name)===1){return name}return null})));__privateSet(this,_names,[]);if(__privateGet(this,_names)==null){void __privateGet(this,_names)}if(!wrap){return}Object.freeze(this);const proxy=new Proxy(this,{get:(target,prop,receiver)=>{if(typeof prop==="string"){if(prop.match(/^[0-9]+$/)){const index=getNumber(prop,"%index");if(index<0||index>=this.length){throw new RangeError("out of result range")}const item=target[index];if(item instanceof Error){throwError(`index ${index}`,item)}return item}if(passProperties$1.indexOf(prop)>=0){return Reflect.get(target,prop,receiver)}const value=target[prop];if(value instanceof Function){return function(...args2){return value.apply(this===receiver?target:this,args2)}}else if(!(prop in target)){return target.getValue.apply(this===receiver?target:this,[prop])}}return Reflect.get(target,prop,receiver)}});setNames(proxy,getNames(this));return proxy}toArray(deep){const result=[];this.forEach((item,index)=>{if(item instanceof Error){throwError(`index ${index}`,item)}if(deep&&item instanceof _Result){item=item.toArray(deep)}result.push(item)});return result}toObject(deep){const names2=getNames(this);return names2.reduce((accum,name,index)=>{assert$7(name!=null,`value at index ${index} unnamed`,"UNSUPPORTED_OPERATION",{operation:"toObject()"});return toObject(names2,this,deep)},{})}slice(start,end){if(start==null){start=0}if(start<0){start+=this.length;if(start<0){start=0}}if(end==null){end=this.length}if(end<0){end+=this.length;if(end<0){end=0}}if(end>this.length){end=this.length}const _names2=getNames(this);const result=[],names2=[];for(let i=start;i<end;i++){result.push(this[i]);names2.push(_names2[i])}return new _Result(_guard$4,result,names2)}filter(callback,thisArg){const _names2=getNames(this);const result=[],names2=[];for(let i=0;i<this.length;i++){const item=this[i];if(item instanceof Error){throwError(`index ${i}`,item)}if(callback.call(thisArg,item,i,this)){result.push(item);names2.push(_names2[i])}}return new _Result(_guard$4,result,names2)}map(callback,thisArg){const result=[];for(let i=0;i<this.length;i++){const item=this[i];if(item instanceof Error){throwError(`index ${i}`,item)}result.push(callback.call(thisArg,item,i,this))}return result}getValue(name){const index=getNames(this).indexOf(name);if(index===-1){return void 0}const value=this[index];if(value instanceof Error){throwError(`property ${JSON.stringify(name)}`,value.error)}return value}static fromItems(items,keys2){return new _Result(_guard$4,items,keys2)}};_names=new WeakMap;let Result=_Result;function getValue$2(value){let bytes2=toBeArray(value);assert$7(bytes2.length<=WordSize,"value out-of-bounds","BUFFER_OVERRUN",{buffer:bytes2,length:WordSize,offset:bytes2.length});if(bytes2.length!==WordSize){bytes2=getBytesCopy(concat$2([Padding.slice(bytes2.length%WordSize),bytes2]))}return bytes2}class Coder{constructor(name,type,localName,dynamic){__publicField(this,"name");__publicField(this,"type");__publicField(this,"localName");__publicField(this,"dynamic");defineProperties(this,{name:name,type:type,localName:localName,dynamic:dynamic},{name:"string",type:"string",localName:"string",dynamic:"boolean"})}_throwError(message,value){assertArgument(false,message,this.localName,value)}}class Writer{constructor(){__privateAdd(this,_Writer_instances);__privateAdd(this,_data);__privateAdd(this,_dataLength);__privateSet(this,_data,[]);__privateSet(this,_dataLength,0)}get data(){return concat$2(__privateGet(this,_data))}get length(){return __privateGet(this,_dataLength)}appendWriter(writer){return __privateMethod(this,_Writer_instances,writeData_fn).call(this,getBytesCopy(writer.data))}writeBytes(value){let bytes2=getBytesCopy(value);const paddingOffset=bytes2.length%WordSize;if(paddingOffset){bytes2=getBytesCopy(concat$2([bytes2,Padding.slice(paddingOffset)]))}return __privateMethod(this,_Writer_instances,writeData_fn).call(this,bytes2)}writeValue(value){return __privateMethod(this,_Writer_instances,writeData_fn).call(this,getValue$2(value))}writeUpdatableValue(){const offset=__privateGet(this,_data).length;__privateGet(this,_data).push(Padding);__privateSet(this,_dataLength,__privateGet(this,_dataLength)+WordSize);return value=>{__privateGet(this,_data)[offset]=getValue$2(value)}}}_data=new WeakMap;_dataLength=new WeakMap;_Writer_instances=new WeakSet;writeData_fn=function(data){__privateGet(this,_data).push(data);__privateSet(this,_dataLength,__privateGet(this,_dataLength)+data.length);return data.length};const _Reader=class _Reader{constructor(data,allowLoose,maxInflation){__privateAdd(this,_Reader_instances);__publicField(this,"allowLoose");__privateAdd(this,_data2);__privateAdd(this,_offset);__privateAdd(this,_bytesRead);__privateAdd(this,_parent);__privateAdd(this,_maxInflation);defineProperties(this,{allowLoose:!!allowLoose});__privateSet(this,_data2,getBytesCopy(data));__privateSet(this,_bytesRead,0);__privateSet(this,_parent,null);__privateSet(this,_maxInflation,maxInflation!=null?maxInflation:1024);__privateSet(this,_offset,0)}get data(){return hexlify$2(__privateGet(this,_data2))}get dataLength(){return __privateGet(this,_data2).length}get consumed(){return __privateGet(this,_offset)}get bytes(){return new Uint8Array(__privateGet(this,_data2))}subReader(offset){const reader=new _Reader(__privateGet(this,_data2).slice(__privateGet(this,_offset)+offset),this.allowLoose,__privateGet(this,_maxInflation));__privateSet(reader,_parent,this);return reader}readBytes(length,loose){let bytes2=__privateMethod(this,_Reader_instances,peekBytes_fn).call(this,0,length,!!loose);__privateMethod(this,_Reader_instances,incrementBytesRead_fn).call(this,length);__privateSet(this,_offset,__privateGet(this,_offset)+bytes2.length);return bytes2.slice(0,length)}readValue(){return toBigInt(this.readBytes(WordSize))}readIndex(){return toNumber(this.readBytes(WordSize))}};_data2=new WeakMap;_offset=new WeakMap;_bytesRead=new WeakMap;_parent=new WeakMap;_maxInflation=new WeakMap;_Reader_instances=new WeakSet;incrementBytesRead_fn=function(count){var _a2;if(__privateGet(this,_parent)){return __privateMethod(_a2=__privateGet(this,_parent),_Reader_instances,incrementBytesRead_fn).call(_a2,count)}__privateSet(this,_bytesRead,__privateGet(this,_bytesRead)+count);assert$7(__privateGet(this,_maxInflation)<1||__privateGet(this,_bytesRead)<=__privateGet(this,_maxInflation)*this.dataLength,`compressed ABI data exceeds inflation ratio of ${__privateGet(this,_maxInflation)} ( see: https://github.com/ethers-io/ethers.js/issues/4537 )`,"BUFFER_OVERRUN",{buffer:getBytesCopy(__privateGet(this,_data2)),offset:__privateGet(this,_offset),length:count,info:{bytesRead:__privateGet(this,_bytesRead),dataLength:this.dataLength}})};peekBytes_fn=function(offset,length,loose){let alignedLength=Math.ceil(length/WordSize)*WordSize;if(__privateGet(this,_offset)+alignedLength>__privateGet(this,_data2).length){if(this.allowLoose&&loose&&__privateGet(this,_offset)+length<=__privateGet(this,_data2).length){alignedLength=length}else{assert$7(false,"data out-of-bounds","BUFFER_OVERRUN",{buffer:getBytesCopy(__privateGet(this,_data2)),length:__privateGet(this,_data2).length,offset:__privateGet(this,_offset)+alignedLength})}}return __privateGet(this,_data2).slice(__privateGet(this,_offset),__privateGet(this,_offset)+alignedLength)};let Reader=_Reader;function number(n2){if(!Number.isSafeInteger(n2)||n2<0)throw new Error(`Wrong positive integer: ${n2}`)}function bytes(b2,...lengths){if(!(b2 instanceof Uint8Array))throw new Error("Expected Uint8Array");if(lengths.length>0&&!lengths.includes(b2.length))throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b2.length}`)}function hash$2(hash2){if(typeof hash2!=="function"||typeof hash2.create!=="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");number(hash2.outputLen);number(hash2.blockLen)}function exists(instance,checkFinished=true){if(instance.destroyed)throw new Error("Hash instance has been destroyed");if(checkFinished&&instance.finished)throw new Error("Hash#digest() has already been called")}function output(out,instance){bytes(out);const min=instance.outputLen;if(out.length<min){throw new Error(`digestInto() expects output buffer of length at least ${min}`)}}const crypto$4=typeof globalThis==="object"&&"crypto"in globalThis?globalThis.crypto:void 0;
/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */const u8a$1=a=>a instanceof Uint8Array;const u32=arr=>new Uint32Array(arr.buffer,arr.byteOffset,Math.floor(arr.byteLength/4));const createView=arr=>new DataView(arr.buffer,arr.byteOffset,arr.byteLength);const rotr=(word,shift)=>word<<32-shift|word>>>shift;const isLE=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;if(!isLE)throw new Error("Non little-endian hardware is not supported");const nextTick=async()=>{};async function asyncLoop(iters,tick,cb){let ts=Date.now();for(let i=0;i<iters;i++){cb(i);const diff=Date.now()-ts;if(diff>=0&&diff<tick)continue;await nextTick();ts+=diff}}function utf8ToBytes$1(str){if(typeof str!=="string")throw new Error(`utf8ToBytes expected string, got ${typeof str}`);return new Uint8Array((new TextEncoder).encode(str))}function toBytes(data){if(typeof data==="string")data=utf8ToBytes$1(data);if(!u8a$1(data))throw new Error(`expected Uint8Array, got ${typeof data}`);return data}function concatBytes$1(...arrays){const r=new Uint8Array(arrays.reduce((sum,a)=>sum+a.length,0));let pad=0;arrays.forEach(a=>{if(!u8a$1(a))throw new Error("Uint8Array expected");r.set(a,pad);pad+=a.length});return r}let Hash$1=class Hash{clone(){return this._cloneInto()}};const toStr={}.toString;function checkOpts(defaults2,opts){if(opts!==void 0&&toStr.call(opts)!=="[object Object]")throw new Error("Options should be object or undefined");const merged=Object.assign(defaults2,opts);return merged}function wrapConstructor(hashCons){const hashC=msg=>hashCons().update(toBytes(msg)).digest();const tmp=hashCons();hashC.outputLen=tmp.outputLen;hashC.blockLen=tmp.blockLen;hashC.create=()=>hashCons();return hashC}function randomBytes$4(bytesLength=32){if(crypto$4&&typeof crypto$4.getRandomValues==="function"){return crypto$4.getRandomValues(new Uint8Array(bytesLength))}throw new Error("crypto.getRandomValues must be defined")}class HMAC extends Hash$1{constructor(hash2,_key){super();this.finished=false;this.destroyed=false;hash$2(hash2);const key2=toBytes(_key);this.iHash=hash2.create();if(typeof this.iHash.update!=="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen;this.outputLen=this.iHash.outputLen;const blockLen=this.blockLen;const pad=new Uint8Array(blockLen);pad.set(key2.length>blockLen?hash2.create().update(key2).digest():key2);for(let i=0;i<pad.length;i++)pad[i]^=54;this.iHash.update(pad);this.oHash=hash2.create();for(let i=0;i<pad.length;i++)pad[i]^=54^92;this.oHash.update(pad);pad.fill(0)}update(buf){exists(this);this.iHash.update(buf);return this}digestInto(out){exists(this);bytes(out,this.outputLen);this.finished=true;this.iHash.digestInto(out);this.oHash.update(out);this.oHash.digestInto(out);this.destroy()}digest(){const out=new Uint8Array(this.oHash.outputLen);this.digestInto(out);return out}_cloneInto(to){to||(to=Object.create(Object.getPrototypeOf(this),{}));const{oHash:oHash,iHash:iHash,finished:finished,destroyed:destroyed,blockLen:blockLen,outputLen:outputLen}=this;to=to;to.finished=finished;to.destroyed=destroyed;to.blockLen=blockLen;to.outputLen=outputLen;to.oHash=oHash._cloneInto(to.oHash);to.iHash=iHash._cloneInto(to.iHash);return to}destroy(){this.destroyed=true;this.oHash.destroy();this.iHash.destroy()}}const hmac$1=(hash2,key2,message)=>new HMAC(hash2,key2).update(message).digest();hmac$1.create=(hash2,key2)=>new HMAC(hash2,key2);function pbkdf2Init(hash2,_password,_salt,_opts){hash$2(hash2);const opts=checkOpts({dkLen:32,asyncTick:10},_opts);const{c:c,dkLen:dkLen,asyncTick:asyncTick}=opts;number(c);number(dkLen);number(asyncTick);if(c<1)throw new Error("PBKDF2: iterations (c) should be >= 1");const password=toBytes(_password);const salt=toBytes(_salt);const DK=new Uint8Array(dkLen);const PRF=hmac$1.create(hash2,password);const PRFSalt=PRF._cloneInto().update(salt);return{c:c,dkLen:dkLen,asyncTick:asyncTick,DK:DK,PRF:PRF,PRFSalt:PRFSalt}}function pbkdf2Output(PRF,PRFSalt,DK,prfW,u){PRF.destroy();PRFSalt.destroy();if(prfW)prfW.destroy();u.fill(0);return DK}function pbkdf2$3(hash2,password,salt,opts){const{c:c,dkLen:dkLen,DK:DK,PRF:PRF,PRFSalt:PRFSalt}=pbkdf2Init(hash2,password,salt,opts);let prfW;const arr=new Uint8Array(4);const view=createView(arr);const u=new Uint8Array(PRF.outputLen);for(let ti=1,pos=0;pos<dkLen;ti++,pos+=PRF.outputLen){const Ti=DK.subarray(pos,pos+PRF.outputLen);view.setInt32(0,ti,false);(prfW=PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);Ti.set(u.subarray(0,Ti.length));for(let ui=1;ui<c;ui++){PRF._cloneInto(prfW).update(u).digestInto(u);for(let i=0;i<Ti.length;i++)Ti[i]^=u[i]}}return pbkdf2Output(PRF,PRFSalt,DK,prfW,u)}function setBigUint64(view,byteOffset,value,isLE2){if(typeof view.setBigUint64==="function")return view.setBigUint64(byteOffset,value,isLE2);const _32n2=BigInt(32);const _u32_max=BigInt(4294967295);const wh=Number(value>>_32n2&_u32_max);const wl=Number(value&_u32_max);const h=isLE2?4:0;const l=isLE2?0:4;view.setUint32(byteOffset+h,wh,isLE2);view.setUint32(byteOffset+l,wl,isLE2)}class SHA2 extends Hash$1{constructor(blockLen,outputLen,padOffset,isLE2){super();this.blockLen=blockLen;this.outputLen=outputLen;this.padOffset=padOffset;this.isLE=isLE2;this.finished=false;this.length=0;this.pos=0;this.destroyed=false;this.buffer=new Uint8Array(blockLen);this.view=createView(this.buffer)}update(data){exists(this);const{view:view,buffer:buffer,blockLen:blockLen}=this;data=toBytes(data);const len=data.length;for(let pos=0;pos<len;){const take=Math.min(blockLen-this.pos,len-pos);if(take===blockLen){const dataView=createView(data);for(;blockLen<=len-pos;pos+=blockLen)this.process(dataView,pos);continue}buffer.set(data.subarray(pos,pos+take),this.pos);this.pos+=take;pos+=take;if(this.pos===blockLen){this.process(view,0);this.pos=0}}this.length+=data.length;this.roundClean();return this}digestInto(out){exists(this);output(out,this);this.finished=true;const{buffer:buffer,view:view,blockLen:blockLen,isLE:isLE2}=this;let{pos:pos}=this;buffer[pos++]=128;this.buffer.subarray(pos).fill(0);if(this.padOffset>blockLen-pos){this.process(view,0);pos=0}for(let i=pos;i<blockLen;i++)buffer[i]=0;setBigUint64(view,blockLen-8,BigInt(this.length*8),isLE2);this.process(view,0);const oview=createView(out);const len=this.outputLen;if(len%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const outLen=len/4;const state=this.get();if(outLen>state.length)throw new Error("_sha2: outputLen bigger than state");for(let i=0;i<outLen;i++)oview.setUint32(4*i,state[i],isLE2)}digest(){const{buffer:buffer,outputLen:outputLen}=this;this.digestInto(buffer);const res=buffer.slice(0,outputLen);this.destroy();return res}_cloneInto(to){to||(to=new this.constructor);to.set(...this.get());const{blockLen:blockLen,buffer:buffer,length:length,finished:finished,destroyed:destroyed,pos:pos}=this;to.length=length;to.pos=pos;to.finished=finished;to.destroyed=destroyed;if(length%blockLen)to.buffer.set(buffer);return to}}const Chi=(a,b2,c)=>a&b2^~a&c;const Maj=(a,b2,c)=>a&b2^a&c^b2&c;const SHA256_K=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]);const IV=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]);const SHA256_W=new Uint32Array(64);class SHA256 extends SHA2{constructor(){super(64,32,8,false);this.A=IV[0]|0;this.B=IV[1]|0;this.C=IV[2]|0;this.D=IV[3]|0;this.E=IV[4]|0;this.F=IV[5]|0;this.G=IV[6]|0;this.H=IV[7]|0}get(){const{A:A,B:B,C:C,D:D,E:E,F:F,G:G,H:H}=this;return[A,B,C,D,E,F,G,H]}set(A,B,C,D,E,F,G,H){this.A=A|0;this.B=B|0;this.C=C|0;this.D=D|0;this.E=E|0;this.F=F|0;this.G=G|0;this.H=H|0}process(view,offset){for(let i=0;i<16;i++,offset+=4)SHA256_W[i]=view.getUint32(offset,false);for(let i=16;i<64;i++){const W15=SHA256_W[i-15];const W2=SHA256_W[i-2];const s0=rotr(W15,7)^rotr(W15,18)^W15>>>3;const s1=rotr(W2,17)^rotr(W2,19)^W2>>>10;SHA256_W[i]=s1+SHA256_W[i-7]+s0+SHA256_W[i-16]|0}let{A:A,B:B,C:C,D:D,E:E,F:F,G:G,H:H}=this;for(let i=0;i<64;i++){const sigma1=rotr(E,6)^rotr(E,11)^rotr(E,25);const T12=H+sigma1+Chi(E,F,G)+SHA256_K[i]+SHA256_W[i]|0;const sigma0=rotr(A,2)^rotr(A,13)^rotr(A,22);const T22=sigma0+Maj(A,B,C)|0;H=G;G=F;F=E;E=D+T12|0;D=C;C=B;B=A;A=T12+T22|0}A=A+this.A|0;B=B+this.B|0;C=C+this.C|0;D=D+this.D|0;E=E+this.E|0;F=F+this.F|0;G=G+this.G|0;H=H+this.H|0;this.set(A,B,C,D,E,F,G,H)}roundClean(){SHA256_W.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0);this.buffer.fill(0)}}const sha256$2=wrapConstructor(()=>new SHA256);const U32_MASK64=BigInt(2**32-1);const _32n=BigInt(32);function fromBig(n2,le=false){if(le)return{h:Number(n2&U32_MASK64),l:Number(n2>>_32n&U32_MASK64)};return{h:Number(n2>>_32n&U32_MASK64)|0,l:Number(n2&U32_MASK64)|0}}function split$1(lst,le=false){let Ah=new Uint32Array(lst.length);let Al=new Uint32Array(lst.length);for(let i=0;i<lst.length;i++){const{h:h,l:l}=fromBig(lst[i],le);[Ah[i],Al[i]]=[h,l]}return[Ah,Al]}const toBig=(h,l)=>BigInt(h>>>0)<<_32n|BigInt(l>>>0);const shrSH=(h,_l,s)=>h>>>s;const shrSL=(h,l,s)=>h<<32-s|l>>>s;const rotrSH=(h,l,s)=>h>>>s|l<<32-s;const rotrSL=(h,l,s)=>h<<32-s|l>>>s;const rotrBH=(h,l,s)=>h<<64-s|l>>>s-32;const rotrBL=(h,l,s)=>h>>>s-32|l<<64-s;const rotr32H=(_h2,l)=>l;const rotr32L=(h,_l)=>h;const rotlSH=(h,l,s)=>h<<s|l>>>32-s;const rotlSL=(h,l,s)=>l<<s|h>>>32-s;const rotlBH=(h,l,s)=>l<<s-32|h>>>64-s;const rotlBL=(h,l,s)=>h<<s-32|l>>>64-s;function add(Ah,Al,Bh,Bl){const l=(Al>>>0)+(Bl>>>0);return{h:Ah+Bh+(l/2**32|0)|0,l:l|0}}const add3L=(Al,Bl,Cl)=>(Al>>>0)+(Bl>>>0)+(Cl>>>0);const add3H=(low,Ah,Bh,Ch)=>Ah+Bh+Ch+(low/2**32|0)|0;const add4L=(Al,Bl,Cl,Dl)=>(Al>>>0)+(Bl>>>0)+(Cl>>>0)+(Dl>>>0);const add4H=(low,Ah,Bh,Ch,Dh)=>Ah+Bh+Ch+Dh+(low/2**32|0)|0;const add5L=(Al,Bl,Cl,Dl,El)=>(Al>>>0)+(Bl>>>0)+(Cl>>>0)+(Dl>>>0)+(El>>>0);const add5H=(low,Ah,Bh,Ch,Dh,Eh)=>Ah+Bh+Ch+Dh+Eh+(low/2**32|0)|0;const u64={fromBig:fromBig,split:split$1,toBig:toBig,shrSH:shrSH,shrSL:shrSL,rotrSH:rotrSH,rotrSL:rotrSL,rotrBH:rotrBH,rotrBL:rotrBL,rotr32H:rotr32H,rotr32L:rotr32L,rotlSH:rotlSH,rotlSL:rotlSL,rotlBH:rotlBH,rotlBL:rotlBL,add:add,add3L:add3L,add3H:add3H,add4L:add4L,add4H:add4H,add5H:add5H,add5L:add5L};const[SHA512_Kh,SHA512_Kl]=(()=>u64.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(n2=>BigInt(n2))))();const SHA512_W_H=new Uint32Array(80);const SHA512_W_L=new Uint32Array(80);class SHA512 extends SHA2{constructor(){super(128,64,16,false);this.Ah=1779033703|0;this.Al=4089235720|0;this.Bh=3144134277|0;this.Bl=2227873595|0;this.Ch=1013904242|0;this.Cl=4271175723|0;this.Dh=2773480762|0;this.Dl=1595750129|0;this.Eh=1359893119|0;this.El=2917565137|0;this.Fh=2600822924|0;this.Fl=725511199|0;this.Gh=528734635|0;this.Gl=4215389547|0;this.Hh=1541459225|0;this.Hl=327033209|0}get(){const{Ah:Ah,Al:Al,Bh:Bh,Bl:Bl,Ch:Ch,Cl:Cl,Dh:Dh,Dl:Dl,Eh:Eh,El:El,Fh:Fh,Fl:Fl,Gh:Gh,Gl:Gl,Hh:Hh,Hl:Hl}=this;return[Ah,Al,Bh,Bl,Ch,Cl,Dh,Dl,Eh,El,Fh,Fl,Gh,Gl,Hh,Hl]}set(Ah,Al,Bh,Bl,Ch,Cl,Dh,Dl,Eh,El,Fh,Fl,Gh,Gl,Hh,Hl){this.Ah=Ah|0;this.Al=Al|0;this.Bh=Bh|0;this.Bl=Bl|0;this.Ch=Ch|0;this.Cl=Cl|0;this.Dh=Dh|0;this.Dl=Dl|0;this.Eh=Eh|0;this.El=El|0;this.Fh=Fh|0;this.Fl=Fl|0;this.Gh=Gh|0;this.Gl=Gl|0;this.Hh=Hh|0;this.Hl=Hl|0}process(view,offset){for(let i=0;i<16;i++,offset+=4){SHA512_W_H[i]=view.getUint32(offset);SHA512_W_L[i]=view.getUint32(offset+=4)}for(let i=16;i<80;i++){const W15h=SHA512_W_H[i-15]|0;const W15l=SHA512_W_L[i-15]|0;const s0h=u64.rotrSH(W15h,W15l,1)^u64.rotrSH(W15h,W15l,8)^u64.shrSH(W15h,W15l,7);const s0l=u64.rotrSL(W15h,W15l,1)^u64.rotrSL(W15h,W15l,8)^u64.shrSL(W15h,W15l,7);const W2h=SHA512_W_H[i-2]|0;const W2l=SHA512_W_L[i-2]|0;const s1h=u64.rotrSH(W2h,W2l,19)^u64.rotrBH(W2h,W2l,61)^u64.shrSH(W2h,W2l,6);const s1l=u64.rotrSL(W2h,W2l,19)^u64.rotrBL(W2h,W2l,61)^u64.shrSL(W2h,W2l,6);const SUMl=u64.add4L(s0l,s1l,SHA512_W_L[i-7],SHA512_W_L[i-16]);const SUMh=u64.add4H(SUMl,s0h,s1h,SHA512_W_H[i-7],SHA512_W_H[i-16]);SHA512_W_H[i]=SUMh|0;SHA512_W_L[i]=SUMl|0}let{Ah:Ah,Al:Al,Bh:Bh,Bl:Bl,Ch:Ch,Cl:Cl,Dh:Dh,Dl:Dl,Eh:Eh,El:El,Fh:Fh,Fl:Fl,Gh:Gh,Gl:Gl,Hh:Hh,Hl:Hl}=this;for(let i=0;i<80;i++){const sigma1h=u64.rotrSH(Eh,El,14)^u64.rotrSH(Eh,El,18)^u64.rotrBH(Eh,El,41);const sigma1l=u64.rotrSL(Eh,El,14)^u64.rotrSL(Eh,El,18)^u64.rotrBL(Eh,El,41);const CHIh=Eh&Fh^~Eh&Gh;const CHIl=El&Fl^~El&Gl;const T1ll=u64.add5L(Hl,sigma1l,CHIl,SHA512_Kl[i],SHA512_W_L[i]);const T1h=u64.add5H(T1ll,Hh,sigma1h,CHIh,SHA512_Kh[i],SHA512_W_H[i]);const T1l=T1ll|0;const sigma0h=u64.rotrSH(Ah,Al,28)^u64.rotrBH(Ah,Al,34)^u64.rotrBH(Ah,Al,39);const sigma0l=u64.rotrSL(Ah,Al,28)^u64.rotrBL(Ah,Al,34)^u64.rotrBL(Ah,Al,39);const MAJh=Ah&Bh^Ah&Ch^Bh&Ch;const MAJl=Al&Bl^Al&Cl^Bl&Cl;Hh=Gh|0;Hl=Gl|0;Gh=Fh|0;Gl=Fl|0;Fh=Eh|0;Fl=El|0;({h:Eh,l:El}=u64.add(Dh|0,Dl|0,T1h|0,T1l|0));Dh=Ch|0;Dl=Cl|0;Ch=Bh|0;Cl=Bl|0;Bh=Ah|0;Bl=Al|0;const All=u64.add3L(T1l,sigma0l,MAJl);Ah=u64.add3H(All,T1h,sigma0h,MAJh);Al=All|0}({h:Ah,l:Al}=u64.add(this.Ah|0,this.Al|0,Ah|0,Al|0));({h:Bh,l:Bl}=u64.add(this.Bh|0,this.Bl|0,Bh|0,Bl|0));({h:Ch,l:Cl}=u64.add(this.Ch|0,this.Cl|0,Ch|0,Cl|0));({h:Dh,l:Dl}=u64.add(this.Dh|0,this.Dl|0,Dh|0,Dl|0));({h:Eh,l:El}=u64.add(this.Eh|0,this.El|0,Eh|0,El|0));({h:Fh,l:Fl}=u64.add(this.Fh|0,this.Fl|0,Fh|0,Fl|0));({h:Gh,l:Gl}=u64.add(this.Gh|0,this.Gl|0,Gh|0,Gl|0));({h:Hh,l:Hl}=u64.add(this.Hh|0,this.Hl|0,Hh|0,Hl|0));this.set(Ah,Al,Bh,Bl,Ch,Cl,Dh,Dl,Eh,El,Fh,Fl,Gh,Gl,Hh,Hl)}roundClean(){SHA512_W_H.fill(0);SHA512_W_L.fill(0)}destroy(){this.buffer.fill(0);this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const sha512=wrapConstructor(()=>new SHA512);function getGlobal$2(){if(typeof self!=="undefined"){return self}if(typeof window!=="undefined"){return window}if(typeof global!=="undefined"){return global}throw new Error("unable to locate global object")}const anyGlobal$2=getGlobal$2();const crypto$3=anyGlobal$2.crypto||anyGlobal$2.msCrypto;function createHash(algo){switch(algo){case"sha256":return sha256$2.create();case"sha512":return sha512.create()}assertArgument(false,"invalid hashing algorithm name","algorithm",algo)}function createHmac(_algo,key2){const algo={sha256:sha256$2,sha512:sha512}[_algo];assertArgument(algo!=null,"invalid hmac algorithm","algorithm",_algo);return hmac$1.create(algo,key2)}function pbkdf2Sync$1(password,salt,iterations,keylen,_algo){const algo={sha256:sha256$2,sha512:sha512}[_algo];assertArgument(algo!=null,"invalid pbkdf2 algorithm","algorithm",_algo);return pbkdf2$3(algo,password,salt,{c:iterations,dkLen:keylen})}function randomBytes$3(length){assert$7(crypto$3!=null,"platform does not support secure random numbers","UNSUPPORTED_OPERATION",{operation:"randomBytes"});assertArgument(Number.isInteger(length)&&length>0&&length<=1024,"invalid length","length",length);const result=new Uint8Array(length);crypto$3.getRandomValues(result);return result}let locked$4=false;const _computeHmac=function(algorithm,key2,data){return createHmac(algorithm,key2).update(data).digest()};let __computeHmac=_computeHmac;function computeHmac$1(algorithm,_key,_data5){const key2=getBytes(_key,"key");const data=getBytes(_data5,"data");return hexlify$2(__computeHmac(algorithm,key2,data))}computeHmac$1._=_computeHmac;computeHmac$1.lock=function(){locked$4=true};computeHmac$1.register=function(func){if(locked$4){throw new Error("computeHmac is locked")}__computeHmac=func};Object.freeze(computeHmac$1);const[SHA3_PI,SHA3_ROTL,_SHA3_IOTA]=[[],[],[]];const _0n$4=BigInt(0);const _1n$5=BigInt(1);const _2n$3=BigInt(2);const _7n=BigInt(7);const _256n=BigInt(256);const _0x71n=BigInt(113);for(let round=0,R=_1n$5,x=1,y=0;round<24;round++){[x,y]=[y,(2*x+3*y)%5];SHA3_PI.push(2*(5*y+x));SHA3_ROTL.push((round+1)*(round+2)/2%64);let t=_0n$4;for(let j=0;j<7;j++){R=(R<<_1n$5^(R>>_7n)*_0x71n)%_256n;if(R&_2n$3)t^=_1n$5<<(_1n$5<<BigInt(j))-_1n$5}_SHA3_IOTA.push(t)}const[SHA3_IOTA_H,SHA3_IOTA_L]=split$1(_SHA3_IOTA,true);const rotlH=(h,l,s)=>s>32?rotlBH(h,l,s):rotlSH(h,l,s);const rotlL=(h,l,s)=>s>32?rotlBL(h,l,s):rotlSL(h,l,s);function keccakP(s,rounds=24){const B=new Uint32Array(5*2);for(let round=24-rounds;round<24;round++){for(let x=0;x<10;x++)B[x]=s[x]^s[x+10]^s[x+20]^s[x+30]^s[x+40];for(let x=0;x<10;x+=2){const idx1=(x+8)%10;const idx0=(x+2)%10;const B0=B[idx0];const B1=B[idx0+1];const Th=rotlH(B0,B1,1)^B[idx1];const Tl=rotlL(B0,B1,1)^B[idx1+1];for(let y=0;y<50;y+=10){s[x+y]^=Th;s[x+y+1]^=Tl}}let curH=s[2];let curL=s[3];for(let t=0;t<24;t++){const shift=SHA3_ROTL[t];const Th=rotlH(curH,curL,shift);const Tl=rotlL(curH,curL,shift);const PI=SHA3_PI[t];curH=s[PI];curL=s[PI+1];s[PI]=Th;s[PI+1]=Tl}for(let y=0;y<50;y+=10){for(let x=0;x<10;x++)B[x]=s[y+x];for(let x=0;x<10;x++)s[y+x]^=~B[(x+2)%10]&B[(x+4)%10]}s[0]^=SHA3_IOTA_H[round];s[1]^=SHA3_IOTA_L[round]}B.fill(0)}class Keccak extends Hash$1{constructor(blockLen,suffix,outputLen,enableXOF=false,rounds=24){super();this.blockLen=blockLen;this.suffix=suffix;this.outputLen=outputLen;this.enableXOF=enableXOF;this.rounds=rounds;this.pos=0;this.posOut=0;this.finished=false;this.destroyed=false;number(outputLen);if(0>=this.blockLen||this.blockLen>=200)throw new Error("Sha3 supports only keccak-f1600 function");this.state=new Uint8Array(200);this.state32=u32(this.state)}keccak(){keccakP(this.state32,this.rounds);this.posOut=0;this.pos=0}update(data){exists(this);const{blockLen:blockLen,state:state}=this;data=toBytes(data);const len=data.length;for(let pos=0;pos<len;){const take=Math.min(blockLen-this.pos,len-pos);for(let i=0;i<take;i++)state[this.pos++]^=data[pos++];if(this.pos===blockLen)this.keccak()}return this}finish(){if(this.finished)return;this.finished=true;const{state:state,suffix:suffix,pos:pos,blockLen:blockLen}=this;state[pos]^=suffix;if((suffix&128)!==0&&pos===blockLen-1)this.keccak();state[blockLen-1]^=128;this.keccak()}writeInto(out){exists(this,false);bytes(out);this.finish();const bufferOut=this.state;const{blockLen:blockLen}=this;for(let pos=0,len=out.length;pos<len;){if(this.posOut>=blockLen)this.keccak();const take=Math.min(blockLen-this.posOut,len-pos);out.set(bufferOut.subarray(this.posOut,this.posOut+take),pos);this.posOut+=take;pos+=take}return out}xofInto(out){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(out)}xof(bytes2){number(bytes2);return this.xofInto(new Uint8Array(bytes2))}digestInto(out){output(out,this);if(this.finished)throw new Error("digest() was already called");this.writeInto(out);this.destroy();return out}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=true;this.state.fill(0)}_cloneInto(to){const{blockLen:blockLen,suffix:suffix,outputLen:outputLen,rounds:rounds,enableXOF:enableXOF}=this;to||(to=new Keccak(blockLen,suffix,outputLen,enableXOF,rounds));to.state32.set(this.state32);to.pos=this.pos;to.posOut=this.posOut;to.finished=this.finished;to.rounds=rounds;to.suffix=suffix;to.outputLen=outputLen;to.enableXOF=enableXOF;to.destroyed=this.destroyed;return to}}const gen=(suffix,blockLen,outputLen)=>wrapConstructor(()=>new Keccak(blockLen,suffix,outputLen));const keccak_256=gen(1,136,256/8);let locked$3=false;const _keccak256=function(data){return keccak_256(data)};let __keccak256=_keccak256;function keccak256$2(_data5){const data=getBytes(_data5,"data");return hexlify$2(__keccak256(data))}keccak256$2._=_keccak256;keccak256$2.lock=function(){locked$3=true};keccak256$2.register=function(func){if(locked$3){throw new TypeError("keccak256 is locked")}__keccak256=func};Object.freeze(keccak256$2);const Rho=new Uint8Array([7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8]);const Id=Uint8Array.from({length:16},(_,i)=>i);const Pi=Id.map(i=>(9*i+5)%16);let idxL=[Id];let idxR=[Pi];for(let i=0;i<4;i++)for(let j of[idxL,idxR])j.push(j[i].map(k=>Rho[k]));const shifts=[[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8],[12,13,11,15,6,9,9,7,12,15,11,13,7,8,7,7],[13,15,14,11,7,7,6,8,13,14,13,12,5,5,6,9],[14,11,12,14,8,6,5,5,15,12,15,14,9,9,8,6],[15,12,13,13,9,5,8,6,14,11,12,11,8,6,5,5]].map(i=>new Uint8Array(i));const shiftsL=idxL.map((idx,i)=>idx.map(j=>shifts[i][j]));const shiftsR=idxR.map((idx,i)=>idx.map(j=>shifts[i][j]));const Kl=new Uint32Array([0,1518500249,1859775393,2400959708,2840853838]);const Kr=new Uint32Array([1352829926,1548603684,1836072691,2053994217,0]);const rotl$1=(word,shift)=>word<<shift|word>>>32-shift;function f(group,x,y,z){if(group===0)return x^y^z;else if(group===1)return x&y|~x&z;else if(group===2)return(x|~y)^z;else if(group===3)return x&z|y&~z;else return x^(y|~z)}const BUF=new Uint32Array(16);class RIPEMD160 extends SHA2{constructor(){super(64,20,8,true);this.h0=1732584193|0;this.h1=4023233417|0;this.h2=2562383102|0;this.h3=271733878|0;this.h4=3285377520|0}get(){const{h0:h0,h1:h1,h2:h2,h3:h3,h4:h4}=this;return[h0,h1,h2,h3,h4]}set(h0,h1,h2,h3,h4){this.h0=h0|0;this.h1=h1|0;this.h2=h2|0;this.h3=h3|0;this.h4=h4|0}process(view,offset){for(let i=0;i<16;i++,offset+=4)BUF[i]=view.getUint32(offset,true);let al=this.h0|0,ar=al,bl=this.h1|0,br=bl,cl=this.h2|0,cr=cl,dl=this.h3|0,dr=dl,el=this.h4|0,er=el;for(let group=0;group<5;group++){const rGroup=4-group;const hbl=Kl[group],hbr=Kr[group];const rl=idxL[group],rr=idxR[group];const sl=shiftsL[group],sr=shiftsR[group];for(let i=0;i<16;i++){const tl=rotl$1(al+f(group,bl,cl,dl)+BUF[rl[i]]+hbl,sl[i])+el|0;al=el,el=dl,dl=rotl$1(cl,10)|0,cl=bl,bl=tl}for(let i=0;i<16;i++){const tr=rotl$1(ar+f(rGroup,br,cr,dr)+BUF[rr[i]]+hbr,sr[i])+er|0;ar=er,er=dr,dr=rotl$1(cr,10)|0,cr=br,br=tr}}this.set(this.h1+cl+dr|0,this.h2+dl+er|0,this.h3+el+ar|0,this.h4+al+br|0,this.h0+bl+cr|0)}roundClean(){BUF.fill(0)}destroy(){this.destroyed=true;this.buffer.fill(0);this.set(0,0,0,0,0)}}const ripemd160$2=wrapConstructor(()=>new RIPEMD160);let locked$2=false;const _ripemd160=function(data){return ripemd160$2(data)};let __ripemd160=_ripemd160;function ripemd160$1(_data5){const data=getBytes(_data5,"data");return hexlify$2(__ripemd160(data))}ripemd160$1._=_ripemd160;ripemd160$1.lock=function(){locked$2=true};ripemd160$1.register=function(func){if(locked$2){throw new TypeError("ripemd160 is locked")}__ripemd160=func};Object.freeze(ripemd160$1);let locked$1=false;const _pbkdf2=function(password,salt,iterations,keylen,algo){return pbkdf2Sync$1(password,salt,iterations,keylen,algo)};let __pbkdf2=_pbkdf2;function pbkdf2$2(_password,_salt,iterations,keylen,algo){const password=getBytes(_password,"password");const salt=getBytes(_salt,"salt");return hexlify$2(__pbkdf2(password,salt,iterations,keylen,algo))}pbkdf2$2._=_pbkdf2;pbkdf2$2.lock=function(){locked$1=true};pbkdf2$2.register=function(func){if(locked$1){throw new Error("pbkdf2 is locked")}__pbkdf2=func};Object.freeze(pbkdf2$2);let locked=false;const _randomBytes=function(length){return new Uint8Array(randomBytes$3(length))};let __randomBytes=_randomBytes;function randomBytes$2(length){return __randomBytes(length)}randomBytes$2._=_randomBytes;randomBytes$2.lock=function(){locked=true};randomBytes$2.register=function(func){if(locked){throw new Error("randomBytes is locked")}__randomBytes=func};Object.freeze(randomBytes$2);const rotl=(a,b2)=>a<<b2|a>>>32-b2;function XorAndSalsa(prev,pi,input,ii,out,oi){let y00=prev[pi++]^input[ii++],y01=prev[pi++]^input[ii++];let y02=prev[pi++]^input[ii++],y03=prev[pi++]^input[ii++];let y04=prev[pi++]^input[ii++],y05=prev[pi++]^input[ii++];let y06=prev[pi++]^input[ii++],y07=prev[pi++]^input[ii++];let y08=prev[pi++]^input[ii++],y09=prev[pi++]^input[ii++];let y10=prev[pi++]^input[ii++],y11=prev[pi++]^input[ii++];let y12=prev[pi++]^input[ii++],y13=prev[pi++]^input[ii++];let y14=prev[pi++]^input[ii++],y15=prev[pi++]^input[ii++];let x00=y00,x01=y01,x02=y02,x03=y03,x04=y04,x05=y05,x06=y06,x07=y07,x08=y08,x09=y09,x10=y10,x11=y11,x12=y12,x13=y13,x14=y14,x15=y15;for(let i=0;i<8;i+=2){x04^=rotl(x00+x12|0,7);x08^=rotl(x04+x00|0,9);x12^=rotl(x08+x04|0,13);x00^=rotl(x12+x08|0,18);x09^=rotl(x05+x01|0,7);x13^=rotl(x09+x05|0,9);x01^=rotl(x13+x09|0,13);x05^=rotl(x01+x13|0,18);x14^=rotl(x10+x06|0,7);x02^=rotl(x14+x10|0,9);x06^=rotl(x02+x14|0,13);x10^=rotl(x06+x02|0,18);x03^=rotl(x15+x11|0,7);x07^=rotl(x03+x15|0,9);x11^=rotl(x07+x03|0,13);x15^=rotl(x11+x07|0,18);x01^=rotl(x00+x03|0,7);x02^=rotl(x01+x00|0,9);x03^=rotl(x02+x01|0,13);x00^=rotl(x03+x02|0,18);x06^=rotl(x05+x04|0,7);x07^=rotl(x06+x05|0,9);x04^=rotl(x07+x06|0,13);x05^=rotl(x04+x07|0,18);x11^=rotl(x10+x09|0,7);x08^=rotl(x11+x10|0,9);x09^=rotl(x08+x11|0,13);x10^=rotl(x09+x08|0,18);x12^=rotl(x15+x14|0,7);x13^=rotl(x12+x15|0,9);x14^=rotl(x13+x12|0,13);x15^=rotl(x14+x13|0,18)}out[oi++]=y00+x00|0;out[oi++]=y01+x01|0;out[oi++]=y02+x02|0;out[oi++]=y03+x03|0;out[oi++]=y04+x04|0;out[oi++]=y05+x05|0;out[oi++]=y06+x06|0;out[oi++]=y07+x07|0;out[oi++]=y08+x08|0;out[oi++]=y09+x09|0;out[oi++]=y10+x10|0;out[oi++]=y11+x11|0;out[oi++]=y12+x12|0;out[oi++]=y13+x13|0;out[oi++]=y14+x14|0;out[oi++]=y15+x15|0}function BlockMix(input,ii,out,oi,r){let head=oi+0;let tail=oi+16*r;for(let i=0;i<16;i++)out[tail+i]=input[ii+(2*r-1)*16+i];for(let i=0;i<r;i++,head+=16,ii+=16){XorAndSalsa(out,tail,input,ii,out,head);if(i>0)tail+=16;XorAndSalsa(out,head,input,ii+=16,out,tail)}}function scryptInit(password,salt,_opts){const opts=checkOpts({dkLen:32,asyncTick:10,maxmem:1024**3+1024},_opts);const{N:N2,r:r,p:p,dkLen:dkLen,asyncTick:asyncTick,maxmem:maxmem,onProgress:onProgress}=opts;number(N2);number(r);number(p);number(dkLen);number(asyncTick);number(maxmem);if(onProgress!==void 0&&typeof onProgress!=="function")throw new Error("progressCb should be function");const blockSize=128*r;const blockSize32=blockSize/4;if(N2<=1||(N2&N2-1)!==0||N2>=2**(blockSize/8)||N2>2**32){throw new Error("Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32")}if(p<0||p>(2**32-1)*32/blockSize){throw new Error("Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)")}if(dkLen<0||dkLen>(2**32-1)*32){throw new Error("Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32")}const memUsed=blockSize*(N2+p);if(memUsed>maxmem){throw new Error(`Scrypt: parameters too large, ${memUsed} (128 * r * (N + p)) > ${maxmem} (maxmem)`)}const B=pbkdf2$3(sha256$2,password,salt,{c:1,dkLen:blockSize*p});const B32=u32(B);const V=u32(new Uint8Array(blockSize*N2));const tmp=u32(new Uint8Array(blockSize));let blockMixCb=()=>{};if(onProgress){const totalBlockMix=2*N2*p;const callbackPer=Math.max(Math.floor(totalBlockMix/1e4),1);let blockMixCnt=0;blockMixCb=()=>{blockMixCnt++;if(onProgress&&(!(blockMixCnt%callbackPer)||blockMixCnt===totalBlockMix))onProgress(blockMixCnt/totalBlockMix)}}return{N:N2,r:r,p:p,dkLen:dkLen,blockSize32:blockSize32,V:V,B32:B32,B:B,tmp:tmp,blockMixCb:blockMixCb,asyncTick:asyncTick}}function scryptOutput(password,dkLen,B,V,tmp){const res=pbkdf2$3(sha256$2,password,B,{c:1,dkLen:dkLen});B.fill(0);V.fill(0);tmp.fill(0);return res}function scrypt$3(password,salt,opts){const{N:N2,r:r,p:p,dkLen:dkLen,blockSize32:blockSize32,V:V,B32:B32,B:B,tmp:tmp,blockMixCb:blockMixCb}=scryptInit(password,salt,opts);for(let pi=0;pi<p;pi++){const Pi2=blockSize32*pi;for(let i=0;i<blockSize32;i++)V[i]=B32[Pi2+i];for(let i=0,pos=0;i<N2-1;i++){BlockMix(V,pos,V,pos+=blockSize32,r);blockMixCb()}BlockMix(V,(N2-1)*blockSize32,B32,Pi2,r);blockMixCb();for(let i=0;i<N2;i++){const j=B32[Pi2+blockSize32-16]%N2;for(let k=0;k<blockSize32;k++)tmp[k]=B32[Pi2+k]^V[j*blockSize32+k];BlockMix(tmp,0,B32,Pi2,r);blockMixCb()}}return scryptOutput(password,dkLen,B,V,tmp)}async function scryptAsync(password,salt,opts){const{N:N2,r:r,p:p,dkLen:dkLen,blockSize32:blockSize32,V:V,B32:B32,B:B,tmp:tmp,blockMixCb:blockMixCb,asyncTick:asyncTick}=scryptInit(password,salt,opts);for(let pi=0;pi<p;pi++){const Pi2=blockSize32*pi;for(let i=0;i<blockSize32;i++)V[i]=B32[Pi2+i];let pos=0;await asyncLoop(N2-1,asyncTick,()=>{BlockMix(V,pos,V,pos+=blockSize32,r);blockMixCb()});BlockMix(V,(N2-1)*blockSize32,B32,Pi2,r);blockMixCb();await asyncLoop(N2,asyncTick,()=>{const j=B32[Pi2+blockSize32-16]%N2;for(let k=0;k<blockSize32;k++)tmp[k]=B32[Pi2+k]^V[j*blockSize32+k];BlockMix(tmp,0,B32,Pi2,r);blockMixCb()})}return scryptOutput(password,dkLen,B,V,tmp)}let lockedSync=false,lockedAsync=false;const _scryptAsync=async function(passwd,salt,N2,r,p,dkLen,onProgress){return await scryptAsync(passwd,salt,{N:N2,r:r,p:p,dkLen:dkLen,onProgress:onProgress})};const _scryptSync=function(passwd,salt,N2,r,p,dkLen){return scrypt$3(passwd,salt,{N:N2,r:r,p:p,dkLen:dkLen})};let __scryptAsync=_scryptAsync;let __scryptSync=_scryptSync;async function scrypt$2(_passwd,_salt,N2,r,p,dkLen,progress){const passwd=getBytes(_passwd,"passwd");const salt=getBytes(_salt,"salt");return hexlify$2(await __scryptAsync(passwd,salt,N2,r,p,dkLen,progress))}scrypt$2._=_scryptAsync;scrypt$2.lock=function(){lockedAsync=true};scrypt$2.register=function(func){if(lockedAsync){throw new Error("scrypt is locked")}__scryptAsync=func};Object.freeze(scrypt$2);function scryptSync(_passwd,_salt,N2,r,p,dkLen){const passwd=getBytes(_passwd,"passwd");const salt=getBytes(_salt,"salt");return hexlify$2(__scryptSync(passwd,salt,N2,r,p,dkLen))}scryptSync._=_scryptSync;scryptSync.lock=function(){lockedSync=true};scryptSync.register=function(func){if(lockedSync){throw new Error("scryptSync is locked")}__scryptSync=func};Object.freeze(scryptSync);const _sha256=function(data){return createHash("sha256").update(data).digest()};let __sha256=_sha256;let locked256=false;function sha256$1(_data5){const data=getBytes(_data5,"data");return hexlify$2(__sha256(data))}sha256$1._=_sha256;sha256$1.lock=function(){locked256=true};sha256$1.register=function(func){if(locked256){throw new Error("sha256 is locked")}__sha256=func};Object.freeze(sha256$1);Object.freeze(sha256$1);
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const _0n$3=BigInt(0);const _1n$4=BigInt(1);const _2n$2=BigInt(2);const u8a=a=>a instanceof Uint8Array;const hexes=Array.from({length:256},(_,i)=>i.toString(16).padStart(2,"0"));function bytesToHex(bytes2){if(!u8a(bytes2))throw new Error("Uint8Array expected");let hex="";for(let i=0;i<bytes2.length;i++){hex+=hexes[bytes2[i]]}return hex}function numberToHexUnpadded(num){const hex=num.toString(16);return hex.length&1?`0${hex}`:hex}function hexToNumber(hex){if(typeof hex!=="string")throw new Error("hex string expected, got "+typeof hex);return BigInt(hex===""?"0":`0x${hex}`)}function hexToBytes(hex){if(typeof hex!=="string")throw new Error("hex string expected, got "+typeof hex);const len=hex.length;if(len%2)throw new Error("padded hex string expected, got unpadded hex of length "+len);const array=new Uint8Array(len/2);for(let i=0;i<array.length;i++){const j=i*2;const hexByte=hex.slice(j,j+2);const byte=Number.parseInt(hexByte,16);if(Number.isNaN(byte)||byte<0)throw new Error("Invalid byte sequence");array[i]=byte}return array}function bytesToNumberBE(bytes2){return hexToNumber(bytesToHex(bytes2))}function bytesToNumberLE(bytes2){if(!u8a(bytes2))throw new Error("Uint8Array expected");return hexToNumber(bytesToHex(Uint8Array.from(bytes2).reverse()))}function numberToBytesBE(n2,len){return hexToBytes(n2.toString(16).padStart(len*2,"0"))}function numberToBytesLE(n2,len){return numberToBytesBE(n2,len).reverse()}function numberToVarBytesBE(n2){return hexToBytes(numberToHexUnpadded(n2))}function ensureBytes(title,hex,expectedLength){let res;if(typeof hex==="string"){try{res=hexToBytes(hex)}catch(e){throw new Error(`${title} must be valid hex string, got "${hex}". Cause: ${e}`)}}else if(u8a(hex)){res=Uint8Array.from(hex)}else{throw new Error(`${title} must be hex string or Uint8Array`)}const len=res.length;if(typeof expectedLength==="number"&&len!==expectedLength)throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);return res}function concatBytes(...arrays){const r=new Uint8Array(arrays.reduce((sum,a)=>sum+a.length,0));let pad=0;arrays.forEach(a=>{if(!u8a(a))throw new Error("Uint8Array expected");r.set(a,pad);pad+=a.length});return r}function equalBytes(b1,b2){if(b1.length!==b2.length)return false;for(let i=0;i<b1.length;i++)if(b1[i]!==b2[i])return false;return true}function utf8ToBytes(str){if(typeof str!=="string")throw new Error(`utf8ToBytes expected string, got ${typeof str}`);return new Uint8Array((new TextEncoder).encode(str))}function bitLen(n2){let len;for(len=0;n2>_0n$3;n2>>=_1n$4,len+=1);return len}function bitGet(n2,pos){return n2>>BigInt(pos)&_1n$4}const bitSet=(n2,pos,value)=>n2|(value?_1n$4:_0n$3)<<BigInt(pos);const bitMask=n2=>(_2n$2<<BigInt(n2-1))-_1n$4;const u8n=data=>new Uint8Array(data);const u8fr=arr=>Uint8Array.from(arr);function createHmacDrbg(hashLen,qByteLen,hmacFn){if(typeof hashLen!=="number"||hashLen<2)throw new Error("hashLen must be a number");if(typeof qByteLen!=="number"||qByteLen<2)throw new Error("qByteLen must be a number");if(typeof hmacFn!=="function")throw new Error("hmacFn must be a function");let v=u8n(hashLen);let k=u8n(hashLen);let i=0;const reset=()=>{v.fill(1);k.fill(0);i=0};const h=(...b2)=>hmacFn(k,v,...b2);const reseed3=(seed=u8n())=>{k=h(u8fr([0]),seed);v=h();if(seed.length===0)return;k=h(u8fr([1]),seed);v=h()};const gen2=()=>{if(i++>=1e3)throw new Error("drbg: tried 1000 values");let len=0;const out=[];while(len<qByteLen){v=h();const sl=v.slice();out.push(sl);len+=v.length}return concatBytes(...out)};const genUntil=(seed,pred)=>{reset();reseed3(seed);let res=void 0;while(!(res=pred(gen2())))reseed3();reset();return res};return genUntil}const validatorFns={bigint:val=>typeof val==="bigint",function:val=>typeof val==="function",boolean:val=>typeof val==="boolean",string:val=>typeof val==="string",stringOrUint8Array:val=>typeof val==="string"||val instanceof Uint8Array,isSafeInteger:val=>Number.isSafeInteger(val),array:val=>Array.isArray(val),field:(val,object2)=>object2.Fp.isValid(val),hash:val=>typeof val==="function"&&Number.isSafeInteger(val.outputLen)};function validateObject(object2,validators2,optValidators={}){const checkField=(fieldName,type,isOptional)=>{const checkVal=validatorFns[type];if(typeof checkVal!=="function")throw new Error(`Invalid validator "${type}", expected function`);const val=object2[fieldName];if(isOptional&&val===void 0)return;if(!checkVal(val,object2)){throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`)}};for(const[fieldName,type]of Object.entries(validators2))checkField(fieldName,type,false);for(const[fieldName,type]of Object.entries(optValidators))checkField(fieldName,type,true);return object2}const ut=Object.freeze(Object.defineProperty({__proto__:null,bitGet:bitGet,bitLen:bitLen,bitMask:bitMask,bitSet:bitSet,bytesToHex:bytesToHex,bytesToNumberBE:bytesToNumberBE,bytesToNumberLE:bytesToNumberLE,concatBytes:concatBytes,createHmacDrbg:createHmacDrbg,ensureBytes:ensureBytes,equalBytes:equalBytes,hexToBytes:hexToBytes,hexToNumber:hexToNumber,numberToBytesBE:numberToBytesBE,numberToBytesLE:numberToBytesLE,numberToHexUnpadded:numberToHexUnpadded,numberToVarBytesBE:numberToVarBytesBE,utf8ToBytes:utf8ToBytes,validateObject:validateObject},Symbol.toStringTag,{value:"Module"}));
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const _0n$2=BigInt(0),_1n$3=BigInt(1),_2n$1=BigInt(2),_3n$1=BigInt(3);const _4n=BigInt(4),_5n=BigInt(5),_8n=BigInt(8);BigInt(9);BigInt(16);function mod(a,b2){const result=a%b2;return result>=_0n$2?result:b2+result}function pow(num,power,modulo){if(modulo<=_0n$2||power<_0n$2)throw new Error("Expected power/modulo > 0");if(modulo===_1n$3)return _0n$2;let res=_1n$3;while(power>_0n$2){if(power&_1n$3)res=res*num%modulo;num=num*num%modulo;power>>=_1n$3}return res}function pow2(x,power,modulo){let res=x;while(power-- >_0n$2){res*=res;res%=modulo}return res}function invert(number2,modulo){if(number2===_0n$2||modulo<=_0n$2){throw new Error(`invert: expected positive integers, got n=${number2} mod=${modulo}`)}let a=mod(number2,modulo);let b2=modulo;let x=_0n$2,u=_1n$3;while(a!==_0n$2){const q=b2/a;const r=b2%a;const m=x-u*q;b2=a,a=r,x=u,u=m}const gcd=b2;if(gcd!==_1n$3)throw new Error("invert: does not exist");return mod(x,modulo)}function tonelliShanks(P){const legendreC=(P-_1n$3)/_2n$1;let Q,S2,Z;for(Q=P-_1n$3,S2=0;Q%_2n$1===_0n$2;Q/=_2n$1,S2++);for(Z=_2n$1;Z<P&&pow(Z,legendreC,P)!==P-_1n$3;Z++);if(S2===1){const p1div4=(P+_1n$3)/_4n;return function tonelliFast(Fp2,n2){const root2=Fp2.pow(n2,p1div4);if(!Fp2.eql(Fp2.sqr(root2),n2))throw new Error("Cannot find square root");return root2}}const Q1div2=(Q+_1n$3)/_2n$1;return function tonelliSlow(Fp2,n2){if(Fp2.pow(n2,legendreC)===Fp2.neg(Fp2.ONE))throw new Error("Cannot find square root");let r=S2;let g=Fp2.pow(Fp2.mul(Fp2.ONE,Z),Q);let x=Fp2.pow(n2,Q1div2);let b2=Fp2.pow(n2,Q);while(!Fp2.eql(b2,Fp2.ONE)){if(Fp2.eql(b2,Fp2.ZERO))return Fp2.ZERO;let m=1;for(let t2=Fp2.sqr(b2);m<r;m++){if(Fp2.eql(t2,Fp2.ONE))break;t2=Fp2.sqr(t2)}const ge=Fp2.pow(g,_1n$3<<BigInt(r-m-1));g=Fp2.sqr(ge);x=Fp2.mul(x,ge);b2=Fp2.mul(b2,g);r=m}return x}}function FpSqrt(P){if(P%_4n===_3n$1){const p1div4=(P+_1n$3)/_4n;return function sqrt3mod4(Fp2,n2){const root2=Fp2.pow(n2,p1div4);if(!Fp2.eql(Fp2.sqr(root2),n2))throw new Error("Cannot find square root");return root2}}if(P%_8n===_5n){const c1=(P-_5n)/_8n;return function sqrt5mod8(Fp2,n2){const n22=Fp2.mul(n2,_2n$1);const v=Fp2.pow(n22,c1);const nv=Fp2.mul(n2,v);const i=Fp2.mul(Fp2.mul(nv,_2n$1),v);const root2=Fp2.mul(nv,Fp2.sub(i,Fp2.ONE));if(!Fp2.eql(Fp2.sqr(root2),n2))throw new Error("Cannot find square root");return root2}}return tonelliShanks(P)}const FIELD_FIELDS=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function validateField(field){const initial={ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"};const opts=FIELD_FIELDS.reduce((map,val)=>{map[val]="function";return map},initial);return validateObject(field,opts)}function FpPow(f2,num,power){if(power<_0n$2)throw new Error("Expected power > 0");if(power===_0n$2)return f2.ONE;if(power===_1n$3)return num;let p=f2.ONE;let d=num;while(power>_0n$2){if(power&_1n$3)p=f2.mul(p,d);d=f2.sqr(d);power>>=_1n$3}return p}function FpInvertBatch(f2,nums){const tmp=new Array(nums.length);const lastMultiplied=nums.reduce((acc,num,i)=>{if(f2.is0(num))return acc;tmp[i]=acc;return f2.mul(acc,num)},f2.ONE);const inverted=f2.inv(lastMultiplied);nums.reduceRight((acc,num,i)=>{if(f2.is0(num))return acc;tmp[i]=f2.mul(acc,tmp[i]);return f2.mul(acc,num)},inverted);return tmp}function nLength(n2,nBitLength){const _nBitLength=nBitLength!==void 0?nBitLength:n2.toString(2).length;const nByteLength=Math.ceil(_nBitLength/8);return{nBitLength:_nBitLength,nByteLength:nByteLength}}function Field(ORDER,bitLen2,isLE2=false,redef={}){if(ORDER<=_0n$2)throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);const{nBitLength:BITS,nByteLength:BYTES}=nLength(ORDER,bitLen2);if(BYTES>2048)throw new Error("Field lengths over 2048 bytes are not supported");const sqrtP=FpSqrt(ORDER);const f2=Object.freeze({ORDER:ORDER,BITS:BITS,BYTES:BYTES,MASK:bitMask(BITS),ZERO:_0n$2,ONE:_1n$3,create:num=>mod(num,ORDER),isValid:num=>{if(typeof num!=="bigint")throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);return _0n$2<=num&&num<ORDER},is0:num=>num===_0n$2,isOdd:num=>(num&_1n$3)===_1n$3,neg:num=>mod(-num,ORDER),eql:(lhs,rhs)=>lhs===rhs,sqr:num=>mod(num*num,ORDER),add:(lhs,rhs)=>mod(lhs+rhs,ORDER),sub:(lhs,rhs)=>mod(lhs-rhs,ORDER),mul:(lhs,rhs)=>mod(lhs*rhs,ORDER),pow:(num,power)=>FpPow(f2,num,power),div:(lhs,rhs)=>mod(lhs*invert(rhs,ORDER),ORDER),sqrN:num=>num*num,addN:(lhs,rhs)=>lhs+rhs,subN:(lhs,rhs)=>lhs-rhs,mulN:(lhs,rhs)=>lhs*rhs,inv:num=>invert(num,ORDER),sqrt:redef.sqrt||(n2=>sqrtP(f2,n2)),invertBatch:lst=>FpInvertBatch(f2,lst),cmov:(a,b2,c)=>c?b2:a,toBytes:num=>isLE2?numberToBytesLE(num,BYTES):numberToBytesBE(num,BYTES),fromBytes:bytes2=>{if(bytes2.length!==BYTES)throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes2.length}`);return isLE2?bytesToNumberLE(bytes2):bytesToNumberBE(bytes2)}});return Object.freeze(f2)}function getFieldBytesLength(fieldOrder){if(typeof fieldOrder!=="bigint")throw new Error("field order must be bigint");const bitLength=fieldOrder.toString(2).length;return Math.ceil(bitLength/8)}function getMinHashLength(fieldOrder){const length=getFieldBytesLength(fieldOrder);return length+Math.ceil(length/2)}function mapHashToField(key2,fieldOrder,isLE2=false){const len=key2.length;const fieldLen=getFieldBytesLength(fieldOrder);const minLen=getMinHashLength(fieldOrder);if(len<16||len<minLen||len>1024)throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);const num=isLE2?bytesToNumberBE(key2):bytesToNumberLE(key2);const reduced=mod(num,fieldOrder-_1n$3)+_1n$3;return isLE2?numberToBytesLE(reduced,fieldLen):numberToBytesBE(reduced,fieldLen)}
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const _0n$1=BigInt(0);const _1n$2=BigInt(1);function wNAF(c,bits){const constTimeNegate=(condition,item)=>{const neg5=item.negate();return condition?neg5:item};const opts=W=>{const windows=Math.ceil(bits/W)+1;const windowSize=2**(W-1);return{windows:windows,windowSize:windowSize}};return{constTimeNegate:constTimeNegate,unsafeLadder(elm,n2){let p=c.ZERO;let d=elm;while(n2>_0n$1){if(n2&_1n$2)p=p.add(d);d=d.double();n2>>=_1n$2}return p},precomputeWindow(elm,W){const{windows:windows,windowSize:windowSize}=opts(W);const points=[];let p=elm;let base2=p;for(let window2=0;window2<windows;window2++){base2=p;points.push(base2);for(let i=1;i<windowSize;i++){base2=base2.add(p);points.push(base2)}p=base2.double()}return points},wNAF(W,precomputes,n2){const{windows:windows,windowSize:windowSize}=opts(W);let p=c.ZERO;let f2=c.BASE;const mask2=BigInt(2**W-1);const maxNumber=2**W;const shiftBy=BigInt(W);for(let window2=0;window2<windows;window2++){const offset=window2*windowSize;let wbits=Number(n2&mask2);n2>>=shiftBy;if(wbits>windowSize){wbits-=maxNumber;n2+=_1n$2}const offset1=offset;const offset2=offset+Math.abs(wbits)-1;const cond1=window2%2!==0;const cond2=wbits<0;if(wbits===0){f2=f2.add(constTimeNegate(cond1,precomputes[offset1]))}else{p=p.add(constTimeNegate(cond2,precomputes[offset2]))}}return{p:p,f:f2}},wNAFCached(P,precomputesMap,n2,transform){const W=P._WINDOW_SIZE||1;let comp=precomputesMap.get(P);if(!comp){comp=this.precomputeWindow(P,W);if(W!==1){precomputesMap.set(P,transform(comp))}}return this.wNAF(W,comp,n2)}}}function validateBasic(curve){validateField(curve.Fp);validateObject(curve,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"});return Object.freeze({...nLength(curve.n,curve.nBitLength),...curve,...{p:curve.Fp.ORDER}})}
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */function validatePointOpts(curve){const opts=validateBasic(curve);validateObject(opts,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});const{endo:endo,Fp:Fp2,a:a}=opts;if(endo){if(!Fp2.eql(a,Fp2.ZERO)){throw new Error("Endomorphism can only be defined for Koblitz curves that have a=0")}if(typeof endo!=="object"||typeof endo.beta!=="bigint"||typeof endo.splitScalar!=="function"){throw new Error("Expected endomorphism with beta: bigint and splitScalar: function")}}return Object.freeze({...opts})}const{bytesToNumberBE:b2n,hexToBytes:h2b}=ut;const DER={Err:class DERErr extends Error{constructor(m=""){super(m)}},_parseInt(data){const{Err:E}=DER;if(data.length<2||data[0]!==2)throw new E("Invalid signature integer tag");const len=data[1];const res=data.subarray(2,len+2);if(!len||res.length!==len)throw new E("Invalid signature integer: wrong length");if(res[0]&128)throw new E("Invalid signature integer: negative");if(res[0]===0&&!(res[1]&128))throw new E("Invalid signature integer: unnecessary leading zero");return{d:b2n(res),l:data.subarray(len+2)}},toSig(hex){const{Err:E}=DER;const data=typeof hex==="string"?h2b(hex):hex;if(!(data instanceof Uint8Array))throw new Error("ui8a expected");let l=data.length;if(l<2||data[0]!=48)throw new E("Invalid signature tag");if(data[1]!==l-2)throw new E("Invalid signature: incorrect length");const{d:r,l:sBytes}=DER._parseInt(data.subarray(2));const{d:s,l:rBytesLeft}=DER._parseInt(sBytes);if(rBytesLeft.length)throw new E("Invalid signature: left bytes after parsing");return{r:r,s:s}},hexFromSig(sig){const slice=s2=>Number.parseInt(s2[0],16)&8?"00"+s2:s2;const h=num=>{const hex=num.toString(16);return hex.length&1?`0${hex}`:hex};const s=slice(h(sig.s));const r=slice(h(sig.r));const shl=s.length/2;const rhl=r.length/2;const sl=h(shl);const rl=h(rhl);return`30${h(rhl+shl+4)}02${rl}${r}02${sl}${s}`}};const _0n=BigInt(0),_1n$1=BigInt(1);BigInt(2);const _3n=BigInt(3);BigInt(4);function weierstrassPoints(opts){const CURVE=validatePointOpts(opts);const{Fp:Fp2}=CURVE;const toBytes2=CURVE.toBytes||((_c2,point5,_isCompressed)=>{const a=point5.toAffine();return concatBytes(Uint8Array.from([4]),Fp2.toBytes(a.x),Fp2.toBytes(a.y))});const fromBytes=CURVE.fromBytes||(bytes2=>{const tail=bytes2.subarray(1);const x=Fp2.fromBytes(tail.subarray(0,Fp2.BYTES));const y=Fp2.fromBytes(tail.subarray(Fp2.BYTES,2*Fp2.BYTES));return{x:x,y:y}});function weierstrassEquation(x){const{a:a,b:b2}=CURVE;const x2=Fp2.sqr(x);const x3=Fp2.mul(x2,x);return Fp2.add(Fp2.add(x3,Fp2.mul(x,a)),b2)}if(!Fp2.eql(Fp2.sqr(CURVE.Gy),weierstrassEquation(CURVE.Gx)))throw new Error("bad generator point: equation left != right");function isWithinCurveOrder(num){return typeof num==="bigint"&&_0n<num&&num<CURVE.n}function assertGE(num){if(!isWithinCurveOrder(num))throw new Error("Expected valid bigint: 0 < bigint < curve.n")}function normPrivateKeyToScalar(key2){const{allowedPrivateKeyLengths:lengths,nByteLength:nByteLength,wrapPrivateKey:wrapPrivateKey,n:n2}=CURVE;if(lengths&&typeof key2!=="bigint"){if(key2 instanceof Uint8Array)key2=bytesToHex(key2);if(typeof key2!=="string"||!lengths.includes(key2.length))throw new Error("Invalid key");key2=key2.padStart(nByteLength*2,"0")}let num;try{num=typeof key2==="bigint"?key2:bytesToNumberBE(ensureBytes("private key",key2,nByteLength))}catch(error){throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key2}`)}if(wrapPrivateKey)num=mod(num,n2);assertGE(num);return num}const pointPrecomputes=new Map;function assertPrjPoint(other){if(!(other instanceof Point2))throw new Error("ProjectivePoint expected")}class Point2{constructor(px,py,pz){this.px=px;this.py=py;this.pz=pz;if(px==null||!Fp2.isValid(px))throw new Error("x required");if(py==null||!Fp2.isValid(py))throw new Error("y required");if(pz==null||!Fp2.isValid(pz))throw new Error("z required")}static fromAffine(p){const{x:x,y:y}=p||{};if(!p||!Fp2.isValid(x)||!Fp2.isValid(y))throw new Error("invalid affine point");if(p instanceof Point2)throw new Error("projective point not allowed");const is0=i=>Fp2.eql(i,Fp2.ZERO);if(is0(x)&&is0(y))return Point2.ZERO;return new Point2(x,y,Fp2.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(points){const toInv=Fp2.invertBatch(points.map(p=>p.pz));return points.map((p,i)=>p.toAffine(toInv[i])).map(Point2.fromAffine)}static fromHex(hex){const P=Point2.fromAffine(fromBytes(ensureBytes("pointHex",hex)));P.assertValidity();return P}static fromPrivateKey(privateKey){return Point2.BASE.multiply(normPrivateKeyToScalar(privateKey))}_setWindowSize(windowSize){this._WINDOW_SIZE=windowSize;pointPrecomputes.delete(this)}assertValidity(){if(this.is0()){if(CURVE.allowInfinityPoint&&!Fp2.is0(this.py))return;throw new Error("bad point: ZERO")}const{x:x,y:y}=this.toAffine();if(!Fp2.isValid(x)||!Fp2.isValid(y))throw new Error("bad point: x or y not FE");const left=Fp2.sqr(y);const right=weierstrassEquation(x);if(!Fp2.eql(left,right))throw new Error("bad point: equation left != right");if(!this.isTorsionFree())throw new Error("bad point: not in prime-order subgroup")}hasEvenY(){const{y:y}=this.toAffine();if(Fp2.isOdd)return!Fp2.isOdd(y);throw new Error("Field doesn't support isOdd")}equals(other){assertPrjPoint(other);const{px:X1,py:Y1,pz:Z1}=this;const{px:X2,py:Y2,pz:Z2}=other;const U12=Fp2.eql(Fp2.mul(X1,Z2),Fp2.mul(X2,Z1));const U22=Fp2.eql(Fp2.mul(Y1,Z2),Fp2.mul(Y2,Z1));return U12&&U22}negate(){return new Point2(this.px,Fp2.neg(this.py),this.pz)}double(){const{a:a,b:b2}=CURVE;const b3=Fp2.mul(b2,_3n);const{px:X1,py:Y1,pz:Z1}=this;let X3=Fp2.ZERO,Y3=Fp2.ZERO,Z3=Fp2.ZERO;let t0=Fp2.mul(X1,X1);let t1=Fp2.mul(Y1,Y1);let t2=Fp2.mul(Z1,Z1);let t3=Fp2.mul(X1,Y1);t3=Fp2.add(t3,t3);Z3=Fp2.mul(X1,Z1);Z3=Fp2.add(Z3,Z3);X3=Fp2.mul(a,Z3);Y3=Fp2.mul(b3,t2);Y3=Fp2.add(X3,Y3);X3=Fp2.sub(t1,Y3);Y3=Fp2.add(t1,Y3);Y3=Fp2.mul(X3,Y3);X3=Fp2.mul(t3,X3);Z3=Fp2.mul(b3,Z3);t2=Fp2.mul(a,t2);t3=Fp2.sub(t0,t2);t3=Fp2.mul(a,t3);t3=Fp2.add(t3,Z3);Z3=Fp2.add(t0,t0);t0=Fp2.add(Z3,t0);t0=Fp2.add(t0,t2);t0=Fp2.mul(t0,t3);Y3=Fp2.add(Y3,t0);t2=Fp2.mul(Y1,Z1);t2=Fp2.add(t2,t2);t0=Fp2.mul(t2,t3);X3=Fp2.sub(X3,t0);Z3=Fp2.mul(t2,t1);Z3=Fp2.add(Z3,Z3);Z3=Fp2.add(Z3,Z3);return new Point2(X3,Y3,Z3)}add(other){assertPrjPoint(other);const{px:X1,py:Y1,pz:Z1}=this;const{px:X2,py:Y2,pz:Z2}=other;let X3=Fp2.ZERO,Y3=Fp2.ZERO,Z3=Fp2.ZERO;const a=CURVE.a;const b3=Fp2.mul(CURVE.b,_3n);let t0=Fp2.mul(X1,X2);let t1=Fp2.mul(Y1,Y2);let t2=Fp2.mul(Z1,Z2);let t3=Fp2.add(X1,Y1);let t4=Fp2.add(X2,Y2);t3=Fp2.mul(t3,t4);t4=Fp2.add(t0,t1);t3=Fp2.sub(t3,t4);t4=Fp2.add(X1,Z1);let t5=Fp2.add(X2,Z2);t4=Fp2.mul(t4,t5);t5=Fp2.add(t0,t2);t4=Fp2.sub(t4,t5);t5=Fp2.add(Y1,Z1);X3=Fp2.add(Y2,Z2);t5=Fp2.mul(t5,X3);X3=Fp2.add(t1,t2);t5=Fp2.sub(t5,X3);Z3=Fp2.mul(a,t4);X3=Fp2.mul(b3,t2);Z3=Fp2.add(X3,Z3);X3=Fp2.sub(t1,Z3);Z3=Fp2.add(t1,Z3);Y3=Fp2.mul(X3,Z3);t1=Fp2.add(t0,t0);t1=Fp2.add(t1,t0);t2=Fp2.mul(a,t2);t4=Fp2.mul(b3,t4);t1=Fp2.add(t1,t2);t2=Fp2.sub(t0,t2);t2=Fp2.mul(a,t2);t4=Fp2.add(t4,t2);t0=Fp2.mul(t1,t4);Y3=Fp2.add(Y3,t0);t0=Fp2.mul(t5,t4);X3=Fp2.mul(t3,X3);X3=Fp2.sub(X3,t0);t0=Fp2.mul(t3,t1);Z3=Fp2.mul(t5,Z3);Z3=Fp2.add(Z3,t0);return new Point2(X3,Y3,Z3)}subtract(other){return this.add(other.negate())}is0(){return this.equals(Point2.ZERO)}wNAF(n2){return wnaf.wNAFCached(this,pointPrecomputes,n2,comp=>{const toInv=Fp2.invertBatch(comp.map(p=>p.pz));return comp.map((p,i)=>p.toAffine(toInv[i])).map(Point2.fromAffine)})}multiplyUnsafe(n2){const I=Point2.ZERO;if(n2===_0n)return I;assertGE(n2);if(n2===_1n$1)return this;const{endo:endo}=CURVE;if(!endo)return wnaf.unsafeLadder(this,n2);let{k1neg:k1neg,k1:k1,k2neg:k2neg,k2:k2}=endo.splitScalar(n2);let k1p=I;let k2p=I;let d=this;while(k1>_0n||k2>_0n){if(k1&_1n$1)k1p=k1p.add(d);if(k2&_1n$1)k2p=k2p.add(d);d=d.double();k1>>=_1n$1;k2>>=_1n$1}if(k1neg)k1p=k1p.negate();if(k2neg)k2p=k2p.negate();k2p=new Point2(Fp2.mul(k2p.px,endo.beta),k2p.py,k2p.pz);return k1p.add(k2p)}multiply(scalar){assertGE(scalar);let n2=scalar;let point5,fake;const{endo:endo}=CURVE;if(endo){const{k1neg:k1neg,k1:k1,k2neg:k2neg,k2:k2}=endo.splitScalar(n2);let{p:k1p,f:f1p}=this.wNAF(k1);let{p:k2p,f:f2p}=this.wNAF(k2);k1p=wnaf.constTimeNegate(k1neg,k1p);k2p=wnaf.constTimeNegate(k2neg,k2p);k2p=new Point2(Fp2.mul(k2p.px,endo.beta),k2p.py,k2p.pz);point5=k1p.add(k2p);fake=f1p.add(f2p)}else{const{p:p,f:f2}=this.wNAF(n2);point5=p;fake=f2}return Point2.normalizeZ([point5,fake])[0]}multiplyAndAddUnsafe(Q,a,b2){const G=Point2.BASE;const mul5=(P,a2)=>a2===_0n||a2===_1n$1||!P.equals(G)?P.multiplyUnsafe(a2):P.multiply(a2);const sum=mul5(this,a).add(mul5(Q,b2));return sum.is0()?void 0:sum}toAffine(iz){const{px:x,py:y,pz:z}=this;const is0=this.is0();if(iz==null)iz=is0?Fp2.ONE:Fp2.inv(z);const ax=Fp2.mul(x,iz);const ay=Fp2.mul(y,iz);const zz=Fp2.mul(z,iz);if(is0)return{x:Fp2.ZERO,y:Fp2.ZERO};if(!Fp2.eql(zz,Fp2.ONE))throw new Error("invZ was invalid");return{x:ax,y:ay}}isTorsionFree(){const{h:cofactor,isTorsionFree:isTorsionFree}=CURVE;if(cofactor===_1n$1)return true;if(isTorsionFree)return isTorsionFree(Point2,this);throw new Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){const{h:cofactor,clearCofactor:clearCofactor}=CURVE;if(cofactor===_1n$1)return this;if(clearCofactor)return clearCofactor(Point2,this);return this.multiplyUnsafe(CURVE.h)}toRawBytes(isCompressed=true){this.assertValidity();return toBytes2(Point2,this,isCompressed)}toHex(isCompressed=true){return bytesToHex(this.toRawBytes(isCompressed))}}Point2.BASE=new Point2(CURVE.Gx,CURVE.Gy,Fp2.ONE);Point2.ZERO=new Point2(Fp2.ZERO,Fp2.ONE,Fp2.ZERO);const _bits=CURVE.nBitLength;const wnaf=wNAF(Point2,CURVE.endo?Math.ceil(_bits/2):_bits);return{CURVE:CURVE,ProjectivePoint:Point2,normPrivateKeyToScalar:normPrivateKeyToScalar,weierstrassEquation:weierstrassEquation,isWithinCurveOrder:isWithinCurveOrder}}function validateOpts(curve){const opts=validateBasic(curve);validateObject(opts,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"});return Object.freeze({lowS:true,...opts})}function weierstrass(curveDef){const CURVE=validateOpts(curveDef);const{Fp:Fp2,n:CURVE_ORDER}=CURVE;const compressedLen=Fp2.BYTES+1;const uncompressedLen=2*Fp2.BYTES+1;function isValidFieldElement(num){return _0n<num&&num<Fp2.ORDER}function modN(a){return mod(a,CURVE_ORDER)}function invN(a){return invert(a,CURVE_ORDER)}const{ProjectivePoint:Point2,normPrivateKeyToScalar:normPrivateKeyToScalar,weierstrassEquation:weierstrassEquation,isWithinCurveOrder:isWithinCurveOrder}=weierstrassPoints({...CURVE,toBytes(_c2,point5,isCompressed){const a=point5.toAffine();const x=Fp2.toBytes(a.x);const cat=concatBytes;if(isCompressed){return cat(Uint8Array.from([point5.hasEvenY()?2:3]),x)}else{return cat(Uint8Array.from([4]),x,Fp2.toBytes(a.y))}},fromBytes(bytes2){const len=bytes2.length;const head=bytes2[0];const tail=bytes2.subarray(1);if(len===compressedLen&&(head===2||head===3)){const x=bytesToNumberBE(tail);if(!isValidFieldElement(x))throw new Error("Point is not on curve");const y2=weierstrassEquation(x);let y=Fp2.sqrt(y2);const isYOdd=(y&_1n$1)===_1n$1;const isHeadOdd=(head&1)===1;if(isHeadOdd!==isYOdd)y=Fp2.neg(y);return{x:x,y:y}}else if(len===uncompressedLen&&head===4){const x=Fp2.fromBytes(tail.subarray(0,Fp2.BYTES));const y=Fp2.fromBytes(tail.subarray(Fp2.BYTES,2*Fp2.BYTES));return{x:x,y:y}}else{throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`)}}});const numToNByteStr=num=>bytesToHex(numberToBytesBE(num,CURVE.nByteLength));function isBiggerThanHalfOrder(number2){const HALF=CURVE_ORDER>>_1n$1;return number2>HALF}function normalizeS(s){return isBiggerThanHalfOrder(s)?modN(-s):s}const slcNum=(b2,from,to)=>bytesToNumberBE(b2.slice(from,to));class Signature2{constructor(r,s,recovery){this.r=r;this.s=s;this.recovery=recovery;this.assertValidity()}static fromCompact(hex){const l=CURVE.nByteLength;hex=ensureBytes("compactSignature",hex,l*2);return new Signature2(slcNum(hex,0,l),slcNum(hex,l,2*l))}static fromDER(hex){const{r:r,s:s}=DER.toSig(ensureBytes("DER",hex));return new Signature2(r,s)}assertValidity(){if(!isWithinCurveOrder(this.r))throw new Error("r must be 0 < r < CURVE.n");if(!isWithinCurveOrder(this.s))throw new Error("s must be 0 < s < CURVE.n")}addRecoveryBit(recovery){return new Signature2(this.r,this.s,recovery)}recoverPublicKey(msgHash){const{r:r,s:s,recovery:rec}=this;const h=bits2int_modN(ensureBytes("msgHash",msgHash));if(rec==null||![0,1,2,3].includes(rec))throw new Error("recovery id invalid");const radj=rec===2||rec===3?r+CURVE.n:r;if(radj>=Fp2.ORDER)throw new Error("recovery id 2 or 3 invalid");const prefix=(rec&1)===0?"02":"03";const R=Point2.fromHex(prefix+numToNByteStr(radj));const ir=invN(radj);const u1=modN(-h*ir);const u2=modN(s*ir);const Q=Point2.BASE.multiplyAndAddUnsafe(R,u1,u2);if(!Q)throw new Error("point at infinify");Q.assertValidity();return Q}hasHighS(){return isBiggerThanHalfOrder(this.s)}normalizeS(){return this.hasHighS()?new Signature2(this.r,modN(-this.s),this.recovery):this}toDERRawBytes(){return hexToBytes(this.toDERHex())}toDERHex(){return DER.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return hexToBytes(this.toCompactHex())}toCompactHex(){return numToNByteStr(this.r)+numToNByteStr(this.s)}}const utils2={isValidPrivateKey(privateKey){try{normPrivateKeyToScalar(privateKey);return true}catch(error){return false}},normPrivateKeyToScalar:normPrivateKeyToScalar,randomPrivateKey:()=>{const length=getMinHashLength(CURVE.n);return mapHashToField(CURVE.randomBytes(length),CURVE.n)},precompute(windowSize=8,point5=Point2.BASE){point5._setWindowSize(windowSize);point5.multiply(BigInt(3));return point5}};function getPublicKey(privateKey,isCompressed=true){return Point2.fromPrivateKey(privateKey).toRawBytes(isCompressed)}function isProbPub(item){const arr=item instanceof Uint8Array;const str=typeof item==="string";const len=(arr||str)&&item.length;if(arr)return len===compressedLen||len===uncompressedLen;if(str)return len===2*compressedLen||len===2*uncompressedLen;if(item instanceof Point2)return true;return false}function getSharedSecret(privateA,publicB,isCompressed=true){if(isProbPub(privateA))throw new Error("first arg must be private key");if(!isProbPub(publicB))throw new Error("second arg must be public key");const b2=Point2.fromHex(publicB);return b2.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed)}const bits2int=CURVE.bits2int||function(bytes2){const num=bytesToNumberBE(bytes2);const delta=bytes2.length*8-CURVE.nBitLength;return delta>0?num>>BigInt(delta):num};const bits2int_modN=CURVE.bits2int_modN||function(bytes2){return modN(bits2int(bytes2))};const ORDER_MASK=bitMask(CURVE.nBitLength);function int2octets(num){if(typeof num!=="bigint")throw new Error("bigint expected");if(!(_0n<=num&&num<ORDER_MASK))throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);return numberToBytesBE(num,CURVE.nByteLength)}function prepSig(msgHash,privateKey,opts=defaultSigOpts){if(["recovered","canonical"].some(k=>k in opts))throw new Error("sign() legacy options not supported");const{hash:hash2,randomBytes:randomBytes2}=CURVE;let{lowS:lowS,prehash:prehash,extraEntropy:ent}=opts;if(lowS==null)lowS=true;msgHash=ensureBytes("msgHash",msgHash);if(prehash)msgHash=ensureBytes("prehashed msgHash",hash2(msgHash));const h1int=bits2int_modN(msgHash);const d=normPrivateKeyToScalar(privateKey);const seedArgs=[int2octets(d),int2octets(h1int)];if(ent!=null){const e=ent===true?randomBytes2(Fp2.BYTES):ent;seedArgs.push(ensureBytes("extraEntropy",e))}const seed=concatBytes(...seedArgs);const m=h1int;function k2sig(kBytes){const k=bits2int(kBytes);if(!isWithinCurveOrder(k))return;const ik=invN(k);const q=Point2.BASE.multiply(k).toAffine();const r=modN(q.x);if(r===_0n)return;const s=modN(ik*modN(m+r*d));if(s===_0n)return;let recovery=(q.x===r?0:2)|Number(q.y&_1n$1);let normS=s;if(lowS&&isBiggerThanHalfOrder(s)){normS=normalizeS(s);recovery^=1}return new Signature2(r,normS,recovery)}return{seed:seed,k2sig:k2sig}}const defaultSigOpts={lowS:CURVE.lowS,prehash:false};const defaultVerOpts={lowS:CURVE.lowS,prehash:false};function sign5(msgHash,privKey,opts=defaultSigOpts){const{seed:seed,k2sig:k2sig}=prepSig(msgHash,privKey,opts);const C=CURVE;const drbg=createHmacDrbg(C.hash.outputLen,C.nByteLength,C.hmac);return drbg(seed,k2sig)}Point2.BASE._setWindowSize(8);function verify5(signature2,msgHash,publicKey,opts=defaultVerOpts){var _a2;const sg=signature2;msgHash=ensureBytes("msgHash",msgHash);publicKey=ensureBytes("publicKey",publicKey);if("strict"in opts)throw new Error("options.strict was renamed to lowS");const{lowS:lowS,prehash:prehash}=opts;let _sig2=void 0;let P;try{if(typeof sg==="string"||sg instanceof Uint8Array){try{_sig2=Signature2.fromDER(sg)}catch(derError){if(!(derError instanceof DER.Err))throw derError;_sig2=Signature2.fromCompact(sg)}}else if(typeof sg==="object"&&typeof sg.r==="bigint"&&typeof sg.s==="bigint"){const{r:r2,s:s2}=sg;_sig2=new Signature2(r2,s2)}else{throw new Error("PARSE")}P=Point2.fromHex(publicKey)}catch(error){if(error.message==="PARSE")throw new Error(`signature must be Signature instance, Uint8Array or hex string`);return false}if(lowS&&_sig2.hasHighS())return false;if(prehash)msgHash=CURVE.hash(msgHash);const{r:r,s:s}=_sig2;const h=bits2int_modN(msgHash);const is=invN(s);const u1=modN(h*is);const u2=modN(r*is);const R=(_a2=Point2.BASE.multiplyAndAddUnsafe(P,u1,u2))==null?void 0:_a2.toAffine();if(!R)return false;const v=modN(R.x);return v===r}return{CURVE:CURVE,getPublicKey:getPublicKey,getSharedSecret:getSharedSecret,sign:sign5,verify:verify5,ProjectivePoint:Point2,Signature:Signature2,utils:utils2}}
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */function getHash(hash2){return{hash:hash2,hmac:(key2,...msgs)=>hmac$1(hash2,key2,concatBytes$1(...msgs)),randomBytes:randomBytes$4}}function createCurve(curveDef,defHash){const create=hash2=>weierstrass({...curveDef,...getHash(hash2)});return Object.freeze({...create(defHash),create:create})}
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const secp256k1P=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f");const secp256k1N=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141");const _1n=BigInt(1);const _2n=BigInt(2);const divNearest=(a,b2)=>(a+b2/_2n)/b2;function sqrtMod(y){const P=secp256k1P;const _3n2=BigInt(3),_6n=BigInt(6),_11n=BigInt(11),_22n=BigInt(22);const _23n=BigInt(23),_44n=BigInt(44),_88n=BigInt(88);const b2=y*y*y%P;const b3=b2*b2*y%P;const b6=pow2(b3,_3n2,P)*b3%P;const b9=pow2(b6,_3n2,P)*b3%P;const b11=pow2(b9,_2n,P)*b2%P;const b22=pow2(b11,_11n,P)*b11%P;const b44=pow2(b22,_22n,P)*b22%P;const b88=pow2(b44,_44n,P)*b44%P;const b176=pow2(b88,_88n,P)*b88%P;const b220=pow2(b176,_44n,P)*b44%P;const b223=pow2(b220,_3n2,P)*b3%P;const t1=pow2(b223,_23n,P)*b22%P;const t2=pow2(t1,_6n,P)*b2%P;const root2=pow2(t2,_2n,P);if(!Fp.eql(Fp.sqr(root2),y))throw new Error("Cannot find square root");return root2}const Fp=Field(secp256k1P,void 0,void 0,{sqrt:sqrtMod});const secp256k1=createCurve({a:BigInt(0),b:BigInt(7),Fp:Fp,n:secp256k1N,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:true,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:k=>{const n2=secp256k1N;const a1=BigInt("0x3086d221a7d46bcde86c90e49284eb15");const b1=-_1n*BigInt("0xe4437ed6010e88286f547fa90abfe4c3");const a2=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8");const b2=a1;const POW_2_128=BigInt("0x100000000000000000000000000000000");const c1=divNearest(b2*k,n2);const c2=divNearest(-b1*k,n2);let k1=mod(k-c1*a1-c2*a2,n2);let k2=mod(-c1*b1-c2*b2,n2);const k1neg=k1>POW_2_128;const k2neg=k2>POW_2_128;if(k1neg)k1=n2-k1;if(k2neg)k2=n2-k2;if(k1>POW_2_128||k2>POW_2_128){throw new Error("splitScalar: Endomorphism failed, k="+k)}return{k1neg:k1neg,k1:k1,k2neg:k2neg,k2:k2}}}},sha256$2);BigInt(0);secp256k1.ProjectivePoint;const ZeroAddress="0x0000000000000000000000000000000000000000";const ZeroHash="0x0000000000000000000000000000000000000000000000000000000000000000";const MessagePrefix="Ethereum Signed Message:\n";const BN_0$7=BigInt(0);const BN_1$2=BigInt(1);const BN_2$2=BigInt(2);const BN_27$1=BigInt(27);const BN_28$1=BigInt(28);const BN_35$1=BigInt(35);const _guard$3={};function toUint256(value){return zeroPadValue(toBeArray(value),32)}let Signature$2=(_b=class{constructor(guard,r,s,v){__privateAdd(this,_r);__privateAdd(this,_s);__privateAdd(this,_v);__privateAdd(this,_networkV);assertPrivate(guard,_guard$3,"Signature");__privateSet(this,_r,r);__privateSet(this,_s,s);__privateSet(this,_v,v);__privateSet(this,_networkV,null)}get r(){return __privateGet(this,_r)}set r(value){assertArgument(dataLength(value)===32,"invalid r","value",value);__privateSet(this,_r,hexlify$2(value))}get s(){return __privateGet(this,_s)}set s(_value2){assertArgument(dataLength(_value2)===32,"invalid s","value",_value2);const value=hexlify$2(_value2);assertArgument(parseInt(value.substring(0,3))<8,"non-canonical s","value",value);__privateSet(this,_s,value)}get v(){return __privateGet(this,_v)}set v(value){const v=getNumber(value,"value");assertArgument(v===27||v===28,"invalid v","v",value);__privateSet(this,_v,v)}get networkV(){return __privateGet(this,_networkV)}get legacyChainId(){const v=this.networkV;if(v==null){return null}return _b.getChainId(v)}get yParity(){return this.v===27?0:1}get yParityAndS(){const yParityAndS=getBytes(this.s);if(this.yParity){yParityAndS[0]|=128}return hexlify$2(yParityAndS)}get compactSerialized(){return concat$2([this.r,this.yParityAndS])}get serialized(){return concat$2([this.r,this.s,this.yParity?"0x1c":"0x1b"])}[Symbol.for("nodejs.util.inspect.custom")](){return`Signature { r: "${this.r}", s: "${this.s}", yParity: ${this.yParity}, networkV: ${this.networkV} }`}clone(){const clone=new _b(_guard$3,this.r,this.s,this.v);if(this.networkV){__privateSet(clone,_networkV,this.networkV)}return clone}toJSON(){const networkV=this.networkV;return{_type:"signature",networkV:networkV!=null?networkV.toString():null,r:this.r,s:this.s,v:this.v}}static getChainId(v){const bv=getBigInt(v,"v");if(bv==BN_27$1||bv==BN_28$1){return BN_0$7}assertArgument(bv>=BN_35$1,"invalid EIP-155 v","v",v);return(bv-BN_35$1)/BN_2$2}static getChainIdV(chainId,v){return getBigInt(chainId)*BN_2$2+BigInt(35+v-27)}static getNormalizedV(v){const bv=getBigInt(v);if(bv===BN_0$7||bv===BN_27$1){return 27}if(bv===BN_1$2||bv===BN_28$1){return 28}assertArgument(bv>=BN_35$1,"invalid v","v",v);return bv&BN_1$2?27:28}static from(sig){function assertError(check,message){assertArgument(check,message,"signature",sig)}if(sig==null){return new _b(_guard$3,ZeroHash,ZeroHash,27)}if(typeof sig==="string"){const bytes2=getBytes(sig,"signature");if(bytes2.length===64){const r2=hexlify$2(bytes2.slice(0,32));const s2=bytes2.slice(32,64);const v2=s2[0]&128?28:27;s2[0]&=127;return new _b(_guard$3,r2,hexlify$2(s2),v2)}if(bytes2.length===65){const r2=hexlify$2(bytes2.slice(0,32));const s2=bytes2.slice(32,64);assertError((s2[0]&128)===0,"non-canonical s");const v2=_b.getNormalizedV(bytes2[64]);return new _b(_guard$3,r2,hexlify$2(s2),v2)}assertError(false,"invalid raw signature length")}if(sig instanceof _b){return sig.clone()}const _r2=sig.r;assertError(_r2!=null,"missing r");const r=toUint256(_r2);const s=function(s2,yParityAndS){if(s2!=null){return toUint256(s2)}if(yParityAndS!=null){assertError(isHexString$2(yParityAndS,32),"invalid yParityAndS");const bytes2=getBytes(yParityAndS);bytes2[0]&=127;return hexlify$2(bytes2)}assertError(false,"missing s")}(sig.s,sig.yParityAndS);assertError((getBytes(s)[0]&128)==0,"non-canonical s");const{networkV:networkV,v:v}=function(_v2,yParityAndS,yParity){if(_v2!=null){const v2=getBigInt(_v2);return{networkV:v2>=BN_35$1?v2:void 0,v:_b.getNormalizedV(v2)}}if(yParityAndS!=null){assertError(isHexString$2(yParityAndS,32),"invalid yParityAndS");return{v:getBytes(yParityAndS)[0]&128?28:27}}if(yParity!=null){switch(getNumber(yParity,"sig.yParity")){case 0:return{v:27};case 1:return{v:28}}assertError(false,"invalid yParity")}assertError(false,"missing v")}(sig.v,sig.yParityAndS,sig.yParity);const result=new _b(_guard$3,r,s,v);if(networkV){__privateSet(result,_networkV,networkV)}assertError(sig.yParity==null||getNumber(sig.yParity,"sig.yParity")===result.yParity,"yParity mismatch");assertError(sig.yParityAndS==null||sig.yParityAndS===result.yParityAndS,"yParityAndS mismatch");return result}},_r=new WeakMap,_s=new WeakMap,_v=new WeakMap,_networkV=new WeakMap,_b);let SigningKey$2=(_c=class{constructor(privateKey){__privateAdd(this,_privateKey);assertArgument(dataLength(privateKey)===32,"invalid private key","privateKey","[REDACTED]");__privateSet(this,_privateKey,hexlify$2(privateKey))}get privateKey(){return __privateGet(this,_privateKey)}get publicKey(){return _c.computePublicKey(__privateGet(this,_privateKey))}get compressedPublicKey(){return _c.computePublicKey(__privateGet(this,_privateKey),true)}sign(digest){assertArgument(dataLength(digest)===32,"invalid digest length","digest",digest);const sig=secp256k1.sign(getBytesCopy(digest),getBytesCopy(__privateGet(this,_privateKey)),{lowS:true});return Signature$2.from({r:toBeHex(sig.r,32),s:toBeHex(sig.s,32),v:sig.recovery?28:27})}computeSharedSecret(other){const pubKey=_c.computePublicKey(other);return hexlify$2(secp256k1.getSharedSecret(getBytesCopy(__privateGet(this,_privateKey)),getBytes(pubKey),false))}static computePublicKey(key2,compressed){let bytes2=getBytes(key2,"key");if(bytes2.length===32){const pubKey=secp256k1.getPublicKey(bytes2,!!compressed);return hexlify$2(pubKey)}if(bytes2.length===64){const pub=new Uint8Array(65);pub[0]=4;pub.set(bytes2,1);bytes2=pub}const point5=secp256k1.ProjectivePoint.fromHex(bytes2);return hexlify$2(point5.toRawBytes(compressed))}static recoverPublicKey(digest,signature2){assertArgument(dataLength(digest)===32,"invalid digest length","digest",digest);const sig=Signature$2.from(signature2);let secpSig=secp256k1.Signature.fromCompact(getBytesCopy(concat$2([sig.r,sig.s])));secpSig=secpSig.addRecoveryBit(sig.yParity);const pubKey=secpSig.recoverPublicKey(getBytesCopy(digest));assertArgument(pubKey!=null,"invalid signature for digest","signature",signature2);return"0x"+pubKey.toHex(false)}static addPoints(p0,p1,compressed){const pub0=secp256k1.ProjectivePoint.fromHex(_c.computePublicKey(p0).substring(2));const pub1=secp256k1.ProjectivePoint.fromHex(_c.computePublicKey(p1).substring(2));return"0x"+pub0.add(pub1).toHex(!!compressed)}},_privateKey=new WeakMap,_c);const BN_0$6=BigInt(0);const BN_36=BigInt(36);function getChecksumAddress$2(address){address=address.toLowerCase();const chars=address.substring(2).split("");const expanded=new Uint8Array(40);for(let i=0;i<40;i++){expanded[i]=chars[i].charCodeAt(0)}const hashed=getBytes(keccak256$2(expanded));for(let i=0;i<40;i+=2){if(hashed[i>>1]>>4>=8){chars[i]=chars[i].toUpperCase()}if((hashed[i>>1]&15)>=8){chars[i+1]=chars[i+1].toUpperCase()}}return"0x"+chars.join("")}const ibanLookup$2={};for(let i=0;i<10;i++){ibanLookup$2[String(i)]=String(i)}for(let i=0;i<26;i++){ibanLookup$2[String.fromCharCode(65+i)]=String(10+i)}const safeDigits$2=15;function ibanChecksum$2(address){address=address.toUpperCase();address=address.substring(4)+address.substring(0,2)+"00";let expanded=address.split("").map(c=>ibanLookup$2[c]).join("");while(expanded.length>=safeDigits$2){let block=expanded.substring(0,safeDigits$2);expanded=parseInt(block,10)%97+expanded.substring(block.length)}let checksum2=String(98-parseInt(expanded,10)%97);while(checksum2.length<2){checksum2="0"+checksum2}return checksum2}const Base36=function(){const result={};for(let i=0;i<36;i++){const key2="0123456789abcdefghijklmnopqrstuvwxyz"[i];result[key2]=BigInt(i)}return result}();function fromBase36(value){value=value.toLowerCase();let result=BN_0$6;for(let i=0;i<value.length;i++){result=result*BN_36+Base36[value[i]]}return result}function getAddress$2(address){assertArgument(typeof address==="string","invalid address","address",address);if(address.match(/^(0x)?[0-9a-fA-F]{40}$/)){if(!address.startsWith("0x")){address="0x"+address}const result=getChecksumAddress$2(address);assertArgument(!address.match(/([A-F].*[a-f])|([a-f].*[A-F])/)||result===address,"bad address checksum","address",address);return result}if(address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)){assertArgument(address.substring(2,4)===ibanChecksum$2(address),"bad icap checksum","address",address);let result=fromBase36(address.substring(4)).toString(16);while(result.length<40){result="0"+result}return getChecksumAddress$2("0x"+result)}assertArgument(false,"invalid address","address",address)}function getCreateAddress(tx){const from=getAddress$2(tx.from);const nonce=getBigInt(tx.nonce,"tx.nonce");let nonceHex=nonce.toString(16);if(nonceHex==="0"){nonceHex="0x"}else if(nonceHex.length%2){nonceHex="0x0"+nonceHex}else{nonceHex="0x"+nonceHex}return getAddress$2(dataSlice(keccak256$2(encodeRlp([from,nonceHex])),12))}function isAddressable(value){return value&&typeof value.getAddress==="function"}function isAddress(value){try{getAddress$2(value);return true}catch(error){}return false}async function checkAddress(target,promise){const result=await promise;if(result==null||result==="0x0000000000000000000000000000000000000000"){assert$7(typeof target!=="string","unconfigured name","UNCONFIGURED_NAME",{value:target});assertArgument(false,"invalid AddressLike value; did not resolve to a value address","target",target)}return getAddress$2(result)}function resolveAddress(target,resolver){if(typeof target==="string"){if(target.match(/^0x[0-9a-f]{40}$/i)){return getAddress$2(target)}assert$7(resolver!=null,"ENS resolution requires a provider","UNSUPPORTED_OPERATION",{operation:"resolveName"});return checkAddress(target,resolver.resolveName(target))}else if(isAddressable(target)){return checkAddress(target,target.getAddress())}else if(target&&typeof target.then==="function"){return checkAddress(target,target)}assertArgument(false,"unsupported addressable value","target",target)}const _gaurd={};function n(value,width){let signed2=false;if(width<0){signed2=true;width*=-1}return new Typed(_gaurd,`${signed2?"":"u"}int${width}`,value,{signed:signed2,width:width})}function b(value,size){return new Typed(_gaurd,`bytes${size?size:""}`,value,{size:size})}const _typedSymbol=Symbol.for("_ethers_typed");const _Typed=class _Typed{constructor(gaurd,type,value,options){__publicField(this,"type");__publicField(this,"value");__privateAdd(this,_options);__publicField(this,"_typedSymbol");if(options==null){options=null}assertPrivate(_gaurd,gaurd,"Typed");defineProperties(this,{_typedSymbol:_typedSymbol,type:type,value:value});__privateSet(this,_options,options);this.format()}format(){if(this.type==="array"){throw new Error("")}else if(this.type==="dynamicArray"){throw new Error("")}else if(this.type==="tuple"){return`tuple(${this.value.map(v=>v.format()).join(",")})`}return this.type}defaultValue(){return 0}minValue(){return 0}maxValue(){return 0}isBigInt(){return!!this.type.match(/^u?int[0-9]+$/)}isData(){return this.type.startsWith("bytes")}isString(){return this.type==="string"}get tupleName(){if(this.type!=="tuple"){throw TypeError("not a tuple")}return __privateGet(this,_options)}get arrayLength(){if(this.type!=="array"){throw TypeError("not an array")}if(__privateGet(this,_options)===true){return-1}if(__privateGet(this,_options)===false){return this.value.length}return null}static from(type,value){return new _Typed(_gaurd,type,value)}static uint8(v){return n(v,8)}static uint16(v){return n(v,16)}static uint24(v){return n(v,24)}static uint32(v){return n(v,32)}static uint40(v){return n(v,40)}static uint48(v){return n(v,48)}static uint56(v){return n(v,56)}static uint64(v){return n(v,64)}static uint72(v){return n(v,72)}static uint80(v){return n(v,80)}static uint88(v){return n(v,88)}static uint96(v){return n(v,96)}static uint104(v){return n(v,104)}static uint112(v){return n(v,112)}static uint120(v){return n(v,120)}static uint128(v){return n(v,128)}static uint136(v){return n(v,136)}static uint144(v){return n(v,144)}static uint152(v){return n(v,152)}static uint160(v){return n(v,160)}static uint168(v){return n(v,168)}static uint176(v){return n(v,176)}static uint184(v){return n(v,184)}static uint192(v){return n(v,192)}static uint200(v){return n(v,200)}static uint208(v){return n(v,208)}static uint216(v){return n(v,216)}static uint224(v){return n(v,224)}static uint232(v){return n(v,232)}static uint240(v){return n(v,240)}static uint248(v){return n(v,248)}static uint256(v){return n(v,256)}static uint(v){return n(v,256)}static int8(v){return n(v,-8)}static int16(v){return n(v,-16)}static int24(v){return n(v,-24)}static int32(v){return n(v,-32)}static int40(v){return n(v,-40)}static int48(v){return n(v,-48)}static int56(v){return n(v,-56)}static int64(v){return n(v,-64)}static int72(v){return n(v,-72)}static int80(v){return n(v,-80)}static int88(v){return n(v,-88)}static int96(v){return n(v,-96)}static int104(v){return n(v,-104)}static int112(v){return n(v,-112)}static int120(v){return n(v,-120)}static int128(v){return n(v,-128)}static int136(v){return n(v,-136)}static int144(v){return n(v,-144)}static int152(v){return n(v,-152)}static int160(v){return n(v,-160)}static int168(v){return n(v,-168)}static int176(v){return n(v,-176)}static int184(v){return n(v,-184)}static int192(v){return n(v,-192)}static int200(v){return n(v,-200)}static int208(v){return n(v,-208)}static int216(v){return n(v,-216)}static int224(v){return n(v,-224)}static int232(v){return n(v,-232)}static int240(v){return n(v,-240)}static int248(v){return n(v,-248)}static int256(v){return n(v,-256)}static int(v){return n(v,-256)}static bytes1(v){return b(v,1)}static bytes2(v){return b(v,2)}static bytes3(v){return b(v,3)}static bytes4(v){return b(v,4)}static bytes5(v){return b(v,5)}static bytes6(v){return b(v,6)}static bytes7(v){return b(v,7)}static bytes8(v){return b(v,8)}static bytes9(v){return b(v,9)}static bytes10(v){return b(v,10)}static bytes11(v){return b(v,11)}static bytes12(v){return b(v,12)}static bytes13(v){return b(v,13)}static bytes14(v){return b(v,14)}static bytes15(v){return b(v,15)}static bytes16(v){return b(v,16)}static bytes17(v){return b(v,17)}static bytes18(v){return b(v,18)}static bytes19(v){return b(v,19)}static bytes20(v){return b(v,20)}static bytes21(v){return b(v,21)}static bytes22(v){return b(v,22)}static bytes23(v){return b(v,23)}static bytes24(v){return b(v,24)}static bytes25(v){return b(v,25)}static bytes26(v){return b(v,26)}static bytes27(v){return b(v,27)}static bytes28(v){return b(v,28)}static bytes29(v){return b(v,29)}static bytes30(v){return b(v,30)}static bytes31(v){return b(v,31)}static bytes32(v){return b(v,32)}static address(v){return new _Typed(_gaurd,"address",v)}static bool(v){return new _Typed(_gaurd,"bool",!!v)}static bytes(v){return new _Typed(_gaurd,"bytes",v)}static string(v){return new _Typed(_gaurd,"string",v)}static array(v,dynamic){throw new Error("not implemented yet")}static tuple(v,name){throw new Error("not implemented yet")}static overrides(v){return new _Typed(_gaurd,"overrides",Object.assign({},v))}static isTyped(value){return value&&typeof value==="object"&&"_typedSymbol"in value&&value._typedSymbol===_typedSymbol}static dereference(value,type){if(_Typed.isTyped(value)){if(value.type!==type){throw new Error(`invalid type: expecetd ${type}, got ${value.type}`)}return value.value}return value}};_options=new WeakMap;let Typed=_Typed;class AddressCoder extends Coder{constructor(localName){super("address","address",localName,false)}defaultValue(){return"0x0000000000000000000000000000000000000000"}encode(writer,_value2){let value=Typed.dereference(_value2,"string");try{value=getAddress$2(value)}catch(error){return this._throwError(error.message,_value2)}return writer.writeValue(value)}decode(reader){return getAddress$2(toBeHex(reader.readValue(),20))}}class AnonymousCoder extends Coder{constructor(coder){super(coder.name,coder.type,"_",coder.dynamic);__publicField(this,"coder");this.coder=coder}defaultValue(){return this.coder.defaultValue()}encode(writer,value){return this.coder.encode(writer,value)}decode(reader){return this.coder.decode(reader)}}function pack(writer,coders,values){let arrayValues=[];if(Array.isArray(values)){arrayValues=values}else if(values&&typeof values==="object"){let unique={};arrayValues=coders.map(coder=>{const name=coder.localName;assert$7(name,"cannot encode object for signature with missing names","INVALID_ARGUMENT",{argument:"values",info:{coder:coder},value:values});assert$7(!unique[name],"cannot encode object for signature with duplicate names","INVALID_ARGUMENT",{argument:"values",info:{coder:coder},value:values});unique[name]=true;return values[name]})}else{assertArgument(false,"invalid tuple value","tuple",values)}assertArgument(coders.length===arrayValues.length,"types/value length mismatch","tuple",values);let staticWriter=new Writer;let dynamicWriter=new Writer;let updateFuncs=[];coders.forEach((coder,index)=>{let value=arrayValues[index];if(coder.dynamic){let dynamicOffset=dynamicWriter.length;coder.encode(dynamicWriter,value);let updateFunc=staticWriter.writeUpdatableValue();updateFuncs.push(baseOffset=>{updateFunc(baseOffset+dynamicOffset)})}else{coder.encode(staticWriter,value)}});updateFuncs.forEach(func=>{func(staticWriter.length)});let length=writer.appendWriter(staticWriter);length+=writer.appendWriter(dynamicWriter);return length}function unpack(reader,coders){let values=[];let keys2=[];let baseReader=reader.subReader(0);coders.forEach(coder=>{let value=null;if(coder.dynamic){let offset=reader.readIndex();let offsetReader=baseReader.subReader(offset);try{value=coder.decode(offsetReader)}catch(error){if(isError(error,"BUFFER_OVERRUN")){throw error}value=error;value.baseType=coder.name;value.name=coder.localName;value.type=coder.type}}else{try{value=coder.decode(reader)}catch(error){if(isError(error,"BUFFER_OVERRUN")){throw error}value=error;value.baseType=coder.name;value.name=coder.localName;value.type=coder.type}}if(value==void 0){throw new Error("investigate")}values.push(value);keys2.push(coder.localName||null)});return Result.fromItems(values,keys2)}class ArrayCoder extends Coder{constructor(coder,length,localName){const type=coder.type+"["+(length>=0?length:"")+"]";const dynamic=length===-1||coder.dynamic;super("array",type,localName,dynamic);__publicField(this,"coder");__publicField(this,"length");defineProperties(this,{coder:coder,length:length})}defaultValue(){const defaultChild=this.coder.defaultValue();const result=[];for(let i=0;i<this.length;i++){result.push(defaultChild)}return result}encode(writer,_value2){const value=Typed.dereference(_value2,"array");if(!Array.isArray(value)){this._throwError("expected array value",value)}let count=this.length;if(count===-1){count=value.length;writer.writeValue(value.length)}assertArgumentCount(value.length,count,"coder array"+(this.localName?" "+this.localName:""));let coders=[];for(let i=0;i<value.length;i++){coders.push(this.coder)}return pack(writer,coders,value)}decode(reader){let count=this.length;if(count===-1){count=reader.readIndex();assert$7(count*WordSize<=reader.dataLength,"insufficient data length","BUFFER_OVERRUN",{buffer:reader.bytes,offset:count*WordSize,length:reader.dataLength})}let coders=[];for(let i=0;i<count;i++){coders.push(new AnonymousCoder(this.coder))}return unpack(reader,coders)}}class BooleanCoder extends Coder{constructor(localName){super("bool","bool",localName,false)}defaultValue(){return false}encode(writer,_value2){const value=Typed.dereference(_value2,"bool");return writer.writeValue(value?1:0)}decode(reader){return!!reader.readValue()}}class DynamicBytesCoder extends Coder{constructor(type,localName){super(type,type,localName,true)}defaultValue(){return"0x"}encode(writer,value){value=getBytesCopy(value);let length=writer.writeValue(value.length);length+=writer.writeBytes(value);return length}decode(reader){return reader.readBytes(reader.readIndex(),true)}}class BytesCoder extends DynamicBytesCoder{constructor(localName){super("bytes",localName)}decode(reader){return hexlify$2(super.decode(reader))}}class FixedBytesCoder extends Coder{constructor(size,localName){let name="bytes"+String(size);super(name,name,localName,false);__publicField(this,"size");defineProperties(this,{size:size},{size:"number"})}defaultValue(){return"0x0000000000000000000000000000000000000000000000000000000000000000".substring(0,2+this.size*2)}encode(writer,_value2){let data=getBytesCopy(Typed.dereference(_value2,this.type));if(data.length!==this.size){this._throwError("incorrect data length",_value2)}return writer.writeBytes(data)}decode(reader){return hexlify$2(reader.readBytes(this.size))}}const Empty=new Uint8Array([]);class NullCoder extends Coder{constructor(localName){super("null","",localName,false)}defaultValue(){return null}encode(writer,value){if(value!=null){this._throwError("not null",value)}return writer.writeBytes(Empty)}decode(reader){reader.readBytes(0);return null}}const BN_0$5=BigInt(0);const BN_1$1=BigInt(1);const BN_MAX_UINT256$1=BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");class NumberCoder extends Coder{constructor(size,signed2,localName){const name=(signed2?"int":"uint")+size*8;super(name,name,localName,false);__publicField(this,"size");__publicField(this,"signed");defineProperties(this,{size:size,signed:signed2},{size:"number",signed:"boolean"})}defaultValue(){return 0}encode(writer,_value2){let value=getBigInt(Typed.dereference(_value2,this.type));let maxUintValue=mask(BN_MAX_UINT256$1,WordSize*8);if(this.signed){let bounds=mask(maxUintValue,this.size*8-1);if(value>bounds||value<-(bounds+BN_1$1)){this._throwError("value out-of-bounds",_value2)}value=toTwos(value,8*WordSize)}else if(value<BN_0$5||value>mask(maxUintValue,this.size*8)){this._throwError("value out-of-bounds",_value2)}return writer.writeValue(value)}decode(reader){let value=mask(reader.readValue(),this.size*8);if(this.signed){value=fromTwos(value,this.size*8)}return value}}class StringCoder extends DynamicBytesCoder{constructor(localName){super("string",localName)}defaultValue(){return""}encode(writer,_value2){return super.encode(writer,toUtf8Bytes$1(Typed.dereference(_value2,"string")))}decode(reader){return toUtf8String$1(super.decode(reader))}}class TupleCoder extends Coder{constructor(coders,localName){let dynamic=false;const types=[];coders.forEach(coder=>{if(coder.dynamic){dynamic=true}types.push(coder.type)});const type="tuple("+types.join(",")+")";super("tuple",type,localName,dynamic);__publicField(this,"coders");defineProperties(this,{coders:Object.freeze(coders.slice())})}defaultValue(){const values=[];this.coders.forEach(coder=>{values.push(coder.defaultValue())});const uniqueNames=this.coders.reduce((accum,coder)=>{const name=coder.localName;if(name){if(!accum[name]){accum[name]=0}accum[name]++}return accum},{});this.coders.forEach((coder,index)=>{let name=coder.localName;if(!name||uniqueNames[name]!==1){return}if(name==="length"){name="_length"}if(values[name]!=null){return}values[name]=values[index]});return Object.freeze(values)}encode(writer,_value2){const value=Typed.dereference(_value2,"tuple");return pack(writer,this.coders,value)}decode(reader){return unpack(reader,this.coders)}}function accessSetify$1(addr,storageKeys){return{address:getAddress$2(addr),storageKeys:storageKeys.map((storageKey,index)=>{assertArgument(isHexString$2(storageKey,32),"invalid slot",`storageKeys[${index}]`,storageKey);return storageKey.toLowerCase()})}}function accessListify$1(value){if(Array.isArray(value)){return value.map((set,index)=>{if(Array.isArray(set)){assertArgument(set.length===2,"invalid slot set",`value[${index}]`,set);return accessSetify$1(set[0],set[1])}assertArgument(set!=null&&typeof set==="object","invalid address-slot set","value",value);return accessSetify$1(set.address,set.storageKeys)})}assertArgument(value!=null&&typeof value==="object","invalid access list","value",value);const result=Object.keys(value).map(addr=>{const storageKeys=value[addr].reduce((accum,storageKey)=>{accum[storageKey]=true;return accum},{});return accessSetify$1(addr,Object.keys(storageKeys).sort())});result.sort((a,b2)=>a.address.localeCompare(b2.address));return result}function authorizationify(auth){return{address:getAddress$2(auth.address),nonce:getBigInt(auth.nonce!=null?auth.nonce:0),chainId:getBigInt(auth.chainId!=null?auth.chainId:0),signature:Signature$2.from(auth.signature)}}function computeAddress$1(key2){let pubkey;if(typeof key2==="string"){pubkey=SigningKey$2.computePublicKey(key2,false)}else{pubkey=key2.publicKey}return getAddress$2(keccak256$2("0x"+pubkey.substring(4)).substring(26))}function recoverAddress(digest,signature2){return computeAddress$1(SigningKey$2.recoverPublicKey(digest,signature2))}const BN_0$4=BigInt(0);const BN_2$1=BigInt(2);const BN_27=BigInt(27);const BN_28=BigInt(28);const BN_35=BigInt(35);const BN_MAX_UINT=BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");const BLOB_SIZE=4096*32;function getKzgLibrary(kzg){const blobToKzgCommitment=blob=>{if("computeBlobProof"in kzg){if("blobToKzgCommitment"in kzg&&typeof kzg.blobToKzgCommitment==="function"){return getBytes(kzg.blobToKzgCommitment(hexlify$2(blob)))}}else if("blobToKzgCommitment"in kzg&&typeof kzg.blobToKzgCommitment==="function"){return getBytes(kzg.blobToKzgCommitment(blob))}if("blobToKZGCommitment"in kzg&&typeof kzg.blobToKZGCommitment==="function"){return getBytes(kzg.blobToKZGCommitment(hexlify$2(blob)))}assertArgument(false,"unsupported KZG library","kzg",kzg)};const computeBlobKzgProof=(blob,commitment)=>{if("computeBlobProof"in kzg&&typeof kzg.computeBlobProof==="function"){return getBytes(kzg.computeBlobProof(hexlify$2(blob),hexlify$2(commitment)))}if("computeBlobKzgProof"in kzg&&typeof kzg.computeBlobKzgProof==="function"){return kzg.computeBlobKzgProof(blob,commitment)}if("computeBlobKZGProof"in kzg&&typeof kzg.computeBlobKZGProof==="function"){return getBytes(kzg.computeBlobKZGProof(hexlify$2(blob),hexlify$2(commitment)))}assertArgument(false,"unsupported KZG library","kzg",kzg)};return{blobToKzgCommitment:blobToKzgCommitment,computeBlobKzgProof:computeBlobKzgProof}}function getVersionedHash(version2,hash2){let versioned=version2.toString(16);while(versioned.length<2){versioned="0"+versioned}versioned+=sha256$1(hash2).substring(4);return"0x"+versioned}function handleAddress(value){if(value==="0x"){return null}return getAddress$2(value)}function handleAccessList(value,param){try{return accessListify$1(value)}catch(error){assertArgument(false,error.message,param,value)}}function handleAuthorizationList(value,param){try{if(!Array.isArray(value)){throw new Error("authorizationList: invalid array")}const result=[];for(let i=0;i<value.length;i++){const auth=value[i];if(!Array.isArray(auth)){throw new Error(`authorization[${i}]: invalid array`)}if(auth.length!==6){throw new Error(`authorization[${i}]: wrong length`)}if(!auth[1]){throw new Error(`authorization[${i}]: null address`)}result.push({address:handleAddress(auth[1]),nonce:handleUint(auth[2],"nonce"),chainId:handleUint(auth[0],"chainId"),signature:Signature$2.from({yParity:handleNumber(auth[3],"yParity"),r:zeroPadValue(auth[4],32),s:zeroPadValue(auth[5],32)})})}return result}catch(error){assertArgument(false,error.message,param,value)}}function handleNumber(_value2,param){if(_value2==="0x"){return 0}return getNumber(_value2,param)}function handleUint(_value2,param){if(_value2==="0x"){return BN_0$4}const value=getBigInt(_value2,param);assertArgument(value<=BN_MAX_UINT,"value exceeds uint size",param,value);return value}function formatNumber$1(_value2,name){const value=getBigInt(_value2,"value");const result=toBeArray(value);assertArgument(result.length<=32,`value too large`,`tx.${name}`,value);return result}function formatAccessList$1(value){return accessListify$1(value).map(set=>[set.address,set.storageKeys])}function formatAuthorizationList(value){return value.map(a=>[formatNumber$1(a.chainId,"chainId"),a.address,formatNumber$1(a.nonce,"nonce"),formatNumber$1(a.signature.yParity,"yParity"),toBeArray(a.signature.r),toBeArray(a.signature.s)])}function formatHashes(value,param){assertArgument(Array.isArray(value),`invalid ${param}`,"value",value);for(let i=0;i<value.length;i++){assertArgument(isHexString$2(value[i],32),"invalid ${ param } hash",`value[${i}]`,value[i])}return value}function _parseLegacy(data){const fields=decodeRlp(data);assertArgument(Array.isArray(fields)&&(fields.length===9||fields.length===6),"invalid field count for legacy transaction","data",data);const tx={type:0,nonce:handleNumber(fields[0],"nonce"),gasPrice:handleUint(fields[1],"gasPrice"),gasLimit:handleUint(fields[2],"gasLimit"),to:handleAddress(fields[3]),value:handleUint(fields[4],"value"),data:hexlify$2(fields[5]),chainId:BN_0$4};if(fields.length===6){return tx}const v=handleUint(fields[6],"v");const r=handleUint(fields[7],"r");const s=handleUint(fields[8],"s");if(r===BN_0$4&&s===BN_0$4){tx.chainId=v}else{let chainId=(v-BN_35)/BN_2$1;if(chainId<BN_0$4){chainId=BN_0$4}tx.chainId=chainId;assertArgument(chainId!==BN_0$4||(v===BN_27||v===BN_28),"non-canonical legacy v","v",fields[6]);tx.signature=Signature$2.from({r:zeroPadValue(fields[7],32),s:zeroPadValue(fields[8],32),v:v})}return tx}function _serializeLegacy(tx,sig){const fields=[formatNumber$1(tx.nonce,"nonce"),formatNumber$1(tx.gasPrice||0,"gasPrice"),formatNumber$1(tx.gasLimit,"gasLimit"),tx.to||"0x",formatNumber$1(tx.value,"value"),tx.data];let chainId=BN_0$4;if(tx.chainId!=BN_0$4){chainId=getBigInt(tx.chainId,"tx.chainId");assertArgument(!sig||sig.networkV==null||sig.legacyChainId===chainId,"tx.chainId/sig.v mismatch","sig",sig)}else if(tx.signature){const legacy=tx.signature.legacyChainId;if(legacy!=null){chainId=legacy}}if(!sig){if(chainId!==BN_0$4){fields.push(toBeArray(chainId));fields.push("0x");fields.push("0x")}return encodeRlp(fields)}let v=BigInt(27+sig.yParity);if(chainId!==BN_0$4){v=Signature$2.getChainIdV(chainId,sig.v)}else if(BigInt(sig.v)!==v){assertArgument(false,"tx.chainId/sig.v mismatch","sig",sig)}fields.push(toBeArray(v));fields.push(toBeArray(sig.r));fields.push(toBeArray(sig.s));return encodeRlp(fields)}function _parseEipSignature(tx,fields){let yParity;try{yParity=handleNumber(fields[0],"yParity");if(yParity!==0&&yParity!==1){throw new Error("bad yParity")}}catch(error){assertArgument(false,"invalid yParity","yParity",fields[0])}const r=zeroPadValue(fields[1],32);const s=zeroPadValue(fields[2],32);const signature2=Signature$2.from({r:r,s:s,yParity:yParity});tx.signature=signature2}function _parseEip1559(data){const fields=decodeRlp(getBytes(data).slice(1));assertArgument(Array.isArray(fields)&&(fields.length===9||fields.length===12),"invalid field count for transaction type: 2","data",hexlify$2(data));const tx={type:2,chainId:handleUint(fields[0],"chainId"),nonce:handleNumber(fields[1],"nonce"),maxPriorityFeePerGas:handleUint(fields[2],"maxPriorityFeePerGas"),maxFeePerGas:handleUint(fields[3],"maxFeePerGas"),gasPrice:null,gasLimit:handleUint(fields[4],"gasLimit"),to:handleAddress(fields[5]),value:handleUint(fields[6],"value"),data:hexlify$2(fields[7]),accessList:handleAccessList(fields[8],"accessList")};if(fields.length===9){return tx}_parseEipSignature(tx,fields.slice(9));return tx}function _serializeEip1559$1(tx,sig){const fields=[formatNumber$1(tx.chainId,"chainId"),formatNumber$1(tx.nonce,"nonce"),formatNumber$1(tx.maxPriorityFeePerGas||0,"maxPriorityFeePerGas"),formatNumber$1(tx.maxFeePerGas||0,"maxFeePerGas"),formatNumber$1(tx.gasLimit,"gasLimit"),tx.to||"0x",formatNumber$1(tx.value,"value"),tx.data,formatAccessList$1(tx.accessList||[])];if(sig){fields.push(formatNumber$1(sig.yParity,"yParity"));fields.push(toBeArray(sig.r));fields.push(toBeArray(sig.s))}return concat$2(["0x02",encodeRlp(fields)])}function _parseEip2930(data){const fields=decodeRlp(getBytes(data).slice(1));assertArgument(Array.isArray(fields)&&(fields.length===8||fields.length===11),"invalid field count for transaction type: 1","data",hexlify$2(data));const tx={type:1,chainId:handleUint(fields[0],"chainId"),nonce:handleNumber(fields[1],"nonce"),gasPrice:handleUint(fields[2],"gasPrice"),gasLimit:handleUint(fields[3],"gasLimit"),to:handleAddress(fields[4]),value:handleUint(fields[5],"value"),data:hexlify$2(fields[6]),accessList:handleAccessList(fields[7],"accessList")};if(fields.length===8){return tx}_parseEipSignature(tx,fields.slice(8));return tx}function _serializeEip2930$1(tx,sig){const fields=[formatNumber$1(tx.chainId,"chainId"),formatNumber$1(tx.nonce,"nonce"),formatNumber$1(tx.gasPrice||0,"gasPrice"),formatNumber$1(tx.gasLimit,"gasLimit"),tx.to||"0x",formatNumber$1(tx.value,"value"),tx.data,formatAccessList$1(tx.accessList||[])];if(sig){fields.push(formatNumber$1(sig.yParity,"recoveryParam"));fields.push(toBeArray(sig.r));fields.push(toBeArray(sig.s))}return concat$2(["0x01",encodeRlp(fields)])}function _parseEip4844(data){let fields=decodeRlp(getBytes(data).slice(1));let typeName="3";let blobs=null;if(fields.length===4&&Array.isArray(fields[0])){typeName="3 (network format)";const fBlobs=fields[1],fCommits=fields[2],fProofs=fields[3];assertArgument(Array.isArray(fBlobs),"invalid network format: blobs not an array","fields[1]",fBlobs);assertArgument(Array.isArray(fCommits),"invalid network format: commitments not an array","fields[2]",fCommits);assertArgument(Array.isArray(fProofs),"invalid network format: proofs not an array","fields[3]",fProofs);assertArgument(fBlobs.length===fCommits.length,"invalid network format: blobs/commitments length mismatch","fields",fields);assertArgument(fBlobs.length===fProofs.length,"invalid network format: blobs/proofs length mismatch","fields",fields);blobs=[];for(let i=0;i<fields[1].length;i++){blobs.push({data:fBlobs[i],commitment:fCommits[i],proof:fProofs[i]})}fields=fields[0]}assertArgument(Array.isArray(fields)&&(fields.length===11||fields.length===14),`invalid field count for transaction type: ${typeName}`,"data",hexlify$2(data));const tx={type:3,chainId:handleUint(fields[0],"chainId"),nonce:handleNumber(fields[1],"nonce"),maxPriorityFeePerGas:handleUint(fields[2],"maxPriorityFeePerGas"),maxFeePerGas:handleUint(fields[3],"maxFeePerGas"),gasPrice:null,gasLimit:handleUint(fields[4],"gasLimit"),to:handleAddress(fields[5]),value:handleUint(fields[6],"value"),data:hexlify$2(fields[7]),accessList:handleAccessList(fields[8],"accessList"),maxFeePerBlobGas:handleUint(fields[9],"maxFeePerBlobGas"),blobVersionedHashes:fields[10]};if(blobs){tx.blobs=blobs}assertArgument(tx.to!=null,`invalid address for transaction type: ${typeName}`,"data",data);assertArgument(Array.isArray(tx.blobVersionedHashes),"invalid blobVersionedHashes: must be an array","data",data);for(let i=0;i<tx.blobVersionedHashes.length;i++){assertArgument(isHexString$2(tx.blobVersionedHashes[i],32),`invalid blobVersionedHash at index ${i}: must be length 32`,"data",data)}if(fields.length===11){return tx}_parseEipSignature(tx,fields.slice(11));return tx}function _serializeEip4844(tx,sig,blobs){const fields=[formatNumber$1(tx.chainId,"chainId"),formatNumber$1(tx.nonce,"nonce"),formatNumber$1(tx.maxPriorityFeePerGas||0,"maxPriorityFeePerGas"),formatNumber$1(tx.maxFeePerGas||0,"maxFeePerGas"),formatNumber$1(tx.gasLimit,"gasLimit"),tx.to||ZeroAddress,formatNumber$1(tx.value,"value"),tx.data,formatAccessList$1(tx.accessList||[]),formatNumber$1(tx.maxFeePerBlobGas||0,"maxFeePerBlobGas"),formatHashes(tx.blobVersionedHashes||[],"blobVersionedHashes")];if(sig){fields.push(formatNumber$1(sig.yParity,"yParity"));fields.push(toBeArray(sig.r));fields.push(toBeArray(sig.s));if(blobs){return concat$2(["0x03",encodeRlp([fields,blobs.map(b2=>b2.data),blobs.map(b2=>b2.commitment),blobs.map(b2=>b2.proof)])])}}return concat$2(["0x03",encodeRlp(fields)])}function _parseEip7702(data){const fields=decodeRlp(getBytes(data).slice(1));assertArgument(Array.isArray(fields)&&(fields.length===10||fields.length===13),"invalid field count for transaction type: 4","data",hexlify$2(data));const tx={type:4,chainId:handleUint(fields[0],"chainId"),nonce:handleNumber(fields[1],"nonce"),maxPriorityFeePerGas:handleUint(fields[2],"maxPriorityFeePerGas"),maxFeePerGas:handleUint(fields[3],"maxFeePerGas"),gasPrice:null,gasLimit:handleUint(fields[4],"gasLimit"),to:handleAddress(fields[5]),value:handleUint(fields[6],"value"),data:hexlify$2(fields[7]),accessList:handleAccessList(fields[8],"accessList"),authorizationList:handleAuthorizationList(fields[9],"authorizationList")};if(fields.length===10){return tx}_parseEipSignature(tx,fields.slice(10));return tx}function _serializeEip7702(tx,sig){const fields=[formatNumber$1(tx.chainId,"chainId"),formatNumber$1(tx.nonce,"nonce"),formatNumber$1(tx.maxPriorityFeePerGas||0,"maxPriorityFeePerGas"),formatNumber$1(tx.maxFeePerGas||0,"maxFeePerGas"),formatNumber$1(tx.gasLimit,"gasLimit"),tx.to||"0x",formatNumber$1(tx.value,"value"),tx.data,formatAccessList$1(tx.accessList||[]),formatAuthorizationList(tx.authorizationList||[])];if(sig){fields.push(formatNumber$1(sig.yParity,"yParity"));fields.push(toBeArray(sig.r));fields.push(toBeArray(sig.s))}return concat$2(["0x04",encodeRlp(fields)])}const _Transaction=class _Transaction{constructor(){__privateAdd(this,_Transaction_instances);__privateAdd(this,_type);__privateAdd(this,_to);__privateAdd(this,_data3);__privateAdd(this,_nonce);__privateAdd(this,_gasLimit);__privateAdd(this,_gasPrice);__privateAdd(this,_maxPriorityFeePerGas);__privateAdd(this,_maxFeePerGas);__privateAdd(this,_value);__privateAdd(this,_chainId);__privateAdd(this,_sig);__privateAdd(this,_accessList);__privateAdd(this,_maxFeePerBlobGas);__privateAdd(this,_blobVersionedHashes);__privateAdd(this,_kzg);__privateAdd(this,_blobs);__privateAdd(this,_auths);__privateSet(this,_type,null);__privateSet(this,_to,null);__privateSet(this,_nonce,0);__privateSet(this,_gasLimit,BN_0$4);__privateSet(this,_gasPrice,null);__privateSet(this,_maxPriorityFeePerGas,null);__privateSet(this,_maxFeePerGas,null);__privateSet(this,_data3,"0x");__privateSet(this,_value,BN_0$4);__privateSet(this,_chainId,BN_0$4);__privateSet(this,_sig,null);__privateSet(this,_accessList,null);__privateSet(this,_maxFeePerBlobGas,null);__privateSet(this,_blobVersionedHashes,null);__privateSet(this,_kzg,null);__privateSet(this,_blobs,null);__privateSet(this,_auths,null)}get type(){return __privateGet(this,_type)}set type(value){switch(value){case null:__privateSet(this,_type,null);break;case 0:case"legacy":__privateSet(this,_type,0);break;case 1:case"berlin":case"eip-2930":__privateSet(this,_type,1);break;case 2:case"london":case"eip-1559":__privateSet(this,_type,2);break;case 3:case"cancun":case"eip-4844":__privateSet(this,_type,3);break;case 4:case"pectra":case"eip-7702":__privateSet(this,_type,4);break;default:assertArgument(false,"unsupported transaction type","type",value)}}get typeName(){switch(this.type){case 0:return"legacy";case 1:return"eip-2930";case 2:return"eip-1559";case 3:return"eip-4844";case 4:return"eip-7702"}return null}get to(){const value=__privateGet(this,_to);if(value==null&&this.type===3){return ZeroAddress}return value}set to(value){__privateSet(this,_to,value==null?null:getAddress$2(value))}get nonce(){return __privateGet(this,_nonce)}set nonce(value){__privateSet(this,_nonce,getNumber(value,"value"))}get gasLimit(){return __privateGet(this,_gasLimit)}set gasLimit(value){__privateSet(this,_gasLimit,getBigInt(value))}get gasPrice(){const value=__privateGet(this,_gasPrice);if(value==null&&(this.type===0||this.type===1)){return BN_0$4}return value}set gasPrice(value){__privateSet(this,_gasPrice,value==null?null:getBigInt(value,"gasPrice"))}get maxPriorityFeePerGas(){const value=__privateGet(this,_maxPriorityFeePerGas);if(value==null){if(this.type===2||this.type===3){return BN_0$4}return null}return value}set maxPriorityFeePerGas(value){__privateSet(this,_maxPriorityFeePerGas,value==null?null:getBigInt(value,"maxPriorityFeePerGas"))}get maxFeePerGas(){const value=__privateGet(this,_maxFeePerGas);if(value==null){if(this.type===2||this.type===3){return BN_0$4}return null}return value}set maxFeePerGas(value){__privateSet(this,_maxFeePerGas,value==null?null:getBigInt(value,"maxFeePerGas"))}get data(){return __privateGet(this,_data3)}set data(value){__privateSet(this,_data3,hexlify$2(value))}get value(){return __privateGet(this,_value)}set value(value){__privateSet(this,_value,getBigInt(value,"value"))}get chainId(){return __privateGet(this,_chainId)}set chainId(value){__privateSet(this,_chainId,getBigInt(value))}get signature(){return __privateGet(this,_sig)||null}set signature(value){__privateSet(this,_sig,value==null?null:Signature$2.from(value))}get accessList(){const value=__privateGet(this,_accessList)||null;if(value==null){if(this.type===1||this.type===2||this.type===3){return[]}return null}return value}set accessList(value){__privateSet(this,_accessList,value==null?null:accessListify$1(value))}get authorizationList(){const value=__privateGet(this,_auths)||null;if(value==null){if(this.type===4){return[]}}return value}set authorizationList(auths){__privateSet(this,_auths,auths==null?null:auths.map(a=>authorizationify(a)))}get maxFeePerBlobGas(){const value=__privateGet(this,_maxFeePerBlobGas);if(value==null&&this.type===3){return BN_0$4}return value}set maxFeePerBlobGas(value){__privateSet(this,_maxFeePerBlobGas,value==null?null:getBigInt(value,"maxFeePerBlobGas"))}get blobVersionedHashes(){let value=__privateGet(this,_blobVersionedHashes);if(value==null&&this.type===3){return[]}return value}set blobVersionedHashes(value){if(value!=null){assertArgument(Array.isArray(value),"blobVersionedHashes must be an Array","value",value);value=value.slice();for(let i=0;i<value.length;i++){assertArgument(isHexString$2(value[i],32),"invalid blobVersionedHash",`value[${i}]`,value[i])}}__privateSet(this,_blobVersionedHashes,value)}get blobs(){if(__privateGet(this,_blobs)==null){return null}return __privateGet(this,_blobs).map(b2=>Object.assign({},b2))}set blobs(_blobs2){if(_blobs2==null){__privateSet(this,_blobs,null);return}const blobs=[];const versionedHashes=[];for(let i=0;i<_blobs2.length;i++){const blob=_blobs2[i];if(isBytesLike$2(blob)){assert$7(__privateGet(this,_kzg),"adding a raw blob requires a KZG library","UNSUPPORTED_OPERATION",{operation:"set blobs()"});let data=getBytes(blob);assertArgument(data.length<=BLOB_SIZE,"blob is too large",`blobs[${i}]`,blob);if(data.length!==BLOB_SIZE){const padded=new Uint8Array(BLOB_SIZE);padded.set(data);data=padded}const commit=__privateGet(this,_kzg).blobToKzgCommitment(data);const proof=hexlify$2(__privateGet(this,_kzg).computeBlobKzgProof(data,commit));blobs.push({data:hexlify$2(data),commitment:hexlify$2(commit),proof:proof});versionedHashes.push(getVersionedHash(1,commit))}else{const commit=hexlify$2(blob.commitment);blobs.push({data:hexlify$2(blob.data),commitment:commit,proof:hexlify$2(blob.proof)});versionedHashes.push(getVersionedHash(1,commit))}}__privateSet(this,_blobs,blobs);__privateSet(this,_blobVersionedHashes,versionedHashes)}get kzg(){return __privateGet(this,_kzg)}set kzg(kzg){if(kzg==null){__privateSet(this,_kzg,null)}else{__privateSet(this,_kzg,getKzgLibrary(kzg))}}get hash(){if(this.signature==null){return null}return keccak256$2(__privateMethod(this,_Transaction_instances,getSerialized_fn).call(this,true,false))}get unsignedHash(){return keccak256$2(this.unsignedSerialized)}get from(){if(this.signature==null){return null}return recoverAddress(this.unsignedHash,this.signature)}get fromPublicKey(){if(this.signature==null){return null}return SigningKey$2.recoverPublicKey(this.unsignedHash,this.signature)}isSigned(){return this.signature!=null}get serialized(){return __privateMethod(this,_Transaction_instances,getSerialized_fn).call(this,true,true)}get unsignedSerialized(){return __privateMethod(this,_Transaction_instances,getSerialized_fn).call(this,false,false)}inferType(){const types=this.inferTypes();if(types.indexOf(2)>=0){return 2}return types.pop()}inferTypes(){const hasGasPrice=this.gasPrice!=null;const hasFee=this.maxFeePerGas!=null||this.maxPriorityFeePerGas!=null;const hasAccessList=this.accessList!=null;const hasBlob=__privateGet(this,_maxFeePerBlobGas)!=null||__privateGet(this,_blobVersionedHashes);if(this.maxFeePerGas!=null&&this.maxPriorityFeePerGas!=null){assert$7(this.maxFeePerGas>=this.maxPriorityFeePerGas,"priorityFee cannot be more than maxFee","BAD_DATA",{value:this})}assert$7(!hasFee||this.type!==0&&this.type!==1,"transaction type cannot have maxFeePerGas or maxPriorityFeePerGas","BAD_DATA",{value:this});assert$7(this.type!==0||!hasAccessList,"legacy transaction cannot have accessList","BAD_DATA",{value:this});const types=[];if(this.type!=null){types.push(this.type)}else{if(this.authorizationList&&this.authorizationList.length){types.push(4)}else if(hasFee){types.push(2)}else if(hasGasPrice){types.push(1);if(!hasAccessList){types.push(0)}}else if(hasAccessList){types.push(1);types.push(2)}else if(hasBlob&&this.to){types.push(3)}else{types.push(0);types.push(1);types.push(2);types.push(3)}}types.sort();return types}isLegacy(){return this.type===0}isBerlin(){return this.type===1}isLondon(){return this.type===2}isCancun(){return this.type===3}clone(){return _Transaction.from(this)}toJSON(){const s=v=>{if(v==null){return null}return v.toString()};return{type:this.type,to:this.to,data:this.data,nonce:this.nonce,gasLimit:s(this.gasLimit),gasPrice:s(this.gasPrice),maxPriorityFeePerGas:s(this.maxPriorityFeePerGas),maxFeePerGas:s(this.maxFeePerGas),value:s(this.value),chainId:s(this.chainId),sig:this.signature?this.signature.toJSON():null,accessList:this.accessList}}static from(tx){if(tx==null){return new _Transaction}if(typeof tx==="string"){const payload=getBytes(tx);if(payload[0]>=127){return _Transaction.from(_parseLegacy(payload))}switch(payload[0]){case 1:return _Transaction.from(_parseEip2930(payload));case 2:return _Transaction.from(_parseEip1559(payload));case 3:return _Transaction.from(_parseEip4844(payload));case 4:return _Transaction.from(_parseEip7702(payload))}assert$7(false,"unsupported transaction type","UNSUPPORTED_OPERATION",{operation:"from"})}const result=new _Transaction;if(tx.type!=null){result.type=tx.type}if(tx.to!=null){result.to=tx.to}if(tx.nonce!=null){result.nonce=tx.nonce}if(tx.gasLimit!=null){result.gasLimit=tx.gasLimit}if(tx.gasPrice!=null){result.gasPrice=tx.gasPrice}if(tx.maxPriorityFeePerGas!=null){result.maxPriorityFeePerGas=tx.maxPriorityFeePerGas}if(tx.maxFeePerGas!=null){result.maxFeePerGas=tx.maxFeePerGas}if(tx.maxFeePerBlobGas!=null){result.maxFeePerBlobGas=tx.maxFeePerBlobGas}if(tx.data!=null){result.data=tx.data}if(tx.value!=null){result.value=tx.value}if(tx.chainId!=null){result.chainId=tx.chainId}if(tx.signature!=null){result.signature=Signature$2.from(tx.signature)}if(tx.accessList!=null){result.accessList=tx.accessList}if(tx.authorizationList!=null){result.authorizationList=tx.authorizationList}if(tx.blobVersionedHashes!=null){result.blobVersionedHashes=tx.blobVersionedHashes}if(tx.kzg!=null){result.kzg=tx.kzg}if(tx.blobs!=null){result.blobs=tx.blobs}if(tx.hash!=null){assertArgument(result.isSigned(),"unsigned transaction cannot define '.hash'","tx",tx);assertArgument(result.hash===tx.hash,"hash mismatch","tx",tx)}if(tx.from!=null){assertArgument(result.isSigned(),"unsigned transaction cannot define '.from'","tx",tx);assertArgument(result.from.toLowerCase()===(tx.from||"").toLowerCase(),"from mismatch","tx",tx)}return result}};_type=new WeakMap;_to=new WeakMap;_data3=new WeakMap;_nonce=new WeakMap;_gasLimit=new WeakMap;_gasPrice=new WeakMap;_maxPriorityFeePerGas=new WeakMap;_maxFeePerGas=new WeakMap;_value=new WeakMap;_chainId=new WeakMap;_sig=new WeakMap;_accessList=new WeakMap;_maxFeePerBlobGas=new WeakMap;_blobVersionedHashes=new WeakMap;_kzg=new WeakMap;_blobs=new WeakMap;_auths=new WeakMap;_Transaction_instances=new WeakSet;getSerialized_fn=function(signed2,sidecar){assert$7(!signed2||this.signature!=null,"cannot serialize unsigned transaction; maybe you meant .unsignedSerialized","UNSUPPORTED_OPERATION",{operation:".serialized"});const sig=signed2?this.signature:null;switch(this.inferType()){case 0:return _serializeLegacy(this,sig);case 1:return _serializeEip2930$1(this,sig);case 2:return _serializeEip1559$1(this,sig);case 3:return _serializeEip4844(this,sig,sidecar?this.blobs:null);case 4:return _serializeEip7702(this,sig)}assert$7(false,"unsupported transaction type","UNSUPPORTED_OPERATION",{operation:".serialized"})};let Transaction=_Transaction;function hashAuthorization(auth){assertArgument(typeof auth.address==="string","invalid address for hashAuthorization","auth.address",auth);return keccak256$2(concat$2(["0x05",encodeRlp([auth.chainId!=null?toBeArray(auth.chainId):"0x",getAddress$2(auth.address),auth.nonce!=null?toBeArray(auth.nonce):"0x"])]))}function id$2(value){return keccak256$2(toUtf8Bytes$1(value))}var COMPRESSED$1="";const FENCED=new Map([[8217,"apostrophe"],[8260,"fraction slash"],[12539,"middle dot"]]);const NSM_MAX=4;function decode_arithmetic(bytes2){let pos=0;function u16(){return bytes2[pos++]<<8|bytes2[pos++]}let symbol_count=u16();let total=1;let acc=[0,1];for(let i=1;i<symbol_count;i++){acc.push(total+=u16())}let skip=u16();let pos_payload=pos;pos+=skip;let read_width=0;let read_buffer=0;function read_bit(){if(read_width==0){read_buffer=read_buffer<<8|bytes2[pos++];read_width=8}return read_buffer>>--read_width&1}const N2=31;const FULL=2**N2;const HALF=FULL>>>1;const QRTR=HALF>>1;const MASK=FULL-1;let register=0;for(let i=0;i<N2;i++)register=register<<1|read_bit();let symbols=[];let low=0;let range=FULL;while(true){let value=Math.floor(((register-low+1)*total-1)/range);let start=0;let end=symbol_count;while(end-start>1){let mid=start+end>>>1;if(value<acc[mid]){end=mid}else{start=mid}}if(start==0)break;symbols.push(start);let a=low+Math.floor(range*acc[start]/total);let b2=low+Math.floor(range*acc[start+1]/total)-1;while(((a^b2)&HALF)==0){register=register<<1&MASK|read_bit();a=a<<1&MASK;b2=b2<<1&MASK|1}while(a&~b2&QRTR){register=register&HALF|register<<1&MASK>>>1|read_bit();a=a<<1^HALF;b2=(b2^HALF)<<1|HALF|1}low=a;range=1+b2-a}let offset=symbol_count-4;return symbols.map(x=>{switch(x-offset){case 3:return offset+65792+(bytes2[pos_payload++]<<16|bytes2[pos_payload++]<<8|bytes2[pos_payload++]);case 2:return offset+256+(bytes2[pos_payload++]<<8|bytes2[pos_payload++]);case 1:return offset+bytes2[pos_payload++];default:return x-1}})}function read_payload(v){let pos=0;return()=>v[pos++]}function read_compressed_payload(s){return read_payload(decode_arithmetic(unsafe_atob(s)))}function unsafe_atob(s){let lookup=[];[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach((c,i)=>lookup[c.charCodeAt(0)]=i);let n2=s.length;let ret=new Uint8Array(6*n2>>3);for(let i=0,pos=0,width=0,carry=0;i<n2;i++){carry=carry<<6|lookup[s.charCodeAt(i)];width+=6;if(width>=8){ret[pos++]=carry>>(width-=8)}}return ret}function signed(i){return i&1?~i>>1:i>>1}function read_deltas(n2,next){let v=Array(n2);for(let i=0,x=0;i<n2;i++)v[i]=x+=signed(next());return v}function read_sorted(next,prev=0){let ret=[];while(true){let x=next();let n2=next();if(!n2)break;prev+=x;for(let i=0;i<n2;i++){ret.push(prev+i)}prev+=n2+1}return ret}function read_sorted_arrays(next){return read_array_while(()=>{let v=read_sorted(next);if(v.length)return v})}function read_mapped(next){let ret=[];while(true){let w=next();if(w==0)break;ret.push(read_linear_table(w,next))}while(true){let w=next()-1;if(w<0)break;ret.push(read_replacement_table(w,next))}return ret.flat()}function read_array_while(next){let v=[];while(true){let x=next(v.length);if(!x)break;v.push(x)}return v}function read_transposed(n2,w,next){let m=Array(n2).fill().map(()=>[]);for(let i=0;i<w;i++){read_deltas(n2,next).forEach((x,j)=>m[j].push(x))}return m}function read_linear_table(w,next){let dx=1+next();let dy=next();let vN=read_array_while(next);let m=read_transposed(vN.length,1+w,next);return m.flatMap((v,i)=>{let[x,...ys]=v;return Array(vN[i]).fill().map((_,j)=>{let j_dy=j*dy;return[x+j*dx,ys.map(y=>y+j_dy)]})})}function read_replacement_table(w,next){let n2=1+next();let m=read_transposed(n2,1+w,next);return m.map(v=>[v[0],v.slice(1)])}function read_trie(next){let ret=[];let sorted=read_sorted(next);expand(decode2([]),[]);return ret;function decode2(Q){let S2=next();let B=read_array_while(()=>{let cps=read_sorted(next).map(i=>sorted[i]);if(cps.length)return decode2(cps)});return{S:S2,B:B,Q:Q}}function expand({S:S2,B:B},cps,saved){if(S2&4&&saved===cps[cps.length-1])return;if(S2&2)saved=cps[cps.length-1];if(S2&1)ret.push(cps);for(let br of B){for(let cp of br.Q){expand(br,[...cps,cp],saved)}}}}function hex_cp(cp){return cp.toString(16).toUpperCase().padStart(2,"0")}function quote_cp(cp){return`{${hex_cp(cp)}}`}function explode_cp(s){let cps=[];for(let pos=0,len=s.length;pos<len;){let cp=s.codePointAt(pos);pos+=cp<65536?1:2;cps.push(cp)}return cps}function str_from_cps(cps){const chunk=4096;let len=cps.length;if(len<chunk)return String.fromCodePoint(...cps);let buf=[];for(let i=0;i<len;){buf.push(String.fromCodePoint(...cps.slice(i,i+=chunk)))}return buf.join("")}function compare_arrays(a,b2){let n2=a.length;let c=n2-b2.length;for(let i=0;c==0&&i<n2;i++)c=a[i]-b2[i];return c}var COMPRESSED="AEUDTAHBCFQATQDRADAAcgAgADQAFAAsABQAHwAOACQADQARAAoAFwAHABIACAAPAAUACwAFAAwABAAQAAMABwAEAAoABQAIAAIACgABAAQAFAALAAIACwABAAIAAQAHAAMAAwAEAAsADAAMAAwACgANAA0AAwAKAAkABAAdAAYAZwDSAdsDJgC0CkMB8xhZAqfoC190UGcThgBurwf7PT09Pb09AjgJum8OjDllxHYUKXAPxzq6tABAxgK8ysUvWAgMPT09PT09PSs6LT2HcgWXWwFLoSMEEEl5RFVMKvO0XQ8ExDdJMnIgsj26PTQyy8FfEQ8AY8IPAGcEbwRwBHEEcgRzBHQEdQR2BHcEeAR6BHsEfAR+BIAEgfndBQoBYgULAWIFDAFiBNcE2ATZBRAFEQUvBdALFAsVDPcNBw13DYcOMA4xDjMB4BllHI0B2grbAMDpHLkQ7QHVAPRNQQFnGRUEg0yEB2uaJF8AJpIBpob5AERSMAKNoAXqaQLUBMCzEiACnwRZEkkVsS7tANAsBG0RuAQLEPABv9HICTUBXigPZwRBApMDOwAamhtaABqEAY8KvKx3LQ4ArAB8UhwEBAVSagD8AEFZADkBIadVj2UMUgx5Il4ANQC9AxIB1BlbEPMAs30CGxlXAhwZKQIECBc6EbsCoxngzv7UzRQA8M0BawL6ZwkN7wABAD33OQRcsgLJCjMCjqUChtw/km+NAsXPAoP2BT84PwURAK0RAvptb6cApQS/OMMey5HJS84UdxpxTPkCogVFITaTOwERAK5pAvkNBOVyA7q3BKlOJSALAgUIBRcEdASpBXqzABXFSWZOawLCOqw//AolCZdvv3dSBkEQGyelEPcMMwG1ATsN7UvYBPEGOwTJH30ZGQ/NlZwIpS3dDO0m4y6hgFoj9SqDBe1L9DzdC01RaA9ZC2UJ4zpjgU4DIQENIosK3Q05CG0Q8wrJaw3lEUUHOQPVSZoApQcBCxEdNRW1JhBirAsJOXcG+xr2C48mrxMpevwF0xohBk0BKRr/AM8u54WwWjFcHE9fBgMLJSPHFKhQIA0lQLd4SBobBxUlqQKRQ3BKh1E2HpMh9jw9DWYuE1F8B/U8BRlPC4E8nkarRQ4R0j6NPUgiSUwsBDV/LC8niwnPD4UMuXxyAVkJIQmxDHETMREXN8UIOQcZLZckJxUIIUaVYJoE958D8xPRAwsFPwlBBxMDtRwtEy4VKQUNgSTXAvM21S6zAo9WgAEXBcsPJR/fEFBH4A7pCJsCZQODJesALRUhABcimwhDYwBfj9hTBS7LCMdqbCN0A2cU52ERcweRDlcHpxwzFb8c4XDIXguGCCijrwlbAXUJmQFfBOMICTVbjKAgQWdTi1gYmyBhQT9d/AIxDGUVn0S9h3gCiw9rEhsBNQFzBzkNAQJ3Ee0RaxCVCOuGBDW1M/g6JQRPIYMgEQonA09szgsnJvkM+GkBoxJiAww0PXfuZ6tgtiQX/QcZMsVBYCHxC5JPzQycGsEYQlQuGeQHvwPzGvMn6kFXBf8DowMTOk0z7gS9C2kIiwk/AEkOoxcH1xhqCnGM0AExiwG3mQNXkYMCb48GNwcLAGcLhwV55QAdAqcIowAFAM8DVwA5Aq0HnQAZAIVBAT0DJy8BIeUCjwOTCDHLAZUvAfMpBBvDDBUA9zduSgLDsQKAamaiBd1YAo4CSTUBTSUEBU5HUQOvceEA2wBLBhPfRwEVq0rLGuNDAd9vKwDHAPsABTUHBUEBzQHzbQC3AV8LMQmis7UBTekpAIMAFWsB1wKJAN0ANQB/8QFTAE0FWfkF0wJPSQERMRgrV2EBuwMfATMBDQB5BsuNpckHHwRtB9MCEBsV4QLvLge1AQMi3xPNQsUCvd5VoWACZIECYkJbTa9bNyACofcCaJgCZgkCn4Q4GwsCZjsCZiYEbgR/A38TA36SOQY5dxc5gjojIwJsHQIyNjgKAm3HAm2u74ozZ0UrAWcA3gDhAEoFB5gMjQD+C8IADbUCdy8CdqI/AnlLQwJ4uh1c20WuRtcCfD8CesgCfQkCfPAFWQUgSABIfWMkAoFtAoAAAoAFAn+uSVhKWxUXSswC0QEC0MxLJwOITwOH5kTFkTIC8qFdAwMDrkvOTC0lA89NTE2vAos/AorYwRsHHUNnBbcCjjcCjlxAl4ECjtkCjlx4UbRTNQpS1FSFApP7ApMMAOkAHFUeVa9V0AYsGymVhjLheGZFOzkCl58C77JYIagAWSUClo8ClnycAKlZrFoJgU0AOwKWtQKWTlxEXNECmcsCmWRcyl0HGQKcmznCOp0CnBYCn5sCnriKAB0PMSoPAp3xAp6SALU9YTRh7wKe0wKgbgGpAp6fHwKeTqVjyGQnJSsCJ68CJn4CoPsCoEwCot0CocQCpi8Cpc4Cp/8AfQKn8mh8aLEAA0lqHGrRAqzjAqyuAq1nAq0CAlcdAlXcArHh1wMfTmyXArK9DQKy6Bds4G1jbUhfAyXNArZcOz9ukAMpRQK4XgK5RxUCuSp3cDZw4QK9GQK72nCWAzIRAr6IcgIDM3ECvhpzInNPAsPLAsMEc4J0SzVFdOADPKcDPJoDPb8CxXwCxkcCxhCJAshpUQLIRALJTwLJLgJknQLd0nh5YXiueSVL0AMYo2cCAmH0GfOVJHsLXpJeuxECz2sCz2wvS1PS8xOfAMatAs9zASnqA04SfksFAtwnAtuKAtJPA1JcA1NfAQEDVYyAiT8AyxbtYEWCHILTgs6DjQLaxwLZ3oQQhEmnPAOGpQAvA2QOhnFZ+QBVAt9lAt64c3cC4i/tFAHzMCcB9JsB8tKHAuvzAulweQLq+QLq5AD5RwG5Au6JAuuclqqXAwLuPwOF4Jh5cOBxoQLzAwBpA44WmZMC9xMDkW4DkocC95gC+dkC+GaaHJqruzebHgOdgwL++gEbADmfHJ+zAwWNA6ZqA6bZANHFAwZqoYiiBQkDDEkCwAA/AwDhQRdTARHzA2sHl2cFAJMtK7evvdsBiZkUfxEEOQH7KQUhDp0JnwCS/SlXxQL3AZ0AtwW5AG8LbUEuFCaNLgFDAYD8AbUmAHUDDgRtACwCFgyhAAAKAj0CagPdA34EkQEgRQUhfAoABQBEABMANhICdwEABdUDa+8KxQIA9wqfJ7+xt+UBkSFBQgHpFH8RNMCJAAQAGwBaAkUChIsABjpTOpSNbQC4Oo860ACNOME63AClAOgAywE6gTo7Ofw5+Tt2iTpbO56JOm85GAFWATMBbAUvNV01njWtNWY1dTW2NcU1gjWRNdI14TWeNa017jX9NbI1wTYCNhE1xjXVNhY2JzXeNe02LjY9Ni41LSE2OjY9Njw2yTcIBJA8VzY4Nt03IDcPNsogN4k3MAoEsDxnNiQ3GTdsOo03IULUQwdC4EMLHA8PCZsobShRVQYA6X8A6bABFCnXAukBowC9BbcAbwNzBL8MDAMMAQgDAAkKCwsLCQoGBAVVBI/DvwDz9b29kaUCb0QtsRTNLt4eGBcSHAMZFhYZEhYEARAEBUEcQRxBHEEcQRxBHEEaQRxBHEFCSTxBPElISUhBNkM2QTYbNklISVmBVIgBFLWZAu0BhQCjBcEAbykBvwGJAaQcEZ0ePCklMAAhMvAIMAL54gC7Bm8EescjzQMpARQpKgDUABavAj626xQAJP0A3etzuf4NNRA7efy2Z9NQrCnC0OSyANz5BBIbJ5IFDR6miIavYS6tprjjmuKebxm5C74Q225X1pkaYYPb6f1DK4k3xMEBb9S2WMjEibTNWhsRJIA+vwNVEiXTE5iXs/wezV66oFLfp9NZGYW+Gk19J2+bCT6Ye2w6LDYdgzKMUabk595eLBCXANz9HUpWbATq9vqXVx9XDg+Pc9Xp4+bsS005SVM/BJBM4687WUuf+Uj9dEi8aDNaPxtpbDxcG1THTImUMZq4UCaaNYpsVqraNyKLJXDYsFZ/5jl7bLRtO88t7P3xZaAxhb5OdPMXqsSkp1WCieG8jXm1U99+blvLlXzPCS+M93VnJCiK+09LfaSaBAVBomyDgJua8dfUzR7ga34IvR2Nvj+A9heJ6lsl1KG4NkI1032Cnff1m1wof2B9oHJK4bi6JkEdSqeNeiuo6QoZZincoc73/TH9SXF8sCE7XyuYyW8WSgbGFCjPV0ihLKhdPs08Tx82fYAkLLc4I2wdl4apY7GU5lHRFzRWJep7Ww3wbeA3qmd59/86P4xuNaqDpygXt6M85glSBHOCGgJDnt+pN9bK7HApMguX6+06RZNjzVmcZJ+wcUrJ9//bpRNxNuKpNl9uFds+S9tdx7LaM5ZkIrPj6nIU9mnbFtVbs9s/uLgl8MVczAwet+iOEzzBlYW7RCMgE6gyNLeq6+1tIx4dpgZnd0DksJS5f+JNDpwwcPNXaaVspq1fbQajOrJgK0ofKtJ1Ne90L6VO4MOl5S886p7u6xo7OLjG8TGL+HU1JXGJgppg4nNbNJ5nlzSpuPYy21JUEcUA94PoFiZfjZue+QnyQ80ekOuZVkxx4g+cvhJfHgNl4hy1/a6+RKcKlar/J29y//EztlbVPHVUeQ1zX86eQVAjR/M3dA9w4W8LfaXp4EgM85wOWasli837PzVMOnsLzR+k3o75/lRPAJSE1xAKQzEi5v10ke+VBvRt1cwQRMd+U5mLCTGVd6XiZtgBG5cDi0w22GKcVNvHiu5LQbZEDVtz0onn7k5+heuKXVsZtSzilkLRAUmjMXEMB3J9YC50XBxPiz53SC+EhnPl9WsKCv92SM/OFFIMJZYfl0WW8tIO3UxYcwdMAj7FSmgrsZ2aAZO03BOhP1bNNZItyXYQFTpC3SG1VuPDqH9GkiCDmE+JwxyIVSO5siDErAOpEXFgjy6PQtOVDj+s6e1r8heWVvmZnTciuf4EiNZzCAd7SOMhXERIOlsHIMG399i9aLTy3m2hRLZjJVDNLS53iGIK11dPqQt0zBDyg6qc7YqkDm2M5Ve6dCWCaCbTXX2rToaIgz6+zh4lYUi/+6nqcFMAkQJKHYLK0wYk5N9szV6xihDbDDFr45lN1K4aCXBq/FitPSud9gLt5ZVn+ZqGX7cwm2z5EGMgfFpIFyhGGuDPmso6TItTMwny+7uPnLCf4W6goFQFV0oQSsc9VfMmVLcLr6ZetDZbaSFTLqnSO/bIPjA3/zAUoqgGFAEQS4IhuMzEp2I3jJzbzkk/IEmyax+rhZTwd6f+CGtwPixu8IvzACquPWPREu9ZvGkUzpRwvRRuaNN6cr0W1wWits9ICdYJ7ltbgMiSL3sTPeufgNcVqMVWFkCPDH4jG2jA0XcVgQj62Cb29v9f/z/+2KbYvIv/zzjpQAPkliaVDzNrW57TZ/ZOyZD0nlfMmAIBIAGAI0D3k/mdN4xr9v85ZbZbbqfH2jGd5hUqNZWwl5SPfoGmfElmazUIeNL1j/mkF7VNAzTq4jNt8JoQ11NQOcmhprXoxSxfRGJ9LDEOAQ+dmxAQH90iti9e2u/MoeuaGcDTHoC+xsmEeWmxEKefQuIzHbpw5Tc5cEocboAD09oipWQhtTO1wivf/O+DRe2rpl/E9wlrzBorjJsOeG1B/XPW4EaJEFdNlECEZga5ZoGRHXgYouGRuVkm8tDESiEyFNo+3s5M5puSdTyUL2llnINVHEt91XUNW4ewdMgJ4boJfEyt/iY5WXqbA+A2Fkt5Z0lutiWhe9nZIyIUjyXDC3UsaG1t+eNx6z4W/OYoTB7A6x+dNSTOi9AInctbESqm5gvOLww7OWXPrmHwVZasrl4eD113pm+JtT7JVOvnCXqdzzdTRHgJ0PiGTFYW5Gvt9R9LD6Lzfs0v/TZZHSmyVNq7viIHE6DBK7Qp07Iz55EM8SYtQvZf/obBniTWi5C2/ovHfw4VndkE5XYdjOhCMRjDeOEfXeN/CwfGduiUIfsoFeUxXeQXba7c7972XNv8w+dTjjUM0QeNAReW+J014dKAD/McQYXT7c0GQPIkn3Ll6R7gGjuiQoZD0TEeEqQpKoZ15g/0OPQI17QiSv9AUROa/V/TQN3dvLArec3RrsYlvBm1b8LWzltdugsC50lNKYLEp2a+ZZYqPejULRlOJh5zj/LVMyTDvwKhMxxwuDkxJ1QpoNI0OTWLom4Z71SNzI9TV1iXJrIu9Wcnd+MCaAw8o1jSXd94YU/1gnkrC9BUEOtQvEIQ7g0i6h+KL2JKk8Ydl7HruvgWMSAmNe+LshGhV4qnWHhO9/RIPQzY1tHRj2VqOyNsDpK0cww+56AdDC4gsWwY0XxoucIWIqs/GcwnWqlaT0KPr8mbK5U94/301i1WLt4YINTVvCFBrFZbIbY8eycOdeJ2teD5IfPLCRg7jjcFTwlMFNl9zdh/o3E/hHPwj7BWg0MU09pPrBLbrCgm54A6H+I6v27+jL5gkjWg/iYdks9jbfVP5y/n0dlgWEMlKasl7JvFZd56LfybW1eeaVO0gxTfXZwD8G4SI116yx7UKVRgui6Ya1YpixqXeNLc8IxtAwCU5IhwQgn+NqHnRaDv61CxKhOq4pOX7M6pkA+Pmpd4j1vn6ACUALoLLc4vpXci8VidLxzm7qFBe7s+quuJs6ETYmnpgS3LwSZxPIltgBDXz8M1k/W2ySNv2f9/NPhxLGK2D21dkHeSGmenRT3Yqcdl0m/h3OYr8V+lXNYGf8aCCpd4bWjE4QIPj7vUKN4Nrfs7ML6Y2OyS830JCnofg/k7lpFpt4SqZc5HGg1HCOrHvOdC8bP6FGDbE/VV0mX4IakzbdS/op+Kt3G24/8QbBV7y86sGSQ/vZzU8FXs7u6jIvwchsEP2BpIhW3G8uWNwa3HmjfH/ZjhhCWvluAcF+nMf14ClKg5hGgtPLJ98ueNAkc5Hs2WZlk2QHvfreCK1CCGO6nMZVSb99VM/ajr8WHTte9JSmkXq/i/U943HEbdzW6Re/S88dKgg8pGOLlAeNiqrcLkUR3/aClFpMXcOUP3rmETcWSfMXZE3TUOi8i+fqRnTYLflVx/Vb/6GJ7eIRZUA6k3RYR3iFSK9c4iDdNwJuZL2FKz/IK5VimcNWEqdXjSoxSgmF0UPlDoUlNrPcM7ftmA8Y9gKiqKEHuWN+AZRIwtVSxye2Kf8rM3lhJ5XcBXU9n4v0Oy1RU2M+4qM8AQPVwse8ErNSob5oFPWxuqZnVzo1qB/IBxkM3EVUKFUUlO3e51259GgNcJbCmlvrdjtoTW7rChm1wyCKzpCTwozUUEOIcWLneRLgMXh+SjGSFkAllzbGS5HK7LlfCMRNRDSvbQPjcXaenNYxCvu2Qyznz6StuxVj66SgI0T8B6/sfHAJYZaZ78thjOSIFumNWLQbeZixDCCC+v0YBtkxiBB3jefHqZ/dFHU+crbj6OvS1x/JDD7vlm7zOVPwpUC01nhxZuY/63E7g";const S0=44032;const L0=4352;const V0=4449;const T0=4519;const L_COUNT=19;const V_COUNT=21;const T_COUNT=28;const N_COUNT=V_COUNT*T_COUNT;const S_COUNT=L_COUNT*N_COUNT;const S1=S0+S_COUNT;const L1=L0+L_COUNT;const V1=V0+V_COUNT;const T1$1=T0+T_COUNT;function unpack_cc(packed){return packed>>24&255}function unpack_cp(packed){return packed&16777215}let SHIFTED_RANK,EXCLUSIONS,DECOMP,RECOMP;function init$1(){let r=read_compressed_payload(COMPRESSED);SHIFTED_RANK=new Map(read_sorted_arrays(r).flatMap((v,i)=>v.map(x=>[x,i+1<<24])));EXCLUSIONS=new Set(read_sorted(r));DECOMP=new Map;RECOMP=new Map;for(let[cp,cps]of read_mapped(r)){if(!EXCLUSIONS.has(cp)&&cps.length==2){let[a,b2]=cps;let bucket=RECOMP.get(a);if(!bucket){bucket=new Map;RECOMP.set(a,bucket)}bucket.set(b2,cp)}DECOMP.set(cp,cps.reverse())}}function is_hangul(cp){return cp>=S0&&cp<S1}function compose_pair(a,b2){if(a>=L0&&a<L1&&b2>=V0&&b2<V1){return S0+(a-L0)*N_COUNT+(b2-V0)*T_COUNT}else if(is_hangul(a)&&b2>T0&&b2<T1$1&&(a-S0)%T_COUNT==0){return a+(b2-T0)}else{let recomp=RECOMP.get(a);if(recomp){recomp=recomp.get(b2);if(recomp){return recomp}}return-1}}function decomposed(cps){if(!SHIFTED_RANK)init$1();let ret=[];let buf=[];let check_order=false;function add6(cp){let cc=SHIFTED_RANK.get(cp);if(cc){check_order=true;cp|=cc}ret.push(cp)}for(let cp of cps){while(true){if(cp<128){ret.push(cp)}else if(is_hangul(cp)){let s_index=cp-S0;let l_index=s_index/N_COUNT|0;let v_index=s_index%N_COUNT/T_COUNT|0;let t_index=s_index%T_COUNT;add6(L0+l_index);add6(V0+v_index);if(t_index>0)add6(T0+t_index)}else{let mapped=DECOMP.get(cp);if(mapped){buf.push(...mapped)}else{add6(cp)}}if(!buf.length)break;cp=buf.pop()}}if(check_order&&ret.length>1){let prev_cc=unpack_cc(ret[0]);for(let i=1;i<ret.length;i++){let cc=unpack_cc(ret[i]);if(cc==0||prev_cc<=cc){prev_cc=cc;continue}let j=i-1;while(true){let tmp=ret[j+1];ret[j+1]=ret[j];ret[j]=tmp;if(!j)break;prev_cc=unpack_cc(ret[--j]);if(prev_cc<=cc)break}prev_cc=unpack_cc(ret[i])}}return ret}function composed_from_decomposed(v){let ret=[];let stack=[];let prev_cp=-1;let prev_cc=0;for(let packed of v){let cc=unpack_cc(packed);let cp=unpack_cp(packed);if(prev_cp==-1){if(cc==0){prev_cp=cp}else{ret.push(cp)}}else if(prev_cc>0&&prev_cc>=cc){if(cc==0){ret.push(prev_cp,...stack);stack.length=0;prev_cp=cp}else{stack.push(cp)}prev_cc=cc}else{let composed=compose_pair(prev_cp,cp);if(composed>=0){prev_cp=composed}else if(prev_cc==0&&cc==0){ret.push(prev_cp);prev_cp=cp}else{stack.push(cp);prev_cc=cc}}}if(prev_cp>=0){ret.push(prev_cp,...stack)}return ret}function nfd(cps){return decomposed(cps).map(unpack_cp)}function nfc(cps){return composed_from_decomposed(decomposed(cps))}const HYPHEN=45;const STOP_CH=".";const FE0F=65039;const UNIQUE_PH=1;const Array_from=x=>Array.from(x);function group_has_cp(g,cp){return g.P.has(cp)||g.Q.has(cp)}class Emoji extends Array{get is_emoji(){return true}}let MAPPED,IGNORED,CM,NSM,ESCAPE,GROUPS,WHOLE_VALID,WHOLE_MAP,VALID,EMOJI_LIST,EMOJI_ROOT;function init(){if(MAPPED)return;let r=read_compressed_payload(COMPRESSED$1);const read_sorted_array=()=>read_sorted(r);const read_sorted_set=()=>new Set(read_sorted_array());const set_add_many=(set,v)=>v.forEach(x=>set.add(x));MAPPED=new Map(read_mapped(r));IGNORED=read_sorted_set();CM=read_sorted_array();NSM=new Set(read_sorted_array().map(i=>CM[i]));CM=new Set(CM);ESCAPE=read_sorted_set();read_sorted_set();let chunks=read_sorted_arrays(r);let unrestricted=r();const read_chunked=()=>{let set=new Set;read_sorted_array().forEach(i=>set_add_many(set,chunks[i]));set_add_many(set,read_sorted_array());return set};GROUPS=read_array_while(i=>{let N2=read_array_while(r).map(x=>x+96);if(N2.length){let R=i>=unrestricted;N2[0]-=32;N2=str_from_cps(N2);if(R)N2=`Restricted[${N2}]`;let P=read_chunked();let Q=read_chunked();let M=!r();return{N:N2,P:P,Q:Q,M:M,R:R}}});WHOLE_VALID=read_sorted_set();WHOLE_MAP=new Map;let wholes=read_sorted_array().concat(Array_from(WHOLE_VALID)).sort((a,b2)=>a-b2);wholes.forEach((cp,i)=>{let d=r();let w=wholes[i]=d?wholes[i-d]:{V:[],M:new Map};w.V.push(cp);if(!WHOLE_VALID.has(cp)){WHOLE_MAP.set(cp,w)}});for(let{V:V,M:M}of new Set(WHOLE_MAP.values())){let recs=[];for(let cp of V){let gs=GROUPS.filter(g=>group_has_cp(g,cp));let rec=recs.find(({G:G})=>gs.some(g=>G.has(g)));if(!rec){rec={G:new Set,V:[]};recs.push(rec)}rec.V.push(cp);set_add_many(rec.G,gs)}let union=recs.flatMap(x=>Array_from(x.G));for(let{G:G,V:V2}of recs){let complement=new Set(union.filter(g=>!G.has(g)));for(let cp of V2){M.set(cp,complement)}}}VALID=new Set;let multi=new Set;const add_to_union=cp=>VALID.has(cp)?multi.add(cp):VALID.add(cp);for(let g of GROUPS){for(let cp of g.P)add_to_union(cp);for(let cp of g.Q)add_to_union(cp)}for(let cp of VALID){if(!WHOLE_MAP.has(cp)&&!multi.has(cp)){WHOLE_MAP.set(cp,UNIQUE_PH)}}set_add_many(VALID,nfd(VALID));EMOJI_LIST=read_trie(r).map(v=>Emoji.from(v)).sort(compare_arrays);EMOJI_ROOT=new Map;for(let cps of EMOJI_LIST){let prev=[EMOJI_ROOT];for(let cp of cps){let next=prev.map(node=>{let child=node.get(cp);if(!child){child=new Map;node.set(cp,child)}return child});if(cp===FE0F){prev.push(...next)}else{prev=next}}for(let x of prev){x.V=cps}}}function quoted_cp(cp){return(should_escape(cp)?"":`${bidi_qq(safe_str_from_cps([cp]))} `)+quote_cp(cp)}function bidi_qq(s){return`"${s}"‎`}function check_label_extension(cps){if(cps.length>=4&&cps[2]==HYPHEN&&cps[3]==HYPHEN){throw new Error(`invalid label extension: "${str_from_cps(cps.slice(0,4))}"`)}}function check_leading_underscore(cps){const UNDERSCORE=95;for(let i=cps.lastIndexOf(UNDERSCORE);i>0;){if(cps[--i]!==UNDERSCORE){throw new Error("underscore allowed only at start")}}}function check_fenced(cps){let cp=cps[0];let prev=FENCED.get(cp);if(prev)throw error_placement(`leading ${prev}`);let n2=cps.length;let last=-1;for(let i=1;i<n2;i++){cp=cps[i];let match=FENCED.get(cp);if(match){if(last==i)throw error_placement(`${prev} + ${match}`);last=i+1;prev=match}}if(last==n2)throw error_placement(`trailing ${prev}`)}function safe_str_from_cps(cps,max=Infinity,quoter=quote_cp){let buf=[];if(is_combining_mark(cps[0]))buf.push("◌");if(cps.length>max){max>>=1;cps=[...cps.slice(0,max),8230,...cps.slice(-max)]}let prev=0;let n2=cps.length;for(let i=0;i<n2;i++){let cp=cps[i];if(should_escape(cp)){buf.push(str_from_cps(cps.slice(prev,i)));buf.push(quoter(cp));prev=i+1}}buf.push(str_from_cps(cps.slice(prev,n2)));return buf.join("")}function is_combining_mark(cp){init();return CM.has(cp)}function should_escape(cp){init();return ESCAPE.has(cp)}function ens_normalize(name){return flatten(split(name,nfc,filter_fe0f))}function split(name,nf,ef){if(!name)return[];init();let offset=0;return name.split(STOP_CH).map(label=>{let input=explode_cp(label);let info={input:input,offset:offset};offset+=input.length+1;try{let tokens2=info.tokens=tokens_from_str(input,nf,ef);let token_count=tokens2.length;let type;if(!token_count){throw new Error(`empty label`)}let norm=info.output=tokens2.flat();check_leading_underscore(norm);let emoji=info.emoji=token_count>1||tokens2[0].is_emoji;if(!emoji&&norm.every(cp=>cp<128)){check_label_extension(norm);type="ASCII"}else{let chars=tokens2.flatMap(x=>x.is_emoji?[]:x);if(!chars.length){type="Emoji"}else{if(CM.has(norm[0]))throw error_placement("leading combining mark");for(let i=1;i<token_count;i++){let cps=tokens2[i];if(!cps.is_emoji&&CM.has(cps[0])){throw error_placement(`emoji + combining mark: "${str_from_cps(tokens2[i-1])} + ${safe_str_from_cps([cps[0]])}"`)}}check_fenced(norm);let unique=Array_from(new Set(chars));let[g]=determine_group(unique);check_group(g,chars);check_whole(g,unique);type=g.N}}info.type=type}catch(err){info.error=err}return info})}function check_whole(group,unique){let maker;let shared=[];for(let cp of unique){let whole=WHOLE_MAP.get(cp);if(whole===UNIQUE_PH)return;if(whole){let set=whole.M.get(cp);maker=maker?maker.filter(g=>set.has(g)):Array_from(set);if(!maker.length)return}else{shared.push(cp)}}if(maker){for(let g of maker){if(shared.every(cp=>group_has_cp(g,cp))){throw new Error(`whole-script confusable: ${group.N}/${g.N}`)}}}}function determine_group(unique){let groups=GROUPS;for(let cp of unique){let gs=groups.filter(g=>group_has_cp(g,cp));if(!gs.length){if(!GROUPS.some(g=>group_has_cp(g,cp))){throw error_disallowed(cp)}else{throw error_group_member(groups[0],cp)}}groups=gs;if(gs.length==1)break}return groups}function flatten(split2){return split2.map(({input:input,error:error,output:output2})=>{if(error){let msg=error.message;throw new Error(split2.length==1?msg:`Invalid label ${bidi_qq(safe_str_from_cps(input,63))}: ${msg}`)}return str_from_cps(output2)}).join(STOP_CH)}function error_disallowed(cp){return new Error(`disallowed character: ${quoted_cp(cp)}`)}function error_group_member(g,cp){let quoted=quoted_cp(cp);let gg=GROUPS.find(g2=>g2.P.has(cp));if(gg){quoted=`${gg.N} ${quoted}`}return new Error(`illegal mixture: ${g.N} + ${quoted}`)}function error_placement(where){return new Error(`illegal placement: ${where}`)}function check_group(g,cps){for(let cp of cps){if(!group_has_cp(g,cp)){throw error_group_member(g,cp)}}if(g.M){let decomposed2=nfd(cps);for(let i=1,e=decomposed2.length;i<e;i++){if(NSM.has(decomposed2[i])){let j=i+1;for(let cp;j<e&&NSM.has(cp=decomposed2[j]);j++){for(let k=i;k<j;k++){if(decomposed2[k]==cp){throw new Error(`duplicate non-spacing marks: ${quoted_cp(cp)}`)}}}if(j-i>NSM_MAX){throw new Error(`excessive non-spacing marks: ${bidi_qq(safe_str_from_cps(decomposed2.slice(i-1,j)))} (${j-i}/${NSM_MAX})`)}i=j}}}}function tokens_from_str(input,nf,ef){let ret=[];let chars=[];input=input.slice().reverse();while(input.length){let emoji=consume_emoji_reversed(input);if(emoji){if(chars.length){ret.push(nf(chars));chars=[]}ret.push(ef(emoji))}else{let cp=input.pop();if(VALID.has(cp)){chars.push(cp)}else{let cps=MAPPED.get(cp);if(cps){chars.push(...cps)}else if(!IGNORED.has(cp)){throw error_disallowed(cp)}}}}if(chars.length){ret.push(nf(chars))}return ret}function filter_fe0f(cps){return cps.filter(cp=>cp!=FE0F)}function consume_emoji_reversed(cps,eaten){let node=EMOJI_ROOT;let emoji;let pos=cps.length;while(pos){node=node.get(cps[--pos]);if(!node)break;let{V:V}=node;if(V){emoji=V;cps.length=pos}}return emoji}const Zeros=new Uint8Array(32);Zeros.fill(0);function checkComponent(comp){assertArgument(comp.length!==0,"invalid ENS name; empty component","comp",comp);return comp}function ensNameSplit(name){const bytes2=toUtf8Bytes$1(ensNormalize(name));const comps=[];if(name.length===0){return comps}let last=0;for(let i=0;i<bytes2.length;i++){const d=bytes2[i];if(d===46){comps.push(checkComponent(bytes2.slice(last,i)));last=i+1}}assertArgument(last<bytes2.length,"invalid ENS name; empty component","name",name);comps.push(checkComponent(bytes2.slice(last)));return comps}function ensNormalize(name){try{if(name.length===0){throw new Error("empty label")}return ens_normalize(name)}catch(error){assertArgument(false,`invalid ENS name (${error.message})`,"name",name)}}function namehash(name){assertArgument(typeof name==="string","invalid ENS name; not a string","name",name);assertArgument(name.length,`invalid ENS name (empty label)`,"name",name);let result=Zeros;const comps=ensNameSplit(name);while(comps.length){result=keccak256$2(concat$2([result,keccak256$2(comps.pop())]))}return hexlify$2(result)}function dnsEncode(name,_maxLength){const length=_maxLength;assertArgument(length<=255,"DNS encoded label cannot exceed 255","length",length);return hexlify$2(concat$2(ensNameSplit(name).map(comp=>{assertArgument(comp.length<=length,`label ${JSON.stringify(name)} exceeds ${length} bytes`,"name",name);const bytes2=new Uint8Array(comp.length+1);bytes2.set(comp,1);bytes2[0]=bytes2.length-1;return bytes2})))+"00"}function hashMessage$1(message){if(typeof message==="string"){message=toUtf8Bytes$1(message)}return keccak256$2(concat$2([toUtf8Bytes$1(MessagePrefix),toUtf8Bytes$1(String(message.length)),message]))}const padding$1=new Uint8Array(32);padding$1.fill(0);const BN__1=BigInt(-1);const BN_0$3=BigInt(0);const BN_1=BigInt(1);const BN_MAX_UINT256=BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");function hexPadRight$1(value){const bytes2=getBytes(value);const padOffset=bytes2.length%32;if(padOffset){return concat$2([bytes2,padding$1.slice(padOffset)])}return hexlify$2(bytes2)}const hexTrue$1=toBeHex(BN_1,32);const hexFalse$1=toBeHex(BN_0$3,32);const domainFieldTypes$1={name:"string",version:"string",chainId:"uint256",verifyingContract:"address",salt:"bytes32"};const domainFieldNames$1=["name","version","chainId","verifyingContract","salt"];function checkString$1(key2){return function(value){assertArgument(typeof value==="string",`invalid domain value for ${JSON.stringify(key2)}`,`domain.${key2}`,value);return value}}const domainChecks$1={name:checkString$1("name"),version:checkString$1("version"),chainId:function(_value2){const value=getBigInt(_value2,"domain.chainId");assertArgument(value>=0,"invalid chain ID","domain.chainId",_value2);if(Number.isSafeInteger(value)){return Number(value)}return toQuantity(value)},verifyingContract:function(value){try{return getAddress$2(value).toLowerCase()}catch(error){}assertArgument(false,`invalid domain value "verifyingContract"`,"domain.verifyingContract",value)},salt:function(value){const bytes2=getBytes(value,"domain.salt");assertArgument(bytes2.length===32,`invalid domain value "salt"`,"domain.salt",value);return hexlify$2(bytes2)}};function getBaseEncoder$1(type){{const match=type.match(/^(u?)int(\d+)$/);if(match){const signed2=match[1]==="";const width=parseInt(match[2]);assertArgument(width%8===0&&width!==0&&width<=256&&match[2]===String(width),"invalid numeric width","type",type);const boundsUpper=mask(BN_MAX_UINT256,signed2?width-1:width);const boundsLower=signed2?(boundsUpper+BN_1)*BN__1:BN_0$3;return function(_value2){const value=getBigInt(_value2,"value");assertArgument(value>=boundsLower&&value<=boundsUpper,`value out-of-bounds for ${type}`,"value",value);return toBeHex(signed2?toTwos(value,256):value,32)}}}{const match=type.match(/^bytes(\d+)$/);if(match){const width=parseInt(match[1]);assertArgument(width!==0&&width<=32&&match[1]===String(width),"invalid bytes width","type",type);return function(value){const bytes2=getBytes(value);assertArgument(bytes2.length===width,`invalid length for ${type}`,"value",value);return hexPadRight$1(value)}}}switch(type){case"address":return function(value){return zeroPadValue(getAddress$2(value),32)};case"bool":return function(value){return!value?hexFalse$1:hexTrue$1};case"bytes":return function(value){return keccak256$2(value)};case"string":return function(value){return id$2(value)}}return null}function encodeType$1(name,fields){return`${name}(${fields.map(({name:name2,type:type})=>type+" "+name2).join(",")})`}function splitArray(type){const match=type.match(/^([^\x5b]*)((\x5b\d*\x5d)*)(\x5b(\d*)\x5d)$/);if(match){return{base:match[1],index:match[2]+match[4],array:{base:match[1],prefix:match[1]+match[2],count:match[5]?parseInt(match[5]):-1}}}return{base:type}}let TypedDataEncoder$1=(_d=class{constructor(_types2){__privateAdd(this,_TypedDataEncoder_instances);__publicField(this,"primaryType");__privateAdd(this,_types);__privateAdd(this,_fullTypes);__privateAdd(this,_encoderCache);__privateSet(this,_fullTypes,new Map);__privateSet(this,_encoderCache,new Map);const links=new Map;const parents=new Map;const subtypes=new Map;const types={};Object.keys(_types2).forEach(type=>{types[type]=_types2[type].map(({name:name,type:type2})=>{let{base:base2,index:index}=splitArray(type2);if(base2==="int"&&!_types2["int"]){base2="int256"}if(base2==="uint"&&!_types2["uint"]){base2="uint256"}return{name:name,type:base2+(index||"")}});links.set(type,new Set);parents.set(type,[]);subtypes.set(type,new Set)});__privateSet(this,_types,JSON.stringify(types));for(const name in types){const uniqueNames=new Set;for(const field of types[name]){assertArgument(!uniqueNames.has(field.name),`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`,"types",_types2);uniqueNames.add(field.name);const baseType=splitArray(field.type).base;assertArgument(baseType!==name,`circular type reference to ${JSON.stringify(baseType)}`,"types",_types2);const encoder=getBaseEncoder$1(baseType);if(encoder){continue}assertArgument(parents.has(baseType),`unknown type ${JSON.stringify(baseType)}`,"types",_types2);parents.get(baseType).push(name);links.get(name).add(baseType)}}const primaryTypes=Array.from(parents.keys()).filter(n2=>parents.get(n2).length===0);assertArgument(primaryTypes.length!==0,"missing primary type","types",_types2);assertArgument(primaryTypes.length===1,`ambiguous primary types or unused types: ${primaryTypes.map(t=>JSON.stringify(t)).join(", ")}`,"types",_types2);defineProperties(this,{primaryType:primaryTypes[0]});function checkCircular(type,found){assertArgument(!found.has(type),`circular type reference to ${JSON.stringify(type)}`,"types",_types2);found.add(type);for(const child of links.get(type)){if(!parents.has(child)){continue}checkCircular(child,found);for(const subtype of found){subtypes.get(subtype).add(child)}}found.delete(type)}checkCircular(this.primaryType,new Set);for(const[name,set]of subtypes){const st=Array.from(set);st.sort();__privateGet(this,_fullTypes).set(name,encodeType$1(name,types[name])+st.map(t=>encodeType$1(t,types[t])).join(""))}}get types(){return JSON.parse(__privateGet(this,_types))}getEncoder(type){let encoder=__privateGet(this,_encoderCache).get(type);if(!encoder){encoder=__privateMethod(this,_TypedDataEncoder_instances,getEncoder_fn).call(this,type);__privateGet(this,_encoderCache).set(type,encoder)}return encoder}encodeType(name){const result=__privateGet(this,_fullTypes).get(name);assertArgument(result,`unknown type: ${JSON.stringify(name)}`,"name",name);return result}encodeData(type,value){return this.getEncoder(type)(value)}hashStruct(name,value){return keccak256$2(this.encodeData(name,value))}encode(value){return this.encodeData(this.primaryType,value)}hash(value){return this.hashStruct(this.primaryType,value)}_visit(type,value,callback){{const encoder=getBaseEncoder$1(type);if(encoder){return callback(type,value)}}const array=splitArray(type).array;if(array){assertArgument(array.count===-1||array.count===value.length,`array length mismatch; expected length ${array.count}`,"value",value);return value.map(v=>this._visit(array.prefix,v,callback))}const fields=this.types[type];if(fields){return fields.reduce((accum,{name:name,type:type2})=>{accum[name]=this._visit(type2,value[name],callback);return accum},{})}assertArgument(false,`unknown type: ${type}`,"type",type)}visit(value,callback){return this._visit(this.primaryType,value,callback)}static from(types){return new _d(types)}static getPrimaryType(types){return _d.from(types).primaryType}static hashStruct(name,types,value){return _d.from(types).hashStruct(name,value)}static hashDomain(domain){const domainFields=[];for(const name in domain){if(domain[name]==null){continue}const type=domainFieldTypes$1[name];assertArgument(type,`invalid typed-data domain key: ${JSON.stringify(name)}`,"domain",domain);domainFields.push({name:name,type:type})}domainFields.sort((a,b2)=>domainFieldNames$1.indexOf(a.name)-domainFieldNames$1.indexOf(b2.name));return _d.hashStruct("EIP712Domain",{EIP712Domain:domainFields},domain)}static encode(domain,types,value){return concat$2(["0x1901",_d.hashDomain(domain),_d.from(types).hash(value)])}static hash(domain,types,value){return keccak256$2(_d.encode(domain,types,value))}static async resolveNames(domain,types,value,resolveName){domain=Object.assign({},domain);for(const key2 in domain){if(domain[key2]==null){delete domain[key2]}}const ensCache={};if(domain.verifyingContract&&!isHexString$2(domain.verifyingContract,20)){ensCache[domain.verifyingContract]="0x"}const encoder=_d.from(types);encoder.visit(value,(type,value2)=>{if(type==="address"&&!isHexString$2(value2,20)){ensCache[value2]="0x"}return value2});for(const name in ensCache){ensCache[name]=await resolveName(name)}if(domain.verifyingContract&&ensCache[domain.verifyingContract]){domain.verifyingContract=ensCache[domain.verifyingContract]}value=encoder.visit(value,(type,value2)=>{if(type==="address"&&ensCache[value2]){return ensCache[value2]}return value2});return{domain:domain,value:value}}static getPayload(domain,types,value){_d.hashDomain(domain);const domainValues={};const domainTypes=[];domainFieldNames$1.forEach(name=>{const value2=domain[name];if(value2==null){return}domainValues[name]=domainChecks$1[name](value2);domainTypes.push({name:name,type:domainFieldTypes$1[name]})});const encoder=_d.from(types);types=encoder.types;const typesWithDomain=Object.assign({},types);assertArgument(typesWithDomain.EIP712Domain==null,"types must not contain EIP712Domain type","types.EIP712Domain",types);typesWithDomain.EIP712Domain=domainTypes;encoder.encode(value);return{types:typesWithDomain,domain:domainValues,primaryType:encoder.primaryType,message:encoder.visit(value,(type,value2)=>{if(type.match(/^bytes(\d*)/)){return hexlify$2(getBytes(value2))}if(type.match(/^u?int/)){return getBigInt(value2).toString()}switch(type){case"address":return value2.toLowerCase();case"bool":return!!value2;case"string":assertArgument(typeof value2==="string","invalid string","value",value2);return value2}assertArgument(false,"unsupported type","type",type)})}}},_types=new WeakMap,_fullTypes=new WeakMap,_encoderCache=new WeakMap,_TypedDataEncoder_instances=new WeakSet,getEncoder_fn=function(type){{const encoder=getBaseEncoder$1(type);if(encoder){return encoder}}const array=splitArray(type).array;if(array){const subtype=array.prefix;const subEncoder=this.getEncoder(subtype);return value=>{assertArgument(array.count===-1||array.count===value.length,`array length mismatch; expected length ${array.count}`,"value",value);let result=value.map(subEncoder);if(__privateGet(this,_fullTypes).has(subtype)){result=result.map(keccak256$2)}return keccak256$2(concat$2(result))}}const fields=this.types[type];if(fields){const encodedType=id$2(__privateGet(this,_fullTypes).get(type));return value=>{const values=fields.map(({name:name,type:type2})=>{const result=this.getEncoder(type2)(value[name]);if(__privateGet(this,_fullTypes).has(type2)){return keccak256$2(result)}return result});values.unshift(encodedType);return concat$2(values)}}assertArgument(false,`unknown type: ${type}`,"type",type)},_d);function setify(items){const result=new Set;items.forEach(k=>result.add(k));return Object.freeze(result)}const _kwVisibDeploy="external public payable override";const KwVisibDeploy=setify(_kwVisibDeploy.split(" "));const _kwVisib="constant external internal payable private public pure view override";const KwVisib=setify(_kwVisib.split(" "));const _kwTypes="constructor error event fallback function receive struct";const KwTypes=setify(_kwTypes.split(" "));const _kwModifiers="calldata memory storage payable indexed";const KwModifiers=setify(_kwModifiers.split(" "));const _kwOther="tuple returns";const _keywords=[_kwTypes,_kwModifiers,_kwOther,_kwVisib].join(" ");const Keywords=setify(_keywords.split(" "));const SimpleTokens={"(":"OPEN_PAREN",")":"CLOSE_PAREN","[":"OPEN_BRACKET","]":"CLOSE_BRACKET",",":"COMMA","@":"AT"};const regexWhitespacePrefix=new RegExp("^(\\s*)");const regexNumberPrefix=new RegExp("^([0-9]+)");const regexIdPrefix=new RegExp("^([a-zA-Z$_][a-zA-Z0-9$_]*)");const regexId=new RegExp("^([a-zA-Z$_][a-zA-Z0-9$_]*)$");const regexType=new RegExp("^(address|bool|bytes([0-9]*)|string|u?int([0-9]*))$");const _TokenString=class _TokenString{constructor(tokens2){__privateAdd(this,_TokenString_instances);__privateAdd(this,_offset2);__privateAdd(this,_tokens);__privateSet(this,_offset2,0);__privateSet(this,_tokens,tokens2.slice())}get offset(){return __privateGet(this,_offset2)}get length(){return __privateGet(this,_tokens).length-__privateGet(this,_offset2)}clone(){return new _TokenString(__privateGet(this,_tokens))}reset(){__privateSet(this,_offset2,0)}popKeyword(allowed){const top=this.peek();if(top.type!=="KEYWORD"||!allowed.has(top.text)){throw new Error(`expected keyword ${top.text}`)}return this.pop().text}popType(type){if(this.peek().type!==type){const top=this.peek();throw new Error(`expected ${type}; got ${top.type} ${JSON.stringify(top.text)}`)}return this.pop().text}popParen(){const top=this.peek();if(top.type!=="OPEN_PAREN"){throw new Error("bad start")}const result=__privateMethod(this,_TokenString_instances,subTokenString_fn).call(this,__privateGet(this,_offset2)+1,top.match+1);__privateSet(this,_offset2,top.match+1);return result}popParams(){const top=this.peek();if(top.type!=="OPEN_PAREN"){throw new Error("bad start")}const result=[];while(__privateGet(this,_offset2)<top.match-1){const link=this.peek().linkNext;result.push(__privateMethod(this,_TokenString_instances,subTokenString_fn).call(this,__privateGet(this,_offset2)+1,link));__privateSet(this,_offset2,link)}__privateSet(this,_offset2,top.match+1);return result}peek(){if(__privateGet(this,_offset2)>=__privateGet(this,_tokens).length){throw new Error("out-of-bounds")}return __privateGet(this,_tokens)[__privateGet(this,_offset2)]}peekKeyword(allowed){const top=this.peekType("KEYWORD");return top!=null&&allowed.has(top)?top:null}peekType(type){if(this.length===0){return null}const top=this.peek();return top.type===type?top.text:null}pop(){const result=this.peek();__privateWrapper(this,_offset2)._++;return result}toString(){const tokens2=[];for(let i=__privateGet(this,_offset2);i<__privateGet(this,_tokens).length;i++){const token=__privateGet(this,_tokens)[i];tokens2.push(`${token.type}:${token.text}`)}return`<TokenString ${tokens2.join(" ")}>`}};_offset2=new WeakMap;_tokens=new WeakMap;_TokenString_instances=new WeakSet;subTokenString_fn=function(from=0,to=0){return new _TokenString(__privateGet(this,_tokens).slice(from,to).map(t=>Object.freeze(Object.assign({},t,{match:t.match-from,linkBack:t.linkBack-from,linkNext:t.linkNext-from}))))};let TokenString=_TokenString;function lex(text){const tokens2=[];const throwError2=message=>{const token=offset<text.length?JSON.stringify(text[offset]):"$EOI";throw new Error(`invalid token ${token} at ${offset}: ${message}`)};let brackets=[];let commas=[];let offset=0;while(offset<text.length){let cur=text.substring(offset);let match=cur.match(regexWhitespacePrefix);if(match){offset+=match[1].length;cur=text.substring(offset)}const token={depth:brackets.length,linkBack:-1,linkNext:-1,match:-1,type:"",text:"",offset:offset,value:-1};tokens2.push(token);let type=SimpleTokens[cur[0]]||"";if(type){token.type=type;token.text=cur[0];offset++;if(type==="OPEN_PAREN"){brackets.push(tokens2.length-1);commas.push(tokens2.length-1)}else if(type=="CLOSE_PAREN"){if(brackets.length===0){throwError2("no matching open bracket")}token.match=brackets.pop();tokens2[token.match].match=tokens2.length-1;token.depth--;token.linkBack=commas.pop();tokens2[token.linkBack].linkNext=tokens2.length-1}else if(type==="COMMA"){token.linkBack=commas.pop();tokens2[token.linkBack].linkNext=tokens2.length-1;commas.push(tokens2.length-1)}else if(type==="OPEN_BRACKET"){token.type="BRACKET"}else if(type==="CLOSE_BRACKET"){let suffix=tokens2.pop().text;if(tokens2.length>0&&tokens2[tokens2.length-1].type==="NUMBER"){const value=tokens2.pop().text;suffix=value+suffix;tokens2[tokens2.length-1].value=getNumber(value)}if(tokens2.length===0||tokens2[tokens2.length-1].type!=="BRACKET"){throw new Error("missing opening bracket")}tokens2[tokens2.length-1].text+=suffix}continue}match=cur.match(regexIdPrefix);if(match){token.text=match[1];offset+=token.text.length;if(Keywords.has(token.text)){token.type="KEYWORD";continue}if(token.text.match(regexType)){token.type="TYPE";continue}token.type="ID";continue}match=cur.match(regexNumberPrefix);if(match){token.text=match[1];token.type="NUMBER";offset+=token.text.length;continue}throw new Error(`unexpected token ${JSON.stringify(cur[0])} at position ${offset}`)}return new TokenString(tokens2.map(t=>Object.freeze(t)))}function allowSingle(set,allowed){let included=[];for(const key2 in allowed.keys()){if(set.has(key2)){included.push(key2)}}if(included.length>1){throw new Error(`conflicting types: ${included.join(", ")}`)}}function consumeName(type,tokens2){if(tokens2.peekKeyword(KwTypes)){const keyword=tokens2.pop().text;if(keyword!==type){throw new Error(`expected ${type}, got ${keyword}`)}}return tokens2.popType("ID")}function consumeKeywords(tokens2,allowed){const keywords=new Set;while(true){const keyword=tokens2.peekType("KEYWORD");if(keyword==null||allowed&&!allowed.has(keyword)){break}tokens2.pop();if(keywords.has(keyword)){throw new Error(`duplicate keywords: ${JSON.stringify(keyword)}`)}keywords.add(keyword)}return Object.freeze(keywords)}function consumeMutability(tokens2){let modifiers=consumeKeywords(tokens2,KwVisib);allowSingle(modifiers,setify("constant payable nonpayable".split(" ")));allowSingle(modifiers,setify("pure view payable nonpayable".split(" ")));if(modifiers.has("view")){return"view"}if(modifiers.has("pure")){return"pure"}if(modifiers.has("payable")){return"payable"}if(modifiers.has("nonpayable")){return"nonpayable"}if(modifiers.has("constant")){return"view"}return"nonpayable"}function consumeParams(tokens2,allowIndexed){return tokens2.popParams().map(t=>ParamType.from(t,allowIndexed))}function consumeGas(tokens2){if(tokens2.peekType("AT")){tokens2.pop();if(tokens2.peekType("NUMBER")){return getBigInt(tokens2.pop().text)}throw new Error("invalid gas")}return null}function consumeEoi(tokens2){if(tokens2.length){throw new Error(`unexpected tokens at offset ${tokens2.offset}: ${tokens2.toString()}`)}}const regexArrayType=new RegExp(/^(.*)\[([0-9]*)\]$/);function verifyBasicType(type){const match=type.match(regexType);assertArgument(match,"invalid type","type",type);if(type==="uint"){return"uint256"}if(type==="int"){return"int256"}if(match[2]){const length=parseInt(match[2]);assertArgument(length!==0&&length<=32,"invalid bytes length","type",type)}else if(match[3]){const size=parseInt(match[3]);assertArgument(size!==0&&size<=256&&size%8===0,"invalid numeric width","type",type)}return type}const _guard$2={};const internal$1=Symbol.for("_ethers_internal");const ParamTypeInternal="_ParamTypeInternal";const ErrorFragmentInternal="_ErrorInternal";const EventFragmentInternal="_EventInternal";const ConstructorFragmentInternal="_ConstructorInternal";const FallbackFragmentInternal="_FallbackInternal";const FunctionFragmentInternal="_FunctionInternal";const StructFragmentInternal="_StructInternal";const _ParamType=class _ParamType{constructor(guard,name,type,baseType,indexed,components,arrayLength,arrayChildren){__privateAdd(this,_ParamType_instances);__publicField(this,"name");__publicField(this,"type");__publicField(this,"baseType");__publicField(this,"indexed");__publicField(this,"components");__publicField(this,"arrayLength");__publicField(this,"arrayChildren");assertPrivate(guard,_guard$2,"ParamType");Object.defineProperty(this,internal$1,{value:ParamTypeInternal});if(components){components=Object.freeze(components.slice())}if(baseType==="array"){if(arrayLength==null||arrayChildren==null){throw new Error("")}}else if(arrayLength!=null||arrayChildren!=null){throw new Error("")}if(baseType==="tuple"){if(components==null){throw new Error("")}}else if(components!=null){throw new Error("")}defineProperties(this,{name:name,type:type,baseType:baseType,indexed:indexed,components:components,arrayLength:arrayLength,arrayChildren:arrayChildren})}format(format){if(format==null){format="sighash"}if(format==="json"){const name=this.name||"";if(this.isArray()){const result3=JSON.parse(this.arrayChildren.format("json"));result3.name=name;result3.type+=`[${this.arrayLength<0?"":String(this.arrayLength)}]`;return JSON.stringify(result3)}const result2={type:this.baseType==="tuple"?"tuple":this.type,name:name};if(typeof this.indexed==="boolean"){result2.indexed=this.indexed}if(this.isTuple()){result2.components=this.components.map(c=>JSON.parse(c.format(format)))}return JSON.stringify(result2)}let result="";if(this.isArray()){result+=this.arrayChildren.format(format);result+=`[${this.arrayLength<0?"":String(this.arrayLength)}]`}else{if(this.isTuple()){result+="("+this.components.map(comp=>comp.format(format)).join(format==="full"?", ":",")+")"}else{result+=this.type}}if(format!=="sighash"){if(this.indexed===true){result+=" indexed"}if(format==="full"&&this.name){result+=" "+this.name}}return result}isArray(){return this.baseType==="array"}isTuple(){return this.baseType==="tuple"}isIndexable(){return this.indexed!=null}walk(value,process){if(this.isArray()){if(!Array.isArray(value)){throw new Error("invalid array value")}if(this.arrayLength!==-1&&value.length!==this.arrayLength){throw new Error("array is wrong length")}const _this=this;return value.map(v=>_this.arrayChildren.walk(v,process))}if(this.isTuple()){if(!Array.isArray(value)){throw new Error("invalid tuple value")}if(value.length!==this.components.length){throw new Error("array is wrong length")}const _this=this;return value.map((v,i)=>_this.components[i].walk(v,process))}return process(this.type,value)}async walkAsync(value,process){const promises=[];const result=[value];__privateMethod(this,_ParamType_instances,walkAsync_fn).call(this,promises,value,process,value2=>{result[0]=value2});if(promises.length){await Promise.all(promises)}return result[0]}static from(obj,allowIndexed){if(_ParamType.isParamType(obj)){return obj}if(typeof obj==="string"){try{return _ParamType.from(lex(obj),allowIndexed)}catch(error){assertArgument(false,"invalid param type","obj",obj)}}else if(obj instanceof TokenString){let type2="",baseType="";let comps=null;if(consumeKeywords(obj,setify(["tuple"])).has("tuple")||obj.peekType("OPEN_PAREN")){baseType="tuple";comps=obj.popParams().map(t=>_ParamType.from(t));type2=`tuple(${comps.map(c=>c.format()).join(",")})`}else{type2=verifyBasicType(obj.popType("TYPE"));baseType=type2}let arrayChildren=null;let arrayLength=null;while(obj.length&&obj.peekType("BRACKET")){const bracket=obj.pop();arrayChildren=new _ParamType(_guard$2,"",type2,baseType,null,comps,arrayLength,arrayChildren);arrayLength=bracket.value;type2+=bracket.text;baseType="array";comps=null}let indexed2=null;const keywords=consumeKeywords(obj,KwModifiers);if(keywords.has("indexed")){if(!allowIndexed){throw new Error("")}indexed2=true}const name2=obj.peekType("ID")?obj.pop().text:"";if(obj.length){throw new Error("leftover tokens")}return new _ParamType(_guard$2,name2,type2,baseType,indexed2,comps,arrayLength,arrayChildren)}const name=obj.name;assertArgument(!name||typeof name==="string"&&name.match(regexId),"invalid name","obj.name",name);let indexed=obj.indexed;if(indexed!=null){assertArgument(allowIndexed,"parameter cannot be indexed","obj.indexed",obj.indexed);indexed=!!indexed}let type=obj.type;let arrayMatch=type.match(regexArrayType);if(arrayMatch){const arrayLength=parseInt(arrayMatch[2]||"-1");const arrayChildren=_ParamType.from({type:arrayMatch[1],components:obj.components});return new _ParamType(_guard$2,name||"",type,"array",indexed,null,arrayLength,arrayChildren)}if(type==="tuple"||type.startsWith("tuple(")||type.startsWith("(")){const comps=obj.components!=null?obj.components.map(c=>_ParamType.from(c)):null;const tuple=new _ParamType(_guard$2,name||"",type,"tuple",indexed,comps,null,null);return tuple}type=verifyBasicType(obj.type);return new _ParamType(_guard$2,name||"",type,type,indexed,null,null,null)}static isParamType(value){return value&&value[internal$1]===ParamTypeInternal}};_ParamType_instances=new WeakSet;walkAsync_fn=function(promises,value,process,setValue){if(this.isArray()){if(!Array.isArray(value)){throw new Error("invalid array value")}if(this.arrayLength!==-1&&value.length!==this.arrayLength){throw new Error("array is wrong length")}const childType=this.arrayChildren;const result2=value.slice();result2.forEach((value2,index)=>{var _a2;__privateMethod(_a2=childType,_ParamType_instances,walkAsync_fn).call(_a2,promises,value2,process,value3=>{result2[index]=value3})});setValue(result2);return}if(this.isTuple()){const components=this.components;let result2;if(Array.isArray(value)){result2=value.slice()}else{if(value==null||typeof value!=="object"){throw new Error("invalid tuple value")}result2=components.map(param=>{if(!param.name){throw new Error("cannot use object value with unnamed components")}if(!(param.name in value)){throw new Error(`missing value for component ${param.name}`)}return value[param.name]})}if(result2.length!==this.components.length){throw new Error("array is wrong length")}result2.forEach((value2,index)=>{var _a2;__privateMethod(_a2=components[index],_ParamType_instances,walkAsync_fn).call(_a2,promises,value2,process,value3=>{result2[index]=value3})});setValue(result2);return}const result=process(this.type,value);if(result.then){promises.push(async function(){setValue(await result)}())}else{setValue(result)}};let ParamType=_ParamType;class Fragment{constructor(guard,type,inputs){__publicField(this,"type");__publicField(this,"inputs");assertPrivate(guard,_guard$2,"Fragment");inputs=Object.freeze(inputs.slice());defineProperties(this,{type:type,inputs:inputs})}static from(obj){if(typeof obj==="string"){try{Fragment.from(JSON.parse(obj))}catch(e){}return Fragment.from(lex(obj))}if(obj instanceof TokenString){const type=obj.peekKeyword(KwTypes);switch(type){case"constructor":return ConstructorFragment.from(obj);case"error":return ErrorFragment.from(obj);case"event":return EventFragment.from(obj);case"fallback":case"receive":return FallbackFragment.from(obj);case"function":return FunctionFragment.from(obj);case"struct":return StructFragment.from(obj)}}else if(typeof obj==="object"){switch(obj.type){case"constructor":return ConstructorFragment.from(obj);case"error":return ErrorFragment.from(obj);case"event":return EventFragment.from(obj);case"fallback":case"receive":return FallbackFragment.from(obj);case"function":return FunctionFragment.from(obj);case"struct":return StructFragment.from(obj)}assert$7(false,`unsupported type: ${obj.type}`,"UNSUPPORTED_OPERATION",{operation:"Fragment.from"})}assertArgument(false,"unsupported frgament object","obj",obj)}static isConstructor(value){return ConstructorFragment.isFragment(value)}static isError(value){return ErrorFragment.isFragment(value)}static isEvent(value){return EventFragment.isFragment(value)}static isFunction(value){return FunctionFragment.isFragment(value)}static isStruct(value){return StructFragment.isFragment(value)}}class NamedFragment extends Fragment{constructor(guard,type,name,inputs){super(guard,type,inputs);__publicField(this,"name");assertArgument(typeof name==="string"&&name.match(regexId),"invalid identifier","name",name);inputs=Object.freeze(inputs.slice());defineProperties(this,{name:name})}}function joinParams(format,params){return"("+params.map(p=>p.format(format)).join(format==="full"?", ":",")+")"}class ErrorFragment extends NamedFragment{constructor(guard,name,inputs){super(guard,"error",name,inputs);Object.defineProperty(this,internal$1,{value:ErrorFragmentInternal})}get selector(){return id$2(this.format("sighash")).substring(0,10)}format(format){if(format==null){format="sighash"}if(format==="json"){return JSON.stringify({type:"error",name:this.name,inputs:this.inputs.map(input=>JSON.parse(input.format(format)))})}const result=[];if(format!=="sighash"){result.push("error")}result.push(this.name+joinParams(format,this.inputs));return result.join(" ")}static from(obj){if(ErrorFragment.isFragment(obj)){return obj}if(typeof obj==="string"){return ErrorFragment.from(lex(obj))}else if(obj instanceof TokenString){const name=consumeName("error",obj);const inputs=consumeParams(obj);consumeEoi(obj);return new ErrorFragment(_guard$2,name,inputs)}return new ErrorFragment(_guard$2,obj.name,obj.inputs?obj.inputs.map(ParamType.from):[])}static isFragment(value){return value&&value[internal$1]===ErrorFragmentInternal}}class EventFragment extends NamedFragment{constructor(guard,name,inputs,anonymous){super(guard,"event",name,inputs);__publicField(this,"anonymous");Object.defineProperty(this,internal$1,{value:EventFragmentInternal});defineProperties(this,{anonymous:anonymous})}get topicHash(){return id$2(this.format("sighash"))}format(format){if(format==null){format="sighash"}if(format==="json"){return JSON.stringify({type:"event",anonymous:this.anonymous,name:this.name,inputs:this.inputs.map(i=>JSON.parse(i.format(format)))})}const result=[];if(format!=="sighash"){result.push("event")}result.push(this.name+joinParams(format,this.inputs));if(format!=="sighash"&&this.anonymous){result.push("anonymous")}return result.join(" ")}static getTopicHash(name,params){params=(params||[]).map(p=>ParamType.from(p));const fragment=new EventFragment(_guard$2,name,params,false);return fragment.topicHash}static from(obj){if(EventFragment.isFragment(obj)){return obj}if(typeof obj==="string"){try{return EventFragment.from(lex(obj))}catch(error){assertArgument(false,"invalid event fragment","obj",obj)}}else if(obj instanceof TokenString){const name=consumeName("event",obj);const inputs=consumeParams(obj,true);const anonymous=!!consumeKeywords(obj,setify(["anonymous"])).has("anonymous");consumeEoi(obj);return new EventFragment(_guard$2,name,inputs,anonymous)}return new EventFragment(_guard$2,obj.name,obj.inputs?obj.inputs.map(p=>ParamType.from(p,true)):[],!!obj.anonymous)}static isFragment(value){return value&&value[internal$1]===EventFragmentInternal}}class ConstructorFragment extends Fragment{constructor(guard,type,inputs,payable,gas){super(guard,type,inputs);__publicField(this,"payable");__publicField(this,"gas");Object.defineProperty(this,internal$1,{value:ConstructorFragmentInternal});defineProperties(this,{payable:payable,gas:gas})}format(format){assert$7(format!=null&&format!=="sighash","cannot format a constructor for sighash","UNSUPPORTED_OPERATION",{operation:"format(sighash)"});if(format==="json"){return JSON.stringify({type:"constructor",stateMutability:this.payable?"payable":"undefined",payable:this.payable,gas:this.gas!=null?this.gas:void 0,inputs:this.inputs.map(i=>JSON.parse(i.format(format)))})}const result=[`constructor${joinParams(format,this.inputs)}`];if(this.payable){result.push("payable")}if(this.gas!=null){result.push(`@${this.gas.toString()}`)}return result.join(" ")}static from(obj){if(ConstructorFragment.isFragment(obj)){return obj}if(typeof obj==="string"){try{return ConstructorFragment.from(lex(obj))}catch(error){assertArgument(false,"invalid constuctor fragment","obj",obj)}}else if(obj instanceof TokenString){consumeKeywords(obj,setify(["constructor"]));const inputs=consumeParams(obj);const payable=!!consumeKeywords(obj,KwVisibDeploy).has("payable");const gas=consumeGas(obj);consumeEoi(obj);return new ConstructorFragment(_guard$2,"constructor",inputs,payable,gas)}return new ConstructorFragment(_guard$2,"constructor",obj.inputs?obj.inputs.map(ParamType.from):[],!!obj.payable,obj.gas!=null?obj.gas:null)}static isFragment(value){return value&&value[internal$1]===ConstructorFragmentInternal}}class FallbackFragment extends Fragment{constructor(guard,inputs,payable){super(guard,"fallback",inputs);__publicField(this,"payable");Object.defineProperty(this,internal$1,{value:FallbackFragmentInternal});defineProperties(this,{payable:payable})}format(format){const type=this.inputs.length===0?"receive":"fallback";if(format==="json"){const stateMutability=this.payable?"payable":"nonpayable";return JSON.stringify({type:type,stateMutability:stateMutability})}return`${type}()${this.payable?" payable":""}`}static from(obj){if(FallbackFragment.isFragment(obj)){return obj}if(typeof obj==="string"){try{return FallbackFragment.from(lex(obj))}catch(error){assertArgument(false,"invalid fallback fragment","obj",obj)}}else if(obj instanceof TokenString){const errorObj=obj.toString();const topIsValid=obj.peekKeyword(setify(["fallback","receive"]));assertArgument(topIsValid,"type must be fallback or receive","obj",errorObj);const type=obj.popKeyword(setify(["fallback","receive"]));if(type==="receive"){const inputs2=consumeParams(obj);assertArgument(inputs2.length===0,`receive cannot have arguments`,"obj.inputs",inputs2);consumeKeywords(obj,setify(["payable"]));consumeEoi(obj);return new FallbackFragment(_guard$2,[],true)}let inputs=consumeParams(obj);if(inputs.length){assertArgument(inputs.length===1&&inputs[0].type==="bytes","invalid fallback inputs","obj.inputs",inputs.map(i=>i.format("minimal")).join(", "))}else{inputs=[ParamType.from("bytes")]}const mutability=consumeMutability(obj);assertArgument(mutability==="nonpayable"||mutability==="payable","fallback cannot be constants","obj.stateMutability",mutability);if(consumeKeywords(obj,setify(["returns"])).has("returns")){const outputs=consumeParams(obj);assertArgument(outputs.length===1&&outputs[0].type==="bytes","invalid fallback outputs","obj.outputs",outputs.map(i=>i.format("minimal")).join(", "))}consumeEoi(obj);return new FallbackFragment(_guard$2,inputs,mutability==="payable")}if(obj.type==="receive"){return new FallbackFragment(_guard$2,[],true)}if(obj.type==="fallback"){const inputs=[ParamType.from("bytes")];const payable=obj.stateMutability==="payable";return new FallbackFragment(_guard$2,inputs,payable)}assertArgument(false,"invalid fallback description","obj",obj)}static isFragment(value){return value&&value[internal$1]===FallbackFragmentInternal}}class FunctionFragment extends NamedFragment{constructor(guard,name,stateMutability,inputs,outputs,gas){super(guard,"function",name,inputs);__publicField(this,"constant");__publicField(this,"outputs");__publicField(this,"stateMutability");__publicField(this,"payable");__publicField(this,"gas");Object.defineProperty(this,internal$1,{value:FunctionFragmentInternal});outputs=Object.freeze(outputs.slice());const constant=stateMutability==="view"||stateMutability==="pure";const payable=stateMutability==="payable";defineProperties(this,{constant:constant,gas:gas,outputs:outputs,payable:payable,stateMutability:stateMutability})}get selector(){return id$2(this.format("sighash")).substring(0,10)}format(format){if(format==null){format="sighash"}if(format==="json"){return JSON.stringify({type:"function",name:this.name,constant:this.constant,stateMutability:this.stateMutability!=="nonpayable"?this.stateMutability:void 0,payable:this.payable,gas:this.gas!=null?this.gas:void 0,inputs:this.inputs.map(i=>JSON.parse(i.format(format))),outputs:this.outputs.map(o=>JSON.parse(o.format(format)))})}const result=[];if(format!=="sighash"){result.push("function")}result.push(this.name+joinParams(format,this.inputs));if(format!=="sighash"){if(this.stateMutability!=="nonpayable"){result.push(this.stateMutability)}if(this.outputs&&this.outputs.length){result.push("returns");result.push(joinParams(format,this.outputs))}if(this.gas!=null){result.push(`@${this.gas.toString()}`)}}return result.join(" ")}static getSelector(name,params){params=(params||[]).map(p=>ParamType.from(p));const fragment=new FunctionFragment(_guard$2,name,"view",params,[],null);return fragment.selector}static from(obj){if(FunctionFragment.isFragment(obj)){return obj}if(typeof obj==="string"){try{return FunctionFragment.from(lex(obj))}catch(error){assertArgument(false,"invalid function fragment","obj",obj)}}else if(obj instanceof TokenString){const name=consumeName("function",obj);const inputs=consumeParams(obj);const mutability=consumeMutability(obj);let outputs=[];if(consumeKeywords(obj,setify(["returns"])).has("returns")){outputs=consumeParams(obj)}const gas=consumeGas(obj);consumeEoi(obj);return new FunctionFragment(_guard$2,name,mutability,inputs,outputs,gas)}let stateMutability=obj.stateMutability;if(stateMutability==null){stateMutability="payable";if(typeof obj.constant==="boolean"){stateMutability="view";if(!obj.constant){stateMutability="payable";if(typeof obj.payable==="boolean"&&!obj.payable){stateMutability="nonpayable"}}}else if(typeof obj.payable==="boolean"&&!obj.payable){stateMutability="nonpayable"}}return new FunctionFragment(_guard$2,obj.name,stateMutability,obj.inputs?obj.inputs.map(ParamType.from):[],obj.outputs?obj.outputs.map(ParamType.from):[],obj.gas!=null?obj.gas:null)}static isFragment(value){return value&&value[internal$1]===FunctionFragmentInternal}}class StructFragment extends NamedFragment{constructor(guard,name,inputs){super(guard,"struct",name,inputs);Object.defineProperty(this,internal$1,{value:StructFragmentInternal})}format(){throw new Error("@TODO")}static from(obj){if(typeof obj==="string"){try{return StructFragment.from(lex(obj))}catch(error){assertArgument(false,"invalid struct fragment","obj",obj)}}else if(obj instanceof TokenString){const name=consumeName("struct",obj);const inputs=consumeParams(obj);consumeEoi(obj);return new StructFragment(_guard$2,name,inputs)}return new StructFragment(_guard$2,obj.name,obj.inputs?obj.inputs.map(ParamType.from):[])}static isFragment(value){return value&&value[internal$1]===StructFragmentInternal}}const PanicReasons$1=new Map;PanicReasons$1.set(0,"GENERIC_PANIC");PanicReasons$1.set(1,"ASSERT_FALSE");PanicReasons$1.set(17,"OVERFLOW");PanicReasons$1.set(18,"DIVIDE_BY_ZERO");PanicReasons$1.set(33,"ENUM_RANGE_ERROR");PanicReasons$1.set(34,"BAD_STORAGE_DATA");PanicReasons$1.set(49,"STACK_UNDERFLOW");PanicReasons$1.set(50,"ARRAY_RANGE_ERROR");PanicReasons$1.set(65,"OUT_OF_MEMORY");PanicReasons$1.set(81,"UNINITIALIZED_FUNCTION_CALL");const paramTypeBytes=new RegExp(/^bytes([0-9]*)$/);const paramTypeNumber=new RegExp(/^(u?int)([0-9]*)$/);let defaultCoder=null;let defaultMaxInflation=1024;function getBuiltinCallException(action,tx,data,abiCoder){let message="missing revert data";let reason=null;const invocation=null;let revert=null;if(data){message="execution reverted";const bytes2=getBytes(data);data=hexlify$2(data);if(bytes2.length===0){message+=" (no data present; likely require(false) occurred";reason="require(false)"}else if(bytes2.length%32!==4){message+=" (could not decode reason; invalid data length)"}else if(hexlify$2(bytes2.slice(0,4))==="0x08c379a0"){try{reason=abiCoder.decode(["string"],bytes2.slice(4))[0];revert={signature:"Error(string)",name:"Error",args:[reason]};message+=`: ${JSON.stringify(reason)}`}catch(error){message+=" (could not decode reason; invalid string data)"}}else if(hexlify$2(bytes2.slice(0,4))==="0x4e487b71"){try{const code=Number(abiCoder.decode(["uint256"],bytes2.slice(4))[0]);revert={signature:"Panic(uint256)",name:"Panic",args:[code]};reason=`Panic due to ${PanicReasons$1.get(code)||"UNKNOWN"}(${code})`;message+=`: ${reason}`}catch(error){message+=" (could not decode panic code)"}}else{message+=" (unknown custom error)"}}const transaction={to:tx.to?getAddress$2(tx.to):null,data:tx.data||"0x"};if(tx.from){transaction.from=getAddress$2(tx.from)}return makeError(message,"CALL_EXCEPTION",{action:action,data:data,reason:reason,transaction:transaction,invocation:invocation,revert:revert})}const _AbiCoder=class _AbiCoder{constructor(){__privateAdd(this,_AbiCoder_instances)}getDefaultValue(types){const coders=types.map(type=>__privateMethod(this,_AbiCoder_instances,getCoder_fn).call(this,ParamType.from(type)));const coder=new TupleCoder(coders,"_");return coder.defaultValue()}encode(types,values){assertArgumentCount(values.length,types.length,"types/values length mismatch");const coders=types.map(type=>__privateMethod(this,_AbiCoder_instances,getCoder_fn).call(this,ParamType.from(type)));const coder=new TupleCoder(coders,"_");const writer=new Writer;coder.encode(writer,values);return writer.data}decode(types,data,loose){const coders=types.map(type=>__privateMethod(this,_AbiCoder_instances,getCoder_fn).call(this,ParamType.from(type)));const coder=new TupleCoder(coders,"_");return coder.decode(new Reader(data,loose,defaultMaxInflation))}static _setDefaultMaxInflation(value){assertArgument(typeof value==="number"&&Number.isInteger(value),"invalid defaultMaxInflation factor","value",value);defaultMaxInflation=value}static defaultAbiCoder(){if(defaultCoder==null){defaultCoder=new _AbiCoder}return defaultCoder}static getBuiltinCallException(action,tx,data){return getBuiltinCallException(action,tx,data,_AbiCoder.defaultAbiCoder())}};_AbiCoder_instances=new WeakSet;getCoder_fn=function(param){if(param.isArray()){return new ArrayCoder(__privateMethod(this,_AbiCoder_instances,getCoder_fn).call(this,param.arrayChildren),param.arrayLength,param.name)}if(param.isTuple()){return new TupleCoder(param.components.map(c=>__privateMethod(this,_AbiCoder_instances,getCoder_fn).call(this,c)),param.name)}switch(param.baseType){case"address":return new AddressCoder(param.name);case"bool":return new BooleanCoder(param.name);case"string":return new StringCoder(param.name);case"bytes":return new BytesCoder(param.name);case"":return new NullCoder(param.name)}let match=param.type.match(paramTypeNumber);if(match){let size=parseInt(match[2]||"256");assertArgument(size!==0&&size<=256&&size%8===0,"invalid "+match[1]+" bit length","param",param);return new NumberCoder(size/8,match[1]==="int",param.name)}match=param.type.match(paramTypeBytes);if(match){let size=parseInt(match[1]);assertArgument(size!==0&&size<=32,"invalid bytes length","param",param);return new FixedBytesCoder(size,param.name)}assertArgument(false,"invalid type","type",param.type)};let AbiCoder=_AbiCoder;class LogDescription{constructor(fragment,topic,args){__publicField(this,"fragment");__publicField(this,"name");__publicField(this,"signature");__publicField(this,"topic");__publicField(this,"args");const name=fragment.name,signature2=fragment.format();defineProperties(this,{fragment:fragment,name:name,signature:signature2,topic:topic,args:args})}}class TransactionDescription{constructor(fragment,selector,args,value){__publicField(this,"fragment");__publicField(this,"name");__publicField(this,"args");__publicField(this,"signature");__publicField(this,"selector");__publicField(this,"value");const name=fragment.name,signature2=fragment.format();defineProperties(this,{fragment:fragment,name:name,args:args,signature:signature2,selector:selector,value:value})}}class ErrorDescription{constructor(fragment,selector,args){__publicField(this,"fragment");__publicField(this,"name");__publicField(this,"args");__publicField(this,"signature");__publicField(this,"selector");const name=fragment.name,signature2=fragment.format();defineProperties(this,{fragment:fragment,name:name,args:args,signature:signature2,selector:selector})}}class Indexed{constructor(hash2){__publicField(this,"hash");__publicField(this,"_isIndexed");defineProperties(this,{hash:hash2,_isIndexed:true})}static isIndexed(value){return!!(value&&value._isIndexed)}}const PanicReasons={0:"generic panic",1:"assert(false)",17:"arithmetic overflow",18:"division or modulo by zero",33:"enum overflow",34:"invalid encoded storage byte array accessed",49:"out-of-bounds array access; popping on an empty array",50:"out-of-bounds access of an array or bytesN",65:"out of memory",81:"uninitialized function"};const BuiltinErrors={"0x08c379a0":{signature:"Error(string)",name:"Error",inputs:["string"],reason:message=>`reverted with reason string ${JSON.stringify(message)}`},"0x4e487b71":{signature:"Panic(uint256)",name:"Panic",inputs:["uint256"],reason:code=>{let reason="unknown panic code";if(code>=0&&code<=255&&PanicReasons[code.toString()]){reason=PanicReasons[code.toString()]}return`reverted with panic code 0x${code.toString(16)} (${reason})`}}};const _Interface=class _Interface{constructor(fragments){__privateAdd(this,_Interface_instances);__publicField(this,"fragments");__publicField(this,"deploy");__publicField(this,"fallback");__publicField(this,"receive");__privateAdd(this,_errors);__privateAdd(this,_events);__privateAdd(this,_functions);__privateAdd(this,_abiCoder);let abi=[];if(typeof fragments==="string"){abi=JSON.parse(fragments)}else{abi=fragments}__privateSet(this,_functions,new Map);__privateSet(this,_errors,new Map);__privateSet(this,_events,new Map);const frags=[];for(const a of abi){try{frags.push(Fragment.from(a))}catch(error){console.log(`[Warning] Invalid Fragment ${JSON.stringify(a)}:`,error.message)}}defineProperties(this,{fragments:Object.freeze(frags)});let fallback=null;let receive=false;__privateSet(this,_abiCoder,this.getAbiCoder());this.fragments.forEach((fragment,index)=>{let bucket;switch(fragment.type){case"constructor":if(this.deploy){console.log("duplicate definition - constructor");return}defineProperties(this,{deploy:fragment});return;case"fallback":if(fragment.inputs.length===0){receive=true}else{assertArgument(!fallback||fragment.payable!==fallback.payable,"conflicting fallback fragments",`fragments[${index}]`,fragment);fallback=fragment;receive=fallback.payable}return;case"function":bucket=__privateGet(this,_functions);break;case"event":bucket=__privateGet(this,_events);break;case"error":bucket=__privateGet(this,_errors);break;default:return}const signature2=fragment.format();if(bucket.has(signature2)){return}bucket.set(signature2,fragment)});if(!this.deploy){defineProperties(this,{deploy:ConstructorFragment.from("constructor()")})}defineProperties(this,{fallback:fallback,receive:receive})}format(minimal){const format=minimal?"minimal":"full";const abi=this.fragments.map(f2=>f2.format(format));return abi}formatJson(){const abi=this.fragments.map(f2=>f2.format("json"));return JSON.stringify(abi.map(j=>JSON.parse(j)))}getAbiCoder(){return AbiCoder.defaultAbiCoder()}getFunctionName(key2){const fragment=__privateMethod(this,_Interface_instances,getFunction_fn).call(this,key2,null,false);assertArgument(fragment,"no matching function","key",key2);return fragment.name}hasFunction(key2){return!!__privateMethod(this,_Interface_instances,getFunction_fn).call(this,key2,null,false)}getFunction(key2,values){return __privateMethod(this,_Interface_instances,getFunction_fn).call(this,key2,values||null,true)}forEachFunction(callback){const names2=Array.from(__privateGet(this,_functions).keys());names2.sort((a,b2)=>a.localeCompare(b2));for(let i=0;i<names2.length;i++){const name=names2[i];callback(__privateGet(this,_functions).get(name),i)}}getEventName(key2){const fragment=__privateMethod(this,_Interface_instances,getEvent_fn).call(this,key2,null,false);assertArgument(fragment,"no matching event","key",key2);return fragment.name}hasEvent(key2){return!!__privateMethod(this,_Interface_instances,getEvent_fn).call(this,key2,null,false)}getEvent(key2,values){return __privateMethod(this,_Interface_instances,getEvent_fn).call(this,key2,values||null,true)}forEachEvent(callback){const names2=Array.from(__privateGet(this,_events).keys());names2.sort((a,b2)=>a.localeCompare(b2));for(let i=0;i<names2.length;i++){const name=names2[i];callback(__privateGet(this,_events).get(name),i)}}getError(key2,values){if(isHexString$2(key2)){const selector=key2.toLowerCase();if(BuiltinErrors[selector]){return ErrorFragment.from(BuiltinErrors[selector].signature)}for(const fragment of __privateGet(this,_errors).values()){if(selector===fragment.selector){return fragment}}return null}if(key2.indexOf("(")===-1){const matching=[];for(const[name,fragment]of __privateGet(this,_errors)){if(name.split("(")[0]===key2){matching.push(fragment)}}if(matching.length===0){if(key2==="Error"){return ErrorFragment.from("error Error(string)")}if(key2==="Panic"){return ErrorFragment.from("error Panic(uint256)")}return null}else if(matching.length>1){const matchStr=matching.map(m=>JSON.stringify(m.format())).join(", ");assertArgument(false,`ambiguous error description (i.e. ${matchStr})`,"name",key2)}return matching[0]}key2=ErrorFragment.from(key2).format();if(key2==="Error(string)"){return ErrorFragment.from("error Error(string)")}if(key2==="Panic(uint256)"){return ErrorFragment.from("error Panic(uint256)")}const result=__privateGet(this,_errors).get(key2);if(result){return result}return null}forEachError(callback){const names2=Array.from(__privateGet(this,_errors).keys());names2.sort((a,b2)=>a.localeCompare(b2));for(let i=0;i<names2.length;i++){const name=names2[i];callback(__privateGet(this,_errors).get(name),i)}}_decodeParams(params,data){return __privateGet(this,_abiCoder).decode(params,data)}_encodeParams(params,values){return __privateGet(this,_abiCoder).encode(params,values)}encodeDeploy(values){return this._encodeParams(this.deploy.inputs,values||[])}decodeErrorResult(fragment,data){if(typeof fragment==="string"){const f2=this.getError(fragment);assertArgument(f2,"unknown error","fragment",fragment);fragment=f2}assertArgument(dataSlice(data,0,4)===fragment.selector,`data signature does not match error ${fragment.name}.`,"data",data);return this._decodeParams(fragment.inputs,dataSlice(data,4))}encodeErrorResult(fragment,values){if(typeof fragment==="string"){const f2=this.getError(fragment);assertArgument(f2,"unknown error","fragment",fragment);fragment=f2}return concat$2([fragment.selector,this._encodeParams(fragment.inputs,values||[])])}decodeFunctionData(fragment,data){if(typeof fragment==="string"){const f2=this.getFunction(fragment);assertArgument(f2,"unknown function","fragment",fragment);fragment=f2}assertArgument(dataSlice(data,0,4)===fragment.selector,`data signature does not match function ${fragment.name}.`,"data",data);return this._decodeParams(fragment.inputs,dataSlice(data,4))}encodeFunctionData(fragment,values){if(typeof fragment==="string"){const f2=this.getFunction(fragment);assertArgument(f2,"unknown function","fragment",fragment);fragment=f2}return concat$2([fragment.selector,this._encodeParams(fragment.inputs,values||[])])}decodeFunctionResult(fragment,data){if(typeof fragment==="string"){const f2=this.getFunction(fragment);assertArgument(f2,"unknown function","fragment",fragment);fragment=f2}let message="invalid length for result data";const bytes2=getBytesCopy(data);if(bytes2.length%32===0){try{return __privateGet(this,_abiCoder).decode(fragment.outputs,bytes2)}catch(error){message="could not decode result data"}}assert$7(false,message,"BAD_DATA",{value:hexlify$2(bytes2),info:{method:fragment.name,signature:fragment.format()}})}makeError(_data5,tx){const data=getBytes(_data5,"data");const error=AbiCoder.getBuiltinCallException("call",tx,data);const customPrefix="execution reverted (unknown custom error)";if(error.message.startsWith(customPrefix)){const selector=hexlify$2(data.slice(0,4));const ef=this.getError(selector);if(ef){try{const args=__privateGet(this,_abiCoder).decode(ef.inputs,data.slice(4));error.revert={name:ef.name,signature:ef.format(),args:args};error.reason=error.revert.signature;error.message=`execution reverted: ${error.reason}`}catch(e){error.message=`execution reverted (coult not decode custom error)`}}}const parsed=this.parseTransaction(tx);if(parsed){error.invocation={method:parsed.name,signature:parsed.signature,args:parsed.args}}return error}encodeFunctionResult(fragment,values){if(typeof fragment==="string"){const f2=this.getFunction(fragment);assertArgument(f2,"unknown function","fragment",fragment);fragment=f2}return hexlify$2(__privateGet(this,_abiCoder).encode(fragment.outputs,values||[]))}encodeFilterTopics(fragment,values){if(typeof fragment==="string"){const f2=this.getEvent(fragment);assertArgument(f2,"unknown event","eventFragment",fragment);fragment=f2}assert$7(values.length<=fragment.inputs.length,`too many arguments for ${fragment.format()}`,"UNEXPECTED_ARGUMENT",{count:values.length,expectedCount:fragment.inputs.length});const topics=[];if(!fragment.anonymous){topics.push(fragment.topicHash)}const encodeTopic=(param,value)=>{if(param.type==="string"){return id$2(value)}else if(param.type==="bytes"){return keccak256$2(hexlify$2(value))}if(param.type==="bool"&&typeof value==="boolean"){value=value?"0x01":"0x00"}else if(param.type.match(/^u?int/)){value=toBeHex(value)}else if(param.type.match(/^bytes/)){value=zeroPadBytes(value,32)}else if(param.type==="address"){__privateGet(this,_abiCoder).encode(["address"],[value])}return zeroPadValue(hexlify$2(value),32)};values.forEach((value,index)=>{const param=fragment.inputs[index];if(!param.indexed){assertArgument(value==null,"cannot filter non-indexed parameters; must be null","contract."+param.name,value);return}if(value==null){topics.push(null)}else if(param.baseType==="array"||param.baseType==="tuple"){assertArgument(false,"filtering with tuples or arrays not supported","contract."+param.name,value)}else if(Array.isArray(value)){topics.push(value.map(value2=>encodeTopic(param,value2)))}else{topics.push(encodeTopic(param,value))}});while(topics.length&&topics[topics.length-1]===null){topics.pop()}return topics}encodeEventLog(fragment,values){if(typeof fragment==="string"){const f2=this.getEvent(fragment);assertArgument(f2,"unknown event","eventFragment",fragment);fragment=f2}const topics=[];const dataTypes=[];const dataValues=[];if(!fragment.anonymous){topics.push(fragment.topicHash)}assertArgument(values.length===fragment.inputs.length,"event arguments/values mismatch","values",values);fragment.inputs.forEach((param,index)=>{const value=values[index];if(param.indexed){if(param.type==="string"){topics.push(id$2(value))}else if(param.type==="bytes"){topics.push(keccak256$2(value))}else if(param.baseType==="tuple"||param.baseType==="array"){throw new Error("not implemented")}else{topics.push(__privateGet(this,_abiCoder).encode([param.type],[value]))}}else{dataTypes.push(param);dataValues.push(value)}});return{data:__privateGet(this,_abiCoder).encode(dataTypes,dataValues),topics:topics}}decodeEventLog(fragment,data,topics){if(typeof fragment==="string"){const f2=this.getEvent(fragment);assertArgument(f2,"unknown event","eventFragment",fragment);fragment=f2}if(topics!=null&&!fragment.anonymous){const eventTopic=fragment.topicHash;assertArgument(isHexString$2(topics[0],32)&&topics[0].toLowerCase()===eventTopic,"fragment/topic mismatch","topics[0]",topics[0]);topics=topics.slice(1)}const indexed=[];const nonIndexed=[];const dynamic=[];fragment.inputs.forEach((param,index)=>{if(param.indexed){if(param.type==="string"||param.type==="bytes"||param.baseType==="tuple"||param.baseType==="array"){indexed.push(ParamType.from({type:"bytes32",name:param.name}));dynamic.push(true)}else{indexed.push(param);dynamic.push(false)}}else{nonIndexed.push(param);dynamic.push(false)}});const resultIndexed=topics!=null?__privateGet(this,_abiCoder).decode(indexed,concat$2(topics)):null;const resultNonIndexed=__privateGet(this,_abiCoder).decode(nonIndexed,data,true);const values=[];const keys2=[];let nonIndexedIndex=0,indexedIndex=0;fragment.inputs.forEach((param,index)=>{let value=null;if(param.indexed){if(resultIndexed==null){value=new Indexed(null)}else if(dynamic[index]){value=new Indexed(resultIndexed[indexedIndex++])}else{try{value=resultIndexed[indexedIndex++]}catch(error){value=error}}}else{try{value=resultNonIndexed[nonIndexedIndex++]}catch(error){value=error}}values.push(value);keys2.push(param.name||null)});return Result.fromItems(values,keys2)}parseTransaction(tx){const data=getBytes(tx.data,"tx.data");const value=getBigInt(tx.value!=null?tx.value:0,"tx.value");const fragment=this.getFunction(hexlify$2(data.slice(0,4)));if(!fragment){return null}const args=__privateGet(this,_abiCoder).decode(fragment.inputs,data.slice(4));return new TransactionDescription(fragment,fragment.selector,args,value)}parseCallResult(data){throw new Error("@TODO")}parseLog(log2){const fragment=this.getEvent(log2.topics[0]);if(!fragment||fragment.anonymous){return null}return new LogDescription(fragment,fragment.topicHash,this.decodeEventLog(fragment,log2.data,log2.topics))}parseError(data){const hexData=hexlify$2(data);const fragment=this.getError(dataSlice(hexData,0,4));if(!fragment){return null}const args=__privateGet(this,_abiCoder).decode(fragment.inputs,dataSlice(hexData,4));return new ErrorDescription(fragment,fragment.selector,args)}static from(value){if(value instanceof _Interface){return value}if(typeof value==="string"){return new _Interface(JSON.parse(value))}if(typeof value.formatJson==="function"){return new _Interface(value.formatJson())}if(typeof value.format==="function"){return new _Interface(value.format("json"))}return new _Interface(value)}};_errors=new WeakMap;_events=new WeakMap;_functions=new WeakMap;_abiCoder=new WeakMap;_Interface_instances=new WeakSet;getFunction_fn=function(key2,values,forceUnique){if(isHexString$2(key2)){const selector=key2.toLowerCase();for(const fragment of __privateGet(this,_functions).values()){if(selector===fragment.selector){return fragment}}return null}if(key2.indexOf("(")===-1){const matching=[];for(const[name,fragment]of __privateGet(this,_functions)){if(name.split("(")[0]===key2){matching.push(fragment)}}if(values){const lastValue=values.length>0?values[values.length-1]:null;let valueLength=values.length;let allowOptions=true;if(Typed.isTyped(lastValue)&&lastValue.type==="overrides"){allowOptions=false;valueLength--}for(let i=matching.length-1;i>=0;i--){const inputs=matching[i].inputs.length;if(inputs!==valueLength&&(!allowOptions||inputs!==valueLength-1)){matching.splice(i,1)}}for(let i=matching.length-1;i>=0;i--){const inputs=matching[i].inputs;for(let j=0;j<values.length;j++){if(!Typed.isTyped(values[j])){continue}if(j>=inputs.length){if(values[j].type==="overrides"){continue}matching.splice(i,1);break}if(values[j].type!==inputs[j].baseType){matching.splice(i,1);break}}}}if(matching.length===1&&values&&values.length!==matching[0].inputs.length){const lastArg=values[values.length-1];if(lastArg==null||Array.isArray(lastArg)||typeof lastArg!=="object"){matching.splice(0,1)}}if(matching.length===0){return null}if(matching.length>1&&forceUnique){const matchStr=matching.map(m=>JSON.stringify(m.format())).join(", ");assertArgument(false,`ambiguous function description (i.e. matches ${matchStr})`,"key",key2)}return matching[0]}const result=__privateGet(this,_functions).get(FunctionFragment.from(key2).format());if(result){return result}return null};getEvent_fn=function(key2,values,forceUnique){if(isHexString$2(key2)){const eventTopic=key2.toLowerCase();for(const fragment of __privateGet(this,_events).values()){if(eventTopic===fragment.topicHash){return fragment}}return null}if(key2.indexOf("(")===-1){const matching=[];for(const[name,fragment]of __privateGet(this,_events)){if(name.split("(")[0]===key2){matching.push(fragment)}}if(values){for(let i=matching.length-1;i>=0;i--){if(matching[i].inputs.length<values.length){matching.splice(i,1)}}for(let i=matching.length-1;i>=0;i--){const inputs=matching[i].inputs;for(let j=0;j<values.length;j++){if(!Typed.isTyped(values[j])){continue}if(values[j].type!==inputs[j].baseType){matching.splice(i,1);break}}}}if(matching.length===0){return null}if(matching.length>1&&forceUnique){const matchStr=matching.map(m=>JSON.stringify(m.format())).join(", ");assertArgument(false,`ambiguous event description (i.e. matches ${matchStr})`,"key",key2)}return matching[0]}const result=__privateGet(this,_events).get(EventFragment.from(key2).format());if(result){return result}return null};let Interface=_Interface;const BN_0$2=BigInt(0);function getValue$1(value){if(value==null){return null}return value}function toJson(value){if(value==null){return null}return value.toString()}class FeeData{constructor(gasPrice,maxFeePerGas,maxPriorityFeePerGas){__publicField(this,"gasPrice");__publicField(this,"maxFeePerGas");__publicField(this,"maxPriorityFeePerGas");defineProperties(this,{gasPrice:getValue$1(gasPrice),maxFeePerGas:getValue$1(maxFeePerGas),maxPriorityFeePerGas:getValue$1(maxPriorityFeePerGas)})}toJSON(){const{gasPrice:gasPrice,maxFeePerGas:maxFeePerGas,maxPriorityFeePerGas:maxPriorityFeePerGas}=this;return{_type:"FeeData",gasPrice:toJson(gasPrice),maxFeePerGas:toJson(maxFeePerGas),maxPriorityFeePerGas:toJson(maxPriorityFeePerGas)}}}function copyRequest(req){const result={};if(req.to){result.to=req.to}if(req.from){result.from=req.from}if(req.data){result.data=hexlify$2(req.data)}const bigIntKeys="chainId,gasLimit,gasPrice,maxFeePerBlobGas,maxFeePerGas,maxPriorityFeePerGas,value".split(/,/);for(const key2 of bigIntKeys){if(!(key2 in req)||req[key2]==null){continue}result[key2]=getBigInt(req[key2],`request.${key2}`)}const numberKeys="type,nonce".split(/,/);for(const key2 of numberKeys){if(!(key2 in req)||req[key2]==null){continue}result[key2]=getNumber(req[key2],`request.${key2}`)}if(req.accessList){result.accessList=accessListify$1(req.accessList)}if(req.authorizationList){result.authorizationList=req.authorizationList.slice()}if("blockTag"in req){result.blockTag=req.blockTag}if("enableCcipRead"in req){result.enableCcipRead=!!req.enableCcipRead}if("customData"in req){result.customData=req.customData}if("blobVersionedHashes"in req&&req.blobVersionedHashes){result.blobVersionedHashes=req.blobVersionedHashes.slice()}if("kzg"in req){result.kzg=req.kzg}if("blobs"in req&&req.blobs){result.blobs=req.blobs.map(b2=>{if(isBytesLike$2(b2)){return hexlify$2(b2)}return Object.assign({},b2)})}return result}class Block{constructor(block,provider){__publicField(this,"provider");__publicField(this,"number");__publicField(this,"hash");__publicField(this,"timestamp");__publicField(this,"parentHash");__publicField(this,"parentBeaconBlockRoot");__publicField(this,"nonce");__publicField(this,"difficulty");__publicField(this,"gasLimit");__publicField(this,"gasUsed");__publicField(this,"stateRoot");__publicField(this,"receiptsRoot");__publicField(this,"blobGasUsed");__publicField(this,"excessBlobGas");__publicField(this,"miner");__publicField(this,"prevRandao");__publicField(this,"extraData");__publicField(this,"baseFeePerGas");__privateAdd(this,_transactions);__privateSet(this,_transactions,block.transactions.map(tx=>{if(typeof tx!=="string"){return new TransactionResponse(tx,provider)}return tx}));defineProperties(this,{provider:provider,hash:getValue$1(block.hash),number:block.number,timestamp:block.timestamp,parentHash:block.parentHash,parentBeaconBlockRoot:block.parentBeaconBlockRoot,nonce:block.nonce,difficulty:block.difficulty,gasLimit:block.gasLimit,gasUsed:block.gasUsed,blobGasUsed:block.blobGasUsed,excessBlobGas:block.excessBlobGas,miner:block.miner,prevRandao:getValue$1(block.prevRandao),extraData:block.extraData,baseFeePerGas:getValue$1(block.baseFeePerGas),stateRoot:block.stateRoot,receiptsRoot:block.receiptsRoot})}get transactions(){return __privateGet(this,_transactions).map(tx=>{if(typeof tx==="string"){return tx}return tx.hash})}get prefetchedTransactions(){const txs=__privateGet(this,_transactions).slice();if(txs.length===0){return[]}assert$7(typeof txs[0]==="object","transactions were not prefetched with block request","UNSUPPORTED_OPERATION",{operation:"transactionResponses()"});return txs}toJSON(){const{baseFeePerGas:baseFeePerGas,difficulty:difficulty,extraData:extraData,gasLimit:gasLimit,gasUsed:gasUsed,hash:hash2,miner:miner,prevRandao:prevRandao,nonce:nonce,number:number2,parentHash:parentHash,parentBeaconBlockRoot:parentBeaconBlockRoot,stateRoot:stateRoot,receiptsRoot:receiptsRoot,timestamp:timestamp,transactions:transactions}=this;return{_type:"Block",baseFeePerGas:toJson(baseFeePerGas),difficulty:toJson(difficulty),extraData:extraData,gasLimit:toJson(gasLimit),gasUsed:toJson(gasUsed),blobGasUsed:toJson(this.blobGasUsed),excessBlobGas:toJson(this.excessBlobGas),hash:hash2,miner:miner,prevRandao:prevRandao,nonce:nonce,number:number2,parentHash:parentHash,timestamp:timestamp,parentBeaconBlockRoot:parentBeaconBlockRoot,stateRoot:stateRoot,receiptsRoot:receiptsRoot,transactions:transactions}}[Symbol.iterator](){let index=0;const txs=this.transactions;return{next:()=>{if(index<this.length){return{value:txs[index++],done:false}}return{value:void 0,done:true}}}}get length(){return __privateGet(this,_transactions).length}get date(){if(this.timestamp==null){return null}return new Date(this.timestamp*1e3)}async getTransaction(indexOrHash){let tx=void 0;if(typeof indexOrHash==="number"){tx=__privateGet(this,_transactions)[indexOrHash]}else{const hash2=indexOrHash.toLowerCase();for(const v of __privateGet(this,_transactions)){if(typeof v==="string"){if(v!==hash2){continue}tx=v;break}else{if(v.hash!==hash2){continue}tx=v;break}}}if(tx==null){throw new Error("no such tx")}if(typeof tx==="string"){return await this.provider.getTransaction(tx)}else{return tx}}getPrefetchedTransaction(indexOrHash){const txs=this.prefetchedTransactions;if(typeof indexOrHash==="number"){return txs[indexOrHash]}indexOrHash=indexOrHash.toLowerCase();for(const tx of txs){if(tx.hash===indexOrHash){return tx}}assertArgument(false,"no matching transaction","indexOrHash",indexOrHash)}isMined(){return!!this.hash}isLondon(){return!!this.baseFeePerGas}orphanedEvent(){if(!this.isMined()){throw new Error("")}return createOrphanedBlockFilter(this)}}_transactions=new WeakMap;class Log{constructor(log2,provider){__publicField(this,"provider");__publicField(this,"transactionHash");__publicField(this,"blockHash");__publicField(this,"blockNumber");__publicField(this,"removed");__publicField(this,"address");__publicField(this,"data");__publicField(this,"topics");__publicField(this,"index");__publicField(this,"transactionIndex");this.provider=provider;const topics=Object.freeze(log2.topics.slice());defineProperties(this,{transactionHash:log2.transactionHash,blockHash:log2.blockHash,blockNumber:log2.blockNumber,removed:log2.removed,address:log2.address,data:log2.data,topics:topics,index:log2.index,transactionIndex:log2.transactionIndex})}toJSON(){const{address:address,blockHash:blockHash,blockNumber:blockNumber,data:data,index:index,removed:removed,topics:topics,transactionHash:transactionHash,transactionIndex:transactionIndex}=this;return{_type:"log",address:address,blockHash:blockHash,blockNumber:blockNumber,data:data,index:index,removed:removed,topics:topics,transactionHash:transactionHash,transactionIndex:transactionIndex}}async getBlock(){const block=await this.provider.getBlock(this.blockHash);assert$7(!!block,"failed to find transaction","UNKNOWN_ERROR",{});return block}async getTransaction(){const tx=await this.provider.getTransaction(this.transactionHash);assert$7(!!tx,"failed to find transaction","UNKNOWN_ERROR",{});return tx}async getTransactionReceipt(){const receipt=await this.provider.getTransactionReceipt(this.transactionHash);assert$7(!!receipt,"failed to find transaction receipt","UNKNOWN_ERROR",{});return receipt}removedEvent(){return createRemovedLogFilter(this)}}class TransactionReceipt{constructor(tx,provider){__publicField(this,"provider");__publicField(this,"to");__publicField(this,"from");__publicField(this,"contractAddress");__publicField(this,"hash");__publicField(this,"index");__publicField(this,"blockHash");__publicField(this,"blockNumber");__publicField(this,"logsBloom");__publicField(this,"gasUsed");__publicField(this,"blobGasUsed");__publicField(this,"cumulativeGasUsed");__publicField(this,"gasPrice");__publicField(this,"blobGasPrice");__publicField(this,"type");__publicField(this,"status");__publicField(this,"root");__privateAdd(this,_logs);__privateSet(this,_logs,Object.freeze(tx.logs.map(log2=>new Log(log2,provider))));let gasPrice=BN_0$2;if(tx.effectiveGasPrice!=null){gasPrice=tx.effectiveGasPrice}else if(tx.gasPrice!=null){gasPrice=tx.gasPrice}defineProperties(this,{provider:provider,to:tx.to,from:tx.from,contractAddress:tx.contractAddress,hash:tx.hash,index:tx.index,blockHash:tx.blockHash,blockNumber:tx.blockNumber,logsBloom:tx.logsBloom,gasUsed:tx.gasUsed,cumulativeGasUsed:tx.cumulativeGasUsed,blobGasUsed:tx.blobGasUsed,gasPrice:gasPrice,blobGasPrice:tx.blobGasPrice,type:tx.type,status:tx.status,root:tx.root})}get logs(){return __privateGet(this,_logs)}toJSON(){const{to:to,from:from,contractAddress:contractAddress,hash:hash2,index:index,blockHash:blockHash,blockNumber:blockNumber,logsBloom:logsBloom,logs:logs,status:status,root:root2}=this;return{_type:"TransactionReceipt",blockHash:blockHash,blockNumber:blockNumber,contractAddress:contractAddress,cumulativeGasUsed:toJson(this.cumulativeGasUsed),from:from,gasPrice:toJson(this.gasPrice),blobGasUsed:toJson(this.blobGasUsed),blobGasPrice:toJson(this.blobGasPrice),gasUsed:toJson(this.gasUsed),hash:hash2,index:index,logs:logs,logsBloom:logsBloom,root:root2,status:status,to:to}}get length(){return this.logs.length}[Symbol.iterator](){let index=0;return{next:()=>{if(index<this.length){return{value:this.logs[index++],done:false}}return{value:void 0,done:true}}}}get fee(){return this.gasUsed*this.gasPrice}async getBlock(){const block=await this.provider.getBlock(this.blockHash);if(block==null){throw new Error("TODO")}return block}async getTransaction(){const tx=await this.provider.getTransaction(this.hash);if(tx==null){throw new Error("TODO")}return tx}async getResult(){return await this.provider.getTransactionResult(this.hash)}async confirmations(){return await this.provider.getBlockNumber()-this.blockNumber+1}removedEvent(){return createRemovedTransactionFilter(this)}reorderedEvent(other){assert$7(!other||other.isMined(),"unmined 'other' transction cannot be orphaned","UNSUPPORTED_OPERATION",{operation:"reorderedEvent(other)"});return createReorderedTransactionFilter(this,other)}}_logs=new WeakMap;const _TransactionResponse=class _TransactionResponse{constructor(tx,provider){__publicField(this,"provider");__publicField(this,"blockNumber");__publicField(this,"blockHash");__publicField(this,"index");__publicField(this,"hash");__publicField(this,"type");__publicField(this,"to");__publicField(this,"from");__publicField(this,"nonce");__publicField(this,"gasLimit");__publicField(this,"gasPrice");__publicField(this,"maxPriorityFeePerGas");__publicField(this,"maxFeePerGas");__publicField(this,"maxFeePerBlobGas");__publicField(this,"data");__publicField(this,"value");__publicField(this,"chainId");__publicField(this,"signature");__publicField(this,"accessList");__publicField(this,"blobVersionedHashes");__publicField(this,"authorizationList");__privateAdd(this,_startBlock);this.provider=provider;this.blockNumber=tx.blockNumber!=null?tx.blockNumber:null;this.blockHash=tx.blockHash!=null?tx.blockHash:null;this.hash=tx.hash;this.index=tx.index;this.type=tx.type;this.from=tx.from;this.to=tx.to||null;this.gasLimit=tx.gasLimit;this.nonce=tx.nonce;this.data=tx.data;this.value=tx.value;this.gasPrice=tx.gasPrice;this.maxPriorityFeePerGas=tx.maxPriorityFeePerGas!=null?tx.maxPriorityFeePerGas:null;this.maxFeePerGas=tx.maxFeePerGas!=null?tx.maxFeePerGas:null;this.maxFeePerBlobGas=tx.maxFeePerBlobGas!=null?tx.maxFeePerBlobGas:null;this.chainId=tx.chainId;this.signature=tx.signature;this.accessList=tx.accessList!=null?tx.accessList:null;this.blobVersionedHashes=tx.blobVersionedHashes!=null?tx.blobVersionedHashes:null;this.authorizationList=tx.authorizationList!=null?tx.authorizationList:null;__privateSet(this,_startBlock,-1)}toJSON(){const{blockNumber:blockNumber,blockHash:blockHash,index:index,hash:hash2,type:type,to:to,from:from,nonce:nonce,data:data,signature:signature2,accessList:accessList,blobVersionedHashes:blobVersionedHashes}=this;return{_type:"TransactionResponse",accessList:accessList,blockNumber:blockNumber,blockHash:blockHash,blobVersionedHashes:blobVersionedHashes,chainId:toJson(this.chainId),data:data,from:from,gasLimit:toJson(this.gasLimit),gasPrice:toJson(this.gasPrice),hash:hash2,maxFeePerGas:toJson(this.maxFeePerGas),maxPriorityFeePerGas:toJson(this.maxPriorityFeePerGas),maxFeePerBlobGas:toJson(this.maxFeePerBlobGas),nonce:nonce,signature:signature2,to:to,index:index,type:type,value:toJson(this.value)}}async getBlock(){let blockNumber=this.blockNumber;if(blockNumber==null){const tx=await this.getTransaction();if(tx){blockNumber=tx.blockNumber}}if(blockNumber==null){return null}const block=this.provider.getBlock(blockNumber);if(block==null){throw new Error("TODO")}return block}async getTransaction(){return this.provider.getTransaction(this.hash)}async confirmations(){if(this.blockNumber==null){const{tx:tx,blockNumber:blockNumber2}=await resolveProperties$2({tx:this.getTransaction(),blockNumber:this.provider.getBlockNumber()});if(tx==null||tx.blockNumber==null){return 0}return blockNumber2-tx.blockNumber+1}const blockNumber=await this.provider.getBlockNumber();return blockNumber-this.blockNumber+1}async wait(_confirms,_timeout2){const confirms=_confirms==null?1:_confirms;const timeout=_timeout2==null?0:_timeout2;let startBlock=__privateGet(this,_startBlock);let nextScan=-1;let stopScanning=startBlock===-1?true:false;const checkReplacement=async()=>{if(stopScanning){return null}const{blockNumber:blockNumber,nonce:nonce}=await resolveProperties$2({blockNumber:this.provider.getBlockNumber(),nonce:this.provider.getTransactionCount(this.from)});if(nonce<this.nonce){startBlock=blockNumber;return}if(stopScanning){return null}const mined=await this.getTransaction();if(mined&&mined.blockNumber!=null){return}if(nextScan===-1){nextScan=startBlock-3;if(nextScan<__privateGet(this,_startBlock)){nextScan=__privateGet(this,_startBlock)}}while(nextScan<=blockNumber){if(stopScanning){return null}const block=await this.provider.getBlock(nextScan,true);if(block==null){return}for(const hash2 of block){if(hash2===this.hash){return}}for(let i=0;i<block.length;i++){const tx=await block.getTransaction(i);if(tx.from===this.from&&tx.nonce===this.nonce){if(stopScanning){return null}const receipt2=await this.provider.getTransactionReceipt(tx.hash);if(receipt2==null){return}if(blockNumber-receipt2.blockNumber+1<confirms){return}let reason="replaced";if(tx.data===this.data&&tx.to===this.to&&tx.value===this.value){reason="repriced"}else if(tx.data==="0x"&&tx.from===tx.to&&tx.value===BN_0$2){reason="cancelled"}assert$7(false,"transaction was replaced","TRANSACTION_REPLACED",{cancelled:reason==="replaced"||reason==="cancelled",reason:reason,replacement:tx.replaceableTransaction(startBlock),hash:tx.hash,receipt:receipt2})}}nextScan++}return};const checkReceipt=receipt2=>{if(receipt2==null||receipt2.status!==0){return receipt2}assert$7(false,"transaction execution reverted","CALL_EXCEPTION",{action:"sendTransaction",data:null,reason:null,invocation:null,revert:null,transaction:{to:receipt2.to,from:receipt2.from,data:""},receipt:receipt2})};const receipt=await this.provider.getTransactionReceipt(this.hash);if(confirms===0){return checkReceipt(receipt)}if(receipt){if(confirms===1||await receipt.confirmations()>=confirms){return checkReceipt(receipt)}}else{await checkReplacement();if(confirms===0){return null}}const waiter=new Promise((resolve,reject)=>{const cancellers=[];const cancel=()=>{cancellers.forEach(c=>c())};cancellers.push(()=>{stopScanning=true});if(timeout>0){const timer=setTimeout(()=>{cancel();reject(makeError("wait for transaction timeout","TIMEOUT"))},timeout);cancellers.push(()=>{clearTimeout(timer)})}const txListener=async receipt2=>{if(await receipt2.confirmations()>=confirms){cancel();try{resolve(checkReceipt(receipt2))}catch(error){reject(error)}}};cancellers.push(()=>{this.provider.off(this.hash,txListener)});this.provider.on(this.hash,txListener);if(startBlock>=0){const replaceListener=async()=>{try{await checkReplacement()}catch(error){if(isError(error,"TRANSACTION_REPLACED")){cancel();reject(error);return}}if(!stopScanning){this.provider.once("block",replaceListener)}};cancellers.push(()=>{this.provider.off("block",replaceListener)});this.provider.once("block",replaceListener)}});return await waiter}isMined(){return this.blockHash!=null}isLegacy(){return this.type===0}isBerlin(){return this.type===1}isLondon(){return this.type===2}isCancun(){return this.type===3}removedEvent(){assert$7(this.isMined(),"unmined transaction canot be orphaned","UNSUPPORTED_OPERATION",{operation:"removeEvent()"});return createRemovedTransactionFilter(this)}reorderedEvent(other){assert$7(this.isMined(),"unmined transaction canot be orphaned","UNSUPPORTED_OPERATION",{operation:"removeEvent()"});assert$7(!other||other.isMined(),"unmined 'other' transaction canot be orphaned","UNSUPPORTED_OPERATION",{operation:"removeEvent()"});return createReorderedTransactionFilter(this,other)}replaceableTransaction(startBlock){assertArgument(Number.isInteger(startBlock)&&startBlock>=0,"invalid startBlock","startBlock",startBlock);const tx=new _TransactionResponse(this,this.provider);__privateSet(tx,_startBlock,startBlock);return tx}};_startBlock=new WeakMap;let TransactionResponse=_TransactionResponse;function createOrphanedBlockFilter(block){return{orphan:"drop-block",hash:block.hash,number:block.number}}function createReorderedTransactionFilter(tx,other){return{orphan:"reorder-transaction",tx:tx,other:other}}function createRemovedTransactionFilter(tx){return{orphan:"drop-transaction",tx:tx}}function createRemovedLogFilter(log2){return{orphan:"drop-log",log:{transactionHash:log2.transactionHash,blockHash:log2.blockHash,blockNumber:log2.blockNumber,address:log2.address,data:log2.data,topics:Object.freeze(log2.topics.slice()),index:log2.index}}}class EventLog extends Log{constructor(log2,iface,fragment){super(log2,log2.provider);__publicField(this,"interface");__publicField(this,"fragment");__publicField(this,"args");const args=iface.decodeEventLog(fragment,log2.data,log2.topics);defineProperties(this,{args:args,fragment:fragment,interface:iface})}get eventName(){return this.fragment.name}get eventSignature(){return this.fragment.format()}}class UndecodedEventLog extends Log{constructor(log2,error){super(log2,log2.provider);__publicField(this,"error");defineProperties(this,{error:error})}}class ContractTransactionReceipt extends TransactionReceipt{constructor(iface,provider,tx){super(tx,provider);__privateAdd(this,_iface);__privateSet(this,_iface,iface)}get logs(){return super.logs.map(log2=>{const fragment=log2.topics.length?__privateGet(this,_iface).getEvent(log2.topics[0]):null;if(fragment){try{return new EventLog(log2,__privateGet(this,_iface),fragment)}catch(error){return new UndecodedEventLog(log2,error)}}return log2})}}_iface=new WeakMap;class ContractTransactionResponse extends TransactionResponse{constructor(iface,provider,tx){super(tx,provider);__privateAdd(this,_iface2);__privateSet(this,_iface2,iface)}async wait(confirms,timeout){const receipt=await super.wait(confirms,timeout);if(receipt==null){return null}return new ContractTransactionReceipt(__privateGet(this,_iface2),this.provider,receipt)}}_iface2=new WeakMap;class ContractUnknownEventPayload extends EventPayload{constructor(contract,listener,filter2,log2){super(contract,listener,filter2);__publicField(this,"log");defineProperties(this,{log:log2})}async getBlock(){return await this.log.getBlock()}async getTransaction(){return await this.log.getTransaction()}async getTransactionReceipt(){return await this.log.getTransactionReceipt()}}class ContractEventPayload extends ContractUnknownEventPayload{constructor(contract,listener,filter2,fragment,_log){super(contract,listener,filter2,new EventLog(_log,contract.interface,fragment));const args=contract.interface.decodeEventLog(fragment,this.log.data,this.log.topics);defineProperties(this,{args:args,fragment:fragment})}get eventName(){return this.fragment.name}get eventSignature(){return this.fragment.format()}}const BN_0$1=BigInt(0);function canCall(value){return value&&typeof value.call==="function"}function canEstimate(value){return value&&typeof value.estimateGas==="function"}function canResolve(value){return value&&typeof value.resolveName==="function"}function canSend(value){return value&&typeof value.sendTransaction==="function"}function getResolver(value){if(value!=null){if(canResolve(value)){return value}if(value.provider){return value.provider}}return void 0}class PreparedTopicFilter{constructor(contract,fragment,args){__privateAdd(this,_filter);__publicField(this,"fragment");defineProperties(this,{fragment:fragment});if(fragment.inputs.length<args.length){throw new Error("too many arguments")}const runner=getRunner(contract.runner,"resolveName");const resolver=canResolve(runner)?runner:null;__privateSet(this,_filter,async function(){const resolvedArgs=await Promise.all(fragment.inputs.map((param,index)=>{const arg=args[index];if(arg==null){return null}return param.walkAsync(args[index],(type,value)=>{if(type==="address"){if(Array.isArray(value)){return Promise.all(value.map(v=>resolveAddress(v,resolver)))}return resolveAddress(value,resolver)}return value})}));return contract.interface.encodeFilterTopics(fragment,resolvedArgs)}())}getTopicFilter(){return __privateGet(this,_filter)}}_filter=new WeakMap;function getRunner(value,feature){if(value==null){return null}if(typeof value[feature]==="function"){return value}if(value.provider&&typeof value.provider[feature]==="function"){return value.provider}return null}function getProvider(value){if(value==null){return null}return value.provider||null}async function copyOverrides(arg,allowed){const _overrides=Typed.dereference(arg,"overrides");assertArgument(typeof _overrides==="object","invalid overrides parameter","overrides",arg);const overrides=copyRequest(_overrides);assertArgument(overrides.to==null||(allowed||[]).indexOf("to")>=0,"cannot override to","overrides.to",overrides.to);assertArgument(overrides.data==null||(allowed||[]).indexOf("data")>=0,"cannot override data","overrides.data",overrides.data);if(overrides.from){overrides.from=overrides.from}return overrides}async function resolveArgs(_runner,inputs,args){const runner=getRunner(_runner,"resolveName");const resolver=canResolve(runner)?runner:null;return await Promise.all(inputs.map((param,index)=>param.walkAsync(args[index],(type,value)=>{value=Typed.dereference(value,type);if(type==="address"){return resolveAddress(value,resolver)}return value})))}function buildWrappedFallback(contract){const populateTransaction=async function(overrides){const tx=await copyOverrides(overrides,["data"]);tx.to=await contract.getAddress();if(tx.from){tx.from=await resolveAddress(tx.from,getResolver(contract.runner))}const iface=contract.interface;const noValue=getBigInt(tx.value||BN_0$1,"overrides.value")===BN_0$1;const noData=(tx.data||"0x")==="0x";if(iface.fallback&&!iface.fallback.payable&&iface.receive&&!noData&&!noValue){assertArgument(false,"cannot send data to receive or send value to non-payable fallback","overrides",overrides)}assertArgument(iface.fallback||noData,"cannot send data to receive-only contract","overrides.data",tx.data);const payable=iface.receive||iface.fallback&&iface.fallback.payable;assertArgument(payable||noValue,"cannot send value to non-payable fallback","overrides.value",tx.value);assertArgument(iface.fallback||noData,"cannot send data to receive-only contract","overrides.data",tx.data);return tx};const staticCall=async function(overrides){const runner=getRunner(contract.runner,"call");assert$7(canCall(runner),"contract runner does not support calling","UNSUPPORTED_OPERATION",{operation:"call"});const tx=await populateTransaction(overrides);try{return await runner.call(tx)}catch(error){if(isCallException(error)&&error.data){throw contract.interface.makeError(error.data,tx)}throw error}};const send=async function(overrides){const runner=contract.runner;assert$7(canSend(runner),"contract runner does not support sending transactions","UNSUPPORTED_OPERATION",{operation:"sendTransaction"});const tx=await runner.sendTransaction(await populateTransaction(overrides));const provider=getProvider(contract.runner);return new ContractTransactionResponse(contract.interface,provider,tx)};const estimateGas=async function(overrides){const runner=getRunner(contract.runner,"estimateGas");assert$7(canEstimate(runner),"contract runner does not support gas estimation","UNSUPPORTED_OPERATION",{operation:"estimateGas"});return await runner.estimateGas(await populateTransaction(overrides))};const method=async overrides=>await send(overrides);defineProperties(method,{_contract:contract,estimateGas:estimateGas,populateTransaction:populateTransaction,send:send,staticCall:staticCall});return method}function buildWrappedMethod(contract,key2){const getFragment=function(...args){const fragment=contract.interface.getFunction(key2,args);assert$7(fragment,"no matching fragment","UNSUPPORTED_OPERATION",{operation:"fragment",info:{key:key2,args:args}});return fragment};const populateTransaction=async function(...args){const fragment=getFragment(...args);let overrides={};if(fragment.inputs.length+1===args.length){overrides=await copyOverrides(args.pop());if(overrides.from){overrides.from=await resolveAddress(overrides.from,getResolver(contract.runner))}}if(fragment.inputs.length!==args.length){throw new Error("internal error: fragment inputs doesn't match arguments; should not happen")}const resolvedArgs=await resolveArgs(contract.runner,fragment.inputs,args);return Object.assign({},overrides,await resolveProperties$2({to:contract.getAddress(),data:contract.interface.encodeFunctionData(fragment,resolvedArgs)}))};const staticCall=async function(...args){const result=await staticCallResult(...args);if(result.length===1){return result[0]}return result};const send=async function(...args){const runner=contract.runner;assert$7(canSend(runner),"contract runner does not support sending transactions","UNSUPPORTED_OPERATION",{operation:"sendTransaction"});const tx=await runner.sendTransaction(await populateTransaction(...args));const provider=getProvider(contract.runner);return new ContractTransactionResponse(contract.interface,provider,tx)};const estimateGas=async function(...args){const runner=getRunner(contract.runner,"estimateGas");assert$7(canEstimate(runner),"contract runner does not support gas estimation","UNSUPPORTED_OPERATION",{operation:"estimateGas"});return await runner.estimateGas(await populateTransaction(...args))};const staticCallResult=async function(...args){const runner=getRunner(contract.runner,"call");assert$7(canCall(runner),"contract runner does not support calling","UNSUPPORTED_OPERATION",{operation:"call"});const tx=await populateTransaction(...args);let result="0x";try{result=await runner.call(tx)}catch(error){if(isCallException(error)&&error.data){throw contract.interface.makeError(error.data,tx)}throw error}const fragment=getFragment(...args);return contract.interface.decodeFunctionResult(fragment,result)};const method=async(...args)=>{const fragment=getFragment(...args);if(fragment.constant){return await staticCall(...args)}return await send(...args)};defineProperties(method,{name:contract.interface.getFunctionName(key2),_contract:contract,_key:key2,getFragment:getFragment,estimateGas:estimateGas,populateTransaction:populateTransaction,send:send,staticCall:staticCall,staticCallResult:staticCallResult});Object.defineProperty(method,"fragment",{configurable:false,enumerable:true,get:()=>{const fragment=contract.interface.getFunction(key2);assert$7(fragment,"no matching fragment","UNSUPPORTED_OPERATION",{operation:"fragment",info:{key:key2}});return fragment}});return method}function buildWrappedEvent(contract,key2){const getFragment=function(...args){const fragment=contract.interface.getEvent(key2,args);assert$7(fragment,"no matching fragment","UNSUPPORTED_OPERATION",{operation:"fragment",info:{key:key2,args:args}});return fragment};const method=function(...args){return new PreparedTopicFilter(contract,getFragment(...args),args)};defineProperties(method,{name:contract.interface.getEventName(key2),_contract:contract,_key:key2,getFragment:getFragment});Object.defineProperty(method,"fragment",{configurable:false,enumerable:true,get:()=>{const fragment=contract.interface.getEvent(key2);assert$7(fragment,"no matching fragment","UNSUPPORTED_OPERATION",{operation:"fragment",info:{key:key2}});return fragment}});return method}const internal=Symbol.for("_ethersInternal_contract");const internalValues=new WeakMap;function setInternal(contract,values){internalValues.set(contract[internal],values)}function getInternal(contract){return internalValues.get(contract[internal])}function isDeferred(value){return value&&typeof value==="object"&&"getTopicFilter"in value&&typeof value.getTopicFilter==="function"&&value.fragment}async function getSubInfo(contract,event){let topics;let fragment=null;if(Array.isArray(event)){const topicHashify=function(name){if(isHexString$2(name,32)){return name}const fragment2=contract.interface.getEvent(name);assertArgument(fragment2,"unknown fragment","name",name);return fragment2.topicHash};topics=event.map(e=>{if(e==null){return null}if(Array.isArray(e)){return e.map(topicHashify)}return topicHashify(e)})}else if(event==="*"){topics=[null]}else if(typeof event==="string"){if(isHexString$2(event,32)){topics=[event]}else{fragment=contract.interface.getEvent(event);assertArgument(fragment,"unknown fragment","event",event);topics=[fragment.topicHash]}}else if(isDeferred(event)){topics=await event.getTopicFilter()}else if("fragment"in event){fragment=event.fragment;topics=[fragment.topicHash]}else{assertArgument(false,"unknown event name","event",event)}topics=topics.map(t=>{if(t==null){return null}if(Array.isArray(t)){const items=Array.from(new Set(t.map(t2=>t2.toLowerCase())).values());if(items.length===1){return items[0]}items.sort();return items}return t.toLowerCase()});const tag=topics.map(t=>{if(t==null){return"null"}if(Array.isArray(t)){return t.join("|")}return t}).join("&");return{fragment:fragment,tag:tag,topics:topics}}async function hasSub(contract,event){const{subs:subs}=getInternal(contract);return subs.get((await getSubInfo(contract,event)).tag)||null}async function getSub(contract,operation,event){const provider=getProvider(contract.runner);assert$7(provider,"contract runner does not support subscribing","UNSUPPORTED_OPERATION",{operation:operation});const{fragment:fragment,tag:tag,topics:topics}=await getSubInfo(contract,event);const{addr:addr,subs:subs}=getInternal(contract);let sub=subs.get(tag);if(!sub){const address=addr?addr:contract;const filter2={address:address,topics:topics};const listener=log2=>{let foundFragment=fragment;if(foundFragment==null){try{foundFragment=contract.interface.getEvent(log2.topics[0])}catch(error){}}if(foundFragment){const _foundFragment=foundFragment;const args=fragment?contract.interface.decodeEventLog(fragment,log2.data,log2.topics):[];emit(contract,event,args,listener2=>new ContractEventPayload(contract,listener2,event,_foundFragment,log2))}else{emit(contract,event,[],listener2=>new ContractUnknownEventPayload(contract,listener2,event,log2))}};let starting=[];const start=()=>{if(starting.length){return}starting.push(provider.on(filter2,listener))};const stop=async()=>{if(starting.length==0){return}let started=starting;starting=[];await Promise.all(started);provider.off(filter2,listener)};sub={tag:tag,listeners:[],start:start,stop:stop};subs.set(tag,sub)}return sub}let lastEmit=Promise.resolve();async function _emit(contract,event,args,payloadFunc){await lastEmit;const sub=await hasSub(contract,event);if(!sub){return false}const count=sub.listeners.length;sub.listeners=sub.listeners.filter(({listener:listener,once:once})=>{const passArgs=Array.from(args);if(payloadFunc){passArgs.push(payloadFunc(once?null:listener))}try{listener.call(contract,...passArgs)}catch(error){}return!once});if(sub.listeners.length===0){sub.stop();getInternal(contract).subs.delete(sub.tag)}return count>0}async function emit(contract,event,args,payloadFunc){try{await lastEmit}catch(error){}const resultPromise=_emit(contract,event,args,payloadFunc);lastEmit=resultPromise;return await resultPromise}const passProperties=["then"];_e=internal;const _BaseContract=class _BaseContract{constructor(target,abi,runner,_deployTx){__publicField(this,"target");__publicField(this,"interface");__publicField(this,"runner");__publicField(this,"filters");__publicField(this,_e);__publicField(this,"fallback");assertArgument(typeof target==="string"||isAddressable(target),"invalid value for Contract target","target",target);if(runner==null){runner=null}const iface=Interface.from(abi);defineProperties(this,{target:target,runner:runner,interface:iface});Object.defineProperty(this,internal,{value:{}});let addrPromise;let addr=null;let deployTx=null;if(_deployTx){const provider=getProvider(runner);deployTx=new ContractTransactionResponse(this.interface,provider,_deployTx)}let subs=new Map;if(typeof target==="string"){if(isHexString$2(target)){addr=target;addrPromise=Promise.resolve(target)}else{const resolver=getRunner(runner,"resolveName");if(!canResolve(resolver)){throw makeError("contract runner does not support name resolution","UNSUPPORTED_OPERATION",{operation:"resolveName"})}addrPromise=resolver.resolveName(target).then(addr2=>{if(addr2==null){throw makeError("an ENS name used for a contract target must be correctly configured","UNCONFIGURED_NAME",{value:target})}getInternal(this).addr=addr2;return addr2})}}else{addrPromise=target.getAddress().then(addr2=>{if(addr2==null){throw new Error("TODO")}getInternal(this).addr=addr2;return addr2})}setInternal(this,{addrPromise:addrPromise,addr:addr,deployTx:deployTx,subs:subs});const filters=new Proxy({},{get:(target2,prop,receiver)=>{if(typeof prop==="symbol"||passProperties.indexOf(prop)>=0){return Reflect.get(target2,prop,receiver)}try{return this.getEvent(prop)}catch(error){if(!isError(error,"INVALID_ARGUMENT")||error.argument!=="key"){throw error}}return void 0},has:(target2,prop)=>{if(passProperties.indexOf(prop)>=0){return Reflect.has(target2,prop)}return Reflect.has(target2,prop)||this.interface.hasEvent(String(prop))}});defineProperties(this,{filters:filters});defineProperties(this,{fallback:iface.receive||iface.fallback?buildWrappedFallback(this):null});return new Proxy(this,{get:(target2,prop,receiver)=>{if(typeof prop==="symbol"||prop in target2||passProperties.indexOf(prop)>=0){return Reflect.get(target2,prop,receiver)}try{return target2.getFunction(prop)}catch(error){if(!isError(error,"INVALID_ARGUMENT")||error.argument!=="key"){throw error}}return void 0},has:(target2,prop)=>{if(typeof prop==="symbol"||prop in target2||passProperties.indexOf(prop)>=0){return Reflect.has(target2,prop)}return target2.interface.hasFunction(prop)}})}connect(runner){return new _BaseContract(this.target,this.interface,runner)}attach(target){return new _BaseContract(target,this.interface,this.runner)}async getAddress(){return await getInternal(this).addrPromise}async getDeployedCode(){const provider=getProvider(this.runner);assert$7(provider,"runner does not support .provider","UNSUPPORTED_OPERATION",{operation:"getDeployedCode"});const code=await provider.getCode(await this.getAddress());if(code==="0x"){return null}return code}async waitForDeployment(){const deployTx=this.deploymentTransaction();if(deployTx){await deployTx.wait();return this}const code=await this.getDeployedCode();if(code!=null){return this}const provider=getProvider(this.runner);assert$7(provider!=null,"contract runner does not support .provider","UNSUPPORTED_OPERATION",{operation:"waitForDeployment"});return new Promise((resolve,reject)=>{const checkCode=async()=>{try{const code2=await this.getDeployedCode();if(code2!=null){return resolve(this)}provider.once("block",checkCode)}catch(error){reject(error)}};checkCode()})}deploymentTransaction(){return getInternal(this).deployTx}getFunction(key2){if(typeof key2!=="string"){key2=key2.format()}const func=buildWrappedMethod(this,key2);return func}getEvent(key2){if(typeof key2!=="string"){key2=key2.format()}return buildWrappedEvent(this,key2)}async queryTransaction(hash2){throw new Error("@TODO")}async queryFilter(event,fromBlock,toBlock){if(fromBlock==null){fromBlock=0}if(toBlock==null){toBlock="latest"}const{addr:addr,addrPromise:addrPromise}=getInternal(this);const address=addr?addr:await addrPromise;const{fragment:fragment,topics:topics}=await getSubInfo(this,event);const filter2={address:address,topics:topics,fromBlock:fromBlock,toBlock:toBlock};const provider=getProvider(this.runner);assert$7(provider,"contract runner does not have a provider","UNSUPPORTED_OPERATION",{operation:"queryFilter"});return(await provider.getLogs(filter2)).map(log2=>{let foundFragment=fragment;if(foundFragment==null){try{foundFragment=this.interface.getEvent(log2.topics[0])}catch(error){}}if(foundFragment){try{return new EventLog(log2,this.interface,foundFragment)}catch(error){return new UndecodedEventLog(log2,error)}}return new Log(log2,provider)})}async on(event,listener){const sub=await getSub(this,"on",event);sub.listeners.push({listener:listener,once:false});sub.start();return this}async once(event,listener){const sub=await getSub(this,"once",event);sub.listeners.push({listener:listener,once:true});sub.start();return this}async emit(event,...args){return await emit(this,event,args,null)}async listenerCount(event){if(event){const sub=await hasSub(this,event);if(!sub){return 0}return sub.listeners.length}const{subs:subs}=getInternal(this);let total=0;for(const{listeners:listeners}of subs.values()){total+=listeners.length}return total}async listeners(event){if(event){const sub=await hasSub(this,event);if(!sub){return[]}return sub.listeners.map(({listener:listener})=>listener)}const{subs:subs}=getInternal(this);let result=[];for(const{listeners:listeners}of subs.values()){result=result.concat(listeners.map(({listener:listener})=>listener))}return result}async off(event,listener){const sub=await hasSub(this,event);if(!sub){return this}if(listener){const index=sub.listeners.map(({listener:listener2})=>listener2).indexOf(listener);if(index>=0){sub.listeners.splice(index,1)}}if(listener==null||sub.listeners.length===0){sub.stop();getInternal(this).subs.delete(sub.tag)}return this}async removeAllListeners(event){if(event){const sub=await hasSub(this,event);if(!sub){return this}sub.stop();getInternal(this).subs.delete(sub.tag)}else{const{subs:subs}=getInternal(this);for(const{tag:tag,stop:stop}of subs.values()){stop();subs.delete(tag)}}return this}async addListener(event,listener){return await this.on(event,listener)}async removeListener(event,listener){return await this.off(event,listener)}static buildClass(abi){class CustomContract extends _BaseContract{constructor(address,runner=null){super(address,abi,runner)}}return CustomContract}static from(target,abi,runner){if(runner==null){runner=null}const contract=new this(target,abi,runner);return contract}};let BaseContract=_BaseContract;function _ContractBase(){return BaseContract}class Contract extends(_ContractBase()){}function getIpfsLink(link){if(link.match(/^ipfs:\/\/ipfs\//i)){link=link.substring(12)}else if(link.match(/^ipfs:\/\//i)){link=link.substring(7)}else{assertArgument(false,"unsupported IPFS format","link",link)}return`https://gateway.ipfs.io/ipfs/${link}`}class MulticoinProviderPlugin{constructor(name){__publicField(this,"name");defineProperties(this,{name:name})}connect(proivder){return this}supportsCoinType(coinType){return false}async encodeAddress(coinType,address){throw new Error("unsupported coin")}async decodeAddress(coinType,data){throw new Error("unsupported coin")}}const matcherIpfs=new RegExp("^(ipfs)://(.*)$","i");const matchers=[new RegExp("^(https)://(.*)$","i"),new RegExp("^(data):(.*)$","i"),matcherIpfs,new RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$","i")];const _EnsResolver=class _EnsResolver{constructor(provider,address,name){__privateAdd(this,_EnsResolver_instances);__publicField(this,"provider");__publicField(this,"address");__publicField(this,"name");__privateAdd(this,_supports2544);__privateAdd(this,_resolver);defineProperties(this,{provider:provider,address:address,name:name});__privateSet(this,_supports2544,null);__privateSet(this,_resolver,new Contract(address,["function supportsInterface(bytes4) view returns (bool)","function resolve(bytes, bytes) view returns (bytes)","function addr(bytes32) view returns (address)","function addr(bytes32, uint) view returns (bytes)","function text(bytes32, string) view returns (string)","function contenthash(bytes32) view returns (bytes)"],provider))}async supportsWildcard(){if(__privateGet(this,_supports2544)==null){__privateSet(this,_supports2544,(async()=>{try{return await __privateGet(this,_resolver).supportsInterface("0x9061b923")}catch(error){if(isError(error,"CALL_EXCEPTION")){return false}__privateSet(this,_supports2544,null);throw error}})())}return await __privateGet(this,_supports2544)}async getAddress(coinType){if(coinType==null){coinType=60}if(coinType===60){try{const result=await __privateMethod(this,_EnsResolver_instances,fetch_fn).call(this,"addr(bytes32)");if(result==null||result===ZeroAddress){return null}return result}catch(error){if(isError(error,"CALL_EXCEPTION")){return null}throw error}}if(coinType>=0&&coinType<2147483648){let ethCoinType=coinType+2147483648;const data2=await __privateMethod(this,_EnsResolver_instances,fetch_fn).call(this,"addr(bytes32,uint)",[ethCoinType]);if(isHexString$2(data2,20)){return getAddress$2(data2)}}let coinPlugin=null;for(const plugin of this.provider.plugins){if(!(plugin instanceof MulticoinProviderPlugin)){continue}if(plugin.supportsCoinType(coinType)){coinPlugin=plugin;break}}if(coinPlugin==null){return null}const data=await __privateMethod(this,_EnsResolver_instances,fetch_fn).call(this,"addr(bytes32,uint)",[coinType]);if(data==null||data==="0x"){return null}const address=await coinPlugin.decodeAddress(coinType,data);if(address!=null){return address}assert$7(false,`invalid coin data`,"UNSUPPORTED_OPERATION",{operation:`getAddress(${coinType})`,info:{coinType:coinType,data:data}})}async getText(key2){const data=await __privateMethod(this,_EnsResolver_instances,fetch_fn).call(this,"text(bytes32,string)",[key2]);if(data==null||data==="0x"){return null}return data}async getContentHash(){const data=await __privateMethod(this,_EnsResolver_instances,fetch_fn).call(this,"contenthash(bytes32)");if(data==null||data==="0x"){return null}const ipfs=data.match(/^0x(e3010170|e5010172)(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);if(ipfs){const scheme=ipfs[1]==="e3010170"?"ipfs":"ipns";const length=parseInt(ipfs[4],16);if(ipfs[5].length===length*2){return`${scheme}://${encodeBase58("0x"+ipfs[2])}`}}const swarm=data.match(/^0xe40101fa011b20([0-9a-f]*)$/);if(swarm&&swarm[1].length===64){return`bzz://${swarm[1]}`}assert$7(false,`invalid or unsupported content hash data`,"UNSUPPORTED_OPERATION",{operation:"getContentHash()",info:{data:data}})}async getAvatar(){const avatar=await this._getAvatar();return avatar.url}async _getAvatar(){const linkage=[{type:"name",value:this.name}];try{const avatar=await this.getText("avatar");if(avatar==null){linkage.push({type:"!avatar",value:""});return{url:null,linkage:linkage}}linkage.push({type:"avatar",value:avatar});for(let i=0;i<matchers.length;i++){const match=avatar.match(matchers[i]);if(match==null){continue}const scheme=match[1].toLowerCase();switch(scheme){case"https":case"data":linkage.push({type:"url",value:avatar});return{linkage:linkage,url:avatar};case"ipfs":{const url=getIpfsLink(avatar);linkage.push({type:"ipfs",value:avatar});linkage.push({type:"url",value:url});return{linkage:linkage,url:url}}case"erc721":case"erc1155":{const selector=scheme==="erc721"?"tokenURI(uint256)":"uri(uint256)";linkage.push({type:scheme,value:avatar});const owner=await this.getAddress();if(owner==null){linkage.push({type:"!owner",value:""});return{url:null,linkage:linkage}}const comps=(match[2]||"").split("/");if(comps.length!==2){linkage.push({type:`!${scheme}caip`,value:match[2]||""});return{url:null,linkage:linkage}}const tokenId=comps[1];const contract=new Contract(comps[0],["function tokenURI(uint) view returns (string)","function ownerOf(uint) view returns (address)","function uri(uint) view returns (string)","function balanceOf(address, uint256) view returns (uint)"],this.provider);if(scheme==="erc721"){const tokenOwner=await contract.ownerOf(tokenId);if(owner!==tokenOwner){linkage.push({type:"!owner",value:tokenOwner});return{url:null,linkage:linkage}}linkage.push({type:"owner",value:tokenOwner})}else if(scheme==="erc1155"){const balance=await contract.balanceOf(owner,tokenId);if(!balance){linkage.push({type:"!balance",value:"0"});return{url:null,linkage:linkage}}linkage.push({type:"balance",value:balance.toString()})}let metadataUrl=await contract[selector](tokenId);if(metadataUrl==null||metadataUrl==="0x"){linkage.push({type:"!metadata-url",value:""});return{url:null,linkage:linkage}}linkage.push({type:"metadata-url-base",value:metadataUrl});if(scheme==="erc1155"){metadataUrl=metadataUrl.replace("{id}",toBeHex(tokenId,32).substring(2));linkage.push({type:"metadata-url-expanded",value:metadataUrl})}if(metadataUrl.match(/^ipfs:/i)){metadataUrl=getIpfsLink(metadataUrl)}linkage.push({type:"metadata-url",value:metadataUrl});let metadata={};const response=await new FetchRequest(metadataUrl).send();response.assertOk();try{metadata=response.bodyJson}catch(error){try{linkage.push({type:"!metadata",value:response.bodyText})}catch(error2){const bytes2=response.body;if(bytes2){linkage.push({type:"!metadata",value:hexlify$2(bytes2)})}return{url:null,linkage:linkage}}return{url:null,linkage:linkage}}if(!metadata){linkage.push({type:"!metadata",value:""});return{url:null,linkage:linkage}}linkage.push({type:"metadata",value:JSON.stringify(metadata)});let imageUrl=metadata.image;if(typeof imageUrl!=="string"){linkage.push({type:"!imageUrl",value:""});return{url:null,linkage:linkage}}if(imageUrl.match(/^(https:\/\/|data:)/i)){}else{const ipfs=imageUrl.match(matcherIpfs);if(ipfs==null){linkage.push({type:"!imageUrl-ipfs",value:imageUrl});return{url:null,linkage:linkage}}linkage.push({type:"imageUrl-ipfs",value:imageUrl});imageUrl=getIpfsLink(imageUrl)}linkage.push({type:"url",value:imageUrl});return{linkage:linkage,url:imageUrl}}}}}catch(error){}return{linkage:linkage,url:null}}static async getEnsAddress(provider){const network=await provider.getNetwork();const ensPlugin=network.getPlugin("org.ethers.plugins.network.Ens");assert$7(ensPlugin,"network does not support ENS","UNSUPPORTED_OPERATION",{operation:"getEnsAddress",info:{network:network}});return ensPlugin.address}static async fromName(provider,name){var _a2;let currentName=name;while(true){if(currentName===""||currentName==="."){return null}if(name!=="eth"&&currentName==="eth"){return null}const addr=await __privateMethod(_a2=_EnsResolver,_EnsResolver_static,getResolver_fn).call(_a2,provider,currentName);if(addr!=null){const resolver=new _EnsResolver(provider,addr,name);if(currentName!==name&&!(await resolver.supportsWildcard())){return null}return resolver}currentName=currentName.split(".").slice(1).join(".")}}};_supports2544=new WeakMap;_resolver=new WeakMap;_EnsResolver_instances=new WeakSet;fetch_fn=async function(funcName,params){params=(params||[]).slice();const iface=__privateGet(this,_resolver).interface;params.unshift(namehash(this.name));let fragment=null;if(await this.supportsWildcard()){fragment=iface.getFunction(funcName);assert$7(fragment,"missing fragment","UNKNOWN_ERROR",{info:{funcName:funcName}});params=[dnsEncode(this.name,255),iface.encodeFunctionData(fragment,params)];funcName="resolve(bytes,bytes)"}params.push({enableCcipRead:true});try{const result=await __privateGet(this,_resolver)[funcName](...params);if(fragment){return iface.decodeFunctionResult(fragment,result)[0]}return result}catch(error){if(!isError(error,"CALL_EXCEPTION")){throw error}}return null};_EnsResolver_static=new WeakSet;getResolver_fn=async function(provider,name){const ensAddr=await _EnsResolver.getEnsAddress(provider);try{const contract=new Contract(ensAddr,["function resolver(bytes32) view returns (address)"],provider);const addr=await contract.resolver(namehash(name),{enableCcipRead:true});if(addr===ZeroAddress){return null}return addr}catch(error){throw error}return null};__privateAdd(_EnsResolver,_EnsResolver_static);let EnsResolver=_EnsResolver;const BN_0=BigInt(0);function allowNull(format,nullValue){return function(value){if(value==null){return nullValue}return format(value)}}function arrayOf$1(format,allowNull2){return array=>{if(allowNull2&&array==null){return null}if(!Array.isArray(array)){throw new Error("not an array")}return array.map(i=>format(i))}}function object(format,altNames){return value=>{const result={};for(const key2 in format){let srcKey=key2;if(altNames&&key2 in altNames&&!(srcKey in value)){for(const altKey of altNames[key2]){if(altKey in value){srcKey=altKey;break}}}try{const nv=format[key2](value[srcKey]);if(nv!==void 0){result[key2]=nv}}catch(error){const message=error instanceof Error?error.message:"not-an-error";assert$7(false,`invalid value for value.${key2} (${message})`,"BAD_DATA",{value:value})}}return result}}function formatBoolean(value){switch(value){case true:case"true":return true;case false:case"false":return false}assertArgument(false,`invalid boolean; ${JSON.stringify(value)}`,"value",value)}function formatData(value){assertArgument(isHexString$2(value,true),"invalid data","value",value);return value}function formatHash(value){assertArgument(isHexString$2(value,32),"invalid hash","value",value);return value}const _formatLog=object({address:getAddress$2,blockHash:formatHash,blockNumber:getNumber,data:formatData,index:getNumber,removed:allowNull(formatBoolean,false),topics:arrayOf$1(formatHash),transactionHash:formatHash,transactionIndex:getNumber},{index:["logIndex"]});function formatLog(value){return _formatLog(value)}const _formatBlock=object({hash:allowNull(formatHash),parentHash:formatHash,parentBeaconBlockRoot:allowNull(formatHash,null),number:getNumber,timestamp:getNumber,nonce:allowNull(formatData),difficulty:getBigInt,gasLimit:getBigInt,gasUsed:getBigInt,stateRoot:allowNull(formatHash,null),receiptsRoot:allowNull(formatHash,null),blobGasUsed:allowNull(getBigInt,null),excessBlobGas:allowNull(getBigInt,null),miner:allowNull(getAddress$2),prevRandao:allowNull(formatHash,null),extraData:formatData,baseFeePerGas:allowNull(getBigInt)},{prevRandao:["mixHash"]});function formatBlock$1(value){const result=_formatBlock(value);result.transactions=value.transactions.map(tx=>{if(typeof tx==="string"){return tx}return formatTransactionResponse(tx)});return result}const _formatReceiptLog=object({transactionIndex:getNumber,blockNumber:getNumber,transactionHash:formatHash,address:getAddress$2,topics:arrayOf$1(formatHash),data:formatData,index:getNumber,blockHash:formatHash},{index:["logIndex"]});function formatReceiptLog(value){return _formatReceiptLog(value)}const _formatTransactionReceipt=object({to:allowNull(getAddress$2,null),from:allowNull(getAddress$2,null),contractAddress:allowNull(getAddress$2,null),index:getNumber,root:allowNull(hexlify$2),gasUsed:getBigInt,blobGasUsed:allowNull(getBigInt,null),logsBloom:allowNull(formatData),blockHash:formatHash,hash:formatHash,logs:arrayOf$1(formatReceiptLog),blockNumber:getNumber,cumulativeGasUsed:getBigInt,effectiveGasPrice:allowNull(getBigInt),blobGasPrice:allowNull(getBigInt,null),status:allowNull(getNumber),type:allowNull(getNumber,0)},{effectiveGasPrice:["gasPrice"],hash:["transactionHash"],index:["transactionIndex"]});function formatTransactionReceipt(value){return _formatTransactionReceipt(value)}function formatTransactionResponse(value){if(value.to&&getBigInt(value.to)===BN_0){value.to="0x0000000000000000000000000000000000000000"}const result=object({hash:formatHash,index:allowNull(getNumber,void 0),type:value2=>{if(value2==="0x"||value2==null){return 0}return getNumber(value2)},accessList:allowNull(accessListify$1,null),blobVersionedHashes:allowNull(arrayOf$1(formatHash,true),null),authorizationList:allowNull(arrayOf$1(v=>{let sig;if(v.signature){sig=v.signature}else{let yParity=v.yParity;if(yParity==="0x1b"){yParity=0}else if(yParity==="0x1c"){yParity=1}sig=Object.assign({},v,{yParity:yParity})}return{address:getAddress$2(v.address),chainId:getBigInt(v.chainId),nonce:getBigInt(v.nonce),signature:Signature$2.from(sig)}},false),null),blockHash:allowNull(formatHash,null),blockNumber:allowNull(getNumber,null),transactionIndex:allowNull(getNumber,null),from:getAddress$2,gasPrice:allowNull(getBigInt),maxPriorityFeePerGas:allowNull(getBigInt),maxFeePerGas:allowNull(getBigInt),maxFeePerBlobGas:allowNull(getBigInt,null),gasLimit:getBigInt,to:allowNull(getAddress$2,null),value:getBigInt,nonce:getNumber,data:formatData,creates:allowNull(getAddress$2,null),chainId:allowNull(getBigInt,null)},{data:["input"],gasLimit:["gas"],index:["transactionIndex"]})(value);if(result.to==null&&result.creates==null){result.creates=getCreateAddress(result)}if((value.type===1||value.type===2)&&value.accessList==null){result.accessList=[]}if(value.signature){result.signature=Signature$2.from(value.signature)}else{result.signature=Signature$2.from(value)}if(result.chainId==null){const chainId=result.signature.legacyChainId;if(chainId!=null){result.chainId=chainId}}if(result.blockHash&&getBigInt(result.blockHash)===BN_0){result.blockHash=null}return result}const EnsAddress="0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";class NetworkPlugin{constructor(name){__publicField(this,"name");defineProperties(this,{name:name})}clone(){return new NetworkPlugin(this.name)}}class GasCostPlugin extends NetworkPlugin{constructor(effectiveBlock,costs){if(effectiveBlock==null){effectiveBlock=0}super(`org.ethers.network.plugins.GasCost#${effectiveBlock||0}`);__publicField(this,"effectiveBlock");__publicField(this,"txBase");__publicField(this,"txCreate");__publicField(this,"txDataZero");__publicField(this,"txDataNonzero");__publicField(this,"txAccessListStorageKey");__publicField(this,"txAccessListAddress");const props={effectiveBlock:effectiveBlock};function set(name,nullish){let value=(costs||{})[name];if(value==null){value=nullish}assertArgument(typeof value==="number",`invalud value for ${name}`,"costs",costs);props[name]=value}set("txBase",21e3);set("txCreate",32e3);set("txDataZero",4);set("txDataNonzero",16);set("txAccessListStorageKey",1900);set("txAccessListAddress",2400);defineProperties(this,props)}clone(){return new GasCostPlugin(this.effectiveBlock,this)}}class EnsPlugin extends NetworkPlugin{constructor(address,targetNetwork){super("org.ethers.plugins.network.Ens");__publicField(this,"address");__publicField(this,"targetNetwork");defineProperties(this,{address:address||EnsAddress,targetNetwork:targetNetwork==null?1:targetNetwork})}clone(){return new EnsPlugin(this.address,this.targetNetwork)}}class FetchUrlFeeDataNetworkPlugin extends NetworkPlugin{constructor(url,processFunc){super("org.ethers.plugins.network.FetchUrlFeeDataPlugin");__privateAdd(this,_url2);__privateAdd(this,_processFunc);__privateSet(this,_url2,url);__privateSet(this,_processFunc,processFunc)}get url(){return __privateGet(this,_url2)}get processFunc(){return __privateGet(this,_processFunc)}clone(){return this}}_url2=new WeakMap;_processFunc=new WeakMap;const Networks=new Map;let Network$1=(_f=class{constructor(name,chainId){__privateAdd(this,_name);__privateAdd(this,_chainId2);__privateAdd(this,_plugins);__privateSet(this,_name,name);__privateSet(this,_chainId2,getBigInt(chainId));__privateSet(this,_plugins,new Map)}toJSON(){return{name:this.name,chainId:String(this.chainId)}}get name(){return __privateGet(this,_name)}set name(value){__privateSet(this,_name,value)}get chainId(){return __privateGet(this,_chainId2)}set chainId(value){__privateSet(this,_chainId2,getBigInt(value,"chainId"))}matches(other){if(other==null){return false}if(typeof other==="string"){try{return this.chainId===getBigInt(other)}catch(error){}return this.name===other}if(typeof other==="number"||typeof other==="bigint"){try{return this.chainId===getBigInt(other)}catch(error){}return false}if(typeof other==="object"){if(other.chainId!=null){try{return this.chainId===getBigInt(other.chainId)}catch(error){}return false}if(other.name!=null){return this.name===other.name}return false}return false}get plugins(){return Array.from(__privateGet(this,_plugins).values())}attachPlugin(plugin){if(__privateGet(this,_plugins).get(plugin.name)){throw new Error(`cannot replace existing plugin: ${plugin.name} `)}__privateGet(this,_plugins).set(plugin.name,plugin.clone());return this}getPlugin(name){return __privateGet(this,_plugins).get(name)||null}getPlugins(basename){return this.plugins.filter(p=>p.name.split("#")[0]===basename)}clone(){const clone=new _f(this.name,this.chainId);this.plugins.forEach(plugin=>{clone.attachPlugin(plugin.clone())});return clone}computeIntrinsicGas(tx){const costs=this.getPlugin("org.ethers.plugins.network.GasCost")||new GasCostPlugin;let gas=costs.txBase;if(tx.to==null){gas+=costs.txCreate}if(tx.data){for(let i=2;i<tx.data.length;i+=2){if(tx.data.substring(i,i+2)==="00"){gas+=costs.txDataZero}else{gas+=costs.txDataNonzero}}}if(tx.accessList){const accessList=accessListify$1(tx.accessList);for(const addr in accessList){gas+=costs.txAccessListAddress+costs.txAccessListStorageKey*accessList[addr].storageKeys.length}}return gas}static from(network){injectCommonNetworks();if(network==null){return _f.from("mainnet")}if(typeof network==="number"){network=BigInt(network)}if(typeof network==="string"||typeof network==="bigint"){const networkFunc=Networks.get(network);if(networkFunc){return networkFunc()}if(typeof network==="bigint"){return new _f("unknown",network)}assertArgument(false,"unknown network","network",network)}if(typeof network.clone==="function"){const clone=network.clone();return clone}if(typeof network==="object"){assertArgument(typeof network.name==="string"&&typeof network.chainId==="number","invalid network object name or chainId","network",network);const custom=new _f(network.name,network.chainId);if(network.ensAddress||network.ensNetwork!=null){custom.attachPlugin(new EnsPlugin(network.ensAddress,network.ensNetwork))}return custom}assertArgument(false,"invalid network","network",network)}static register(nameOrChainId,networkFunc){if(typeof nameOrChainId==="number"){nameOrChainId=BigInt(nameOrChainId)}const existing=Networks.get(nameOrChainId);if(existing){assertArgument(false,`conflicting network for ${JSON.stringify(existing.name)}`,"nameOrChainId",nameOrChainId)}Networks.set(nameOrChainId,networkFunc)}},_name=new WeakMap,_chainId2=new WeakMap,_plugins=new WeakMap,_f);function parseUnits(_value2,decimals){const value=String(_value2);if(!value.match(/^[0-9.]+$/)){throw new Error(`invalid gwei value: ${_value2}`)}const comps=value.split(".");if(comps.length===1){comps.push("")}if(comps.length!==2){throw new Error(`invalid gwei value: ${_value2}`)}while(comps[1].length<decimals){comps[1]+="0"}if(comps[1].length>9){let frac=BigInt(comps[1].substring(0,9));if(!comps[1].substring(9).match(/^0+$/)){frac++}comps[1]=frac.toString()}return BigInt(comps[0]+comps[1])}function getGasStationPlugin(url){return new FetchUrlFeeDataNetworkPlugin(url,async(fetchFeeData,provider,request)=>{request.setHeader("User-Agent","ethers");let response;try{const[_response,_feeData]=await Promise.all([request.send(),fetchFeeData()]);response=_response;const payload=response.bodyJson.standard;const feeData={gasPrice:_feeData.gasPrice,maxFeePerGas:parseUnits(payload.maxFee,9),maxPriorityFeePerGas:parseUnits(payload.maxPriorityFee,9)};return feeData}catch(error){assert$7(false,`error encountered with polygon gas station (${JSON.stringify(request.url)})`,"SERVER_ERROR",{request:request,response:response,error:error})}})}let injected=false;function injectCommonNetworks(){if(injected){return}injected=true;function registerEth(name,chainId,options){const func=function(){const network=new Network$1(name,chainId);if(options.ensNetwork!=null){network.attachPlugin(new EnsPlugin(null,options.ensNetwork))}network.attachPlugin(new GasCostPlugin);(options.plugins||[]).forEach(plugin=>{network.attachPlugin(plugin)});return network};Network$1.register(name,func);Network$1.register(chainId,func);if(options.altNames){options.altNames.forEach(name2=>{Network$1.register(name2,func)})}}registerEth("mainnet",1,{ensNetwork:1,altNames:["homestead"]});registerEth("ropsten",3,{ensNetwork:3});registerEth("rinkeby",4,{ensNetwork:4});registerEth("goerli",5,{ensNetwork:5});registerEth("kovan",42,{ensNetwork:42});registerEth("sepolia",11155111,{ensNetwork:11155111});registerEth("holesky",17e3,{ensNetwork:17e3});registerEth("classic",61,{});registerEth("classicKotti",6,{});registerEth("arbitrum",42161,{ensNetwork:1});registerEth("arbitrum-goerli",421613,{});registerEth("arbitrum-sepolia",421614,{});registerEth("base",8453,{ensNetwork:1});registerEth("base-goerli",84531,{});registerEth("base-sepolia",84532,{});registerEth("bnb",56,{ensNetwork:1});registerEth("bnbt",97,{});registerEth("linea",59144,{ensNetwork:1});registerEth("linea-goerli",59140,{});registerEth("linea-sepolia",59141,{});registerEth("matic",137,{ensNetwork:1,plugins:[getGasStationPlugin("https://gasstation.polygon.technology/v2")]});registerEth("matic-amoy",80002,{});registerEth("matic-mumbai",80001,{altNames:["maticMumbai","maticmum"],plugins:[getGasStationPlugin("https://gasstation-testnet.polygon.technology/v2")]});registerEth("optimism",10,{ensNetwork:1,plugins:[]});registerEth("optimism-goerli",420,{});registerEth("optimism-sepolia",11155420,{});registerEth("xdai",100,{ensNetwork:1})}function copy$2(obj){return JSON.parse(JSON.stringify(obj))}class PollingBlockSubscriber{constructor(provider){__privateAdd(this,_PollingBlockSubscriber_instances);__privateAdd(this,_provider);__privateAdd(this,_poller);__privateAdd(this,_interval);__privateAdd(this,_blockNumber);__privateSet(this,_provider,provider);__privateSet(this,_poller,null);__privateSet(this,_interval,4e3);__privateSet(this,_blockNumber,-2)}get pollingInterval(){return __privateGet(this,_interval)}set pollingInterval(value){__privateSet(this,_interval,value)}start(){if(__privateGet(this,_poller)){return}__privateSet(this,_poller,__privateGet(this,_provider)._setTimeout(__privateMethod(this,_PollingBlockSubscriber_instances,poll_fn).bind(this),__privateGet(this,_interval)));__privateMethod(this,_PollingBlockSubscriber_instances,poll_fn).call(this)}stop(){if(!__privateGet(this,_poller)){return}__privateGet(this,_provider)._clearTimeout(__privateGet(this,_poller));__privateSet(this,_poller,null)}pause(dropWhilePaused){this.stop();if(dropWhilePaused){__privateSet(this,_blockNumber,-2)}}resume(){this.start()}}_provider=new WeakMap;_poller=new WeakMap;_interval=new WeakMap;_blockNumber=new WeakMap;_PollingBlockSubscriber_instances=new WeakSet;poll_fn=async function(){try{const blockNumber=await __privateGet(this,_provider).getBlockNumber();if(__privateGet(this,_blockNumber)===-2){__privateSet(this,_blockNumber,blockNumber);return}if(blockNumber!==__privateGet(this,_blockNumber)){for(let b2=__privateGet(this,_blockNumber)+1;b2<=blockNumber;b2++){if(__privateGet(this,_poller)==null){return}await __privateGet(this,_provider).emit("block",b2)}__privateSet(this,_blockNumber,blockNumber)}}catch(error){}if(__privateGet(this,_poller)==null){return}__privateSet(this,_poller,__privateGet(this,_provider)._setTimeout(__privateMethod(this,_PollingBlockSubscriber_instances,poll_fn).bind(this),__privateGet(this,_interval)))};class OnBlockSubscriber{constructor(provider){__privateAdd(this,_provider2);__privateAdd(this,_poll);__privateAdd(this,_running);__privateSet(this,_provider2,provider);__privateSet(this,_running,false);__privateSet(this,_poll,blockNumber=>{this._poll(blockNumber,__privateGet(this,_provider2))})}async _poll(blockNumber,provider){throw new Error("sub-classes must override this")}start(){if(__privateGet(this,_running)){return}__privateSet(this,_running,true);__privateGet(this,_poll).call(this,-2);__privateGet(this,_provider2).on("block",__privateGet(this,_poll))}stop(){if(!__privateGet(this,_running)){return}__privateSet(this,_running,false);__privateGet(this,_provider2).off("block",__privateGet(this,_poll))}pause(dropWhilePaused){this.stop()}resume(){this.start()}}_provider2=new WeakMap;_poll=new WeakMap;_running=new WeakMap;class PollingBlockTagSubscriber extends OnBlockSubscriber{constructor(provider,tag){super(provider);__privateAdd(this,_tag);__privateAdd(this,_lastBlock);__privateSet(this,_tag,tag);__privateSet(this,_lastBlock,-2)}pause(dropWhilePaused){if(dropWhilePaused){__privateSet(this,_lastBlock,-2)}super.pause(dropWhilePaused)}async _poll(blockNumber,provider){const block=await provider.getBlock(__privateGet(this,_tag));if(block==null){return}if(__privateGet(this,_lastBlock)===-2){__privateSet(this,_lastBlock,block.number)}else if(block.number>__privateGet(this,_lastBlock)){provider.emit(__privateGet(this,_tag),block.number);__privateSet(this,_lastBlock,block.number)}}}_tag=new WeakMap;_lastBlock=new WeakMap;class PollingOrphanSubscriber extends OnBlockSubscriber{constructor(provider,filter2){super(provider);__privateAdd(this,_filter2);__privateSet(this,_filter2,copy$2(filter2))}async _poll(blockNumber,provider){throw new Error("@TODO")}}_filter2=new WeakMap;class PollingTransactionSubscriber extends OnBlockSubscriber{constructor(provider,hash2){super(provider);__privateAdd(this,_hash);__privateSet(this,_hash,hash2)}async _poll(blockNumber,provider){const tx=await provider.getTransactionReceipt(__privateGet(this,_hash));if(tx){provider.emit(__privateGet(this,_hash),tx)}}}_hash=new WeakMap;class PollingEventSubscriber{constructor(provider,filter2){__privateAdd(this,_PollingEventSubscriber_instances);__privateAdd(this,_provider3);__privateAdd(this,_filter3);__privateAdd(this,_poller2);__privateAdd(this,_running2);__privateAdd(this,_blockNumber2);__privateSet(this,_provider3,provider);__privateSet(this,_filter3,copy$2(filter2));__privateSet(this,_poller2,__privateMethod(this,_PollingEventSubscriber_instances,poll_fn2).bind(this));__privateSet(this,_running2,false);__privateSet(this,_blockNumber2,-2)}start(){if(__privateGet(this,_running2)){return}__privateSet(this,_running2,true);if(__privateGet(this,_blockNumber2)===-2){__privateGet(this,_provider3).getBlockNumber().then(blockNumber=>{__privateSet(this,_blockNumber2,blockNumber)})}__privateGet(this,_provider3).on("block",__privateGet(this,_poller2))}stop(){if(!__privateGet(this,_running2)){return}__privateSet(this,_running2,false);__privateGet(this,_provider3).off("block",__privateGet(this,_poller2))}pause(dropWhilePaused){this.stop();if(dropWhilePaused){__privateSet(this,_blockNumber2,-2)}}resume(){this.start()}}_provider3=new WeakMap;_filter3=new WeakMap;_poller2=new WeakMap;_running2=new WeakMap;_blockNumber2=new WeakMap;_PollingEventSubscriber_instances=new WeakSet;poll_fn2=async function(blockNumber){if(__privateGet(this,_blockNumber2)===-2){return}const filter2=copy$2(__privateGet(this,_filter3));filter2.fromBlock=__privateGet(this,_blockNumber2)+1;filter2.toBlock=blockNumber;const logs=await __privateGet(this,_provider3).getLogs(filter2);if(logs.length===0){if(__privateGet(this,_blockNumber2)<blockNumber-60){__privateSet(this,_blockNumber2,blockNumber-60)}return}for(const log2 of logs){__privateGet(this,_provider3).emit(__privateGet(this,_filter3),log2);__privateSet(this,_blockNumber2,log2.blockNumber)}};const BN_2=BigInt(2);const MAX_CCIP_REDIRECTS=10;function isPromise(value){return value&&typeof value.then==="function"}function getTag$1(prefix,value){return prefix+":"+JSON.stringify(value,(k,v)=>{if(v==null){return"null"}if(typeof v==="bigint"){return`bigint:${v.toString()}`}if(typeof v==="string"){return v.toLowerCase()}if(typeof v==="object"&&!Array.isArray(v)){const keys2=Object.keys(v);keys2.sort();return keys2.reduce((accum,key2)=>{accum[key2]=v[key2];return accum},{})}return v})}class UnmanagedSubscriber{constructor(name){__publicField(this,"name");defineProperties(this,{name:name})}start(){}stop(){}pause(dropWhilePaused){}resume(){}}function copy$1(value){return JSON.parse(JSON.stringify(value))}function concisify(items){items=Array.from(new Set(items).values());items.sort();return items}async function getSubscription(_event2,provider){if(_event2==null){throw new Error("invalid event")}if(Array.isArray(_event2)){_event2={topics:_event2}}if(typeof _event2==="string"){switch(_event2){case"block":case"debug":case"error":case"finalized":case"network":case"pending":case"safe":{return{type:_event2,tag:_event2}}}}if(isHexString$2(_event2,32)){const hash2=_event2.toLowerCase();return{type:"transaction",tag:getTag$1("tx",{hash:hash2}),hash:hash2}}if(_event2.orphan){const event=_event2;return{type:"orphan",tag:getTag$1("orphan",event),filter:copy$1(event)}}if(_event2.address||_event2.topics){const event=_event2;const filter2={topics:(event.topics||[]).map(t=>{if(t==null){return null}if(Array.isArray(t)){return concisify(t.map(t2=>t2.toLowerCase()))}return t.toLowerCase()})};if(event.address){const addresses=[];const promises=[];const addAddress=addr=>{if(isHexString$2(addr)){addresses.push(addr)}else{promises.push((async()=>{addresses.push(await resolveAddress(addr,provider))})())}};if(Array.isArray(event.address)){event.address.forEach(addAddress)}else{addAddress(event.address)}if(promises.length){await Promise.all(promises)}filter2.address=concisify(addresses.map(a=>a.toLowerCase()))}return{filter:filter2,tag:getTag$1("event",filter2),type:"event"}}assertArgument(false,"unknown ProviderEvent","event",_event2)}function getTime(){return(new Date).getTime()}const defaultOptions$1={cacheTimeout:250,pollingInterval:4e3};let AbstractProvider$1=(_g=class{constructor(_network3,options){__privateAdd(this,_AbstractProvider_instances);__privateAdd(this,_subs);__privateAdd(this,_plugins2);__privateAdd(this,_pausedState);__privateAdd(this,_destroyed);__privateAdd(this,_networkPromise);__privateAdd(this,_anyNetwork);__privateAdd(this,_performCache);__privateAdd(this,_lastBlockNumber);__privateAdd(this,_nextTimer);__privateAdd(this,_timers);__privateAdd(this,_disableCcipRead);__privateAdd(this,_options2);__privateSet(this,_options2,Object.assign({},defaultOptions$1,options||{}));if(_network3==="any"){__privateSet(this,_anyNetwork,true);__privateSet(this,_networkPromise,null)}else if(_network3){const network=Network$1.from(_network3);__privateSet(this,_anyNetwork,false);__privateSet(this,_networkPromise,Promise.resolve(network));setTimeout(()=>{this.emit("network",network,null)},0)}else{__privateSet(this,_anyNetwork,false);__privateSet(this,_networkPromise,null)}__privateSet(this,_lastBlockNumber,-1);__privateSet(this,_performCache,new Map);__privateSet(this,_subs,new Map);__privateSet(this,_plugins2,new Map);__privateSet(this,_pausedState,null);__privateSet(this,_destroyed,false);__privateSet(this,_nextTimer,1);__privateSet(this,_timers,new Map);__privateSet(this,_disableCcipRead,false)}get pollingInterval(){return __privateGet(this,_options2).pollingInterval}get provider(){return this}get plugins(){return Array.from(__privateGet(this,_plugins2).values())}attachPlugin(plugin){if(__privateGet(this,_plugins2).get(plugin.name)){throw new Error(`cannot replace existing plugin: ${plugin.name} `)}__privateGet(this,_plugins2).set(plugin.name,plugin.connect(this));return this}getPlugin(name){return __privateGet(this,_plugins2).get(name)||null}get disableCcipRead(){return __privateGet(this,_disableCcipRead)}set disableCcipRead(value){__privateSet(this,_disableCcipRead,!!value)}async ccipReadFetch(tx,calldata,urls){if(this.disableCcipRead||urls.length===0||tx.to==null){return null}const sender=tx.to.toLowerCase();const data=calldata.toLowerCase();const errorMessages=[];for(let i=0;i<urls.length;i++){const url=urls[i];const href=url.replace("{sender}",sender).replace("{data}",data);const request=new FetchRequest(href);if(url.indexOf("{data}")===-1){request.body={data:data,sender:sender}}this.emit("debug",{action:"sendCcipReadFetchRequest",request:request,index:i,urls:urls});let errorMessage="unknown error";let resp;try{resp=await request.send()}catch(error){errorMessages.push(error.message);this.emit("debug",{action:"receiveCcipReadFetchError",request:request,result:{error:error}});continue}try{const result=resp.bodyJson;if(result.data){this.emit("debug",{action:"receiveCcipReadFetchResult",request:request,result:result});return result.data}if(result.message){errorMessage=result.message}this.emit("debug",{action:"receiveCcipReadFetchError",request:request,result:result})}catch(error){}assert$7(resp.statusCode<400||resp.statusCode>=500,`response not found during CCIP fetch: ${errorMessage}`,"OFFCHAIN_FAULT",{reason:"404_MISSING_RESOURCE",transaction:tx,info:{url:url,errorMessage:errorMessage}});errorMessages.push(errorMessage)}assert$7(false,`error encountered during CCIP fetch: ${errorMessages.map(m=>JSON.stringify(m)).join(", ")}`,"OFFCHAIN_FAULT",{reason:"500_SERVER_ERROR",transaction:tx,info:{urls:urls,errorMessages:errorMessages}})}_wrapBlock(value,network){return new Block(formatBlock$1(value),this)}_wrapLog(value,network){return new Log(formatLog(value),this)}_wrapTransactionReceipt(value,network){return new TransactionReceipt(formatTransactionReceipt(value),this)}_wrapTransactionResponse(tx,network){return new TransactionResponse(formatTransactionResponse(tx),this)}_detectNetwork(){assert$7(false,"sub-classes must implement this","UNSUPPORTED_OPERATION",{operation:"_detectNetwork"})}async _perform(req){assert$7(false,`unsupported method: ${req.method}`,"UNSUPPORTED_OPERATION",{operation:req.method,info:req})}async getBlockNumber(){const blockNumber=getNumber(await __privateMethod(this,_AbstractProvider_instances,perform_fn).call(this,{method:"getBlockNumber"}),"%response");if(__privateGet(this,_lastBlockNumber)>=0){__privateSet(this,_lastBlockNumber,blockNumber)}return blockNumber}_getAddress(address){return resolveAddress(address,this)}_getBlockTag(blockTag){if(blockTag==null){return"latest"}switch(blockTag){case"earliest":return"0x0";case"finalized":case"latest":case"pending":case"safe":return blockTag}if(isHexString$2(blockTag)){if(isHexString$2(blockTag,32)){return blockTag}return toQuantity(blockTag)}if(typeof blockTag==="bigint"){blockTag=getNumber(blockTag,"blockTag")}if(typeof blockTag==="number"){if(blockTag>=0){return toQuantity(blockTag)}if(__privateGet(this,_lastBlockNumber)>=0){return toQuantity(__privateGet(this,_lastBlockNumber)+blockTag)}return this.getBlockNumber().then(b2=>toQuantity(b2+blockTag))}assertArgument(false,"invalid blockTag","blockTag",blockTag)}_getFilter(filter2){const topics=(filter2.topics||[]).map(t=>{if(t==null){return null}if(Array.isArray(t)){return concisify(t.map(t2=>t2.toLowerCase()))}return t.toLowerCase()});const blockHash="blockHash"in filter2?filter2.blockHash:void 0;const resolve=(_address,fromBlock2,toBlock2)=>{let address2=void 0;switch(_address.length){case 0:break;case 1:address2=_address[0];break;default:_address.sort();address2=_address}if(blockHash){if(fromBlock2!=null||toBlock2!=null){throw new Error("invalid filter")}}const filter3={};if(address2){filter3.address=address2}if(topics.length){filter3.topics=topics}if(fromBlock2){filter3.fromBlock=fromBlock2}if(toBlock2){filter3.toBlock=toBlock2}if(blockHash){filter3.blockHash=blockHash}return filter3};let address=[];if(filter2.address){if(Array.isArray(filter2.address)){for(const addr of filter2.address){address.push(this._getAddress(addr))}}else{address.push(this._getAddress(filter2.address))}}let fromBlock=void 0;if("fromBlock"in filter2){fromBlock=this._getBlockTag(filter2.fromBlock)}let toBlock=void 0;if("toBlock"in filter2){toBlock=this._getBlockTag(filter2.toBlock)}if(address.filter(a=>typeof a!=="string").length||fromBlock!=null&&typeof fromBlock!=="string"||toBlock!=null&&typeof toBlock!=="string"){return Promise.all([Promise.all(address),fromBlock,toBlock]).then(result=>resolve(result[0],result[1],result[2]))}return resolve(address,fromBlock,toBlock)}_getTransactionRequest(_request2){const request=copyRequest(_request2);const promises=[];["to","from"].forEach(key2=>{if(request[key2]==null){return}const addr=resolveAddress(request[key2],this);if(isPromise(addr)){promises.push(async function(){request[key2]=await addr}())}else{request[key2]=addr}});if(request.blockTag!=null){const blockTag=this._getBlockTag(request.blockTag);if(isPromise(blockTag)){promises.push(async function(){request.blockTag=await blockTag}())}else{request.blockTag=blockTag}}if(promises.length){return async function(){await Promise.all(promises);return request}()}return request}async getNetwork(){if(__privateGet(this,_networkPromise)==null){const detectNetwork=(async()=>{try{const network=await this._detectNetwork();this.emit("network",network,null);return network}catch(error){if(__privateGet(this,_networkPromise)===detectNetwork){__privateSet(this,_networkPromise,null)}throw error}})();__privateSet(this,_networkPromise,detectNetwork);return(await detectNetwork).clone()}const networkPromise=__privateGet(this,_networkPromise);const[expected,actual]=await Promise.all([networkPromise,this._detectNetwork()]);if(expected.chainId!==actual.chainId){if(__privateGet(this,_anyNetwork)){this.emit("network",actual,expected);if(__privateGet(this,_networkPromise)===networkPromise){__privateSet(this,_networkPromise,Promise.resolve(actual))}}else{assert$7(false,`network changed: ${expected.chainId} => ${actual.chainId} `,"NETWORK_ERROR",{event:"changed"})}}return expected.clone()}async getFeeData(){const network=await this.getNetwork();const getFeeDataFunc=async()=>{const{_block:_block,gasPrice:gasPrice,priorityFee:priorityFee}=await resolveProperties$2({_block:__privateMethod(this,_AbstractProvider_instances,getBlock_fn).call(this,"latest",false),gasPrice:(async()=>{try{const value=await __privateMethod(this,_AbstractProvider_instances,perform_fn).call(this,{method:"getGasPrice"});return getBigInt(value,"%response")}catch(error){}return null})(),priorityFee:(async()=>{try{const value=await __privateMethod(this,_AbstractProvider_instances,perform_fn).call(this,{method:"getPriorityFee"});return getBigInt(value,"%response")}catch(error){}return null})()});let maxFeePerGas=null;let maxPriorityFeePerGas=null;const block=this._wrapBlock(_block,network);if(block&&block.baseFeePerGas){maxPriorityFeePerGas=priorityFee!=null?priorityFee:BigInt("1000000000");maxFeePerGas=block.baseFeePerGas*BN_2+maxPriorityFeePerGas}return new FeeData(gasPrice,maxFeePerGas,maxPriorityFeePerGas)};const plugin=network.getPlugin("org.ethers.plugins.network.FetchUrlFeeDataPlugin");if(plugin){const req=new FetchRequest(plugin.url);const feeData=await plugin.processFunc(getFeeDataFunc,this,req);return new FeeData(feeData.gasPrice,feeData.maxFeePerGas,feeData.maxPriorityFeePerGas)}return await getFeeDataFunc()}async estimateGas(_tx){let tx=this._getTransactionRequest(_tx);if(isPromise(tx)){tx=await tx}return getBigInt(await __privateMethod(this,_AbstractProvider_instances,perform_fn).call(this,{method:"estimateGas",transaction:tx}),"%response")}async call(_tx){const{tx:tx,blockTag:blockTag}=await resolveProperties$2({tx:this._getTransactionRequest(_tx),blockTag:this._getBlockTag(_tx.blockTag)});return await __privateMethod(this,_AbstractProvider_instances,checkNetwork_fn).call(this,__privateMethod(this,_AbstractProvider_instances,call_fn).call(this,tx,blockTag,_tx.enableCcipRead?0:-1))}async getBalance(address,blockTag){return getBigInt(await __privateMethod(this,_AbstractProvider_instances,getAccountValue_fn).call(this,{method:"getBalance"},address,blockTag),"%response")}async getTransactionCount(address,blockTag){return getNumber(await __privateMethod(this,_AbstractProvider_instances,getAccountValue_fn).call(this,{method:"getTransactionCount"},address,blockTag),"%response")}async getCode(address,blockTag){return hexlify$2(await __privateMethod(this,_AbstractProvider_instances,getAccountValue_fn).call(this,{method:"getCode"},address,blockTag))}async getStorage(address,_position,blockTag){const position=getBigInt(_position,"position");return hexlify$2(await __privateMethod(this,_AbstractProvider_instances,getAccountValue_fn).call(this,{method:"getStorage",position:position},address,blockTag))}async broadcastTransaction(signedTx){const{blockNumber:blockNumber,hash:hash2,network:network}=await resolveProperties$2({blockNumber:this.getBlockNumber(),hash:this._perform({method:"broadcastTransaction",signedTransaction:signedTx}),network:this.getNetwork()});const tx=Transaction.from(signedTx);if(tx.hash!==hash2){throw new Error("@TODO: the returned hash did not match")}return this._wrapTransactionResponse(tx,network).replaceableTransaction(blockNumber)}async getBlock(block,prefetchTxs){const{network:network,params:params}=await resolveProperties$2({network:this.getNetwork(),params:__privateMethod(this,_AbstractProvider_instances,getBlock_fn).call(this,block,!!prefetchTxs)});if(params==null){return null}return this._wrapBlock(params,network)}async getTransaction(hash2){const{network:network,params:params}=await resolveProperties$2({network:this.getNetwork(),params:__privateMethod(this,_AbstractProvider_instances,perform_fn).call(this,{method:"getTransaction",hash:hash2})});if(params==null){return null}return this._wrapTransactionResponse(params,network)}async getTransactionReceipt(hash2){const{network:network,params:params}=await resolveProperties$2({network:this.getNetwork(),params:__privateMethod(this,_AbstractProvider_instances,perform_fn).call(this,{method:"getTransactionReceipt",hash:hash2})});if(params==null){return null}if(params.gasPrice==null&&params.effectiveGasPrice==null){const tx=await __privateMethod(this,_AbstractProvider_instances,perform_fn).call(this,{method:"getTransaction",hash:hash2});if(tx==null){throw new Error("report this; could not find tx or effectiveGasPrice")}params.effectiveGasPrice=tx.gasPrice}return this._wrapTransactionReceipt(params,network)}async getTransactionResult(hash2){const{result:result}=await resolveProperties$2({network:this.getNetwork(),result:__privateMethod(this,_AbstractProvider_instances,perform_fn).call(this,{method:"getTransactionResult",hash:hash2})});if(result==null){return null}return hexlify$2(result)}async getLogs(_filter4){let filter2=this._getFilter(_filter4);if(isPromise(filter2)){filter2=await filter2}const{network:network,params:params}=await resolveProperties$2({network:this.getNetwork(),params:__privateMethod(this,_AbstractProvider_instances,perform_fn).call(this,{method:"getLogs",filter:filter2})});return params.map(p=>this._wrapLog(p,network))}_getProvider(chainId){assert$7(false,"provider cannot connect to target network","UNSUPPORTED_OPERATION",{operation:"_getProvider()"})}async getResolver(name){return await EnsResolver.fromName(this,name)}async getAvatar(name){const resolver=await this.getResolver(name);if(resolver){return await resolver.getAvatar()}return null}async resolveName(name){const resolver=await this.getResolver(name);if(resolver){return await resolver.getAddress()}return null}async lookupAddress(address){address=getAddress$2(address);const node=namehash(address.substring(2).toLowerCase()+".addr.reverse");try{const ensAddr=await EnsResolver.getEnsAddress(this);const ensContract=new Contract(ensAddr,["function resolver(bytes32) view returns (address)"],this);const resolver=await ensContract.resolver(node);if(resolver==null||resolver===ZeroAddress){return null}const resolverContract=new Contract(resolver,["function name(bytes32) view returns (string)"],this);const name=await resolverContract.name(node);const check=await this.resolveName(name);if(check!==address){return null}return name}catch(error){if(isError(error,"BAD_DATA")&&error.value==="0x"){return null}if(isError(error,"CALL_EXCEPTION")){return null}throw error}return null}async waitForTransaction(hash2,_confirms,timeout){const confirms=_confirms!=null?_confirms:1;if(confirms===0){return this.getTransactionReceipt(hash2)}return new Promise(async(resolve,reject)=>{let timer=null;const listener=async blockNumber=>{try{const receipt=await this.getTransactionReceipt(hash2);if(receipt!=null){if(blockNumber-receipt.blockNumber+1>=confirms){resolve(receipt);if(timer){clearTimeout(timer);timer=null}return}}}catch(error){console.log("EEE",error)}this.once("block",listener)};if(timeout!=null){timer=setTimeout(()=>{if(timer==null){return}timer=null;this.off("block",listener);reject(makeError("timeout","TIMEOUT",{reason:"timeout"}))},timeout)}listener(await this.getBlockNumber())})}async waitForBlock(blockTag){assert$7(false,"not implemented yet","NOT_IMPLEMENTED",{operation:"waitForBlock"})}_clearTimeout(timerId){const timer=__privateGet(this,_timers).get(timerId);if(!timer){return}if(timer.timer){clearTimeout(timer.timer)}__privateGet(this,_timers).delete(timerId)}_setTimeout(_func,timeout){if(timeout==null){timeout=0}const timerId=__privateWrapper(this,_nextTimer)._++;const func=()=>{__privateGet(this,_timers).delete(timerId);_func()};if(this.paused){__privateGet(this,_timers).set(timerId,{timer:null,func:func,time:timeout})}else{const timer=setTimeout(func,timeout);__privateGet(this,_timers).set(timerId,{timer:timer,func:func,time:getTime()})}return timerId}_forEachSubscriber(func){for(const sub of __privateGet(this,_subs).values()){func(sub.subscriber)}}_getSubscriber(sub){switch(sub.type){case"debug":case"error":case"network":return new UnmanagedSubscriber(sub.type);case"block":{const subscriber=new PollingBlockSubscriber(this);subscriber.pollingInterval=this.pollingInterval;return subscriber}case"safe":case"finalized":return new PollingBlockTagSubscriber(this,sub.type);case"event":return new PollingEventSubscriber(this,sub.filter);case"transaction":return new PollingTransactionSubscriber(this,sub.hash);case"orphan":return new PollingOrphanSubscriber(this,sub.filter)}throw new Error(`unsupported event: ${sub.type}`)}_recoverSubscriber(oldSub,newSub){for(const sub of __privateGet(this,_subs).values()){if(sub.subscriber===oldSub){if(sub.started){sub.subscriber.stop()}sub.subscriber=newSub;if(sub.started){newSub.start()}if(__privateGet(this,_pausedState)!=null){newSub.pause(__privateGet(this,_pausedState))}break}}}async on(event,listener){const sub=await __privateMethod(this,_AbstractProvider_instances,getSub_fn).call(this,event);sub.listeners.push({listener:listener,once:false});if(!sub.started){sub.subscriber.start();sub.started=true;if(__privateGet(this,_pausedState)!=null){sub.subscriber.pause(__privateGet(this,_pausedState))}}return this}async once(event,listener){const sub=await __privateMethod(this,_AbstractProvider_instances,getSub_fn).call(this,event);sub.listeners.push({listener:listener,once:true});if(!sub.started){sub.subscriber.start();sub.started=true;if(__privateGet(this,_pausedState)!=null){sub.subscriber.pause(__privateGet(this,_pausedState))}}return this}async emit(event,...args){const sub=await __privateMethod(this,_AbstractProvider_instances,hasSub_fn).call(this,event,args);if(!sub||sub.listeners.length===0){return false}const count=sub.listeners.length;sub.listeners=sub.listeners.filter(({listener:listener,once:once})=>{const payload=new EventPayload(this,once?null:listener,event);try{listener.call(this,...args,payload)}catch(error){}return!once});if(sub.listeners.length===0){if(sub.started){sub.subscriber.stop()}__privateGet(this,_subs).delete(sub.tag)}return count>0}async listenerCount(event){if(event){const sub=await __privateMethod(this,_AbstractProvider_instances,hasSub_fn).call(this,event);if(!sub){return 0}return sub.listeners.length}let total=0;for(const{listeners:listeners}of __privateGet(this,_subs).values()){total+=listeners.length}return total}async listeners(event){if(event){const sub=await __privateMethod(this,_AbstractProvider_instances,hasSub_fn).call(this,event);if(!sub){return[]}return sub.listeners.map(({listener:listener})=>listener)}let result=[];for(const{listeners:listeners}of __privateGet(this,_subs).values()){result=result.concat(listeners.map(({listener:listener})=>listener))}return result}async off(event,listener){const sub=await __privateMethod(this,_AbstractProvider_instances,hasSub_fn).call(this,event);if(!sub){return this}if(listener){const index=sub.listeners.map(({listener:listener2})=>listener2).indexOf(listener);if(index>=0){sub.listeners.splice(index,1)}}if(!listener||sub.listeners.length===0){if(sub.started){sub.subscriber.stop()}__privateGet(this,_subs).delete(sub.tag)}return this}async removeAllListeners(event){if(event){const{tag:tag,started:started,subscriber:subscriber}=await __privateMethod(this,_AbstractProvider_instances,getSub_fn).call(this,event);if(started){subscriber.stop()}__privateGet(this,_subs).delete(tag)}else{for(const[tag,{started:started,subscriber:subscriber}]of __privateGet(this,_subs)){if(started){subscriber.stop()}__privateGet(this,_subs).delete(tag)}}return this}async addListener(event,listener){return await this.on(event,listener)}async removeListener(event,listener){return this.off(event,listener)}get destroyed(){return __privateGet(this,_destroyed)}destroy(){this.removeAllListeners();for(const timerId of __privateGet(this,_timers).keys()){this._clearTimeout(timerId)}__privateSet(this,_destroyed,true)}get paused(){return __privateGet(this,_pausedState)!=null}set paused(pause){if(!!pause===this.paused){return}if(this.paused){this.resume()}else{this.pause(false)}}pause(dropWhilePaused){__privateSet(this,_lastBlockNumber,-1);if(__privateGet(this,_pausedState)!=null){if(__privateGet(this,_pausedState)==!!dropWhilePaused){return}assert$7(false,"cannot change pause type; resume first","UNSUPPORTED_OPERATION",{operation:"pause"})}this._forEachSubscriber(s=>s.pause(dropWhilePaused));__privateSet(this,_pausedState,!!dropWhilePaused);for(const timer of __privateGet(this,_timers).values()){if(timer.timer){clearTimeout(timer.timer)}timer.time=getTime()-timer.time}}resume(){if(__privateGet(this,_pausedState)==null){return}this._forEachSubscriber(s=>s.resume());__privateSet(this,_pausedState,null);for(const timer of __privateGet(this,_timers).values()){let timeout=timer.time;if(timeout<0){timeout=0}timer.time=getTime();setTimeout(timer.func,timeout)}}},_subs=new WeakMap,_plugins2=new WeakMap,_pausedState=new WeakMap,_destroyed=new WeakMap,_networkPromise=new WeakMap,_anyNetwork=new WeakMap,_performCache=new WeakMap,_lastBlockNumber=new WeakMap,_nextTimer=new WeakMap,_timers=new WeakMap,_disableCcipRead=new WeakMap,_options2=new WeakMap,_AbstractProvider_instances=new WeakSet,perform_fn=async function(req){const timeout=__privateGet(this,_options2).cacheTimeout;if(timeout<0){return await this._perform(req)}const tag=getTag$1(req.method,req);let perform=__privateGet(this,_performCache).get(tag);if(!perform){perform=this._perform(req);__privateGet(this,_performCache).set(tag,perform);setTimeout(()=>{if(__privateGet(this,_performCache).get(tag)===perform){__privateGet(this,_performCache).delete(tag)}},timeout)}return await perform},call_fn=async function(tx,blockTag,attempt){assert$7(attempt<MAX_CCIP_REDIRECTS,"CCIP read exceeded maximum redirections","OFFCHAIN_FAULT",{reason:"TOO_MANY_REDIRECTS",transaction:Object.assign({},tx,{blockTag:blockTag,enableCcipRead:true})});const transaction=copyRequest(tx);try{return hexlify$2(await this._perform({method:"call",transaction:transaction,blockTag:blockTag}))}catch(error){if(!this.disableCcipRead&&isCallException(error)&&error.data&&attempt>=0&&blockTag==="latest"&&transaction.to!=null&&dataSlice(error.data,0,4)==="0x556f1830"){const data=error.data;const txSender=await resolveAddress(transaction.to,this);let ccipArgs;try{ccipArgs=parseOffchainLookup(dataSlice(error.data,4))}catch(error2){assert$7(false,error2.message,"OFFCHAIN_FAULT",{reason:"BAD_DATA",transaction:transaction,info:{data:data}})}assert$7(ccipArgs.sender.toLowerCase()===txSender.toLowerCase(),"CCIP Read sender mismatch","CALL_EXCEPTION",{action:"call",data:data,reason:"OffchainLookup",transaction:transaction,invocation:null,revert:{signature:"OffchainLookup(address,string[],bytes,bytes4,bytes)",name:"OffchainLookup",args:ccipArgs.errorArgs}});const ccipResult=await this.ccipReadFetch(transaction,ccipArgs.calldata,ccipArgs.urls);assert$7(ccipResult!=null,"CCIP Read failed to fetch data","OFFCHAIN_FAULT",{reason:"FETCH_FAILED",transaction:transaction,info:{data:error.data,errorArgs:ccipArgs.errorArgs}});const tx2={to:txSender,data:concat$2([ccipArgs.selector,encodeBytes([ccipResult,ccipArgs.extraData])])};this.emit("debug",{action:"sendCcipReadCall",transaction:tx2});try{const result=await __privateMethod(this,_AbstractProvider_instances,call_fn).call(this,tx2,blockTag,attempt+1);this.emit("debug",{action:"receiveCcipReadCallResult",transaction:Object.assign({},tx2),result:result});return result}catch(error2){this.emit("debug",{action:"receiveCcipReadCallError",transaction:Object.assign({},tx2),error:error2});throw error2}}throw error}},checkNetwork_fn=async function(promise){const{value:value}=await resolveProperties$2({network:this.getNetwork(),value:promise});return value},getAccountValue_fn=async function(request,_address,_blockTag){let address=this._getAddress(_address);let blockTag=this._getBlockTag(_blockTag);if(typeof address!=="string"||typeof blockTag!=="string"){[address,blockTag]=await Promise.all([address,blockTag])}return await __privateMethod(this,_AbstractProvider_instances,checkNetwork_fn).call(this,__privateMethod(this,_AbstractProvider_instances,perform_fn).call(this,Object.assign(request,{address:address,blockTag:blockTag})))},getBlock_fn=async function(block,includeTransactions){if(isHexString$2(block,32)){return await __privateMethod(this,_AbstractProvider_instances,perform_fn).call(this,{method:"getBlock",blockHash:block,includeTransactions:includeTransactions})}let blockTag=this._getBlockTag(block);if(typeof blockTag!=="string"){blockTag=await blockTag}return await __privateMethod(this,_AbstractProvider_instances,perform_fn).call(this,{method:"getBlock",blockTag:blockTag,includeTransactions:includeTransactions})},hasSub_fn=async function(event,emitArgs){let sub=await getSubscription(event,this);if(sub.type==="event"&&emitArgs&&emitArgs.length>0&&emitArgs[0].removed===true){sub=await getSubscription({orphan:"drop-log",log:emitArgs[0]},this)}return __privateGet(this,_subs).get(sub.tag)||null},getSub_fn=async function(event){const subscription=await getSubscription(event,this);const tag=subscription.tag;let sub=__privateGet(this,_subs).get(tag);if(!sub){const subscriber=this._getSubscriber(subscription);const addressableMap=new WeakMap;const nameMap=new Map;sub={subscriber:subscriber,tag:tag,addressableMap:addressableMap,nameMap:nameMap,started:false,listeners:[]};__privateGet(this,_subs).set(tag,sub)}return sub},_g);function _parseString(result,start){try{const bytes2=_parseBytes(result,start);if(bytes2){return toUtf8String$1(bytes2)}}catch(error){}return null}function _parseBytes(result,start){if(result==="0x"){return null}try{const offset=getNumber(dataSlice(result,start,start+32));const length=getNumber(dataSlice(result,offset,offset+32));return dataSlice(result,offset+32,offset+32+length)}catch(error){}return null}function numPad(value){const result=toBeArray(value);if(result.length>32){throw new Error("internal; should not happen")}const padded=new Uint8Array(32);padded.set(result,32-result.length);return padded}function bytesPad(value){if(value.length%32===0){return value}const result=new Uint8Array(Math.ceil(value.length/32)*32);result.set(value);return result}const empty=new Uint8Array([]);function encodeBytes(datas){const result=[];let byteCount=0;for(let i=0;i<datas.length;i++){result.push(empty);byteCount+=32}for(let i=0;i<datas.length;i++){const data=getBytes(datas[i]);result[i]=numPad(byteCount);result.push(numPad(data.length));result.push(bytesPad(data));byteCount+=32+Math.ceil(data.length/32)*32}return concat$2(result)}const zeros$1="0x0000000000000000000000000000000000000000000000000000000000000000";function parseOffchainLookup(data){const result={sender:"",urls:[],calldata:"",selector:"",extraData:"",errorArgs:[]};assert$7(dataLength(data)>=5*32,"insufficient OffchainLookup data","OFFCHAIN_FAULT",{reason:"insufficient OffchainLookup data"});const sender=dataSlice(data,0,32);assert$7(dataSlice(sender,0,12)===dataSlice(zeros$1,0,12),"corrupt OffchainLookup sender","OFFCHAIN_FAULT",{reason:"corrupt OffchainLookup sender"});result.sender=dataSlice(sender,12);try{const urls=[];const urlsOffset=getNumber(dataSlice(data,32,64));const urlsLength=getNumber(dataSlice(data,urlsOffset,urlsOffset+32));const urlsData=dataSlice(data,urlsOffset+32);for(let u=0;u<urlsLength;u++){const url=_parseString(urlsData,u*32);if(url==null){throw new Error("abort")}urls.push(url)}result.urls=urls}catch(error){assert$7(false,"corrupt OffchainLookup urls","OFFCHAIN_FAULT",{reason:"corrupt OffchainLookup urls"})}try{const calldata=_parseBytes(data,64);if(calldata==null){throw new Error("abort")}result.calldata=calldata}catch(error){assert$7(false,"corrupt OffchainLookup calldata","OFFCHAIN_FAULT",{reason:"corrupt OffchainLookup calldata"})}assert$7(dataSlice(data,100,128)===dataSlice(zeros$1,0,28),"corrupt OffchainLookup callbaackSelector","OFFCHAIN_FAULT",{reason:"corrupt OffchainLookup callbaackSelector"});result.selector=dataSlice(data,96,100);try{const extraData=_parseBytes(data,128);if(extraData==null){throw new Error("abort")}result.extraData=extraData}catch(error){assert$7(false,"corrupt OffchainLookup extraData","OFFCHAIN_FAULT",{reason:"corrupt OffchainLookup extraData"})}result.errorArgs="sender,urls,calldata,selector,extraData".split(/,/).map(k=>result[k]);return result}function checkProvider(signer,operation){if(signer.provider){return signer.provider}assert$7(false,"missing provider","UNSUPPORTED_OPERATION",{operation:operation})}async function populate(signer,tx){let pop=copyRequest(tx);if(pop.to!=null){pop.to=resolveAddress(pop.to,signer)}if(pop.from!=null){const from=pop.from;pop.from=Promise.all([signer.getAddress(),resolveAddress(from,signer)]).then(([address,from2])=>{assertArgument(address.toLowerCase()===from2.toLowerCase(),"transaction from mismatch","tx.from",from2);return address})}else{pop.from=signer.getAddress()}return await resolveProperties$2(pop)}class AbstractSigner{constructor(provider){__publicField(this,"provider");defineProperties(this,{provider:provider||null})}async getNonce(blockTag){return checkProvider(this,"getTransactionCount").getTransactionCount(await this.getAddress(),blockTag)}async populateCall(tx){const pop=await populate(this,tx);return pop}async populateTransaction(tx){const provider=checkProvider(this,"populateTransaction");const pop=await populate(this,tx);if(pop.nonce==null){pop.nonce=await this.getNonce("pending")}if(pop.gasLimit==null){pop.gasLimit=await this.estimateGas(pop)}const network=await this.provider.getNetwork();if(pop.chainId!=null){const chainId=getBigInt(pop.chainId);assertArgument(chainId===network.chainId,"transaction chainId mismatch","tx.chainId",tx.chainId)}else{pop.chainId=network.chainId}const hasEip1559=pop.maxFeePerGas!=null||pop.maxPriorityFeePerGas!=null;if(pop.gasPrice!=null&&(pop.type===2||hasEip1559)){assertArgument(false,"eip-1559 transaction do not support gasPrice","tx",tx)}else if((pop.type===0||pop.type===1)&&hasEip1559){assertArgument(false,"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas","tx",tx)}if((pop.type===2||pop.type==null)&&(pop.maxFeePerGas!=null&&pop.maxPriorityFeePerGas!=null)){pop.type=2}else if(pop.type===0||pop.type===1){const feeData=await provider.getFeeData();assert$7(feeData.gasPrice!=null,"network does not support gasPrice","UNSUPPORTED_OPERATION",{operation:"getGasPrice"});if(pop.gasPrice==null){pop.gasPrice=feeData.gasPrice}}else{const feeData=await provider.getFeeData();if(pop.type==null){if(feeData.maxFeePerGas!=null&&feeData.maxPriorityFeePerGas!=null){if(pop.authorizationList&&pop.authorizationList.length){pop.type=4}else{pop.type=2}if(pop.gasPrice!=null){const gasPrice=pop.gasPrice;delete pop.gasPrice;pop.maxFeePerGas=gasPrice;pop.maxPriorityFeePerGas=gasPrice}else{if(pop.maxFeePerGas==null){pop.maxFeePerGas=feeData.maxFeePerGas}if(pop.maxPriorityFeePerGas==null){pop.maxPriorityFeePerGas=feeData.maxPriorityFeePerGas}}}else if(feeData.gasPrice!=null){assert$7(!hasEip1559,"network does not support EIP-1559","UNSUPPORTED_OPERATION",{operation:"populateTransaction"});if(pop.gasPrice==null){pop.gasPrice=feeData.gasPrice}pop.type=0}else{assert$7(false,"failed to get consistent fee data","UNSUPPORTED_OPERATION",{operation:"signer.getFeeData"})}}else if(pop.type===2||pop.type===3||pop.type===4){if(pop.maxFeePerGas==null){pop.maxFeePerGas=feeData.maxFeePerGas}if(pop.maxPriorityFeePerGas==null){pop.maxPriorityFeePerGas=feeData.maxPriorityFeePerGas}}}return await resolveProperties$2(pop)}async populateAuthorization(_auth){const auth=Object.assign({},_auth);if(auth.chainId==null){auth.chainId=(await checkProvider(this,"getNetwork").getNetwork()).chainId}if(auth.nonce==null){auth.nonce=await this.getNonce()}return auth}async estimateGas(tx){return checkProvider(this,"estimateGas").estimateGas(await this.populateCall(tx))}async call(tx){return checkProvider(this,"call").call(await this.populateCall(tx))}async resolveName(name){const provider=checkProvider(this,"resolveName");return await provider.resolveName(name)}async sendTransaction(tx){const provider=checkProvider(this,"sendTransaction");const pop=await this.populateTransaction(tx);delete pop.from;const txObj=Transaction.from(pop);return await provider.broadcastTransaction(await this.signTransaction(txObj))}authorize(authorization){assert$7(false,"authorization not implemented for this signer","UNSUPPORTED_OPERATION",{operation:"authorize"})}}const _VoidSigner=class _VoidSigner extends AbstractSigner{constructor(address,provider){super(provider);__privateAdd(this,_VoidSigner_instances);__publicField(this,"address");defineProperties(this,{address:address})}async getAddress(){return this.address}connect(provider){return new _VoidSigner(this.address,provider)}async signTransaction(tx){__privateMethod(this,_VoidSigner_instances,throwUnsupported_fn).call(this,"transactions","signTransaction")}async signMessage(message){__privateMethod(this,_VoidSigner_instances,throwUnsupported_fn).call(this,"messages","signMessage")}async signTypedData(domain,types,value){__privateMethod(this,_VoidSigner_instances,throwUnsupported_fn).call(this,"typed-data","signTypedData")}};_VoidSigner_instances=new WeakSet;throwUnsupported_fn=function(suffix,operation){assert$7(false,`VoidSigner cannot sign ${suffix}`,"UNSUPPORTED_OPERATION",{operation:operation})};let VoidSigner=_VoidSigner;function copy(obj){return JSON.parse(JSON.stringify(obj))}class FilterIdSubscriber{constructor(provider){__privateAdd(this,_FilterIdSubscriber_instances);__privateAdd(this,_provider4);__privateAdd(this,_filterIdPromise);__privateAdd(this,_poller3);__privateAdd(this,_running3);__privateAdd(this,_network);__privateAdd(this,_hault);__privateSet(this,_provider4,provider);__privateSet(this,_filterIdPromise,null);__privateSet(this,_poller3,__privateMethod(this,_FilterIdSubscriber_instances,poll_fn3).bind(this));__privateSet(this,_running3,false);__privateSet(this,_network,null);__privateSet(this,_hault,false)}_subscribe(provider){throw new Error("subclasses must override this")}_emitResults(provider,result){throw new Error("subclasses must override this")}_recover(provider){throw new Error("subclasses must override this")}start(){if(__privateGet(this,_running3)){return}__privateSet(this,_running3,true);__privateMethod(this,_FilterIdSubscriber_instances,poll_fn3).call(this,-2)}stop(){if(!__privateGet(this,_running3)){return}__privateSet(this,_running3,false);__privateSet(this,_hault,true);__privateMethod(this,_FilterIdSubscriber_instances,teardown_fn).call(this);__privateGet(this,_provider4).off("block",__privateGet(this,_poller3))}pause(dropWhilePaused){if(dropWhilePaused){__privateMethod(this,_FilterIdSubscriber_instances,teardown_fn).call(this)}__privateGet(this,_provider4).off("block",__privateGet(this,_poller3))}resume(){this.start()}}_provider4=new WeakMap;_filterIdPromise=new WeakMap;_poller3=new WeakMap;_running3=new WeakMap;_network=new WeakMap;_hault=new WeakMap;_FilterIdSubscriber_instances=new WeakSet;poll_fn3=async function(blockNumber){try{if(__privateGet(this,_filterIdPromise)==null){__privateSet(this,_filterIdPromise,this._subscribe(__privateGet(this,_provider4)))}let filterId=null;try{filterId=await __privateGet(this,_filterIdPromise)}catch(error){if(!isError(error,"UNSUPPORTED_OPERATION")||error.operation!=="eth_newFilter"){throw error}}if(filterId==null){__privateSet(this,_filterIdPromise,null);__privateGet(this,_provider4)._recoverSubscriber(this,this._recover(__privateGet(this,_provider4)));return}const network=await __privateGet(this,_provider4).getNetwork();if(!__privateGet(this,_network)){__privateSet(this,_network,network)}if(__privateGet(this,_network).chainId!==network.chainId){throw new Error("chaid changed")}if(__privateGet(this,_hault)){return}const result=await __privateGet(this,_provider4).send("eth_getFilterChanges",[filterId]);await this._emitResults(__privateGet(this,_provider4),result)}catch(error){console.log("@TODO",error)}__privateGet(this,_provider4).once("block",__privateGet(this,_poller3))};teardown_fn=function(){const filterIdPromise=__privateGet(this,_filterIdPromise);if(filterIdPromise){__privateSet(this,_filterIdPromise,null);filterIdPromise.then(filterId=>{if(__privateGet(this,_provider4).destroyed){return}__privateGet(this,_provider4).send("eth_uninstallFilter",[filterId])})}};class FilterIdEventSubscriber extends FilterIdSubscriber{constructor(provider,filter2){super(provider);__privateAdd(this,_event);__privateSet(this,_event,copy(filter2))}_recover(provider){return new PollingEventSubscriber(provider,__privateGet(this,_event))}async _subscribe(provider){const filterId=await provider.send("eth_newFilter",[__privateGet(this,_event)]);return filterId}async _emitResults(provider,results){for(const result of results){provider.emit(__privateGet(this,_event),provider._wrapLog(result,provider._network))}}}_event=new WeakMap;class FilterIdPendingSubscriber extends FilterIdSubscriber{async _subscribe(provider){return await provider.send("eth_newPendingTransactionFilter",[])}async _emitResults(provider,results){for(const result of results){provider.emit("pending",result)}}}const Primitive="bigint,boolean,function,number,string,symbol".split(/,/g);function deepCopy$2(value){if(value==null||Primitive.indexOf(typeof value)>=0){return value}if(typeof value.getAddress==="function"){return value}if(Array.isArray(value)){return value.map(deepCopy$2)}if(typeof value==="object"){return Object.keys(value).reduce((accum,key2)=>{accum[key2]=value[key2];return accum},{})}throw new Error(`should not happen: ${value} (${typeof value})`)}function stall$2(duration){return new Promise(resolve=>{setTimeout(resolve,duration)})}function getLowerCase(value){if(value){return value.toLowerCase()}return value}function isPollable(value){return value&&typeof value.pollingInterval==="number"}const defaultOptions={polling:false,staticNetwork:null,batchStallTime:10,batchMaxSize:1<<20,batchMaxCount:100,cacheTimeout:250,pollingInterval:4e3};class JsonRpcSigner extends AbstractSigner{constructor(provider,address){super(provider);__publicField(this,"address");address=getAddress$2(address);defineProperties(this,{address:address})}connect(provider){assert$7(false,"cannot reconnect JsonRpcSigner","UNSUPPORTED_OPERATION",{operation:"signer.connect"})}async getAddress(){return this.address}async populateTransaction(tx){return await this.populateCall(tx)}async sendUncheckedTransaction(_tx){const tx=deepCopy$2(_tx);const promises=[];if(tx.from){const _from=tx.from;promises.push((async()=>{const from=await resolveAddress(_from,this.provider);assertArgument(from!=null&&from.toLowerCase()===this.address.toLowerCase(),"from address mismatch","transaction",_tx);tx.from=from})())}else{tx.from=this.address}if(tx.gasLimit==null){promises.push((async()=>{tx.gasLimit=await this.provider.estimateGas({...tx,from:this.address})})())}if(tx.to!=null){const _to2=tx.to;promises.push((async()=>{tx.to=await resolveAddress(_to2,this.provider)})())}if(promises.length){await Promise.all(promises)}const hexTx=this.provider.getRpcTransaction(tx);return this.provider.send("eth_sendTransaction",[hexTx])}async sendTransaction(tx){const blockNumber=await this.provider.getBlockNumber();const hash2=await this.sendUncheckedTransaction(tx);return await new Promise((resolve,reject)=>{const timeouts=[1e3,100];let invalids=0;const checkTx=async()=>{try{const tx2=await this.provider.getTransaction(hash2);if(tx2!=null){resolve(tx2.replaceableTransaction(blockNumber));return}}catch(error){if(isError(error,"CANCELLED")||isError(error,"BAD_DATA")||isError(error,"NETWORK_ERROR")||isError(error,"UNSUPPORTED_OPERATION")){if(error.info==null){error.info={}}error.info.sendTransactionHash=hash2;reject(error);return}if(isError(error,"INVALID_ARGUMENT")){invalids++;if(error.info==null){error.info={}}error.info.sendTransactionHash=hash2;if(invalids>10){reject(error);return}}this.provider.emit("error",makeError("failed to fetch transation after sending (will try again)","UNKNOWN_ERROR",{error:error}))}this.provider._setTimeout(()=>{checkTx()},timeouts.pop()||4e3)};checkTx()})}async signTransaction(_tx){const tx=deepCopy$2(_tx);if(tx.from){const from=await resolveAddress(tx.from,this.provider);assertArgument(from!=null&&from.toLowerCase()===this.address.toLowerCase(),"from address mismatch","transaction",_tx);tx.from=from}else{tx.from=this.address}const hexTx=this.provider.getRpcTransaction(tx);return await this.provider.send("eth_signTransaction",[hexTx])}async signMessage(_message){const message=typeof _message==="string"?toUtf8Bytes$1(_message):_message;return await this.provider.send("personal_sign",[hexlify$2(message),this.address.toLowerCase()])}async signTypedData(domain,types,_value2){const value=deepCopy$2(_value2);const populated=await TypedDataEncoder$1.resolveNames(domain,types,value,async value2=>{const address=await resolveAddress(value2);assertArgument(address!=null,"TypedData does not support null address","value",value2);return address});return await this.provider.send("eth_signTypedData_v4",[this.address.toLowerCase(),JSON.stringify(TypedDataEncoder$1.getPayload(populated.domain,types,populated.value))])}async unlock(password){return this.provider.send("personal_unlockAccount",[this.address.toLowerCase(),password,null])}async _legacySignMessage(_message){const message=typeof _message==="string"?toUtf8Bytes$1(_message):_message;return await this.provider.send("eth_sign",[this.address.toLowerCase(),hexlify$2(message)])}}class JsonRpcApiProvider extends AbstractProvider$1{constructor(network,options){super(network,options);__privateAdd(this,_JsonRpcApiProvider_instances);__privateAdd(this,_options3);__privateAdd(this,_nextId);__privateAdd(this,_payloads);__privateAdd(this,_drainTimer);__privateAdd(this,_notReady);__privateAdd(this,_network2);__privateAdd(this,_pendingDetectNetwork);__privateSet(this,_nextId,1);__privateSet(this,_options3,Object.assign({},defaultOptions,options||{}));__privateSet(this,_payloads,[]);__privateSet(this,_drainTimer,null);__privateSet(this,_network2,null);__privateSet(this,_pendingDetectNetwork,null);{let resolve=null;const promise=new Promise(_resolve=>{resolve=_resolve});__privateSet(this,_notReady,{promise:promise,resolve:resolve})}const staticNetwork=this._getOption("staticNetwork");if(typeof staticNetwork==="boolean"){assertArgument(!staticNetwork||network!=="any","staticNetwork cannot be used on special network 'any'","options",options);if(staticNetwork&&network!=null){__privateSet(this,_network2,Network$1.from(network))}}else if(staticNetwork){assertArgument(network==null||staticNetwork.matches(network),"staticNetwork MUST match network object","options",options);__privateSet(this,_network2,staticNetwork)}}_getOption(key2){return __privateGet(this,_options3)[key2]}get _network(){assert$7(__privateGet(this,_network2),"network is not available yet","NETWORK_ERROR");return __privateGet(this,_network2)}async _perform(req){if(req.method==="call"||req.method==="estimateGas"){let tx=req.transaction;if(tx&&tx.type!=null&&getBigInt(tx.type)){if(tx.maxFeePerGas==null&&tx.maxPriorityFeePerGas==null){const feeData=await this.getFeeData();if(feeData.maxFeePerGas==null&&feeData.maxPriorityFeePerGas==null){req=Object.assign({},req,{transaction:Object.assign({},tx,{type:void 0})})}}}}const request=this.getRpcRequest(req);if(request!=null){return await this.send(request.method,request.args)}return super._perform(req)}async _detectNetwork(){const network=this._getOption("staticNetwork");if(network){if(network===true){if(__privateGet(this,_network2)){return __privateGet(this,_network2)}}else{return network}}if(__privateGet(this,_pendingDetectNetwork)){return await __privateGet(this,_pendingDetectNetwork)}if(this.ready){__privateSet(this,_pendingDetectNetwork,(async()=>{try{const result=Network$1.from(getBigInt(await this.send("eth_chainId",[])));__privateSet(this,_pendingDetectNetwork,null);return result}catch(error){__privateSet(this,_pendingDetectNetwork,null);throw error}})());return await __privateGet(this,_pendingDetectNetwork)}__privateSet(this,_pendingDetectNetwork,(async()=>{const payload={id:__privateWrapper(this,_nextId)._++,method:"eth_chainId",params:[],jsonrpc:"2.0"};this.emit("debug",{action:"sendRpcPayload",payload:payload});let result;try{result=(await this._send(payload))[0];__privateSet(this,_pendingDetectNetwork,null)}catch(error){__privateSet(this,_pendingDetectNetwork,null);this.emit("debug",{action:"receiveRpcError",error:error});throw error}this.emit("debug",{action:"receiveRpcResult",result:result});if("result"in result){return Network$1.from(getBigInt(result.result))}throw this.getRpcError(payload,result)})());return await __privateGet(this,_pendingDetectNetwork)}_start(){if(__privateGet(this,_notReady)==null||__privateGet(this,_notReady).resolve==null){return}__privateGet(this,_notReady).resolve();__privateSet(this,_notReady,null);(async()=>{while(__privateGet(this,_network2)==null&&!this.destroyed){try{__privateSet(this,_network2,await this._detectNetwork())}catch(error){if(this.destroyed){break}console.log("JsonRpcProvider failed to detect network and cannot start up; retry in 1s (perhaps the URL is wrong or the node is not started)");this.emit("error",makeError("failed to bootstrap network detection","NETWORK_ERROR",{event:"initial-network-discovery",info:{error:error}}));await stall$2(1e3)}}__privateMethod(this,_JsonRpcApiProvider_instances,scheduleDrain_fn).call(this)})()}async _waitUntilReady(){if(__privateGet(this,_notReady)==null){return}return await __privateGet(this,_notReady).promise}_getSubscriber(sub){if(sub.type==="pending"){return new FilterIdPendingSubscriber(this)}if(sub.type==="event"){if(this._getOption("polling")){return new PollingEventSubscriber(this,sub.filter)}return new FilterIdEventSubscriber(this,sub.filter)}if(sub.type==="orphan"&&sub.filter.orphan==="drop-log"){return new UnmanagedSubscriber("orphan")}return super._getSubscriber(sub)}get ready(){return __privateGet(this,_notReady)==null}getRpcTransaction(tx){const result={};["chainId","gasLimit","gasPrice","type","maxFeePerGas","maxPriorityFeePerGas","nonce","value"].forEach(key2=>{if(tx[key2]==null){return}let dstKey=key2;if(key2==="gasLimit"){dstKey="gas"}result[dstKey]=toQuantity(getBigInt(tx[key2],`tx.${key2}`))});["from","to","data"].forEach(key2=>{if(tx[key2]==null){return}result[key2]=hexlify$2(tx[key2])});if(tx.accessList){result["accessList"]=accessListify$1(tx.accessList)}if(tx.blobVersionedHashes){result["blobVersionedHashes"]=tx.blobVersionedHashes.map(h=>h.toLowerCase())}if(tx.authorizationList){result["authorizationList"]=tx.authorizationList.map(_a2=>{const a=authorizationify(_a2);return{address:a.address,nonce:toQuantity(a.nonce),chainId:toQuantity(a.chainId),yParity:toQuantity(a.signature.yParity),r:toQuantity(a.signature.r),s:toQuantity(a.signature.s)}})}return result}getRpcRequest(req){switch(req.method){case"chainId":return{method:"eth_chainId",args:[]};case"getBlockNumber":return{method:"eth_blockNumber",args:[]};case"getGasPrice":return{method:"eth_gasPrice",args:[]};case"getPriorityFee":return{method:"eth_maxPriorityFeePerGas",args:[]};case"getBalance":return{method:"eth_getBalance",args:[getLowerCase(req.address),req.blockTag]};case"getTransactionCount":return{method:"eth_getTransactionCount",args:[getLowerCase(req.address),req.blockTag]};case"getCode":return{method:"eth_getCode",args:[getLowerCase(req.address),req.blockTag]};case"getStorage":return{method:"eth_getStorageAt",args:[getLowerCase(req.address),"0x"+req.position.toString(16),req.blockTag]};case"broadcastTransaction":return{method:"eth_sendRawTransaction",args:[req.signedTransaction]};case"getBlock":if("blockTag"in req){return{method:"eth_getBlockByNumber",args:[req.blockTag,!!req.includeTransactions]}}else if("blockHash"in req){return{method:"eth_getBlockByHash",args:[req.blockHash,!!req.includeTransactions]}}break;case"getTransaction":return{method:"eth_getTransactionByHash",args:[req.hash]};case"getTransactionReceipt":return{method:"eth_getTransactionReceipt",args:[req.hash]};case"call":return{method:"eth_call",args:[this.getRpcTransaction(req.transaction),req.blockTag]};case"estimateGas":{return{method:"eth_estimateGas",args:[this.getRpcTransaction(req.transaction)]}}case"getLogs":if(req.filter&&req.filter.address!=null){if(Array.isArray(req.filter.address)){req.filter.address=req.filter.address.map(getLowerCase)}else{req.filter.address=getLowerCase(req.filter.address)}}return{method:"eth_getLogs",args:[req.filter]}}return null}getRpcError(payload,_error2){const{method:method}=payload;const{error:error}=_error2;if(method==="eth_estimateGas"&&error.message){const msg=error.message;if(!msg.match(/revert/i)&&msg.match(/insufficient funds/i)){return makeError("insufficient funds","INSUFFICIENT_FUNDS",{transaction:payload.params[0],info:{payload:payload,error:error}})}else if(msg.match(/nonce/i)&&msg.match(/too low/i)){return makeError("nonce has already been used","NONCE_EXPIRED",{transaction:payload.params[0],info:{payload:payload,error:error}})}}if(method==="eth_call"||method==="eth_estimateGas"){const result=spelunkData(error);const e=AbiCoder.getBuiltinCallException(method==="eth_call"?"call":"estimateGas",payload.params[0],result?result.data:null);e.info={error:error,payload:payload};return e}const message=JSON.stringify(spelunkMessage(error));if(typeof error.message==="string"&&error.message.match(/user denied|ethers-user-denied/i)){const actionMap={eth_sign:"signMessage",personal_sign:"signMessage",eth_signTypedData_v4:"signTypedData",eth_signTransaction:"signTransaction",eth_sendTransaction:"sendTransaction",eth_requestAccounts:"requestAccess",wallet_requestAccounts:"requestAccess"};return makeError(`user rejected action`,"ACTION_REJECTED",{action:actionMap[method]||"unknown",reason:"rejected",info:{payload:payload,error:error}})}if(method==="eth_sendRawTransaction"||method==="eth_sendTransaction"){const transaction=payload.params[0];if(message.match(/insufficient funds|base fee exceeds gas limit/i)){return makeError("insufficient funds for intrinsic transaction cost","INSUFFICIENT_FUNDS",{transaction:transaction,info:{error:error}})}if(message.match(/nonce/i)&&message.match(/too low/i)){return makeError("nonce has already been used","NONCE_EXPIRED",{transaction:transaction,info:{error:error}})}if(message.match(/replacement transaction/i)&&message.match(/underpriced/i)){return makeError("replacement fee too low","REPLACEMENT_UNDERPRICED",{transaction:transaction,info:{error:error}})}if(message.match(/only replay-protected/i)){return makeError("legacy pre-eip-155 transactions not supported","UNSUPPORTED_OPERATION",{operation:method,info:{transaction:transaction,info:{error:error}}})}}let unsupported=!!message.match(/the method .* does not exist/i);if(!unsupported){if(error&&error.details&&error.details.startsWith("Unauthorized method:")){unsupported=true}}if(unsupported){return makeError("unsupported operation","UNSUPPORTED_OPERATION",{operation:payload.method,info:{error:error,payload:payload}})}return makeError("could not coalesce error","UNKNOWN_ERROR",{error:error,payload:payload})}send(method,params){if(this.destroyed){return Promise.reject(makeError("provider destroyed; cancelled request","UNSUPPORTED_OPERATION",{operation:method}))}const id2=__privateWrapper(this,_nextId)._++;const promise=new Promise((resolve,reject)=>{__privateGet(this,_payloads).push({resolve:resolve,reject:reject,payload:{method:method,params:params,id:id2,jsonrpc:"2.0"}})});__privateMethod(this,_JsonRpcApiProvider_instances,scheduleDrain_fn).call(this);return promise}async getSigner(address){if(address==null){address=0}const accountsPromise=this.send("eth_accounts",[]);if(typeof address==="number"){const accounts2=await accountsPromise;if(address>=accounts2.length){throw new Error("no such account")}return new JsonRpcSigner(this,accounts2[address])}const{accounts:accounts}=await resolveProperties$2({network:this.getNetwork(),accounts:accountsPromise});address=getAddress$2(address);for(const account of accounts){if(getAddress$2(account)===address){return new JsonRpcSigner(this,address)}}throw new Error("invalid account")}async listAccounts(){const accounts=await this.send("eth_accounts",[]);return accounts.map(a=>new JsonRpcSigner(this,a))}destroy(){if(__privateGet(this,_drainTimer)){clearTimeout(__privateGet(this,_drainTimer));__privateSet(this,_drainTimer,null)}for(const{payload:payload,reject:reject}of __privateGet(this,_payloads)){reject(makeError("provider destroyed; cancelled request","UNSUPPORTED_OPERATION",{operation:payload.method}))}__privateSet(this,_payloads,[]);super.destroy()}}_options3=new WeakMap;_nextId=new WeakMap;_payloads=new WeakMap;_drainTimer=new WeakMap;_notReady=new WeakMap;_network2=new WeakMap;_pendingDetectNetwork=new WeakMap;_JsonRpcApiProvider_instances=new WeakSet;scheduleDrain_fn=function(){if(__privateGet(this,_drainTimer)){return}const stallTime=this._getOption("batchMaxCount")===1?0:this._getOption("batchStallTime");__privateSet(this,_drainTimer,setTimeout(()=>{__privateSet(this,_drainTimer,null);const payloads=__privateGet(this,_payloads);__privateSet(this,_payloads,[]);while(payloads.length){const batch=[payloads.shift()];while(payloads.length){if(batch.length===__privateGet(this,_options3).batchMaxCount){break}batch.push(payloads.shift());const bytes2=JSON.stringify(batch.map(p=>p.payload));if(bytes2.length>__privateGet(this,_options3).batchMaxSize){payloads.unshift(batch.pop());break}}(async()=>{const payload=batch.length===1?batch[0].payload:batch.map(p=>p.payload);this.emit("debug",{action:"sendRpcPayload",payload:payload});try{const result=await this._send(payload);this.emit("debug",{action:"receiveRpcResult",result:result});for(const{resolve:resolve,reject:reject,payload:payload2}of batch){if(this.destroyed){reject(makeError("provider destroyed; cancelled request","UNSUPPORTED_OPERATION",{operation:payload2.method}));continue}const resp=result.filter(r=>r.id===payload2.id)[0];if(resp==null){const error=makeError("missing response for request","BAD_DATA",{value:result,info:{payload:payload2}});this.emit("error",error);reject(error);continue}if("error"in resp){reject(this.getRpcError(payload2,resp));continue}resolve(resp.result)}}catch(error){this.emit("debug",{action:"receiveRpcError",error:error});for(const{reject:reject}of batch){reject(error)}}})()}},stallTime))};class JsonRpcApiPollingProvider extends JsonRpcApiProvider{constructor(network,options){super(network,options);__privateAdd(this,_pollingInterval);let pollingInterval=this._getOption("pollingInterval");if(pollingInterval==null){pollingInterval=defaultOptions.pollingInterval}__privateSet(this,_pollingInterval,pollingInterval)}_getSubscriber(sub){const subscriber=super._getSubscriber(sub);if(isPollable(subscriber)){subscriber.pollingInterval=__privateGet(this,_pollingInterval)}return subscriber}get pollingInterval(){return __privateGet(this,_pollingInterval)}set pollingInterval(value){if(!Number.isInteger(value)||value<0){throw new Error("invalid interval")}__privateSet(this,_pollingInterval,value);this._forEachSubscriber(sub=>{if(isPollable(sub)){sub.pollingInterval=__privateGet(this,_pollingInterval)}})}}_pollingInterval=new WeakMap;class JsonRpcProvider extends JsonRpcApiPollingProvider{constructor(url,network,options){if(url==null){url="http://localhost:8545"}super(network,options);__privateAdd(this,_connect);if(typeof url==="string"){__privateSet(this,_connect,new FetchRequest(url))}else{__privateSet(this,_connect,url.clone())}}_getConnection(){return __privateGet(this,_connect).clone()}async send(method,params){await this._start();return await super.send(method,params)}async _send(payload){const request=this._getConnection();request.body=JSON.stringify(payload);request.setHeader("content-type","application/json");const response=await request.send();response.assertOk();let resp=response.bodyJson;if(!Array.isArray(resp)){resp=[resp]}return resp}}_connect=new WeakMap;function spelunkData(value){if(value==null){return null}if(typeof value.message==="string"&&value.message.match(/revert/i)&&isHexString$2(value.data)){return{message:value.message,data:value.data}}if(typeof value==="object"){for(const key2 in value){const result=spelunkData(value[key2]);if(result){return result}}return null}if(typeof value==="string"){try{return spelunkData(JSON.parse(value))}catch(error){}}return null}function _spelunkMessage(value,result){if(value==null){return}if(typeof value.message==="string"){result.push(value.message)}if(typeof value==="object"){for(const key2 in value){_spelunkMessage(value[key2],result)}}if(typeof value==="string"){try{return _spelunkMessage(JSON.parse(value),result)}catch(error){}}}function spelunkMessage(value){const result=[];_spelunkMessage(value,result);return result}const _BaseWallet=class _BaseWallet extends AbstractSigner{constructor(privateKey,provider){super(provider);__publicField(this,"address");__privateAdd(this,_signingKey);assertArgument(privateKey&&typeof privateKey.sign==="function","invalid private key","privateKey","[ REDACTED ]");__privateSet(this,_signingKey,privateKey);const address=computeAddress$1(this.signingKey.publicKey);defineProperties(this,{address:address})}get signingKey(){return __privateGet(this,_signingKey)}get privateKey(){return this.signingKey.privateKey}async getAddress(){return this.address}connect(provider){return new _BaseWallet(__privateGet(this,_signingKey),provider)}async signTransaction(tx){tx=copyRequest(tx);const{to:to,from:from}=await resolveProperties$2({to:tx.to?resolveAddress(tx.to,this):void 0,from:tx.from?resolveAddress(tx.from,this):void 0});if(to!=null){tx.to=to}if(from!=null){tx.from=from}if(tx.from!=null){assertArgument(getAddress$2(tx.from)===this.address,"transaction from address mismatch","tx.from",tx.from);delete tx.from}const btx=Transaction.from(tx);btx.signature=this.signingKey.sign(btx.unsignedHash);return btx.serialized}async signMessage(message){return this.signMessageSync(message)}signMessageSync(message){return this.signingKey.sign(hashMessage$1(message)).serialized}authorizeSync(auth){assertArgument(typeof auth.address==="string","invalid address for authorizeSync","auth.address",auth);const signature2=this.signingKey.sign(hashAuthorization(auth));return Object.assign({},{address:getAddress$2(auth.address),nonce:getBigInt(auth.nonce||0),chainId:getBigInt(auth.chainId||0)},{signature:signature2})}async authorize(auth){auth=Object.assign({},auth,{address:await resolveAddress(auth.address,this)});return this.authorizeSync(await this.populateAuthorization(auth))}async signTypedData(domain,types,value){const populated=await TypedDataEncoder$1.resolveNames(domain,types,value,async name=>{assert$7(this.provider!=null,"cannot resolve ENS names without a provider","UNSUPPORTED_OPERATION",{operation:"resolveName",info:{name:name}});const address=await this.provider.resolveName(name);assert$7(address!=null,"unconfigured ENS name","UNCONFIGURED_NAME",{value:name});return address});return this.signingKey.sign(TypedDataEncoder$1.hash(populated.domain,types,populated.value)).serialized}};_signingKey=new WeakMap;let BaseWallet=_BaseWallet;const subsChrs=" !#$%&'()*+,-./<=>?@[]^_`{|}~";const Word=/^[a-z]*$/i;function unfold(words2,sep){let initial=97;return words2.reduce((accum,word)=>{if(word===sep){initial++}else if(word.match(Word)){accum.push(String.fromCharCode(initial)+word)}else{initial=97;accum.push(word)}return accum},[])}function decode$2(data,subs){for(let i=subsChrs.length-1;i>=0;i--){data=data.split(subsChrs[i]).join(subs.substring(2*i,2*i+2))}const clumps=[];const leftover=data.replace(/(:|([0-9])|([A-Z][a-z]*))/g,(all3,item,semi,word)=>{if(semi){for(let i=parseInt(semi);i>=0;i--){clumps.push(";")}}else{clumps.push(item.toLowerCase())}return""});if(leftover){throw new Error(`leftovers: ${JSON.stringify(leftover)}`)}return unfold(unfold(clumps,";"),":")}function decodeOwl(data){assertArgument(data[0]==="0","unsupported auwl data","data",data);return decode$2(data.substring(1+2*subsChrs.length),data.substring(1,1+2*subsChrs.length))}let Wordlist$1=class Wordlist{constructor(locale){__publicField(this,"locale");defineProperties(this,{locale:locale})}split(phrase){return phrase.toLowerCase().split(/\s+/g)}join(words2){return words2.join(" ")}};class WordlistOwl extends Wordlist$1{constructor(locale,data,checksum2){super(locale);__privateAdd(this,_WordlistOwl_instances);__privateAdd(this,_data4);__privateAdd(this,_checksum);__privateAdd(this,_words);__privateSet(this,_data4,data);__privateSet(this,_checksum,checksum2);__privateSet(this,_words,null)}get _data(){return __privateGet(this,_data4)}_decodeWords(){return decodeOwl(__privateGet(this,_data4))}getWord(index){const words2=__privateMethod(this,_WordlistOwl_instances,loadWords_fn).call(this);assertArgument(index>=0&&index<words2.length,`invalid word index: ${index}`,"index",index);return words2[index]}getWordIndex(word){return __privateMethod(this,_WordlistOwl_instances,loadWords_fn).call(this).indexOf(word)}}_data4=new WeakMap;_checksum=new WeakMap;_words=new WeakMap;_WordlistOwl_instances=new WeakSet;loadWords_fn=function(){if(__privateGet(this,_words)==null){const words2=this._decodeWords();const checksum2=id$2(words2.join("\n")+"\n");if(checksum2!==__privateGet(this,_checksum)){throw new Error(`BIP39 Wordlist for ${this.locale} FAILED`)}__privateSet(this,_words,words2)}return __privateGet(this,_words)};const words$1="0erleonalorenseinceregesticitStanvetearctssi#ch2Athck&tneLl0And#Il.yLeOutO=S|S%b/ra@SurdU'0Ce[Cid|CountCu'Hie=IdOu,-Qui*Ro[TT]T%T*[Tu$0AptDD-tD*[Ju,M.UltV<)Vi)0Rob-0FairF%dRaid0A(EEntRee0Ead0MRRp%tS!_rmBumCoholErtI&LLeyLowMo,O}PhaReadySoT Ways0A>urAz(gOngOuntU'd0Aly,Ch%Ci|G G!GryIm$K!Noun)Nu$O` Sw T&naTiqueXietyY1ArtOlogyPe?P!Pro=Ril1ChCt-EaEnaGueMMedM%MyOundR<+Re,Ri=RowTTefa@Ti,Tw%k0KPe@SaultSetSi,SumeThma0H!>OmTa{T&dT.udeTra@0Ct]D.Gu,NtTh%ToTumn0Era+OcadoOid0AkeA*AyEsomeFulKw?d0Is:ByChel%C#D+GL<)Lc#y~MbooN<aNn RRelyRga(R*lSeS-SketTt!3A^AnAutyCau'ComeEfF%eG(Ha=H(dLie=LowLtN^Nef./TrayTt Twe&Y#d3Cyc!DKeNdOlogyRdR`Tt _{AdeAmeAnketA,EakE[IndOodO[omOu'UeUrUsh_rdAtDyIlMbNeNusOkO,Rd R(gRrowSsTtomUn)XY_{etA(AndA[A=EadEezeI{Id+IefIghtIngIskOccoliOk&OnzeOomO` OwnUsh2Bb!DdyD+tFf$oIldLbLkL!tNd!Nk Rd&Rg R,SS(e[SyTt Y Zz:Bba+B(B!CtusGeKe~LmM aMpNN$N)lNdyNn#NoeNvasNy#Pab!P.$Pta(RRb#RdRgoRpetRryRtSeShS(o/!Su$TT$ogT^Teg%yTt!UghtU'Ut]Ve3Il(gL yM|NsusNturyRe$Rta(_irAlkAmp]An+AosApt Ar+A'AtEapE{Ee'EfErryE,I{&IefIldIm}yOi)Oo'R#-U{!UnkUrn0G?Nnam#Rc!Tiz&TyVil_imApArifyAwAyE<ErkEv I{I|IffImbIn-IpO{OgO'O`OudOwnUbUmpU, Ut^_^A,C#utDeFfeeIlInL!@L%LumnMb(eMeMf%tM-Mm#Mp<yNc tNdu@NfirmNg*[N}@Nsid NtrolNv()OkOlPp PyR$ReRnR*@/Tt#U^UntryUp!Ur'Us(V Yo>_{Ad!AftAmA}AshAt AwlAzyEamEd.EekEwI{etImeIspIt-OpO[Ou^OwdUci$UelUi'Umb!Un^UshYY,$2BeLtu*PPbo?dRiousRr|Rta(R=Sh]/omTe3C!:DMa+MpN)Ng R(gShUght WnY3AlBa>BrisCadeCemb CideCl(eC%a>C*a'ErF&'F(eFyG*eLayLiv M<dMi'Ni$Nti,NyP?tP&dPos.P`PutyRi=ScribeS tSignSkSpair/royTailTe@VelopVi)Vo>3AgramAlAm#dAryCeE'lEtFf G.$Gn.yLemmaNn NosaurRe@RtSag*eScov Sea'ShSmi[S%d Splay/<)V tVideV%)Zzy5Ct%Cum|G~Lph(Ma(Na>NkeyN%OrSeUb!Ve_ftAg#AmaA,-AwEamE[IftIllInkIpI=OpUmY2CkMbNeR(g/T^Ty1Arf1Nam-:G G!RlyRnR`Sily/Sy1HoOlogyOnomy0GeItUca>1F%t0G1GhtTh 2BowD E@r-Eg<tEm|Eph<tEvat%I>Se0B?kBodyBra)Er+Ot]PloyPow Pty0Ab!A@DD![D%'EmyErgyF%)Ga+G(eH<)JoyLi,OughR-hRollSu*T Ti*TryVelope1Isode0U$Uip0AA'OdeOs]R%Upt0CapeSayS&)Ta>0Ern$H-s1Id&)IlOkeOl=1A@Amp!Ce[Ch<+C.eCludeCu'Ecu>Erci'Hau,Hib.I!I,ItOt-P<dPe@Pi*Pla(Po'P*[T&dTra0EEbrow:Br-CeCultyDeIntI`~L'MeMilyMousNNcyNtasyRmSh]TT$Th TigueUltV%.e3Atu*Bru?yD $EEdElMa!N)/iv$T^V W3B Ct]EldGu*LeLmLt N$NdNeNg NishReRmR,Sc$ShTT}[X_gAmeAshAtAv%EeIghtIpOatO{O%Ow UidUshY_mCusGIlLd~owOdOtR)Re,R+tRkRtu}RumRw?dSsil/ UndX_gi!AmeEqu|EshI&dIn+OgOntO,OwnOz&U.2ElNNnyRna)RyTu*:D+tInLaxy~ yMePRa+Rba+Rd&Rl-Rm|SSpTeTh U+Ze3N $NiusN*Nt!Nu(e/u*2O,0AntFtGg!Ng RaffeRlVe_dAn)A*A[IdeImp'ObeOomOryO=OwUe_tDde[LdOdO'RillaSpelSsipV nWn_bA)A(AntApeA[Av.yEatE&IdIefItOc yOupOwUnt_rdE[IdeIltIt?N3M:B.IrLfMm M, NdPpyRb%RdRshR=,TVeWkZ?d3AdAl`ArtAvyD+hogIght~oLmetLpNRo3Dd&Gh~NtPRe/%y5BbyCkeyLdLeLiday~owMeNeyOdPeRnRr%R'Sp.$/TelUrV 5BGeM<Mb!M%Nd*dNgryNtRd!RryRtSb<d3Brid:1EOn0EaEntifyLe2N%e4LLeg$L}[0A+Ita>M&'Mu}Pa@Po'Pro=Pul'0ChCludeComeC*a'DexD-a>Do%Du,ryF<tFl-tF%mHa!H .Iti$Je@JuryMa>N Noc|PutQuiryS<eSe@SideSpi*/$lTa@T e,ToVe,V.eVol=3On0L<dOla>Sue0Em1Ory:CketGu?RZz3AlousAns~yWel9BInKeUr}yY5D+I)MpNg!Ni%Nk/:Ng?oo3EnEpT^upY3CkDD}yNdNgdomSsTT^&TeTt&Wi4EeIfeO{Ow:BBelB%Dd DyKeMpNgua+PtopR+T T(UghUndryVaWWnWsu.Y Zy3Ad AfArnA=Ctu*FtGG$G&dIsu*M#NdNg`NsOp?dSs#Tt Vel3ArB tyBr?yC&'FeFtGhtKeMbM.NkOnQuid/Tt!VeZ?d5AdAnB, C$CkG-NelyNgOpTt yUdUn+VeY$5CkyGga+Mb N?N^Xury3R-s:Ch(eDG-G}tIdIlInJ%KeMm$NNa+Nda>NgoNs]Nu$P!Rb!R^Rg(R(eRketRria+SkSs/ T^T i$ThTrixTt XimumZe3AdowAnAsu*AtCh<-D$DiaLodyLtMb M%yNt]NuRcyR+R.RryShSsa+T$Thod3Dd!DnightLk~]M-NdNimumN%Nu>Rac!Rr%S ySs/akeXXedXtu*5Bi!DelDifyMM|N.%NkeyN, N`OnR$ReRn(gSqu.oTh T]T%Unta(U'VeVie5ChFf(LeLtiplySc!SeumShroomS-/Tu$3Self/ yTh:I=MePk(Rrow/yT]Tu*3ArCkEdGati=G!@I` PhewR=/TTw%kUtr$V WsXt3CeGht5B!I'M(eeOd!Rm$R`SeTab!TeTh(gTi)VelW5C!?Mb R'T:K0EyJe@Li+Scu*S =Ta(Vious0CurE<Tob 0Or1FF Fi)T&2L1Ay0DI=Ymp-0It0CeEI#L(eLy1EnEraIn]Po'T]1An+B.Ch?dD D(?yG<I|Ig($Ph<0Tr-h0H 0Tdo%T TputTside0AlEnEr0NN 0Yg&0/ 0O}:CtDd!GeIrLa)LmNdaNelN-N` P RadeR|RkRrotRtySsT^ThTi|TrolTt nU'VeYm|3A)AnutArAs<tL-<NN$tyNcilOp!Pp Rfe@Rm.Rs#T2O}OtoRa'Ys-$0AnoCn-Ctu*E)GGe#~LotNkO} Pe/olT^Zza_)A}tA,-A>AyEa'Ed+U{UgUn+2EmEtIntL?LeLi)NdNyOlPul?Rt]S.]Ssib!/TatoTt yV tyWd W _@i)Ai'Ed-tEf Epa*Es|EttyEv|I)IdeIm?yIntI%.yIs#Iva>IzeOb!mO)[Odu)Of.OgramOje@Omo>OofOp tyOsp O>@OudOvide2Bl-Dd(g~LpL'Mpk(N^PilPpyR^a'R.yRpo'R'ShTZz!3Ramid:99Al.yAntumArt E,]I{ItIzO>:Bb.Cco#CeCkD?DioIlInI'~yMpN^NdomN+PidReTeTh V&WZ%3AdyAlAs#BelBuildC$lCei=CipeC%dCyc!Du)F!@F%mFu'G]G*tGul?Je@LaxLea'LiefLyMa(Memb M(dMo=Nd NewNtOp&PairPeatPla)P%tQui*ScueSemb!Si,Sour)Sp#'SultTi*T*atTurnUn]Ve$ViewW?d2Y`m0BBb#CeChDeD+F!GhtGidNgOtPp!SkTu$V$V 5AdA,BotBu,CketM<)OfOkieOmSeTa>UghUndU>Y$5Bb DeGLeNNwayR$:DDd!D}[FeIlLadLm#L#LtLu>MeMp!NdTisfyToshiU)Usa+VeY1A!AnA*Att E}HemeHoolI&)I[%sOrp]OutRapRe&RiptRub1AAr^As#AtC#dC*tCt]Cur.yEdEkGm|Le@~M(?Ni%N'Nt&)RiesRvi)Ss]Tt!TupV&_dowAftAllowA*EdEllEriffIeldIftI}IpIv O{OeOotOpOrtOuld O=RimpRugUff!Y0Bl(gCkDeE+GhtGnL|Lk~yLv Mil?Mp!N)NgR&/ Tua>XZe1A>Et^IIllInIrtUll0AbAmEepEnd I)IdeIghtImOg<OtOwUsh0AllArtI!OkeOo`0A{AkeApIffOw0ApCc Ci$CkDaFtL?Ldi LidLut]L=Me#eNgOnRryRtUlUndUpUr)U`0A)A*Ati$AwnEakEci$EedEllEndH eI)Id IkeInIr.L.OilOns%O#OrtOtRayReadR(gY0Ua*UeezeUir*l_b!AdiumAffA+AirsAmpAndArtA>AyEakEelEmEpE*oI{IllIngO{Oma^O}OolOryO=Ra>gyReetRikeR#gRugg!Ud|UffUmb!Y!0Bje@Bm.BwayC)[ChDd&Ff G?G+,ItMm NNnyN'tP PplyP*meReRfa)R+Rpri'RroundR=ySpe@/a(1AllowAmpApArmE?EetIftImIngIt^Ord1MbolMptomRup/em:B!Ck!GIlL|LkNkPeR+tSk/eTtooXi3A^Am~NN<tNnisNtRm/Xt_nkAtEmeEnE%yE*EyIngIsOughtReeRi=RowUmbUnd 0CketDeG LtMb MeNyPRedSsueT!5A,BaccoDayDdl EGe` I!tK&MatoM%rowNeNgueNightOlO`PP-Pp!R^RnadoRtoi'SsT$Uri,W?dW WnY_{AdeAff-Ag-A(Ansf ApAshA=lAyEatEeEndI$IbeI{Igg ImIpOphyOub!U{UeUlyUmpetU,U`Y2BeIt]Mb!NaN}lRkeyRnRt!1El=EntyI)InI,O1PeP-$:5Ly5B*lla0Ab!Awa*C!Cov D DoFairFoldHappyIf%mIqueItIv 'KnownLo{TilUsu$Veil1Da>GradeHoldOnP Set1B<Ge0A+EEdEfulE![U$0Il.y:C<tCuumGueLidL!yL=NNishP%Rious/Ult3H-!L=tNd%Ntu*NueRbRifyRs]RyS'lT <3Ab!Br<tCiousCt%yDeoEw~a+Nta+Ol(Rtu$RusSaS.Su$T$Vid5C$I)IdLc<oLumeTeYa+:GeG#ItLk~LnutNtRfa*RmRri%ShSp/eT VeY3Al`Ap#ArA'lA` BDd(gEk&dIrdLcome/T_!AtEatEelEnE*IpIsp 0DeD`FeLd~NNdowNeNgNkNn Nt ReSdomSeShT}[5LfM<Nd OdOlRdRkRldRryR`_pE{E,!I,I>Ong::Rd3Ar~ow9UUngU`:3BraRo9NeO";const checksum="0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60";let wordlist$1=null;let LangEn$1=class LangEn extends WordlistOwl{constructor(){super("en",words$1,checksum)}static wordlist(){if(wordlist$1==null){wordlist$1=new LangEn}return wordlist$1}};function getUpperMask$2(bits){return(1<<bits)-1<<8-bits&255}function getLowerMask$2(bits){return(1<<bits)-1&255}function mnemonicToEntropy$2(mnemonic,wordlist2){assertNormalize("NFKD");if(wordlist2==null){wordlist2=LangEn$1.wordlist()}const words2=wordlist2.split(mnemonic);assertArgument(words2.length%3===0&&words2.length>=12&&words2.length<=24,"invalid mnemonic length","mnemonic","[ REDACTED ]");const entropy=new Uint8Array(Math.ceil(11*words2.length/8));let offset=0;for(let i=0;i<words2.length;i++){let index=wordlist2.getWordIndex(words2[i].normalize("NFKD"));assertArgument(index>=0,`invalid mnemonic word at index ${i}`,"mnemonic","[ REDACTED ]");for(let bit=0;bit<11;bit++){if(index&1<<10-bit){entropy[offset>>3]|=1<<7-offset%8}offset++}}const entropyBits=32*words2.length/3;const checksumBits=words2.length/3;const checksumMask=getUpperMask$2(checksumBits);const checksum2=getBytes(sha256$1(entropy.slice(0,entropyBits/8)))[0]&checksumMask;assertArgument(checksum2===(entropy[entropy.length-1]&checksumMask),"invalid mnemonic checksum","mnemonic","[ REDACTED ]");return hexlify$2(entropy.slice(0,entropyBits/8))}function entropyToMnemonic$2(entropy,wordlist2){assertArgument(entropy.length%4===0&&entropy.length>=16&&entropy.length<=32,"invalid entropy size","entropy","[ REDACTED ]");if(wordlist2==null){wordlist2=LangEn$1.wordlist()}const indices=[0];let remainingBits=11;for(let i=0;i<entropy.length;i++){if(remainingBits>8){indices[indices.length-1]<<=8;indices[indices.length-1]|=entropy[i];remainingBits-=8}else{indices[indices.length-1]<<=remainingBits;indices[indices.length-1]|=entropy[i]>>8-remainingBits;indices.push(entropy[i]&getLowerMask$2(8-remainingBits));remainingBits+=3}}const checksumBits=entropy.length/4;const checksum2=parseInt(sha256$1(entropy).substring(2,4),16)&getUpperMask$2(checksumBits);indices[indices.length-1]<<=checksumBits;indices[indices.length-1]|=checksum2>>8-checksumBits;return wordlist2.join(indices.map(index=>wordlist2.getWord(index)))}const _guard$1={};class Mnemonic{constructor(guard,entropy,phrase,password,wordlist2){__publicField(this,"phrase");__publicField(this,"password");__publicField(this,"wordlist");__publicField(this,"entropy");if(password==null){password=""}if(wordlist2==null){wordlist2=LangEn$1.wordlist()}assertPrivate(guard,_guard$1,"Mnemonic");defineProperties(this,{phrase:phrase,password:password,wordlist:wordlist2,entropy:entropy})}computeSeed(){const salt=toUtf8Bytes$1("mnemonic"+this.password,"NFKD");return pbkdf2$2(toUtf8Bytes$1(this.phrase,"NFKD"),salt,2048,64,"sha512")}static fromPhrase(phrase,password,wordlist2){const entropy=mnemonicToEntropy$2(phrase,wordlist2);phrase=entropyToMnemonic$2(getBytes(entropy),wordlist2);return new Mnemonic(_guard$1,entropy,phrase,password,wordlist2)}static fromEntropy(_entropy,password,wordlist2){const entropy=getBytes(_entropy,"entropy");const phrase=entropyToMnemonic$2(entropy,wordlist2);return new Mnemonic(_guard$1,hexlify$2(entropy),phrase,password,wordlist2)}static entropyToPhrase(_entropy,wordlist2){const entropy=getBytes(_entropy,"entropy");return entropyToMnemonic$2(entropy,wordlist2)}static phraseToEntropy(phrase,wordlist2){return mnemonicToEntropy$2(phrase,wordlist2)}static isValidMnemonic(phrase,wordlist2){try{mnemonicToEntropy$2(phrase,wordlist2);return true}catch(error){}return false}}
/*! MIT License. Copyright 2015-2022 Richard Moore <me@ricmoo.com>. See LICENSE.txt. */var __classPrivateFieldGet$2=function(receiver,state,kind,f2){if(kind==="a"&&!f2)throw new TypeError("Private accessor was defined without a getter");if(typeof state==="function"?receiver!==state||!f2:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return kind==="m"?f2:kind==="a"?f2.call(receiver):f2?f2.value:state.get(receiver)};var __classPrivateFieldSet$2=function(receiver,state,value,kind,f2){if(kind==="m")throw new TypeError("Private method is not writable");if(kind==="a"&&!f2)throw new TypeError("Private accessor was defined without a setter");if(typeof state==="function"?receiver!==state||!f2:!state.has(receiver))throw new TypeError("Cannot write private member to an object whose class did not declare it");return kind==="a"?f2.call(receiver,value):f2?f2.value=value:state.set(receiver,value),value};var _AES_key,_AES_Kd,_AES_Ke;const numberOfRounds={16:10,24:12,32:14};const rcon=[1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145];const S=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22];const Si=[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125];const T1=[3328402341,4168907908,4000806809,4135287693,4294111757,3597364157,3731845041,2445657428,1613770832,33620227,3462883241,1445669757,3892248089,3050821474,1303096294,3967186586,2412431941,528646813,2311702848,4202528135,4026202645,2992200171,2387036105,4226871307,1101901292,3017069671,1604494077,1169141738,597466303,1403299063,3832705686,2613100635,1974974402,3791519004,1033081774,1277568618,1815492186,2118074177,4126668546,2211236943,1748251740,1369810420,3521504564,4193382664,3799085459,2883115123,1647391059,706024767,134480908,2512897874,1176707941,2646852446,806885416,932615841,168101135,798661301,235341577,605164086,461406363,3756188221,3454790438,1311188841,2142417613,3933566367,302582043,495158174,1479289972,874125870,907746093,3698224818,3025820398,1537253627,2756858614,1983593293,3084310113,2108928974,1378429307,3722699582,1580150641,327451799,2790478837,3117535592,0,3253595436,1075847264,3825007647,2041688520,3059440621,3563743934,2378943302,1740553945,1916352843,2487896798,2555137236,2958579944,2244988746,3151024235,3320835882,1336584933,3992714006,2252555205,2588757463,1714631509,293963156,2319795663,3925473552,67240454,4269768577,2689618160,2017213508,631218106,1269344483,2723238387,1571005438,2151694528,93294474,1066570413,563977660,1882732616,4059428100,1673313503,2008463041,2950355573,1109467491,537923632,3858759450,4260623118,3218264685,2177748300,403442708,638784309,3287084079,3193921505,899127202,2286175436,773265209,2479146071,1437050866,4236148354,2050833735,3362022572,3126681063,840505643,3866325909,3227541664,427917720,2655997905,2749160575,1143087718,1412049534,999329963,193497219,2353415882,3354324521,1807268051,672404540,2816401017,3160301282,369822493,2916866934,3688947771,1681011286,1949973070,336202270,2454276571,201721354,1210328172,3093060836,2680341085,3184776046,1135389935,3294782118,965841320,831886756,3554993207,4068047243,3588745010,2345191491,1849112409,3664604599,26054028,2983581028,2622377682,1235855840,3630984372,2891339514,4092916743,3488279077,3395642799,4101667470,1202630377,268961816,1874508501,4034427016,1243948399,1546530418,941366308,1470539505,1941222599,2546386513,3421038627,2715671932,3899946140,1042226977,2521517021,1639824860,227249030,260737669,3765465232,2084453954,1907733956,3429263018,2420656344,100860677,4160157185,470683154,3261161891,1781871967,2924959737,1773779408,394692241,2579611992,974986535,664706745,3655459128,3958962195,731420851,571543859,3530123707,2849626480,126783113,865375399,765172662,1008606754,361203602,3387549984,2278477385,2857719295,1344809080,2782912378,59542671,1503764984,160008576,437062935,1707065306,3622233649,2218934982,3496503480,2185314755,697932208,1512910199,504303377,2075177163,2824099068,1841019862,739644986];const T2=[2781242211,2230877308,2582542199,2381740923,234877682,3184946027,2984144751,1418839493,1348481072,50462977,2848876391,2102799147,434634494,1656084439,3863849899,2599188086,1167051466,2636087938,1082771913,2281340285,368048890,3954334041,3381544775,201060592,3963727277,1739838676,4250903202,3930435503,3206782108,4149453988,2531553906,1536934080,3262494647,484572669,2923271059,1783375398,1517041206,1098792767,49674231,1334037708,1550332980,4098991525,886171109,150598129,2481090929,1940642008,1398944049,1059722517,201851908,1385547719,1699095331,1587397571,674240536,2704774806,252314885,3039795866,151914247,908333586,2602270848,1038082786,651029483,1766729511,3447698098,2682942837,454166793,2652734339,1951935532,775166490,758520603,3000790638,4004797018,4217086112,4137964114,1299594043,1639438038,3464344499,2068982057,1054729187,1901997871,2534638724,4121318227,1757008337,0,750906861,1614815264,535035132,3363418545,3988151131,3201591914,1183697867,3647454910,1265776953,3734260298,3566750796,3903871064,1250283471,1807470800,717615087,3847203498,384695291,3313910595,3617213773,1432761139,2484176261,3481945413,283769337,100925954,2180939647,4037038160,1148730428,3123027871,3813386408,4087501137,4267549603,3229630528,2315620239,2906624658,3156319645,1215313976,82966005,3747855548,3245848246,1974459098,1665278241,807407632,451280895,251524083,1841287890,1283575245,337120268,891687699,801369324,3787349855,2721421207,3431482436,959321879,1469301956,4065699751,2197585534,1199193405,2898814052,3887750493,724703513,2514908019,2696962144,2551808385,3516813135,2141445340,1715741218,2119445034,2872807568,2198571144,3398190662,700968686,3547052216,1009259540,2041044702,3803995742,487983883,1991105499,1004265696,1449407026,1316239930,504629770,3683797321,168560134,1816667172,3837287516,1570751170,1857934291,4014189740,2797888098,2822345105,2754712981,936633572,2347923833,852879335,1133234376,1500395319,3084545389,2348912013,1689376213,3533459022,3762923945,3034082412,4205598294,133428468,634383082,2949277029,2398386810,3913789102,403703816,3580869306,2297460856,1867130149,1918643758,607656988,4049053350,3346248884,1368901318,600565992,2090982877,2632479860,557719327,3717614411,3697393085,2249034635,2232388234,2430627952,1115438654,3295786421,2865522278,3633334344,84280067,33027830,303828494,2747425121,1600795957,4188952407,3496589753,2434238086,1486471617,658119965,3106381470,953803233,334231800,3005978776,857870609,3151128937,1890179545,2298973838,2805175444,3056442267,574365214,2450884487,550103529,1233637070,4289353045,2018519080,2057691103,2399374476,4166623649,2148108681,387583245,3664101311,836232934,3330556482,3100665960,3280093505,2955516313,2002398509,287182607,3413881008,4238890068,3597515707,975967766];const T3=[1671808611,2089089148,2006576759,2072901243,4061003762,1807603307,1873927791,3310653893,810573872,16974337,1739181671,729634347,4263110654,3613570519,2883997099,1989864566,3393556426,2191335298,3376449993,2106063485,4195741690,1508618841,1204391495,4027317232,2917941677,3563566036,2734514082,2951366063,2629772188,2767672228,1922491506,3227229120,3082974647,4246528509,2477669779,644500518,911895606,1061256767,4144166391,3427763148,878471220,2784252325,3845444069,4043897329,1905517169,3631459288,827548209,356461077,67897348,3344078279,593839651,3277757891,405286936,2527147926,84871685,2595565466,118033927,305538066,2157648768,3795705826,3945188843,661212711,2999812018,1973414517,152769033,2208177539,745822252,439235610,455947803,1857215598,1525593178,2700827552,1391895634,994932283,3596728278,3016654259,695947817,3812548067,795958831,2224493444,1408607827,3513301457,0,3979133421,543178784,4229948412,2982705585,1542305371,1790891114,3410398667,3201918910,961245753,1256100938,1289001036,1491644504,3477767631,3496721360,4012557807,2867154858,4212583931,1137018435,1305975373,861234739,2241073541,1171229253,4178635257,33948674,2139225727,1357946960,1011120188,2679776671,2833468328,1374921297,2751356323,1086357568,2408187279,2460827538,2646352285,944271416,4110742005,3168756668,3066132406,3665145818,560153121,271589392,4279952895,4077846003,3530407890,3444343245,202643468,322250259,3962553324,1608629855,2543990167,1154254916,389623319,3294073796,2817676711,2122513534,1028094525,1689045092,1575467613,422261273,1939203699,1621147744,2174228865,1339137615,3699352540,577127458,712922154,2427141008,2290289544,1187679302,3995715566,3100863416,339486740,3732514782,1591917662,186455563,3681988059,3762019296,844522546,978220090,169743370,1239126601,101321734,611076132,1558493276,3260915650,3547250131,2901361580,1655096418,2443721105,2510565781,3828863972,2039214713,3878868455,3359869896,928607799,1840765549,2374762893,3580146133,1322425422,2850048425,1823791212,1459268694,4094161908,3928346602,1706019429,2056189050,2934523822,135794696,3134549946,2022240376,628050469,779246638,472135708,2800834470,3032970164,3327236038,3894660072,3715932637,1956440180,522272287,1272813131,3185336765,2340818315,2323976074,1888542832,1044544574,3049550261,1722469478,1222152264,50660867,4127324150,236067854,1638122081,895445557,1475980887,3117443513,2257655686,3243809217,489110045,2662934430,3778599393,4162055160,2561878936,288563729,1773916777,3648039385,2391345038,2493985684,2612407707,505560094,2274497927,3911240169,3460925390,1442818645,678973480,3749357023,2358182796,2717407649,2306869641,219617805,3218761151,3862026214,1120306242,1756942440,1103331905,2578459033,762796589,252780047,2966125488,1425844308,3151392187,372911126];const T4=[1667474886,2088535288,2004326894,2071694838,4075949567,1802223062,1869591006,3318043793,808472672,16843522,1734846926,724270422,4278065639,3621216949,2880169549,1987484396,3402253711,2189597983,3385409673,2105378810,4210693615,1499065266,1195886990,4042263547,2913856577,3570689971,2728590687,2947541573,2627518243,2762274643,1920112356,3233831835,3082273397,4261223649,2475929149,640051788,909531756,1061110142,4160160501,3435941763,875846760,2779116625,3857003729,4059105529,1903268834,3638064043,825316194,353713962,67374088,3351728789,589522246,3284360861,404236336,2526454071,84217610,2593830191,117901582,303183396,2155911963,3806477791,3958056653,656894286,2998062463,1970642922,151591698,2206440989,741110872,437923380,454765878,1852748508,1515908788,2694904667,1381168804,993742198,3604373943,3014905469,690584402,3823320797,791638366,2223281939,1398011302,3520161977,0,3991743681,538992704,4244381667,2981218425,1532751286,1785380564,3419096717,3200178535,960056178,1246420628,1280103576,1482221744,3486468741,3503319995,4025428677,2863326543,4227536621,1128514950,1296947098,859002214,2240123921,1162203018,4193849577,33687044,2139062782,1347481760,1010582648,2678045221,2829640523,1364325282,2745433693,1077985408,2408548869,2459086143,2644360225,943212656,4126475505,3166494563,3065430391,3671750063,555836226,269496352,4294908645,4092792573,3537006015,3452783745,202118168,320025894,3974901699,1600119230,2543297077,1145359496,387397934,3301201811,2812801621,2122220284,1027426170,1684319432,1566435258,421079858,1936954854,1616945344,2172753945,1330631070,3705438115,572679748,707427924,2425400123,2290647819,1179044492,4008585671,3099120491,336870440,3739122087,1583276732,185277718,3688593069,3772791771,842159716,976899700,168435220,1229577106,101059084,606366792,1549591736,3267517855,3553849021,2897014595,1650632388,2442242105,2509612081,3840161747,2038008818,3890688725,3368567691,926374254,1835907034,2374863873,3587531953,1313788572,2846482505,1819063512,1448540844,4109633523,3941213647,1701162954,2054852340,2930698567,134748176,3132806511,2021165296,623210314,774795868,471606328,2795958615,3031746419,3334885783,3907527627,3722280097,1953799400,522133822,1263263126,3183336545,2341176845,2324333839,1886425312,1044267644,3048588401,1718004428,1212733584,50529542,4143317495,235803164,1633788866,892690282,1465383342,3115962473,2256965911,3250673817,488449850,2661202215,3789633753,4177007595,2560144171,286339874,1768537042,3654906025,2391705863,2492770099,2610673197,505291324,2273808917,3924369609,3469625735,1431699370,673740880,3755965093,2358021891,2711746649,2307489801,218961690,3217021541,3873845719,1111672452,1751693520,1094828930,2576986153,757954394,252645662,2964376443,1414855848,3149649517,370555436];const T5=[1374988112,2118214995,437757123,975658646,1001089995,530400753,2902087851,1273168787,540080725,2910219766,2295101073,4110568485,1340463100,3307916247,641025152,3043140495,3736164937,632953703,1172967064,1576976609,3274667266,2169303058,2370213795,1809054150,59727847,361929877,3211623147,2505202138,3569255213,1484005843,1239443753,2395588676,1975683434,4102977912,2572697195,666464733,3202437046,4035489047,3374361702,2110667444,1675577880,3843699074,2538681184,1649639237,2976151520,3144396420,4269907996,4178062228,1883793496,2403728665,2497604743,1383856311,2876494627,1917518562,3810496343,1716890410,3001755655,800440835,2261089178,3543599269,807962610,599762354,33778362,3977675356,2328828971,2809771154,4077384432,1315562145,1708848333,101039829,3509871135,3299278474,875451293,2733856160,92987698,2767645557,193195065,1080094634,1584504582,3178106961,1042385657,2531067453,3711829422,1306967366,2438237621,1908694277,67556463,1615861247,429456164,3602770327,2302690252,1742315127,2968011453,126454664,3877198648,2043211483,2709260871,2084704233,4169408201,0,159417987,841739592,504459436,1817866830,4245618683,260388950,1034867998,908933415,168810852,1750902305,2606453969,607530554,202008497,2472011535,3035535058,463180190,2160117071,1641816226,1517767529,470948374,3801332234,3231722213,1008918595,303765277,235474187,4069246893,766945465,337553864,1475418501,2943682380,4003061179,2743034109,4144047775,1551037884,1147550661,1543208500,2336434550,3408119516,3069049960,3102011747,3610369226,1113818384,328671808,2227573024,2236228733,3535486456,2935566865,3341394285,496906059,3702665459,226906860,2009195472,733156972,2842737049,294930682,1206477858,2835123396,2700099354,1451044056,573804783,2269728455,3644379585,2362090238,2564033334,2801107407,2776292904,3669462566,1068351396,742039012,1350078989,1784663195,1417561698,4136440770,2430122216,775550814,2193862645,2673705150,1775276924,1876241833,3475313331,3366754619,270040487,3902563182,3678124923,3441850377,1851332852,3969562369,2203032232,3868552805,2868897406,566021896,4011190502,3135740889,1248802510,3936291284,699432150,832877231,708780849,3332740144,899835584,1951317047,4236429990,3767586992,866637845,4043610186,1106041591,2144161806,395441711,1984812685,1139781709,3433712980,3835036895,2664543715,1282050075,3240894392,1181045119,2640243204,25965917,4203181171,4211818798,3009879386,2463879762,3910161971,1842759443,2597806476,933301370,1509430414,3943906441,3467192302,3076639029,3776767469,2051518780,2631065433,1441952575,404016761,1942435775,1408749034,1610459739,3745345300,2017778566,3400528769,3110650942,941896748,3265478751,371049330,3168937228,675039627,4279080257,967311729,135050206,3635733660,1683407248,2076935265,3576870512,1215061108,3501741890];const T6=[1347548327,1400783205,3273267108,2520393566,3409685355,4045380933,2880240216,2471224067,1428173050,4138563181,2441661558,636813900,4233094615,3620022987,2149987652,2411029155,1239331162,1730525723,2554718734,3781033664,46346101,310463728,2743944855,3328955385,3875770207,2501218972,3955191162,3667219033,768917123,3545789473,692707433,1150208456,1786102409,2029293177,1805211710,3710368113,3065962831,401639597,1724457132,3028143674,409198410,2196052529,1620529459,1164071807,3769721975,2226875310,486441376,2499348523,1483753576,428819965,2274680428,3075636216,598438867,3799141122,1474502543,711349675,129166120,53458370,2592523643,2782082824,4063242375,2988687269,3120694122,1559041666,730517276,2460449204,4042459122,2706270690,3446004468,3573941694,533804130,2328143614,2637442643,2695033685,839224033,1973745387,957055980,2856345839,106852767,1371368976,4181598602,1033297158,2933734917,1179510461,3046200461,91341917,1862534868,4284502037,605657339,2547432937,3431546947,2003294622,3182487618,2282195339,954669403,3682191598,1201765386,3917234703,3388507166,0,2198438022,1211247597,2887651696,1315723890,4227665663,1443857720,507358933,657861945,1678381017,560487590,3516619604,975451694,2970356327,261314535,3535072918,2652609425,1333838021,2724322336,1767536459,370938394,182621114,3854606378,1128014560,487725847,185469197,2918353863,3106780840,3356761769,2237133081,1286567175,3152976349,4255350624,2683765030,3160175349,3309594171,878443390,1988838185,3704300486,1756818940,1673061617,3403100636,272786309,1075025698,545572369,2105887268,4174560061,296679730,1841768865,1260232239,4091327024,3960309330,3497509347,1814803222,2578018489,4195456072,575138148,3299409036,446754879,3629546796,4011996048,3347532110,3252238545,4270639778,915985419,3483825537,681933534,651868046,2755636671,3828103837,223377554,2607439820,1649704518,3270937875,3901806776,1580087799,4118987695,3198115200,2087309459,2842678573,3016697106,1003007129,2802849917,1860738147,2077965243,164439672,4100872472,32283319,2827177882,1709610350,2125135846,136428751,3874428392,3652904859,3460984630,3572145929,3593056380,2939266226,824852259,818324884,3224740454,930369212,2801566410,2967507152,355706840,1257309336,4148292826,243256656,790073846,2373340630,1296297904,1422699085,3756299780,3818836405,457992840,3099667487,2135319889,77422314,1560382517,1945798516,788204353,1521706781,1385356242,870912086,325965383,2358957921,2050466060,2388260884,2313884476,4006521127,901210569,3990953189,1014646705,1503449823,1062597235,2031621326,3212035895,3931371469,1533017514,350174575,2256028891,2177544179,1052338372,741876788,1606591296,1914052035,213705253,2334669897,1107234197,1899603969,3725069491,2631447780,2422494913,1635502980,1893020342,1950903388,1120974935];const T7=[2807058932,1699970625,2764249623,1586903591,1808481195,1173430173,1487645946,59984867,4199882800,1844882806,1989249228,1277555970,3623636965,3419915562,1149249077,2744104290,1514790577,459744698,244860394,3235995134,1963115311,4027744588,2544078150,4190530515,1608975247,2627016082,2062270317,1507497298,2200818878,567498868,1764313568,3359936201,2305455554,2037970062,1047239e3,1910319033,1337376481,2904027272,2892417312,984907214,1243112415,830661914,861968209,2135253587,2011214180,2927934315,2686254721,731183368,1750626376,4246310725,1820824798,4172763771,3542330227,48394827,2404901663,2871682645,671593195,3254988725,2073724613,145085239,2280796200,2779915199,1790575107,2187128086,472615631,3029510009,4075877127,3802222185,4107101658,3201631749,1646252340,4270507174,1402811438,1436590835,3778151818,3950355702,3963161475,4020912224,2667994737,273792366,2331590177,104699613,95345982,3175501286,2377486676,1560637892,3564045318,369057872,4213447064,3919042237,1137477952,2658625497,1119727848,2340947849,1530455833,4007360968,172466556,266959938,516552836,0,2256734592,3980931627,1890328081,1917742170,4294704398,945164165,3575528878,958871085,3647212047,2787207260,1423022939,775562294,1739656202,3876557655,2530391278,2443058075,3310321856,547512796,1265195639,437656594,3121275539,719700128,3762502690,387781147,218828297,3350065803,2830708150,2848461854,428169201,122466165,3720081049,1627235199,648017665,4122762354,1002783846,2117360635,695634755,3336358691,4234721005,4049844452,3704280881,2232435299,574624663,287343814,612205898,1039717051,840019705,2708326185,793451934,821288114,1391201670,3822090177,376187827,3113855344,1224348052,1679968233,2361698556,1058709744,752375421,2431590963,1321699145,3519142200,2734591178,188127444,2177869557,3727205754,2384911031,3215212461,2648976442,2450346104,3432737375,1180849278,331544205,3102249176,4150144569,2952102595,2159976285,2474404304,766078933,313773861,2570832044,2108100632,1668212892,3145456443,2013908262,418672217,3070356634,2594734927,1852171925,3867060991,3473416636,3907448597,2614737639,919489135,164948639,2094410160,2997825956,590424639,2486224549,1723872674,3157750862,3399941250,3501252752,3625268135,2555048196,3673637356,1343127501,4130281361,3599595085,2957853679,1297403050,81781910,3051593425,2283490410,532201772,1367295589,3926170974,895287692,1953757831,1093597963,492483431,3528626907,1446242576,1192455638,1636604631,209336225,344873464,1015671571,669961897,3375740769,3857572124,2973530695,3747192018,1933530610,3464042516,935293895,3454686199,2858115069,1863638845,3683022916,4085369519,3292445032,875313188,1080017571,3279033885,621591778,1233856572,2504130317,24197544,3017672716,3835484340,3247465558,2220981195,3060847922,1551124588,1463996600];const T8=[4104605777,1097159550,396673818,660510266,2875968315,2638606623,4200115116,3808662347,821712160,1986918061,3430322568,38544885,3856137295,718002117,893681702,1654886325,2975484382,3122358053,3926825029,4274053469,796197571,1290801793,1184342925,3556361835,2405426947,2459735317,1836772287,1381620373,3196267988,1948373848,3764988233,3385345166,3263785589,2390325492,1480485785,3111247143,3780097726,2293045232,548169417,3459953789,3746175075,439452389,1362321559,1400849762,1685577905,1806599355,2174754046,137073913,1214797936,1174215055,3731654548,2079897426,1943217067,1258480242,529487843,1437280870,3945269170,3049390895,3313212038,923313619,679998e3,3215307299,57326082,377642221,3474729866,2041877159,133361907,1776460110,3673476453,96392454,878845905,2801699524,777231668,4082475170,2330014213,4142626212,2213296395,1626319424,1906247262,1846563261,562755902,3708173718,1040559837,3871163981,1418573201,3294430577,114585348,1343618912,2566595609,3186202582,1078185097,3651041127,3896688048,2307622919,425408743,3371096953,2081048481,1108339068,2216610296,0,2156299017,736970802,292596766,1517440620,251657213,2235061775,2933202493,758720310,265905162,1554391400,1532285339,908999204,174567692,1474760595,4002861748,2610011675,3234156416,3693126241,2001430874,303699484,2478443234,2687165888,585122620,454499602,151849742,2345119218,3064510765,514443284,4044981591,1963412655,2581445614,2137062819,19308535,1928707164,1715193156,4219352155,1126790795,600235211,3992742070,3841024952,836553431,1669664834,2535604243,3323011204,1243905413,3141400786,4180808110,698445255,2653899549,2989552604,2253581325,3252932727,3004591147,1891211689,2487810577,3915653703,4237083816,4030667424,2100090966,865136418,1229899655,953270745,3399679628,3557504664,4118925222,2061379749,3079546586,2915017791,983426092,2022837584,1607244650,2118541908,2366882550,3635996816,972512814,3283088770,1568718495,3499326569,3576539503,621982671,2895723464,410887952,2623762152,1002142683,645401037,1494807662,2595684844,1335535747,2507040230,4293295786,3167684641,367585007,3885750714,1865862730,2668221674,2960971305,2763173681,1059270954,2777952454,2724642869,1320957812,2194319100,2429595872,2815956275,77089521,3973773121,3444575871,2448830231,1305906550,4021308739,2857194700,2516901860,3518358430,1787304780,740276417,1699839814,1592394909,2352307457,2272556026,188821243,1729977011,3687994002,274084841,3594982253,3613494426,2701949495,4162096729,322734571,2837966542,1640576439,484830689,1202797690,3537852828,4067639125,349075736,3342319475,4157467219,4255800159,1030690015,1155237496,2951971274,1757691577,607398968,2738905026,499347990,3794078908,1011452712,227885567,2818666809,213114376,3034881240,1455525988,3414450555,850817237,1817998408,3092726480];const U1=[0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795];const U2=[0,185469197,370938394,487725847,741876788,657861945,975451694,824852259,1483753576,1400783205,1315723890,1164071807,1950903388,2135319889,1649704518,1767536459,2967507152,3152976349,2801566410,2918353863,2631447780,2547432937,2328143614,2177544179,3901806776,3818836405,4270639778,4118987695,3299409036,3483825537,3535072918,3652904859,2077965243,1893020342,1841768865,1724457132,1474502543,1559041666,1107234197,1257309336,598438867,681933534,901210569,1052338372,261314535,77422314,428819965,310463728,3409685355,3224740454,3710368113,3593056380,3875770207,3960309330,4045380933,4195456072,2471224067,2554718734,2237133081,2388260884,3212035895,3028143674,2842678573,2724322336,4138563181,4255350624,3769721975,3955191162,3667219033,3516619604,3431546947,3347532110,2933734917,2782082824,3099667487,3016697106,2196052529,2313884476,2499348523,2683765030,1179510461,1296297904,1347548327,1533017514,1786102409,1635502980,2087309459,2003294622,507358933,355706840,136428751,53458370,839224033,957055980,605657339,790073846,2373340630,2256028891,2607439820,2422494913,2706270690,2856345839,3075636216,3160175349,3573941694,3725069491,3273267108,3356761769,4181598602,4063242375,4011996048,3828103837,1033297158,915985419,730517276,545572369,296679730,446754879,129166120,213705253,1709610350,1860738147,1945798516,2029293177,1239331162,1120974935,1606591296,1422699085,4148292826,4233094615,3781033664,3931371469,3682191598,3497509347,3446004468,3328955385,2939266226,2755636671,3106780840,2988687269,2198438022,2282195339,2501218972,2652609425,1201765386,1286567175,1371368976,1521706781,1805211710,1620529459,2105887268,1988838185,533804130,350174575,164439672,46346101,870912086,954669403,636813900,788204353,2358957921,2274680428,2592523643,2441661558,2695033685,2880240216,3065962831,3182487618,3572145929,3756299780,3270937875,3388507166,4174560061,4091327024,4006521127,3854606378,1014646705,930369212,711349675,560487590,272786309,457992840,106852767,223377554,1678381017,1862534868,1914052035,2031621326,1211247597,1128014560,1580087799,1428173050,32283319,182621114,401639597,486441376,768917123,651868046,1003007129,818324884,1503449823,1385356242,1333838021,1150208456,1973745387,2125135846,1673061617,1756818940,2970356327,3120694122,2802849917,2887651696,2637442643,2520393566,2334669897,2149987652,3917234703,3799141122,4284502037,4100872472,3309594171,3460984630,3545789473,3629546796,2050466060,1899603969,1814803222,1730525723,1443857720,1560382517,1075025698,1260232239,575138148,692707433,878443390,1062597235,243256656,91341917,409198410,325965383,3403100636,3252238545,3704300486,3620022987,3874428392,3990953189,4042459122,4227665663,2460449204,2578018489,2226875310,2411029155,3198115200,3046200461,2827177882,2743944855];const U3=[0,218828297,437656594,387781147,875313188,958871085,775562294,590424639,1750626376,1699970625,1917742170,2135253587,1551124588,1367295589,1180849278,1265195639,3501252752,3720081049,3399941250,3350065803,3835484340,3919042237,4270507174,4085369519,3102249176,3051593425,2734591178,2952102595,2361698556,2177869557,2530391278,2614737639,3145456443,3060847922,2708326185,2892417312,2404901663,2187128086,2504130317,2555048196,3542330227,3727205754,3375740769,3292445032,3876557655,3926170974,4246310725,4027744588,1808481195,1723872674,1910319033,2094410160,1608975247,1391201670,1173430173,1224348052,59984867,244860394,428169201,344873464,935293895,984907214,766078933,547512796,1844882806,1627235199,2011214180,2062270317,1507497298,1423022939,1137477952,1321699145,95345982,145085239,532201772,313773861,830661914,1015671571,731183368,648017665,3175501286,2957853679,2807058932,2858115069,2305455554,2220981195,2474404304,2658625497,3575528878,3625268135,3473416636,3254988725,3778151818,3963161475,4213447064,4130281361,3599595085,3683022916,3432737375,3247465558,3802222185,4020912224,4172763771,4122762354,3201631749,3017672716,2764249623,2848461854,2331590177,2280796200,2431590963,2648976442,104699613,188127444,472615631,287343814,840019705,1058709744,671593195,621591778,1852171925,1668212892,1953757831,2037970062,1514790577,1463996600,1080017571,1297403050,3673637356,3623636965,3235995134,3454686199,4007360968,3822090177,4107101658,4190530515,2997825956,3215212461,2830708150,2779915199,2256734592,2340947849,2627016082,2443058075,172466556,122466165,273792366,492483431,1047239e3,861968209,612205898,695634755,1646252340,1863638845,2013908262,1963115311,1446242576,1530455833,1277555970,1093597963,1636604631,1820824798,2073724613,1989249228,1436590835,1487645946,1337376481,1119727848,164948639,81781910,331544205,516552836,1039717051,821288114,669961897,719700128,2973530695,3157750862,2871682645,2787207260,2232435299,2283490410,2667994737,2450346104,3647212047,3564045318,3279033885,3464042516,3980931627,3762502690,4150144569,4199882800,3070356634,3121275539,2904027272,2686254721,2200818878,2384911031,2570832044,2486224549,3747192018,3528626907,3310321856,3359936201,3950355702,3867060991,4049844452,4234721005,1739656202,1790575107,2108100632,1890328081,1402811438,1586903591,1233856572,1149249077,266959938,48394827,369057872,418672217,1002783846,919489135,567498868,752375421,209336225,24197544,376187827,459744698,945164165,895287692,574624663,793451934,1679968233,1764313568,2117360635,1933530610,1343127501,1560637892,1243112415,1192455638,3704280881,3519142200,3336358691,3419915562,3907448597,3857572124,4075877127,4294704398,3029510009,3113855344,2927934315,2744104290,2159976285,2377486676,2594734927,2544078150];const U4=[0,151849742,303699484,454499602,607398968,758720310,908999204,1059270954,1214797936,1097159550,1517440620,1400849762,1817998408,1699839814,2118541908,2001430874,2429595872,2581445614,2194319100,2345119218,3034881240,3186202582,2801699524,2951971274,3635996816,3518358430,3399679628,3283088770,4237083816,4118925222,4002861748,3885750714,1002142683,850817237,698445255,548169417,529487843,377642221,227885567,77089521,1943217067,2061379749,1640576439,1757691577,1474760595,1592394909,1174215055,1290801793,2875968315,2724642869,3111247143,2960971305,2405426947,2253581325,2638606623,2487810577,3808662347,3926825029,4044981591,4162096729,3342319475,3459953789,3576539503,3693126241,1986918061,2137062819,1685577905,1836772287,1381620373,1532285339,1078185097,1229899655,1040559837,923313619,740276417,621982671,439452389,322734571,137073913,19308535,3871163981,4021308739,4104605777,4255800159,3263785589,3414450555,3499326569,3651041127,2933202493,2815956275,3167684641,3049390895,2330014213,2213296395,2566595609,2448830231,1305906550,1155237496,1607244650,1455525988,1776460110,1626319424,2079897426,1928707164,96392454,213114376,396673818,514443284,562755902,679998e3,865136418,983426092,3708173718,3557504664,3474729866,3323011204,4180808110,4030667424,3945269170,3794078908,2507040230,2623762152,2272556026,2390325492,2975484382,3092726480,2738905026,2857194700,3973773121,3856137295,4274053469,4157467219,3371096953,3252932727,3673476453,3556361835,2763173681,2915017791,3064510765,3215307299,2156299017,2307622919,2459735317,2610011675,2081048481,1963412655,1846563261,1729977011,1480485785,1362321559,1243905413,1126790795,878845905,1030690015,645401037,796197571,274084841,425408743,38544885,188821243,3613494426,3731654548,3313212038,3430322568,4082475170,4200115116,3780097726,3896688048,2668221674,2516901860,2366882550,2216610296,3141400786,2989552604,2837966542,2687165888,1202797690,1320957812,1437280870,1554391400,1669664834,1787304780,1906247262,2022837584,265905162,114585348,499347990,349075736,736970802,585122620,972512814,821712160,2595684844,2478443234,2293045232,2174754046,3196267988,3079546586,2895723464,2777952454,3537852828,3687994002,3234156416,3385345166,4142626212,4293295786,3841024952,3992742070,174567692,57326082,410887952,292596766,777231668,660510266,1011452712,893681702,1108339068,1258480242,1343618912,1494807662,1715193156,1865862730,1948373848,2100090966,2701949495,2818666809,3004591147,3122358053,2235061775,2352307457,2535604243,2653899549,3915653703,3764988233,4219352155,4067639125,3444575871,3294430577,3746175075,3594982253,836553431,953270745,600235211,718002117,367585007,484830689,133361907,251657213,2041877159,1891211689,1806599355,1654886325,1568718495,1418573201,1335535747,1184342925];function convertToInt32(bytes2){const result=[];for(let i=0;i<bytes2.length;i+=4){result.push(bytes2[i]<<24|bytes2[i+1]<<16|bytes2[i+2]<<8|bytes2[i+3])}return result}class AES{get key(){return __classPrivateFieldGet$2(this,_AES_key,"f").slice()}constructor(key2){_AES_key.set(this,void 0);_AES_Kd.set(this,void 0);_AES_Ke.set(this,void 0);if(!(this instanceof AES)){throw Error("AES must be instanitated with `new`")}__classPrivateFieldSet$2(this,_AES_key,new Uint8Array(key2),"f");const rounds=numberOfRounds[this.key.length];if(rounds==null){throw new TypeError("invalid key size (must be 16, 24 or 32 bytes)")}__classPrivateFieldSet$2(this,_AES_Ke,[],"f");__classPrivateFieldSet$2(this,_AES_Kd,[],"f");for(let i=0;i<=rounds;i++){__classPrivateFieldGet$2(this,_AES_Ke,"f").push([0,0,0,0]);__classPrivateFieldGet$2(this,_AES_Kd,"f").push([0,0,0,0])}const roundKeyCount=(rounds+1)*4;const KC=this.key.length/4;const tk=convertToInt32(this.key);let index;for(let i=0;i<KC;i++){index=i>>2;__classPrivateFieldGet$2(this,_AES_Ke,"f")[index][i%4]=tk[i];__classPrivateFieldGet$2(this,_AES_Kd,"f")[rounds-index][i%4]=tk[i]}let rconpointer=0;let t=KC,tt;while(t<roundKeyCount){tt=tk[KC-1];tk[0]^=S[tt>>16&255]<<24^S[tt>>8&255]<<16^S[tt&255]<<8^S[tt>>24&255]^rcon[rconpointer]<<24;rconpointer+=1;if(KC!=8){for(let i2=1;i2<KC;i2++){tk[i2]^=tk[i2-1]}}else{for(let i2=1;i2<KC/2;i2++){tk[i2]^=tk[i2-1]}tt=tk[KC/2-1];tk[KC/2]^=S[tt&255]^S[tt>>8&255]<<8^S[tt>>16&255]<<16^S[tt>>24&255]<<24;for(let i2=KC/2+1;i2<KC;i2++){tk[i2]^=tk[i2-1]}}let i=0,r,c;while(i<KC&&t<roundKeyCount){r=t>>2;c=t%4;__classPrivateFieldGet$2(this,_AES_Ke,"f")[r][c]=tk[i];__classPrivateFieldGet$2(this,_AES_Kd,"f")[rounds-r][c]=tk[i++];t++}}for(let r=1;r<rounds;r++){for(let c=0;c<4;c++){tt=__classPrivateFieldGet$2(this,_AES_Kd,"f")[r][c];__classPrivateFieldGet$2(this,_AES_Kd,"f")[r][c]=U1[tt>>24&255]^U2[tt>>16&255]^U3[tt>>8&255]^U4[tt&255]}}}encrypt(plaintext){if(plaintext.length!=16){throw new TypeError("invalid plaintext size (must be 16 bytes)")}const rounds=__classPrivateFieldGet$2(this,_AES_Ke,"f").length-1;const a=[0,0,0,0];let t=convertToInt32(plaintext);for(let i=0;i<4;i++){t[i]^=__classPrivateFieldGet$2(this,_AES_Ke,"f")[0][i]}for(let r=1;r<rounds;r++){for(let i=0;i<4;i++){a[i]=T1[t[i]>>24&255]^T2[t[(i+1)%4]>>16&255]^T3[t[(i+2)%4]>>8&255]^T4[t[(i+3)%4]&255]^__classPrivateFieldGet$2(this,_AES_Ke,"f")[r][i]}t=a.slice()}const result=new Uint8Array(16);let tt=0;for(let i=0;i<4;i++){tt=__classPrivateFieldGet$2(this,_AES_Ke,"f")[rounds][i];result[4*i]=(S[t[i]>>24&255]^tt>>24)&255;result[4*i+1]=(S[t[(i+1)%4]>>16&255]^tt>>16)&255;result[4*i+2]=(S[t[(i+2)%4]>>8&255]^tt>>8)&255;result[4*i+3]=(S[t[(i+3)%4]&255]^tt)&255}return result}decrypt(ciphertext){if(ciphertext.length!=16){throw new TypeError("invalid ciphertext size (must be 16 bytes)")}const rounds=__classPrivateFieldGet$2(this,_AES_Kd,"f").length-1;const a=[0,0,0,0];let t=convertToInt32(ciphertext);for(let i=0;i<4;i++){t[i]^=__classPrivateFieldGet$2(this,_AES_Kd,"f")[0][i]}for(let r=1;r<rounds;r++){for(let i=0;i<4;i++){a[i]=T5[t[i]>>24&255]^T6[t[(i+3)%4]>>16&255]^T7[t[(i+2)%4]>>8&255]^T8[t[(i+1)%4]&255]^__classPrivateFieldGet$2(this,_AES_Kd,"f")[r][i]}t=a.slice()}const result=new Uint8Array(16);let tt=0;for(let i=0;i<4;i++){tt=__classPrivateFieldGet$2(this,_AES_Kd,"f")[rounds][i];result[4*i]=(Si[t[i]>>24&255]^tt>>24)&255;result[4*i+1]=(Si[t[(i+3)%4]>>16&255]^tt>>16)&255;result[4*i+2]=(Si[t[(i+2)%4]>>8&255]^tt>>8)&255;result[4*i+3]=(Si[t[(i+1)%4]&255]^tt)&255}return result}}_AES_key=new WeakMap,_AES_Kd=new WeakMap,_AES_Ke=new WeakMap;class ModeOfOperation{constructor(name,key2,cls){if(cls&&!(this instanceof cls)){throw new Error(`${name} must be instantiated with "new"`)}Object.defineProperties(this,{aes:{enumerable:true,value:new AES(key2)},name:{enumerable:true,value:name}})}}var __classPrivateFieldSet$1=function(receiver,state,value,kind,f2){if(kind==="m")throw new TypeError("Private method is not writable");if(kind==="a"&&!f2)throw new TypeError("Private accessor was defined without a setter");if(typeof state==="function"?receiver!==state||!f2:!state.has(receiver))throw new TypeError("Cannot write private member to an object whose class did not declare it");return kind==="a"?f2.call(receiver,value):f2?f2.value=value:state.set(receiver,value),value};var __classPrivateFieldGet$1=function(receiver,state,kind,f2){if(kind==="a"&&!f2)throw new TypeError("Private accessor was defined without a getter");if(typeof state==="function"?receiver!==state||!f2:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return kind==="m"?f2:kind==="a"?f2.call(receiver):f2?f2.value:state.get(receiver)};var _CBC_iv,_CBC_lastBlock;class CBC extends ModeOfOperation{constructor(key2,iv){super("ECC",key2,CBC);_CBC_iv.set(this,void 0);_CBC_lastBlock.set(this,void 0);if(iv){if(iv.length%16){throw new TypeError("invalid iv size (must be 16 bytes)")}__classPrivateFieldSet$1(this,_CBC_iv,new Uint8Array(iv),"f")}else{__classPrivateFieldSet$1(this,_CBC_iv,new Uint8Array(16),"f")}__classPrivateFieldSet$1(this,_CBC_lastBlock,this.iv,"f")}get iv(){return new Uint8Array(__classPrivateFieldGet$1(this,_CBC_iv,"f"))}encrypt(plaintext){if(plaintext.length%16){throw new TypeError("invalid plaintext size (must be multiple of 16 bytes)")}const ciphertext=new Uint8Array(plaintext.length);for(let i=0;i<plaintext.length;i+=16){for(let j=0;j<16;j++){__classPrivateFieldGet$1(this,_CBC_lastBlock,"f")[j]^=plaintext[i+j]}__classPrivateFieldSet$1(this,_CBC_lastBlock,this.aes.encrypt(__classPrivateFieldGet$1(this,_CBC_lastBlock,"f")),"f");ciphertext.set(__classPrivateFieldGet$1(this,_CBC_lastBlock,"f"),i)}return ciphertext}decrypt(ciphertext){if(ciphertext.length%16){throw new TypeError("invalid ciphertext size (must be multiple of 16 bytes)")}const plaintext=new Uint8Array(ciphertext.length);for(let i=0;i<ciphertext.length;i+=16){const block=this.aes.decrypt(ciphertext.subarray(i,i+16));for(let j=0;j<16;j++){plaintext[i+j]=block[j]^__classPrivateFieldGet$1(this,_CBC_lastBlock,"f")[j];__classPrivateFieldGet$1(this,_CBC_lastBlock,"f")[j]=ciphertext[i+j]}}return plaintext}}_CBC_iv=new WeakMap,_CBC_lastBlock=new WeakMap;var __classPrivateFieldSet=function(receiver,state,value,kind,f2){if(kind==="m")throw new TypeError("Private method is not writable");if(kind==="a"&&!f2)throw new TypeError("Private accessor was defined without a setter");if(typeof state==="function"?receiver!==state||!f2:!state.has(receiver))throw new TypeError("Cannot write private member to an object whose class did not declare it");return kind==="a"?f2.call(receiver,value):f2?f2.value=value:state.set(receiver,value),value};var __classPrivateFieldGet=function(receiver,state,kind,f2){if(kind==="a"&&!f2)throw new TypeError("Private accessor was defined without a getter");if(typeof state==="function"?receiver!==state||!f2:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return kind==="m"?f2:kind==="a"?f2.call(receiver):f2?f2.value:state.get(receiver)};var _CTR_remaining,_CTR_remainingIndex,_CTR_counter;class CTR extends ModeOfOperation{constructor(key2,initialValue){super("CTR",key2,CTR);_CTR_remaining.set(this,void 0);_CTR_remainingIndex.set(this,void 0);_CTR_counter.set(this,void 0);__classPrivateFieldSet(this,_CTR_counter,new Uint8Array(16),"f");__classPrivateFieldGet(this,_CTR_counter,"f").fill(0);__classPrivateFieldSet(this,_CTR_remaining,__classPrivateFieldGet(this,_CTR_counter,"f"),"f");__classPrivateFieldSet(this,_CTR_remainingIndex,16,"f");if(initialValue==null){initialValue=1}if(typeof initialValue==="number"){this.setCounterValue(initialValue)}else{this.setCounterBytes(initialValue)}}get counter(){return new Uint8Array(__classPrivateFieldGet(this,_CTR_counter,"f"))}setCounterValue(value){if(!Number.isInteger(value)||value<0||value>Number.MAX_SAFE_INTEGER){throw new TypeError("invalid counter initial integer value")}for(let index=15;index>=0;--index){__classPrivateFieldGet(this,_CTR_counter,"f")[index]=value%256;value=Math.floor(value/256)}}setCounterBytes(value){if(value.length!==16){throw new TypeError("invalid counter initial Uint8Array value length")}__classPrivateFieldGet(this,_CTR_counter,"f").set(value)}increment(){for(let i=15;i>=0;i--){if(__classPrivateFieldGet(this,_CTR_counter,"f")[i]===255){__classPrivateFieldGet(this,_CTR_counter,"f")[i]=0}else{__classPrivateFieldGet(this,_CTR_counter,"f")[i]++;break}}}encrypt(plaintext){var _a2,_b2;const crypttext=new Uint8Array(plaintext);for(let i=0;i<crypttext.length;i++){if(__classPrivateFieldGet(this,_CTR_remainingIndex,"f")===16){__classPrivateFieldSet(this,_CTR_remaining,this.aes.encrypt(__classPrivateFieldGet(this,_CTR_counter,"f")),"f");__classPrivateFieldSet(this,_CTR_remainingIndex,0,"f");this.increment()}crypttext[i]^=__classPrivateFieldGet(this,_CTR_remaining,"f")[(__classPrivateFieldSet(this,_CTR_remainingIndex,(_b2=__classPrivateFieldGet(this,_CTR_remainingIndex,"f"),_a2=_b2++,_b2),"f"),_a2)]}return crypttext}decrypt(ciphertext){return this.encrypt(ciphertext)}}_CTR_remaining=new WeakMap,_CTR_remainingIndex=new WeakMap,_CTR_counter=new WeakMap;function pkcs7Strip(data){if(data.length<16){throw new TypeError("PKCS#7 invalid length")}const padder=data[data.length-1];if(padder>16){throw new TypeError("PKCS#7 padding byte out of range")}const length=data.length-padder;for(let i=0;i<padder;i++){if(data[length+i]!==padder){throw new TypeError("PKCS#7 invalid padding byte")}}return new Uint8Array(data.subarray(0,length))}function looseArrayify$1(hexString){if(typeof hexString==="string"&&!hexString.startsWith("0x")){hexString="0x"+hexString}return getBytesCopy(hexString)}function zpad$2(value,length){value=String(value);while(value.length<length){value="0"+value}return value}function getPassword$1(password){if(typeof password==="string"){return toUtf8Bytes$1(password,"NFKC")}return getBytesCopy(password)}function spelunk(object2,_path){const match=_path.match(/^([a-z0-9$_.-]*)(:([a-z]+))?(!)?$/i);assertArgument(match!=null,"invalid path","path",_path);const path=match[1];const type=match[3];const reqd=match[4]==="!";let cur=object2;for(const comp of path.toLowerCase().split(".")){if(Array.isArray(cur)){if(!comp.match(/^[0-9]+$/)){break}cur=cur[parseInt(comp)]}else if(typeof cur==="object"){let found=null;for(const key2 in cur){if(key2.toLowerCase()===comp){found=cur[key2];break}}cur=found}else{cur=null}if(cur==null){break}}assertArgument(!reqd||cur!=null,"missing required value","path",path);if(type&&cur!=null){if(type==="int"){if(typeof cur==="string"&&cur.match(/^-?[0-9]+$/)){return parseInt(cur)}else if(Number.isSafeInteger(cur)){return cur}}if(type==="number"){if(typeof cur==="string"&&cur.match(/^-?[0-9.]*$/)){return parseFloat(cur)}}if(type==="data"){if(typeof cur==="string"){return looseArrayify$1(cur)}}if(type==="array"&&Array.isArray(cur)){return cur}if(type===typeof cur){return cur}assertArgument(false,`wrong type found for ${type} `,"path",path)}return cur}const defaultPath$3="m/44'/60'/0'/0/0";function isKeystoreJson(json){try{const data=JSON.parse(json);const version2=data.version!=null?parseInt(data.version):0;if(version2===3){return true}}catch(error){}return false}function decrypt$2(data,key2,ciphertext){const cipher=spelunk(data,"crypto.cipher:string");if(cipher==="aes-128-ctr"){const iv=spelunk(data,"crypto.cipherparams.iv:data!");const aesCtr=new CTR(key2,iv);return hexlify$2(aesCtr.decrypt(ciphertext))}assert$7(false,"unsupported cipher","UNSUPPORTED_OPERATION",{operation:"decrypt"})}function getAccount(data,_key){const key2=getBytes(_key);const ciphertext=spelunk(data,"crypto.ciphertext:data!");const computedMAC=hexlify$2(keccak256$2(concat$2([key2.slice(16,32),ciphertext]))).substring(2);assertArgument(computedMAC===spelunk(data,"crypto.mac:string!").toLowerCase(),"incorrect password","password","[ REDACTED ]");const privateKey=decrypt$2(data,key2.slice(0,16),ciphertext);const address=computeAddress$1(privateKey);if(data.address){let check=data.address.toLowerCase();if(!check.startsWith("0x")){check="0x"+check}assertArgument(getAddress$2(check)===address,"keystore address/privateKey mismatch","address",data.address)}const account={address:address,privateKey:privateKey};const version2=spelunk(data,"x-ethers.version:string");if(version2==="0.1"){const mnemonicKey=key2.slice(32,64);const mnemonicCiphertext=spelunk(data,"x-ethers.mnemonicCiphertext:data!");const mnemonicIv=spelunk(data,"x-ethers.mnemonicCounter:data!");const mnemonicAesCtr=new CTR(mnemonicKey,mnemonicIv);account.mnemonic={path:spelunk(data,"x-ethers.path:string")||defaultPath$3,locale:spelunk(data,"x-ethers.locale:string")||"en",entropy:hexlify$2(getBytes(mnemonicAesCtr.decrypt(mnemonicCiphertext)))}}return account}function getDecryptKdfParams(data){const kdf=spelunk(data,"crypto.kdf:string");if(kdf&&typeof kdf==="string"){if(kdf.toLowerCase()==="scrypt"){const salt=spelunk(data,"crypto.kdfparams.salt:data!");const N2=spelunk(data,"crypto.kdfparams.n:int!");const r=spelunk(data,"crypto.kdfparams.r:int!");const p=spelunk(data,"crypto.kdfparams.p:int!");assertArgument(N2>0&&(N2&N2-1)===0,"invalid kdf.N","kdf.N",N2);assertArgument(r>0&&p>0,"invalid kdf","kdf",kdf);const dkLen=spelunk(data,"crypto.kdfparams.dklen:int!");assertArgument(dkLen===32,"invalid kdf.dklen","kdf.dflen",dkLen);return{name:"scrypt",salt:salt,N:N2,r:r,p:p,dkLen:64}}else if(kdf.toLowerCase()==="pbkdf2"){const salt=spelunk(data,"crypto.kdfparams.salt:data!");const prf=spelunk(data,"crypto.kdfparams.prf:string!");const algorithm=prf.split("-").pop();assertArgument(algorithm==="sha256"||algorithm==="sha512","invalid kdf.pdf","kdf.pdf",prf);const count=spelunk(data,"crypto.kdfparams.c:int!");const dkLen=spelunk(data,"crypto.kdfparams.dklen:int!");assertArgument(dkLen===32,"invalid kdf.dklen","kdf.dklen",dkLen);return{name:"pbkdf2",salt:salt,count:count,dkLen:dkLen,algorithm:algorithm}}}assertArgument(false,"unsupported key-derivation function","kdf",kdf)}function decryptKeystoreJsonSync(json,_password){const data=JSON.parse(json);const password=getPassword$1(_password);const params=getDecryptKdfParams(data);if(params.name==="pbkdf2"){const{salt:salt2,count:count,dkLen:dkLen2,algorithm:algorithm}=params;const key3=pbkdf2$2(password,salt2,count,dkLen2,algorithm);return getAccount(data,key3)}assert$7(params.name==="scrypt","cannot be reached","UNKNOWN_ERROR",{params:params});const{salt:salt,N:N2,r:r,p:p,dkLen:dkLen}=params;const key2=scryptSync(password,salt,N2,r,p,dkLen);return getAccount(data,key2)}function stall$1(duration){return new Promise(resolve=>{setTimeout(()=>{resolve()},duration)})}async function decryptKeystoreJson(json,_password,progress){const data=JSON.parse(json);const password=getPassword$1(_password);const params=getDecryptKdfParams(data);if(params.name==="pbkdf2"){if(progress){progress(0);await stall$1(0)}const{salt:salt2,count:count,dkLen:dkLen2,algorithm:algorithm}=params;const key3=pbkdf2$2(password,salt2,count,dkLen2,algorithm);if(progress){progress(1);await stall$1(0)}return getAccount(data,key3)}assert$7(params.name==="scrypt","cannot be reached","UNKNOWN_ERROR",{params:params});const{salt:salt,N:N2,r:r,p:p,dkLen:dkLen}=params;const key2=await scrypt$2(password,salt,N2,r,p,dkLen,progress);return getAccount(data,key2)}function getEncryptKdfParams(options){const salt=options.salt!=null?getBytes(options.salt,"options.salt"):randomBytes$2(32);let N2=1<<17,r=8,p=1;if(options.scrypt){if(options.scrypt.N){N2=options.scrypt.N}if(options.scrypt.r){r=options.scrypt.r}if(options.scrypt.p){p=options.scrypt.p}}assertArgument(typeof N2==="number"&&N2>0&&Number.isSafeInteger(N2)&&(BigInt(N2)&BigInt(N2-1))===BigInt(0),"invalid scrypt N parameter","options.N",N2);assertArgument(typeof r==="number"&&r>0&&Number.isSafeInteger(r),"invalid scrypt r parameter","options.r",r);assertArgument(typeof p==="number"&&p>0&&Number.isSafeInteger(p),"invalid scrypt p parameter","options.p",p);return{name:"scrypt",dkLen:32,salt:salt,N:N2,r:r,p:p}}function _encryptKeystore(key2,kdf,account,options){const privateKey=getBytes(account.privateKey,"privateKey");const iv=options.iv!=null?getBytes(options.iv,"options.iv"):randomBytes$2(16);assertArgument(iv.length===16,"invalid options.iv length","options.iv",options.iv);const uuidRandom=options.uuid!=null?getBytes(options.uuid,"options.uuid"):randomBytes$2(16);assertArgument(uuidRandom.length===16,"invalid options.uuid length","options.uuid",options.iv);const derivedKey=key2.slice(0,16);const macPrefix=key2.slice(16,32);const aesCtr=new CTR(derivedKey,iv);const ciphertext=getBytes(aesCtr.encrypt(privateKey));const mac=keccak256$2(concat$2([macPrefix,ciphertext]));const data={address:account.address.substring(2).toLowerCase(),id:uuidV4$1(uuidRandom),version:3,Crypto:{cipher:"aes-128-ctr",cipherparams:{iv:hexlify$2(iv).substring(2)},ciphertext:hexlify$2(ciphertext).substring(2),kdf:"scrypt",kdfparams:{salt:hexlify$2(kdf.salt).substring(2),n:kdf.N,dklen:32,p:kdf.p,r:kdf.r},mac:mac.substring(2)}};if(account.mnemonic){const client=options.client!=null?options.client:`ethers/${version$t}`;const path=account.mnemonic.path||defaultPath$3;const locale=account.mnemonic.locale||"en";const mnemonicKey=key2.slice(32,64);const entropy=getBytes(account.mnemonic.entropy,"account.mnemonic.entropy");const mnemonicIv=randomBytes$2(16);const mnemonicAesCtr=new CTR(mnemonicKey,mnemonicIv);const mnemonicCiphertext=getBytes(mnemonicAesCtr.encrypt(entropy));const now=new Date;const timestamp=now.getUTCFullYear()+"-"+zpad$2(now.getUTCMonth()+1,2)+"-"+zpad$2(now.getUTCDate(),2)+"T"+zpad$2(now.getUTCHours(),2)+"-"+zpad$2(now.getUTCMinutes(),2)+"-"+zpad$2(now.getUTCSeconds(),2)+".0Z";const gethFilename="UTC--"+timestamp+"--"+data.address;data["x-ethers"]={client:client,gethFilename:gethFilename,path:path,locale:locale,mnemonicCounter:hexlify$2(mnemonicIv).substring(2),mnemonicCiphertext:hexlify$2(mnemonicCiphertext).substring(2),version:"0.1"}}return JSON.stringify(data)}function encryptKeystoreJsonSync(account,password,options){if(options==null){options={}}const passwordBytes=getPassword$1(password);const kdf=getEncryptKdfParams(options);const key2=scryptSync(passwordBytes,kdf.salt,kdf.N,kdf.r,kdf.p,64);return _encryptKeystore(getBytes(key2),kdf,account,options)}async function encryptKeystoreJson(account,password,options){if(options==null){options={}}const passwordBytes=getPassword$1(password);const kdf=getEncryptKdfParams(options);const key2=await scrypt$2(passwordBytes,kdf.salt,kdf.N,kdf.r,kdf.p,64,options.progressCallback);return _encryptKeystore(getBytes(key2),kdf,account,options)}const defaultPath$2="m/44'/60'/0'/0/0";const MasterSecret$2=new Uint8Array([66,105,116,99,111,105,110,32,115,101,101,100]);const HardenedBit$2=2147483648;const N$2=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141");const Nibbles="0123456789abcdef";function zpad$1(value,length){let result="";while(value){result=Nibbles[value%16]+result;value=Math.trunc(value/16)}while(result.length<length*2){result="0"+result}return"0x"+result}function encodeBase58Check(_value2){const value=getBytes(_value2);const check=dataSlice(sha256$1(sha256$1(value)),0,4);const bytes2=concat$2([value,check]);return encodeBase58(bytes2)}const _guard={};function ser_I(index,chainCode,publicKey,privateKey){const data=new Uint8Array(37);if(index&HardenedBit$2){assert$7(privateKey!=null,"cannot derive child of neutered node","UNSUPPORTED_OPERATION",{operation:"deriveChild"});data.set(getBytes(privateKey),1)}else{data.set(getBytes(publicKey))}for(let i=24;i>=0;i-=8){data[33+(i>>3)]=index>>24-i&255}const I=getBytes(computeHmac$1("sha512",chainCode,data));return{IL:I.slice(0,32),IR:I.slice(32)}}function derivePath(node,path){const components=path.split("/");assertArgument(components.length>0,"invalid path","path",path);if(components[0]==="m"){assertArgument(node.depth===0,`cannot derive root path (i.e. path starting with "m/") for a node at non-zero depth ${node.depth}`,"path",path);components.shift()}let result=node;for(let i=0;i<components.length;i++){const component=components[i];if(component.match(/^[0-9]+'$/)){const index=parseInt(component.substring(0,component.length-1));assertArgument(index<HardenedBit$2,"invalid path index",`path[${i}]`,component);result=result.deriveChild(HardenedBit$2+index)}else if(component.match(/^[0-9]+$/)){const index=parseInt(component);assertArgument(index<HardenedBit$2,"invalid path index",`path[${i}]`,component);result=result.deriveChild(index)}else{assertArgument(false,"invalid path component",`path[${i}]`,component)}}return result}const _HDNodeWallet=class _HDNodeWallet extends BaseWallet{constructor(guard,signingKey,parentFingerprint,chainCode,path,index,depth,mnemonic,provider){super(signingKey,provider);__privateAdd(this,_HDNodeWallet_instances);__publicField(this,"publicKey");__publicField(this,"fingerprint");__publicField(this,"parentFingerprint");__publicField(this,"mnemonic");__publicField(this,"chainCode");__publicField(this,"path");__publicField(this,"index");__publicField(this,"depth");assertPrivate(guard,_guard,"HDNodeWallet");defineProperties(this,{publicKey:signingKey.compressedPublicKey});const fingerprint=dataSlice(ripemd160$1(sha256$1(this.publicKey)),0,4);defineProperties(this,{parentFingerprint:parentFingerprint,fingerprint:fingerprint,chainCode:chainCode,path:path,index:index,depth:depth});defineProperties(this,{mnemonic:mnemonic})}connect(provider){return new _HDNodeWallet(_guard,this.signingKey,this.parentFingerprint,this.chainCode,this.path,this.index,this.depth,this.mnemonic,provider)}async encrypt(password,progressCallback){return await encryptKeystoreJson(__privateMethod(this,_HDNodeWallet_instances,account_fn).call(this),password,{progressCallback:progressCallback})}encryptSync(password){return encryptKeystoreJsonSync(__privateMethod(this,_HDNodeWallet_instances,account_fn).call(this),password)}get extendedKey(){assert$7(this.depth<256,"Depth too deep","UNSUPPORTED_OPERATION",{operation:"extendedKey"});return encodeBase58Check(concat$2(["0x0488ADE4",zpad$1(this.depth,1),this.parentFingerprint,zpad$1(this.index,4),this.chainCode,concat$2(["0x00",this.privateKey])]))}hasPath(){return this.path!=null}neuter(){return new HDNodeVoidWallet(_guard,this.address,this.publicKey,this.parentFingerprint,this.chainCode,this.path,this.index,this.depth,this.provider)}deriveChild(_index){const index=getNumber(_index,"index");assertArgument(index<=4294967295,"invalid index","index",index);let path=this.path;if(path){path+="/"+(index&~HardenedBit$2);if(index&HardenedBit$2){path+="'"}}const{IR:IR,IL:IL}=ser_I(index,this.chainCode,this.publicKey,this.privateKey);const ki=new SigningKey$2(toBeHex((toBigInt(IL)+BigInt(this.privateKey))%N$2,32));return new _HDNodeWallet(_guard,ki,this.fingerprint,hexlify$2(IR),path,index,this.depth+1,this.mnemonic,this.provider)}derivePath(path){return derivePath(this,path)}static fromExtendedKey(extendedKey){const bytes2=toBeArray(decodeBase58(extendedKey));assertArgument(bytes2.length===82||encodeBase58Check(bytes2.slice(0,78))===extendedKey,"invalid extended key","extendedKey","[ REDACTED ]");const depth=bytes2[4];const parentFingerprint=hexlify$2(bytes2.slice(5,9));const index=parseInt(hexlify$2(bytes2.slice(9,13)).substring(2),16);const chainCode=hexlify$2(bytes2.slice(13,45));const key2=bytes2.slice(45,78);switch(hexlify$2(bytes2.slice(0,4))){case"0x0488b21e":case"0x043587cf":{const publicKey=hexlify$2(key2);return new HDNodeVoidWallet(_guard,computeAddress$1(publicKey),publicKey,parentFingerprint,chainCode,null,index,depth,null)}case"0x0488ade4":case"0x04358394 ":if(key2[0]!==0){break}return new _HDNodeWallet(_guard,new SigningKey$2(key2.slice(1)),parentFingerprint,chainCode,null,index,depth,null,null)}assertArgument(false,"invalid extended key prefix","extendedKey","[ REDACTED ]")}static createRandom(password,path,wordlist2){var _a2;if(password==null){password=""}if(path==null){path=defaultPath$2}if(wordlist2==null){wordlist2=LangEn$1.wordlist()}const mnemonic=Mnemonic.fromEntropy(randomBytes$2(16),password,wordlist2);return __privateMethod(_a2=_HDNodeWallet,_HDNodeWallet_static,fromSeed_fn).call(_a2,mnemonic.computeSeed(),mnemonic).derivePath(path)}static fromMnemonic(mnemonic,path){var _a2;if(!path){path=defaultPath$2}return __privateMethod(_a2=_HDNodeWallet,_HDNodeWallet_static,fromSeed_fn).call(_a2,mnemonic.computeSeed(),mnemonic).derivePath(path)}static fromPhrase(phrase,password,path,wordlist2){var _a2;if(password==null){password=""}if(path==null){path=defaultPath$2}if(wordlist2==null){wordlist2=LangEn$1.wordlist()}const mnemonic=Mnemonic.fromPhrase(phrase,password,wordlist2);return __privateMethod(_a2=_HDNodeWallet,_HDNodeWallet_static,fromSeed_fn).call(_a2,mnemonic.computeSeed(),mnemonic).derivePath(path)}static fromSeed(seed){var _a2;return __privateMethod(_a2=_HDNodeWallet,_HDNodeWallet_static,fromSeed_fn).call(_a2,seed,null)}};_HDNodeWallet_instances=new WeakSet;account_fn=function(){const account={address:this.address,privateKey:this.privateKey};const m=this.mnemonic;if(this.path&&m&&m.wordlist.locale==="en"&&m.password===""){account.mnemonic={path:this.path,locale:"en",entropy:m.entropy}}return account};_HDNodeWallet_static=new WeakSet;fromSeed_fn=function(_seed,mnemonic){assertArgument(isBytesLike$2(_seed),"invalid seed","seed","[REDACTED]");const seed=getBytes(_seed,"seed");assertArgument(seed.length>=16&&seed.length<=64,"invalid seed","seed","[REDACTED]");const I=getBytes(computeHmac$1("sha512",MasterSecret$2,seed));const signingKey=new SigningKey$2(hexlify$2(I.slice(0,32)));return new _HDNodeWallet(_guard,signingKey,"0x00000000",hexlify$2(I.slice(32)),"m",0,0,mnemonic,null)};__privateAdd(_HDNodeWallet,_HDNodeWallet_static);let HDNodeWallet=_HDNodeWallet;class HDNodeVoidWallet extends VoidSigner{constructor(guard,address,publicKey,parentFingerprint,chainCode,path,index,depth,provider){super(address,provider);__publicField(this,"publicKey");__publicField(this,"fingerprint");__publicField(this,"parentFingerprint");__publicField(this,"chainCode");__publicField(this,"path");__publicField(this,"index");__publicField(this,"depth");assertPrivate(guard,_guard,"HDNodeVoidWallet");defineProperties(this,{publicKey:publicKey});const fingerprint=dataSlice(ripemd160$1(sha256$1(publicKey)),0,4);defineProperties(this,{publicKey:publicKey,fingerprint:fingerprint,parentFingerprint:parentFingerprint,chainCode:chainCode,path:path,index:index,depth:depth})}connect(provider){return new HDNodeVoidWallet(_guard,this.address,this.publicKey,this.parentFingerprint,this.chainCode,this.path,this.index,this.depth,provider)}get extendedKey(){assert$7(this.depth<256,"Depth too deep","UNSUPPORTED_OPERATION",{operation:"extendedKey"});return encodeBase58Check(concat$2(["0x0488B21E",zpad$1(this.depth,1),this.parentFingerprint,zpad$1(this.index,4),this.chainCode,this.publicKey]))}hasPath(){return this.path!=null}deriveChild(_index){const index=getNumber(_index,"index");assertArgument(index<=4294967295,"invalid index","index",index);let path=this.path;if(path){path+="/"+(index&~HardenedBit$2);if(index&HardenedBit$2){path+="'"}}const{IR:IR,IL:IL}=ser_I(index,this.chainCode,this.publicKey,null);const Ki=SigningKey$2.addPoints(IL,this.publicKey,true);const address=computeAddress$1(Ki);return new HDNodeVoidWallet(_guard,address,Ki,this.fingerprint,hexlify$2(IR),path,index,this.depth+1,this.provider)}derivePath(path){return derivePath(this,path)}}function isCrowdsaleJson(json){try{const data=JSON.parse(json);if(data.encseed){return true}}catch(error){}return false}function decryptCrowdsaleJson(json,_password){const data=JSON.parse(json);const password=getPassword$1(_password);const address=getAddress$2(spelunk(data,"ethaddr:string!"));const encseed=looseArrayify$1(spelunk(data,"encseed:string!"));assertArgument(encseed&&encseed.length%16===0,"invalid encseed","json",json);const key2=getBytes(pbkdf2$2(password,password,2e3,32,"sha256")).slice(0,16);const iv=encseed.slice(0,16);const encryptedSeed=encseed.slice(16);const aesCbc=new CBC(key2,iv);const seed=pkcs7Strip(getBytes(aesCbc.decrypt(encryptedSeed)));let seedHex="";for(let i=0;i<seed.length;i++){seedHex+=String.fromCharCode(seed[i])}return{address:address,privateKey:id$2(seedHex)}}function stall(duration){return new Promise(resolve=>{setTimeout(()=>{resolve()},duration)})}let Wallet$3=(_h=class extends BaseWallet{constructor(key2,provider){if(typeof key2==="string"&&!key2.startsWith("0x")){key2="0x"+key2}let signingKey=typeof key2==="string"?new SigningKey$2(key2):key2;super(signingKey,provider)}connect(provider){return new _h(this.signingKey,provider)}async encrypt(password,progressCallback){const account={address:this.address,privateKey:this.privateKey};return await encryptKeystoreJson(account,password,{progressCallback:progressCallback})}encryptSync(password){const account={address:this.address,privateKey:this.privateKey};return encryptKeystoreJsonSync(account,password)}static async fromEncryptedJson(json,password,progress){var _a2;let account=null;if(isKeystoreJson(json)){account=await decryptKeystoreJson(json,password,progress)}else if(isCrowdsaleJson(json)){if(progress){progress(0);await stall(0)}account=decryptCrowdsaleJson(json,password);if(progress){progress(1);await stall(0)}}return __privateMethod(_a2=_h,_Wallet_static,fromAccount_fn).call(_a2,account)}static fromEncryptedJsonSync(json,password){var _a2;let account=null;if(isKeystoreJson(json)){account=decryptKeystoreJsonSync(json,password)}else if(isCrowdsaleJson(json)){account=decryptCrowdsaleJson(json,password)}else{assertArgument(false,"invalid JSON wallet","json","[ REDACTED ]")}return __privateMethod(_a2=_h,_Wallet_static,fromAccount_fn).call(_a2,account)}static createRandom(provider){const wallet2=HDNodeWallet.createRandom();if(provider){return wallet2.connect(provider)}return wallet2}static fromPhrase(phrase,provider){const wallet2=HDNodeWallet.fromPhrase(phrase);if(provider){return wallet2.connect(provider)}return wallet2}},_Wallet_static=new WeakSet,fromAccount_fn=function(account){assertArgument(account,"invalid JSON wallet","json","[ REDACTED ]");if("mnemonic"in account&&account.mnemonic&&account.mnemonic.locale==="en"){const mnemonic=Mnemonic.fromEntropy(account.mnemonic.entropy);const wallet3=HDNodeWallet.fromMnemonic(mnemonic,account.mnemonic.path);if(wallet3.address===account.address&&wallet3.privateKey===account.privateKey){return wallet3}console.log("WARNING: JSON mismatch address/privateKey != mnemonic; fallback onto private key")}const wallet2=new _h(account.privateKey);assertArgument(wallet2.address===account.address,"address/privateKey mismatch","json","[ REDACTED ]");return wallet2},__privateAdd(_h,_Wallet_static),_h);class EventManager{constructor(){__publicField(this,"eventListeners",new Map)}on(eventName,listener){if(!this.eventListeners.has(eventName)){this.eventListeners.set(eventName,new Set)}this.eventListeners.get(eventName).add(listener);return this}once(eventName,listener){const onceWrapper=(...args)=>{this.off(eventName,onceWrapper);listener(...args)};return this.on(eventName,onceWrapper)}emit(eventName,...args){if(!this.eventListeners.has(eventName))return false;this.eventListeners.get(eventName).forEach(listener=>listener(...args));return true}listenerCount(eventName){var _a2;if(eventName===void 0){return Array.from(this.eventListeners.values()).reduce((acc,set)=>acc+set.size,0)}return((_a2=this.eventListeners.get(eventName))==null?void 0:_a2.size)||0}listeners(eventName){if(eventName===void 0){return Array.from(this.eventListeners.values()).flatMap(set=>Array.from(set))}return Array.from(this.eventListeners.get(eventName)||[])}off(eventName,listener){if(!this.eventListeners.has(eventName))return this;if(listener){this.eventListeners.get(eventName).delete(listener)}else{this.eventListeners.delete(eventName)}return this}removeAllListeners(eventName){if(eventName===void 0){this.eventListeners.clear()}else{this.eventListeners.delete(eventName)}return this}}const eventManager=new EventManager;let Signer$1=class Signer{};class EthereumBigNumber extends BigNumber$2{toWei(){let ethValue;if(typeof this._value==="number"||typeof this._value==="string"&&this._value.includes(".")){const valueString=this._value.toString();const[integerPart,fractionalPartRaw=""]=valueString.split(".");const fractionalPart=fractionalPartRaw.padEnd(18,"0").slice(0,18);ethValue=BigInt(integerPart+fractionalPart)}else{ethValue=EthereumBigNumber.toBigInt(this._value)??BigInt(0)}return new EthereumBigNumber(ethValue)}toGwei(){let ethValue;if(typeof this._value==="number"||typeof this._value==="string"&&this._value.includes(".")){const valueString=this._value.toString();const[integerPart,fractionalPartRaw=""]=valueString.split(".");const fractionalPart=fractionalPartRaw.padEnd(9,"0").slice(0,9);ethValue=BigInt(integerPart+fractionalPart)}else{ethValue=EthereumBigNumber.toBigInt(this._value)??BigInt(0)}return new EthereumBigNumber(ethValue)}toEther(){const weiValue=EthereumBigNumber.toBigInt(this._value)??BigInt(0);return new EthereumBigNumber(weiValue/BigInt("1000000000000000000"))}toEtherString(){const weiValue=EthereumBigNumber.toBigInt(this._value)??BigInt(0);const etherValue=weiValue/BigInt("1000000000000000000");const remainder=weiValue%BigInt("1000000000000000000");const fractionalPart=remainder.toString().padStart(18,"0").slice(0,18);const etherString=`${etherValue}.${fractionalPart}`;return etherString}static from(value){if(typeof value==="string"&&/^0x[0-9a-fA-F]+$/.test(value)){return new EthereumBigNumber(BigInt(value))}if(value&&typeof value==="object"&&"_hex"in value&&"_isBigNumber"in value){return new EthereumBigNumber(BigInt(value._hex))}return new EthereumBigNumber(BigNumber$2.toBigInt(value))}static fromWei(value){const weiValue=EthereumBigNumber.from(value);const ethValue=weiValue.div(BigInt("1000000000000000000"));return new EthereumBigNumber(ethValue.toString())}static fromGwei(value){const gweiValue=EthereumBigNumber.from(value);const ethValue=gweiValue.div(BigInt("1000000000"));return new EthereumBigNumber(ethValue.toString())}static fromEther(value){if(value===null||value===void 0){throw new Error("Value cannot be null or undefined")}let etherString;if(typeof value==="number"||typeof value==="string"){etherString=value.toString()}else if(typeof value==="bigint"){etherString=value.toString()}else if(value instanceof BigNumber$2){etherString=value.toString()}else if(typeof value==="object"&&"_hex"in value&&"_isBigNumber"in value){etherString=BigInt(value._hex).toString()}else{throw new Error("Unsupported type for BigNumberish value")}if(!etherString.includes(".")){etherString+=".0"}const[integerPart,fractionalPart]=etherString.split(".");const fractionalPartPadded=(fractionalPart+"0".repeat(18)).slice(0,18);const weiValue=BigInt(integerPart+fractionalPartPadded);return new EthereumBigNumber(weiValue)}static toWei(value){let ethValue;if(typeof value==="number"||typeof value==="string"&&value.includes(".")){const valueString=value.toString();const[integerPart,fractionalPartRaw=""]=valueString.split(".");const fractionalPart=fractionalPartRaw.padEnd(18,"0").slice(0,18);ethValue=BigInt(integerPart+fractionalPart)}else{ethValue=EthereumBigNumber.toBigInt(value)??BigInt(0)}return new EthereumBigNumber(ethValue)}static toGwei(value){let ethValue;if(typeof value==="number"||typeof value==="string"&&value.includes(".")){const valueString=value.toString();const[integerPart,fractionalPartRaw=""]=valueString.split(".");const fractionalPart=fractionalPartRaw.padEnd(9,"0").slice(0,9);ethValue=BigInt(integerPart+fractionalPart)}else{ethValue=EthereumBigNumber.toBigInt(value)??BigInt(0)}return new EthereumBigNumber(ethValue)}static toEther(value){const weiValue=EthereumBigNumber.from(value).toBigInt()??BigInt(0);return new EthereumBigNumber(weiValue/BigInt("1000000000000000000"))}static toEtherString(value){const weiValue=EthereumBigNumber.from(value).toBigInt()??BigInt(0);const etherValue=weiValue/BigInt("1000000000000000000");const remainder=weiValue%BigInt("1000000000000000000");const fractionalPart=remainder.toString().padStart(18,"0").slice(0,18);const etherString=`${etherValue}.${fractionalPart}`;return etherString}static toFiat(value,price){const etherValue=parseFloat(EthereumBigNumber.toEtherString(value));if(isNaN(etherValue)){throw new Error("Invalid BigNumberish value")}return etherValue*price}static toFormattedFiat(value,price,currencyCode,locale=""){const fiatValue=EthereumBigNumber.toFiat(value,price);const formatter=new Intl.NumberFormat(locale||void 0,{style:"currency",currency:currencyCode});return formatter.format(fiatValue)}static toHex(value){const bigintValue=BigNumber$2.toBigInt(value);if(bigintValue===null){throw new Error("Invalid BigNumberish value")}let hexString=bigintValue.toString(16);if(hexString.length%2!==0){hexString="0"+hexString}return"0x"+hexString}}class AbstractProvider{constructor(name,blockchains,chainIds,blockchain,chainId,provider){__publicField(this,"blockchains",[]);__publicField(this,"blockchain","Ethereum");__publicField(this,"chainIds",[1,11155111]);__publicField(this,"chainId",1);__publicField(this,"name");__publicField(this,"signer");__publicField(this,"provider",null);this.name=name;this.blockchains=blockchains;this.chainIds=chainIds;this.blockchain=blockchain;this.chainId=chainId;this.provider=provider}getName(){return this.name}getProvider(){if(!this.provider){return null}return this.provider}getSigner(){if(!this.signer){return null}return this.signer}getSignerNative(){if(!this.signer){return null}return this.signer.getSigner()}setProvider(provider){if(!provider)throw new Error("Provider is not valid");this.provider=provider}setSigner(signer){if(!this.signer)throw new Error("Signer is not valid");this.signer=signer}async signTransaction(transaction){if(!this.signer){throw new Error("Signer not initialized")}return await this.signer.signTransaction(transaction)}async signTypedData(domain,types,value){if(!this.signer){throw new Error("Signer not initialized")}return await this.signer.signTypedData(domain,types,value)}async signMessage(message){if(!this.signer){throw new Error("Signer not initialized")}return await this.signer.signMessage(message)}on(eventName,listener){eventManager.on(eventName,listener);return this}once(eventName,listener){eventManager.once(eventName,listener);return this}emit(eventName,...args){return eventManager.emit(eventName,...args)}listenerCount(eventName){return eventManager.listenerCount(eventName)}listeners(eventName){return eventManager.listeners(eventName)}off(eventName,listener){eventManager.off(eventName,listener);return this}removeAllListeners(eventName){eventManager.removeAllListeners(eventName);return this}async getFeeData(){const[block,gasPrice]=await Promise.all([this.getBlock("latest"),this.getGasPrice()]);let lastBaseFeePerGas=new EthereumBigNumber(0);let maxFeePerGas=new EthereumBigNumber(0);let maxPriorityFeePerGas=new EthereumBigNumber(0);if(block&&block.baseFeePerGas){lastBaseFeePerGas=EthereumBigNumber.from(block.baseFeePerGas);maxPriorityFeePerGas=EthereumBigNumber.fromGwei(1.5);maxFeePerGas=EthereumBigNumber.from(lastBaseFeePerGas.mul(2).add(maxPriorityFeePerGas))}const gasPriceGwei=EthereumBigNumber.from(gasPrice).div(1e9);return{lastBaseFeePerGas:lastBaseFeePerGas.toBigInt()??BigInt(0),maxFeePerGas:maxFeePerGas.toBigInt()??BigInt(0),maxPriorityFeePerGas:maxPriorityFeePerGas.toBigInt()??BigInt(0),gasPrice:gasPriceGwei}}addListener(eventName,listener){return this.on(eventName,listener)}removeListener(eventName,listener){return this.off(eventName,listener)}getBlockchains(){return this.blockchains}setBlockchains(blockchains){this.blockchains=blockchains}getBlockchain(){return this.blockchain}getChainIds(){return this.chainIds}setChainIds(chainIds){this.chainIds=chainIds}async setChainId(chainId){this.chainId=chainId}getChainId(){return this.chainId}}var sha3$1={exports:{}};var hasRequiredSha3;function requireSha3(){if(hasRequiredSha3)return sha3$1.exports;hasRequiredSha3=1;(function(module2){(function(){var INPUT_ERROR="input is invalid type";var FINALIZE_ERROR="finalize already called";var WINDOW=typeof window==="object";var root2=WINDOW?window:{};if(root2.JS_SHA3_NO_WINDOW){WINDOW=false}var WEB_WORKER=!WINDOW&&typeof self==="object";var NODE_JS=!root2.JS_SHA3_NO_NODE_JS&&typeof process$1==="object"&&process$1.versions&&process$1.versions.node;if(NODE_JS){root2=commonjsGlobal}else if(WEB_WORKER){root2=self}var COMMON_JS=!root2.JS_SHA3_NO_COMMON_JS&&true&&module2.exports;var ARRAY_BUFFER=!root2.JS_SHA3_NO_ARRAY_BUFFER&&typeof ArrayBuffer!=="undefined";var HEX_CHARS="0123456789abcdef".split("");var SHAKE_PADDING=[31,7936,2031616,520093696];var CSHAKE_PADDING=[4,1024,262144,67108864];var KECCAK_PADDING=[1,256,65536,16777216];var PADDING=[6,1536,393216,100663296];var SHIFT=[0,8,16,24];var RC=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648];var BITS=[224,256,384,512];var SHAKE_BITS=[128,256];var OUTPUT_TYPES=["hex","buffer","arrayBuffer","array","digest"];var CSHAKE_BYTEPAD={128:168,256:136};if(root2.JS_SHA3_NO_NODE_JS||!Array.isArray){Array.isArray=function(obj){return Object.prototype.toString.call(obj)==="[object Array]"}}if(ARRAY_BUFFER&&(root2.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW||!ArrayBuffer.isView)){ArrayBuffer.isView=function(obj){return typeof obj==="object"&&obj.buffer&&obj.buffer.constructor===ArrayBuffer}}var createOutputMethod=function(bits2,padding2,outputType){return function(message){return new Keccak2(bits2,padding2,bits2).update(message)[outputType]()}};var createShakeOutputMethod=function(bits2,padding2,outputType){return function(message,outputBits){return new Keccak2(bits2,padding2,outputBits).update(message)[outputType]()}};var createCshakeOutputMethod=function(bits2,padding2,outputType){return function(message,outputBits,n2,s){return methods["cshake"+bits2].update(message,outputBits,n2,s)[outputType]()}};var createKmacOutputMethod=function(bits2,padding2,outputType){return function(key2,message,outputBits,s){return methods["kmac"+bits2].update(key2,message,outputBits,s)[outputType]()}};var createOutputMethods=function(method,createMethod2,bits2,padding2){for(var i2=0;i2<OUTPUT_TYPES.length;++i2){var type=OUTPUT_TYPES[i2];method[type]=createMethod2(bits2,padding2,type)}return method};var createMethod=function(bits2,padding2){var method=createOutputMethod(bits2,padding2,"hex");method.create=function(){return new Keccak2(bits2,padding2,bits2)};method.update=function(message){return method.create().update(message)};return createOutputMethods(method,createOutputMethod,bits2,padding2)};var createShakeMethod=function(bits2,padding2){var method=createShakeOutputMethod(bits2,padding2,"hex");method.create=function(outputBits){return new Keccak2(bits2,padding2,outputBits)};method.update=function(message,outputBits){return method.create(outputBits).update(message)};return createOutputMethods(method,createShakeOutputMethod,bits2,padding2)};var createCshakeMethod=function(bits2,padding2){var w=CSHAKE_BYTEPAD[bits2];var method=createCshakeOutputMethod(bits2,padding2,"hex");method.create=function(outputBits,n2,s){if(!n2&&!s){return methods["shake"+bits2].create(outputBits)}else{return new Keccak2(bits2,padding2,outputBits).bytepad([n2,s],w)}};method.update=function(message,outputBits,n2,s){return method.create(outputBits,n2,s).update(message)};return createOutputMethods(method,createCshakeOutputMethod,bits2,padding2)};var createKmacMethod=function(bits2,padding2){var w=CSHAKE_BYTEPAD[bits2];var method=createKmacOutputMethod(bits2,padding2,"hex");method.create=function(key2,outputBits,s){return new Kmac(bits2,padding2,outputBits).bytepad(["KMAC",s],w).bytepad([key2],w)};method.update=function(key2,message,outputBits,s){return method.create(key2,outputBits,s).update(message)};return createOutputMethods(method,createKmacOutputMethod,bits2,padding2)};var algorithms=[{name:"keccak",padding:KECCAK_PADDING,bits:BITS,createMethod:createMethod},{name:"sha3",padding:PADDING,bits:BITS,createMethod:createMethod},{name:"shake",padding:SHAKE_PADDING,bits:SHAKE_BITS,createMethod:createShakeMethod},{name:"cshake",padding:CSHAKE_PADDING,bits:SHAKE_BITS,createMethod:createCshakeMethod},{name:"kmac",padding:CSHAKE_PADDING,bits:SHAKE_BITS,createMethod:createKmacMethod}];var methods={},methodNames=[];for(var i=0;i<algorithms.length;++i){var algorithm=algorithms[i];var bits=algorithm.bits;for(var j=0;j<bits.length;++j){var methodName=algorithm.name+"_"+bits[j];methodNames.push(methodName);methods[methodName]=algorithm.createMethod(bits[j],algorithm.padding);if(algorithm.name!=="sha3"){var newMethodName=algorithm.name+bits[j];methodNames.push(newMethodName);methods[newMethodName]=methods[methodName]}}}function Keccak2(bits2,padding2,outputBits){this.blocks=[];this.s=[];this.padding=padding2;this.outputBits=outputBits;this.reset=true;this.finalized=false;this.block=0;this.start=0;this.blockCount=1600-(bits2<<1)>>5;this.byteCount=this.blockCount<<2;this.outputBlocks=outputBits>>5;this.extraBytes=(outputBits&31)>>3;for(var i2=0;i2<50;++i2){this.s[i2]=0}}Keccak2.prototype.update=function(message){if(this.finalized){throw new Error(FINALIZE_ERROR)}var notString,type=typeof message;if(type!=="string"){if(type==="object"){if(message===null){throw new Error(INPUT_ERROR)}else if(ARRAY_BUFFER&&message.constructor===ArrayBuffer){message=new Uint8Array(message)}else if(!Array.isArray(message)){if(!ARRAY_BUFFER||!ArrayBuffer.isView(message)){throw new Error(INPUT_ERROR)}}}else{throw new Error(INPUT_ERROR)}notString=true}var blocks=this.blocks,byteCount=this.byteCount,length=message.length,blockCount=this.blockCount,index=0,s=this.s,i2,code;while(index<length){if(this.reset){this.reset=false;blocks[0]=this.block;for(i2=1;i2<blockCount+1;++i2){blocks[i2]=0}}if(notString){for(i2=this.start;index<length&&i2<byteCount;++index){blocks[i2>>2]|=message[index]<<SHIFT[i2++&3]}}else{for(i2=this.start;index<length&&i2<byteCount;++index){code=message.charCodeAt(index);if(code<128){blocks[i2>>2]|=code<<SHIFT[i2++&3]}else if(code<2048){blocks[i2>>2]|=(192|code>>6)<<SHIFT[i2++&3];blocks[i2>>2]|=(128|code&63)<<SHIFT[i2++&3]}else if(code<55296||code>=57344){blocks[i2>>2]|=(224|code>>12)<<SHIFT[i2++&3];blocks[i2>>2]|=(128|code>>6&63)<<SHIFT[i2++&3];blocks[i2>>2]|=(128|code&63)<<SHIFT[i2++&3]}else{code=65536+((code&1023)<<10|message.charCodeAt(++index)&1023);blocks[i2>>2]|=(240|code>>18)<<SHIFT[i2++&3];blocks[i2>>2]|=(128|code>>12&63)<<SHIFT[i2++&3];blocks[i2>>2]|=(128|code>>6&63)<<SHIFT[i2++&3];blocks[i2>>2]|=(128|code&63)<<SHIFT[i2++&3]}}}this.lastByteIndex=i2;if(i2>=byteCount){this.start=i2-byteCount;this.block=blocks[blockCount];for(i2=0;i2<blockCount;++i2){s[i2]^=blocks[i2]}f2(s);this.reset=true}else{this.start=i2}}return this};Keccak2.prototype.encode=function(x,right){var o=x&255,n2=1;var bytes2=[o];x=x>>8;o=x&255;while(o>0){bytes2.unshift(o);x=x>>8;o=x&255;++n2}if(right){bytes2.push(n2)}else{bytes2.unshift(n2)}this.update(bytes2);return bytes2.length};Keccak2.prototype.encodeString=function(str){var notString,type=typeof str;if(type!=="string"){if(type==="object"){if(str===null){throw new Error(INPUT_ERROR)}else if(ARRAY_BUFFER&&str.constructor===ArrayBuffer){str=new Uint8Array(str)}else if(!Array.isArray(str)){if(!ARRAY_BUFFER||!ArrayBuffer.isView(str)){throw new Error(INPUT_ERROR)}}}else{throw new Error(INPUT_ERROR)}notString=true}var bytes2=0,length=str.length;if(notString){bytes2=length}else{for(var i2=0;i2<str.length;++i2){var code=str.charCodeAt(i2);if(code<128){bytes2+=1}else if(code<2048){bytes2+=2}else if(code<55296||code>=57344){bytes2+=3}else{code=65536+((code&1023)<<10|str.charCodeAt(++i2)&1023);bytes2+=4}}}bytes2+=this.encode(bytes2*8);this.update(str);return bytes2};Keccak2.prototype.bytepad=function(strs,w){var bytes2=this.encode(w);for(var i2=0;i2<strs.length;++i2){bytes2+=this.encodeString(strs[i2])}var paddingBytes=w-bytes2%w;var zeros2=[];zeros2.length=paddingBytes;this.update(zeros2);return this};Keccak2.prototype.finalize=function(){if(this.finalized){return}this.finalized=true;var blocks=this.blocks,i2=this.lastByteIndex,blockCount=this.blockCount,s=this.s;blocks[i2>>2]|=this.padding[i2&3];if(this.lastByteIndex===this.byteCount){blocks[0]=blocks[blockCount];for(i2=1;i2<blockCount+1;++i2){blocks[i2]=0}}blocks[blockCount-1]|=2147483648;for(i2=0;i2<blockCount;++i2){s[i2]^=blocks[i2]}f2(s)};Keccak2.prototype.toString=Keccak2.prototype.hex=function(){this.finalize();var blockCount=this.blockCount,s=this.s,outputBlocks=this.outputBlocks,extraBytes=this.extraBytes,i2=0,j2=0;var hex="",block;while(j2<outputBlocks){for(i2=0;i2<blockCount&&j2<outputBlocks;++i2,++j2){block=s[i2];hex+=HEX_CHARS[block>>4&15]+HEX_CHARS[block&15]+HEX_CHARS[block>>12&15]+HEX_CHARS[block>>8&15]+HEX_CHARS[block>>20&15]+HEX_CHARS[block>>16&15]+HEX_CHARS[block>>28&15]+HEX_CHARS[block>>24&15]}if(j2%blockCount===0){f2(s);i2=0}}if(extraBytes){block=s[i2];hex+=HEX_CHARS[block>>4&15]+HEX_CHARS[block&15];if(extraBytes>1){hex+=HEX_CHARS[block>>12&15]+HEX_CHARS[block>>8&15]}if(extraBytes>2){hex+=HEX_CHARS[block>>20&15]+HEX_CHARS[block>>16&15]}}return hex};Keccak2.prototype.arrayBuffer=function(){this.finalize();var blockCount=this.blockCount,s=this.s,outputBlocks=this.outputBlocks,extraBytes=this.extraBytes,i2=0,j2=0;var bytes2=this.outputBits>>3;var buffer;if(extraBytes){buffer=new ArrayBuffer(outputBlocks+1<<2)}else{buffer=new ArrayBuffer(bytes2)}var array=new Uint32Array(buffer);while(j2<outputBlocks){for(i2=0;i2<blockCount&&j2<outputBlocks;++i2,++j2){array[j2]=s[i2]}if(j2%blockCount===0){f2(s)}}if(extraBytes){array[i2]=s[i2];buffer=buffer.slice(0,bytes2)}return buffer};Keccak2.prototype.buffer=Keccak2.prototype.arrayBuffer;Keccak2.prototype.digest=Keccak2.prototype.array=function(){this.finalize();var blockCount=this.blockCount,s=this.s,outputBlocks=this.outputBlocks,extraBytes=this.extraBytes,i2=0,j2=0;var array=[],offset,block;while(j2<outputBlocks){for(i2=0;i2<blockCount&&j2<outputBlocks;++i2,++j2){offset=j2<<2;block=s[i2];array[offset]=block&255;array[offset+1]=block>>8&255;array[offset+2]=block>>16&255;array[offset+3]=block>>24&255}if(j2%blockCount===0){f2(s)}}if(extraBytes){offset=j2<<2;block=s[i2];array[offset]=block&255;if(extraBytes>1){array[offset+1]=block>>8&255}if(extraBytes>2){array[offset+2]=block>>16&255}}return array};function Kmac(bits2,padding2,outputBits){Keccak2.call(this,bits2,padding2,outputBits)}Kmac.prototype=new Keccak2;Kmac.prototype.finalize=function(){this.encode(this.outputBits,true);return Keccak2.prototype.finalize.call(this)};var f2=function(s){var h,l,n2,c0,c1,c2,c3,c4,c5,c6,c7,c8,c9,b0,b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15,b16,b17,b18,b19,b20,b21,b22,b23,b24,b25,b26,b27,b28,b29,b30,b31,b32,b33,b34,b35,b36,b37,b38,b39,b40,b41,b42,b43,b44,b45,b46,b47,b48,b49;for(n2=0;n2<48;n2+=2){c0=s[0]^s[10]^s[20]^s[30]^s[40];c1=s[1]^s[11]^s[21]^s[31]^s[41];c2=s[2]^s[12]^s[22]^s[32]^s[42];c3=s[3]^s[13]^s[23]^s[33]^s[43];c4=s[4]^s[14]^s[24]^s[34]^s[44];c5=s[5]^s[15]^s[25]^s[35]^s[45];c6=s[6]^s[16]^s[26]^s[36]^s[46];c7=s[7]^s[17]^s[27]^s[37]^s[47];c8=s[8]^s[18]^s[28]^s[38]^s[48];c9=s[9]^s[19]^s[29]^s[39]^s[49];h=c8^(c2<<1|c3>>>31);l=c9^(c3<<1|c2>>>31);s[0]^=h;s[1]^=l;s[10]^=h;s[11]^=l;s[20]^=h;s[21]^=l;s[30]^=h;s[31]^=l;s[40]^=h;s[41]^=l;h=c0^(c4<<1|c5>>>31);l=c1^(c5<<1|c4>>>31);s[2]^=h;s[3]^=l;s[12]^=h;s[13]^=l;s[22]^=h;s[23]^=l;s[32]^=h;s[33]^=l;s[42]^=h;s[43]^=l;h=c2^(c6<<1|c7>>>31);l=c3^(c7<<1|c6>>>31);s[4]^=h;s[5]^=l;s[14]^=h;s[15]^=l;s[24]^=h;s[25]^=l;s[34]^=h;s[35]^=l;s[44]^=h;s[45]^=l;h=c4^(c8<<1|c9>>>31);l=c5^(c9<<1|c8>>>31);s[6]^=h;s[7]^=l;s[16]^=h;s[17]^=l;s[26]^=h;s[27]^=l;s[36]^=h;s[37]^=l;s[46]^=h;s[47]^=l;h=c6^(c0<<1|c1>>>31);l=c7^(c1<<1|c0>>>31);s[8]^=h;s[9]^=l;s[18]^=h;s[19]^=l;s[28]^=h;s[29]^=l;s[38]^=h;s[39]^=l;s[48]^=h;s[49]^=l;b0=s[0];b1=s[1];b32=s[11]<<4|s[10]>>>28;b33=s[10]<<4|s[11]>>>28;b14=s[20]<<3|s[21]>>>29;b15=s[21]<<3|s[20]>>>29;b46=s[31]<<9|s[30]>>>23;b47=s[30]<<9|s[31]>>>23;b28=s[40]<<18|s[41]>>>14;b29=s[41]<<18|s[40]>>>14;b20=s[2]<<1|s[3]>>>31;b21=s[3]<<1|s[2]>>>31;b2=s[13]<<12|s[12]>>>20;b3=s[12]<<12|s[13]>>>20;b34=s[22]<<10|s[23]>>>22;b35=s[23]<<10|s[22]>>>22;b16=s[33]<<13|s[32]>>>19;b17=s[32]<<13|s[33]>>>19;b48=s[42]<<2|s[43]>>>30;b49=s[43]<<2|s[42]>>>30;b40=s[5]<<30|s[4]>>>2;b41=s[4]<<30|s[5]>>>2;b22=s[14]<<6|s[15]>>>26;b23=s[15]<<6|s[14]>>>26;b4=s[25]<<11|s[24]>>>21;b5=s[24]<<11|s[25]>>>21;b36=s[34]<<15|s[35]>>>17;b37=s[35]<<15|s[34]>>>17;b18=s[45]<<29|s[44]>>>3;b19=s[44]<<29|s[45]>>>3;b10=s[6]<<28|s[7]>>>4;b11=s[7]<<28|s[6]>>>4;b42=s[17]<<23|s[16]>>>9;b43=s[16]<<23|s[17]>>>9;b24=s[26]<<25|s[27]>>>7;b25=s[27]<<25|s[26]>>>7;b6=s[36]<<21|s[37]>>>11;b7=s[37]<<21|s[36]>>>11;b38=s[47]<<24|s[46]>>>8;b39=s[46]<<24|s[47]>>>8;b30=s[8]<<27|s[9]>>>5;b31=s[9]<<27|s[8]>>>5;b12=s[18]<<20|s[19]>>>12;b13=s[19]<<20|s[18]>>>12;b44=s[29]<<7|s[28]>>>25;b45=s[28]<<7|s[29]>>>25;b26=s[38]<<8|s[39]>>>24;b27=s[39]<<8|s[38]>>>24;b8=s[48]<<14|s[49]>>>18;b9=s[49]<<14|s[48]>>>18;s[0]=b0^~b2&b4;s[1]=b1^~b3&b5;s[10]=b10^~b12&b14;s[11]=b11^~b13&b15;s[20]=b20^~b22&b24;s[21]=b21^~b23&b25;s[30]=b30^~b32&b34;s[31]=b31^~b33&b35;s[40]=b40^~b42&b44;s[41]=b41^~b43&b45;s[2]=b2^~b4&b6;s[3]=b3^~b5&b7;s[12]=b12^~b14&b16;s[13]=b13^~b15&b17;s[22]=b22^~b24&b26;s[23]=b23^~b25&b27;s[32]=b32^~b34&b36;s[33]=b33^~b35&b37;s[42]=b42^~b44&b46;s[43]=b43^~b45&b47;s[4]=b4^~b6&b8;s[5]=b5^~b7&b9;s[14]=b14^~b16&b18;s[15]=b15^~b17&b19;s[24]=b24^~b26&b28;s[25]=b25^~b27&b29;s[34]=b34^~b36&b38;s[35]=b35^~b37&b39;s[44]=b44^~b46&b48;s[45]=b45^~b47&b49;s[6]=b6^~b8&b0;s[7]=b7^~b9&b1;s[16]=b16^~b18&b10;s[17]=b17^~b19&b11;s[26]=b26^~b28&b20;s[27]=b27^~b29&b21;s[36]=b36^~b38&b30;s[37]=b37^~b39&b31;s[46]=b46^~b48&b40;s[47]=b47^~b49&b41;s[8]=b8^~b0&b2;s[9]=b9^~b1&b3;s[18]=b18^~b10&b12;s[19]=b19^~b11&b13;s[28]=b28^~b20&b22;s[29]=b29^~b21&b23;s[38]=b38^~b30&b32;s[39]=b39^~b31&b33;s[48]=b48^~b40&b42;s[49]=b49^~b41&b43;s[0]^=RC[n2];s[1]^=RC[n2+1]}};if(COMMON_JS){module2.exports=methods}else{for(i=0;i<methodNames.length;++i){root2[methodNames[i]]=methods[methodNames[i]]}}})()})(sha3$1);return sha3$1.exports}var sha3Exports=requireSha3();const sha3=getDefaultExportFromCjs(sha3Exports);const version$s="logger/5.8.0";let _permanentCensorErrors$2=false;let _censorErrors$2=false;const LogLevels$2={debug:1,default:2,info:2,warning:3,error:4,off:5};let _logLevel$2=LogLevels$2["default"];let _globalLogger$2=null;function _checkNormalize$2(){try{const missing=[];["NFD","NFC","NFKD","NFKC"].forEach(form=>{try{if("test".normalize(form)!=="test"){throw new Error("bad normalize")}}catch(error){missing.push(form)}});if(missing.length){throw new Error("missing "+missing.join(", "))}if(String.fromCharCode(233).normalize("NFD")!==String.fromCharCode(101,769)){throw new Error("broken implementation")}}catch(error){return error.message}return null}const _normalizeError$2=_checkNormalize$2();var LogLevel$3;(function(LogLevel2){LogLevel2["DEBUG"]="DEBUG";LogLevel2["INFO"]="INFO";LogLevel2["WARNING"]="WARNING";LogLevel2["ERROR"]="ERROR";LogLevel2["OFF"]="OFF"})(LogLevel$3||(LogLevel$3={}));var ErrorCode$2;(function(ErrorCode2){ErrorCode2["UNKNOWN_ERROR"]="UNKNOWN_ERROR";ErrorCode2["NOT_IMPLEMENTED"]="NOT_IMPLEMENTED";ErrorCode2["UNSUPPORTED_OPERATION"]="UNSUPPORTED_OPERATION";ErrorCode2["NETWORK_ERROR"]="NETWORK_ERROR";ErrorCode2["SERVER_ERROR"]="SERVER_ERROR";ErrorCode2["TIMEOUT"]="TIMEOUT";ErrorCode2["BUFFER_OVERRUN"]="BUFFER_OVERRUN";ErrorCode2["NUMERIC_FAULT"]="NUMERIC_FAULT";ErrorCode2["MISSING_NEW"]="MISSING_NEW";ErrorCode2["INVALID_ARGUMENT"]="INVALID_ARGUMENT";ErrorCode2["MISSING_ARGUMENT"]="MISSING_ARGUMENT";ErrorCode2["UNEXPECTED_ARGUMENT"]="UNEXPECTED_ARGUMENT";ErrorCode2["CALL_EXCEPTION"]="CALL_EXCEPTION";ErrorCode2["INSUFFICIENT_FUNDS"]="INSUFFICIENT_FUNDS";ErrorCode2["NONCE_EXPIRED"]="NONCE_EXPIRED";ErrorCode2["REPLACEMENT_UNDERPRICED"]="REPLACEMENT_UNDERPRICED";ErrorCode2["UNPREDICTABLE_GAS_LIMIT"]="UNPREDICTABLE_GAS_LIMIT";ErrorCode2["TRANSACTION_REPLACED"]="TRANSACTION_REPLACED";ErrorCode2["ACTION_REJECTED"]="ACTION_REJECTED"})(ErrorCode$2||(ErrorCode$2={}));const HEX$2="0123456789abcdef";let Logger$3=class Logger{constructor(version2){Object.defineProperty(this,"version",{enumerable:true,value:version2,writable:false})}_log(logLevel,args){const level=logLevel.toLowerCase();if(LogLevels$2[level]==null){this.throwArgumentError("invalid log level name","logLevel",logLevel)}if(_logLevel$2>LogLevels$2[level]){return}console.log.apply(console,args)}debug(...args){this._log(Logger.levels.DEBUG,args)}info(...args){this._log(Logger.levels.INFO,args)}warn(...args){this._log(Logger.levels.WARNING,args)}makeError(message,code,params){if(_censorErrors$2){return this.makeError("censored error",code,{})}if(!code){code=Logger.errors.UNKNOWN_ERROR}if(!params){params={}}const messageDetails=[];Object.keys(params).forEach(key2=>{const value=params[key2];try{if(value instanceof Uint8Array){let hex="";for(let i=0;i<value.length;i++){hex+=HEX$2[value[i]>>4];hex+=HEX$2[value[i]&15]}messageDetails.push(key2+"=Uint8Array(0x"+hex+")")}else{messageDetails.push(key2+"="+JSON.stringify(value))}}catch(error2){messageDetails.push(key2+"="+JSON.stringify(params[key2].toString()))}});messageDetails.push(`code=${code}`);messageDetails.push(`version=${this.version}`);const reason=message;let url="";switch(code){case ErrorCode$2.NUMERIC_FAULT:{url="NUMERIC_FAULT";const fault=message;switch(fault){case"overflow":case"underflow":case"division-by-zero":url+="-"+fault;break;case"negative-power":case"negative-width":url+="-unsupported";break;case"unbound-bitwise-result":url+="-unbound-result";break}break}case ErrorCode$2.CALL_EXCEPTION:case ErrorCode$2.INSUFFICIENT_FUNDS:case ErrorCode$2.MISSING_NEW:case ErrorCode$2.NONCE_EXPIRED:case ErrorCode$2.REPLACEMENT_UNDERPRICED:case ErrorCode$2.TRANSACTION_REPLACED:case ErrorCode$2.UNPREDICTABLE_GAS_LIMIT:url=code;break}if(url){message+=" [ See: https://links.ethers.org/v5-errors-"+url+" ]"}if(messageDetails.length){message+=" ("+messageDetails.join(", ")+")"}const error=new Error(message);error.reason=reason;error.code=code;Object.keys(params).forEach(function(key2){error[key2]=params[key2]});return error}throwError(message,code,params){throw this.makeError(message,code,params)}throwArgumentError(message,name,value){return this.throwError(message,Logger.errors.INVALID_ARGUMENT,{argument:name,value:value})}assert(condition,message,code,params){if(!!condition){return}this.throwError(message,code,params)}assertArgument(condition,message,name,value){if(!!condition){return}this.throwArgumentError(message,name,value)}checkNormalize(message){if(_normalizeError$2){this.throwError("platform missing String.prototype.normalize",Logger.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:_normalizeError$2})}}checkSafeUint53(value,message){if(typeof value!=="number"){return}if(message==null){message="value not safe"}if(value<0||value>=9007199254740991){this.throwError(message,Logger.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value:value})}if(value%1){this.throwError(message,Logger.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value:value})}}checkArgumentCount(count,expectedCount,message){if(message){message=": "+message}else{message=""}if(count<expectedCount){this.throwError("missing argument"+message,Logger.errors.MISSING_ARGUMENT,{count:count,expectedCount:expectedCount})}if(count>expectedCount){this.throwError("too many arguments"+message,Logger.errors.UNEXPECTED_ARGUMENT,{count:count,expectedCount:expectedCount})}}checkNew(target,kind){if(target===Object||target==null){this.throwError("missing new",Logger.errors.MISSING_NEW,{name:kind.name})}}checkAbstract(target,kind){if(target===kind){this.throwError("cannot instantiate abstract class "+JSON.stringify(kind.name)+" directly; use a sub-class",Logger.errors.UNSUPPORTED_OPERATION,{name:target.name,operation:"new"})}else if(target===Object||target==null){this.throwError("missing new",Logger.errors.MISSING_NEW,{name:kind.name})}}static globalLogger(){if(!_globalLogger$2){_globalLogger$2=new Logger(version$s)}return _globalLogger$2}static setCensorship(censorship,permanent){if(!censorship&&permanent){this.globalLogger().throwError("cannot permanently disable censorship",Logger.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}if(_permanentCensorErrors$2){if(!censorship){return}this.globalLogger().throwError("error censorship permanent",Logger.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}_censorErrors$2=!!censorship;_permanentCensorErrors$2=!!permanent}static setLogLevel(logLevel){const level=LogLevels$2[logLevel.toLowerCase()];if(level==null){Logger.globalLogger().warn("invalid log level - "+logLevel);return}_logLevel$2=level}static from(version2){return new Logger(version2)}};Logger$3.errors=ErrorCode$2;Logger$3.levels=LogLevel$3;const version$r="bytes/5.8.0";const logger$r=new Logger$3(version$r);function isHexable$1(value){return!!value.toHexString}function addSlice$1(array){if(array.slice){return array}array.slice=function(){const args=Array.prototype.slice.call(arguments);return addSlice$1(new Uint8Array(Array.prototype.slice.apply(array,args)))};return array}function isBytesLike$1(value){return isHexString$1(value)&&!(value.length%2)||isBytes$1(value)}function isInteger$1(value){return typeof value==="number"&&value==value&&value%1===0}function isBytes$1(value){if(value==null){return false}if(value.constructor===Uint8Array){return true}if(typeof value==="string"){return false}if(!isInteger$1(value.length)||value.length<0){return false}for(let i=0;i<value.length;i++){const v=value[i];if(!isInteger$1(v)||v<0||v>=256){return false}}return true}function arrayify$1(value,options){if(!options){options={}}if(typeof value==="number"){logger$r.checkSafeUint53(value,"invalid arrayify value");const result=[];while(value){result.unshift(value&255);value=parseInt(String(value/256))}if(result.length===0){result.push(0)}return addSlice$1(new Uint8Array(result))}if(options.allowMissingPrefix&&typeof value==="string"&&value.substring(0,2)!=="0x"){value="0x"+value}if(isHexable$1(value)){value=value.toHexString()}if(isHexString$1(value)){let hex=value.substring(2);if(hex.length%2){if(options.hexPad==="left"){hex="0"+hex}else if(options.hexPad==="right"){hex+="0"}else{logger$r.throwArgumentError("hex data is odd-length","value",value)}}const result=[];for(let i=0;i<hex.length;i+=2){result.push(parseInt(hex.substring(i,i+2),16))}return addSlice$1(new Uint8Array(result))}if(isBytes$1(value)){return addSlice$1(new Uint8Array(value))}return logger$r.throwArgumentError("invalid arrayify value","value",value)}function concat$1(items){const objects=items.map(item=>arrayify$1(item));const length=objects.reduce((accum,item)=>accum+item.length,0);const result=new Uint8Array(length);objects.reduce((offset,object2)=>{result.set(object2,offset);return offset+object2.length},0);return addSlice$1(result)}function stripZeros$1(value){let result=arrayify$1(value);if(result.length===0){return result}let start=0;while(start<result.length&&result[start]===0){start++}if(start){result=result.slice(start)}return result}function zeroPad$1(value,length){value=arrayify$1(value);if(value.length>length){logger$r.throwArgumentError("value out of range","value",arguments[0])}const result=new Uint8Array(length);result.set(value,length-value.length);return addSlice$1(result)}function isHexString$1(value,length){if(typeof value!=="string"||!value.match(/^0x[0-9A-Fa-f]*$/)){return false}if(length&&value.length!==2+2*length){return false}return true}const HexCharacters$1="0123456789abcdef";function hexlify$1(value,options){if(!options){options={}}if(typeof value==="number"){logger$r.checkSafeUint53(value,"invalid hexlify value");let hex="";while(value){hex=HexCharacters$1[value&15]+hex;value=Math.floor(value/16)}if(hex.length){if(hex.length%2){hex="0"+hex}return"0x"+hex}return"0x00"}if(typeof value==="bigint"){value=value.toString(16);if(value.length%2){return"0x0"+value}return"0x"+value}if(options.allowMissingPrefix&&typeof value==="string"&&value.substring(0,2)!=="0x"){value="0x"+value}if(isHexable$1(value)){return value.toHexString()}if(isHexString$1(value)){if(value.length%2){if(options.hexPad==="left"){value="0x0"+value.substring(2)}else if(options.hexPad==="right"){value+="0"}else{logger$r.throwArgumentError("hex data is odd-length","value",value)}}return value.toLowerCase()}if(isBytes$1(value)){let result="0x";for(let i=0;i<value.length;i++){let v=value[i];result+=HexCharacters$1[(v&240)>>4]+HexCharacters$1[v&15]}return result}return logger$r.throwArgumentError("invalid hexlify value","value",value)}function hexDataLength$1(data){if(typeof data!=="string"){data=hexlify$1(data)}else if(!isHexString$1(data)||data.length%2){return null}return(data.length-2)/2}function hexDataSlice$1(data,offset,endOffset){if(typeof data!=="string"){data=hexlify$1(data)}else if(!isHexString$1(data)||data.length%2){logger$r.throwArgumentError("invalid hexData","value",data)}offset=2+2*offset;if(endOffset!=null){return"0x"+data.substring(offset,2+2*endOffset)}return"0x"+data.substring(offset)}function hexConcat$1(items){let result="0x";items.forEach(item=>{result+=hexlify$1(item).substring(2)});return result}function hexZeroPad$1(value,length){if(typeof value!=="string"){value=hexlify$1(value)}else if(!isHexString$1(value)){logger$r.throwArgumentError("invalid hex string","value",value)}if(value.length>2*length+2){logger$r.throwArgumentError("value out of range","value",arguments[1])}while(value.length<2*length+2){value="0x0"+value.substring(2)}return value}function splitSignature$1(signature2){const result={r:"0x",s:"0x",_vs:"0x",recoveryParam:0,v:0,yParityAndS:"0x",compact:"0x"};if(isBytesLike$1(signature2)){let bytes2=arrayify$1(signature2);if(bytes2.length===64){result.v=27+(bytes2[32]>>7);bytes2[32]&=127;result.r=hexlify$1(bytes2.slice(0,32));result.s=hexlify$1(bytes2.slice(32,64))}else if(bytes2.length===65){result.r=hexlify$1(bytes2.slice(0,32));result.s=hexlify$1(bytes2.slice(32,64));result.v=bytes2[64]}else{logger$r.throwArgumentError("invalid signature string","signature",signature2)}if(result.v<27){if(result.v===0||result.v===1){result.v+=27}else{logger$r.throwArgumentError("signature invalid v byte","signature",signature2)}}result.recoveryParam=1-result.v%2;if(result.recoveryParam){bytes2[32]|=128}result._vs=hexlify$1(bytes2.slice(32,64))}else{result.r=signature2.r;result.s=signature2.s;result.v=signature2.v;result.recoveryParam=signature2.recoveryParam;result._vs=signature2._vs;if(result._vs!=null){const vs2=zeroPad$1(arrayify$1(result._vs),32);result._vs=hexlify$1(vs2);const recoveryParam=vs2[0]>=128?1:0;if(result.recoveryParam==null){result.recoveryParam=recoveryParam}else if(result.recoveryParam!==recoveryParam){logger$r.throwArgumentError("signature recoveryParam mismatch _vs","signature",signature2)}vs2[0]&=127;const s=hexlify$1(vs2);if(result.s==null){result.s=s}else if(result.s!==s){logger$r.throwArgumentError("signature v mismatch _vs","signature",signature2)}}if(result.recoveryParam==null){if(result.v==null){logger$r.throwArgumentError("signature missing v and recoveryParam","signature",signature2)}else if(result.v===0||result.v===1){result.recoveryParam=result.v}else{result.recoveryParam=1-result.v%2}}else{if(result.v==null){result.v=27+result.recoveryParam}else{const recId=result.v===0||result.v===1?result.v:1-result.v%2;if(result.recoveryParam!==recId){logger$r.throwArgumentError("signature recoveryParam mismatch v","signature",signature2)}}}if(result.r==null||!isHexString$1(result.r)){logger$r.throwArgumentError("signature missing or invalid r","signature",signature2)}else{result.r=hexZeroPad$1(result.r,32)}if(result.s==null||!isHexString$1(result.s)){logger$r.throwArgumentError("signature missing or invalid s","signature",signature2)}else{result.s=hexZeroPad$1(result.s,32)}const vs=arrayify$1(result.s);if(vs[0]>=128){logger$r.throwArgumentError("signature s out of range","signature",signature2)}if(result.recoveryParam){vs[0]|=128}const _vs=hexlify$1(vs);if(result._vs){if(!isHexString$1(result._vs)){logger$r.throwArgumentError("signature invalid _vs","signature",signature2)}result._vs=hexZeroPad$1(result._vs,32)}if(result._vs==null){result._vs=_vs}else if(result._vs!==_vs){logger$r.throwArgumentError("signature _vs mismatch v and s","signature",signature2)}}result.yParityAndS=result._vs;result.compact=result.r+result.yParityAndS.substring(2);return result}function keccak256$1(data){return"0x"+sha3.keccak_256(arrayify$1(data))}var bn$3={exports:{}};var dist={};var hasRequiredDist;function requireDist(){if(hasRequiredDist)return dist;hasRequiredDist=1;(function(exports2){Object.defineProperties(exports2,{__esModule:{value:true},[Symbol.toStringTag]:{value:"Module"}});var buffer={};var base64Js={};base64Js.byteLength=byteLength;base64Js.toByteArray=toByteArray;base64Js.fromByteArray=fromByteArray;var lookup=[];var revLookup=[];var Arr=typeof Uint8Array!=="undefined"?Uint8Array:Array;var code="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";for(var i=0,len=code.length;i<len;++i){lookup[i]=code[i];revLookup[code.charCodeAt(i)]=i}revLookup["-".charCodeAt(0)]=62;revLookup["_".charCodeAt(0)]=63;function getLens(b64){var len2=b64.length;if(len2%4>0){throw new Error("Invalid string. Length must be a multiple of 4")}var validLen=b64.indexOf("=");if(validLen===-1)validLen=len2;var placeHoldersLen=validLen===len2?0:4-validLen%4;return[validLen,placeHoldersLen]}function byteLength(b64){var lens=getLens(b64);var validLen=lens[0];var placeHoldersLen=lens[1];return(validLen+placeHoldersLen)*3/4-placeHoldersLen}function _byteLength(b64,validLen,placeHoldersLen){return(validLen+placeHoldersLen)*3/4-placeHoldersLen}function toByteArray(b64){var tmp;var lens=getLens(b64);var validLen=lens[0];var placeHoldersLen=lens[1];var arr=new Arr(_byteLength(b64,validLen,placeHoldersLen));var curByte=0;var len2=placeHoldersLen>0?validLen-4:validLen;var i2;for(i2=0;i2<len2;i2+=4){tmp=revLookup[b64.charCodeAt(i2)]<<18|revLookup[b64.charCodeAt(i2+1)]<<12|revLookup[b64.charCodeAt(i2+2)]<<6|revLookup[b64.charCodeAt(i2+3)];arr[curByte++]=tmp>>16&255;arr[curByte++]=tmp>>8&255;arr[curByte++]=tmp&255}if(placeHoldersLen===2){tmp=revLookup[b64.charCodeAt(i2)]<<2|revLookup[b64.charCodeAt(i2+1)]>>4;arr[curByte++]=tmp&255}if(placeHoldersLen===1){tmp=revLookup[b64.charCodeAt(i2)]<<10|revLookup[b64.charCodeAt(i2+1)]<<4|revLookup[b64.charCodeAt(i2+2)]>>2;arr[curByte++]=tmp>>8&255;arr[curByte++]=tmp&255}return arr}function tripletToBase64(num){return lookup[num>>18&63]+lookup[num>>12&63]+lookup[num>>6&63]+lookup[num&63]}function encodeChunk(uint8,start,end){var tmp;var output2=[];for(var i2=start;i2<end;i2+=3){tmp=(uint8[i2]<<16&16711680)+(uint8[i2+1]<<8&65280)+(uint8[i2+2]&255);output2.push(tripletToBase64(tmp))}return output2.join("")}function fromByteArray(uint8){var tmp;var len2=uint8.length;var extraBytes=len2%3;var parts=[];var maxChunkLength=16383;for(var i2=0,len22=len2-extraBytes;i2<len22;i2+=maxChunkLength){parts.push(encodeChunk(uint8,i2,i2+maxChunkLength>len22?len22:i2+maxChunkLength))}if(extraBytes===1){tmp=uint8[len2-1];parts.push(lookup[tmp>>2]+lookup[tmp<<4&63]+"==")}else if(extraBytes===2){tmp=(uint8[len2-2]<<8)+uint8[len2-1];parts.push(lookup[tmp>>10]+lookup[tmp>>4&63]+lookup[tmp<<2&63]+"=")}return parts.join("")}var ieee754={};
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */ieee754.read=function(buffer2,offset,isLE2,mLen,nBytes){var e,m;var eLen=nBytes*8-mLen-1;var eMax=(1<<eLen)-1;var eBias=eMax>>1;var nBits=-7;var i2=isLE2?nBytes-1:0;var d=isLE2?-1:1;var s=buffer2[offset+i2];i2+=d;e=s&(1<<-nBits)-1;s>>=-nBits;nBits+=eLen;for(;nBits>0;e=e*256+buffer2[offset+i2],i2+=d,nBits-=8){}m=e&(1<<-nBits)-1;e>>=-nBits;nBits+=mLen;for(;nBits>0;m=m*256+buffer2[offset+i2],i2+=d,nBits-=8){}if(e===0){e=1-eBias}else if(e===eMax){return m?NaN:(s?-1:1)*Infinity}else{m=m+Math.pow(2,mLen);e=e-eBias}return(s?-1:1)*m*Math.pow(2,e-mLen)};ieee754.write=function(buffer2,value,offset,isLE2,mLen,nBytes){var e,m,c;var eLen=nBytes*8-mLen-1;var eMax=(1<<eLen)-1;var eBias=eMax>>1;var rt=mLen===23?Math.pow(2,-24)-Math.pow(2,-77):0;var i2=isLE2?0:nBytes-1;var d=isLE2?1:-1;var s=value<0||value===0&&1/value<0?1:0;value=Math.abs(value);if(isNaN(value)||value===Infinity){m=isNaN(value)?1:0;e=eMax}else{e=Math.floor(Math.log(value)/Math.LN2);if(value*(c=Math.pow(2,-e))<1){e--;c*=2}if(e+eBias>=1){value+=rt/c}else{value+=rt*Math.pow(2,1-eBias)}if(value*c>=2){e++;c/=2}if(e+eBias>=eMax){m=0;e=eMax}else if(e+eBias>=1){m=(value*c-1)*Math.pow(2,mLen);e=e+eBias}else{m=value*Math.pow(2,eBias-1)*Math.pow(2,mLen);e=0}}for(;mLen>=8;buffer2[offset+i2]=m&255,i2+=d,m/=256,mLen-=8){}e=e<<mLen|m;eLen+=mLen;for(;eLen>0;buffer2[offset+i2]=e&255,i2+=d,e/=256,eLen-=8){}buffer2[offset+i2-d]|=s*128};
/*!
     * The buffer module from node.js, for the browser.
     *
     * @author   Feross Aboukhadijeh <https://feross.org>
     * @license  MIT
     */(function(exports3){const base64=base64Js;const ieee754$1=ieee754;const customInspectSymbol=typeof Symbol==="function"&&typeof Symbol["for"]==="function"?Symbol["for"]("nodejs.util.inspect.custom"):null;exports3.Buffer=Buffer4;exports3.SlowBuffer=SlowBuffer;exports3.INSPECT_MAX_BYTES=50;const K_MAX_LENGTH=2147483647;exports3.kMaxLength=K_MAX_LENGTH;const{Uint8Array:GlobalUint8Array,ArrayBuffer:GlobalArrayBuffer,SharedArrayBuffer:GlobalSharedArrayBuffer}=globalThis;Buffer4.TYPED_ARRAY_SUPPORT=typedArraySupport();if(!Buffer4.TYPED_ARRAY_SUPPORT&&typeof console!=="undefined"&&typeof console.error==="function"){console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.")}function typedArraySupport(){try{const arr=new GlobalUint8Array(1);const proto={foo:function(){return 42}};Object.setPrototypeOf(proto,GlobalUint8Array.prototype);Object.setPrototypeOf(arr,proto);return arr.foo()===42}catch(e){return false}}Object.defineProperty(Buffer4.prototype,"parent",{enumerable:true,get:function(){if(!Buffer4.isBuffer(this))return void 0;return this.buffer}});Object.defineProperty(Buffer4.prototype,"offset",{enumerable:true,get:function(){if(!Buffer4.isBuffer(this))return void 0;return this.byteOffset}});function createBuffer(length){if(length>K_MAX_LENGTH){throw new RangeError('The value "'+length+'" is invalid for option "size"')}const buf=new GlobalUint8Array(length);Object.setPrototypeOf(buf,Buffer4.prototype);return buf}function Buffer4(arg,encodingOrOffset,length){if(typeof arg==="number"){if(typeof encodingOrOffset==="string"){throw new TypeError('The "string" argument must be of type string. Received type number')}return allocUnsafe(arg)}return from(arg,encodingOrOffset,length)}Buffer4.poolSize=8192;function from(value,encodingOrOffset,length){if(typeof value==="string"){return fromString(value,encodingOrOffset)}if(GlobalArrayBuffer.isView(value)){return fromArrayView(value)}if(value==null){throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof value)}if(isInstance(value,GlobalArrayBuffer)||value&&isInstance(value.buffer,GlobalArrayBuffer)){return fromArrayBuffer(value,encodingOrOffset,length)}if(typeof GlobalSharedArrayBuffer!=="undefined"&&(isInstance(value,GlobalSharedArrayBuffer)||value&&isInstance(value.buffer,GlobalSharedArrayBuffer))){return fromArrayBuffer(value,encodingOrOffset,length)}if(typeof value==="number"){throw new TypeError('The "value" argument must not be of type number. Received type number')}const valueOf=value.valueOf&&value.valueOf();if(valueOf!=null&&valueOf!==value){return Buffer4.from(valueOf,encodingOrOffset,length)}const b2=fromObject(value);if(b2)return b2;if(typeof Symbol!=="undefined"&&Symbol.toPrimitive!=null&&typeof value[Symbol.toPrimitive]==="function"){return Buffer4.from(value[Symbol.toPrimitive]("string"),encodingOrOffset,length)}throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof value)}Buffer4.from=function(value,encodingOrOffset,length){return from(value,encodingOrOffset,length)};Object.setPrototypeOf(Buffer4.prototype,GlobalUint8Array.prototype);Object.setPrototypeOf(Buffer4,GlobalUint8Array);function assertSize(size){if(typeof size!=="number"){throw new TypeError('"size" argument must be of type number')}else if(size<0){throw new RangeError('The value "'+size+'" is invalid for option "size"')}}function alloc(size,fill,encoding){assertSize(size);if(size<=0){return createBuffer(size)}if(fill!==void 0){return typeof encoding==="string"?createBuffer(size).fill(fill,encoding):createBuffer(size).fill(fill)}return createBuffer(size)}Buffer4.alloc=function(size,fill,encoding){return alloc(size,fill,encoding)};function allocUnsafe(size){assertSize(size);return createBuffer(size<0?0:checked(size)|0)}Buffer4.allocUnsafe=function(size){return allocUnsafe(size)};Buffer4.allocUnsafeSlow=function(size){return allocUnsafe(size)};function fromString(string,encoding){if(typeof encoding!=="string"||encoding===""){encoding="utf8"}if(!Buffer4.isEncoding(encoding)){throw new TypeError("Unknown encoding: "+encoding)}const length=byteLength2(string,encoding)|0;let buf=createBuffer(length);const actual=buf.write(string,encoding);if(actual!==length){buf=buf.slice(0,actual)}return buf}function fromArrayLike(array){const length=array.length<0?0:checked(array.length)|0;const buf=createBuffer(length);for(let i2=0;i2<length;i2+=1){buf[i2]=array[i2]&255}return buf}function fromArrayView(arrayView){if(isInstance(arrayView,GlobalUint8Array)){const copy2=new GlobalUint8Array(arrayView);return fromArrayBuffer(copy2.buffer,copy2.byteOffset,copy2.byteLength)}return fromArrayLike(arrayView)}function fromArrayBuffer(array,byteOffset,length){if(byteOffset<0||array.byteLength<byteOffset){throw new RangeError('"offset" is outside of buffer bounds')}if(array.byteLength<byteOffset+(length||0)){throw new RangeError('"length" is outside of buffer bounds')}let buf;if(byteOffset===void 0&&length===void 0){buf=new GlobalUint8Array(array)}else if(length===void 0){buf=new GlobalUint8Array(array,byteOffset)}else{buf=new GlobalUint8Array(array,byteOffset,length)}Object.setPrototypeOf(buf,Buffer4.prototype);return buf}function fromObject(obj){if(Buffer4.isBuffer(obj)){const len2=checked(obj.length)|0;const buf=createBuffer(len2);if(buf.length===0){return buf}obj.copy(buf,0,0,len2);return buf}if(obj.length!==void 0){if(typeof obj.length!=="number"||numberIsNaN(obj.length)){return createBuffer(0)}return fromArrayLike(obj)}if(obj.type==="Buffer"&&Array.isArray(obj.data)){return fromArrayLike(obj.data)}}function checked(length){if(length>=K_MAX_LENGTH){throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+K_MAX_LENGTH.toString(16)+" bytes")}return length|0}function SlowBuffer(length){if(+length!=length){length=0}return Buffer4.alloc(+length)}Buffer4.isBuffer=function isBuffer2(b2){return b2!=null&&b2._isBuffer===true&&b2!==Buffer4.prototype};Buffer4.compare=function compare(a,b2){if(isInstance(a,GlobalUint8Array))a=Buffer4.from(a,a.offset,a.byteLength);if(isInstance(b2,GlobalUint8Array))b2=Buffer4.from(b2,b2.offset,b2.byteLength);if(!Buffer4.isBuffer(a)||!Buffer4.isBuffer(b2)){throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array')}if(a===b2)return 0;let x=a.length;let y=b2.length;for(let i2=0,len2=Math.min(x,y);i2<len2;++i2){if(a[i2]!==b2[i2]){x=a[i2];y=b2[i2];break}}if(x<y)return-1;if(y<x)return 1;return 0};Buffer4.isEncoding=function isEncoding(encoding){switch(String(encoding).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return true;default:return false}};Buffer4.concat=function concat2(list,length){if(!Array.isArray(list)){throw new TypeError('"list" argument must be an Array of Buffers')}if(list.length===0){return Buffer4.alloc(0)}let i2;if(length===void 0){length=0;for(i2=0;i2<list.length;++i2){length+=list[i2].length}}const buffer2=Buffer4.allocUnsafe(length);let pos=0;for(i2=0;i2<list.length;++i2){let buf=list[i2];if(isInstance(buf,GlobalUint8Array)){if(pos+buf.length>buffer2.length){if(!Buffer4.isBuffer(buf))buf=Buffer4.from(buf);buf.copy(buffer2,pos)}else{GlobalUint8Array.prototype.set.call(buffer2,buf,pos)}}else if(!Buffer4.isBuffer(buf)){throw new TypeError('"list" argument must be an Array of Buffers')}else{buf.copy(buffer2,pos)}pos+=buf.length}return buffer2};function byteLength2(string,encoding){if(Buffer4.isBuffer(string)){return string.length}if(GlobalArrayBuffer.isView(string)||isInstance(string,GlobalArrayBuffer)){return string.byteLength}if(typeof string!=="string"){throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof string)}const len2=string.length;const mustMatch=arguments.length>2&&arguments[2]===true;if(!mustMatch&&len2===0)return 0;let loweredCase=false;for(;;){switch(encoding){case"ascii":case"latin1":case"binary":return len2;case"utf8":case"utf-8":return utf8ToBytes2(string).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return len2*2;case"hex":return len2>>>1;case"base64":return base64ToBytes(string).length;default:if(loweredCase){return mustMatch?-1:utf8ToBytes2(string).length}encoding=(""+encoding).toLowerCase();loweredCase=true}}}Buffer4.byteLength=byteLength2;function slowToString(encoding,start,end){let loweredCase=false;if(start===void 0||start<0){start=0}if(start>this.length){return""}if(end===void 0||end>this.length){end=this.length}if(end<=0){return""}end>>>=0;start>>>=0;if(end<=start){return""}if(!encoding)encoding="utf8";while(true){switch(encoding){case"hex":return hexSlice(this,start,end);case"utf8":case"utf-8":return utf8Slice(this,start,end);case"ascii":return asciiSlice(this,start,end);case"latin1":case"binary":return latin1Slice(this,start,end);case"base64":return base64Slice(this,start,end);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return utf16leSlice(this,start,end);default:if(loweredCase)throw new TypeError("Unknown encoding: "+encoding);encoding=(encoding+"").toLowerCase();loweredCase=true}}}Buffer4.prototype._isBuffer=true;function swap(b2,n2,m){const i2=b2[n2];b2[n2]=b2[m];b2[m]=i2}Buffer4.prototype.swap16=function swap16(){const len2=this.length;if(len2%2!==0){throw new RangeError("Buffer size must be a multiple of 16-bits")}for(let i2=0;i2<len2;i2+=2){swap(this,i2,i2+1)}return this};Buffer4.prototype.swap32=function swap32(){const len2=this.length;if(len2%4!==0){throw new RangeError("Buffer size must be a multiple of 32-bits")}for(let i2=0;i2<len2;i2+=4){swap(this,i2,i2+3);swap(this,i2+1,i2+2)}return this};Buffer4.prototype.swap64=function swap64(){const len2=this.length;if(len2%8!==0){throw new RangeError("Buffer size must be a multiple of 64-bits")}for(let i2=0;i2<len2;i2+=8){swap(this,i2,i2+7);swap(this,i2+1,i2+6);swap(this,i2+2,i2+5);swap(this,i2+3,i2+4)}return this};Buffer4.prototype.toString=function toString3(){const length=this.length;if(length===0)return"";if(arguments.length===0)return utf8Slice(this,0,length);return slowToString.apply(this,arguments)};Buffer4.prototype.toLocaleString=Buffer4.prototype.toString;Buffer4.prototype.equals=function equals(b2){if(!Buffer4.isBuffer(b2))throw new TypeError("Argument must be a Buffer");if(this===b2)return true;return Buffer4.compare(this,b2)===0};Buffer4.prototype.inspect=function inspect7(){let str="";const max=exports3.INSPECT_MAX_BYTES;str=this.toString("hex",0,max).replace(/(.{2})/g,"$1 ").trim();if(this.length>max)str+=" ... ";return"<Buffer "+str+">"};if(customInspectSymbol){Buffer4.prototype[customInspectSymbol]=Buffer4.prototype.inspect}Buffer4.prototype.compare=function compare(target,start,end,thisStart,thisEnd){if(isInstance(target,GlobalUint8Array)){target=Buffer4.from(target,target.offset,target.byteLength)}if(!Buffer4.isBuffer(target)){throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof target)}if(start===void 0){start=0}if(end===void 0){end=target?target.length:0}if(thisStart===void 0){thisStart=0}if(thisEnd===void 0){thisEnd=this.length}if(start<0||end>target.length||thisStart<0||thisEnd>this.length){throw new RangeError("out of range index")}if(thisStart>=thisEnd&&start>=end){return 0}if(thisStart>=thisEnd){return-1}if(start>=end){return 1}start>>>=0;end>>>=0;thisStart>>>=0;thisEnd>>>=0;if(this===target)return 0;let x=thisEnd-thisStart;let y=end-start;const len2=Math.min(x,y);const thisCopy=this.slice(thisStart,thisEnd);const targetCopy=target.slice(start,end);for(let i2=0;i2<len2;++i2){if(thisCopy[i2]!==targetCopy[i2]){x=thisCopy[i2];y=targetCopy[i2];break}}if(x<y)return-1;if(y<x)return 1;return 0};function bidirectionalIndexOf(buffer2,val,byteOffset,encoding,dir){if(buffer2.length===0)return-1;if(typeof byteOffset==="string"){encoding=byteOffset;byteOffset=0}else if(byteOffset>2147483647){byteOffset=2147483647}else if(byteOffset<-2147483648){byteOffset=-2147483648}byteOffset=+byteOffset;if(numberIsNaN(byteOffset)){byteOffset=dir?0:buffer2.length-1}if(byteOffset<0)byteOffset=buffer2.length+byteOffset;if(byteOffset>=buffer2.length){if(dir)return-1;else byteOffset=buffer2.length-1}else if(byteOffset<0){if(dir)byteOffset=0;else return-1}if(typeof val==="string"){val=Buffer4.from(val,encoding)}if(Buffer4.isBuffer(val)){if(val.length===0){return-1}return arrayIndexOf(buffer2,val,byteOffset,encoding,dir)}else if(typeof val==="number"){val=val&255;if(typeof GlobalUint8Array.prototype.indexOf==="function"){if(dir){return GlobalUint8Array.prototype.indexOf.call(buffer2,val,byteOffset)}else{return GlobalUint8Array.prototype.lastIndexOf.call(buffer2,val,byteOffset)}}return arrayIndexOf(buffer2,[val],byteOffset,encoding,dir)}throw new TypeError("val must be string, number or Buffer")}function arrayIndexOf(arr,val,byteOffset,encoding,dir){let indexSize=1;let arrLength=arr.length;let valLength=val.length;if(encoding!==void 0){encoding=String(encoding).toLowerCase();if(encoding==="ucs2"||encoding==="ucs-2"||encoding==="utf16le"||encoding==="utf-16le"){if(arr.length<2||val.length<2){return-1}indexSize=2;arrLength/=2;valLength/=2;byteOffset/=2}}function read(buf,i3){if(indexSize===1){return buf[i3]}else{return buf.readUInt16BE(i3*indexSize)}}let i2;if(dir){let foundIndex=-1;for(i2=byteOffset;i2<arrLength;i2++){if(read(arr,i2)===read(val,foundIndex===-1?0:i2-foundIndex)){if(foundIndex===-1)foundIndex=i2;if(i2-foundIndex+1===valLength)return foundIndex*indexSize}else{if(foundIndex!==-1)i2-=i2-foundIndex;foundIndex=-1}}}else{if(byteOffset+valLength>arrLength)byteOffset=arrLength-valLength;for(i2=byteOffset;i2>=0;i2--){let found=true;for(let j=0;j<valLength;j++){if(read(arr,i2+j)!==read(val,j)){found=false;break}}if(found)return i2}}return-1}Buffer4.prototype.includes=function includes(val,byteOffset,encoding){return this.indexOf(val,byteOffset,encoding)!==-1};Buffer4.prototype.indexOf=function indexOf(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,true)};Buffer4.prototype.lastIndexOf=function lastIndexOf(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,false)};function hexWrite(buf,string,offset,length){offset=Number(offset)||0;const remaining=buf.length-offset;if(!length){length=remaining}else{length=Number(length);if(length>remaining){length=remaining}}const strLen=string.length;if(length>strLen/2){length=strLen/2}let i2;for(i2=0;i2<length;++i2){const parsed=parseInt(string.substr(i2*2,2),16);if(numberIsNaN(parsed))return i2;buf[offset+i2]=parsed}return i2}function utf8Write(buf,string,offset,length){return blitBuffer(utf8ToBytes2(string,buf.length-offset),buf,offset,length)}function asciiWrite(buf,string,offset,length){return blitBuffer(asciiToBytes(string),buf,offset,length)}function base64Write(buf,string,offset,length){return blitBuffer(base64ToBytes(string),buf,offset,length)}function ucs2Write(buf,string,offset,length){return blitBuffer(utf16leToBytes(string,buf.length-offset),buf,offset,length)}Buffer4.prototype.write=function write(string,offset,length,encoding){if(offset===void 0){encoding="utf8";length=this.length;offset=0}else if(length===void 0&&typeof offset==="string"){encoding=offset;length=this.length;offset=0}else if(isFinite(offset)){offset=offset>>>0;if(isFinite(length)){length=length>>>0;if(encoding===void 0)encoding="utf8"}else{encoding=length;length=void 0}}else{throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported")}const remaining=this.length-offset;if(length===void 0||length>remaining)length=remaining;if(string.length>0&&(length<0||offset<0)||offset>this.length){throw new RangeError("Attempt to write outside buffer bounds")}if(!encoding)encoding="utf8";let loweredCase=false;for(;;){switch(encoding){case"hex":return hexWrite(this,string,offset,length);case"utf8":case"utf-8":return utf8Write(this,string,offset,length);case"ascii":case"latin1":case"binary":return asciiWrite(this,string,offset,length);case"base64":return base64Write(this,string,offset,length);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return ucs2Write(this,string,offset,length);default:if(loweredCase)throw new TypeError("Unknown encoding: "+encoding);encoding=(""+encoding).toLowerCase();loweredCase=true}}};Buffer4.prototype.toJSON=function toJSON4(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function base64Slice(buf,start,end){if(start===0&&end===buf.length){return base64.fromByteArray(buf)}else{return base64.fromByteArray(buf.slice(start,end))}}function utf8Slice(buf,start,end){end=Math.min(buf.length,end);const res=[];let i2=start;while(i2<end){const firstByte=buf[i2];let codePoint=null;let bytesPerSequence=firstByte>239?4:firstByte>223?3:firstByte>191?2:1;if(i2+bytesPerSequence<=end){let secondByte,thirdByte,fourthByte,tempCodePoint;switch(bytesPerSequence){case 1:if(firstByte<128){codePoint=firstByte}break;case 2:secondByte=buf[i2+1];if((secondByte&192)===128){tempCodePoint=(firstByte&31)<<6|secondByte&63;if(tempCodePoint>127){codePoint=tempCodePoint}}break;case 3:secondByte=buf[i2+1];thirdByte=buf[i2+2];if((secondByte&192)===128&&(thirdByte&192)===128){tempCodePoint=(firstByte&15)<<12|(secondByte&63)<<6|thirdByte&63;if(tempCodePoint>2047&&(tempCodePoint<55296||tempCodePoint>57343)){codePoint=tempCodePoint}}break;case 4:secondByte=buf[i2+1];thirdByte=buf[i2+2];fourthByte=buf[i2+3];if((secondByte&192)===128&&(thirdByte&192)===128&&(fourthByte&192)===128){tempCodePoint=(firstByte&15)<<18|(secondByte&63)<<12|(thirdByte&63)<<6|fourthByte&63;if(tempCodePoint>65535&&tempCodePoint<1114112){codePoint=tempCodePoint}}}}if(codePoint===null){codePoint=65533;bytesPerSequence=1}else if(codePoint>65535){codePoint-=65536;res.push(codePoint>>>10&1023|55296);codePoint=56320|codePoint&1023}res.push(codePoint);i2+=bytesPerSequence}return decodeCodePointsArray(res)}const MAX_ARGUMENTS_LENGTH=4096;function decodeCodePointsArray(codePoints){const len2=codePoints.length;if(len2<=MAX_ARGUMENTS_LENGTH){return String.fromCharCode.apply(String,codePoints)}let res="";let i2=0;while(i2<len2){res+=String.fromCharCode.apply(String,codePoints.slice(i2,i2+=MAX_ARGUMENTS_LENGTH))}return res}function asciiSlice(buf,start,end){let ret="";end=Math.min(buf.length,end);for(let i2=start;i2<end;++i2){ret+=String.fromCharCode(buf[i2]&127)}return ret}function latin1Slice(buf,start,end){let ret="";end=Math.min(buf.length,end);for(let i2=start;i2<end;++i2){ret+=String.fromCharCode(buf[i2])}return ret}function hexSlice(buf,start,end){const len2=buf.length;if(!start||start<0)start=0;if(!end||end<0||end>len2)end=len2;let out="";for(let i2=start;i2<end;++i2){out+=hexSliceLookupTable[buf[i2]]}return out}function utf16leSlice(buf,start,end){const bytes2=buf.slice(start,end);let res="";for(let i2=0;i2<bytes2.length-1;i2+=2){res+=String.fromCharCode(bytes2[i2]+bytes2[i2+1]*256)}return res}Buffer4.prototype.slice=function slice(start,end){const len2=this.length;start=~~start;end=end===void 0?len2:~~end;if(start<0){start+=len2;if(start<0)start=0}else if(start>len2){start=len2}if(end<0){end+=len2;if(end<0)end=0}else if(end>len2){end=len2}if(end<start)end=start;const newBuf=this.subarray(start,end);Object.setPrototypeOf(newBuf,Buffer4.prototype);return newBuf};function checkOffset(offset,ext,length){if(offset%1!==0||offset<0)throw new RangeError("offset is not uint");if(offset+ext>length)throw new RangeError("Trying to access beyond buffer length")}Buffer4.prototype.readUintLE=Buffer4.prototype.readUIntLE=function readUIntLE(offset,byteLength3,noAssert){offset=offset>>>0;byteLength3=byteLength3>>>0;if(!noAssert)checkOffset(offset,byteLength3,this.length);let val=this[offset];let mul5=1;let i2=0;while(++i2<byteLength3&&(mul5*=256)){val+=this[offset+i2]*mul5}return val};Buffer4.prototype.readUintBE=Buffer4.prototype.readUIntBE=function readUIntBE(offset,byteLength3,noAssert){offset=offset>>>0;byteLength3=byteLength3>>>0;if(!noAssert){checkOffset(offset,byteLength3,this.length)}let val=this[offset+--byteLength3];let mul5=1;while(byteLength3>0&&(mul5*=256)){val+=this[offset+--byteLength3]*mul5}return val};Buffer4.prototype.readUint8=Buffer4.prototype.readUInt8=function readUInt8(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,1,this.length);return this[offset]};Buffer4.prototype.readUint16LE=Buffer4.prototype.readUInt16LE=function readUInt16LE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,2,this.length);return this[offset]|this[offset+1]<<8};Buffer4.prototype.readUint16BE=Buffer4.prototype.readUInt16BE=function readUInt16BE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,2,this.length);return this[offset]<<8|this[offset+1]};Buffer4.prototype.readUint32LE=Buffer4.prototype.readUInt32LE=function readUInt32LE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return(this[offset]|this[offset+1]<<8|this[offset+2]<<16)+this[offset+3]*16777216};Buffer4.prototype.readUint32BE=Buffer4.prototype.readUInt32BE=function readUInt32BE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return this[offset]*16777216+(this[offset+1]<<16|this[offset+2]<<8|this[offset+3])};Buffer4.prototype.readBigUInt64LE=defineBigIntMethod(function readBigUInt64LE(offset){offset=offset>>>0;validateNumber(offset,"offset");const first=this[offset];const last=this[offset+7];if(first===void 0||last===void 0){boundsError(offset,this.length-8)}const lo=first+this[++offset]*2**8+this[++offset]*2**16+this[++offset]*2**24;const hi=this[++offset]+this[++offset]*2**8+this[++offset]*2**16+last*2**24;return BigInt(lo)+(BigInt(hi)<<BigInt(32))});Buffer4.prototype.readBigUInt64BE=defineBigIntMethod(function readBigUInt64BE(offset){offset=offset>>>0;validateNumber(offset,"offset");const first=this[offset];const last=this[offset+7];if(first===void 0||last===void 0){boundsError(offset,this.length-8)}const hi=first*2**24+this[++offset]*2**16+this[++offset]*2**8+this[++offset];const lo=this[++offset]*2**24+this[++offset]*2**16+this[++offset]*2**8+last;return(BigInt(hi)<<BigInt(32))+BigInt(lo)});Buffer4.prototype.readIntLE=function readIntLE(offset,byteLength3,noAssert){offset=offset>>>0;byteLength3=byteLength3>>>0;if(!noAssert)checkOffset(offset,byteLength3,this.length);let val=this[offset];let mul5=1;let i2=0;while(++i2<byteLength3&&(mul5*=256)){val+=this[offset+i2]*mul5}mul5*=128;if(val>=mul5)val-=Math.pow(2,8*byteLength3);return val};Buffer4.prototype.readIntBE=function readIntBE(offset,byteLength3,noAssert){offset=offset>>>0;byteLength3=byteLength3>>>0;if(!noAssert)checkOffset(offset,byteLength3,this.length);let i2=byteLength3;let mul5=1;let val=this[offset+--i2];while(i2>0&&(mul5*=256)){val+=this[offset+--i2]*mul5}mul5*=128;if(val>=mul5)val-=Math.pow(2,8*byteLength3);return val};Buffer4.prototype.readInt8=function readInt8(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,1,this.length);if(!(this[offset]&128))return this[offset];return(255-this[offset]+1)*-1};Buffer4.prototype.readInt16LE=function readInt16LE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,2,this.length);const val=this[offset]|this[offset+1]<<8;return val&32768?val|4294901760:val};Buffer4.prototype.readInt16BE=function readInt16BE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,2,this.length);const val=this[offset+1]|this[offset]<<8;return val&32768?val|4294901760:val};Buffer4.prototype.readInt32LE=function readInt32LE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return this[offset]|this[offset+1]<<8|this[offset+2]<<16|this[offset+3]<<24};Buffer4.prototype.readInt32BE=function readInt32BE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return this[offset]<<24|this[offset+1]<<16|this[offset+2]<<8|this[offset+3]};Buffer4.prototype.readBigInt64LE=defineBigIntMethod(function readBigInt64LE(offset){offset=offset>>>0;validateNumber(offset,"offset");const first=this[offset];const last=this[offset+7];if(first===void 0||last===void 0){boundsError(offset,this.length-8)}const val=this[offset+4]+this[offset+5]*2**8+this[offset+6]*2**16+(last<<24);return(BigInt(val)<<BigInt(32))+BigInt(first+this[++offset]*2**8+this[++offset]*2**16+this[++offset]*2**24)});Buffer4.prototype.readBigInt64BE=defineBigIntMethod(function readBigInt64BE(offset){offset=offset>>>0;validateNumber(offset,"offset");const first=this[offset];const last=this[offset+7];if(first===void 0||last===void 0){boundsError(offset,this.length-8)}const val=(first<<24)+this[++offset]*2**16+this[++offset]*2**8+this[++offset];return(BigInt(val)<<BigInt(32))+BigInt(this[++offset]*2**24+this[++offset]*2**16+this[++offset]*2**8+last)});Buffer4.prototype.readFloatLE=function readFloatLE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return ieee754$1.read(this,offset,true,23,4)};Buffer4.prototype.readFloatBE=function readFloatBE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return ieee754$1.read(this,offset,false,23,4)};Buffer4.prototype.readDoubleLE=function readDoubleLE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,8,this.length);return ieee754$1.read(this,offset,true,52,8)};Buffer4.prototype.readDoubleBE=function readDoubleBE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,8,this.length);return ieee754$1.read(this,offset,false,52,8)};function checkInt(buf,value,offset,ext,max,min){if(!Buffer4.isBuffer(buf))throw new TypeError('"buffer" argument must be a Buffer instance');if(value>max||value<min)throw new RangeError('"value" argument is out of bounds');if(offset+ext>buf.length)throw new RangeError("Index out of range")}Buffer4.prototype.writeUintLE=Buffer4.prototype.writeUIntLE=function writeUIntLE(value,offset,byteLength3,noAssert){value=+value;offset=offset>>>0;byteLength3=byteLength3>>>0;if(!noAssert){const maxBytes=Math.pow(2,8*byteLength3)-1;checkInt(this,value,offset,byteLength3,maxBytes,0)}let mul5=1;let i2=0;this[offset]=value&255;while(++i2<byteLength3&&(mul5*=256)){this[offset+i2]=value/mul5&255}return offset+byteLength3};Buffer4.prototype.writeUintBE=Buffer4.prototype.writeUIntBE=function writeUIntBE(value,offset,byteLength3,noAssert){value=+value;offset=offset>>>0;byteLength3=byteLength3>>>0;if(!noAssert){const maxBytes=Math.pow(2,8*byteLength3)-1;checkInt(this,value,offset,byteLength3,maxBytes,0)}let i2=byteLength3-1;let mul5=1;this[offset+i2]=value&255;while(--i2>=0&&(mul5*=256)){this[offset+i2]=value/mul5&255}return offset+byteLength3};Buffer4.prototype.writeUint8=Buffer4.prototype.writeUInt8=function writeUInt8(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,1,255,0);this[offset]=value&255;return offset+1};Buffer4.prototype.writeUint16LE=Buffer4.prototype.writeUInt16LE=function writeUInt16LE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,2,65535,0);this[offset]=value&255;this[offset+1]=value>>>8;return offset+2};Buffer4.prototype.writeUint16BE=Buffer4.prototype.writeUInt16BE=function writeUInt16BE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,2,65535,0);this[offset]=value>>>8;this[offset+1]=value&255;return offset+2};Buffer4.prototype.writeUint32LE=Buffer4.prototype.writeUInt32LE=function writeUInt32LE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,4,4294967295,0);this[offset+3]=value>>>24;this[offset+2]=value>>>16;this[offset+1]=value>>>8;this[offset]=value&255;return offset+4};Buffer4.prototype.writeUint32BE=Buffer4.prototype.writeUInt32BE=function writeUInt32BE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,4,4294967295,0);this[offset]=value>>>24;this[offset+1]=value>>>16;this[offset+2]=value>>>8;this[offset+3]=value&255;return offset+4};function wrtBigUInt64LE(buf,value,offset,min,max){checkIntBI(value,min,max,buf,offset,7);let lo=Number(value&BigInt(4294967295));buf[offset++]=lo;lo=lo>>8;buf[offset++]=lo;lo=lo>>8;buf[offset++]=lo;lo=lo>>8;buf[offset++]=lo;let hi=Number(value>>BigInt(32)&BigInt(4294967295));buf[offset++]=hi;hi=hi>>8;buf[offset++]=hi;hi=hi>>8;buf[offset++]=hi;hi=hi>>8;buf[offset++]=hi;return offset}function wrtBigUInt64BE(buf,value,offset,min,max){checkIntBI(value,min,max,buf,offset,7);let lo=Number(value&BigInt(4294967295));buf[offset+7]=lo;lo=lo>>8;buf[offset+6]=lo;lo=lo>>8;buf[offset+5]=lo;lo=lo>>8;buf[offset+4]=lo;let hi=Number(value>>BigInt(32)&BigInt(4294967295));buf[offset+3]=hi;hi=hi>>8;buf[offset+2]=hi;hi=hi>>8;buf[offset+1]=hi;hi=hi>>8;buf[offset]=hi;return offset+8}Buffer4.prototype.writeBigUInt64LE=defineBigIntMethod(function writeBigUInt64LE(value,offset=0){return wrtBigUInt64LE(this,value,offset,BigInt(0),BigInt("0xffffffffffffffff"))});Buffer4.prototype.writeBigUInt64BE=defineBigIntMethod(function writeBigUInt64BE(value,offset=0){return wrtBigUInt64BE(this,value,offset,BigInt(0),BigInt("0xffffffffffffffff"))});Buffer4.prototype.writeIntLE=function writeIntLE(value,offset,byteLength3,noAssert){value=+value;offset=offset>>>0;if(!noAssert){const limit=Math.pow(2,8*byteLength3-1);checkInt(this,value,offset,byteLength3,limit-1,-limit)}let i2=0;let mul5=1;let sub=0;this[offset]=value&255;while(++i2<byteLength3&&(mul5*=256)){if(value<0&&sub===0&&this[offset+i2-1]!==0){sub=1}this[offset+i2]=(value/mul5>>0)-sub&255}return offset+byteLength3};Buffer4.prototype.writeIntBE=function writeIntBE(value,offset,byteLength3,noAssert){value=+value;offset=offset>>>0;if(!noAssert){const limit=Math.pow(2,8*byteLength3-1);checkInt(this,value,offset,byteLength3,limit-1,-limit)}let i2=byteLength3-1;let mul5=1;let sub=0;this[offset+i2]=value&255;while(--i2>=0&&(mul5*=256)){if(value<0&&sub===0&&this[offset+i2+1]!==0){sub=1}this[offset+i2]=(value/mul5>>0)-sub&255}return offset+byteLength3};Buffer4.prototype.writeInt8=function writeInt8(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,1,127,-128);if(value<0)value=255+value+1;this[offset]=value&255;return offset+1};Buffer4.prototype.writeInt16LE=function writeInt16LE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,2,32767,-32768);this[offset]=value&255;this[offset+1]=value>>>8;return offset+2};Buffer4.prototype.writeInt16BE=function writeInt16BE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,2,32767,-32768);this[offset]=value>>>8;this[offset+1]=value&255;return offset+2};Buffer4.prototype.writeInt32LE=function writeInt32LE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,4,2147483647,-2147483648);this[offset]=value&255;this[offset+1]=value>>>8;this[offset+2]=value>>>16;this[offset+3]=value>>>24;return offset+4};Buffer4.prototype.writeInt32BE=function writeInt32BE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,4,2147483647,-2147483648);if(value<0)value=4294967295+value+1;this[offset]=value>>>24;this[offset+1]=value>>>16;this[offset+2]=value>>>8;this[offset+3]=value&255;return offset+4};Buffer4.prototype.writeBigInt64LE=defineBigIntMethod(function writeBigInt64LE(value,offset=0){return wrtBigUInt64LE(this,value,offset,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))});Buffer4.prototype.writeBigInt64BE=defineBigIntMethod(function writeBigInt64BE(value,offset=0){return wrtBigUInt64BE(this,value,offset,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))});function checkIEEE754(buf,value,offset,ext,max,min){if(offset+ext>buf.length)throw new RangeError("Index out of range");if(offset<0)throw new RangeError("Index out of range")}function writeFloat(buf,value,offset,littleEndian,noAssert){value=+value;offset=offset>>>0;if(!noAssert){checkIEEE754(buf,value,offset,4)}ieee754$1.write(buf,value,offset,littleEndian,23,4);return offset+4}Buffer4.prototype.writeFloatLE=function writeFloatLE(value,offset,noAssert){return writeFloat(this,value,offset,true,noAssert)};Buffer4.prototype.writeFloatBE=function writeFloatBE(value,offset,noAssert){return writeFloat(this,value,offset,false,noAssert)};function writeDouble(buf,value,offset,littleEndian,noAssert){value=+value;offset=offset>>>0;if(!noAssert){checkIEEE754(buf,value,offset,8)}ieee754$1.write(buf,value,offset,littleEndian,52,8);return offset+8}Buffer4.prototype.writeDoubleLE=function writeDoubleLE(value,offset,noAssert){return writeDouble(this,value,offset,true,noAssert)};Buffer4.prototype.writeDoubleBE=function writeDoubleBE(value,offset,noAssert){return writeDouble(this,value,offset,false,noAssert)};Buffer4.prototype.copy=function copy2(target,targetStart,start,end){if(!Buffer4.isBuffer(target))throw new TypeError("argument should be a Buffer");if(!start)start=0;if(!end&&end!==0)end=this.length;if(targetStart>=target.length)targetStart=target.length;if(!targetStart)targetStart=0;if(end>0&&end<start)end=start;if(end===start)return 0;if(target.length===0||this.length===0)return 0;if(targetStart<0){throw new RangeError("targetStart out of bounds")}if(start<0||start>=this.length)throw new RangeError("Index out of range");if(end<0)throw new RangeError("sourceEnd out of bounds");if(end>this.length)end=this.length;if(target.length-targetStart<end-start){end=target.length-targetStart+start}const len2=end-start;if(this===target&&typeof GlobalUint8Array.prototype.copyWithin==="function"){this.copyWithin(targetStart,start,end)}else{GlobalUint8Array.prototype.set.call(target,this.subarray(start,end),targetStart)}return len2};Buffer4.prototype.fill=function fill(val,start,end,encoding){if(typeof val==="string"){if(typeof start==="string"){encoding=start;start=0;end=this.length}else if(typeof end==="string"){encoding=end;end=this.length}if(encoding!==void 0&&typeof encoding!=="string"){throw new TypeError("encoding must be a string")}if(typeof encoding==="string"&&!Buffer4.isEncoding(encoding)){throw new TypeError("Unknown encoding: "+encoding)}if(val.length===1){const code2=val.charCodeAt(0);if(encoding==="utf8"&&code2<128||encoding==="latin1"){val=code2}}}else if(typeof val==="number"){val=val&255}else if(typeof val==="boolean"){val=Number(val)}if(start<0||this.length<start||this.length<end){throw new RangeError("Out of range index")}if(end<=start){return this}start=start>>>0;end=end===void 0?this.length:end>>>0;if(!val)val=0;let i2;if(typeof val==="number"){for(i2=start;i2<end;++i2){this[i2]=val}}else{const bytes2=Buffer4.isBuffer(val)?val:Buffer4.from(val,encoding);const len2=bytes2.length;if(len2===0){throw new TypeError('The value "'+val+'" is invalid for argument "value"')}for(i2=0;i2<end-start;++i2){this[i2+start]=bytes2[i2%len2]}}return this};const errors={};function E(sym,getMessage,Base){errors[sym]=class NodeError extends Base{constructor(){super();Object.defineProperty(this,"message",{value:getMessage.apply(this,arguments),writable:true,configurable:true});this.name=`${this.name} [${sym}]`;this.stack;delete this.name}get code(){return sym}set code(value){Object.defineProperty(this,"code",{configurable:true,enumerable:true,value:value,writable:true})}toString(){return`${this.name} [${sym}]: ${this.message}`}}}E("ERR_BUFFER_OUT_OF_BOUNDS",function(name){if(name){return`${name} is outside of buffer bounds`}return"Attempt to access memory outside buffer bounds"},RangeError);E("ERR_INVALID_ARG_TYPE",function(name,actual){return`The "${name}" argument must be of type number. Received type ${typeof actual}`},TypeError);E("ERR_OUT_OF_RANGE",function(str,range,input){let msg=`The value of "${str}" is out of range.`;let received=input;if(Number.isInteger(input)&&Math.abs(input)>2**32){received=addNumericalSeparator(String(input))}else if(typeof input==="bigint"){received=String(input);if(input>BigInt(2)**BigInt(32)||input<-(BigInt(2)**BigInt(32))){received=addNumericalSeparator(received)}received+="n"}msg+=` It must be ${range}. Received ${received}`;return msg},RangeError);function addNumericalSeparator(val){let res="";let i2=val.length;const start=val[0]==="-"?1:0;for(;i2>=start+4;i2-=3){res=`_${val.slice(i2-3,i2)}${res}`}return`${val.slice(0,i2)}${res}`}function checkBounds(buf,offset,byteLength3){validateNumber(offset,"offset");if(buf[offset]===void 0||buf[offset+byteLength3]===void 0){boundsError(offset,buf.length-(byteLength3+1))}}function checkIntBI(value,min,max,buf,offset,byteLength3){if(value>max||value<min){const n2=typeof min==="bigint"?"n":"";let range;{if(min===0||min===BigInt(0)){range=`>= 0${n2} and < 2${n2} ** ${(byteLength3+1)*8}${n2}`}else{range=`>= -(2${n2} ** ${(byteLength3+1)*8-1}${n2}) and < 2 ** ${(byteLength3+1)*8-1}${n2}`}}throw new errors.ERR_OUT_OF_RANGE("value",range,value)}checkBounds(buf,offset,byteLength3)}function validateNumber(value,name){if(typeof value!=="number"){throw new errors.ERR_INVALID_ARG_TYPE(name,"number",value)}}function boundsError(value,length,type){if(Math.floor(value)!==value){validateNumber(value,type);throw new errors.ERR_OUT_OF_RANGE("offset","an integer",value)}if(length<0){throw new errors.ERR_BUFFER_OUT_OF_BOUNDS}throw new errors.ERR_OUT_OF_RANGE("offset",`>= ${0} and <= ${length}`,value)}const INVALID_BASE64_RE=/[^+/0-9A-Za-z-_]/g;function base64clean(str){str=str.split("=")[0];str=str.trim().replace(INVALID_BASE64_RE,"");if(str.length<2)return"";while(str.length%4!==0){str=str+"="}return str}function utf8ToBytes2(string,units){units=units||Infinity;let codePoint;const length=string.length;let leadSurrogate=null;const bytes2=[];for(let i2=0;i2<length;++i2){codePoint=string.charCodeAt(i2);if(codePoint>55295&&codePoint<57344){if(!leadSurrogate){if(codePoint>56319){if((units-=3)>-1)bytes2.push(239,191,189);continue}else if(i2+1===length){if((units-=3)>-1)bytes2.push(239,191,189);continue}leadSurrogate=codePoint;continue}if(codePoint<56320){if((units-=3)>-1)bytes2.push(239,191,189);leadSurrogate=codePoint;continue}codePoint=(leadSurrogate-55296<<10|codePoint-56320)+65536}else if(leadSurrogate){if((units-=3)>-1)bytes2.push(239,191,189)}leadSurrogate=null;if(codePoint<128){if((units-=1)<0)break;bytes2.push(codePoint)}else if(codePoint<2048){if((units-=2)<0)break;bytes2.push(codePoint>>6|192,codePoint&63|128)}else if(codePoint<65536){if((units-=3)<0)break;bytes2.push(codePoint>>12|224,codePoint>>6&63|128,codePoint&63|128)}else if(codePoint<1114112){if((units-=4)<0)break;bytes2.push(codePoint>>18|240,codePoint>>12&63|128,codePoint>>6&63|128,codePoint&63|128)}else{throw new Error("Invalid code point")}}return bytes2}function asciiToBytes(str){const byteArray=[];for(let i2=0;i2<str.length;++i2){byteArray.push(str.charCodeAt(i2)&255)}return byteArray}function utf16leToBytes(str,units){let c,hi,lo;const byteArray=[];for(let i2=0;i2<str.length;++i2){if((units-=2)<0)break;c=str.charCodeAt(i2);hi=c>>8;lo=c%256;byteArray.push(lo);byteArray.push(hi)}return byteArray}function base64ToBytes(str){return base64.toByteArray(base64clean(str))}function blitBuffer(src,dst,offset,length){let i2;for(i2=0;i2<length;++i2){if(i2+offset>=dst.length||i2>=src.length)break;dst[i2+offset]=src[i2]}return i2}function isInstance(obj,type){return obj instanceof type||obj!=null&&obj.constructor!=null&&obj.constructor.name!=null&&obj.constructor.name===type.name}function numberIsNaN(obj){return obj!==obj}const hexSliceLookupTable=function(){const alphabet="0123456789abcdef";const table=new Array(256);for(let i2=0;i2<16;++i2){const i16=i2*16;for(let j=0;j<16;++j){table[i16+j]=alphabet[i2]+alphabet[j]}}return table}();function defineBigIntMethod(fn){return typeof BigInt==="undefined"?BufferBigIntNotDefined:fn}function BufferBigIntNotDefined(){throw new Error("BigInt not supported")}})(buffer);const Buffer3=buffer.Buffer;exports2.Blob=buffer.Blob;exports2.BlobOptions=buffer.BlobOptions;exports2.Buffer=buffer.Buffer;exports2.File=buffer.File;exports2.FileOptions=buffer.FileOptions;exports2.INSPECT_MAX_BYTES=buffer.INSPECT_MAX_BYTES;exports2.SlowBuffer=buffer.SlowBuffer;exports2.TranscodeEncoding=buffer.TranscodeEncoding;exports2.atob=buffer.atob;exports2.btoa=buffer.btoa;exports2.constants=buffer.constants;exports2.default=Buffer3;exports2.isAscii=buffer.isAscii;exports2.isUtf8=buffer.isUtf8;exports2.kMaxLength=buffer.kMaxLength;exports2.kStringMaxLength=buffer.kStringMaxLength;exports2.resolveObjectURL=buffer.resolveObjectURL;exports2.transcode=buffer.transcode})(dist);return dist}var bn$2=bn$3.exports;var hasRequiredBn$1;function requireBn$1(){if(hasRequiredBn$1)return bn$3.exports;hasRequiredBn$1=1;(function(module2){(function(module3,exports2){function assert2(val,msg){if(!val)throw new Error(msg||"Assertion failed")}function inherits2(ctor,superCtor){ctor.super_=superCtor;var TempCtor=function(){};TempCtor.prototype=superCtor.prototype;ctor.prototype=new TempCtor;ctor.prototype.constructor=ctor}function BN2(number2,base2,endian){if(BN2.isBN(number2)){return number2}this.negative=0;this.words=null;this.length=0;this.red=null;if(number2!==null){if(base2==="le"||base2==="be"){endian=base2;base2=10}this._init(number2||0,base2||10,endian||"be")}}if(typeof module3==="object"){module3.exports=BN2}else{exports2.BN=BN2}BN2.BN=BN2;BN2.wordSize=26;var Buffer3;try{if(typeof window!=="undefined"&&typeof window.Buffer!=="undefined"){Buffer3=window.Buffer}else{Buffer3=requireDist().Buffer}}catch(e){}BN2.isBN=function isBN(num){if(num instanceof BN2){return true}return num!==null&&typeof num==="object"&&num.constructor.wordSize===BN2.wordSize&&Array.isArray(num.words)};BN2.max=function max(left,right){if(left.cmp(right)>0)return left;return right};BN2.min=function min(left,right){if(left.cmp(right)<0)return left;return right};BN2.prototype._init=function init4(number2,base2,endian){if(typeof number2==="number"){return this._initNumber(number2,base2,endian)}if(typeof number2==="object"){return this._initArray(number2,base2,endian)}if(base2==="hex"){base2=16}assert2(base2===(base2|0)&&base2>=2&&base2<=36);number2=number2.toString().replace(/\s+/g,"");var start=0;if(number2[0]==="-"){start++;this.negative=1}if(start<number2.length){if(base2===16){this._parseHex(number2,start,endian)}else{this._parseBase(number2,base2,start);if(endian==="le"){this._initArray(this.toArray(),base2,endian)}}}};BN2.prototype._initNumber=function _initNumber(number2,base2,endian){if(number2<0){this.negative=1;number2=-number2}if(number2<67108864){this.words=[number2&67108863];this.length=1}else if(number2<4503599627370496){this.words=[number2&67108863,number2/67108864&67108863];this.length=2}else{assert2(number2<9007199254740992);this.words=[number2&67108863,number2/67108864&67108863,1];this.length=3}if(endian!=="le")return;this._initArray(this.toArray(),base2,endian)};BN2.prototype._initArray=function _initArray(number2,base2,endian){assert2(typeof number2.length==="number");if(number2.length<=0){this.words=[0];this.length=1;return this}this.length=Math.ceil(number2.length/3);this.words=new Array(this.length);for(var i=0;i<this.length;i++){this.words[i]=0}var j,w;var off=0;if(endian==="be"){for(i=number2.length-1,j=0;i>=0;i-=3){w=number2[i]|number2[i-1]<<8|number2[i-2]<<16;this.words[j]|=w<<off&67108863;this.words[j+1]=w>>>26-off&67108863;off+=24;if(off>=26){off-=26;j++}}}else if(endian==="le"){for(i=0,j=0;i<number2.length;i+=3){w=number2[i]|number2[i+1]<<8|number2[i+2]<<16;this.words[j]|=w<<off&67108863;this.words[j+1]=w>>>26-off&67108863;off+=24;if(off>=26){off-=26;j++}}}return this._strip()};function parseHex4Bits(string,index){var c=string.charCodeAt(index);if(c>=48&&c<=57){return c-48}else if(c>=65&&c<=70){return c-55}else if(c>=97&&c<=102){return c-87}else{assert2(false,"Invalid character in "+string)}}function parseHexByte(string,lowerBound,index){var r=parseHex4Bits(string,index);if(index-1>=lowerBound){r|=parseHex4Bits(string,index-1)<<4}return r}BN2.prototype._parseHex=function _parseHex(number2,start,endian){this.length=Math.ceil((number2.length-start)/6);this.words=new Array(this.length);for(var i=0;i<this.length;i++){this.words[i]=0}var off=0;var j=0;var w;if(endian==="be"){for(i=number2.length-1;i>=start;i-=2){w=parseHexByte(number2,start,i)<<off;this.words[j]|=w&67108863;if(off>=18){off-=18;j+=1;this.words[j]|=w>>>26}else{off+=8}}}else{var parseLength=number2.length-start;for(i=parseLength%2===0?start+1:start;i<number2.length;i+=2){w=parseHexByte(number2,start,i)<<off;this.words[j]|=w&67108863;if(off>=18){off-=18;j+=1;this.words[j]|=w>>>26}else{off+=8}}}this._strip()};function parseBase(str,start,end,mul5){var r=0;var b2=0;var len=Math.min(str.length,end);for(var i=start;i<len;i++){var c=str.charCodeAt(i)-48;r*=mul5;if(c>=49){b2=c-49+10}else if(c>=17){b2=c-17+10}else{b2=c}assert2(c>=0&&b2<mul5,"Invalid character");r+=b2}return r}BN2.prototype._parseBase=function _parseBase(number2,base2,start){this.words=[0];this.length=1;for(var limbLen=0,limbPow=1;limbPow<=67108863;limbPow*=base2){limbLen++}limbLen--;limbPow=limbPow/base2|0;var total=number2.length-start;var mod2=total%limbLen;var end=Math.min(total,total-mod2)+start;var word=0;for(var i=start;i<end;i+=limbLen){word=parseBase(number2,i,i+limbLen,base2);this.imuln(limbPow);if(this.words[0]+word<67108864){this.words[0]+=word}else{this._iaddn(word)}}if(mod2!==0){var pow3=1;word=parseBase(number2,i,number2.length,base2);for(i=0;i<mod2;i++){pow3*=base2}this.imuln(pow3);if(this.words[0]+word<67108864){this.words[0]+=word}else{this._iaddn(word)}}this._strip()};BN2.prototype.copy=function copy2(dest){dest.words=new Array(this.length);for(var i=0;i<this.length;i++){dest.words[i]=this.words[i]}dest.length=this.length;dest.negative=this.negative;dest.red=this.red};function move(dest,src){dest.words=src.words;dest.length=src.length;dest.negative=src.negative;dest.red=src.red}BN2.prototype._move=function _move(dest){move(dest,this)};BN2.prototype.clone=function clone(){var r=new BN2(null);this.copy(r);return r};BN2.prototype._expand=function _expand(size){while(this.length<size){this.words[this.length++]=0}return this};BN2.prototype._strip=function strip(){while(this.length>1&&this.words[this.length-1]===0){this.length--}return this._normSign()};BN2.prototype._normSign=function _normSign(){if(this.length===1&&this.words[0]===0){this.negative=0}return this};if(typeof Symbol!=="undefined"&&typeof Symbol.for==="function"){try{BN2.prototype[Symbol.for("nodejs.util.inspect.custom")]=inspect7}catch(e){BN2.prototype.inspect=inspect7}}else{BN2.prototype.inspect=inspect7}function inspect7(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"}var zeros2=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"];var groupSizes=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5];var groupBases=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];BN2.prototype.toString=function toString3(base2,padding2){base2=base2||10;padding2=padding2|0||1;var out;if(base2===16||base2==="hex"){out="";var off=0;var carry=0;for(var i=0;i<this.length;i++){var w=this.words[i];var word=((w<<off|carry)&16777215).toString(16);carry=w>>>24-off&16777215;off+=2;if(off>=26){off-=26;i--}if(carry!==0||i!==this.length-1){out=zeros2[6-word.length]+word+out}else{out=word+out}}if(carry!==0){out=carry.toString(16)+out}while(out.length%padding2!==0){out="0"+out}if(this.negative!==0){out="-"+out}return out}if(base2===(base2|0)&&base2>=2&&base2<=36){var groupSize=groupSizes[base2];var groupBase=groupBases[base2];out="";var c=this.clone();c.negative=0;while(!c.isZero()){var r=c.modrn(groupBase).toString(base2);c=c.idivn(groupBase);if(!c.isZero()){out=zeros2[groupSize-r.length]+r+out}else{out=r+out}}if(this.isZero()){out="0"+out}while(out.length%padding2!==0){out="0"+out}if(this.negative!==0){out="-"+out}return out}assert2(false,"Base should be between 2 and 36")};BN2.prototype.toNumber=function toNumber2(){var ret=this.words[0];if(this.length===2){ret+=this.words[1]*67108864}else if(this.length===3&&this.words[2]===1){ret+=4503599627370496+this.words[1]*67108864}else if(this.length>2){assert2(false,"Number can only safely store up to 53 bits")}return this.negative!==0?-ret:ret};BN2.prototype.toJSON=function toJSON4(){return this.toString(16,2)};if(Buffer3){BN2.prototype.toBuffer=function toBuffer(endian,length){return this.toArrayLike(Buffer3,endian,length)}}BN2.prototype.toArray=function toArray2(endian,length){return this.toArrayLike(Array,endian,length)};var allocate=function allocate2(ArrayType,size){if(ArrayType.allocUnsafe){return ArrayType.allocUnsafe(size)}return new ArrayType(size)};BN2.prototype.toArrayLike=function toArrayLike(ArrayType,endian,length){this._strip();var byteLength=this.byteLength();var reqLength=length||Math.max(1,byteLength);assert2(byteLength<=reqLength,"byte array longer than desired length");assert2(reqLength>0,"Requested array length <= 0");var res=allocate(ArrayType,reqLength);var postfix=endian==="le"?"LE":"BE";this["_toArrayLike"+postfix](res,byteLength);return res};BN2.prototype._toArrayLikeLE=function _toArrayLikeLE(res,byteLength){var position=0;var carry=0;for(var i=0,shift=0;i<this.length;i++){var word=this.words[i]<<shift|carry;res[position++]=word&255;if(position<res.length){res[position++]=word>>8&255}if(position<res.length){res[position++]=word>>16&255}if(shift===6){if(position<res.length){res[position++]=word>>24&255}carry=0;shift=0}else{carry=word>>>24;shift+=2}}if(position<res.length){res[position++]=carry;while(position<res.length){res[position++]=0}}};BN2.prototype._toArrayLikeBE=function _toArrayLikeBE(res,byteLength){var position=res.length-1;var carry=0;for(var i=0,shift=0;i<this.length;i++){var word=this.words[i]<<shift|carry;res[position--]=word&255;if(position>=0){res[position--]=word>>8&255}if(position>=0){res[position--]=word>>16&255}if(shift===6){if(position>=0){res[position--]=word>>24&255}carry=0;shift=0}else{carry=word>>>24;shift+=2}}if(position>=0){res[position--]=carry;while(position>=0){res[position--]=0}}};if(Math.clz32){BN2.prototype._countBits=function _countBits(w){return 32-Math.clz32(w)}}else{BN2.prototype._countBits=function _countBits(w){var t=w;var r=0;if(t>=4096){r+=13;t>>>=13}if(t>=64){r+=7;t>>>=7}if(t>=8){r+=4;t>>>=4}if(t>=2){r+=2;t>>>=2}return r+t}}BN2.prototype._zeroBits=function _zeroBits(w){if(w===0)return 26;var t=w;var r=0;if((t&8191)===0){r+=13;t>>>=13}if((t&127)===0){r+=7;t>>>=7}if((t&15)===0){r+=4;t>>>=4}if((t&3)===0){r+=2;t>>>=2}if((t&1)===0){r++}return r};BN2.prototype.bitLength=function bitLength(){var w=this.words[this.length-1];var hi=this._countBits(w);return(this.length-1)*26+hi};function toBitArray(num){var w=new Array(num.bitLength());for(var bit=0;bit<w.length;bit++){var off=bit/26|0;var wbit=bit%26;w[bit]=num.words[off]>>>wbit&1}return w}BN2.prototype.zeroBits=function zeroBits(){if(this.isZero())return 0;var r=0;for(var i=0;i<this.length;i++){var b2=this._zeroBits(this.words[i]);r+=b2;if(b2!==26)break}return r};BN2.prototype.byteLength=function byteLength(){return Math.ceil(this.bitLength()/8)};BN2.prototype.toTwos=function toTwos2(width){if(this.negative!==0){return this.abs().inotn(width).iaddn(1)}return this.clone()};BN2.prototype.fromTwos=function fromTwos2(width){if(this.testn(width-1)){return this.notn(width).iaddn(1).ineg()}return this.clone()};BN2.prototype.isNeg=function isNeg(){return this.negative!==0};BN2.prototype.neg=function neg5(){return this.clone().ineg()};BN2.prototype.ineg=function ineg(){if(!this.isZero()){this.negative^=1}return this};BN2.prototype.iuor=function iuor(num){while(this.length<num.length){this.words[this.length++]=0}for(var i=0;i<num.length;i++){this.words[i]=this.words[i]|num.words[i]}return this._strip()};BN2.prototype.ior=function ior(num){assert2((this.negative|num.negative)===0);return this.iuor(num)};BN2.prototype.or=function or(num){if(this.length>num.length)return this.clone().ior(num);return num.clone().ior(this)};BN2.prototype.uor=function uor(num){if(this.length>num.length)return this.clone().iuor(num);return num.clone().iuor(this)};BN2.prototype.iuand=function iuand(num){var b2;if(this.length>num.length){b2=num}else{b2=this}for(var i=0;i<b2.length;i++){this.words[i]=this.words[i]&num.words[i]}this.length=b2.length;return this._strip()};BN2.prototype.iand=function iand(num){assert2((this.negative|num.negative)===0);return this.iuand(num)};BN2.prototype.and=function and(num){if(this.length>num.length)return this.clone().iand(num);return num.clone().iand(this)};BN2.prototype.uand=function uand(num){if(this.length>num.length)return this.clone().iuand(num);return num.clone().iuand(this)};BN2.prototype.iuxor=function iuxor(num){var a;var b2;if(this.length>num.length){a=this;b2=num}else{a=num;b2=this}for(var i=0;i<b2.length;i++){this.words[i]=a.words[i]^b2.words[i]}if(this!==a){for(;i<a.length;i++){this.words[i]=a.words[i]}}this.length=a.length;return this._strip()};BN2.prototype.ixor=function ixor(num){assert2((this.negative|num.negative)===0);return this.iuxor(num)};BN2.prototype.xor=function xor(num){if(this.length>num.length)return this.clone().ixor(num);return num.clone().ixor(this)};BN2.prototype.uxor=function uxor(num){if(this.length>num.length)return this.clone().iuxor(num);return num.clone().iuxor(this)};BN2.prototype.inotn=function inotn(width){assert2(typeof width==="number"&&width>=0);var bytesNeeded=Math.ceil(width/26)|0;var bitsLeft=width%26;this._expand(bytesNeeded);if(bitsLeft>0){bytesNeeded--}for(var i=0;i<bytesNeeded;i++){this.words[i]=~this.words[i]&67108863}if(bitsLeft>0){this.words[i]=~this.words[i]&67108863>>26-bitsLeft}return this._strip()};BN2.prototype.notn=function notn(width){return this.clone().inotn(width)};BN2.prototype.setn=function setn(bit,val){assert2(typeof bit==="number"&&bit>=0);var off=bit/26|0;var wbit=bit%26;this._expand(off+1);if(val){this.words[off]=this.words[off]|1<<wbit}else{this.words[off]=this.words[off]&~(1<<wbit)}return this._strip()};BN2.prototype.iadd=function iadd(num){var r;if(this.negative!==0&&num.negative===0){this.negative=0;r=this.isub(num);this.negative^=1;return this._normSign()}else if(this.negative===0&&num.negative!==0){num.negative=0;r=this.isub(num);num.negative=1;return r._normSign()}var a,b2;if(this.length>num.length){a=this;b2=num}else{a=num;b2=this}var carry=0;for(var i=0;i<b2.length;i++){r=(a.words[i]|0)+(b2.words[i]|0)+carry;this.words[i]=r&67108863;carry=r>>>26}for(;carry!==0&&i<a.length;i++){r=(a.words[i]|0)+carry;this.words[i]=r&67108863;carry=r>>>26}this.length=a.length;if(carry!==0){this.words[this.length]=carry;this.length++}else if(a!==this){for(;i<a.length;i++){this.words[i]=a.words[i]}}return this};BN2.prototype.add=function add6(num){var res;if(num.negative!==0&&this.negative===0){num.negative=0;res=this.sub(num);num.negative^=1;return res}else if(num.negative===0&&this.negative!==0){this.negative=0;res=num.sub(this);this.negative=1;return res}if(this.length>num.length)return this.clone().iadd(num);return num.clone().iadd(this)};BN2.prototype.isub=function isub(num){if(num.negative!==0){num.negative=0;var r=this.iadd(num);num.negative=1;return r._normSign()}else if(this.negative!==0){this.negative=0;this.iadd(num);this.negative=1;return this._normSign()}var cmp=this.cmp(num);if(cmp===0){this.negative=0;this.length=1;this.words[0]=0;return this}var a,b2;if(cmp>0){a=this;b2=num}else{a=num;b2=this}var carry=0;for(var i=0;i<b2.length;i++){r=(a.words[i]|0)-(b2.words[i]|0)+carry;carry=r>>26;this.words[i]=r&67108863}for(;carry!==0&&i<a.length;i++){r=(a.words[i]|0)+carry;carry=r>>26;this.words[i]=r&67108863}if(carry===0&&i<a.length&&a!==this){for(;i<a.length;i++){this.words[i]=a.words[i]}}this.length=Math.max(this.length,i);if(a!==this){this.negative=1}return this._strip()};BN2.prototype.sub=function sub(num){return this.clone().isub(num)};function smallMulTo(self2,num,out){out.negative=num.negative^self2.negative;var len=self2.length+num.length|0;out.length=len;len=len-1|0;var a=self2.words[0]|0;var b2=num.words[0]|0;var r=a*b2;var lo=r&67108863;var carry=r/67108864|0;out.words[0]=lo;for(var k=1;k<len;k++){var ncarry=carry>>>26;var rword=carry&67108863;var maxJ=Math.min(k,num.length-1);for(var j=Math.max(0,k-self2.length+1);j<=maxJ;j++){var i=k-j|0;a=self2.words[i]|0;b2=num.words[j]|0;r=a*b2+rword;ncarry+=r/67108864|0;rword=r&67108863}out.words[k]=rword|0;carry=ncarry|0}if(carry!==0){out.words[k]=carry|0}else{out.length--}return out._strip()}var comb10MulTo=function comb10MulTo2(self2,num,out){var a=self2.words;var b2=num.words;var o=out.words;var c=0;var lo;var mid;var hi;var a0=a[0]|0;var al0=a0&8191;var ah0=a0>>>13;var a1=a[1]|0;var al1=a1&8191;var ah1=a1>>>13;var a2=a[2]|0;var al2=a2&8191;var ah2=a2>>>13;var a3=a[3]|0;var al3=a3&8191;var ah3=a3>>>13;var a4=a[4]|0;var al4=a4&8191;var ah4=a4>>>13;var a5=a[5]|0;var al5=a5&8191;var ah5=a5>>>13;var a6=a[6]|0;var al6=a6&8191;var ah6=a6>>>13;var a7=a[7]|0;var al7=a7&8191;var ah7=a7>>>13;var a8=a[8]|0;var al8=a8&8191;var ah8=a8>>>13;var a9=a[9]|0;var al9=a9&8191;var ah9=a9>>>13;var b0=b2[0]|0;var bl0=b0&8191;var bh0=b0>>>13;var b1=b2[1]|0;var bl1=b1&8191;var bh1=b1>>>13;var b22=b2[2]|0;var bl2=b22&8191;var bh2=b22>>>13;var b3=b2[3]|0;var bl3=b3&8191;var bh3=b3>>>13;var b4=b2[4]|0;var bl4=b4&8191;var bh4=b4>>>13;var b5=b2[5]|0;var bl5=b5&8191;var bh5=b5>>>13;var b6=b2[6]|0;var bl6=b6&8191;var bh6=b6>>>13;var b7=b2[7]|0;var bl7=b7&8191;var bh7=b7>>>13;var b8=b2[8]|0;var bl8=b8&8191;var bh8=b8>>>13;var b9=b2[9]|0;var bl9=b9&8191;var bh9=b9>>>13;out.negative=self2.negative^num.negative;out.length=19;lo=Math.imul(al0,bl0);mid=Math.imul(al0,bh0);mid=mid+Math.imul(ah0,bl0)|0;hi=Math.imul(ah0,bh0);var w0=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w0>>>26)|0;w0&=67108863;lo=Math.imul(al1,bl0);mid=Math.imul(al1,bh0);mid=mid+Math.imul(ah1,bl0)|0;hi=Math.imul(ah1,bh0);lo=lo+Math.imul(al0,bl1)|0;mid=mid+Math.imul(al0,bh1)|0;mid=mid+Math.imul(ah0,bl1)|0;hi=hi+Math.imul(ah0,bh1)|0;var w1=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w1>>>26)|0;w1&=67108863;lo=Math.imul(al2,bl0);mid=Math.imul(al2,bh0);mid=mid+Math.imul(ah2,bl0)|0;hi=Math.imul(ah2,bh0);lo=lo+Math.imul(al1,bl1)|0;mid=mid+Math.imul(al1,bh1)|0;mid=mid+Math.imul(ah1,bl1)|0;hi=hi+Math.imul(ah1,bh1)|0;lo=lo+Math.imul(al0,bl2)|0;mid=mid+Math.imul(al0,bh2)|0;mid=mid+Math.imul(ah0,bl2)|0;hi=hi+Math.imul(ah0,bh2)|0;var w2=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w2>>>26)|0;w2&=67108863;lo=Math.imul(al3,bl0);mid=Math.imul(al3,bh0);mid=mid+Math.imul(ah3,bl0)|0;hi=Math.imul(ah3,bh0);lo=lo+Math.imul(al2,bl1)|0;mid=mid+Math.imul(al2,bh1)|0;mid=mid+Math.imul(ah2,bl1)|0;hi=hi+Math.imul(ah2,bh1)|0;lo=lo+Math.imul(al1,bl2)|0;mid=mid+Math.imul(al1,bh2)|0;mid=mid+Math.imul(ah1,bl2)|0;hi=hi+Math.imul(ah1,bh2)|0;lo=lo+Math.imul(al0,bl3)|0;mid=mid+Math.imul(al0,bh3)|0;mid=mid+Math.imul(ah0,bl3)|0;hi=hi+Math.imul(ah0,bh3)|0;var w3=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w3>>>26)|0;w3&=67108863;lo=Math.imul(al4,bl0);mid=Math.imul(al4,bh0);mid=mid+Math.imul(ah4,bl0)|0;hi=Math.imul(ah4,bh0);lo=lo+Math.imul(al3,bl1)|0;mid=mid+Math.imul(al3,bh1)|0;mid=mid+Math.imul(ah3,bl1)|0;hi=hi+Math.imul(ah3,bh1)|0;lo=lo+Math.imul(al2,bl2)|0;mid=mid+Math.imul(al2,bh2)|0;mid=mid+Math.imul(ah2,bl2)|0;hi=hi+Math.imul(ah2,bh2)|0;lo=lo+Math.imul(al1,bl3)|0;mid=mid+Math.imul(al1,bh3)|0;mid=mid+Math.imul(ah1,bl3)|0;hi=hi+Math.imul(ah1,bh3)|0;lo=lo+Math.imul(al0,bl4)|0;mid=mid+Math.imul(al0,bh4)|0;mid=mid+Math.imul(ah0,bl4)|0;hi=hi+Math.imul(ah0,bh4)|0;var w4=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w4>>>26)|0;w4&=67108863;lo=Math.imul(al5,bl0);mid=Math.imul(al5,bh0);mid=mid+Math.imul(ah5,bl0)|0;hi=Math.imul(ah5,bh0);lo=lo+Math.imul(al4,bl1)|0;mid=mid+Math.imul(al4,bh1)|0;mid=mid+Math.imul(ah4,bl1)|0;hi=hi+Math.imul(ah4,bh1)|0;lo=lo+Math.imul(al3,bl2)|0;mid=mid+Math.imul(al3,bh2)|0;mid=mid+Math.imul(ah3,bl2)|0;hi=hi+Math.imul(ah3,bh2)|0;lo=lo+Math.imul(al2,bl3)|0;mid=mid+Math.imul(al2,bh3)|0;mid=mid+Math.imul(ah2,bl3)|0;hi=hi+Math.imul(ah2,bh3)|0;lo=lo+Math.imul(al1,bl4)|0;mid=mid+Math.imul(al1,bh4)|0;mid=mid+Math.imul(ah1,bl4)|0;hi=hi+Math.imul(ah1,bh4)|0;lo=lo+Math.imul(al0,bl5)|0;mid=mid+Math.imul(al0,bh5)|0;mid=mid+Math.imul(ah0,bl5)|0;hi=hi+Math.imul(ah0,bh5)|0;var w5=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w5>>>26)|0;w5&=67108863;lo=Math.imul(al6,bl0);mid=Math.imul(al6,bh0);mid=mid+Math.imul(ah6,bl0)|0;hi=Math.imul(ah6,bh0);lo=lo+Math.imul(al5,bl1)|0;mid=mid+Math.imul(al5,bh1)|0;mid=mid+Math.imul(ah5,bl1)|0;hi=hi+Math.imul(ah5,bh1)|0;lo=lo+Math.imul(al4,bl2)|0;mid=mid+Math.imul(al4,bh2)|0;mid=mid+Math.imul(ah4,bl2)|0;hi=hi+Math.imul(ah4,bh2)|0;lo=lo+Math.imul(al3,bl3)|0;mid=mid+Math.imul(al3,bh3)|0;mid=mid+Math.imul(ah3,bl3)|0;hi=hi+Math.imul(ah3,bh3)|0;lo=lo+Math.imul(al2,bl4)|0;mid=mid+Math.imul(al2,bh4)|0;mid=mid+Math.imul(ah2,bl4)|0;hi=hi+Math.imul(ah2,bh4)|0;lo=lo+Math.imul(al1,bl5)|0;mid=mid+Math.imul(al1,bh5)|0;mid=mid+Math.imul(ah1,bl5)|0;hi=hi+Math.imul(ah1,bh5)|0;lo=lo+Math.imul(al0,bl6)|0;mid=mid+Math.imul(al0,bh6)|0;mid=mid+Math.imul(ah0,bl6)|0;hi=hi+Math.imul(ah0,bh6)|0;var w6=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w6>>>26)|0;w6&=67108863;lo=Math.imul(al7,bl0);mid=Math.imul(al7,bh0);mid=mid+Math.imul(ah7,bl0)|0;hi=Math.imul(ah7,bh0);lo=lo+Math.imul(al6,bl1)|0;mid=mid+Math.imul(al6,bh1)|0;mid=mid+Math.imul(ah6,bl1)|0;hi=hi+Math.imul(ah6,bh1)|0;lo=lo+Math.imul(al5,bl2)|0;mid=mid+Math.imul(al5,bh2)|0;mid=mid+Math.imul(ah5,bl2)|0;hi=hi+Math.imul(ah5,bh2)|0;lo=lo+Math.imul(al4,bl3)|0;mid=mid+Math.imul(al4,bh3)|0;mid=mid+Math.imul(ah4,bl3)|0;hi=hi+Math.imul(ah4,bh3)|0;lo=lo+Math.imul(al3,bl4)|0;mid=mid+Math.imul(al3,bh4)|0;mid=mid+Math.imul(ah3,bl4)|0;hi=hi+Math.imul(ah3,bh4)|0;lo=lo+Math.imul(al2,bl5)|0;mid=mid+Math.imul(al2,bh5)|0;mid=mid+Math.imul(ah2,bl5)|0;hi=hi+Math.imul(ah2,bh5)|0;lo=lo+Math.imul(al1,bl6)|0;mid=mid+Math.imul(al1,bh6)|0;mid=mid+Math.imul(ah1,bl6)|0;hi=hi+Math.imul(ah1,bh6)|0;lo=lo+Math.imul(al0,bl7)|0;mid=mid+Math.imul(al0,bh7)|0;mid=mid+Math.imul(ah0,bl7)|0;hi=hi+Math.imul(ah0,bh7)|0;var w7=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w7>>>26)|0;w7&=67108863;lo=Math.imul(al8,bl0);mid=Math.imul(al8,bh0);mid=mid+Math.imul(ah8,bl0)|0;hi=Math.imul(ah8,bh0);lo=lo+Math.imul(al7,bl1)|0;mid=mid+Math.imul(al7,bh1)|0;mid=mid+Math.imul(ah7,bl1)|0;hi=hi+Math.imul(ah7,bh1)|0;lo=lo+Math.imul(al6,bl2)|0;mid=mid+Math.imul(al6,bh2)|0;mid=mid+Math.imul(ah6,bl2)|0;hi=hi+Math.imul(ah6,bh2)|0;lo=lo+Math.imul(al5,bl3)|0;mid=mid+Math.imul(al5,bh3)|0;mid=mid+Math.imul(ah5,bl3)|0;hi=hi+Math.imul(ah5,bh3)|0;lo=lo+Math.imul(al4,bl4)|0;mid=mid+Math.imul(al4,bh4)|0;mid=mid+Math.imul(ah4,bl4)|0;hi=hi+Math.imul(ah4,bh4)|0;lo=lo+Math.imul(al3,bl5)|0;mid=mid+Math.imul(al3,bh5)|0;mid=mid+Math.imul(ah3,bl5)|0;hi=hi+Math.imul(ah3,bh5)|0;lo=lo+Math.imul(al2,bl6)|0;mid=mid+Math.imul(al2,bh6)|0;mid=mid+Math.imul(ah2,bl6)|0;hi=hi+Math.imul(ah2,bh6)|0;lo=lo+Math.imul(al1,bl7)|0;mid=mid+Math.imul(al1,bh7)|0;mid=mid+Math.imul(ah1,bl7)|0;hi=hi+Math.imul(ah1,bh7)|0;lo=lo+Math.imul(al0,bl8)|0;mid=mid+Math.imul(al0,bh8)|0;mid=mid+Math.imul(ah0,bl8)|0;hi=hi+Math.imul(ah0,bh8)|0;var w8=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w8>>>26)|0;w8&=67108863;lo=Math.imul(al9,bl0);mid=Math.imul(al9,bh0);mid=mid+Math.imul(ah9,bl0)|0;hi=Math.imul(ah9,bh0);lo=lo+Math.imul(al8,bl1)|0;mid=mid+Math.imul(al8,bh1)|0;mid=mid+Math.imul(ah8,bl1)|0;hi=hi+Math.imul(ah8,bh1)|0;lo=lo+Math.imul(al7,bl2)|0;mid=mid+Math.imul(al7,bh2)|0;mid=mid+Math.imul(ah7,bl2)|0;hi=hi+Math.imul(ah7,bh2)|0;lo=lo+Math.imul(al6,bl3)|0;mid=mid+Math.imul(al6,bh3)|0;mid=mid+Math.imul(ah6,bl3)|0;hi=hi+Math.imul(ah6,bh3)|0;lo=lo+Math.imul(al5,bl4)|0;mid=mid+Math.imul(al5,bh4)|0;mid=mid+Math.imul(ah5,bl4)|0;hi=hi+Math.imul(ah5,bh4)|0;lo=lo+Math.imul(al4,bl5)|0;mid=mid+Math.imul(al4,bh5)|0;mid=mid+Math.imul(ah4,bl5)|0;hi=hi+Math.imul(ah4,bh5)|0;lo=lo+Math.imul(al3,bl6)|0;mid=mid+Math.imul(al3,bh6)|0;mid=mid+Math.imul(ah3,bl6)|0;hi=hi+Math.imul(ah3,bh6)|0;lo=lo+Math.imul(al2,bl7)|0;mid=mid+Math.imul(al2,bh7)|0;mid=mid+Math.imul(ah2,bl7)|0;hi=hi+Math.imul(ah2,bh7)|0;lo=lo+Math.imul(al1,bl8)|0;mid=mid+Math.imul(al1,bh8)|0;mid=mid+Math.imul(ah1,bl8)|0;hi=hi+Math.imul(ah1,bh8)|0;lo=lo+Math.imul(al0,bl9)|0;mid=mid+Math.imul(al0,bh9)|0;mid=mid+Math.imul(ah0,bl9)|0;hi=hi+Math.imul(ah0,bh9)|0;var w9=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w9>>>26)|0;w9&=67108863;lo=Math.imul(al9,bl1);mid=Math.imul(al9,bh1);mid=mid+Math.imul(ah9,bl1)|0;hi=Math.imul(ah9,bh1);lo=lo+Math.imul(al8,bl2)|0;mid=mid+Math.imul(al8,bh2)|0;mid=mid+Math.imul(ah8,bl2)|0;hi=hi+Math.imul(ah8,bh2)|0;lo=lo+Math.imul(al7,bl3)|0;mid=mid+Math.imul(al7,bh3)|0;mid=mid+Math.imul(ah7,bl3)|0;hi=hi+Math.imul(ah7,bh3)|0;lo=lo+Math.imul(al6,bl4)|0;mid=mid+Math.imul(al6,bh4)|0;mid=mid+Math.imul(ah6,bl4)|0;hi=hi+Math.imul(ah6,bh4)|0;lo=lo+Math.imul(al5,bl5)|0;mid=mid+Math.imul(al5,bh5)|0;mid=mid+Math.imul(ah5,bl5)|0;hi=hi+Math.imul(ah5,bh5)|0;lo=lo+Math.imul(al4,bl6)|0;mid=mid+Math.imul(al4,bh6)|0;mid=mid+Math.imul(ah4,bl6)|0;hi=hi+Math.imul(ah4,bh6)|0;lo=lo+Math.imul(al3,bl7)|0;mid=mid+Math.imul(al3,bh7)|0;mid=mid+Math.imul(ah3,bl7)|0;hi=hi+Math.imul(ah3,bh7)|0;lo=lo+Math.imul(al2,bl8)|0;mid=mid+Math.imul(al2,bh8)|0;mid=mid+Math.imul(ah2,bl8)|0;hi=hi+Math.imul(ah2,bh8)|0;lo=lo+Math.imul(al1,bl9)|0;mid=mid+Math.imul(al1,bh9)|0;mid=mid+Math.imul(ah1,bl9)|0;hi=hi+Math.imul(ah1,bh9)|0;var w10=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w10>>>26)|0;w10&=67108863;lo=Math.imul(al9,bl2);mid=Math.imul(al9,bh2);mid=mid+Math.imul(ah9,bl2)|0;hi=Math.imul(ah9,bh2);lo=lo+Math.imul(al8,bl3)|0;mid=mid+Math.imul(al8,bh3)|0;mid=mid+Math.imul(ah8,bl3)|0;hi=hi+Math.imul(ah8,bh3)|0;lo=lo+Math.imul(al7,bl4)|0;mid=mid+Math.imul(al7,bh4)|0;mid=mid+Math.imul(ah7,bl4)|0;hi=hi+Math.imul(ah7,bh4)|0;lo=lo+Math.imul(al6,bl5)|0;mid=mid+Math.imul(al6,bh5)|0;mid=mid+Math.imul(ah6,bl5)|0;hi=hi+Math.imul(ah6,bh5)|0;lo=lo+Math.imul(al5,bl6)|0;mid=mid+Math.imul(al5,bh6)|0;mid=mid+Math.imul(ah5,bl6)|0;hi=hi+Math.imul(ah5,bh6)|0;lo=lo+Math.imul(al4,bl7)|0;mid=mid+Math.imul(al4,bh7)|0;mid=mid+Math.imul(ah4,bl7)|0;hi=hi+Math.imul(ah4,bh7)|0;lo=lo+Math.imul(al3,bl8)|0;mid=mid+Math.imul(al3,bh8)|0;mid=mid+Math.imul(ah3,bl8)|0;hi=hi+Math.imul(ah3,bh8)|0;lo=lo+Math.imul(al2,bl9)|0;mid=mid+Math.imul(al2,bh9)|0;mid=mid+Math.imul(ah2,bl9)|0;hi=hi+Math.imul(ah2,bh9)|0;var w11=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w11>>>26)|0;w11&=67108863;lo=Math.imul(al9,bl3);mid=Math.imul(al9,bh3);mid=mid+Math.imul(ah9,bl3)|0;hi=Math.imul(ah9,bh3);lo=lo+Math.imul(al8,bl4)|0;mid=mid+Math.imul(al8,bh4)|0;mid=mid+Math.imul(ah8,bl4)|0;hi=hi+Math.imul(ah8,bh4)|0;lo=lo+Math.imul(al7,bl5)|0;mid=mid+Math.imul(al7,bh5)|0;mid=mid+Math.imul(ah7,bl5)|0;hi=hi+Math.imul(ah7,bh5)|0;lo=lo+Math.imul(al6,bl6)|0;mid=mid+Math.imul(al6,bh6)|0;mid=mid+Math.imul(ah6,bl6)|0;hi=hi+Math.imul(ah6,bh6)|0;lo=lo+Math.imul(al5,bl7)|0;mid=mid+Math.imul(al5,bh7)|0;mid=mid+Math.imul(ah5,bl7)|0;hi=hi+Math.imul(ah5,bh7)|0;lo=lo+Math.imul(al4,bl8)|0;mid=mid+Math.imul(al4,bh8)|0;mid=mid+Math.imul(ah4,bl8)|0;hi=hi+Math.imul(ah4,bh8)|0;lo=lo+Math.imul(al3,bl9)|0;mid=mid+Math.imul(al3,bh9)|0;mid=mid+Math.imul(ah3,bl9)|0;hi=hi+Math.imul(ah3,bh9)|0;var w12=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w12>>>26)|0;w12&=67108863;lo=Math.imul(al9,bl4);mid=Math.imul(al9,bh4);mid=mid+Math.imul(ah9,bl4)|0;hi=Math.imul(ah9,bh4);lo=lo+Math.imul(al8,bl5)|0;mid=mid+Math.imul(al8,bh5)|0;mid=mid+Math.imul(ah8,bl5)|0;hi=hi+Math.imul(ah8,bh5)|0;lo=lo+Math.imul(al7,bl6)|0;mid=mid+Math.imul(al7,bh6)|0;mid=mid+Math.imul(ah7,bl6)|0;hi=hi+Math.imul(ah7,bh6)|0;lo=lo+Math.imul(al6,bl7)|0;mid=mid+Math.imul(al6,bh7)|0;mid=mid+Math.imul(ah6,bl7)|0;hi=hi+Math.imul(ah6,bh7)|0;lo=lo+Math.imul(al5,bl8)|0;mid=mid+Math.imul(al5,bh8)|0;mid=mid+Math.imul(ah5,bl8)|0;hi=hi+Math.imul(ah5,bh8)|0;lo=lo+Math.imul(al4,bl9)|0;mid=mid+Math.imul(al4,bh9)|0;mid=mid+Math.imul(ah4,bl9)|0;hi=hi+Math.imul(ah4,bh9)|0;var w13=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w13>>>26)|0;w13&=67108863;lo=Math.imul(al9,bl5);mid=Math.imul(al9,bh5);mid=mid+Math.imul(ah9,bl5)|0;hi=Math.imul(ah9,bh5);lo=lo+Math.imul(al8,bl6)|0;mid=mid+Math.imul(al8,bh6)|0;mid=mid+Math.imul(ah8,bl6)|0;hi=hi+Math.imul(ah8,bh6)|0;lo=lo+Math.imul(al7,bl7)|0;mid=mid+Math.imul(al7,bh7)|0;mid=mid+Math.imul(ah7,bl7)|0;hi=hi+Math.imul(ah7,bh7)|0;lo=lo+Math.imul(al6,bl8)|0;mid=mid+Math.imul(al6,bh8)|0;mid=mid+Math.imul(ah6,bl8)|0;hi=hi+Math.imul(ah6,bh8)|0;lo=lo+Math.imul(al5,bl9)|0;mid=mid+Math.imul(al5,bh9)|0;mid=mid+Math.imul(ah5,bl9)|0;hi=hi+Math.imul(ah5,bh9)|0;var w14=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w14>>>26)|0;w14&=67108863;lo=Math.imul(al9,bl6);mid=Math.imul(al9,bh6);mid=mid+Math.imul(ah9,bl6)|0;hi=Math.imul(ah9,bh6);lo=lo+Math.imul(al8,bl7)|0;mid=mid+Math.imul(al8,bh7)|0;mid=mid+Math.imul(ah8,bl7)|0;hi=hi+Math.imul(ah8,bh7)|0;lo=lo+Math.imul(al7,bl8)|0;mid=mid+Math.imul(al7,bh8)|0;mid=mid+Math.imul(ah7,bl8)|0;hi=hi+Math.imul(ah7,bh8)|0;lo=lo+Math.imul(al6,bl9)|0;mid=mid+Math.imul(al6,bh9)|0;mid=mid+Math.imul(ah6,bl9)|0;hi=hi+Math.imul(ah6,bh9)|0;var w15=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w15>>>26)|0;w15&=67108863;lo=Math.imul(al9,bl7);mid=Math.imul(al9,bh7);mid=mid+Math.imul(ah9,bl7)|0;hi=Math.imul(ah9,bh7);lo=lo+Math.imul(al8,bl8)|0;mid=mid+Math.imul(al8,bh8)|0;mid=mid+Math.imul(ah8,bl8)|0;hi=hi+Math.imul(ah8,bh8)|0;lo=lo+Math.imul(al7,bl9)|0;mid=mid+Math.imul(al7,bh9)|0;mid=mid+Math.imul(ah7,bl9)|0;hi=hi+Math.imul(ah7,bh9)|0;var w16=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w16>>>26)|0;w16&=67108863;lo=Math.imul(al9,bl8);mid=Math.imul(al9,bh8);mid=mid+Math.imul(ah9,bl8)|0;hi=Math.imul(ah9,bh8);lo=lo+Math.imul(al8,bl9)|0;mid=mid+Math.imul(al8,bh9)|0;mid=mid+Math.imul(ah8,bl9)|0;hi=hi+Math.imul(ah8,bh9)|0;var w17=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w17>>>26)|0;w17&=67108863;lo=Math.imul(al9,bl9);mid=Math.imul(al9,bh9);mid=mid+Math.imul(ah9,bl9)|0;hi=Math.imul(ah9,bh9);var w18=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w18>>>26)|0;w18&=67108863;o[0]=w0;o[1]=w1;o[2]=w2;o[3]=w3;o[4]=w4;o[5]=w5;o[6]=w6;o[7]=w7;o[8]=w8;o[9]=w9;o[10]=w10;o[11]=w11;o[12]=w12;o[13]=w13;o[14]=w14;o[15]=w15;o[16]=w16;o[17]=w17;o[18]=w18;if(c!==0){o[19]=c;out.length++}return out};if(!Math.imul){comb10MulTo=smallMulTo}function bigMulTo(self2,num,out){out.negative=num.negative^self2.negative;out.length=self2.length+num.length;var carry=0;var hncarry=0;for(var k=0;k<out.length-1;k++){var ncarry=hncarry;hncarry=0;var rword=carry&67108863;var maxJ=Math.min(k,num.length-1);for(var j=Math.max(0,k-self2.length+1);j<=maxJ;j++){var i=k-j;var a=self2.words[i]|0;var b2=num.words[j]|0;var r=a*b2;var lo=r&67108863;ncarry=ncarry+(r/67108864|0)|0;lo=lo+rword|0;rword=lo&67108863;ncarry=ncarry+(lo>>>26)|0;hncarry+=ncarry>>>26;ncarry&=67108863}out.words[k]=rword;carry=ncarry;ncarry=hncarry}if(carry!==0){out.words[k]=carry}else{out.length--}return out._strip()}function jumboMulTo(self2,num,out){return bigMulTo(self2,num,out)}BN2.prototype.mulTo=function mulTo(num,out){var res;var len=this.length+num.length;if(this.length===10&&num.length===10){res=comb10MulTo(this,num,out)}else if(len<63){res=smallMulTo(this,num,out)}else if(len<1024){res=bigMulTo(this,num,out)}else{res=jumboMulTo(this,num,out)}return res};BN2.prototype.mul=function mul5(num){var out=new BN2(null);out.words=new Array(this.length+num.length);return this.mulTo(num,out)};BN2.prototype.mulf=function mulf(num){var out=new BN2(null);out.words=new Array(this.length+num.length);return jumboMulTo(this,num,out)};BN2.prototype.imul=function imul(num){return this.clone().mulTo(num,this)};BN2.prototype.imuln=function imuln(num){var isNegNum=num<0;if(isNegNum)num=-num;assert2(typeof num==="number");assert2(num<67108864);var carry=0;for(var i=0;i<this.length;i++){var w=(this.words[i]|0)*num;var lo=(w&67108863)+(carry&67108863);carry>>=26;carry+=w/67108864|0;carry+=lo>>>26;this.words[i]=lo&67108863}if(carry!==0){this.words[i]=carry;this.length++}this.length=num===0?1:this.length;return isNegNum?this.ineg():this};BN2.prototype.muln=function muln(num){return this.clone().imuln(num)};BN2.prototype.sqr=function sqr(){return this.mul(this)};BN2.prototype.isqr=function isqr(){return this.imul(this.clone())};BN2.prototype.pow=function pow3(num){var w=toBitArray(num);if(w.length===0)return new BN2(1);var res=this;for(var i=0;i<w.length;i++,res=res.sqr()){if(w[i]!==0)break}if(++i<w.length){for(var q=res.sqr();i<w.length;i++,q=q.sqr()){if(w[i]===0)continue;res=res.mul(q)}}return res};BN2.prototype.iushln=function iushln(bits){assert2(typeof bits==="number"&&bits>=0);var r=bits%26;var s=(bits-r)/26;var carryMask=67108863>>>26-r<<26-r;var i;if(r!==0){var carry=0;for(i=0;i<this.length;i++){var newCarry=this.words[i]&carryMask;var c=(this.words[i]|0)-newCarry<<r;this.words[i]=c|carry;carry=newCarry>>>26-r}if(carry){this.words[i]=carry;this.length++}}if(s!==0){for(i=this.length-1;i>=0;i--){this.words[i+s]=this.words[i]}for(i=0;i<s;i++){this.words[i]=0}this.length+=s}return this._strip()};BN2.prototype.ishln=function ishln(bits){assert2(this.negative===0);return this.iushln(bits)};BN2.prototype.iushrn=function iushrn(bits,hint,extended){assert2(typeof bits==="number"&&bits>=0);var h;if(hint){h=(hint-hint%26)/26}else{h=0}var r=bits%26;var s=Math.min((bits-r)/26,this.length);var mask2=67108863^67108863>>>r<<r;var maskedWords=extended;h-=s;h=Math.max(0,h);if(maskedWords){for(var i=0;i<s;i++){maskedWords.words[i]=this.words[i]}maskedWords.length=s}if(s===0);else if(this.length>s){this.length-=s;for(i=0;i<this.length;i++){this.words[i]=this.words[i+s]}}else{this.words[0]=0;this.length=1}var carry=0;for(i=this.length-1;i>=0&&(carry!==0||i>=h);i--){var word=this.words[i]|0;this.words[i]=carry<<26-r|word>>>r;carry=word&mask2}if(maskedWords&&carry!==0){maskedWords.words[maskedWords.length++]=carry}if(this.length===0){this.words[0]=0;this.length=1}return this._strip()};BN2.prototype.ishrn=function ishrn(bits,hint,extended){assert2(this.negative===0);return this.iushrn(bits,hint,extended)};BN2.prototype.shln=function shln(bits){return this.clone().ishln(bits)};BN2.prototype.ushln=function ushln(bits){return this.clone().iushln(bits)};BN2.prototype.shrn=function shrn(bits){return this.clone().ishrn(bits)};BN2.prototype.ushrn=function ushrn(bits){return this.clone().iushrn(bits)};BN2.prototype.testn=function testn(bit){assert2(typeof bit==="number"&&bit>=0);var r=bit%26;var s=(bit-r)/26;var q=1<<r;if(this.length<=s)return false;var w=this.words[s];return!!(w&q)};BN2.prototype.imaskn=function imaskn(bits){assert2(typeof bits==="number"&&bits>=0);var r=bits%26;var s=(bits-r)/26;assert2(this.negative===0,"imaskn works only with positive numbers");if(this.length<=s){return this}if(r!==0){s++}this.length=Math.min(s,this.length);if(r!==0){var mask2=67108863^67108863>>>r<<r;this.words[this.length-1]&=mask2}return this._strip()};BN2.prototype.maskn=function maskn(bits){return this.clone().imaskn(bits)};BN2.prototype.iaddn=function iaddn(num){assert2(typeof num==="number");assert2(num<67108864);if(num<0)return this.isubn(-num);if(this.negative!==0){if(this.length===1&&(this.words[0]|0)<=num){this.words[0]=num-(this.words[0]|0);this.negative=0;return this}this.negative=0;this.isubn(num);this.negative=1;return this}return this._iaddn(num)};BN2.prototype._iaddn=function _iaddn(num){this.words[0]+=num;for(var i=0;i<this.length&&this.words[i]>=67108864;i++){this.words[i]-=67108864;if(i===this.length-1){this.words[i+1]=1}else{this.words[i+1]++}}this.length=Math.max(this.length,i+1);return this};BN2.prototype.isubn=function isubn(num){assert2(typeof num==="number");assert2(num<67108864);if(num<0)return this.iaddn(-num);if(this.negative!==0){this.negative=0;this.iaddn(num);this.negative=1;return this}this.words[0]-=num;if(this.length===1&&this.words[0]<0){this.words[0]=-this.words[0];this.negative=1}else{for(var i=0;i<this.length&&this.words[i]<0;i++){this.words[i]+=67108864;this.words[i+1]-=1}}return this._strip()};BN2.prototype.addn=function addn(num){return this.clone().iaddn(num)};BN2.prototype.subn=function subn(num){return this.clone().isubn(num)};BN2.prototype.iabs=function iabs(){this.negative=0;return this};BN2.prototype.abs=function abs(){return this.clone().iabs()};BN2.prototype._ishlnsubmul=function _ishlnsubmul(num,mul5,shift){var len=num.length+shift;var i;this._expand(len);var w;var carry=0;for(i=0;i<num.length;i++){w=(this.words[i+shift]|0)+carry;var right=(num.words[i]|0)*mul5;w-=right&67108863;carry=(w>>26)-(right/67108864|0);this.words[i+shift]=w&67108863}for(;i<this.length-shift;i++){w=(this.words[i+shift]|0)+carry;carry=w>>26;this.words[i+shift]=w&67108863}if(carry===0)return this._strip();assert2(carry===-1);carry=0;for(i=0;i<this.length;i++){w=-(this.words[i]|0)+carry;carry=w>>26;this.words[i]=w&67108863}this.negative=1;return this._strip()};BN2.prototype._wordDiv=function _wordDiv(num,mode){var shift=this.length-num.length;var a=this.clone();var b2=num;var bhi=b2.words[b2.length-1]|0;var bhiBits=this._countBits(bhi);shift=26-bhiBits;if(shift!==0){b2=b2.ushln(shift);a.iushln(shift);bhi=b2.words[b2.length-1]|0}var m=a.length-b2.length;var q;if(mode!=="mod"){q=new BN2(null);q.length=m+1;q.words=new Array(q.length);for(var i=0;i<q.length;i++){q.words[i]=0}}var diff=a.clone()._ishlnsubmul(b2,1,m);if(diff.negative===0){a=diff;if(q){q.words[m]=1}}for(var j=m-1;j>=0;j--){var qj=(a.words[b2.length+j]|0)*67108864+(a.words[b2.length+j-1]|0);qj=Math.min(qj/bhi|0,67108863);a._ishlnsubmul(b2,qj,j);while(a.negative!==0){qj--;a.negative=0;a._ishlnsubmul(b2,1,j);if(!a.isZero()){a.negative^=1}}if(q){q.words[j]=qj}}if(q){q._strip()}a._strip();if(mode!=="div"&&shift!==0){a.iushrn(shift)}return{div:q||null,mod:a}};BN2.prototype.divmod=function divmod(num,mode,positive){assert2(!num.isZero());if(this.isZero()){return{div:new BN2(0),mod:new BN2(0)}}var div,mod2,res;if(this.negative!==0&&num.negative===0){res=this.neg().divmod(num,mode);if(mode!=="mod"){div=res.div.neg()}if(mode!=="div"){mod2=res.mod.neg();if(positive&&mod2.negative!==0){mod2.iadd(num)}}return{div:div,mod:mod2}}if(this.negative===0&&num.negative!==0){res=this.divmod(num.neg(),mode);if(mode!=="mod"){div=res.div.neg()}return{div:div,mod:res.mod}}if((this.negative&num.negative)!==0){res=this.neg().divmod(num.neg(),mode);if(mode!=="div"){mod2=res.mod.neg();if(positive&&mod2.negative!==0){mod2.isub(num)}}return{div:res.div,mod:mod2}}if(num.length>this.length||this.cmp(num)<0){return{div:new BN2(0),mod:this}}if(num.length===1){if(mode==="div"){return{div:this.divn(num.words[0]),mod:null}}if(mode==="mod"){return{div:null,mod:new BN2(this.modrn(num.words[0]))}}return{div:this.divn(num.words[0]),mod:new BN2(this.modrn(num.words[0]))}}return this._wordDiv(num,mode)};BN2.prototype.div=function div(num){return this.divmod(num,"div",false).div};BN2.prototype.mod=function mod2(num){return this.divmod(num,"mod",false).mod};BN2.prototype.umod=function umod(num){return this.divmod(num,"mod",true).mod};BN2.prototype.divRound=function divRound(num){var dm=this.divmod(num);if(dm.mod.isZero())return dm.div;var mod2=dm.div.negative!==0?dm.mod.isub(num):dm.mod;var half=num.ushrn(1);var r2=num.andln(1);var cmp=mod2.cmp(half);if(cmp<0||r2===1&&cmp===0)return dm.div;return dm.div.negative!==0?dm.div.isubn(1):dm.div.iaddn(1)};BN2.prototype.modrn=function modrn(num){var isNegNum=num<0;if(isNegNum)num=-num;assert2(num<=67108863);var p=(1<<26)%num;var acc=0;for(var i=this.length-1;i>=0;i--){acc=(p*acc+(this.words[i]|0))%num}return isNegNum?-acc:acc};BN2.prototype.modn=function modn(num){return this.modrn(num)};BN2.prototype.idivn=function idivn(num){var isNegNum=num<0;if(isNegNum)num=-num;assert2(num<=67108863);var carry=0;for(var i=this.length-1;i>=0;i--){var w=(this.words[i]|0)+carry*67108864;this.words[i]=w/num|0;carry=w%num}this._strip();return isNegNum?this.ineg():this};BN2.prototype.divn=function divn(num){return this.clone().idivn(num)};BN2.prototype.egcd=function egcd(p){assert2(p.negative===0);assert2(!p.isZero());var x=this;var y=p.clone();if(x.negative!==0){x=x.umod(p)}else{x=x.clone()}var A=new BN2(1);var B=new BN2(0);var C=new BN2(0);var D=new BN2(1);var g=0;while(x.isEven()&&y.isEven()){x.iushrn(1);y.iushrn(1);++g}var yp=y.clone();var xp=x.clone();while(!x.isZero()){for(var i=0,im=1;(x.words[0]&im)===0&&i<26;++i,im<<=1);if(i>0){x.iushrn(i);while(i-- >0){if(A.isOdd()||B.isOdd()){A.iadd(yp);B.isub(xp)}A.iushrn(1);B.iushrn(1)}}for(var j=0,jm=1;(y.words[0]&jm)===0&&j<26;++j,jm<<=1);if(j>0){y.iushrn(j);while(j-- >0){if(C.isOdd()||D.isOdd()){C.iadd(yp);D.isub(xp)}C.iushrn(1);D.iushrn(1)}}if(x.cmp(y)>=0){x.isub(y);A.isub(C);B.isub(D)}else{y.isub(x);C.isub(A);D.isub(B)}}return{a:C,b:D,gcd:y.iushln(g)}};BN2.prototype._invmp=function _invmp(p){assert2(p.negative===0);assert2(!p.isZero());var a=this;var b2=p.clone();if(a.negative!==0){a=a.umod(p)}else{a=a.clone()}var x1=new BN2(1);var x2=new BN2(0);var delta=b2.clone();while(a.cmpn(1)>0&&b2.cmpn(1)>0){for(var i=0,im=1;(a.words[0]&im)===0&&i<26;++i,im<<=1);if(i>0){a.iushrn(i);while(i-- >0){if(x1.isOdd()){x1.iadd(delta)}x1.iushrn(1)}}for(var j=0,jm=1;(b2.words[0]&jm)===0&&j<26;++j,jm<<=1);if(j>0){b2.iushrn(j);while(j-- >0){if(x2.isOdd()){x2.iadd(delta)}x2.iushrn(1)}}if(a.cmp(b2)>=0){a.isub(b2);x1.isub(x2)}else{b2.isub(a);x2.isub(x1)}}var res;if(a.cmpn(1)===0){res=x1}else{res=x2}if(res.cmpn(0)<0){res.iadd(p)}return res};BN2.prototype.gcd=function gcd(num){if(this.isZero())return num.abs();if(num.isZero())return this.abs();var a=this.clone();var b2=num.clone();a.negative=0;b2.negative=0;for(var shift=0;a.isEven()&&b2.isEven();shift++){a.iushrn(1);b2.iushrn(1)}do{while(a.isEven()){a.iushrn(1)}while(b2.isEven()){b2.iushrn(1)}var r=a.cmp(b2);if(r<0){var t=a;a=b2;b2=t}else if(r===0||b2.cmpn(1)===0){break}a.isub(b2)}while(true);return b2.iushln(shift)};BN2.prototype.invm=function invm(num){return this.egcd(num).a.umod(num)};BN2.prototype.isEven=function isEven(){return(this.words[0]&1)===0};BN2.prototype.isOdd=function isOdd(){return(this.words[0]&1)===1};BN2.prototype.andln=function andln(num){return this.words[0]&num};BN2.prototype.bincn=function bincn(bit){assert2(typeof bit==="number");var r=bit%26;var s=(bit-r)/26;var q=1<<r;if(this.length<=s){this._expand(s+1);this.words[s]|=q;return this}var carry=q;for(var i=s;carry!==0&&i<this.length;i++){var w=this.words[i]|0;w+=carry;carry=w>>>26;w&=67108863;this.words[i]=w}if(carry!==0){this.words[i]=carry;this.length++}return this};BN2.prototype.isZero=function isZero(){return this.length===1&&this.words[0]===0};BN2.prototype.cmpn=function cmpn(num){var negative=num<0;if(this.negative!==0&&!negative)return-1;if(this.negative===0&&negative)return 1;this._strip();var res;if(this.length>1){res=1}else{if(negative){num=-num}assert2(num<=67108863,"Number is too big");var w=this.words[0]|0;res=w===num?0:w<num?-1:1}if(this.negative!==0)return-res|0;return res};BN2.prototype.cmp=function cmp(num){if(this.negative!==0&&num.negative===0)return-1;if(this.negative===0&&num.negative!==0)return 1;var res=this.ucmp(num);if(this.negative!==0)return-res|0;return res};BN2.prototype.ucmp=function ucmp(num){if(this.length>num.length)return 1;if(this.length<num.length)return-1;var res=0;for(var i=this.length-1;i>=0;i--){var a=this.words[i]|0;var b2=num.words[i]|0;if(a===b2)continue;if(a<b2){res=-1}else if(a>b2){res=1}break}return res};BN2.prototype.gtn=function gtn(num){return this.cmpn(num)===1};BN2.prototype.gt=function gt(num){return this.cmp(num)===1};BN2.prototype.gten=function gten(num){return this.cmpn(num)>=0};BN2.prototype.gte=function gte(num){return this.cmp(num)>=0};BN2.prototype.ltn=function ltn(num){return this.cmpn(num)===-1};BN2.prototype.lt=function lt(num){return this.cmp(num)===-1};BN2.prototype.lten=function lten(num){return this.cmpn(num)<=0};BN2.prototype.lte=function lte(num){return this.cmp(num)<=0};BN2.prototype.eqn=function eqn(num){return this.cmpn(num)===0};BN2.prototype.eq=function eq8(num){return this.cmp(num)===0};BN2.red=function red(num){return new Red(num)};BN2.prototype.toRed=function toRed(ctx){assert2(!this.red,"Already a number in reduction context");assert2(this.negative===0,"red works only with positives");return ctx.convertTo(this)._forceRed(ctx)};BN2.prototype.fromRed=function fromRed(){assert2(this.red,"fromRed works only with numbers in reduction context");return this.red.convertFrom(this)};BN2.prototype._forceRed=function _forceRed(ctx){this.red=ctx;return this};BN2.prototype.forceRed=function forceRed(ctx){assert2(!this.red,"Already a number in reduction context");return this._forceRed(ctx)};BN2.prototype.redAdd=function redAdd(num){assert2(this.red,"redAdd works only with red numbers");return this.red.add(this,num)};BN2.prototype.redIAdd=function redIAdd(num){assert2(this.red,"redIAdd works only with red numbers");return this.red.iadd(this,num)};BN2.prototype.redSub=function redSub(num){assert2(this.red,"redSub works only with red numbers");return this.red.sub(this,num)};BN2.prototype.redISub=function redISub(num){assert2(this.red,"redISub works only with red numbers");return this.red.isub(this,num)};BN2.prototype.redShl=function redShl(num){assert2(this.red,"redShl works only with red numbers");return this.red.shl(this,num)};BN2.prototype.redMul=function redMul(num){assert2(this.red,"redMul works only with red numbers");this.red._verify2(this,num);return this.red.mul(this,num)};BN2.prototype.redIMul=function redIMul(num){assert2(this.red,"redMul works only with red numbers");this.red._verify2(this,num);return this.red.imul(this,num)};BN2.prototype.redSqr=function redSqr(){assert2(this.red,"redSqr works only with red numbers");this.red._verify1(this);return this.red.sqr(this)};BN2.prototype.redISqr=function redISqr(){assert2(this.red,"redISqr works only with red numbers");this.red._verify1(this);return this.red.isqr(this)};BN2.prototype.redSqrt=function redSqrt(){assert2(this.red,"redSqrt works only with red numbers");this.red._verify1(this);return this.red.sqrt(this)};BN2.prototype.redInvm=function redInvm(){assert2(this.red,"redInvm works only with red numbers");this.red._verify1(this);return this.red.invm(this)};BN2.prototype.redNeg=function redNeg(){assert2(this.red,"redNeg works only with red numbers");this.red._verify1(this);return this.red.neg(this)};BN2.prototype.redPow=function redPow(num){assert2(this.red&&!num.red,"redPow(normalNum)");this.red._verify1(this);return this.red.pow(this,num)};var primes={k256:null,p224:null,p192:null,p25519:null};function MPrime(name,p){this.name=name;this.p=new BN2(p,16);this.n=this.p.bitLength();this.k=new BN2(1).iushln(this.n).isub(this.p);this.tmp=this._tmp()}MPrime.prototype._tmp=function _tmp(){var tmp=new BN2(null);tmp.words=new Array(Math.ceil(this.n/13));return tmp};MPrime.prototype.ireduce=function ireduce(num){var r=num;var rlen;do{this.split(r,this.tmp);r=this.imulK(r);r=r.iadd(this.tmp);rlen=r.bitLength()}while(rlen>this.n);var cmp=rlen<this.n?-1:r.ucmp(this.p);if(cmp===0){r.words[0]=0;r.length=1}else if(cmp>0){r.isub(this.p)}else{if(r.strip!==void 0){r.strip()}else{r._strip()}}return r};MPrime.prototype.split=function split2(input,out){input.iushrn(this.n,0,out)};MPrime.prototype.imulK=function imulK(num){return num.imul(this.k)};function K256(){MPrime.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}inherits2(K256,MPrime);K256.prototype.split=function split2(input,output2){var mask2=4194303;var outLen=Math.min(input.length,9);for(var i=0;i<outLen;i++){output2.words[i]=input.words[i]}output2.length=outLen;if(input.length<=9){input.words[0]=0;input.length=1;return}var prev=input.words[9];output2.words[output2.length++]=prev&mask2;for(i=10;i<input.length;i++){var next=input.words[i]|0;input.words[i-10]=(next&mask2)<<4|prev>>>22;prev=next}prev>>>=22;input.words[i-10]=prev;if(prev===0&&input.length>10){input.length-=10}else{input.length-=9}};K256.prototype.imulK=function imulK(num){num.words[num.length]=0;num.words[num.length+1]=0;num.length+=2;var lo=0;for(var i=0;i<num.length;i++){var w=num.words[i]|0;lo+=w*977;num.words[i]=lo&67108863;lo=w*64+(lo/67108864|0)}if(num.words[num.length-1]===0){num.length--;if(num.words[num.length-1]===0){num.length--}}return num};function P224(){MPrime.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}inherits2(P224,MPrime);function P192(){MPrime.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}inherits2(P192,MPrime);function P25519(){MPrime.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}inherits2(P25519,MPrime);P25519.prototype.imulK=function imulK(num){var carry=0;for(var i=0;i<num.length;i++){var hi=(num.words[i]|0)*19+carry;var lo=hi&67108863;hi>>>=26;num.words[i]=lo;carry=hi}if(carry!==0){num.words[num.length++]=carry}return num};BN2._prime=function prime(name){if(primes[name])return primes[name];var prime2;if(name==="k256"){prime2=new K256}else if(name==="p224"){prime2=new P224}else if(name==="p192"){prime2=new P192}else if(name==="p25519"){prime2=new P25519}else{throw new Error("Unknown prime "+name)}primes[name]=prime2;return prime2};function Red(m){if(typeof m==="string"){var prime=BN2._prime(m);this.m=prime.p;this.prime=prime}else{assert2(m.gtn(1),"modulus must be greater than 1");this.m=m;this.prime=null}}Red.prototype._verify1=function _verify1(a){assert2(a.negative===0,"red works only with positives");assert2(a.red,"red works only with red numbers")};Red.prototype._verify2=function _verify2(a,b2){assert2((a.negative|b2.negative)===0,"red works only with positives");assert2(a.red&&a.red===b2.red,"red works only with red numbers")};Red.prototype.imod=function imod(a){if(this.prime)return this.prime.ireduce(a)._forceRed(this);move(a,a.umod(this.m)._forceRed(this));return a};Red.prototype.neg=function neg5(a){if(a.isZero()){return a.clone()}return this.m.sub(a)._forceRed(this)};Red.prototype.add=function add6(a,b2){this._verify2(a,b2);var res=a.add(b2);if(res.cmp(this.m)>=0){res.isub(this.m)}return res._forceRed(this)};Red.prototype.iadd=function iadd(a,b2){this._verify2(a,b2);var res=a.iadd(b2);if(res.cmp(this.m)>=0){res.isub(this.m)}return res};Red.prototype.sub=function sub(a,b2){this._verify2(a,b2);var res=a.sub(b2);if(res.cmpn(0)<0){res.iadd(this.m)}return res._forceRed(this)};Red.prototype.isub=function isub(a,b2){this._verify2(a,b2);var res=a.isub(b2);if(res.cmpn(0)<0){res.iadd(this.m)}return res};Red.prototype.shl=function shl(a,num){this._verify1(a);return this.imod(a.ushln(num))};Red.prototype.imul=function imul(a,b2){this._verify2(a,b2);return this.imod(a.imul(b2))};Red.prototype.mul=function mul5(a,b2){this._verify2(a,b2);return this.imod(a.mul(b2))};Red.prototype.isqr=function isqr(a){return this.imul(a,a.clone())};Red.prototype.sqr=function sqr(a){return this.mul(a,a)};Red.prototype.sqrt=function sqrt(a){if(a.isZero())return a.clone();var mod3=this.m.andln(3);assert2(mod3%2===1);if(mod3===3){var pow3=this.m.add(new BN2(1)).iushrn(2);return this.pow(a,pow3)}var q=this.m.subn(1);var s=0;while(!q.isZero()&&q.andln(1)===0){s++;q.iushrn(1)}assert2(!q.isZero());var one=new BN2(1).toRed(this);var nOne=one.redNeg();var lpow=this.m.subn(1).iushrn(1);var z=this.m.bitLength();z=new BN2(2*z*z).toRed(this);while(this.pow(z,lpow).cmp(nOne)!==0){z.redIAdd(nOne)}var c=this.pow(z,q);var r=this.pow(a,q.addn(1).iushrn(1));var t=this.pow(a,q);var m=s;while(t.cmp(one)!==0){var tmp=t;for(var i=0;tmp.cmp(one)!==0;i++){tmp=tmp.redSqr()}assert2(i<m);var b2=this.pow(c,new BN2(1).iushln(m-i-1));r=r.redMul(b2);c=b2.redSqr();t=t.redMul(c);m=i}return r};Red.prototype.invm=function invm(a){var inv=a._invmp(this.m);if(inv.negative!==0){inv.negative=0;return this.imod(inv).redNeg()}else{return this.imod(inv)}};Red.prototype.pow=function pow3(a,num){if(num.isZero())return new BN2(1).toRed(this);if(num.cmpn(1)===0)return a.clone();var windowSize=4;var wnd=new Array(1<<windowSize);wnd[0]=new BN2(1).toRed(this);wnd[1]=a;for(var i=2;i<wnd.length;i++){wnd[i]=this.mul(wnd[i-1],a)}var res=wnd[0];var current=0;var currentLen=0;var start=num.bitLength()%26;if(start===0){start=26}for(i=num.length-1;i>=0;i--){var word=num.words[i];for(var j=start-1;j>=0;j--){var bit=word>>j&1;if(res!==wnd[0]){res=this.sqr(res)}if(bit===0&&current===0){currentLen=0;continue}current<<=1;current|=bit;currentLen++;if(currentLen!==windowSize&&(i!==0||j!==0))continue;res=this.mul(res,wnd[current]);currentLen=0;current=0}start=26}return res};Red.prototype.convertTo=function convertTo(num){var r=num.umod(this.m);return r===num?r.clone():r};Red.prototype.convertFrom=function convertFrom(num){var res=num.clone();res.red=null;return res};BN2.mont=function mont(num){return new Mont(num)};function Mont(m){Red.call(this,m);this.shift=this.m.bitLength();if(this.shift%26!==0){this.shift+=26-this.shift%26}this.r=new BN2(1).iushln(this.shift);this.r2=this.imod(this.r.sqr());this.rinv=this.r._invmp(this.m);this.minv=this.rinv.mul(this.r).isubn(1).div(this.m);this.minv=this.minv.umod(this.r);this.minv=this.r.sub(this.minv)}inherits2(Mont,Red);Mont.prototype.convertTo=function convertTo(num){return this.imod(num.ushln(this.shift))};Mont.prototype.convertFrom=function convertFrom(num){var r=this.imod(num.mul(this.rinv));r.red=null;return r};Mont.prototype.imul=function imul(a,b2){if(a.isZero()||b2.isZero()){a.words[0]=0;a.length=1;return a}var t=a.imul(b2);var c=t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);var u=t.isub(c).iushrn(this.shift);var res=u;if(u.cmp(this.m)>=0){res=u.isub(this.m)}else if(u.cmpn(0)<0){res=u.iadd(this.m)}return res._forceRed(this)};Mont.prototype.mul=function mul5(a,b2){if(a.isZero()||b2.isZero())return new BN2(0)._forceRed(this);var t=a.mul(b2);var c=t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);var u=t.isub(c).iushrn(this.shift);var res=u;if(u.cmp(this.m)>=0){res=u.isub(this.m)}else if(u.cmpn(0)<0){res=u.iadd(this.m)}return res._forceRed(this)};Mont.prototype.invm=function invm(a){var res=this.imod(a._invmp(this.m).mul(this.r2));return res._forceRed(this)}})(module2,bn$2)})(bn$3);return bn$3.exports}var bnExports$1=requireBn$1();const BN$3=getDefaultExportFromCjs(bnExports$1);const version$q="bignumber/5.8.0";var BN$2=BN$3.BN;const logger$q=new Logger$3(version$q);const _constructorGuard$4={};const MAX_SAFE$1=9007199254740991;let _warnedToStringRadix$1=false;let BigNumber$1=class BigNumber2{constructor(constructorGuard,hex){if(constructorGuard!==_constructorGuard$4){logger$q.throwError("cannot call constructor directly; use BigNumber.from",Logger$3.errors.UNSUPPORTED_OPERATION,{operation:"new (BigNumber)"})}this._hex=hex;this._isBigNumber=true;Object.freeze(this)}fromTwos(value){return toBigNumber$1(toBN$1(this).fromTwos(value))}toTwos(value){return toBigNumber$1(toBN$1(this).toTwos(value))}abs(){if(this._hex[0]==="-"){return BigNumber2.from(this._hex.substring(1))}return this}add(other){return toBigNumber$1(toBN$1(this).add(toBN$1(other)))}sub(other){return toBigNumber$1(toBN$1(this).sub(toBN$1(other)))}div(other){const o=BigNumber2.from(other);if(o.isZero()){throwFault$2("division-by-zero","div")}return toBigNumber$1(toBN$1(this).div(toBN$1(other)))}mul(other){return toBigNumber$1(toBN$1(this).mul(toBN$1(other)))}mod(other){const value=toBN$1(other);if(value.isNeg()){throwFault$2("division-by-zero","mod")}return toBigNumber$1(toBN$1(this).umod(value))}pow(other){const value=toBN$1(other);if(value.isNeg()){throwFault$2("negative-power","pow")}return toBigNumber$1(toBN$1(this).pow(value))}and(other){const value=toBN$1(other);if(this.isNegative()||value.isNeg()){throwFault$2("unbound-bitwise-result","and")}return toBigNumber$1(toBN$1(this).and(value))}or(other){const value=toBN$1(other);if(this.isNegative()||value.isNeg()){throwFault$2("unbound-bitwise-result","or")}return toBigNumber$1(toBN$1(this).or(value))}xor(other){const value=toBN$1(other);if(this.isNegative()||value.isNeg()){throwFault$2("unbound-bitwise-result","xor")}return toBigNumber$1(toBN$1(this).xor(value))}mask(value){if(this.isNegative()||value<0){throwFault$2("negative-width","mask")}return toBigNumber$1(toBN$1(this).maskn(value))}shl(value){if(this.isNegative()||value<0){throwFault$2("negative-width","shl")}return toBigNumber$1(toBN$1(this).shln(value))}shr(value){if(this.isNegative()||value<0){throwFault$2("negative-width","shr")}return toBigNumber$1(toBN$1(this).shrn(value))}eq(other){return toBN$1(this).eq(toBN$1(other))}lt(other){return toBN$1(this).lt(toBN$1(other))}lte(other){return toBN$1(this).lte(toBN$1(other))}gt(other){return toBN$1(this).gt(toBN$1(other))}gte(other){return toBN$1(this).gte(toBN$1(other))}isNegative(){return this._hex[0]==="-"}isZero(){return toBN$1(this).isZero()}toNumber(){try{return toBN$1(this).toNumber()}catch(error){throwFault$2("overflow","toNumber",this.toString())}return null}toBigInt(){try{return BigInt(this.toString())}catch(e){}return logger$q.throwError("this platform does not support BigInt",Logger$3.errors.UNSUPPORTED_OPERATION,{value:this.toString()})}toString(){if(arguments.length>0){if(arguments[0]===10){if(!_warnedToStringRadix$1){_warnedToStringRadix$1=true;logger$q.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")}}else if(arguments[0]===16){logger$q.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()",Logger$3.errors.UNEXPECTED_ARGUMENT,{})}else{logger$q.throwError("BigNumber.toString does not accept parameters",Logger$3.errors.UNEXPECTED_ARGUMENT,{})}}return toBN$1(this).toString(10)}toHexString(){return this._hex}toJSON(key2){return{type:"BigNumber",hex:this.toHexString()}}static from(value){if(value instanceof BigNumber2){return value}if(typeof value==="string"){if(value.match(/^-?0x[0-9a-f]+$/i)){return new BigNumber2(_constructorGuard$4,toHex$2(value))}if(value.match(/^-?[0-9]+$/)){return new BigNumber2(_constructorGuard$4,toHex$2(new BN$2(value)))}return logger$q.throwArgumentError("invalid BigNumber string","value",value)}if(typeof value==="number"){if(value%1){throwFault$2("underflow","BigNumber.from",value)}if(value>=MAX_SAFE$1||value<=-MAX_SAFE$1){throwFault$2("overflow","BigNumber.from",value)}return BigNumber2.from(String(value))}const anyValue=value;if(typeof anyValue==="bigint"){return BigNumber2.from(anyValue.toString())}if(isBytes$1(anyValue)){return BigNumber2.from(hexlify$1(anyValue))}if(anyValue){if(anyValue.toHexString){const hex=anyValue.toHexString();if(typeof hex==="string"){return BigNumber2.from(hex)}}else{let hex=anyValue._hex;if(hex==null&&anyValue.type==="BigNumber"){hex=anyValue.hex}if(typeof hex==="string"){if(isHexString$1(hex)||hex[0]==="-"&&isHexString$1(hex.substring(1))){return BigNumber2.from(hex)}}}}return logger$q.throwArgumentError("invalid BigNumber value","value",value)}static isBigNumber(value){return!!(value&&value._isBigNumber)}};function toHex$2(value){if(typeof value!=="string"){return toHex$2(value.toString(16))}if(value[0]==="-"){value=value.substring(1);if(value[0]==="-"){logger$q.throwArgumentError("invalid hex","value",value)}value=toHex$2(value);if(value==="0x00"){return value}return"-"+value}if(value.substring(0,2)!=="0x"){value="0x"+value}if(value==="0x"){return"0x00"}if(value.length%2){value="0x0"+value.substring(2)}while(value.length>4&&value.substring(0,4)==="0x00"){value="0x"+value.substring(4)}return value}function toBigNumber$1(value){return BigNumber$1.from(toHex$2(value))}function toBN$1(value){const hex=BigNumber$1.from(value).toHexString();if(hex[0]==="-"){return new BN$2("-"+hex.substring(3),16)}return new BN$2(hex.substring(2),16)}function throwFault$2(fault,operation,value){const params={fault:fault,operation:operation};if(value!=null){params.value=value}return logger$q.throwError(fault,Logger$3.errors.NUMERIC_FAULT,params)}function _base36To16$1(value){return new BN$2(value,36).toString(16)}const version$p="strings/5.8.0";const logger$p=new Logger$3(version$p);var UnicodeNormalizationForm;(function(UnicodeNormalizationForm2){UnicodeNormalizationForm2["current"]="";UnicodeNormalizationForm2["NFC"]="NFC";UnicodeNormalizationForm2["NFD"]="NFD";UnicodeNormalizationForm2["NFKC"]="NFKC";UnicodeNormalizationForm2["NFKD"]="NFKD"})(UnicodeNormalizationForm||(UnicodeNormalizationForm={}));var Utf8ErrorReason;(function(Utf8ErrorReason2){Utf8ErrorReason2["UNEXPECTED_CONTINUE"]="unexpected continuation byte";Utf8ErrorReason2["BAD_PREFIX"]="bad codepoint prefix";Utf8ErrorReason2["OVERRUN"]="string overrun";Utf8ErrorReason2["MISSING_CONTINUE"]="missing continuation byte";Utf8ErrorReason2["OUT_OF_RANGE"]="out of UTF-8 range";Utf8ErrorReason2["UTF16_SURROGATE"]="UTF-16 surrogate";Utf8ErrorReason2["OVERLONG"]="overlong representation"})(Utf8ErrorReason||(Utf8ErrorReason={}));function errorFunc(reason,offset,bytes2,output2,badCodepoint){return logger$p.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`,"bytes",bytes2)}function ignoreFunc(reason,offset,bytes2,output2,badCodepoint){if(reason===Utf8ErrorReason.BAD_PREFIX||reason===Utf8ErrorReason.UNEXPECTED_CONTINUE){let i=0;for(let o=offset+1;o<bytes2.length;o++){if(bytes2[o]>>6!==2){break}i++}return i}if(reason===Utf8ErrorReason.OVERRUN){return bytes2.length-offset-1}return 0}function replaceFunc(reason,offset,bytes2,output2,badCodepoint){if(reason===Utf8ErrorReason.OVERLONG){output2.push(badCodepoint);return 0}output2.push(65533);return ignoreFunc(reason,offset,bytes2)}const Utf8ErrorFuncs=Object.freeze({error:errorFunc,ignore:ignoreFunc,replace:replaceFunc});function getUtf8CodePoints(bytes2,onError2){if(onError2==null){onError2=Utf8ErrorFuncs.error}bytes2=arrayify$1(bytes2);const result=[];let i=0;while(i<bytes2.length){const c=bytes2[i++];if(c>>7===0){result.push(c);continue}let extraLength=null;let overlongMask=null;if((c&224)===192){extraLength=1;overlongMask=127}else if((c&240)===224){extraLength=2;overlongMask=2047}else if((c&248)===240){extraLength=3;overlongMask=65535}else{if((c&192)===128){i+=onError2(Utf8ErrorReason.UNEXPECTED_CONTINUE,i-1,bytes2,result)}else{i+=onError2(Utf8ErrorReason.BAD_PREFIX,i-1,bytes2,result)}continue}if(i-1+extraLength>=bytes2.length){i+=onError2(Utf8ErrorReason.OVERRUN,i-1,bytes2,result);continue}let res=c&(1<<8-extraLength-1)-1;for(let j=0;j<extraLength;j++){let nextChar=bytes2[i];if((nextChar&192)!=128){i+=onError2(Utf8ErrorReason.MISSING_CONTINUE,i,bytes2,result);res=null;break}res=res<<6|nextChar&63;i++}if(res===null){continue}if(res>1114111){i+=onError2(Utf8ErrorReason.OUT_OF_RANGE,i-1-extraLength,bytes2,result,res);continue}if(res>=55296&&res<=57343){i+=onError2(Utf8ErrorReason.UTF16_SURROGATE,i-1-extraLength,bytes2,result,res);continue}if(res<=overlongMask){i+=onError2(Utf8ErrorReason.OVERLONG,i-1-extraLength,bytes2,result,res);continue}result.push(res)}return result}function toUtf8Bytes(str,form=UnicodeNormalizationForm.current){if(form!=UnicodeNormalizationForm.current){logger$p.checkNormalize();str=str.normalize(form)}let result=[];for(let i=0;i<str.length;i++){const c=str.charCodeAt(i);if(c<128){result.push(c)}else if(c<2048){result.push(c>>6|192);result.push(c&63|128)}else if((c&64512)==55296){i++;const c2=str.charCodeAt(i);if(i>=str.length||(c2&64512)!==56320){throw new Error("invalid utf-8 string")}const pair=65536+((c&1023)<<10)+(c2&1023);result.push(pair>>18|240);result.push(pair>>12&63|128);result.push(pair>>6&63|128);result.push(pair&63|128)}else{result.push(c>>12|224);result.push(c>>6&63|128);result.push(c&63|128)}}return arrayify$1(result)}function _toUtf8String(codePoints){return codePoints.map(codePoint=>{if(codePoint<=65535){return String.fromCharCode(codePoint)}codePoint-=65536;return String.fromCharCode((codePoint>>10&1023)+55296,(codePoint&1023)+56320)}).join("")}function toUtf8String(bytes2,onError2){return _toUtf8String(getUtf8CodePoints(bytes2,onError2))}function toUtf8CodePoints(str,form=UnicodeNormalizationForm.current){return getUtf8CodePoints(toUtf8Bytes(str,form))}function id$1(text){return keccak256$1(toUtf8Bytes(text))}const version$o="bytes/5.7.0";const logger$o=new Logger$3(version$o);function isHexable(value){return!!value.toHexString}function addSlice(array){if(array.slice){return array}array.slice=function(){const args=Array.prototype.slice.call(arguments);return addSlice(new Uint8Array(Array.prototype.slice.apply(array,args)))};return array}function isBytesLike(value){return isHexString(value)&&!(value.length%2)||isBytes(value)}function isInteger(value){return typeof value==="number"&&value==value&&value%1===0}function isBytes(value){if(value==null){return false}if(value.constructor===Uint8Array){return true}if(typeof value==="string"){return false}if(!isInteger(value.length)||value.length<0){return false}for(let i=0;i<value.length;i++){const v=value[i];if(!isInteger(v)||v<0||v>=256){return false}}return true}function arrayify(value,options){if(!options){options={}}if(typeof value==="number"){logger$o.checkSafeUint53(value,"invalid arrayify value");const result=[];while(value){result.unshift(value&255);value=parseInt(String(value/256))}if(result.length===0){result.push(0)}return addSlice(new Uint8Array(result))}if(options.allowMissingPrefix&&typeof value==="string"&&value.substring(0,2)!=="0x"){value="0x"+value}if(isHexable(value)){value=value.toHexString()}if(isHexString(value)){let hex=value.substring(2);if(hex.length%2){if(options.hexPad==="left"){hex="0"+hex}else if(options.hexPad==="right"){hex+="0"}else{logger$o.throwArgumentError("hex data is odd-length","value",value)}}const result=[];for(let i=0;i<hex.length;i+=2){result.push(parseInt(hex.substring(i,i+2),16))}return addSlice(new Uint8Array(result))}if(isBytes(value)){return addSlice(new Uint8Array(value))}return logger$o.throwArgumentError("invalid arrayify value","value",value)}function concat(items){const objects=items.map(item=>arrayify(item));const length=objects.reduce((accum,item)=>accum+item.length,0);const result=new Uint8Array(length);objects.reduce((offset,object2)=>{result.set(object2,offset);return offset+object2.length},0);return addSlice(result)}function stripZeros(value){let result=arrayify(value);if(result.length===0){return result}let start=0;while(start<result.length&&result[start]===0){start++}if(start){result=result.slice(start)}return result}function zeroPad(value,length){value=arrayify(value);if(value.length>length){logger$o.throwArgumentError("value out of range","value",arguments[0])}const result=new Uint8Array(length);result.set(value,length-value.length);return addSlice(result)}function isHexString(value,length){if(typeof value!=="string"||!value.match(/^0x[0-9A-Fa-f]*$/)){return false}if(length&&value.length!==2+2*length){return false}return true}const HexCharacters="0123456789abcdef";function hexlify(value,options){if(!options){options={}}if(typeof value==="number"){logger$o.checkSafeUint53(value,"invalid hexlify value");let hex="";while(value){hex=HexCharacters[value&15]+hex;value=Math.floor(value/16)}if(hex.length){if(hex.length%2){hex="0"+hex}return"0x"+hex}return"0x00"}if(typeof value==="bigint"){value=value.toString(16);if(value.length%2){return"0x0"+value}return"0x"+value}if(options.allowMissingPrefix&&typeof value==="string"&&value.substring(0,2)!=="0x"){value="0x"+value}if(isHexable(value)){return value.toHexString()}if(isHexString(value)){if(value.length%2){if(options.hexPad==="left"){value="0x0"+value.substring(2)}else if(options.hexPad==="right"){value+="0"}else{logger$o.throwArgumentError("hex data is odd-length","value",value)}}return value.toLowerCase()}if(isBytes(value)){let result="0x";for(let i=0;i<value.length;i++){let v=value[i];result+=HexCharacters[(v&240)>>4]+HexCharacters[v&15]}return result}return logger$o.throwArgumentError("invalid hexlify value","value",value)}function hexDataLength(data){if(typeof data!=="string"){data=hexlify(data)}else if(!isHexString(data)||data.length%2){return null}return(data.length-2)/2}function hexDataSlice(data,offset,endOffset){if(typeof data!=="string"){data=hexlify(data)}else if(!isHexString(data)||data.length%2){logger$o.throwArgumentError("invalid hexData","value",data)}offset=2+2*offset;if(endOffset!=null){return"0x"+data.substring(offset,2+2*endOffset)}return"0x"+data.substring(offset)}function hexConcat(items){let result="0x";items.forEach(item=>{result+=hexlify(item).substring(2)});return result}function hexValue(value){const trimmed=hexStripZeros(hexlify(value,{hexPad:"left"}));if(trimmed==="0x"){return"0x0"}return trimmed}function hexStripZeros(value){if(typeof value!=="string"){value=hexlify(value)}if(!isHexString(value)){logger$o.throwArgumentError("invalid hex string","value",value)}value=value.substring(2);let offset=0;while(offset<value.length&&value[offset]==="0"){offset++}return"0x"+value.substring(offset)}function hexZeroPad(value,length){if(typeof value!=="string"){value=hexlify(value)}else if(!isHexString(value)){logger$o.throwArgumentError("invalid hex string","value",value)}if(value.length>2*length+2){logger$o.throwArgumentError("value out of range","value",arguments[1])}while(value.length<2*length+2){value="0x0"+value.substring(2)}return value}function splitSignature(signature2){const result={r:"0x",s:"0x",_vs:"0x",recoveryParam:0,v:0,yParityAndS:"0x",compact:"0x"};if(isBytesLike(signature2)){let bytes2=arrayify(signature2);if(bytes2.length===64){result.v=27+(bytes2[32]>>7);bytes2[32]&=127;result.r=hexlify(bytes2.slice(0,32));result.s=hexlify(bytes2.slice(32,64))}else if(bytes2.length===65){result.r=hexlify(bytes2.slice(0,32));result.s=hexlify(bytes2.slice(32,64));result.v=bytes2[64]}else{logger$o.throwArgumentError("invalid signature string","signature",signature2)}if(result.v<27){if(result.v===0||result.v===1){result.v+=27}else{logger$o.throwArgumentError("signature invalid v byte","signature",signature2)}}result.recoveryParam=1-result.v%2;if(result.recoveryParam){bytes2[32]|=128}result._vs=hexlify(bytes2.slice(32,64))}else{result.r=signature2.r;result.s=signature2.s;result.v=signature2.v;result.recoveryParam=signature2.recoveryParam;result._vs=signature2._vs;if(result._vs!=null){const vs2=zeroPad(arrayify(result._vs),32);result._vs=hexlify(vs2);const recoveryParam=vs2[0]>=128?1:0;if(result.recoveryParam==null){result.recoveryParam=recoveryParam}else if(result.recoveryParam!==recoveryParam){logger$o.throwArgumentError("signature recoveryParam mismatch _vs","signature",signature2)}vs2[0]&=127;const s=hexlify(vs2);if(result.s==null){result.s=s}else if(result.s!==s){logger$o.throwArgumentError("signature v mismatch _vs","signature",signature2)}}if(result.recoveryParam==null){if(result.v==null){logger$o.throwArgumentError("signature missing v and recoveryParam","signature",signature2)}else if(result.v===0||result.v===1){result.recoveryParam=result.v}else{result.recoveryParam=1-result.v%2}}else{if(result.v==null){result.v=27+result.recoveryParam}else{const recId=result.v===0||result.v===1?result.v:1-result.v%2;if(result.recoveryParam!==recId){logger$o.throwArgumentError("signature recoveryParam mismatch v","signature",signature2)}}}if(result.r==null||!isHexString(result.r)){logger$o.throwArgumentError("signature missing or invalid r","signature",signature2)}else{result.r=hexZeroPad(result.r,32)}if(result.s==null||!isHexString(result.s)){logger$o.throwArgumentError("signature missing or invalid s","signature",signature2)}else{result.s=hexZeroPad(result.s,32)}const vs=arrayify(result.s);if(vs[0]>=128){logger$o.throwArgumentError("signature s out of range","signature",signature2)}if(result.recoveryParam){vs[0]|=128}const _vs=hexlify(vs);if(result._vs){if(!isHexString(result._vs)){logger$o.throwArgumentError("signature invalid _vs","signature",signature2)}result._vs=hexZeroPad(result._vs,32)}if(result._vs==null){result._vs=_vs}else if(result._vs!==_vs){logger$o.throwArgumentError("signature _vs mismatch v and s","signature",signature2)}}result.yParityAndS=result._vs;result.compact=result.r+result.yParityAndS.substring(2);return result}function joinSignature(signature2){signature2=splitSignature(signature2);return hexlify(concat([signature2.r,signature2.s,signature2.recoveryParam?"0x1c":"0x1b"]))}const version$n="hash/5.7.0";const messagePrefix="Ethereum Signed Message:\n";function hashMessage(message){if(typeof message==="string"){message=toUtf8Bytes(message)}return keccak256$1(concat([toUtf8Bytes(messagePrefix),toUtf8Bytes(String(message.length)),message]))}var bn$1={exports:{}};var bn=bn$1.exports;var hasRequiredBn;function requireBn(){if(hasRequiredBn)return bn$1.exports;hasRequiredBn=1;(function(module2){(function(module3,exports2){function assert2(val,msg){if(!val)throw new Error(msg||"Assertion failed")}function inherits2(ctor,superCtor){ctor.super_=superCtor;var TempCtor=function(){};TempCtor.prototype=superCtor.prototype;ctor.prototype=new TempCtor;ctor.prototype.constructor=ctor}function BN2(number2,base2,endian){if(BN2.isBN(number2)){return number2}this.negative=0;this.words=null;this.length=0;this.red=null;if(number2!==null){if(base2==="le"||base2==="be"){endian=base2;base2=10}this._init(number2||0,base2||10,endian||"be")}}if(typeof module3==="object"){module3.exports=BN2}else{exports2.BN=BN2}BN2.BN=BN2;BN2.wordSize=26;var Buffer3;try{if(typeof window!=="undefined"&&typeof window.Buffer!=="undefined"){Buffer3=window.Buffer}else{Buffer3=requireDist().Buffer}}catch(e){}BN2.isBN=function isBN(num){if(num instanceof BN2){return true}return num!==null&&typeof num==="object"&&num.constructor.wordSize===BN2.wordSize&&Array.isArray(num.words)};BN2.max=function max(left,right){if(left.cmp(right)>0)return left;return right};BN2.min=function min(left,right){if(left.cmp(right)<0)return left;return right};BN2.prototype._init=function init4(number2,base2,endian){if(typeof number2==="number"){return this._initNumber(number2,base2,endian)}if(typeof number2==="object"){return this._initArray(number2,base2,endian)}if(base2==="hex"){base2=16}assert2(base2===(base2|0)&&base2>=2&&base2<=36);number2=number2.toString().replace(/\s+/g,"");var start=0;if(number2[0]==="-"){start++;this.negative=1}if(start<number2.length){if(base2===16){this._parseHex(number2,start,endian)}else{this._parseBase(number2,base2,start);if(endian==="le"){this._initArray(this.toArray(),base2,endian)}}}};BN2.prototype._initNumber=function _initNumber(number2,base2,endian){if(number2<0){this.negative=1;number2=-number2}if(number2<67108864){this.words=[number2&67108863];this.length=1}else if(number2<4503599627370496){this.words=[number2&67108863,number2/67108864&67108863];this.length=2}else{assert2(number2<9007199254740992);this.words=[number2&67108863,number2/67108864&67108863,1];this.length=3}if(endian!=="le")return;this._initArray(this.toArray(),base2,endian)};BN2.prototype._initArray=function _initArray(number2,base2,endian){assert2(typeof number2.length==="number");if(number2.length<=0){this.words=[0];this.length=1;return this}this.length=Math.ceil(number2.length/3);this.words=new Array(this.length);for(var i=0;i<this.length;i++){this.words[i]=0}var j,w;var off=0;if(endian==="be"){for(i=number2.length-1,j=0;i>=0;i-=3){w=number2[i]|number2[i-1]<<8|number2[i-2]<<16;this.words[j]|=w<<off&67108863;this.words[j+1]=w>>>26-off&67108863;off+=24;if(off>=26){off-=26;j++}}}else if(endian==="le"){for(i=0,j=0;i<number2.length;i+=3){w=number2[i]|number2[i+1]<<8|number2[i+2]<<16;this.words[j]|=w<<off&67108863;this.words[j+1]=w>>>26-off&67108863;off+=24;if(off>=26){off-=26;j++}}}return this._strip()};function parseHex4Bits(string,index){var c=string.charCodeAt(index);if(c>=48&&c<=57){return c-48}else if(c>=65&&c<=70){return c-55}else if(c>=97&&c<=102){return c-87}else{assert2(false,"Invalid character in "+string)}}function parseHexByte(string,lowerBound,index){var r=parseHex4Bits(string,index);if(index-1>=lowerBound){r|=parseHex4Bits(string,index-1)<<4}return r}BN2.prototype._parseHex=function _parseHex(number2,start,endian){this.length=Math.ceil((number2.length-start)/6);this.words=new Array(this.length);for(var i=0;i<this.length;i++){this.words[i]=0}var off=0;var j=0;var w;if(endian==="be"){for(i=number2.length-1;i>=start;i-=2){w=parseHexByte(number2,start,i)<<off;this.words[j]|=w&67108863;if(off>=18){off-=18;j+=1;this.words[j]|=w>>>26}else{off+=8}}}else{var parseLength=number2.length-start;for(i=parseLength%2===0?start+1:start;i<number2.length;i+=2){w=parseHexByte(number2,start,i)<<off;this.words[j]|=w&67108863;if(off>=18){off-=18;j+=1;this.words[j]|=w>>>26}else{off+=8}}}this._strip()};function parseBase(str,start,end,mul5){var r=0;var b2=0;var len=Math.min(str.length,end);for(var i=start;i<len;i++){var c=str.charCodeAt(i)-48;r*=mul5;if(c>=49){b2=c-49+10}else if(c>=17){b2=c-17+10}else{b2=c}assert2(c>=0&&b2<mul5,"Invalid character");r+=b2}return r}BN2.prototype._parseBase=function _parseBase(number2,base2,start){this.words=[0];this.length=1;for(var limbLen=0,limbPow=1;limbPow<=67108863;limbPow*=base2){limbLen++}limbLen--;limbPow=limbPow/base2|0;var total=number2.length-start;var mod2=total%limbLen;var end=Math.min(total,total-mod2)+start;var word=0;for(var i=start;i<end;i+=limbLen){word=parseBase(number2,i,i+limbLen,base2);this.imuln(limbPow);if(this.words[0]+word<67108864){this.words[0]+=word}else{this._iaddn(word)}}if(mod2!==0){var pow3=1;word=parseBase(number2,i,number2.length,base2);for(i=0;i<mod2;i++){pow3*=base2}this.imuln(pow3);if(this.words[0]+word<67108864){this.words[0]+=word}else{this._iaddn(word)}}this._strip()};BN2.prototype.copy=function copy2(dest){dest.words=new Array(this.length);for(var i=0;i<this.length;i++){dest.words[i]=this.words[i]}dest.length=this.length;dest.negative=this.negative;dest.red=this.red};function move(dest,src){dest.words=src.words;dest.length=src.length;dest.negative=src.negative;dest.red=src.red}BN2.prototype._move=function _move(dest){move(dest,this)};BN2.prototype.clone=function clone(){var r=new BN2(null);this.copy(r);return r};BN2.prototype._expand=function _expand(size){while(this.length<size){this.words[this.length++]=0}return this};BN2.prototype._strip=function strip(){while(this.length>1&&this.words[this.length-1]===0){this.length--}return this._normSign()};BN2.prototype._normSign=function _normSign(){if(this.length===1&&this.words[0]===0){this.negative=0}return this};if(typeof Symbol!=="undefined"&&typeof Symbol.for==="function"){try{BN2.prototype[Symbol.for("nodejs.util.inspect.custom")]=inspect7}catch(e){BN2.prototype.inspect=inspect7}}else{BN2.prototype.inspect=inspect7}function inspect7(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"}var zeros2=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"];var groupSizes=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5];var groupBases=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];BN2.prototype.toString=function toString3(base2,padding2){base2=base2||10;padding2=padding2|0||1;var out;if(base2===16||base2==="hex"){out="";var off=0;var carry=0;for(var i=0;i<this.length;i++){var w=this.words[i];var word=((w<<off|carry)&16777215).toString(16);carry=w>>>24-off&16777215;off+=2;if(off>=26){off-=26;i--}if(carry!==0||i!==this.length-1){out=zeros2[6-word.length]+word+out}else{out=word+out}}if(carry!==0){out=carry.toString(16)+out}while(out.length%padding2!==0){out="0"+out}if(this.negative!==0){out="-"+out}return out}if(base2===(base2|0)&&base2>=2&&base2<=36){var groupSize=groupSizes[base2];var groupBase=groupBases[base2];out="";var c=this.clone();c.negative=0;while(!c.isZero()){var r=c.modrn(groupBase).toString(base2);c=c.idivn(groupBase);if(!c.isZero()){out=zeros2[groupSize-r.length]+r+out}else{out=r+out}}if(this.isZero()){out="0"+out}while(out.length%padding2!==0){out="0"+out}if(this.negative!==0){out="-"+out}return out}assert2(false,"Base should be between 2 and 36")};BN2.prototype.toNumber=function toNumber2(){var ret=this.words[0];if(this.length===2){ret+=this.words[1]*67108864}else if(this.length===3&&this.words[2]===1){ret+=4503599627370496+this.words[1]*67108864}else if(this.length>2){assert2(false,"Number can only safely store up to 53 bits")}return this.negative!==0?-ret:ret};BN2.prototype.toJSON=function toJSON4(){return this.toString(16,2)};if(Buffer3){BN2.prototype.toBuffer=function toBuffer(endian,length){return this.toArrayLike(Buffer3,endian,length)}}BN2.prototype.toArray=function toArray2(endian,length){return this.toArrayLike(Array,endian,length)};var allocate=function allocate2(ArrayType,size){if(ArrayType.allocUnsafe){return ArrayType.allocUnsafe(size)}return new ArrayType(size)};BN2.prototype.toArrayLike=function toArrayLike(ArrayType,endian,length){this._strip();var byteLength=this.byteLength();var reqLength=length||Math.max(1,byteLength);assert2(byteLength<=reqLength,"byte array longer than desired length");assert2(reqLength>0,"Requested array length <= 0");var res=allocate(ArrayType,reqLength);var postfix=endian==="le"?"LE":"BE";this["_toArrayLike"+postfix](res,byteLength);return res};BN2.prototype._toArrayLikeLE=function _toArrayLikeLE(res,byteLength){var position=0;var carry=0;for(var i=0,shift=0;i<this.length;i++){var word=this.words[i]<<shift|carry;res[position++]=word&255;if(position<res.length){res[position++]=word>>8&255}if(position<res.length){res[position++]=word>>16&255}if(shift===6){if(position<res.length){res[position++]=word>>24&255}carry=0;shift=0}else{carry=word>>>24;shift+=2}}if(position<res.length){res[position++]=carry;while(position<res.length){res[position++]=0}}};BN2.prototype._toArrayLikeBE=function _toArrayLikeBE(res,byteLength){var position=res.length-1;var carry=0;for(var i=0,shift=0;i<this.length;i++){var word=this.words[i]<<shift|carry;res[position--]=word&255;if(position>=0){res[position--]=word>>8&255}if(position>=0){res[position--]=word>>16&255}if(shift===6){if(position>=0){res[position--]=word>>24&255}carry=0;shift=0}else{carry=word>>>24;shift+=2}}if(position>=0){res[position--]=carry;while(position>=0){res[position--]=0}}};if(Math.clz32){BN2.prototype._countBits=function _countBits(w){return 32-Math.clz32(w)}}else{BN2.prototype._countBits=function _countBits(w){var t=w;var r=0;if(t>=4096){r+=13;t>>>=13}if(t>=64){r+=7;t>>>=7}if(t>=8){r+=4;t>>>=4}if(t>=2){r+=2;t>>>=2}return r+t}}BN2.prototype._zeroBits=function _zeroBits(w){if(w===0)return 26;var t=w;var r=0;if((t&8191)===0){r+=13;t>>>=13}if((t&127)===0){r+=7;t>>>=7}if((t&15)===0){r+=4;t>>>=4}if((t&3)===0){r+=2;t>>>=2}if((t&1)===0){r++}return r};BN2.prototype.bitLength=function bitLength(){var w=this.words[this.length-1];var hi=this._countBits(w);return(this.length-1)*26+hi};function toBitArray(num){var w=new Array(num.bitLength());for(var bit=0;bit<w.length;bit++){var off=bit/26|0;var wbit=bit%26;w[bit]=num.words[off]>>>wbit&1}return w}BN2.prototype.zeroBits=function zeroBits(){if(this.isZero())return 0;var r=0;for(var i=0;i<this.length;i++){var b2=this._zeroBits(this.words[i]);r+=b2;if(b2!==26)break}return r};BN2.prototype.byteLength=function byteLength(){return Math.ceil(this.bitLength()/8)};BN2.prototype.toTwos=function toTwos2(width){if(this.negative!==0){return this.abs().inotn(width).iaddn(1)}return this.clone()};BN2.prototype.fromTwos=function fromTwos2(width){if(this.testn(width-1)){return this.notn(width).iaddn(1).ineg()}return this.clone()};BN2.prototype.isNeg=function isNeg(){return this.negative!==0};BN2.prototype.neg=function neg5(){return this.clone().ineg()};BN2.prototype.ineg=function ineg(){if(!this.isZero()){this.negative^=1}return this};BN2.prototype.iuor=function iuor(num){while(this.length<num.length){this.words[this.length++]=0}for(var i=0;i<num.length;i++){this.words[i]=this.words[i]|num.words[i]}return this._strip()};BN2.prototype.ior=function ior(num){assert2((this.negative|num.negative)===0);return this.iuor(num)};BN2.prototype.or=function or(num){if(this.length>num.length)return this.clone().ior(num);return num.clone().ior(this)};BN2.prototype.uor=function uor(num){if(this.length>num.length)return this.clone().iuor(num);return num.clone().iuor(this)};BN2.prototype.iuand=function iuand(num){var b2;if(this.length>num.length){b2=num}else{b2=this}for(var i=0;i<b2.length;i++){this.words[i]=this.words[i]&num.words[i]}this.length=b2.length;return this._strip()};BN2.prototype.iand=function iand(num){assert2((this.negative|num.negative)===0);return this.iuand(num)};BN2.prototype.and=function and(num){if(this.length>num.length)return this.clone().iand(num);return num.clone().iand(this)};BN2.prototype.uand=function uand(num){if(this.length>num.length)return this.clone().iuand(num);return num.clone().iuand(this)};BN2.prototype.iuxor=function iuxor(num){var a;var b2;if(this.length>num.length){a=this;b2=num}else{a=num;b2=this}for(var i=0;i<b2.length;i++){this.words[i]=a.words[i]^b2.words[i]}if(this!==a){for(;i<a.length;i++){this.words[i]=a.words[i]}}this.length=a.length;return this._strip()};BN2.prototype.ixor=function ixor(num){assert2((this.negative|num.negative)===0);return this.iuxor(num)};BN2.prototype.xor=function xor(num){if(this.length>num.length)return this.clone().ixor(num);return num.clone().ixor(this)};BN2.prototype.uxor=function uxor(num){if(this.length>num.length)return this.clone().iuxor(num);return num.clone().iuxor(this)};BN2.prototype.inotn=function inotn(width){assert2(typeof width==="number"&&width>=0);var bytesNeeded=Math.ceil(width/26)|0;var bitsLeft=width%26;this._expand(bytesNeeded);if(bitsLeft>0){bytesNeeded--}for(var i=0;i<bytesNeeded;i++){this.words[i]=~this.words[i]&67108863}if(bitsLeft>0){this.words[i]=~this.words[i]&67108863>>26-bitsLeft}return this._strip()};BN2.prototype.notn=function notn(width){return this.clone().inotn(width)};BN2.prototype.setn=function setn(bit,val){assert2(typeof bit==="number"&&bit>=0);var off=bit/26|0;var wbit=bit%26;this._expand(off+1);if(val){this.words[off]=this.words[off]|1<<wbit}else{this.words[off]=this.words[off]&~(1<<wbit)}return this._strip()};BN2.prototype.iadd=function iadd(num){var r;if(this.negative!==0&&num.negative===0){this.negative=0;r=this.isub(num);this.negative^=1;return this._normSign()}else if(this.negative===0&&num.negative!==0){num.negative=0;r=this.isub(num);num.negative=1;return r._normSign()}var a,b2;if(this.length>num.length){a=this;b2=num}else{a=num;b2=this}var carry=0;for(var i=0;i<b2.length;i++){r=(a.words[i]|0)+(b2.words[i]|0)+carry;this.words[i]=r&67108863;carry=r>>>26}for(;carry!==0&&i<a.length;i++){r=(a.words[i]|0)+carry;this.words[i]=r&67108863;carry=r>>>26}this.length=a.length;if(carry!==0){this.words[this.length]=carry;this.length++}else if(a!==this){for(;i<a.length;i++){this.words[i]=a.words[i]}}return this};BN2.prototype.add=function add6(num){var res;if(num.negative!==0&&this.negative===0){num.negative=0;res=this.sub(num);num.negative^=1;return res}else if(num.negative===0&&this.negative!==0){this.negative=0;res=num.sub(this);this.negative=1;return res}if(this.length>num.length)return this.clone().iadd(num);return num.clone().iadd(this)};BN2.prototype.isub=function isub(num){if(num.negative!==0){num.negative=0;var r=this.iadd(num);num.negative=1;return r._normSign()}else if(this.negative!==0){this.negative=0;this.iadd(num);this.negative=1;return this._normSign()}var cmp=this.cmp(num);if(cmp===0){this.negative=0;this.length=1;this.words[0]=0;return this}var a,b2;if(cmp>0){a=this;b2=num}else{a=num;b2=this}var carry=0;for(var i=0;i<b2.length;i++){r=(a.words[i]|0)-(b2.words[i]|0)+carry;carry=r>>26;this.words[i]=r&67108863}for(;carry!==0&&i<a.length;i++){r=(a.words[i]|0)+carry;carry=r>>26;this.words[i]=r&67108863}if(carry===0&&i<a.length&&a!==this){for(;i<a.length;i++){this.words[i]=a.words[i]}}this.length=Math.max(this.length,i);if(a!==this){this.negative=1}return this._strip()};BN2.prototype.sub=function sub(num){return this.clone().isub(num)};function smallMulTo(self2,num,out){out.negative=num.negative^self2.negative;var len=self2.length+num.length|0;out.length=len;len=len-1|0;var a=self2.words[0]|0;var b2=num.words[0]|0;var r=a*b2;var lo=r&67108863;var carry=r/67108864|0;out.words[0]=lo;for(var k=1;k<len;k++){var ncarry=carry>>>26;var rword=carry&67108863;var maxJ=Math.min(k,num.length-1);for(var j=Math.max(0,k-self2.length+1);j<=maxJ;j++){var i=k-j|0;a=self2.words[i]|0;b2=num.words[j]|0;r=a*b2+rword;ncarry+=r/67108864|0;rword=r&67108863}out.words[k]=rword|0;carry=ncarry|0}if(carry!==0){out.words[k]=carry|0}else{out.length--}return out._strip()}var comb10MulTo=function comb10MulTo2(self2,num,out){var a=self2.words;var b2=num.words;var o=out.words;var c=0;var lo;var mid;var hi;var a0=a[0]|0;var al0=a0&8191;var ah0=a0>>>13;var a1=a[1]|0;var al1=a1&8191;var ah1=a1>>>13;var a2=a[2]|0;var al2=a2&8191;var ah2=a2>>>13;var a3=a[3]|0;var al3=a3&8191;var ah3=a3>>>13;var a4=a[4]|0;var al4=a4&8191;var ah4=a4>>>13;var a5=a[5]|0;var al5=a5&8191;var ah5=a5>>>13;var a6=a[6]|0;var al6=a6&8191;var ah6=a6>>>13;var a7=a[7]|0;var al7=a7&8191;var ah7=a7>>>13;var a8=a[8]|0;var al8=a8&8191;var ah8=a8>>>13;var a9=a[9]|0;var al9=a9&8191;var ah9=a9>>>13;var b0=b2[0]|0;var bl0=b0&8191;var bh0=b0>>>13;var b1=b2[1]|0;var bl1=b1&8191;var bh1=b1>>>13;var b22=b2[2]|0;var bl2=b22&8191;var bh2=b22>>>13;var b3=b2[3]|0;var bl3=b3&8191;var bh3=b3>>>13;var b4=b2[4]|0;var bl4=b4&8191;var bh4=b4>>>13;var b5=b2[5]|0;var bl5=b5&8191;var bh5=b5>>>13;var b6=b2[6]|0;var bl6=b6&8191;var bh6=b6>>>13;var b7=b2[7]|0;var bl7=b7&8191;var bh7=b7>>>13;var b8=b2[8]|0;var bl8=b8&8191;var bh8=b8>>>13;var b9=b2[9]|0;var bl9=b9&8191;var bh9=b9>>>13;out.negative=self2.negative^num.negative;out.length=19;lo=Math.imul(al0,bl0);mid=Math.imul(al0,bh0);mid=mid+Math.imul(ah0,bl0)|0;hi=Math.imul(ah0,bh0);var w0=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w0>>>26)|0;w0&=67108863;lo=Math.imul(al1,bl0);mid=Math.imul(al1,bh0);mid=mid+Math.imul(ah1,bl0)|0;hi=Math.imul(ah1,bh0);lo=lo+Math.imul(al0,bl1)|0;mid=mid+Math.imul(al0,bh1)|0;mid=mid+Math.imul(ah0,bl1)|0;hi=hi+Math.imul(ah0,bh1)|0;var w1=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w1>>>26)|0;w1&=67108863;lo=Math.imul(al2,bl0);mid=Math.imul(al2,bh0);mid=mid+Math.imul(ah2,bl0)|0;hi=Math.imul(ah2,bh0);lo=lo+Math.imul(al1,bl1)|0;mid=mid+Math.imul(al1,bh1)|0;mid=mid+Math.imul(ah1,bl1)|0;hi=hi+Math.imul(ah1,bh1)|0;lo=lo+Math.imul(al0,bl2)|0;mid=mid+Math.imul(al0,bh2)|0;mid=mid+Math.imul(ah0,bl2)|0;hi=hi+Math.imul(ah0,bh2)|0;var w2=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w2>>>26)|0;w2&=67108863;lo=Math.imul(al3,bl0);mid=Math.imul(al3,bh0);mid=mid+Math.imul(ah3,bl0)|0;hi=Math.imul(ah3,bh0);lo=lo+Math.imul(al2,bl1)|0;mid=mid+Math.imul(al2,bh1)|0;mid=mid+Math.imul(ah2,bl1)|0;hi=hi+Math.imul(ah2,bh1)|0;lo=lo+Math.imul(al1,bl2)|0;mid=mid+Math.imul(al1,bh2)|0;mid=mid+Math.imul(ah1,bl2)|0;hi=hi+Math.imul(ah1,bh2)|0;lo=lo+Math.imul(al0,bl3)|0;mid=mid+Math.imul(al0,bh3)|0;mid=mid+Math.imul(ah0,bl3)|0;hi=hi+Math.imul(ah0,bh3)|0;var w3=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w3>>>26)|0;w3&=67108863;lo=Math.imul(al4,bl0);mid=Math.imul(al4,bh0);mid=mid+Math.imul(ah4,bl0)|0;hi=Math.imul(ah4,bh0);lo=lo+Math.imul(al3,bl1)|0;mid=mid+Math.imul(al3,bh1)|0;mid=mid+Math.imul(ah3,bl1)|0;hi=hi+Math.imul(ah3,bh1)|0;lo=lo+Math.imul(al2,bl2)|0;mid=mid+Math.imul(al2,bh2)|0;mid=mid+Math.imul(ah2,bl2)|0;hi=hi+Math.imul(ah2,bh2)|0;lo=lo+Math.imul(al1,bl3)|0;mid=mid+Math.imul(al1,bh3)|0;mid=mid+Math.imul(ah1,bl3)|0;hi=hi+Math.imul(ah1,bh3)|0;lo=lo+Math.imul(al0,bl4)|0;mid=mid+Math.imul(al0,bh4)|0;mid=mid+Math.imul(ah0,bl4)|0;hi=hi+Math.imul(ah0,bh4)|0;var w4=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w4>>>26)|0;w4&=67108863;lo=Math.imul(al5,bl0);mid=Math.imul(al5,bh0);mid=mid+Math.imul(ah5,bl0)|0;hi=Math.imul(ah5,bh0);lo=lo+Math.imul(al4,bl1)|0;mid=mid+Math.imul(al4,bh1)|0;mid=mid+Math.imul(ah4,bl1)|0;hi=hi+Math.imul(ah4,bh1)|0;lo=lo+Math.imul(al3,bl2)|0;mid=mid+Math.imul(al3,bh2)|0;mid=mid+Math.imul(ah3,bl2)|0;hi=hi+Math.imul(ah3,bh2)|0;lo=lo+Math.imul(al2,bl3)|0;mid=mid+Math.imul(al2,bh3)|0;mid=mid+Math.imul(ah2,bl3)|0;hi=hi+Math.imul(ah2,bh3)|0;lo=lo+Math.imul(al1,bl4)|0;mid=mid+Math.imul(al1,bh4)|0;mid=mid+Math.imul(ah1,bl4)|0;hi=hi+Math.imul(ah1,bh4)|0;lo=lo+Math.imul(al0,bl5)|0;mid=mid+Math.imul(al0,bh5)|0;mid=mid+Math.imul(ah0,bl5)|0;hi=hi+Math.imul(ah0,bh5)|0;var w5=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w5>>>26)|0;w5&=67108863;lo=Math.imul(al6,bl0);mid=Math.imul(al6,bh0);mid=mid+Math.imul(ah6,bl0)|0;hi=Math.imul(ah6,bh0);lo=lo+Math.imul(al5,bl1)|0;mid=mid+Math.imul(al5,bh1)|0;mid=mid+Math.imul(ah5,bl1)|0;hi=hi+Math.imul(ah5,bh1)|0;lo=lo+Math.imul(al4,bl2)|0;mid=mid+Math.imul(al4,bh2)|0;mid=mid+Math.imul(ah4,bl2)|0;hi=hi+Math.imul(ah4,bh2)|0;lo=lo+Math.imul(al3,bl3)|0;mid=mid+Math.imul(al3,bh3)|0;mid=mid+Math.imul(ah3,bl3)|0;hi=hi+Math.imul(ah3,bh3)|0;lo=lo+Math.imul(al2,bl4)|0;mid=mid+Math.imul(al2,bh4)|0;mid=mid+Math.imul(ah2,bl4)|0;hi=hi+Math.imul(ah2,bh4)|0;lo=lo+Math.imul(al1,bl5)|0;mid=mid+Math.imul(al1,bh5)|0;mid=mid+Math.imul(ah1,bl5)|0;hi=hi+Math.imul(ah1,bh5)|0;lo=lo+Math.imul(al0,bl6)|0;mid=mid+Math.imul(al0,bh6)|0;mid=mid+Math.imul(ah0,bl6)|0;hi=hi+Math.imul(ah0,bh6)|0;var w6=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w6>>>26)|0;w6&=67108863;lo=Math.imul(al7,bl0);mid=Math.imul(al7,bh0);mid=mid+Math.imul(ah7,bl0)|0;hi=Math.imul(ah7,bh0);lo=lo+Math.imul(al6,bl1)|0;mid=mid+Math.imul(al6,bh1)|0;mid=mid+Math.imul(ah6,bl1)|0;hi=hi+Math.imul(ah6,bh1)|0;lo=lo+Math.imul(al5,bl2)|0;mid=mid+Math.imul(al5,bh2)|0;mid=mid+Math.imul(ah5,bl2)|0;hi=hi+Math.imul(ah5,bh2)|0;lo=lo+Math.imul(al4,bl3)|0;mid=mid+Math.imul(al4,bh3)|0;mid=mid+Math.imul(ah4,bl3)|0;hi=hi+Math.imul(ah4,bh3)|0;lo=lo+Math.imul(al3,bl4)|0;mid=mid+Math.imul(al3,bh4)|0;mid=mid+Math.imul(ah3,bl4)|0;hi=hi+Math.imul(ah3,bh4)|0;lo=lo+Math.imul(al2,bl5)|0;mid=mid+Math.imul(al2,bh5)|0;mid=mid+Math.imul(ah2,bl5)|0;hi=hi+Math.imul(ah2,bh5)|0;lo=lo+Math.imul(al1,bl6)|0;mid=mid+Math.imul(al1,bh6)|0;mid=mid+Math.imul(ah1,bl6)|0;hi=hi+Math.imul(ah1,bh6)|0;lo=lo+Math.imul(al0,bl7)|0;mid=mid+Math.imul(al0,bh7)|0;mid=mid+Math.imul(ah0,bl7)|0;hi=hi+Math.imul(ah0,bh7)|0;var w7=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w7>>>26)|0;w7&=67108863;lo=Math.imul(al8,bl0);mid=Math.imul(al8,bh0);mid=mid+Math.imul(ah8,bl0)|0;hi=Math.imul(ah8,bh0);lo=lo+Math.imul(al7,bl1)|0;mid=mid+Math.imul(al7,bh1)|0;mid=mid+Math.imul(ah7,bl1)|0;hi=hi+Math.imul(ah7,bh1)|0;lo=lo+Math.imul(al6,bl2)|0;mid=mid+Math.imul(al6,bh2)|0;mid=mid+Math.imul(ah6,bl2)|0;hi=hi+Math.imul(ah6,bh2)|0;lo=lo+Math.imul(al5,bl3)|0;mid=mid+Math.imul(al5,bh3)|0;mid=mid+Math.imul(ah5,bl3)|0;hi=hi+Math.imul(ah5,bh3)|0;lo=lo+Math.imul(al4,bl4)|0;mid=mid+Math.imul(al4,bh4)|0;mid=mid+Math.imul(ah4,bl4)|0;hi=hi+Math.imul(ah4,bh4)|0;lo=lo+Math.imul(al3,bl5)|0;mid=mid+Math.imul(al3,bh5)|0;mid=mid+Math.imul(ah3,bl5)|0;hi=hi+Math.imul(ah3,bh5)|0;lo=lo+Math.imul(al2,bl6)|0;mid=mid+Math.imul(al2,bh6)|0;mid=mid+Math.imul(ah2,bl6)|0;hi=hi+Math.imul(ah2,bh6)|0;lo=lo+Math.imul(al1,bl7)|0;mid=mid+Math.imul(al1,bh7)|0;mid=mid+Math.imul(ah1,bl7)|0;hi=hi+Math.imul(ah1,bh7)|0;lo=lo+Math.imul(al0,bl8)|0;mid=mid+Math.imul(al0,bh8)|0;mid=mid+Math.imul(ah0,bl8)|0;hi=hi+Math.imul(ah0,bh8)|0;var w8=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w8>>>26)|0;w8&=67108863;lo=Math.imul(al9,bl0);mid=Math.imul(al9,bh0);mid=mid+Math.imul(ah9,bl0)|0;hi=Math.imul(ah9,bh0);lo=lo+Math.imul(al8,bl1)|0;mid=mid+Math.imul(al8,bh1)|0;mid=mid+Math.imul(ah8,bl1)|0;hi=hi+Math.imul(ah8,bh1)|0;lo=lo+Math.imul(al7,bl2)|0;mid=mid+Math.imul(al7,bh2)|0;mid=mid+Math.imul(ah7,bl2)|0;hi=hi+Math.imul(ah7,bh2)|0;lo=lo+Math.imul(al6,bl3)|0;mid=mid+Math.imul(al6,bh3)|0;mid=mid+Math.imul(ah6,bl3)|0;hi=hi+Math.imul(ah6,bh3)|0;lo=lo+Math.imul(al5,bl4)|0;mid=mid+Math.imul(al5,bh4)|0;mid=mid+Math.imul(ah5,bl4)|0;hi=hi+Math.imul(ah5,bh4)|0;lo=lo+Math.imul(al4,bl5)|0;mid=mid+Math.imul(al4,bh5)|0;mid=mid+Math.imul(ah4,bl5)|0;hi=hi+Math.imul(ah4,bh5)|0;lo=lo+Math.imul(al3,bl6)|0;mid=mid+Math.imul(al3,bh6)|0;mid=mid+Math.imul(ah3,bl6)|0;hi=hi+Math.imul(ah3,bh6)|0;lo=lo+Math.imul(al2,bl7)|0;mid=mid+Math.imul(al2,bh7)|0;mid=mid+Math.imul(ah2,bl7)|0;hi=hi+Math.imul(ah2,bh7)|0;lo=lo+Math.imul(al1,bl8)|0;mid=mid+Math.imul(al1,bh8)|0;mid=mid+Math.imul(ah1,bl8)|0;hi=hi+Math.imul(ah1,bh8)|0;lo=lo+Math.imul(al0,bl9)|0;mid=mid+Math.imul(al0,bh9)|0;mid=mid+Math.imul(ah0,bl9)|0;hi=hi+Math.imul(ah0,bh9)|0;var w9=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w9>>>26)|0;w9&=67108863;lo=Math.imul(al9,bl1);mid=Math.imul(al9,bh1);mid=mid+Math.imul(ah9,bl1)|0;hi=Math.imul(ah9,bh1);lo=lo+Math.imul(al8,bl2)|0;mid=mid+Math.imul(al8,bh2)|0;mid=mid+Math.imul(ah8,bl2)|0;hi=hi+Math.imul(ah8,bh2)|0;lo=lo+Math.imul(al7,bl3)|0;mid=mid+Math.imul(al7,bh3)|0;mid=mid+Math.imul(ah7,bl3)|0;hi=hi+Math.imul(ah7,bh3)|0;lo=lo+Math.imul(al6,bl4)|0;mid=mid+Math.imul(al6,bh4)|0;mid=mid+Math.imul(ah6,bl4)|0;hi=hi+Math.imul(ah6,bh4)|0;lo=lo+Math.imul(al5,bl5)|0;mid=mid+Math.imul(al5,bh5)|0;mid=mid+Math.imul(ah5,bl5)|0;hi=hi+Math.imul(ah5,bh5)|0;lo=lo+Math.imul(al4,bl6)|0;mid=mid+Math.imul(al4,bh6)|0;mid=mid+Math.imul(ah4,bl6)|0;hi=hi+Math.imul(ah4,bh6)|0;lo=lo+Math.imul(al3,bl7)|0;mid=mid+Math.imul(al3,bh7)|0;mid=mid+Math.imul(ah3,bl7)|0;hi=hi+Math.imul(ah3,bh7)|0;lo=lo+Math.imul(al2,bl8)|0;mid=mid+Math.imul(al2,bh8)|0;mid=mid+Math.imul(ah2,bl8)|0;hi=hi+Math.imul(ah2,bh8)|0;lo=lo+Math.imul(al1,bl9)|0;mid=mid+Math.imul(al1,bh9)|0;mid=mid+Math.imul(ah1,bl9)|0;hi=hi+Math.imul(ah1,bh9)|0;var w10=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w10>>>26)|0;w10&=67108863;lo=Math.imul(al9,bl2);mid=Math.imul(al9,bh2);mid=mid+Math.imul(ah9,bl2)|0;hi=Math.imul(ah9,bh2);lo=lo+Math.imul(al8,bl3)|0;mid=mid+Math.imul(al8,bh3)|0;mid=mid+Math.imul(ah8,bl3)|0;hi=hi+Math.imul(ah8,bh3)|0;lo=lo+Math.imul(al7,bl4)|0;mid=mid+Math.imul(al7,bh4)|0;mid=mid+Math.imul(ah7,bl4)|0;hi=hi+Math.imul(ah7,bh4)|0;lo=lo+Math.imul(al6,bl5)|0;mid=mid+Math.imul(al6,bh5)|0;mid=mid+Math.imul(ah6,bl5)|0;hi=hi+Math.imul(ah6,bh5)|0;lo=lo+Math.imul(al5,bl6)|0;mid=mid+Math.imul(al5,bh6)|0;mid=mid+Math.imul(ah5,bl6)|0;hi=hi+Math.imul(ah5,bh6)|0;lo=lo+Math.imul(al4,bl7)|0;mid=mid+Math.imul(al4,bh7)|0;mid=mid+Math.imul(ah4,bl7)|0;hi=hi+Math.imul(ah4,bh7)|0;lo=lo+Math.imul(al3,bl8)|0;mid=mid+Math.imul(al3,bh8)|0;mid=mid+Math.imul(ah3,bl8)|0;hi=hi+Math.imul(ah3,bh8)|0;lo=lo+Math.imul(al2,bl9)|0;mid=mid+Math.imul(al2,bh9)|0;mid=mid+Math.imul(ah2,bl9)|0;hi=hi+Math.imul(ah2,bh9)|0;var w11=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w11>>>26)|0;w11&=67108863;lo=Math.imul(al9,bl3);mid=Math.imul(al9,bh3);mid=mid+Math.imul(ah9,bl3)|0;hi=Math.imul(ah9,bh3);lo=lo+Math.imul(al8,bl4)|0;mid=mid+Math.imul(al8,bh4)|0;mid=mid+Math.imul(ah8,bl4)|0;hi=hi+Math.imul(ah8,bh4)|0;lo=lo+Math.imul(al7,bl5)|0;mid=mid+Math.imul(al7,bh5)|0;mid=mid+Math.imul(ah7,bl5)|0;hi=hi+Math.imul(ah7,bh5)|0;lo=lo+Math.imul(al6,bl6)|0;mid=mid+Math.imul(al6,bh6)|0;mid=mid+Math.imul(ah6,bl6)|0;hi=hi+Math.imul(ah6,bh6)|0;lo=lo+Math.imul(al5,bl7)|0;mid=mid+Math.imul(al5,bh7)|0;mid=mid+Math.imul(ah5,bl7)|0;hi=hi+Math.imul(ah5,bh7)|0;lo=lo+Math.imul(al4,bl8)|0;mid=mid+Math.imul(al4,bh8)|0;mid=mid+Math.imul(ah4,bl8)|0;hi=hi+Math.imul(ah4,bh8)|0;lo=lo+Math.imul(al3,bl9)|0;mid=mid+Math.imul(al3,bh9)|0;mid=mid+Math.imul(ah3,bl9)|0;hi=hi+Math.imul(ah3,bh9)|0;var w12=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w12>>>26)|0;w12&=67108863;lo=Math.imul(al9,bl4);mid=Math.imul(al9,bh4);mid=mid+Math.imul(ah9,bl4)|0;hi=Math.imul(ah9,bh4);lo=lo+Math.imul(al8,bl5)|0;mid=mid+Math.imul(al8,bh5)|0;mid=mid+Math.imul(ah8,bl5)|0;hi=hi+Math.imul(ah8,bh5)|0;lo=lo+Math.imul(al7,bl6)|0;mid=mid+Math.imul(al7,bh6)|0;mid=mid+Math.imul(ah7,bl6)|0;hi=hi+Math.imul(ah7,bh6)|0;lo=lo+Math.imul(al6,bl7)|0;mid=mid+Math.imul(al6,bh7)|0;mid=mid+Math.imul(ah6,bl7)|0;hi=hi+Math.imul(ah6,bh7)|0;lo=lo+Math.imul(al5,bl8)|0;mid=mid+Math.imul(al5,bh8)|0;mid=mid+Math.imul(ah5,bl8)|0;hi=hi+Math.imul(ah5,bh8)|0;lo=lo+Math.imul(al4,bl9)|0;mid=mid+Math.imul(al4,bh9)|0;mid=mid+Math.imul(ah4,bl9)|0;hi=hi+Math.imul(ah4,bh9)|0;var w13=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w13>>>26)|0;w13&=67108863;lo=Math.imul(al9,bl5);mid=Math.imul(al9,bh5);mid=mid+Math.imul(ah9,bl5)|0;hi=Math.imul(ah9,bh5);lo=lo+Math.imul(al8,bl6)|0;mid=mid+Math.imul(al8,bh6)|0;mid=mid+Math.imul(ah8,bl6)|0;hi=hi+Math.imul(ah8,bh6)|0;lo=lo+Math.imul(al7,bl7)|0;mid=mid+Math.imul(al7,bh7)|0;mid=mid+Math.imul(ah7,bl7)|0;hi=hi+Math.imul(ah7,bh7)|0;lo=lo+Math.imul(al6,bl8)|0;mid=mid+Math.imul(al6,bh8)|0;mid=mid+Math.imul(ah6,bl8)|0;hi=hi+Math.imul(ah6,bh8)|0;lo=lo+Math.imul(al5,bl9)|0;mid=mid+Math.imul(al5,bh9)|0;mid=mid+Math.imul(ah5,bl9)|0;hi=hi+Math.imul(ah5,bh9)|0;var w14=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w14>>>26)|0;w14&=67108863;lo=Math.imul(al9,bl6);mid=Math.imul(al9,bh6);mid=mid+Math.imul(ah9,bl6)|0;hi=Math.imul(ah9,bh6);lo=lo+Math.imul(al8,bl7)|0;mid=mid+Math.imul(al8,bh7)|0;mid=mid+Math.imul(ah8,bl7)|0;hi=hi+Math.imul(ah8,bh7)|0;lo=lo+Math.imul(al7,bl8)|0;mid=mid+Math.imul(al7,bh8)|0;mid=mid+Math.imul(ah7,bl8)|0;hi=hi+Math.imul(ah7,bh8)|0;lo=lo+Math.imul(al6,bl9)|0;mid=mid+Math.imul(al6,bh9)|0;mid=mid+Math.imul(ah6,bl9)|0;hi=hi+Math.imul(ah6,bh9)|0;var w15=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w15>>>26)|0;w15&=67108863;lo=Math.imul(al9,bl7);mid=Math.imul(al9,bh7);mid=mid+Math.imul(ah9,bl7)|0;hi=Math.imul(ah9,bh7);lo=lo+Math.imul(al8,bl8)|0;mid=mid+Math.imul(al8,bh8)|0;mid=mid+Math.imul(ah8,bl8)|0;hi=hi+Math.imul(ah8,bh8)|0;lo=lo+Math.imul(al7,bl9)|0;mid=mid+Math.imul(al7,bh9)|0;mid=mid+Math.imul(ah7,bl9)|0;hi=hi+Math.imul(ah7,bh9)|0;var w16=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w16>>>26)|0;w16&=67108863;lo=Math.imul(al9,bl8);mid=Math.imul(al9,bh8);mid=mid+Math.imul(ah9,bl8)|0;hi=Math.imul(ah9,bh8);lo=lo+Math.imul(al8,bl9)|0;mid=mid+Math.imul(al8,bh9)|0;mid=mid+Math.imul(ah8,bl9)|0;hi=hi+Math.imul(ah8,bh9)|0;var w17=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w17>>>26)|0;w17&=67108863;lo=Math.imul(al9,bl9);mid=Math.imul(al9,bh9);mid=mid+Math.imul(ah9,bl9)|0;hi=Math.imul(ah9,bh9);var w18=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w18>>>26)|0;w18&=67108863;o[0]=w0;o[1]=w1;o[2]=w2;o[3]=w3;o[4]=w4;o[5]=w5;o[6]=w6;o[7]=w7;o[8]=w8;o[9]=w9;o[10]=w10;o[11]=w11;o[12]=w12;o[13]=w13;o[14]=w14;o[15]=w15;o[16]=w16;o[17]=w17;o[18]=w18;if(c!==0){o[19]=c;out.length++}return out};if(!Math.imul){comb10MulTo=smallMulTo}function bigMulTo(self2,num,out){out.negative=num.negative^self2.negative;out.length=self2.length+num.length;var carry=0;var hncarry=0;for(var k=0;k<out.length-1;k++){var ncarry=hncarry;hncarry=0;var rword=carry&67108863;var maxJ=Math.min(k,num.length-1);for(var j=Math.max(0,k-self2.length+1);j<=maxJ;j++){var i=k-j;var a=self2.words[i]|0;var b2=num.words[j]|0;var r=a*b2;var lo=r&67108863;ncarry=ncarry+(r/67108864|0)|0;lo=lo+rword|0;rword=lo&67108863;ncarry=ncarry+(lo>>>26)|0;hncarry+=ncarry>>>26;ncarry&=67108863}out.words[k]=rword;carry=ncarry;ncarry=hncarry}if(carry!==0){out.words[k]=carry}else{out.length--}return out._strip()}function jumboMulTo(self2,num,out){return bigMulTo(self2,num,out)}BN2.prototype.mulTo=function mulTo(num,out){var res;var len=this.length+num.length;if(this.length===10&&num.length===10){res=comb10MulTo(this,num,out)}else if(len<63){res=smallMulTo(this,num,out)}else if(len<1024){res=bigMulTo(this,num,out)}else{res=jumboMulTo(this,num,out)}return res};BN2.prototype.mul=function mul5(num){var out=new BN2(null);out.words=new Array(this.length+num.length);return this.mulTo(num,out)};BN2.prototype.mulf=function mulf(num){var out=new BN2(null);out.words=new Array(this.length+num.length);return jumboMulTo(this,num,out)};BN2.prototype.imul=function imul(num){return this.clone().mulTo(num,this)};BN2.prototype.imuln=function imuln(num){var isNegNum=num<0;if(isNegNum)num=-num;assert2(typeof num==="number");assert2(num<67108864);var carry=0;for(var i=0;i<this.length;i++){var w=(this.words[i]|0)*num;var lo=(w&67108863)+(carry&67108863);carry>>=26;carry+=w/67108864|0;carry+=lo>>>26;this.words[i]=lo&67108863}if(carry!==0){this.words[i]=carry;this.length++}return isNegNum?this.ineg():this};BN2.prototype.muln=function muln(num){return this.clone().imuln(num)};BN2.prototype.sqr=function sqr(){return this.mul(this)};BN2.prototype.isqr=function isqr(){return this.imul(this.clone())};BN2.prototype.pow=function pow3(num){var w=toBitArray(num);if(w.length===0)return new BN2(1);var res=this;for(var i=0;i<w.length;i++,res=res.sqr()){if(w[i]!==0)break}if(++i<w.length){for(var q=res.sqr();i<w.length;i++,q=q.sqr()){if(w[i]===0)continue;res=res.mul(q)}}return res};BN2.prototype.iushln=function iushln(bits){assert2(typeof bits==="number"&&bits>=0);var r=bits%26;var s=(bits-r)/26;var carryMask=67108863>>>26-r<<26-r;var i;if(r!==0){var carry=0;for(i=0;i<this.length;i++){var newCarry=this.words[i]&carryMask;var c=(this.words[i]|0)-newCarry<<r;this.words[i]=c|carry;carry=newCarry>>>26-r}if(carry){this.words[i]=carry;this.length++}}if(s!==0){for(i=this.length-1;i>=0;i--){this.words[i+s]=this.words[i]}for(i=0;i<s;i++){this.words[i]=0}this.length+=s}return this._strip()};BN2.prototype.ishln=function ishln(bits){assert2(this.negative===0);return this.iushln(bits)};BN2.prototype.iushrn=function iushrn(bits,hint,extended){assert2(typeof bits==="number"&&bits>=0);var h;if(hint){h=(hint-hint%26)/26}else{h=0}var r=bits%26;var s=Math.min((bits-r)/26,this.length);var mask2=67108863^67108863>>>r<<r;var maskedWords=extended;h-=s;h=Math.max(0,h);if(maskedWords){for(var i=0;i<s;i++){maskedWords.words[i]=this.words[i]}maskedWords.length=s}if(s===0);else if(this.length>s){this.length-=s;for(i=0;i<this.length;i++){this.words[i]=this.words[i+s]}}else{this.words[0]=0;this.length=1}var carry=0;for(i=this.length-1;i>=0&&(carry!==0||i>=h);i--){var word=this.words[i]|0;this.words[i]=carry<<26-r|word>>>r;carry=word&mask2}if(maskedWords&&carry!==0){maskedWords.words[maskedWords.length++]=carry}if(this.length===0){this.words[0]=0;this.length=1}return this._strip()};BN2.prototype.ishrn=function ishrn(bits,hint,extended){assert2(this.negative===0);return this.iushrn(bits,hint,extended)};BN2.prototype.shln=function shln(bits){return this.clone().ishln(bits)};BN2.prototype.ushln=function ushln(bits){return this.clone().iushln(bits)};BN2.prototype.shrn=function shrn(bits){return this.clone().ishrn(bits)};BN2.prototype.ushrn=function ushrn(bits){return this.clone().iushrn(bits)};BN2.prototype.testn=function testn(bit){assert2(typeof bit==="number"&&bit>=0);var r=bit%26;var s=(bit-r)/26;var q=1<<r;if(this.length<=s)return false;var w=this.words[s];return!!(w&q)};BN2.prototype.imaskn=function imaskn(bits){assert2(typeof bits==="number"&&bits>=0);var r=bits%26;var s=(bits-r)/26;assert2(this.negative===0,"imaskn works only with positive numbers");if(this.length<=s){return this}if(r!==0){s++}this.length=Math.min(s,this.length);if(r!==0){var mask2=67108863^67108863>>>r<<r;this.words[this.length-1]&=mask2}return this._strip()};BN2.prototype.maskn=function maskn(bits){return this.clone().imaskn(bits)};BN2.prototype.iaddn=function iaddn(num){assert2(typeof num==="number");assert2(num<67108864);if(num<0)return this.isubn(-num);if(this.negative!==0){if(this.length===1&&(this.words[0]|0)<=num){this.words[0]=num-(this.words[0]|0);this.negative=0;return this}this.negative=0;this.isubn(num);this.negative=1;return this}return this._iaddn(num)};BN2.prototype._iaddn=function _iaddn(num){this.words[0]+=num;for(var i=0;i<this.length&&this.words[i]>=67108864;i++){this.words[i]-=67108864;if(i===this.length-1){this.words[i+1]=1}else{this.words[i+1]++}}this.length=Math.max(this.length,i+1);return this};BN2.prototype.isubn=function isubn(num){assert2(typeof num==="number");assert2(num<67108864);if(num<0)return this.iaddn(-num);if(this.negative!==0){this.negative=0;this.iaddn(num);this.negative=1;return this}this.words[0]-=num;if(this.length===1&&this.words[0]<0){this.words[0]=-this.words[0];this.negative=1}else{for(var i=0;i<this.length&&this.words[i]<0;i++){this.words[i]+=67108864;this.words[i+1]-=1}}return this._strip()};BN2.prototype.addn=function addn(num){return this.clone().iaddn(num)};BN2.prototype.subn=function subn(num){return this.clone().isubn(num)};BN2.prototype.iabs=function iabs(){this.negative=0;return this};BN2.prototype.abs=function abs(){return this.clone().iabs()};BN2.prototype._ishlnsubmul=function _ishlnsubmul(num,mul5,shift){var len=num.length+shift;var i;this._expand(len);var w;var carry=0;for(i=0;i<num.length;i++){w=(this.words[i+shift]|0)+carry;var right=(num.words[i]|0)*mul5;w-=right&67108863;carry=(w>>26)-(right/67108864|0);this.words[i+shift]=w&67108863}for(;i<this.length-shift;i++){w=(this.words[i+shift]|0)+carry;carry=w>>26;this.words[i+shift]=w&67108863}if(carry===0)return this._strip();assert2(carry===-1);carry=0;for(i=0;i<this.length;i++){w=-(this.words[i]|0)+carry;carry=w>>26;this.words[i]=w&67108863}this.negative=1;return this._strip()};BN2.prototype._wordDiv=function _wordDiv(num,mode){var shift=this.length-num.length;var a=this.clone();var b2=num;var bhi=b2.words[b2.length-1]|0;var bhiBits=this._countBits(bhi);shift=26-bhiBits;if(shift!==0){b2=b2.ushln(shift);a.iushln(shift);bhi=b2.words[b2.length-1]|0}var m=a.length-b2.length;var q;if(mode!=="mod"){q=new BN2(null);q.length=m+1;q.words=new Array(q.length);for(var i=0;i<q.length;i++){q.words[i]=0}}var diff=a.clone()._ishlnsubmul(b2,1,m);if(diff.negative===0){a=diff;if(q){q.words[m]=1}}for(var j=m-1;j>=0;j--){var qj=(a.words[b2.length+j]|0)*67108864+(a.words[b2.length+j-1]|0);qj=Math.min(qj/bhi|0,67108863);a._ishlnsubmul(b2,qj,j);while(a.negative!==0){qj--;a.negative=0;a._ishlnsubmul(b2,1,j);if(!a.isZero()){a.negative^=1}}if(q){q.words[j]=qj}}if(q){q._strip()}a._strip();if(mode!=="div"&&shift!==0){a.iushrn(shift)}return{div:q||null,mod:a}};BN2.prototype.divmod=function divmod(num,mode,positive){assert2(!num.isZero());if(this.isZero()){return{div:new BN2(0),mod:new BN2(0)}}var div,mod2,res;if(this.negative!==0&&num.negative===0){res=this.neg().divmod(num,mode);if(mode!=="mod"){div=res.div.neg()}if(mode!=="div"){mod2=res.mod.neg();if(positive&&mod2.negative!==0){mod2.iadd(num)}}return{div:div,mod:mod2}}if(this.negative===0&&num.negative!==0){res=this.divmod(num.neg(),mode);if(mode!=="mod"){div=res.div.neg()}return{div:div,mod:res.mod}}if((this.negative&num.negative)!==0){res=this.neg().divmod(num.neg(),mode);if(mode!=="div"){mod2=res.mod.neg();if(positive&&mod2.negative!==0){mod2.isub(num)}}return{div:res.div,mod:mod2}}if(num.length>this.length||this.cmp(num)<0){return{div:new BN2(0),mod:this}}if(num.length===1){if(mode==="div"){return{div:this.divn(num.words[0]),mod:null}}if(mode==="mod"){return{div:null,mod:new BN2(this.modrn(num.words[0]))}}return{div:this.divn(num.words[0]),mod:new BN2(this.modrn(num.words[0]))}}return this._wordDiv(num,mode)};BN2.prototype.div=function div(num){return this.divmod(num,"div",false).div};BN2.prototype.mod=function mod2(num){return this.divmod(num,"mod",false).mod};BN2.prototype.umod=function umod(num){return this.divmod(num,"mod",true).mod};BN2.prototype.divRound=function divRound(num){var dm=this.divmod(num);if(dm.mod.isZero())return dm.div;var mod2=dm.div.negative!==0?dm.mod.isub(num):dm.mod;var half=num.ushrn(1);var r2=num.andln(1);var cmp=mod2.cmp(half);if(cmp<0||r2===1&&cmp===0)return dm.div;return dm.div.negative!==0?dm.div.isubn(1):dm.div.iaddn(1)};BN2.prototype.modrn=function modrn(num){var isNegNum=num<0;if(isNegNum)num=-num;assert2(num<=67108863);var p=(1<<26)%num;var acc=0;for(var i=this.length-1;i>=0;i--){acc=(p*acc+(this.words[i]|0))%num}return isNegNum?-acc:acc};BN2.prototype.modn=function modn(num){return this.modrn(num)};BN2.prototype.idivn=function idivn(num){var isNegNum=num<0;if(isNegNum)num=-num;assert2(num<=67108863);var carry=0;for(var i=this.length-1;i>=0;i--){var w=(this.words[i]|0)+carry*67108864;this.words[i]=w/num|0;carry=w%num}this._strip();return isNegNum?this.ineg():this};BN2.prototype.divn=function divn(num){return this.clone().idivn(num)};BN2.prototype.egcd=function egcd(p){assert2(p.negative===0);assert2(!p.isZero());var x=this;var y=p.clone();if(x.negative!==0){x=x.umod(p)}else{x=x.clone()}var A=new BN2(1);var B=new BN2(0);var C=new BN2(0);var D=new BN2(1);var g=0;while(x.isEven()&&y.isEven()){x.iushrn(1);y.iushrn(1);++g}var yp=y.clone();var xp=x.clone();while(!x.isZero()){for(var i=0,im=1;(x.words[0]&im)===0&&i<26;++i,im<<=1);if(i>0){x.iushrn(i);while(i-- >0){if(A.isOdd()||B.isOdd()){A.iadd(yp);B.isub(xp)}A.iushrn(1);B.iushrn(1)}}for(var j=0,jm=1;(y.words[0]&jm)===0&&j<26;++j,jm<<=1);if(j>0){y.iushrn(j);while(j-- >0){if(C.isOdd()||D.isOdd()){C.iadd(yp);D.isub(xp)}C.iushrn(1);D.iushrn(1)}}if(x.cmp(y)>=0){x.isub(y);A.isub(C);B.isub(D)}else{y.isub(x);C.isub(A);D.isub(B)}}return{a:C,b:D,gcd:y.iushln(g)}};BN2.prototype._invmp=function _invmp(p){assert2(p.negative===0);assert2(!p.isZero());var a=this;var b2=p.clone();if(a.negative!==0){a=a.umod(p)}else{a=a.clone()}var x1=new BN2(1);var x2=new BN2(0);var delta=b2.clone();while(a.cmpn(1)>0&&b2.cmpn(1)>0){for(var i=0,im=1;(a.words[0]&im)===0&&i<26;++i,im<<=1);if(i>0){a.iushrn(i);while(i-- >0){if(x1.isOdd()){x1.iadd(delta)}x1.iushrn(1)}}for(var j=0,jm=1;(b2.words[0]&jm)===0&&j<26;++j,jm<<=1);if(j>0){b2.iushrn(j);while(j-- >0){if(x2.isOdd()){x2.iadd(delta)}x2.iushrn(1)}}if(a.cmp(b2)>=0){a.isub(b2);x1.isub(x2)}else{b2.isub(a);x2.isub(x1)}}var res;if(a.cmpn(1)===0){res=x1}else{res=x2}if(res.cmpn(0)<0){res.iadd(p)}return res};BN2.prototype.gcd=function gcd(num){if(this.isZero())return num.abs();if(num.isZero())return this.abs();var a=this.clone();var b2=num.clone();a.negative=0;b2.negative=0;for(var shift=0;a.isEven()&&b2.isEven();shift++){a.iushrn(1);b2.iushrn(1)}do{while(a.isEven()){a.iushrn(1)}while(b2.isEven()){b2.iushrn(1)}var r=a.cmp(b2);if(r<0){var t=a;a=b2;b2=t}else if(r===0||b2.cmpn(1)===0){break}a.isub(b2)}while(true);return b2.iushln(shift)};BN2.prototype.invm=function invm(num){return this.egcd(num).a.umod(num)};BN2.prototype.isEven=function isEven(){return(this.words[0]&1)===0};BN2.prototype.isOdd=function isOdd(){return(this.words[0]&1)===1};BN2.prototype.andln=function andln(num){return this.words[0]&num};BN2.prototype.bincn=function bincn(bit){assert2(typeof bit==="number");var r=bit%26;var s=(bit-r)/26;var q=1<<r;if(this.length<=s){this._expand(s+1);this.words[s]|=q;return this}var carry=q;for(var i=s;carry!==0&&i<this.length;i++){var w=this.words[i]|0;w+=carry;carry=w>>>26;w&=67108863;this.words[i]=w}if(carry!==0){this.words[i]=carry;this.length++}return this};BN2.prototype.isZero=function isZero(){return this.length===1&&this.words[0]===0};BN2.prototype.cmpn=function cmpn(num){var negative=num<0;if(this.negative!==0&&!negative)return-1;if(this.negative===0&&negative)return 1;this._strip();var res;if(this.length>1){res=1}else{if(negative){num=-num}assert2(num<=67108863,"Number is too big");var w=this.words[0]|0;res=w===num?0:w<num?-1:1}if(this.negative!==0)return-res|0;return res};BN2.prototype.cmp=function cmp(num){if(this.negative!==0&&num.negative===0)return-1;if(this.negative===0&&num.negative!==0)return 1;var res=this.ucmp(num);if(this.negative!==0)return-res|0;return res};BN2.prototype.ucmp=function ucmp(num){if(this.length>num.length)return 1;if(this.length<num.length)return-1;var res=0;for(var i=this.length-1;i>=0;i--){var a=this.words[i]|0;var b2=num.words[i]|0;if(a===b2)continue;if(a<b2){res=-1}else if(a>b2){res=1}break}return res};BN2.prototype.gtn=function gtn(num){return this.cmpn(num)===1};BN2.prototype.gt=function gt(num){return this.cmp(num)===1};BN2.prototype.gten=function gten(num){return this.cmpn(num)>=0};BN2.prototype.gte=function gte(num){return this.cmp(num)>=0};BN2.prototype.ltn=function ltn(num){return this.cmpn(num)===-1};BN2.prototype.lt=function lt(num){return this.cmp(num)===-1};BN2.prototype.lten=function lten(num){return this.cmpn(num)<=0};BN2.prototype.lte=function lte(num){return this.cmp(num)<=0};BN2.prototype.eqn=function eqn(num){return this.cmpn(num)===0};BN2.prototype.eq=function eq8(num){return this.cmp(num)===0};BN2.red=function red(num){return new Red(num)};BN2.prototype.toRed=function toRed(ctx){assert2(!this.red,"Already a number in reduction context");assert2(this.negative===0,"red works only with positives");return ctx.convertTo(this)._forceRed(ctx)};BN2.prototype.fromRed=function fromRed(){assert2(this.red,"fromRed works only with numbers in reduction context");return this.red.convertFrom(this)};BN2.prototype._forceRed=function _forceRed(ctx){this.red=ctx;return this};BN2.prototype.forceRed=function forceRed(ctx){assert2(!this.red,"Already a number in reduction context");return this._forceRed(ctx)};BN2.prototype.redAdd=function redAdd(num){assert2(this.red,"redAdd works only with red numbers");return this.red.add(this,num)};BN2.prototype.redIAdd=function redIAdd(num){assert2(this.red,"redIAdd works only with red numbers");return this.red.iadd(this,num)};BN2.prototype.redSub=function redSub(num){assert2(this.red,"redSub works only with red numbers");return this.red.sub(this,num)};BN2.prototype.redISub=function redISub(num){assert2(this.red,"redISub works only with red numbers");return this.red.isub(this,num)};BN2.prototype.redShl=function redShl(num){assert2(this.red,"redShl works only with red numbers");return this.red.shl(this,num)};BN2.prototype.redMul=function redMul(num){assert2(this.red,"redMul works only with red numbers");this.red._verify2(this,num);return this.red.mul(this,num)};BN2.prototype.redIMul=function redIMul(num){assert2(this.red,"redMul works only with red numbers");this.red._verify2(this,num);return this.red.imul(this,num)};BN2.prototype.redSqr=function redSqr(){assert2(this.red,"redSqr works only with red numbers");this.red._verify1(this);return this.red.sqr(this)};BN2.prototype.redISqr=function redISqr(){assert2(this.red,"redISqr works only with red numbers");this.red._verify1(this);return this.red.isqr(this)};BN2.prototype.redSqrt=function redSqrt(){assert2(this.red,"redSqrt works only with red numbers");this.red._verify1(this);return this.red.sqrt(this)};BN2.prototype.redInvm=function redInvm(){assert2(this.red,"redInvm works only with red numbers");this.red._verify1(this);return this.red.invm(this)};BN2.prototype.redNeg=function redNeg(){assert2(this.red,"redNeg works only with red numbers");this.red._verify1(this);return this.red.neg(this)};BN2.prototype.redPow=function redPow(num){assert2(this.red&&!num.red,"redPow(normalNum)");this.red._verify1(this);return this.red.pow(this,num)};var primes={k256:null,p224:null,p192:null,p25519:null};function MPrime(name,p){this.name=name;this.p=new BN2(p,16);this.n=this.p.bitLength();this.k=new BN2(1).iushln(this.n).isub(this.p);this.tmp=this._tmp()}MPrime.prototype._tmp=function _tmp(){var tmp=new BN2(null);tmp.words=new Array(Math.ceil(this.n/13));return tmp};MPrime.prototype.ireduce=function ireduce(num){var r=num;var rlen;do{this.split(r,this.tmp);r=this.imulK(r);r=r.iadd(this.tmp);rlen=r.bitLength()}while(rlen>this.n);var cmp=rlen<this.n?-1:r.ucmp(this.p);if(cmp===0){r.words[0]=0;r.length=1}else if(cmp>0){r.isub(this.p)}else{if(r.strip!==void 0){r.strip()}else{r._strip()}}return r};MPrime.prototype.split=function split2(input,out){input.iushrn(this.n,0,out)};MPrime.prototype.imulK=function imulK(num){return num.imul(this.k)};function K256(){MPrime.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}inherits2(K256,MPrime);K256.prototype.split=function split2(input,output2){var mask2=4194303;var outLen=Math.min(input.length,9);for(var i=0;i<outLen;i++){output2.words[i]=input.words[i]}output2.length=outLen;if(input.length<=9){input.words[0]=0;input.length=1;return}var prev=input.words[9];output2.words[output2.length++]=prev&mask2;for(i=10;i<input.length;i++){var next=input.words[i]|0;input.words[i-10]=(next&mask2)<<4|prev>>>22;prev=next}prev>>>=22;input.words[i-10]=prev;if(prev===0&&input.length>10){input.length-=10}else{input.length-=9}};K256.prototype.imulK=function imulK(num){num.words[num.length]=0;num.words[num.length+1]=0;num.length+=2;var lo=0;for(var i=0;i<num.length;i++){var w=num.words[i]|0;lo+=w*977;num.words[i]=lo&67108863;lo=w*64+(lo/67108864|0)}if(num.words[num.length-1]===0){num.length--;if(num.words[num.length-1]===0){num.length--}}return num};function P224(){MPrime.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}inherits2(P224,MPrime);function P192(){MPrime.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}inherits2(P192,MPrime);function P25519(){MPrime.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}inherits2(P25519,MPrime);P25519.prototype.imulK=function imulK(num){var carry=0;for(var i=0;i<num.length;i++){var hi=(num.words[i]|0)*19+carry;var lo=hi&67108863;hi>>>=26;num.words[i]=lo;carry=hi}if(carry!==0){num.words[num.length++]=carry}return num};BN2._prime=function prime(name){if(primes[name])return primes[name];var prime2;if(name==="k256"){prime2=new K256}else if(name==="p224"){prime2=new P224}else if(name==="p192"){prime2=new P192}else if(name==="p25519"){prime2=new P25519}else{throw new Error("Unknown prime "+name)}primes[name]=prime2;return prime2};function Red(m){if(typeof m==="string"){var prime=BN2._prime(m);this.m=prime.p;this.prime=prime}else{assert2(m.gtn(1),"modulus must be greater than 1");this.m=m;this.prime=null}}Red.prototype._verify1=function _verify1(a){assert2(a.negative===0,"red works only with positives");assert2(a.red,"red works only with red numbers")};Red.prototype._verify2=function _verify2(a,b2){assert2((a.negative|b2.negative)===0,"red works only with positives");assert2(a.red&&a.red===b2.red,"red works only with red numbers")};Red.prototype.imod=function imod(a){if(this.prime)return this.prime.ireduce(a)._forceRed(this);move(a,a.umod(this.m)._forceRed(this));return a};Red.prototype.neg=function neg5(a){if(a.isZero()){return a.clone()}return this.m.sub(a)._forceRed(this)};Red.prototype.add=function add6(a,b2){this._verify2(a,b2);var res=a.add(b2);if(res.cmp(this.m)>=0){res.isub(this.m)}return res._forceRed(this)};Red.prototype.iadd=function iadd(a,b2){this._verify2(a,b2);var res=a.iadd(b2);if(res.cmp(this.m)>=0){res.isub(this.m)}return res};Red.prototype.sub=function sub(a,b2){this._verify2(a,b2);var res=a.sub(b2);if(res.cmpn(0)<0){res.iadd(this.m)}return res._forceRed(this)};Red.prototype.isub=function isub(a,b2){this._verify2(a,b2);var res=a.isub(b2);if(res.cmpn(0)<0){res.iadd(this.m)}return res};Red.prototype.shl=function shl(a,num){this._verify1(a);return this.imod(a.ushln(num))};Red.prototype.imul=function imul(a,b2){this._verify2(a,b2);return this.imod(a.imul(b2))};Red.prototype.mul=function mul5(a,b2){this._verify2(a,b2);return this.imod(a.mul(b2))};Red.prototype.isqr=function isqr(a){return this.imul(a,a.clone())};Red.prototype.sqr=function sqr(a){return this.mul(a,a)};Red.prototype.sqrt=function sqrt(a){if(a.isZero())return a.clone();var mod3=this.m.andln(3);assert2(mod3%2===1);if(mod3===3){var pow3=this.m.add(new BN2(1)).iushrn(2);return this.pow(a,pow3)}var q=this.m.subn(1);var s=0;while(!q.isZero()&&q.andln(1)===0){s++;q.iushrn(1)}assert2(!q.isZero());var one=new BN2(1).toRed(this);var nOne=one.redNeg();var lpow=this.m.subn(1).iushrn(1);var z=this.m.bitLength();z=new BN2(2*z*z).toRed(this);while(this.pow(z,lpow).cmp(nOne)!==0){z.redIAdd(nOne)}var c=this.pow(z,q);var r=this.pow(a,q.addn(1).iushrn(1));var t=this.pow(a,q);var m=s;while(t.cmp(one)!==0){var tmp=t;for(var i=0;tmp.cmp(one)!==0;i++){tmp=tmp.redSqr()}assert2(i<m);var b2=this.pow(c,new BN2(1).iushln(m-i-1));r=r.redMul(b2);c=b2.redSqr();t=t.redMul(c);m=i}return r};Red.prototype.invm=function invm(a){var inv=a._invmp(this.m);if(inv.negative!==0){inv.negative=0;return this.imod(inv).redNeg()}else{return this.imod(inv)}};Red.prototype.pow=function pow3(a,num){if(num.isZero())return new BN2(1).toRed(this);if(num.cmpn(1)===0)return a.clone();var windowSize=4;var wnd=new Array(1<<windowSize);wnd[0]=new BN2(1).toRed(this);wnd[1]=a;for(var i=2;i<wnd.length;i++){wnd[i]=this.mul(wnd[i-1],a)}var res=wnd[0];var current=0;var currentLen=0;var start=num.bitLength()%26;if(start===0){start=26}for(i=num.length-1;i>=0;i--){var word=num.words[i];for(var j=start-1;j>=0;j--){var bit=word>>j&1;if(res!==wnd[0]){res=this.sqr(res)}if(bit===0&&current===0){currentLen=0;continue}current<<=1;current|=bit;currentLen++;if(currentLen!==windowSize&&(i!==0||j!==0))continue;res=this.mul(res,wnd[current]);currentLen=0;current=0}start=26}return res};Red.prototype.convertTo=function convertTo(num){var r=num.umod(this.m);return r===num?r.clone():r};Red.prototype.convertFrom=function convertFrom(num){var res=num.clone();res.red=null;return res};BN2.mont=function mont(num){return new Mont(num)};function Mont(m){Red.call(this,m);this.shift=this.m.bitLength();if(this.shift%26!==0){this.shift+=26-this.shift%26}this.r=new BN2(1).iushln(this.shift);this.r2=this.imod(this.r.sqr());this.rinv=this.r._invmp(this.m);this.minv=this.rinv.mul(this.r).isubn(1).div(this.m);this.minv=this.minv.umod(this.r);this.minv=this.r.sub(this.minv)}inherits2(Mont,Red);Mont.prototype.convertTo=function convertTo(num){return this.imod(num.ushln(this.shift))};Mont.prototype.convertFrom=function convertFrom(num){var r=this.imod(num.mul(this.rinv));r.red=null;return r};Mont.prototype.imul=function imul(a,b2){if(a.isZero()||b2.isZero()){a.words[0]=0;a.length=1;return a}var t=a.imul(b2);var c=t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);var u=t.isub(c).iushrn(this.shift);var res=u;if(u.cmp(this.m)>=0){res=u.isub(this.m)}else if(u.cmpn(0)<0){res=u.iadd(this.m)}return res._forceRed(this)};Mont.prototype.mul=function mul5(a,b2){if(a.isZero()||b2.isZero())return new BN2(0)._forceRed(this);var t=a.mul(b2);var c=t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);var u=t.isub(c).iushrn(this.shift);var res=u;if(u.cmp(this.m)>=0){res=u.isub(this.m)}else if(u.cmpn(0)<0){res=u.iadd(this.m)}return res._forceRed(this)};Mont.prototype.invm=function invm(a){var res=this.imod(a._invmp(this.m).mul(this.r2));return res._forceRed(this)}})(module2,bn)})(bn$1);return bn$1.exports}var bnExports=requireBn();const BN$1=getDefaultExportFromCjs(bnExports);const version$m="bignumber/5.7.0";var BN=BN$1.BN;const logger$n=new Logger$3(version$m);const _constructorGuard$3={};const MAX_SAFE=9007199254740991;function isBigNumberish(value){return value!=null&&(BigNumber3.isBigNumber(value)||typeof value==="number"&&value%1===0||typeof value==="string"&&!!value.match(/^-?[0-9]+$/)||isHexString(value)||typeof value==="bigint"||isBytes(value))}let _warnedToStringRadix=false;class BigNumber3{constructor(constructorGuard,hex){if(constructorGuard!==_constructorGuard$3){logger$n.throwError("cannot call constructor directly; use BigNumber.from",Logger$3.errors.UNSUPPORTED_OPERATION,{operation:"new (BigNumber)"})}this._hex=hex;this._isBigNumber=true;Object.freeze(this)}fromTwos(value){return toBigNumber(toBN(this).fromTwos(value))}toTwos(value){return toBigNumber(toBN(this).toTwos(value))}abs(){if(this._hex[0]==="-"){return BigNumber3.from(this._hex.substring(1))}return this}add(other){return toBigNumber(toBN(this).add(toBN(other)))}sub(other){return toBigNumber(toBN(this).sub(toBN(other)))}div(other){const o=BigNumber3.from(other);if(o.isZero()){throwFault$1("division-by-zero","div")}return toBigNumber(toBN(this).div(toBN(other)))}mul(other){return toBigNumber(toBN(this).mul(toBN(other)))}mod(other){const value=toBN(other);if(value.isNeg()){throwFault$1("division-by-zero","mod")}return toBigNumber(toBN(this).umod(value))}pow(other){const value=toBN(other);if(value.isNeg()){throwFault$1("negative-power","pow")}return toBigNumber(toBN(this).pow(value))}and(other){const value=toBN(other);if(this.isNegative()||value.isNeg()){throwFault$1("unbound-bitwise-result","and")}return toBigNumber(toBN(this).and(value))}or(other){const value=toBN(other);if(this.isNegative()||value.isNeg()){throwFault$1("unbound-bitwise-result","or")}return toBigNumber(toBN(this).or(value))}xor(other){const value=toBN(other);if(this.isNegative()||value.isNeg()){throwFault$1("unbound-bitwise-result","xor")}return toBigNumber(toBN(this).xor(value))}mask(value){if(this.isNegative()||value<0){throwFault$1("negative-width","mask")}return toBigNumber(toBN(this).maskn(value))}shl(value){if(this.isNegative()||value<0){throwFault$1("negative-width","shl")}return toBigNumber(toBN(this).shln(value))}shr(value){if(this.isNegative()||value<0){throwFault$1("negative-width","shr")}return toBigNumber(toBN(this).shrn(value))}eq(other){return toBN(this).eq(toBN(other))}lt(other){return toBN(this).lt(toBN(other))}lte(other){return toBN(this).lte(toBN(other))}gt(other){return toBN(this).gt(toBN(other))}gte(other){return toBN(this).gte(toBN(other))}isNegative(){return this._hex[0]==="-"}isZero(){return toBN(this).isZero()}toNumber(){try{return toBN(this).toNumber()}catch(error){throwFault$1("overflow","toNumber",this.toString())}return null}toBigInt(){try{return BigInt(this.toString())}catch(e){}return logger$n.throwError("this platform does not support BigInt",Logger$3.errors.UNSUPPORTED_OPERATION,{value:this.toString()})}toString(){if(arguments.length>0){if(arguments[0]===10){if(!_warnedToStringRadix){_warnedToStringRadix=true;logger$n.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")}}else if(arguments[0]===16){logger$n.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()",Logger$3.errors.UNEXPECTED_ARGUMENT,{})}else{logger$n.throwError("BigNumber.toString does not accept parameters",Logger$3.errors.UNEXPECTED_ARGUMENT,{})}}return toBN(this).toString(10)}toHexString(){return this._hex}toJSON(key2){return{type:"BigNumber",hex:this.toHexString()}}static from(value){if(value instanceof BigNumber3){return value}if(typeof value==="string"){if(value.match(/^-?0x[0-9a-f]+$/i)){return new BigNumber3(_constructorGuard$3,toHex$1(value))}if(value.match(/^-?[0-9]+$/)){return new BigNumber3(_constructorGuard$3,toHex$1(new BN(value)))}return logger$n.throwArgumentError("invalid BigNumber string","value",value)}if(typeof value==="number"){if(value%1){throwFault$1("underflow","BigNumber.from",value)}if(value>=MAX_SAFE||value<=-MAX_SAFE){throwFault$1("overflow","BigNumber.from",value)}return BigNumber3.from(String(value))}const anyValue=value;if(typeof anyValue==="bigint"){return BigNumber3.from(anyValue.toString())}if(isBytes(anyValue)){return BigNumber3.from(hexlify(anyValue))}if(anyValue){if(anyValue.toHexString){const hex=anyValue.toHexString();if(typeof hex==="string"){return BigNumber3.from(hex)}}else{let hex=anyValue._hex;if(hex==null&&anyValue.type==="BigNumber"){hex=anyValue.hex}if(typeof hex==="string"){if(isHexString(hex)||hex[0]==="-"&&isHexString(hex.substring(1))){return BigNumber3.from(hex)}}}}return logger$n.throwArgumentError("invalid BigNumber value","value",value)}static isBigNumber(value){return!!(value&&value._isBigNumber)}}function toHex$1(value){if(typeof value!=="string"){return toHex$1(value.toString(16))}if(value[0]==="-"){value=value.substring(1);if(value[0]==="-"){logger$n.throwArgumentError("invalid hex","value",value)}value=toHex$1(value);if(value==="0x00"){return value}return"-"+value}if(value.substring(0,2)!=="0x"){value="0x"+value}if(value==="0x"){return"0x00"}if(value.length%2){value="0x0"+value.substring(2)}while(value.length>4&&value.substring(0,4)==="0x00"){value="0x"+value.substring(4)}return value}function toBigNumber(value){return BigNumber3.from(toHex$1(value))}function toBN(value){const hex=BigNumber3.from(value).toHexString();if(hex[0]==="-"){return new BN("-"+hex.substring(3),16)}return new BN(hex.substring(2),16)}function throwFault$1(fault,operation,value){const params={fault:fault,operation:operation};if(value!=null){params.value=value}return logger$n.throwError(fault,Logger$3.errors.NUMERIC_FAULT,params)}function _base36To16(value){return new BN(value,36).toString(16)}const logger$m=new Logger$3(version$m);const _constructorGuard$2={};const Zero$1=BigNumber3.from(0);const NegativeOne$1=BigNumber3.from(-1);function throwFault(message,fault,operation,value){const params={fault:fault,operation:operation};if(value!==void 0){params.value=value}return logger$m.throwError(message,Logger$3.errors.NUMERIC_FAULT,params)}let zeros="0";while(zeros.length<256){zeros+=zeros}function getMultiplier(decimals){if(typeof decimals!=="number"){try{decimals=BigNumber3.from(decimals).toNumber()}catch(e){}}if(typeof decimals==="number"&&decimals>=0&&decimals<=256&&!(decimals%1)){return"1"+zeros.substring(0,decimals)}return logger$m.throwArgumentError("invalid decimal size","decimals",decimals)}function formatFixed(value,decimals){if(decimals==null){decimals=0}const multiplier=getMultiplier(decimals);value=BigNumber3.from(value);const negative=value.lt(Zero$1);if(negative){value=value.mul(NegativeOne$1)}let fraction=value.mod(multiplier).toString();while(fraction.length<multiplier.length-1){fraction="0"+fraction}fraction=fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];const whole=value.div(multiplier).toString();if(multiplier.length===1){value=whole}else{value=whole+"."+fraction}if(negative){value="-"+value}return value}function parseFixed(value,decimals){if(decimals==null){decimals=0}const multiplier=getMultiplier(decimals);if(typeof value!=="string"||!value.match(/^-?[0-9.]+$/)){logger$m.throwArgumentError("invalid decimal value","value",value)}const negative=value.substring(0,1)==="-";if(negative){value=value.substring(1)}if(value==="."){logger$m.throwArgumentError("missing value","value",value)}const comps=value.split(".");if(comps.length>2){logger$m.throwArgumentError("too many decimal points","value",value)}let whole=comps[0],fraction=comps[1];if(!whole){whole="0"}if(!fraction){fraction="0"}while(fraction[fraction.length-1]==="0"){fraction=fraction.substring(0,fraction.length-1)}if(fraction.length>multiplier.length-1){throwFault("fractional component exceeds decimals","underflow","parseFixed")}if(fraction===""){fraction="0"}while(fraction.length<multiplier.length-1){fraction+="0"}const wholeValue=BigNumber3.from(whole);const fractionValue=BigNumber3.from(fraction);let wei=wholeValue.mul(multiplier).add(fractionValue);if(negative){wei=wei.mul(NegativeOne$1)}return wei}class FixedFormat{constructor(constructorGuard,signed2,width,decimals){if(constructorGuard!==_constructorGuard$2){logger$m.throwError("cannot use FixedFormat constructor; use FixedFormat.from",Logger$3.errors.UNSUPPORTED_OPERATION,{operation:"new FixedFormat"})}this.signed=signed2;this.width=width;this.decimals=decimals;this.name=(signed2?"":"u")+"fixed"+String(width)+"x"+String(decimals);this._multiplier=getMultiplier(decimals);Object.freeze(this)}static from(value){if(value instanceof FixedFormat){return value}if(typeof value==="number"){value=`fixed128x${value}`}let signed2=true;let width=128;let decimals=18;if(typeof value==="string"){if(value==="fixed");else if(value==="ufixed"){signed2=false}else{const match=value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);if(!match){logger$m.throwArgumentError("invalid fixed format","format",value)}signed2=match[1]!=="u";width=parseInt(match[2]);decimals=parseInt(match[3])}}else if(value){const check=(key2,type,defaultValue)=>{if(value[key2]==null){return defaultValue}if(typeof value[key2]!==type){logger$m.throwArgumentError("invalid fixed format ("+key2+" not "+type+")","format."+key2,value[key2])}return value[key2]};signed2=check("signed","boolean",signed2);width=check("width","number",width);decimals=check("decimals","number",decimals)}if(width%8){logger$m.throwArgumentError("invalid fixed format width (not byte aligned)","format.width",width)}if(decimals>80){logger$m.throwArgumentError("invalid fixed format (decimals too large)","format.decimals",decimals)}return new FixedFormat(_constructorGuard$2,signed2,width,decimals)}}class FixedNumber{constructor(constructorGuard,hex,value,format){if(constructorGuard!==_constructorGuard$2){logger$m.throwError("cannot use FixedNumber constructor; use FixedNumber.from",Logger$3.errors.UNSUPPORTED_OPERATION,{operation:"new FixedFormat"})}this.format=format;this._hex=hex;this._value=value;this._isFixedNumber=true;Object.freeze(this)}_checkFormat(other){if(this.format.name!==other.format.name){logger$m.throwArgumentError("incompatible format; use fixedNumber.toFormat","other",other)}}addUnsafe(other){this._checkFormat(other);const a=parseFixed(this._value,this.format.decimals);const b2=parseFixed(other._value,other.format.decimals);return FixedNumber.fromValue(a.add(b2),this.format.decimals,this.format)}subUnsafe(other){this._checkFormat(other);const a=parseFixed(this._value,this.format.decimals);const b2=parseFixed(other._value,other.format.decimals);return FixedNumber.fromValue(a.sub(b2),this.format.decimals,this.format)}mulUnsafe(other){this._checkFormat(other);const a=parseFixed(this._value,this.format.decimals);const b2=parseFixed(other._value,other.format.decimals);return FixedNumber.fromValue(a.mul(b2).div(this.format._multiplier),this.format.decimals,this.format)}divUnsafe(other){this._checkFormat(other);const a=parseFixed(this._value,this.format.decimals);const b2=parseFixed(other._value,other.format.decimals);return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b2),this.format.decimals,this.format)}floor(){const comps=this.toString().split(".");if(comps.length===1){comps.push("0")}let result=FixedNumber.from(comps[0],this.format);const hasFraction=!comps[1].match(/^(0*)$/);if(this.isNegative()&&hasFraction){result=result.subUnsafe(ONE.toFormat(result.format))}return result}ceiling(){const comps=this.toString().split(".");if(comps.length===1){comps.push("0")}let result=FixedNumber.from(comps[0],this.format);const hasFraction=!comps[1].match(/^(0*)$/);if(!this.isNegative()&&hasFraction){result=result.addUnsafe(ONE.toFormat(result.format))}return result}round(decimals){if(decimals==null){decimals=0}const comps=this.toString().split(".");if(comps.length===1){comps.push("0")}if(decimals<0||decimals>80||decimals%1){logger$m.throwArgumentError("invalid decimal count","decimals",decimals)}if(comps[1].length<=decimals){return this}const factor=FixedNumber.from("1"+zeros.substring(0,decimals),this.format);const bump=BUMP.toFormat(this.format);return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor)}isZero(){return this._value==="0.0"||this._value==="0"}isNegative(){return this._value[0]==="-"}toString(){return this._value}toHexString(width){if(width==null){return this._hex}if(width%8){logger$m.throwArgumentError("invalid byte width","width",width)}const hex=BigNumber3.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();return hexZeroPad(hex,width/8)}toUnsafeFloat(){return parseFloat(this.toString())}toFormat(format){return FixedNumber.fromString(this._value,format)}static fromValue(value,decimals,format){if(format==null&&decimals!=null&&!isBigNumberish(decimals)){format=decimals;decimals=null}if(decimals==null){decimals=0}if(format==null){format="fixed"}return FixedNumber.fromString(formatFixed(value,decimals),FixedFormat.from(format))}static fromString(value,format){if(format==null){format="fixed"}const fixedFormat=FixedFormat.from(format);const numeric=parseFixed(value,fixedFormat.decimals);if(!fixedFormat.signed&&numeric.lt(Zero$1)){throwFault("unsigned value cannot be negative","overflow","value",value)}let hex=null;if(fixedFormat.signed){hex=numeric.toTwos(fixedFormat.width).toHexString()}else{hex=numeric.toHexString();hex=hexZeroPad(hex,fixedFormat.width/8)}const decimal=formatFixed(numeric,fixedFormat.decimals);return new FixedNumber(_constructorGuard$2,hex,decimal,fixedFormat)}static fromBytes(value,format){if(format==null){format="fixed"}const fixedFormat=FixedFormat.from(format);if(arrayify(value).length>fixedFormat.width/8){throw new Error("overflow")}let numeric=BigNumber3.from(value);if(fixedFormat.signed){numeric=numeric.fromTwos(fixedFormat.width)}const hex=numeric.toTwos((fixedFormat.signed?0:1)+fixedFormat.width).toHexString();const decimal=formatFixed(numeric,fixedFormat.decimals);return new FixedNumber(_constructorGuard$2,hex,decimal,fixedFormat)}static from(value,format){if(typeof value==="string"){return FixedNumber.fromString(value,format)}if(isBytes(value)){return FixedNumber.fromBytes(value,format)}try{return FixedNumber.fromValue(value,0,format)}catch(error){if(error.code!==Logger$3.errors.INVALID_ARGUMENT){throw error}}return logger$m.throwArgumentError("invalid FixedNumber value","value",value)}static isFixedNumber(value){return!!(value&&value._isFixedNumber)}}const ONE=FixedNumber.from(1);const BUMP=FixedNumber.from("0.5");function keccak256(data){return"0x"+sha3.keccak_256(arrayify$1(data))}const version$l="rlp/5.7.0";const logger$l=new Logger$3(version$l);function arrayifyInteger$1(value){const result=[];while(value){result.unshift(value&255);value>>=8}return result}function unarrayifyInteger(data,offset,length){let result=0;for(let i=0;i<length;i++){result=result*256+data[offset+i]}return result}function _encode$1(object2){if(Array.isArray(object2)){let payload=[];object2.forEach(function(child){payload=payload.concat(_encode$1(child))});if(payload.length<=55){payload.unshift(192+payload.length);return payload}const length2=arrayifyInteger$1(payload.length);length2.unshift(247+length2.length);return length2.concat(payload)}if(!isBytesLike$1(object2)){logger$l.throwArgumentError("RLP object must be BytesLike","object",object2)}const data=Array.prototype.slice.call(arrayify$1(object2));if(data.length===1&&data[0]<=127){return data}else if(data.length<=55){data.unshift(128+data.length);return data}const length=arrayifyInteger$1(data.length);length.unshift(183+length.length);return length.concat(data)}function encode$4(object2){return hexlify$1(_encode$1(object2))}function _decodeChildren(data,offset,childOffset,length){const result=[];while(childOffset<offset+1+length){const decoded=_decode(data,childOffset);result.push(decoded.result);childOffset+=decoded.consumed;if(childOffset>offset+1+length){logger$l.throwError("child data too short",Logger$3.errors.BUFFER_OVERRUN,{})}}return{consumed:1+length,result:result}}function _decode(data,offset){if(data.length===0){logger$l.throwError("data too short",Logger$3.errors.BUFFER_OVERRUN,{})}if(data[offset]>=248){const lengthLength=data[offset]-247;if(offset+1+lengthLength>data.length){logger$l.throwError("data short segment too short",Logger$3.errors.BUFFER_OVERRUN,{})}const length=unarrayifyInteger(data,offset+1,lengthLength);if(offset+1+lengthLength+length>data.length){logger$l.throwError("data long segment too short",Logger$3.errors.BUFFER_OVERRUN,{})}return _decodeChildren(data,offset,offset+1+lengthLength,lengthLength+length)}else if(data[offset]>=192){const length=data[offset]-192;if(offset+1+length>data.length){logger$l.throwError("data array too short",Logger$3.errors.BUFFER_OVERRUN,{})}return _decodeChildren(data,offset,offset+1,length)}else if(data[offset]>=184){const lengthLength=data[offset]-183;if(offset+1+lengthLength>data.length){logger$l.throwError("data array too short",Logger$3.errors.BUFFER_OVERRUN,{})}const length=unarrayifyInteger(data,offset+1,lengthLength);if(offset+1+lengthLength+length>data.length){logger$l.throwError("data array too short",Logger$3.errors.BUFFER_OVERRUN,{})}const result=hexlify$1(data.slice(offset+1+lengthLength,offset+1+lengthLength+length));return{consumed:1+lengthLength+length,result:result}}else if(data[offset]>=128){const length=data[offset]-128;if(offset+1+length>data.length){logger$l.throwError("data too short",Logger$3.errors.BUFFER_OVERRUN,{})}const result=hexlify$1(data.slice(offset+1,offset+1+length));return{consumed:1+length,result:result}}return{consumed:1,result:hexlify$1(data[offset])}}function decode$1(data){const bytes2=arrayify$1(data);const decoded=_decode(bytes2,0);if(decoded.consumed!==bytes2.length){logger$l.throwArgumentError("invalid rlp data","data",data)}return decoded.result}const version$k="logger/5.7.0";let _permanentCensorErrors$1=false;let _censorErrors$1=false;const LogLevels$1={debug:1,default:2,info:2,warning:3,error:4,off:5};let _logLevel$1=LogLevels$1["default"];let _globalLogger$1=null;function _checkNormalize$1(){try{const missing=[];["NFD","NFC","NFKD","NFKC"].forEach(form=>{try{if("test".normalize(form)!=="test"){throw new Error("bad normalize")}}catch(error){missing.push(form)}});if(missing.length){throw new Error("missing "+missing.join(", "))}if(String.fromCharCode(233).normalize("NFD")!==String.fromCharCode(101,769)){throw new Error("broken implementation")}}catch(error){return error.message}return null}const _normalizeError$1=_checkNormalize$1();var LogLevel$2;(function(LogLevel2){LogLevel2["DEBUG"]="DEBUG";LogLevel2["INFO"]="INFO";LogLevel2["WARNING"]="WARNING";LogLevel2["ERROR"]="ERROR";LogLevel2["OFF"]="OFF"})(LogLevel$2||(LogLevel$2={}));var ErrorCode$1;(function(ErrorCode2){ErrorCode2["UNKNOWN_ERROR"]="UNKNOWN_ERROR";ErrorCode2["NOT_IMPLEMENTED"]="NOT_IMPLEMENTED";ErrorCode2["UNSUPPORTED_OPERATION"]="UNSUPPORTED_OPERATION";ErrorCode2["NETWORK_ERROR"]="NETWORK_ERROR";ErrorCode2["SERVER_ERROR"]="SERVER_ERROR";ErrorCode2["TIMEOUT"]="TIMEOUT";ErrorCode2["BUFFER_OVERRUN"]="BUFFER_OVERRUN";ErrorCode2["NUMERIC_FAULT"]="NUMERIC_FAULT";ErrorCode2["MISSING_NEW"]="MISSING_NEW";ErrorCode2["INVALID_ARGUMENT"]="INVALID_ARGUMENT";ErrorCode2["MISSING_ARGUMENT"]="MISSING_ARGUMENT";ErrorCode2["UNEXPECTED_ARGUMENT"]="UNEXPECTED_ARGUMENT";ErrorCode2["CALL_EXCEPTION"]="CALL_EXCEPTION";ErrorCode2["INSUFFICIENT_FUNDS"]="INSUFFICIENT_FUNDS";ErrorCode2["NONCE_EXPIRED"]="NONCE_EXPIRED";ErrorCode2["REPLACEMENT_UNDERPRICED"]="REPLACEMENT_UNDERPRICED";ErrorCode2["UNPREDICTABLE_GAS_LIMIT"]="UNPREDICTABLE_GAS_LIMIT";ErrorCode2["TRANSACTION_REPLACED"]="TRANSACTION_REPLACED";ErrorCode2["ACTION_REJECTED"]="ACTION_REJECTED"})(ErrorCode$1||(ErrorCode$1={}));const HEX$1="0123456789abcdef";let Logger$2=class Logger2{constructor(version2){Object.defineProperty(this,"version",{enumerable:true,value:version2,writable:false})}_log(logLevel,args){const level=logLevel.toLowerCase();if(LogLevels$1[level]==null){this.throwArgumentError("invalid log level name","logLevel",logLevel)}if(_logLevel$1>LogLevels$1[level]){return}console.log.apply(console,args)}debug(...args){this._log(Logger2.levels.DEBUG,args)}info(...args){this._log(Logger2.levels.INFO,args)}warn(...args){this._log(Logger2.levels.WARNING,args)}makeError(message,code,params){if(_censorErrors$1){return this.makeError("censored error",code,{})}if(!code){code=Logger2.errors.UNKNOWN_ERROR}if(!params){params={}}const messageDetails=[];Object.keys(params).forEach(key2=>{const value=params[key2];try{if(value instanceof Uint8Array){let hex="";for(let i=0;i<value.length;i++){hex+=HEX$1[value[i]>>4];hex+=HEX$1[value[i]&15]}messageDetails.push(key2+"=Uint8Array(0x"+hex+")")}else{messageDetails.push(key2+"="+JSON.stringify(value))}}catch(error2){messageDetails.push(key2+"="+JSON.stringify(params[key2].toString()))}});messageDetails.push(`code=${code}`);messageDetails.push(`version=${this.version}`);const reason=message;let url="";switch(code){case ErrorCode$1.NUMERIC_FAULT:{url="NUMERIC_FAULT";const fault=message;switch(fault){case"overflow":case"underflow":case"division-by-zero":url+="-"+fault;break;case"negative-power":case"negative-width":url+="-unsupported";break;case"unbound-bitwise-result":url+="-unbound-result";break}break}case ErrorCode$1.CALL_EXCEPTION:case ErrorCode$1.INSUFFICIENT_FUNDS:case ErrorCode$1.MISSING_NEW:case ErrorCode$1.NONCE_EXPIRED:case ErrorCode$1.REPLACEMENT_UNDERPRICED:case ErrorCode$1.TRANSACTION_REPLACED:case ErrorCode$1.UNPREDICTABLE_GAS_LIMIT:url=code;break}if(url){message+=" [ See: https://links.ethers.org/v5-errors-"+url+" ]"}if(messageDetails.length){message+=" ("+messageDetails.join(", ")+")"}const error=new Error(message);error.reason=reason;error.code=code;Object.keys(params).forEach(function(key2){error[key2]=params[key2]});return error}throwError(message,code,params){throw this.makeError(message,code,params)}throwArgumentError(message,name,value){return this.throwError(message,Logger2.errors.INVALID_ARGUMENT,{argument:name,value:value})}assert(condition,message,code,params){if(!!condition){return}this.throwError(message,code,params)}assertArgument(condition,message,name,value){if(!!condition){return}this.throwArgumentError(message,name,value)}checkNormalize(message){if(_normalizeError$1){this.throwError("platform missing String.prototype.normalize",Logger2.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:_normalizeError$1})}}checkSafeUint53(value,message){if(typeof value!=="number"){return}if(message==null){message="value not safe"}if(value<0||value>=9007199254740991){this.throwError(message,Logger2.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value:value})}if(value%1){this.throwError(message,Logger2.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value:value})}}checkArgumentCount(count,expectedCount,message){if(message){message=": "+message}else{message=""}if(count<expectedCount){this.throwError("missing argument"+message,Logger2.errors.MISSING_ARGUMENT,{count:count,expectedCount:expectedCount})}if(count>expectedCount){this.throwError("too many arguments"+message,Logger2.errors.UNEXPECTED_ARGUMENT,{count:count,expectedCount:expectedCount})}}checkNew(target,kind){if(target===Object||target==null){this.throwError("missing new",Logger2.errors.MISSING_NEW,{name:kind.name})}}checkAbstract(target,kind){if(target===kind){this.throwError("cannot instantiate abstract class "+JSON.stringify(kind.name)+" directly; use a sub-class",Logger2.errors.UNSUPPORTED_OPERATION,{name:target.name,operation:"new"})}else if(target===Object||target==null){this.throwError("missing new",Logger2.errors.MISSING_NEW,{name:kind.name})}}static globalLogger(){if(!_globalLogger$1){_globalLogger$1=new Logger2(version$k)}return _globalLogger$1}static setCensorship(censorship,permanent){if(!censorship&&permanent){this.globalLogger().throwError("cannot permanently disable censorship",Logger2.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}if(_permanentCensorErrors$1){if(!censorship){return}this.globalLogger().throwError("error censorship permanent",Logger2.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}_censorErrors$1=!!censorship;_permanentCensorErrors$1=!!permanent}static setLogLevel(logLevel){const level=LogLevels$1[logLevel.toLowerCase()];if(level==null){Logger2.globalLogger().warn("invalid log level - "+logLevel);return}_logLevel$1=level}static from(version2){return new Logger2(version2)}};Logger$2.errors=ErrorCode$1;Logger$2.levels=LogLevel$2;const version$j="address/5.7.0";const logger$k=new Logger$2(version$j);function getChecksumAddress$1(address){if(!isHexString$1(address,20)){logger$k.throwArgumentError("invalid address","address",address)}address=address.toLowerCase();const chars=address.substring(2).split("");const expanded=new Uint8Array(40);for(let i=0;i<40;i++){expanded[i]=chars[i].charCodeAt(0)}const hashed=arrayify$1(keccak256(expanded));for(let i=0;i<40;i+=2){if(hashed[i>>1]>>4>=8){chars[i]=chars[i].toUpperCase()}if((hashed[i>>1]&15)>=8){chars[i+1]=chars[i+1].toUpperCase()}}return"0x"+chars.join("")}const MAX_SAFE_INTEGER$3=9007199254740991;function log10$1(x){if(Math.log10){return Math.log10(x)}return Math.log(x)/Math.LN10}const ibanLookup$1={};for(let i=0;i<10;i++){ibanLookup$1[String(i)]=String(i)}for(let i=0;i<26;i++){ibanLookup$1[String.fromCharCode(65+i)]=String(10+i)}const safeDigits$1=Math.floor(log10$1(MAX_SAFE_INTEGER$3));function ibanChecksum$1(address){address=address.toUpperCase();address=address.substring(4)+address.substring(0,2)+"00";let expanded=address.split("").map(c=>ibanLookup$1[c]).join("");while(expanded.length>=safeDigits$1){let block=expanded.substring(0,safeDigits$1);expanded=parseInt(block,10)%97+expanded.substring(block.length)}let checksum2=String(98-parseInt(expanded,10)%97);while(checksum2.length<2){checksum2="0"+checksum2}return checksum2}function getAddress$1(address){let result=null;if(typeof address!=="string"){logger$k.throwArgumentError("invalid address","address",address)}if(address.match(/^(0x)?[0-9a-fA-F]{40}$/)){if(address.substring(0,2)!=="0x"){address="0x"+address}result=getChecksumAddress$1(address);if(address.match(/([A-F].*[a-f])|([a-f].*[A-F])/)&&result!==address){logger$k.throwArgumentError("bad address checksum","address",address)}}else if(address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)){if(address.substring(2,4)!==ibanChecksum$1(address)){logger$k.throwArgumentError("bad icap checksum","address",address)}result=_base36To16(address.substring(4));while(result.length<40){result="0"+result}result=getChecksumAddress$1("0x"+result)}else{logger$k.throwArgumentError("invalid address","address",address)}return result}function getContractAddress(transaction){let from=null;try{from=getAddress$1(transaction.from)}catch(error){logger$k.throwArgumentError("missing from address","transaction",transaction)}const nonce=stripZeros$1(arrayify$1(BigNumber3.from(transaction.nonce).toHexString()));return getAddress$1(hexDataSlice$1(keccak256(encode$4([from,nonce])),12))}const version$i="properties/5.8.0";var __awaiter$8=function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$j=new Logger$3(version$i);function defineReadOnly$1(object2,name,value){Object.defineProperty(object2,name,{enumerable:true,value:value,writable:false})}function getStatic(ctor,key2){for(let i=0;i<32;i++){if(ctor[key2]){return ctor[key2]}if(!ctor.prototype||typeof ctor.prototype!=="object"){break}ctor=Object.getPrototypeOf(ctor.prototype).constructor}return null}function resolveProperties$1(object2){return __awaiter$8(this,void 0,void 0,function*(){const promises=Object.keys(object2).map(key2=>{const value=object2[key2];return Promise.resolve(value).then(v=>({key:key2,value:v}))});const results=yield Promise.all(promises);return results.reduce((accum,result)=>{accum[result.key]=result.value;return accum},{})})}function checkProperties(object2,properties){if(!object2||typeof object2!=="object"){logger$j.throwArgumentError("invalid object","object",object2)}Object.keys(object2).forEach(key2=>{if(!properties[key2]){logger$j.throwArgumentError("invalid object key - "+key2,"transaction:"+key2,object2)}})}function shallowCopy(object2){const result={};for(const key2 in object2){result[key2]=object2[key2]}return result}const opaque$1={bigint:true,boolean:true,function:true,number:true,string:true};function _isFrozen$1(object2){if(object2===void 0||object2===null||opaque$1[typeof object2]){return true}if(Array.isArray(object2)||typeof object2==="object"){if(!Object.isFrozen(object2)){return false}const keys2=Object.keys(object2);for(let i=0;i<keys2.length;i++){let value=null;try{value=object2[keys2[i]]}catch(error){continue}if(!_isFrozen$1(value)){return false}}return true}return logger$j.throwArgumentError(`Cannot deepCopy ${typeof object2}`,"object",object2)}function _deepCopy$1(object2){if(_isFrozen$1(object2)){return object2}if(Array.isArray(object2)){return Object.freeze(object2.map(item=>deepCopy$1(item)))}if(typeof object2==="object"){const result={};for(const key2 in object2){const value=object2[key2];if(value===void 0){continue}defineReadOnly$1(result,key2,deepCopy$1(value))}return result}return logger$j.throwArgumentError(`Cannot deepCopy ${typeof object2}`,"object",object2)}function deepCopy$1(object2){return _deepCopy$1(object2)}class Description{constructor(info){for(const key2 in info){this[key2]=deepCopy$1(info[key2])}}}var __awaiter$7=function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$i=new Logger$3(version$n);const padding=new Uint8Array(32);padding.fill(0);const NegativeOne=BigNumber3.from(-1);const Zero=BigNumber3.from(0);const One=BigNumber3.from(1);const MaxUint256=BigNumber3.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");function hexPadRight(value){const bytes2=arrayify(value);const padOffset=bytes2.length%32;if(padOffset){return hexConcat([bytes2,padding.slice(padOffset)])}return hexlify(bytes2)}const hexTrue=hexZeroPad(One.toHexString(),32);const hexFalse=hexZeroPad(Zero.toHexString(),32);const domainFieldTypes={name:"string",version:"string",chainId:"uint256",verifyingContract:"address",salt:"bytes32"};const domainFieldNames=["name","version","chainId","verifyingContract","salt"];function checkString(key2){return function(value){if(typeof value!=="string"){logger$i.throwArgumentError(`invalid domain value for ${JSON.stringify(key2)}`,`domain.${key2}`,value)}return value}}const domainChecks={name:checkString("name"),version:checkString("version"),chainId:function(value){try{return BigNumber3.from(value).toString()}catch(error){}return logger$i.throwArgumentError(`invalid domain value for "chainId"`,"domain.chainId",value)},verifyingContract:function(value){try{return getAddress$1(value).toLowerCase()}catch(error){}return logger$i.throwArgumentError(`invalid domain value "verifyingContract"`,"domain.verifyingContract",value)},salt:function(value){try{const bytes2=arrayify(value);if(bytes2.length!==32){throw new Error("bad length")}return hexlify(bytes2)}catch(error){}return logger$i.throwArgumentError(`invalid domain value "salt"`,"domain.salt",value)}};function getBaseEncoder(type){{const match=type.match(/^(u?)int(\d*)$/);if(match){const signed2=match[1]==="";const width=parseInt(match[2]||"256");if(width%8!==0||width>256||match[2]&&match[2]!==String(width)){logger$i.throwArgumentError("invalid numeric width","type",type)}const boundsUpper=MaxUint256.mask(signed2?width-1:width);const boundsLower=signed2?boundsUpper.add(One).mul(NegativeOne):Zero;return function(value){const v=BigNumber3.from(value);if(v.lt(boundsLower)||v.gt(boundsUpper)){logger$i.throwArgumentError(`value out-of-bounds for ${type}`,"value",value)}return hexZeroPad(v.toTwos(256).toHexString(),32)}}}{const match=type.match(/^bytes(\d+)$/);if(match){const width=parseInt(match[1]);if(width===0||width>32||match[1]!==String(width)){logger$i.throwArgumentError("invalid bytes width","type",type)}return function(value){const bytes2=arrayify(value);if(bytes2.length!==width){logger$i.throwArgumentError(`invalid length for ${type}`,"value",value)}return hexPadRight(value)}}}switch(type){case"address":return function(value){return hexZeroPad(getAddress$1(value),32)};case"bool":return function(value){return!value?hexFalse:hexTrue};case"bytes":return function(value){return keccak256$1(value)};case"string":return function(value){return id$1(value)}}return null}function encodeType(name,fields){return`${name}(${fields.map(({name:name2,type:type})=>type+" "+name2).join(",")})`}class TypedDataEncoder{constructor(types){defineReadOnly$1(this,"types",Object.freeze(deepCopy$1(types)));defineReadOnly$1(this,"_encoderCache",{});defineReadOnly$1(this,"_types",{});const links={};const parents={};const subtypes={};Object.keys(types).forEach(type=>{links[type]={};parents[type]=[];subtypes[type]={}});for(const name in types){const uniqueNames={};types[name].forEach(field=>{if(uniqueNames[field.name]){logger$i.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`,"types",types)}uniqueNames[field.name]=true;const baseType=field.type.match(/^([^\x5b]*)(\x5b|$)/)[1];if(baseType===name){logger$i.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`,"types",types)}const encoder=getBaseEncoder(baseType);if(encoder){return}if(!parents[baseType]){logger$i.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`,"types",types)}parents[baseType].push(name);links[name][baseType]=true})}const primaryTypes=Object.keys(parents).filter(n2=>parents[n2].length===0);if(primaryTypes.length===0){logger$i.throwArgumentError("missing primary type","types",types)}else if(primaryTypes.length>1){logger$i.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map(t=>JSON.stringify(t)).join(", ")}`,"types",types)}defineReadOnly$1(this,"primaryType",primaryTypes[0]);function checkCircular(type,found){if(found[type]){logger$i.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`,"types",types)}found[type]=true;Object.keys(links[type]).forEach(child=>{if(!parents[child]){return}checkCircular(child,found);Object.keys(found).forEach(subtype=>{subtypes[subtype][child]=true})});delete found[type]}checkCircular(this.primaryType,{});for(const name in subtypes){const st=Object.keys(subtypes[name]);st.sort();this._types[name]=encodeType(name,types[name])+st.map(t=>encodeType(t,types[t])).join("")}}getEncoder(type){let encoder=this._encoderCache[type];if(!encoder){encoder=this._encoderCache[type]=this._getEncoder(type)}return encoder}_getEncoder(type){{const encoder=getBaseEncoder(type);if(encoder){return encoder}}const match=type.match(/^(.*)(\x5b(\d*)\x5d)$/);if(match){const subtype=match[1];const subEncoder=this.getEncoder(subtype);const length=parseInt(match[3]);return value=>{if(length>=0&&value.length!==length){logger$i.throwArgumentError("array length mismatch; expected length ${ arrayLength }","value",value)}let result=value.map(subEncoder);if(this._types[subtype]){result=result.map(keccak256$1)}return keccak256$1(hexConcat(result))}}const fields=this.types[type];if(fields){const encodedType=id$1(this._types[type]);return value=>{const values=fields.map(({name:name,type:type2})=>{const result=this.getEncoder(type2)(value[name]);if(this._types[type2]){return keccak256$1(result)}return result});values.unshift(encodedType);return hexConcat(values)}}return logger$i.throwArgumentError(`unknown type: ${type}`,"type",type)}encodeType(name){const result=this._types[name];if(!result){logger$i.throwArgumentError(`unknown type: ${JSON.stringify(name)}`,"name",name)}return result}encodeData(type,value){return this.getEncoder(type)(value)}hashStruct(name,value){return keccak256$1(this.encodeData(name,value))}encode(value){return this.encodeData(this.primaryType,value)}hash(value){return this.hashStruct(this.primaryType,value)}_visit(type,value,callback){{const encoder=getBaseEncoder(type);if(encoder){return callback(type,value)}}const match=type.match(/^(.*)(\x5b(\d*)\x5d)$/);if(match){const subtype=match[1];const length=parseInt(match[3]);if(length>=0&&value.length!==length){logger$i.throwArgumentError("array length mismatch; expected length ${ arrayLength }","value",value)}return value.map(v=>this._visit(subtype,v,callback))}const fields=this.types[type];if(fields){return fields.reduce((accum,{name:name,type:type2})=>{accum[name]=this._visit(type2,value[name],callback);return accum},{})}return logger$i.throwArgumentError(`unknown type: ${type}`,"type",type)}visit(value,callback){return this._visit(this.primaryType,value,callback)}static from(types){return new TypedDataEncoder(types)}static getPrimaryType(types){return TypedDataEncoder.from(types).primaryType}static hashStruct(name,types,value){return TypedDataEncoder.from(types).hashStruct(name,value)}static hashDomain(domain){const domainFields=[];for(const name in domain){const type=domainFieldTypes[name];if(!type){logger$i.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`,"domain",domain)}domainFields.push({name:name,type:type})}domainFields.sort((a,b2)=>domainFieldNames.indexOf(a.name)-domainFieldNames.indexOf(b2.name));return TypedDataEncoder.hashStruct("EIP712Domain",{EIP712Domain:domainFields},domain)}static encode(domain,types,value){return hexConcat(["0x1901",TypedDataEncoder.hashDomain(domain),TypedDataEncoder.from(types).hash(value)])}static hash(domain,types,value){return keccak256$1(TypedDataEncoder.encode(domain,types,value))}static resolveNames(domain,types,value,resolveName){return __awaiter$7(this,void 0,void 0,function*(){domain=shallowCopy(domain);const ensCache={};if(domain.verifyingContract&&!isHexString(domain.verifyingContract,20)){ensCache[domain.verifyingContract]="0x"}const encoder=TypedDataEncoder.from(types);encoder.visit(value,(type,value2)=>{if(type==="address"&&!isHexString(value2,20)){ensCache[value2]="0x"}return value2});for(const name in ensCache){ensCache[name]=yield resolveName(name)}if(domain.verifyingContract&&ensCache[domain.verifyingContract]){domain.verifyingContract=ensCache[domain.verifyingContract]}value=encoder.visit(value,(type,value2)=>{if(type==="address"&&ensCache[value2]){return ensCache[value2]}return value2});return{domain:domain,value:value}})}static getPayload(domain,types,value){TypedDataEncoder.hashDomain(domain);const domainValues={};const domainTypes=[];domainFieldNames.forEach(name=>{const value2=domain[name];if(value2==null){return}domainValues[name]=domainChecks[name](value2);domainTypes.push({name:name,type:domainFieldTypes[name]})});const encoder=TypedDataEncoder.from(types);const typesWithDomain=shallowCopy(types);if(typesWithDomain.EIP712Domain){logger$i.throwArgumentError("types must not contain EIP712Domain type","types.EIP712Domain",types)}else{typesWithDomain.EIP712Domain=domainTypes}encoder.encode(value);return{types:typesWithDomain,domain:domainValues,primaryType:encoder.primaryType,message:encoder.visit(value,(type,value2)=>{if(type.match(/^bytes(\d*)/)){return hexlify(arrayify(value2))}if(type.match(/^u?int/)){return BigNumber3.from(value2).toString()}switch(type){case"address":return value2.toLowerCase();case"bool":return!!value2;case"string":if(typeof value2!=="string"){logger$i.throwArgumentError(`invalid string`,"value",value2)}return value2}return logger$i.throwArgumentError("unsupported type","type",type)})}}}const names=["wei","kwei","mwei","gwei","szabo","finney","ether"];function formatUnits(value,unitName){if(typeof unitName==="string"){const index=names.indexOf(unitName);if(index!==-1){unitName=3*index}}return formatFixed(value,unitName!=null?unitName:18)}function formatEther(wei){return formatUnits(wei,18)}function bind(fn,thisArg){return function wrap(){return fn.apply(thisArg,arguments)}}const{toString:toString}=Object.prototype;const{getPrototypeOf:getPrototypeOf}=Object;const{iterator:iterator,toStringTag:toStringTag}=Symbol;const kindOf=(cache=>thing=>{const str=toString.call(thing);return cache[str]||(cache[str]=str.slice(8,-1).toLowerCase())})(Object.create(null));const kindOfTest=type=>{type=type.toLowerCase();return thing=>kindOf(thing)===type};const typeOfTest=type=>thing=>typeof thing===type;const{isArray:isArray$1}=Array;const isUndefined=typeOfTest("undefined");function isBuffer$1(val){return val!==null&&!isUndefined(val)&&val.constructor!==null&&!isUndefined(val.constructor)&&isFunction$1(val.constructor.isBuffer)&&val.constructor.isBuffer(val)}const isArrayBuffer=kindOfTest("ArrayBuffer");function isArrayBufferView(val){let result;if(typeof ArrayBuffer!=="undefined"&&ArrayBuffer.isView){result=ArrayBuffer.isView(val)}else{result=val&&val.buffer&&isArrayBuffer(val.buffer)}return result}const isString=typeOfTest("string");const isFunction$1=typeOfTest("function");const isNumber=typeOfTest("number");const isObject$1=thing=>thing!==null&&typeof thing==="object";const isBoolean=thing=>thing===true||thing===false;const isPlainObject=val=>{if(kindOf(val)!=="object"){return false}const prototype2=getPrototypeOf(val);return(prototype2===null||prototype2===Object.prototype||Object.getPrototypeOf(prototype2)===null)&&!(toStringTag in val)&&!(iterator in val)};const isDate=kindOfTest("Date");const isFile=kindOfTest("File");const isBlob=kindOfTest("Blob");const isFileList=kindOfTest("FileList");const isStream=val=>isObject$1(val)&&isFunction$1(val.pipe);const isFormData=thing=>{let kind;return thing&&(typeof FormData==="function"&&thing instanceof FormData||isFunction$1(thing.append)&&((kind=kindOf(thing))==="formdata"||kind==="object"&&isFunction$1(thing.toString)&&thing.toString()==="[object FormData]"))};const isURLSearchParams=kindOfTest("URLSearchParams");const[isReadableStream,isRequest,isResponse,isHeaders]=["ReadableStream","Request","Response","Headers"].map(kindOfTest);const trim=str=>str.trim?str.trim():str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function forEach(obj,fn,{allOwnKeys:allOwnKeys=false}={}){if(obj===null||typeof obj==="undefined"){return}let i;let l;if(typeof obj!=="object"){obj=[obj]}if(isArray$1(obj)){for(i=0,l=obj.length;i<l;i++){fn.call(null,obj[i],i,obj)}}else{const keys2=allOwnKeys?Object.getOwnPropertyNames(obj):Object.keys(obj);const len=keys2.length;let key2;for(i=0;i<len;i++){key2=keys2[i];fn.call(null,obj[key2],key2,obj)}}}function findKey(obj,key2){key2=key2.toLowerCase();const keys2=Object.keys(obj);let i=keys2.length;let _key;while(i-- >0){_key=keys2[i];if(key2===_key.toLowerCase()){return _key}}return null}const _global=(()=>{if(typeof globalThis!=="undefined")return globalThis;return typeof self!=="undefined"?self:typeof window!=="undefined"?window:global})();const isContextDefined=context=>!isUndefined(context)&&context!==_global;function merge(){const{caseless:caseless}=isContextDefined(this)&&this||{};const result={};const assignValue=(val,key2)=>{const targetKey=caseless&&findKey(result,key2)||key2;if(isPlainObject(result[targetKey])&&isPlainObject(val)){result[targetKey]=merge(result[targetKey],val)}else if(isPlainObject(val)){result[targetKey]=merge({},val)}else if(isArray$1(val)){result[targetKey]=val.slice()}else{result[targetKey]=val}};for(let i=0,l=arguments.length;i<l;i++){arguments[i]&&forEach(arguments[i],assignValue)}return result}const extend=(a,b2,thisArg,{allOwnKeys:allOwnKeys}={})=>{forEach(b2,(val,key2)=>{if(thisArg&&isFunction$1(val)){a[key2]=bind(val,thisArg)}else{a[key2]=val}},{allOwnKeys:allOwnKeys});return a};const stripBOM=content=>{if(content.charCodeAt(0)===65279){content=content.slice(1)}return content};const inherits=(constructor,superConstructor,props,descriptors2)=>{constructor.prototype=Object.create(superConstructor.prototype,descriptors2);constructor.prototype.constructor=constructor;Object.defineProperty(constructor,"super",{value:superConstructor.prototype});props&&Object.assign(constructor.prototype,props)};const toFlatObject=(sourceObj,destObj,filter2,propFilter)=>{let props;let i;let prop;const merged={};destObj=destObj||{};if(sourceObj==null)return destObj;do{props=Object.getOwnPropertyNames(sourceObj);i=props.length;while(i-- >0){prop=props[i];if((!propFilter||propFilter(prop,sourceObj,destObj))&&!merged[prop]){destObj[prop]=sourceObj[prop];merged[prop]=true}}sourceObj=filter2!==false&&getPrototypeOf(sourceObj)}while(sourceObj&&(!filter2||filter2(sourceObj,destObj))&&sourceObj!==Object.prototype);return destObj};const endsWith=(str,searchString,position)=>{str=String(str);if(position===void 0||position>str.length){position=str.length}position-=searchString.length;const lastIndex=str.indexOf(searchString,position);return lastIndex!==-1&&lastIndex===position};const toArray=thing=>{if(!thing)return null;if(isArray$1(thing))return thing;let i=thing.length;if(!isNumber(i))return null;const arr=new Array(i);while(i-- >0){arr[i]=thing[i]}return arr};const isTypedArray$1=(TypedArray=>thing=>TypedArray&&thing instanceof TypedArray)(typeof Uint8Array!=="undefined"&&getPrototypeOf(Uint8Array));const forEachEntry=(obj,fn)=>{const generator=obj&&obj[iterator];const _iterator=generator.call(obj);let result;while((result=_iterator.next())&&!result.done){const pair=result.value;fn.call(obj,pair[0],pair[1])}};const matchAll=(regExp,str)=>{let matches;const arr=[];while((matches=regExp.exec(str))!==null){arr.push(matches)}return arr};const isHTMLForm=kindOfTest("HTMLFormElement");const toCamelCase=str=>str.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function replacer(m,p1,p2){return p1.toUpperCase()+p2});const hasOwnProperty$9=(({hasOwnProperty:hasOwnProperty2})=>(obj,prop)=>hasOwnProperty2.call(obj,prop))(Object.prototype);const isRegExp=kindOfTest("RegExp");const reduceDescriptors=(obj,reducer)=>{const descriptors2=Object.getOwnPropertyDescriptors(obj);const reducedDescriptors={};forEach(descriptors2,(descriptor,name)=>{let ret;if((ret=reducer(descriptor,name,obj))!==false){reducedDescriptors[name]=ret||descriptor}});Object.defineProperties(obj,reducedDescriptors)};const freezeMethods=obj=>{reduceDescriptors(obj,(descriptor,name)=>{if(isFunction$1(obj)&&["arguments","caller","callee"].indexOf(name)!==-1){return false}const value=obj[name];if(!isFunction$1(value))return;descriptor.enumerable=false;if("writable"in descriptor){descriptor.writable=false;return}if(!descriptor.set){descriptor.set=()=>{throw Error("Can not rewrite read-only method '"+name+"'")}}})};const toObjectSet=(arrayOrString,delimiter)=>{const obj={};const define=arr=>{arr.forEach(value=>{obj[value]=true})};isArray$1(arrayOrString)?define(arrayOrString):define(String(arrayOrString).split(delimiter));return obj};const noop$1=()=>{};const toFiniteNumber=(value,defaultValue)=>value!=null&&Number.isFinite(value=+value)?value:defaultValue;function isSpecCompliantForm(thing){return!!(thing&&isFunction$1(thing.append)&&thing[toStringTag]==="FormData"&&thing[iterator])}const toJSONObject=obj=>{const stack=new Array(10);const visit=(source,i)=>{if(isObject$1(source)){if(stack.indexOf(source)>=0){return}if(!("toJSON"in source)){stack[i]=source;const target=isArray$1(source)?[]:{};forEach(source,(value,key2)=>{const reducedValue=visit(value,i+1);!isUndefined(reducedValue)&&(target[key2]=reducedValue)});stack[i]=void 0;return target}}return source};return visit(obj,0)};const isAsyncFn=kindOfTest("AsyncFunction");const isThenable=thing=>thing&&(isObject$1(thing)||isFunction$1(thing))&&isFunction$1(thing.then)&&isFunction$1(thing.catch);const _setImmediate=((setImmediateSupported,postMessageSupported)=>{if(setImmediateSupported){return setImmediate}return postMessageSupported?((token,callbacks)=>{_global.addEventListener("message",({source:source,data:data})=>{if(source===_global&&data===token){callbacks.length&&callbacks.shift()()}},false);return cb=>{callbacks.push(cb);_global.postMessage(token,"*")}})(`axios@${Math.random()}`,[]):cb=>setTimeout(cb)})(typeof setImmediate==="function",isFunction$1(_global.postMessage));const asap=typeof queueMicrotask!=="undefined"?queueMicrotask.bind(_global):typeof process$1!=="undefined"&&process$1.nextTick||_setImmediate;const isIterable=thing=>thing!=null&&isFunction$1(thing[iterator]);const utils$2={isArray:isArray$1,isArrayBuffer:isArrayBuffer,isBuffer:isBuffer$1,isFormData:isFormData,isArrayBufferView:isArrayBufferView,isString:isString,isNumber:isNumber,isBoolean:isBoolean,isObject:isObject$1,isPlainObject:isPlainObject,isReadableStream:isReadableStream,isRequest:isRequest,isResponse:isResponse,isHeaders:isHeaders,isUndefined:isUndefined,isDate:isDate,isFile:isFile,isBlob:isBlob,isRegExp:isRegExp,isFunction:isFunction$1,isStream:isStream,isURLSearchParams:isURLSearchParams,isTypedArray:isTypedArray$1,isFileList:isFileList,forEach:forEach,merge:merge,extend:extend,trim:trim,stripBOM:stripBOM,inherits:inherits,toFlatObject:toFlatObject,kindOf:kindOf,kindOfTest:kindOfTest,endsWith:endsWith,toArray:toArray,forEachEntry:forEachEntry,matchAll:matchAll,isHTMLForm:isHTMLForm,hasOwnProperty:hasOwnProperty$9,hasOwnProp:hasOwnProperty$9,reduceDescriptors:reduceDescriptors,freezeMethods:freezeMethods,toObjectSet:toObjectSet,toCamelCase:toCamelCase,noop:noop$1,toFiniteNumber:toFiniteNumber,findKey:findKey,global:_global,isContextDefined:isContextDefined,isSpecCompliantForm:isSpecCompliantForm,toJSONObject:toJSONObject,isAsyncFn:isAsyncFn,isThenable:isThenable,setImmediate:_setImmediate,asap:asap,isIterable:isIterable};function AxiosError$1(message,code,config,request,response){Error.call(this);if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}else{this.stack=(new Error).stack}this.message=message;this.name="AxiosError";code&&(this.code=code);config&&(this.config=config);request&&(this.request=request);if(response){this.response=response;this.status=response.status?response.status:null}}utils$2.inherits(AxiosError$1,Error,{toJSON:function toJSON(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:utils$2.toJSONObject(this.config),code:this.code,status:this.status}}});const prototype$1=AxiosError$1.prototype;const descriptors={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(code=>{descriptors[code]={value:code}});Object.defineProperties(AxiosError$1,descriptors);Object.defineProperty(prototype$1,"isAxiosError",{value:true});AxiosError$1.from=(error,code,config,request,response,customProps)=>{const axiosError=Object.create(prototype$1);utils$2.toFlatObject(error,axiosError,function filter2(obj){return obj!==Error.prototype},prop=>prop!=="isAxiosError");AxiosError$1.call(axiosError,error.message,code,config,request,response);axiosError.cause=error;axiosError.name=error.name;customProps&&Object.assign(axiosError,customProps);return axiosError};const httpAdapter=null;function isVisitable(thing){return utils$2.isPlainObject(thing)||utils$2.isArray(thing)}function removeBrackets(key2){return utils$2.endsWith(key2,"[]")?key2.slice(0,-2):key2}function renderKey(path,key2,dots){if(!path)return key2;return path.concat(key2).map(function each(token,i){token=removeBrackets(token);return!dots&&i?"["+token+"]":token}).join(dots?".":"")}function isFlatArray(arr){return utils$2.isArray(arr)&&!arr.some(isVisitable)}const predicates=utils$2.toFlatObject(utils$2,{},null,function filter(prop){return/^is[A-Z]/.test(prop)});function toFormData$1(obj,formData,options){if(!utils$2.isObject(obj)){throw new TypeError("target must be an object")}formData=formData||new FormData;options=utils$2.toFlatObject(options,{metaTokens:true,dots:false,indexes:false},false,function defined(option,source){return!utils$2.isUndefined(source[option])});const metaTokens=options.metaTokens;const visitor=options.visitor||defaultVisitor;const dots=options.dots;const indexes=options.indexes;const _Blob=options.Blob||typeof Blob!=="undefined"&&Blob;const useBlob=_Blob&&utils$2.isSpecCompliantForm(formData);if(!utils$2.isFunction(visitor)){throw new TypeError("visitor must be a function")}function convertValue(value){if(value===null)return"";if(utils$2.isDate(value)){return value.toISOString()}if(utils$2.isBoolean(value)){return value.toString()}if(!useBlob&&utils$2.isBlob(value)){throw new AxiosError$1("Blob is not supported. Use a Buffer instead.")}if(utils$2.isArrayBuffer(value)||utils$2.isTypedArray(value)){return useBlob&&typeof Blob==="function"?new Blob([value]):Buffer$1.from(value)}return value}function defaultVisitor(value,key2,path){let arr=value;if(value&&!path&&typeof value==="object"){if(utils$2.endsWith(key2,"{}")){key2=metaTokens?key2:key2.slice(0,-2);value=JSON.stringify(value)}else if(utils$2.isArray(value)&&isFlatArray(value)||(utils$2.isFileList(value)||utils$2.endsWith(key2,"[]"))&&(arr=utils$2.toArray(value))){key2=removeBrackets(key2);arr.forEach(function each(el,index){!(utils$2.isUndefined(el)||el===null)&&formData.append(indexes===true?renderKey([key2],index,dots):indexes===null?key2:key2+"[]",convertValue(el))});return false}}if(isVisitable(value)){return true}formData.append(renderKey(path,key2,dots),convertValue(value));return false}const stack=[];const exposedHelpers=Object.assign(predicates,{defaultVisitor:defaultVisitor,convertValue:convertValue,isVisitable:isVisitable});function build(value,path){if(utils$2.isUndefined(value))return;if(stack.indexOf(value)!==-1){throw Error("Circular reference detected in "+path.join("."))}stack.push(value);utils$2.forEach(value,function each(el,key2){const result=!(utils$2.isUndefined(el)||el===null)&&visitor.call(formData,el,utils$2.isString(key2)?key2.trim():key2,path,exposedHelpers);if(result===true){build(el,path?path.concat(key2):[key2])}});stack.pop()}if(!utils$2.isObject(obj)){throw new TypeError("data must be an object")}build(obj);return formData}function encode$3(str){const charMap={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g,function replacer(match){return charMap[match]})}function AxiosURLSearchParams(params,options){this._pairs=[];params&&toFormData$1(params,this,options)}const prototype=AxiosURLSearchParams.prototype;prototype.append=function append(name,value){this._pairs.push([name,value])};prototype.toString=function toString2(encoder){const _encode4=encoder?function(value){return encoder.call(this,value,encode$3)}:encode$3;return this._pairs.map(function each(pair){return _encode4(pair[0])+"="+_encode4(pair[1])},"").join("&")};function encode$2(val){return encodeURIComponent(val).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function buildURL(url,params,options){if(!params){return url}const _encode4=options&&options.encode||encode$2;if(utils$2.isFunction(options)){options={serialize:options}}const serializeFn=options&&options.serialize;let serializedParams;if(serializeFn){serializedParams=serializeFn(params,options)}else{serializedParams=utils$2.isURLSearchParams(params)?params.toString():new AxiosURLSearchParams(params,options).toString(_encode4)}if(serializedParams){const hashmarkIndex=url.indexOf("#");if(hashmarkIndex!==-1){url=url.slice(0,hashmarkIndex)}url+=(url.indexOf("?")===-1?"?":"&")+serializedParams}return url}class InterceptorManager{constructor(){this.handlers=[]}use(fulfilled,rejected,options){this.handlers.push({fulfilled:fulfilled,rejected:rejected,synchronous:options?options.synchronous:false,runWhen:options?options.runWhen:null});return this.handlers.length-1}eject(id2){if(this.handlers[id2]){this.handlers[id2]=null}}clear(){if(this.handlers){this.handlers=[]}}forEach(fn){utils$2.forEach(this.handlers,function forEachHandler(h){if(h!==null){fn(h)}})}}const transitionalDefaults={silentJSONParsing:true,forcedJSONParsing:true,clarifyTimeoutError:false};const URLSearchParams$1=typeof URLSearchParams!=="undefined"?URLSearchParams:AxiosURLSearchParams;const FormData$1=typeof FormData!=="undefined"?FormData:null;const Blob$1=typeof Blob!=="undefined"?Blob:null;const platform$1={isBrowser:true,classes:{URLSearchParams:URLSearchParams$1,FormData:FormData$1,Blob:Blob$1},protocols:["http","https","file","blob","url","data"]};const hasBrowserEnv=typeof window!=="undefined"&&typeof document!=="undefined";const _navigator=typeof navigator==="object"&&navigator||void 0;const hasStandardBrowserEnv=hasBrowserEnv&&(!_navigator||["ReactNative","NativeScript","NS"].indexOf(_navigator.product)<0);const hasStandardBrowserWebWorkerEnv=(()=>typeof WorkerGlobalScope!=="undefined"&&self instanceof WorkerGlobalScope&&typeof self.importScripts==="function")();const origin=hasBrowserEnv&&window.location.href||"http://localhost";const utils$1=Object.freeze(Object.defineProperty({__proto__:null,hasBrowserEnv:hasBrowserEnv,hasStandardBrowserEnv:hasStandardBrowserEnv,hasStandardBrowserWebWorkerEnv:hasStandardBrowserWebWorkerEnv,navigator:_navigator,origin:origin},Symbol.toStringTag,{value:"Module"}));const platform={...utils$1,...platform$1};function toURLEncodedForm(data,options){return toFormData$1(data,new platform.classes.URLSearchParams,Object.assign({visitor:function(value,key2,path,helpers){if(platform.isNode&&utils$2.isBuffer(value)){this.append(key2,value.toString("base64"));return false}return helpers.defaultVisitor.apply(this,arguments)}},options))}function parsePropPath(name){return utils$2.matchAll(/\w+|\[(\w*)]/g,name).map(match=>match[0]==="[]"?"":match[1]||match[0])}function arrayToObject(arr){const obj={};const keys2=Object.keys(arr);let i;const len=keys2.length;let key2;for(i=0;i<len;i++){key2=keys2[i];obj[key2]=arr[key2]}return obj}function formDataToJSON(formData){function buildPath(path,value,target,index){let name=path[index++];if(name==="__proto__")return true;const isNumericKey=Number.isFinite(+name);const isLast=index>=path.length;name=!name&&utils$2.isArray(target)?target.length:name;if(isLast){if(utils$2.hasOwnProp(target,name)){target[name]=[target[name],value]}else{target[name]=value}return!isNumericKey}if(!target[name]||!utils$2.isObject(target[name])){target[name]=[]}const result=buildPath(path,value,target[name],index);if(result&&utils$2.isArray(target[name])){target[name]=arrayToObject(target[name])}return!isNumericKey}if(utils$2.isFormData(formData)&&utils$2.isFunction(formData.entries)){const obj={};utils$2.forEachEntry(formData,(name,value)=>{buildPath(parsePropPath(name),value,obj,0)});return obj}return null}function stringifySafely(rawValue,parser,encoder){if(utils$2.isString(rawValue)){try{(parser||JSON.parse)(rawValue);return utils$2.trim(rawValue)}catch(e){if(e.name!=="SyntaxError"){throw e}}}return(encoder||JSON.stringify)(rawValue)}const defaults={transitional:transitionalDefaults,adapter:["xhr","http","fetch"],transformRequest:[function transformRequest(data,headers){const contentType=headers.getContentType()||"";const hasJSONContentType=contentType.indexOf("application/json")>-1;const isObjectPayload=utils$2.isObject(data);if(isObjectPayload&&utils$2.isHTMLForm(data)){data=new FormData(data)}const isFormData2=utils$2.isFormData(data);if(isFormData2){return hasJSONContentType?JSON.stringify(formDataToJSON(data)):data}if(utils$2.isArrayBuffer(data)||utils$2.isBuffer(data)||utils$2.isStream(data)||utils$2.isFile(data)||utils$2.isBlob(data)||utils$2.isReadableStream(data)){return data}if(utils$2.isArrayBufferView(data)){return data.buffer}if(utils$2.isURLSearchParams(data)){headers.setContentType("application/x-www-form-urlencoded;charset=utf-8",false);return data.toString()}let isFileList2;if(isObjectPayload){if(contentType.indexOf("application/x-www-form-urlencoded")>-1){return toURLEncodedForm(data,this.formSerializer).toString()}if((isFileList2=utils$2.isFileList(data))||contentType.indexOf("multipart/form-data")>-1){const _FormData=this.env&&this.env.FormData;return toFormData$1(isFileList2?{"files[]":data}:data,_FormData&&new _FormData,this.formSerializer)}}if(isObjectPayload||hasJSONContentType){headers.setContentType("application/json",false);return stringifySafely(data)}return data}],transformResponse:[function transformResponse(data){const transitional2=this.transitional||defaults.transitional;const forcedJSONParsing=transitional2&&transitional2.forcedJSONParsing;const JSONRequested=this.responseType==="json";if(utils$2.isResponse(data)||utils$2.isReadableStream(data)){return data}if(data&&utils$2.isString(data)&&(forcedJSONParsing&&!this.responseType||JSONRequested)){const silentJSONParsing=transitional2&&transitional2.silentJSONParsing;const strictJSONParsing=!silentJSONParsing&&JSONRequested;try{return JSON.parse(data)}catch(e){if(strictJSONParsing){if(e.name==="SyntaxError"){throw AxiosError$1.from(e,AxiosError$1.ERR_BAD_RESPONSE,this,null,this.response)}throw e}}}return data}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:platform.classes.FormData,Blob:platform.classes.Blob},validateStatus:function validateStatus(status){return status>=200&&status<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};utils$2.forEach(["delete","get","head","post","put","patch"],method=>{defaults.headers[method]={}});const ignoreDuplicateOf=utils$2.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]);const parseHeaders=rawHeaders=>{const parsed={};let key2;let val;let i;rawHeaders&&rawHeaders.split("\n").forEach(function parser(line){i=line.indexOf(":");key2=line.substring(0,i).trim().toLowerCase();val=line.substring(i+1).trim();if(!key2||parsed[key2]&&ignoreDuplicateOf[key2]){return}if(key2==="set-cookie"){if(parsed[key2]){parsed[key2].push(val)}else{parsed[key2]=[val]}}else{parsed[key2]=parsed[key2]?parsed[key2]+", "+val:val}});return parsed};const $internals=Symbol("internals");function normalizeHeader(header){return header&&String(header).trim().toLowerCase()}function normalizeValue(value){if(value===false||value==null){return value}return utils$2.isArray(value)?value.map(normalizeValue):String(value)}function parseTokens(str){const tokens2=Object.create(null);const tokensRE=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;let match;while(match=tokensRE.exec(str)){tokens2[match[1]]=match[2]}return tokens2}const isValidHeaderName=str=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());function matchHeaderValue(context,value,header,filter2,isHeaderNameFilter){if(utils$2.isFunction(filter2)){return filter2.call(this,value,header)}if(isHeaderNameFilter){value=header}if(!utils$2.isString(value))return;if(utils$2.isString(filter2)){return value.indexOf(filter2)!==-1}if(utils$2.isRegExp(filter2)){return filter2.test(value)}}function formatHeader(header){return header.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(w,char,str)=>char.toUpperCase()+str)}function buildAccessors(obj,header){const accessorName=utils$2.toCamelCase(" "+header);["get","set","has"].forEach(methodName=>{Object.defineProperty(obj,methodName+accessorName,{value:function(arg1,arg2,arg3){return this[methodName].call(this,header,arg1,arg2,arg3)},configurable:true})})}let AxiosHeaders$1=class AxiosHeaders{constructor(headers){headers&&this.set(headers)}set(header,valueOrRewrite,rewrite){const self2=this;function setHeader(_value2,_header,_rewrite){const lHeader=normalizeHeader(_header);if(!lHeader){throw new Error("header name must be a non-empty string")}const key2=utils$2.findKey(self2,lHeader);if(!key2||self2[key2]===void 0||_rewrite===true||_rewrite===void 0&&self2[key2]!==false){self2[key2||_header]=normalizeValue(_value2)}}const setHeaders=(headers,_rewrite)=>utils$2.forEach(headers,(_value2,_header)=>setHeader(_value2,_header,_rewrite));if(utils$2.isPlainObject(header)||header instanceof this.constructor){setHeaders(header,valueOrRewrite)}else if(utils$2.isString(header)&&(header=header.trim())&&!isValidHeaderName(header)){setHeaders(parseHeaders(header),valueOrRewrite)}else if(utils$2.isObject(header)&&utils$2.isIterable(header)){let obj={},dest,key2;for(const entry of header){if(!utils$2.isArray(entry)){throw TypeError("Object iterator must return a key-value pair")}obj[key2=entry[0]]=(dest=obj[key2])?utils$2.isArray(dest)?[...dest,entry[1]]:[dest,entry[1]]:entry[1]}setHeaders(obj,valueOrRewrite)}else{header!=null&&setHeader(valueOrRewrite,header,rewrite)}return this}get(header,parser){header=normalizeHeader(header);if(header){const key2=utils$2.findKey(this,header);if(key2){const value=this[key2];if(!parser){return value}if(parser===true){return parseTokens(value)}if(utils$2.isFunction(parser)){return parser.call(this,value,key2)}if(utils$2.isRegExp(parser)){return parser.exec(value)}throw new TypeError("parser must be boolean|regexp|function")}}}has(header,matcher){header=normalizeHeader(header);if(header){const key2=utils$2.findKey(this,header);return!!(key2&&this[key2]!==void 0&&(!matcher||matchHeaderValue(this,this[key2],key2,matcher)))}return false}delete(header,matcher){const self2=this;let deleted=false;function deleteHeader(_header){_header=normalizeHeader(_header);if(_header){const key2=utils$2.findKey(self2,_header);if(key2&&(!matcher||matchHeaderValue(self2,self2[key2],key2,matcher))){delete self2[key2];deleted=true}}}if(utils$2.isArray(header)){header.forEach(deleteHeader)}else{deleteHeader(header)}return deleted}clear(matcher){const keys2=Object.keys(this);let i=keys2.length;let deleted=false;while(i--){const key2=keys2[i];if(!matcher||matchHeaderValue(this,this[key2],key2,matcher,true)){delete this[key2];deleted=true}}return deleted}normalize(format){const self2=this;const headers={};utils$2.forEach(this,(value,header)=>{const key2=utils$2.findKey(headers,header);if(key2){self2[key2]=normalizeValue(value);delete self2[header];return}const normalized=format?formatHeader(header):String(header).trim();if(normalized!==header){delete self2[header]}self2[normalized]=normalizeValue(value);headers[normalized]=true});return this}concat(...targets){return this.constructor.concat(this,...targets)}toJSON(asStrings){const obj=Object.create(null);utils$2.forEach(this,(value,header)=>{value!=null&&value!==false&&(obj[header]=asStrings&&utils$2.isArray(value)?value.join(", "):value)});return obj}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([header,value])=>header+": "+value).join("\n")}getSetCookie(){return this.get("set-cookie")||[]}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(thing){return thing instanceof this?thing:new this(thing)}static concat(first,...targets){const computed=new this(first);targets.forEach(target=>computed.set(target));return computed}static accessor(header){const internals=this[$internals]=this[$internals]={accessors:{}};const accessors=internals.accessors;const prototype2=this.prototype;function defineAccessor(_header){const lHeader=normalizeHeader(_header);if(!accessors[lHeader]){buildAccessors(prototype2,_header);accessors[lHeader]=true}}utils$2.isArray(header)?header.forEach(defineAccessor):defineAccessor(header);return this}};AxiosHeaders$1.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);utils$2.reduceDescriptors(AxiosHeaders$1.prototype,({value:value},key2)=>{let mapped=key2[0].toUpperCase()+key2.slice(1);return{get:()=>value,set(headerValue){this[mapped]=headerValue}}});utils$2.freezeMethods(AxiosHeaders$1);function transformData(fns,response){const config=this||defaults;const context=response||config;const headers=AxiosHeaders$1.from(context.headers);let data=context.data;utils$2.forEach(fns,function transform(fn){data=fn.call(config,data,headers.normalize(),response?response.status:void 0)});headers.normalize();return data}function isCancel$1(value){return!!(value&&value.__CANCEL__)}function CanceledError$1(message,config,request){AxiosError$1.call(this,message==null?"canceled":message,AxiosError$1.ERR_CANCELED,config,request);this.name="CanceledError"}utils$2.inherits(CanceledError$1,AxiosError$1,{__CANCEL__:true});function settle(resolve,reject,response){const validateStatus2=response.config.validateStatus;if(!response.status||!validateStatus2||validateStatus2(response.status)){resolve(response)}else{reject(new AxiosError$1("Request failed with status code "+response.status,[AxiosError$1.ERR_BAD_REQUEST,AxiosError$1.ERR_BAD_RESPONSE][Math.floor(response.status/100)-4],response.config,response.request,response))}}function parseProtocol(url){const match=/^([-+\w]{1,25})(:?\/\/|:)/.exec(url);return match&&match[1]||""}function speedometer(samplesCount,min){samplesCount=samplesCount||10;const bytes2=new Array(samplesCount);const timestamps=new Array(samplesCount);let head=0;let tail=0;let firstSampleTS;min=min!==void 0?min:1e3;return function push(chunkLength){const now=Date.now();const startedAt=timestamps[tail];if(!firstSampleTS){firstSampleTS=now}bytes2[head]=chunkLength;timestamps[head]=now;let i=tail;let bytesCount=0;while(i!==head){bytesCount+=bytes2[i++];i=i%samplesCount}head=(head+1)%samplesCount;if(head===tail){tail=(tail+1)%samplesCount}if(now-firstSampleTS<min){return}const passed=startedAt&&now-startedAt;return passed?Math.round(bytesCount*1e3/passed):void 0}}function throttle(fn,freq){let timestamp=0;let threshold=1e3/freq;let lastArgs;let timer;const invoke=(args,now=Date.now())=>{timestamp=now;lastArgs=null;if(timer){clearTimeout(timer);timer=null}fn.apply(null,args)};const throttled=(...args)=>{const now=Date.now();const passed=now-timestamp;if(passed>=threshold){invoke(args,now)}else{lastArgs=args;if(!timer){timer=setTimeout(()=>{timer=null;invoke(lastArgs)},threshold-passed)}}};const flush=()=>lastArgs&&invoke(lastArgs);return[throttled,flush]}const progressEventReducer=(listener,isDownloadStream,freq=3)=>{let bytesNotified=0;const _speedometer=speedometer(50,250);return throttle(e=>{const loaded=e.loaded;const total=e.lengthComputable?e.total:void 0;const progressBytes=loaded-bytesNotified;const rate=_speedometer(progressBytes);const inRange=loaded<=total;bytesNotified=loaded;const data={loaded:loaded,total:total,progress:total?loaded/total:void 0,bytes:progressBytes,rate:rate?rate:void 0,estimated:rate&&total&&inRange?(total-loaded)/rate:void 0,event:e,lengthComputable:total!=null,[isDownloadStream?"download":"upload"]:true};listener(data)},freq)};const progressEventDecorator=(total,throttled)=>{const lengthComputable=total!=null;return[loaded=>throttled[0]({lengthComputable:lengthComputable,total:total,loaded:loaded}),throttled[1]]};const asyncDecorator=fn=>(...args)=>utils$2.asap(()=>fn(...args));const isURLSameOrigin=platform.hasStandardBrowserEnv?((origin2,isMSIE)=>url=>{url=new URL(url,platform.origin);return origin2.protocol===url.protocol&&origin2.host===url.host&&(isMSIE||origin2.port===url.port)})(new URL(platform.origin),platform.navigator&&/(msie|trident)/i.test(platform.navigator.userAgent)):()=>true;const cookies=platform.hasStandardBrowserEnv?{write(name,value,expires,path,domain,secure){const cookie=[name+"="+encodeURIComponent(value)];utils$2.isNumber(expires)&&cookie.push("expires="+new Date(expires).toGMTString());utils$2.isString(path)&&cookie.push("path="+path);utils$2.isString(domain)&&cookie.push("domain="+domain);secure===true&&cookie.push("secure");document.cookie=cookie.join("; ")},read(name){const match=document.cookie.match(new RegExp("(^|;\\s*)("+name+")=([^;]*)"));return match?decodeURIComponent(match[3]):null},remove(name){this.write(name,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function isAbsoluteURL(url){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(url)}function combineURLs(baseURL,relativeURL){return relativeURL?baseURL.replace(/\/?\/$/,"")+"/"+relativeURL.replace(/^\/+/,""):baseURL}function buildFullPath(baseURL,requestedURL,allowAbsoluteUrls){let isRelativeUrl=!isAbsoluteURL(requestedURL);if(baseURL&&(isRelativeUrl||allowAbsoluteUrls==false)){return combineURLs(baseURL,requestedURL)}return requestedURL}const headersToObject=thing=>thing instanceof AxiosHeaders$1?{...thing}:thing;function mergeConfig$1(config1,config2){config2=config2||{};const config={};function getMergedValue(target,source,prop,caseless){if(utils$2.isPlainObject(target)&&utils$2.isPlainObject(source)){return utils$2.merge.call({caseless:caseless},target,source)}else if(utils$2.isPlainObject(source)){return utils$2.merge({},source)}else if(utils$2.isArray(source)){return source.slice()}return source}function mergeDeepProperties(a,b2,prop,caseless){if(!utils$2.isUndefined(b2)){return getMergedValue(a,b2,prop,caseless)}else if(!utils$2.isUndefined(a)){return getMergedValue(void 0,a,prop,caseless)}}function valueFromConfig2(a,b2){if(!utils$2.isUndefined(b2)){return getMergedValue(void 0,b2)}}function defaultToConfig2(a,b2){if(!utils$2.isUndefined(b2)){return getMergedValue(void 0,b2)}else if(!utils$2.isUndefined(a)){return getMergedValue(void 0,a)}}function mergeDirectKeys(a,b2,prop){if(prop in config2){return getMergedValue(a,b2)}else if(prop in config1){return getMergedValue(void 0,a)}}const mergeMap={url:valueFromConfig2,method:valueFromConfig2,data:valueFromConfig2,baseURL:defaultToConfig2,transformRequest:defaultToConfig2,transformResponse:defaultToConfig2,paramsSerializer:defaultToConfig2,timeout:defaultToConfig2,timeoutMessage:defaultToConfig2,withCredentials:defaultToConfig2,withXSRFToken:defaultToConfig2,adapter:defaultToConfig2,responseType:defaultToConfig2,xsrfCookieName:defaultToConfig2,xsrfHeaderName:defaultToConfig2,onUploadProgress:defaultToConfig2,onDownloadProgress:defaultToConfig2,decompress:defaultToConfig2,maxContentLength:defaultToConfig2,maxBodyLength:defaultToConfig2,beforeRedirect:defaultToConfig2,transport:defaultToConfig2,httpAgent:defaultToConfig2,httpsAgent:defaultToConfig2,cancelToken:defaultToConfig2,socketPath:defaultToConfig2,responseEncoding:defaultToConfig2,validateStatus:mergeDirectKeys,headers:(a,b2,prop)=>mergeDeepProperties(headersToObject(a),headersToObject(b2),prop,true)};utils$2.forEach(Object.keys(Object.assign({},config1,config2)),function computeConfigValue(prop){const merge2=mergeMap[prop]||mergeDeepProperties;const configValue=merge2(config1[prop],config2[prop],prop);utils$2.isUndefined(configValue)&&merge2!==mergeDirectKeys||(config[prop]=configValue)});return config}const resolveConfig=config=>{const newConfig=mergeConfig$1({},config);let{data:data,withXSRFToken:withXSRFToken,xsrfHeaderName:xsrfHeaderName,xsrfCookieName:xsrfCookieName,headers:headers,auth:auth}=newConfig;newConfig.headers=headers=AxiosHeaders$1.from(headers);newConfig.url=buildURL(buildFullPath(newConfig.baseURL,newConfig.url,newConfig.allowAbsoluteUrls),config.params,config.paramsSerializer);if(auth){headers.set("Authorization","Basic "+btoa((auth.username||"")+":"+(auth.password?unescape(encodeURIComponent(auth.password)):"")))}let contentType;if(utils$2.isFormData(data)){if(platform.hasStandardBrowserEnv||platform.hasStandardBrowserWebWorkerEnv){headers.setContentType(void 0)}else if((contentType=headers.getContentType())!==false){const[type,...tokens2]=contentType?contentType.split(";").map(token=>token.trim()).filter(Boolean):[];headers.setContentType([type||"multipart/form-data",...tokens2].join("; "))}}if(platform.hasStandardBrowserEnv){withXSRFToken&&utils$2.isFunction(withXSRFToken)&&(withXSRFToken=withXSRFToken(newConfig));if(withXSRFToken||withXSRFToken!==false&&isURLSameOrigin(newConfig.url)){const xsrfValue=xsrfHeaderName&&xsrfCookieName&&cookies.read(xsrfCookieName);if(xsrfValue){headers.set(xsrfHeaderName,xsrfValue)}}}return newConfig};const isXHRAdapterSupported=typeof XMLHttpRequest!=="undefined";const xhrAdapter=isXHRAdapterSupported&&function(config){return new Promise(function dispatchXhrRequest(resolve,reject){const _config=resolveConfig(config);let requestData=_config.data;const requestHeaders=AxiosHeaders$1.from(_config.headers).normalize();let{responseType:responseType,onUploadProgress:onUploadProgress,onDownloadProgress:onDownloadProgress}=_config;let onCanceled;let uploadThrottled,downloadThrottled;let flushUpload,flushDownload;function done(){flushUpload&&flushUpload();flushDownload&&flushDownload();_config.cancelToken&&_config.cancelToken.unsubscribe(onCanceled);_config.signal&&_config.signal.removeEventListener("abort",onCanceled)}let request=new XMLHttpRequest;request.open(_config.method.toUpperCase(),_config.url,true);request.timeout=_config.timeout;function onloadend(){if(!request){return}const responseHeaders=AxiosHeaders$1.from("getAllResponseHeaders"in request&&request.getAllResponseHeaders());const responseData=!responseType||responseType==="text"||responseType==="json"?request.responseText:request.response;const response={data:responseData,status:request.status,statusText:request.statusText,headers:responseHeaders,config:config,request:request};settle(function _resolve(value){resolve(value);done()},function _reject(err){reject(err);done()},response);request=null}if("onloadend"in request){request.onloadend=onloadend}else{request.onreadystatechange=function handleLoad(){if(!request||request.readyState!==4){return}if(request.status===0&&!(request.responseURL&&request.responseURL.indexOf("file:")===0)){return}setTimeout(onloadend)}}request.onabort=function handleAbort(){if(!request){return}reject(new AxiosError$1("Request aborted",AxiosError$1.ECONNABORTED,config,request));request=null};request.onerror=function handleError(){reject(new AxiosError$1("Network Error",AxiosError$1.ERR_NETWORK,config,request));request=null};request.ontimeout=function handleTimeout(){let timeoutErrorMessage=_config.timeout?"timeout of "+_config.timeout+"ms exceeded":"timeout exceeded";const transitional2=_config.transitional||transitionalDefaults;if(_config.timeoutErrorMessage){timeoutErrorMessage=_config.timeoutErrorMessage}reject(new AxiosError$1(timeoutErrorMessage,transitional2.clarifyTimeoutError?AxiosError$1.ETIMEDOUT:AxiosError$1.ECONNABORTED,config,request));request=null};requestData===void 0&&requestHeaders.setContentType(null);if("setRequestHeader"in request){utils$2.forEach(requestHeaders.toJSON(),function setRequestHeader(val,key2){request.setRequestHeader(key2,val)})}if(!utils$2.isUndefined(_config.withCredentials)){request.withCredentials=!!_config.withCredentials}if(responseType&&responseType!=="json"){request.responseType=_config.responseType}if(onDownloadProgress){[downloadThrottled,flushDownload]=progressEventReducer(onDownloadProgress,true);request.addEventListener("progress",downloadThrottled)}if(onUploadProgress&&request.upload){[uploadThrottled,flushUpload]=progressEventReducer(onUploadProgress);request.upload.addEventListener("progress",uploadThrottled);request.upload.addEventListener("loadend",flushUpload)}if(_config.cancelToken||_config.signal){onCanceled=cancel=>{if(!request){return}reject(!cancel||cancel.type?new CanceledError$1(null,config,request):cancel);request.abort();request=null};_config.cancelToken&&_config.cancelToken.subscribe(onCanceled);if(_config.signal){_config.signal.aborted?onCanceled():_config.signal.addEventListener("abort",onCanceled)}}const protocol=parseProtocol(_config.url);if(protocol&&platform.protocols.indexOf(protocol)===-1){reject(new AxiosError$1("Unsupported protocol "+protocol+":",AxiosError$1.ERR_BAD_REQUEST,config));return}request.send(requestData||null)})};const composeSignals=(signals,timeout)=>{const{length:length}=signals=signals?signals.filter(Boolean):[];if(timeout||length){let controller=new AbortController;let aborted;const onabort=function(reason){if(!aborted){aborted=true;unsubscribe();const err=reason instanceof Error?reason:this.reason;controller.abort(err instanceof AxiosError$1?err:new CanceledError$1(err instanceof Error?err.message:err))}};let timer=timeout&&setTimeout(()=>{timer=null;onabort(new AxiosError$1(`timeout ${timeout} of ms exceeded`,AxiosError$1.ETIMEDOUT))},timeout);const unsubscribe=()=>{if(signals){timer&&clearTimeout(timer);timer=null;signals.forEach(signal2=>{signal2.unsubscribe?signal2.unsubscribe(onabort):signal2.removeEventListener("abort",onabort)});signals=null}};signals.forEach(signal2=>signal2.addEventListener("abort",onabort));const{signal:signal}=controller;signal.unsubscribe=()=>utils$2.asap(unsubscribe);return signal}};const streamChunk=function*(chunk,chunkSize){let len=chunk.byteLength;if(len<chunkSize){yield chunk;return}let pos=0;let end;while(pos<len){end=pos+chunkSize;yield chunk.slice(pos,end);pos=end}};const readBytes=async function*(iterable,chunkSize){for await(const chunk of readStream(iterable)){yield*streamChunk(chunk,chunkSize)}};const readStream=async function*(stream){if(stream[Symbol.asyncIterator]){yield*stream;return}const reader=stream.getReader();try{for(;;){const{done:done,value:value}=await reader.read();if(done){break}yield value}}finally{await reader.cancel()}};const trackStream=(stream,chunkSize,onProgress,onFinish)=>{const iterator2=readBytes(stream,chunkSize);let bytes2=0;let done;let _onFinish=e=>{if(!done){done=true;onFinish&&onFinish(e)}};return new ReadableStream({async pull(controller){try{const{done:done2,value:value}=await iterator2.next();if(done2){_onFinish();controller.close();return}let len=value.byteLength;if(onProgress){let loadedBytes=bytes2+=len;onProgress(loadedBytes)}controller.enqueue(new Uint8Array(value))}catch(err){_onFinish(err);throw err}},cancel(reason){_onFinish(reason);return iterator2.return()}},{highWaterMark:2})};const isFetchSupported=typeof fetch==="function"&&typeof Request==="function"&&typeof Response==="function";const isReadableStreamSupported=isFetchSupported&&typeof ReadableStream==="function";const encodeText=isFetchSupported&&(typeof TextEncoder==="function"?(encoder=>str=>encoder.encode(str))(new TextEncoder):async str=>new Uint8Array(await new Response(str).arrayBuffer()));const test=(fn,...args)=>{try{return!!fn(...args)}catch(e){return false}};const supportsRequestStream=isReadableStreamSupported&&test(()=>{let duplexAccessed=false;const hasContentType=new Request(platform.origin,{body:new ReadableStream,method:"POST",get duplex(){duplexAccessed=true;return"half"}}).headers.has("Content-Type");return duplexAccessed&&!hasContentType});const DEFAULT_CHUNK_SIZE=64*1024;const supportsResponseStream=isReadableStreamSupported&&test(()=>utils$2.isReadableStream(new Response("").body));const resolvers={stream:supportsResponseStream&&(res=>res.body)};isFetchSupported&&(res=>{["text","arrayBuffer","blob","formData","stream"].forEach(type=>{!resolvers[type]&&(resolvers[type]=utils$2.isFunction(res[type])?res2=>res2[type]():(_,config)=>{throw new AxiosError$1(`Response type '${type}' is not supported`,AxiosError$1.ERR_NOT_SUPPORT,config)})})})(new Response);const getBodyLength=async body=>{if(body==null){return 0}if(utils$2.isBlob(body)){return body.size}if(utils$2.isSpecCompliantForm(body)){const _request2=new Request(platform.origin,{method:"POST",body:body});return(await _request2.arrayBuffer()).byteLength}if(utils$2.isArrayBufferView(body)||utils$2.isArrayBuffer(body)){return body.byteLength}if(utils$2.isURLSearchParams(body)){body=body+""}if(utils$2.isString(body)){return(await encodeText(body)).byteLength}};const resolveBodyLength=async(headers,body)=>{const length=utils$2.toFiniteNumber(headers.getContentLength());return length==null?getBodyLength(body):length};const fetchAdapter=isFetchSupported&&(async config=>{let{url:url,method:method,data:data,signal:signal,cancelToken:cancelToken,timeout:timeout,onDownloadProgress:onDownloadProgress,onUploadProgress:onUploadProgress,responseType:responseType,headers:headers,withCredentials:withCredentials="same-origin",fetchOptions:fetchOptions}=resolveConfig(config);responseType=responseType?(responseType+"").toLowerCase():"text";let composedSignal=composeSignals([signal,cancelToken&&cancelToken.toAbortSignal()],timeout);let request;const unsubscribe=composedSignal&&composedSignal.unsubscribe&&(()=>{composedSignal.unsubscribe()});let requestContentLength;try{if(onUploadProgress&&supportsRequestStream&&method!=="get"&&method!=="head"&&(requestContentLength=await resolveBodyLength(headers,data))!==0){let _request2=new Request(url,{method:"POST",body:data,duplex:"half"});let contentTypeHeader;if(utils$2.isFormData(data)&&(contentTypeHeader=_request2.headers.get("content-type"))){headers.setContentType(contentTypeHeader)}if(_request2.body){const[onProgress,flush]=progressEventDecorator(requestContentLength,progressEventReducer(asyncDecorator(onUploadProgress)));data=trackStream(_request2.body,DEFAULT_CHUNK_SIZE,onProgress,flush)}}if(!utils$2.isString(withCredentials)){withCredentials=withCredentials?"include":"omit"}const isCredentialsSupported="credentials"in Request.prototype;request=new Request(url,{...fetchOptions,signal:composedSignal,method:method.toUpperCase(),headers:headers.normalize().toJSON(),body:data,duplex:"half",credentials:isCredentialsSupported?withCredentials:void 0});let response=await fetch(request,fetchOptions);const isStreamResponse=supportsResponseStream&&(responseType==="stream"||responseType==="response");if(supportsResponseStream&&(onDownloadProgress||isStreamResponse&&unsubscribe)){const options={};["status","statusText","headers"].forEach(prop=>{options[prop]=response[prop]});const responseContentLength=utils$2.toFiniteNumber(response.headers.get("content-length"));const[onProgress,flush]=onDownloadProgress&&progressEventDecorator(responseContentLength,progressEventReducer(asyncDecorator(onDownloadProgress),true))||[];response=new Response(trackStream(response.body,DEFAULT_CHUNK_SIZE,onProgress,()=>{flush&&flush();unsubscribe&&unsubscribe()}),options)}responseType=responseType||"text";let responseData=await resolvers[utils$2.findKey(resolvers,responseType)||"text"](response,config);!isStreamResponse&&unsubscribe&&unsubscribe();return await new Promise((resolve,reject)=>{settle(resolve,reject,{data:responseData,headers:AxiosHeaders$1.from(response.headers),status:response.status,statusText:response.statusText,config:config,request:request})})}catch(err){unsubscribe&&unsubscribe();if(err&&err.name==="TypeError"&&/Load failed|fetch/i.test(err.message)){throw Object.assign(new AxiosError$1("Network Error",AxiosError$1.ERR_NETWORK,config,request),{cause:err.cause||err})}throw AxiosError$1.from(err,err&&err.code,config,request)}});const knownAdapters={http:httpAdapter,xhr:xhrAdapter,fetch:fetchAdapter};utils$2.forEach(knownAdapters,(fn,value)=>{if(fn){try{Object.defineProperty(fn,"name",{value:value})}catch(e){}Object.defineProperty(fn,"adapterName",{value:value})}});const renderReason=reason=>`- ${reason}`;const isResolvedHandle=adapter=>utils$2.isFunction(adapter)||adapter===null||adapter===false;const adapters={getAdapter:adapters2=>{adapters2=utils$2.isArray(adapters2)?adapters2:[adapters2];const{length:length}=adapters2;let nameOrAdapter;let adapter;const rejectedReasons={};for(let i=0;i<length;i++){nameOrAdapter=adapters2[i];let id2;adapter=nameOrAdapter;if(!isResolvedHandle(nameOrAdapter)){adapter=knownAdapters[(id2=String(nameOrAdapter)).toLowerCase()];if(adapter===void 0){throw new AxiosError$1(`Unknown adapter '${id2}'`)}}if(adapter){break}rejectedReasons[id2||"#"+i]=adapter}if(!adapter){const reasons=Object.entries(rejectedReasons).map(([id2,state])=>`adapter ${id2} `+(state===false?"is not supported by the environment":"is not available in the build"));let s=length?reasons.length>1?"since :\n"+reasons.map(renderReason).join("\n"):" "+renderReason(reasons[0]):"as no adapter specified";throw new AxiosError$1(`There is no suitable adapter to dispatch the request `+s,"ERR_NOT_SUPPORT")}return adapter},adapters:knownAdapters};function throwIfCancellationRequested(config){if(config.cancelToken){config.cancelToken.throwIfRequested()}if(config.signal&&config.signal.aborted){throw new CanceledError$1(null,config)}}function dispatchRequest(config){throwIfCancellationRequested(config);config.headers=AxiosHeaders$1.from(config.headers);config.data=transformData.call(config,config.transformRequest);if(["post","put","patch"].indexOf(config.method)!==-1){config.headers.setContentType("application/x-www-form-urlencoded",false)}const adapter=adapters.getAdapter(config.adapter||defaults.adapter);return adapter(config).then(function onAdapterResolution(response){throwIfCancellationRequested(config);response.data=transformData.call(config,config.transformResponse,response);response.headers=AxiosHeaders$1.from(response.headers);return response},function onAdapterRejection(reason){if(!isCancel$1(reason)){throwIfCancellationRequested(config);if(reason&&reason.response){reason.response.data=transformData.call(config,config.transformResponse,reason.response);reason.response.headers=AxiosHeaders$1.from(reason.response.headers)}}return Promise.reject(reason)})}const VERSION$2="1.10.0";const validators$1={};["object","boolean","number","function","string","symbol"].forEach((type,i)=>{validators$1[type]=function validator2(thing){return typeof thing===type||"a"+(i<1?"n ":" ")+type}});const deprecatedWarnings={};validators$1.transitional=function transitional(validator2,version2,message){function formatMessage(opt,desc){return"[Axios v"+VERSION$2+"] Transitional option '"+opt+"'"+desc+(message?". "+message:"")}return(value,opt,opts)=>{if(validator2===false){throw new AxiosError$1(formatMessage(opt," has been removed"+(version2?" in "+version2:"")),AxiosError$1.ERR_DEPRECATED)}if(version2&&!deprecatedWarnings[opt]){deprecatedWarnings[opt]=true;console.warn(formatMessage(opt," has been deprecated since v"+version2+" and will be removed in the near future"))}return validator2?validator2(value,opt,opts):true}};validators$1.spelling=function spelling(correctSpelling){return(value,opt)=>{console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);return true}};function assertOptions(options,schema,allowUnknown){if(typeof options!=="object"){throw new AxiosError$1("options must be an object",AxiosError$1.ERR_BAD_OPTION_VALUE)}const keys2=Object.keys(options);let i=keys2.length;while(i-- >0){const opt=keys2[i];const validator2=schema[opt];if(validator2){const value=options[opt];const result=value===void 0||validator2(value,opt,options);if(result!==true){throw new AxiosError$1("option "+opt+" must be "+result,AxiosError$1.ERR_BAD_OPTION_VALUE)}continue}if(allowUnknown!==true){throw new AxiosError$1("Unknown option "+opt,AxiosError$1.ERR_BAD_OPTION)}}}const validator={assertOptions:assertOptions,validators:validators$1};const validators=validator.validators;let Axios$1=class Axios{constructor(instanceConfig){this.defaults=instanceConfig||{};this.interceptors={request:new InterceptorManager,response:new InterceptorManager}}async request(configOrUrl,config){try{return await this._request(configOrUrl,config)}catch(err){if(err instanceof Error){let dummy={};Error.captureStackTrace?Error.captureStackTrace(dummy):dummy=new Error;const stack=dummy.stack?dummy.stack.replace(/^.+\n/,""):"";try{if(!err.stack){err.stack=stack}else if(stack&&!String(err.stack).endsWith(stack.replace(/^.+\n.+\n/,""))){err.stack+="\n"+stack}}catch(e){}}throw err}}_request(configOrUrl,config){if(typeof configOrUrl==="string"){config=config||{};config.url=configOrUrl}else{config=configOrUrl||{}}config=mergeConfig$1(this.defaults,config);const{transitional:transitional2,paramsSerializer:paramsSerializer,headers:headers}=config;if(transitional2!==void 0){validator.assertOptions(transitional2,{silentJSONParsing:validators.transitional(validators.boolean),forcedJSONParsing:validators.transitional(validators.boolean),clarifyTimeoutError:validators.transitional(validators.boolean)},false)}if(paramsSerializer!=null){if(utils$2.isFunction(paramsSerializer)){config.paramsSerializer={serialize:paramsSerializer}}else{validator.assertOptions(paramsSerializer,{encode:validators.function,serialize:validators.function},true)}}if(config.allowAbsoluteUrls!==void 0);else if(this.defaults.allowAbsoluteUrls!==void 0){config.allowAbsoluteUrls=this.defaults.allowAbsoluteUrls}else{config.allowAbsoluteUrls=true}validator.assertOptions(config,{baseUrl:validators.spelling("baseURL"),withXsrfToken:validators.spelling("withXSRFToken")},true);config.method=(config.method||this.defaults.method||"get").toLowerCase();let contextHeaders=headers&&utils$2.merge(headers.common,headers[config.method]);headers&&utils$2.forEach(["delete","get","head","post","put","patch","common"],method=>{delete headers[method]});config.headers=AxiosHeaders$1.concat(contextHeaders,headers);const requestInterceptorChain=[];let synchronousRequestInterceptors=true;this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor){if(typeof interceptor.runWhen==="function"&&interceptor.runWhen(config)===false){return}synchronousRequestInterceptors=synchronousRequestInterceptors&&interceptor.synchronous;requestInterceptorChain.unshift(interceptor.fulfilled,interceptor.rejected)});const responseInterceptorChain=[];this.interceptors.response.forEach(function pushResponseInterceptors(interceptor){responseInterceptorChain.push(interceptor.fulfilled,interceptor.rejected)});let promise;let i=0;let len;if(!synchronousRequestInterceptors){const chain=[dispatchRequest.bind(this),void 0];chain.unshift.apply(chain,requestInterceptorChain);chain.push.apply(chain,responseInterceptorChain);len=chain.length;promise=Promise.resolve(config);while(i<len){promise=promise.then(chain[i++],chain[i++])}return promise}len=requestInterceptorChain.length;let newConfig=config;i=0;while(i<len){const onFulfilled=requestInterceptorChain[i++];const onRejected=requestInterceptorChain[i++];try{newConfig=onFulfilled(newConfig)}catch(error){onRejected.call(this,error);break}}try{promise=dispatchRequest.call(this,newConfig)}catch(error){return Promise.reject(error)}i=0;len=responseInterceptorChain.length;while(i<len){promise=promise.then(responseInterceptorChain[i++],responseInterceptorChain[i++])}return promise}getUri(config){config=mergeConfig$1(this.defaults,config);const fullPath=buildFullPath(config.baseURL,config.url,config.allowAbsoluteUrls);return buildURL(fullPath,config.params,config.paramsSerializer)}};utils$2.forEach(["delete","get","head","options"],function forEachMethodNoData(method){Axios$1.prototype[method]=function(url,config){return this.request(mergeConfig$1(config||{},{method:method,url:url,data:(config||{}).data}))}});utils$2.forEach(["post","put","patch"],function forEachMethodWithData(method){function generateHTTPMethod(isForm){return function httpMethod(url,data,config){return this.request(mergeConfig$1(config||{},{method:method,headers:isForm?{"Content-Type":"multipart/form-data"}:{},url:url,data:data}))}}Axios$1.prototype[method]=generateHTTPMethod();Axios$1.prototype[method+"Form"]=generateHTTPMethod(true)});let CancelToken$1=class CancelToken{constructor(executor){if(typeof executor!=="function"){throw new TypeError("executor must be a function.")}let resolvePromise;this.promise=new Promise(function promiseExecutor(resolve){resolvePromise=resolve});const token=this;this.promise.then(cancel=>{if(!token._listeners)return;let i=token._listeners.length;while(i-- >0){token._listeners[i](cancel)}token._listeners=null});this.promise.then=onfulfilled=>{let _resolve;const promise=new Promise(resolve=>{token.subscribe(resolve);_resolve=resolve}).then(onfulfilled);promise.cancel=function reject(){token.unsubscribe(_resolve)};return promise};executor(function cancel(message,config,request){if(token.reason){return}token.reason=new CanceledError$1(message,config,request);resolvePromise(token.reason)})}throwIfRequested(){if(this.reason){throw this.reason}}subscribe(listener){if(this.reason){listener(this.reason);return}if(this._listeners){this._listeners.push(listener)}else{this._listeners=[listener]}}unsubscribe(listener){if(!this._listeners){return}const index=this._listeners.indexOf(listener);if(index!==-1){this._listeners.splice(index,1)}}toAbortSignal(){const controller=new AbortController;const abort=err=>{controller.abort(err)};this.subscribe(abort);controller.signal.unsubscribe=()=>this.unsubscribe(abort);return controller.signal}static source(){let cancel;const token=new CancelToken(function executor(c){cancel=c});return{token:token,cancel:cancel}}};function spread$1(callback){return function wrap(arr){return callback.apply(null,arr)}}function isAxiosError$1(payload){return utils$2.isObject(payload)&&payload.isAxiosError===true}const HttpStatusCode$1={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(HttpStatusCode$1).forEach(([key2,value])=>{HttpStatusCode$1[value]=key2});function createInstance(defaultConfig){const context=new Axios$1(defaultConfig);const instance=bind(Axios$1.prototype.request,context);utils$2.extend(instance,Axios$1.prototype,context,{allOwnKeys:true});utils$2.extend(instance,context,null,{allOwnKeys:true});instance.create=function create(instanceConfig){return createInstance(mergeConfig$1(defaultConfig,instanceConfig))};return instance}const axios=createInstance(defaults);axios.Axios=Axios$1;axios.CanceledError=CanceledError$1;axios.CancelToken=CancelToken$1;axios.isCancel=isCancel$1;axios.VERSION=VERSION$2;axios.toFormData=toFormData$1;axios.AxiosError=AxiosError$1;axios.Cancel=axios.CanceledError;axios.all=function all(promises){return Promise.all(promises)};axios.spread=spread$1;axios.isAxiosError=isAxiosError$1;axios.mergeConfig=mergeConfig$1;axios.AxiosHeaders=AxiosHeaders$1;axios.formToJSON=thing=>formDataToJSON(utils$2.isHTMLForm(thing)?new FormData(thing):thing);axios.getAdapter=adapters.getAdapter;axios.HttpStatusCode=HttpStatusCode$1;axios.default=axios;const{Axios:Axios2,AxiosError:AxiosError,CanceledError:CanceledError,isCancel:isCancel,CancelToken:CancelToken2,VERSION:VERSION$1,all:all2,Cancel:Cancel,isAxiosError:isAxiosError,spread:spread,toFormData:toFormData,AxiosHeaders:AxiosHeaders2,HttpStatusCode:HttpStatusCode,formToJSON:formToJSON,getAdapter:getAdapter,mergeConfig:mergeConfig}=axios;const version$h="abstract-provider/5.8.0";var __awaiter$6=function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$h=new Logger$3(version$h);class ForkEvent extends Description{static isForkEvent(value){return!!(value&&value._isForkEvent)}}class Provider{constructor(){logger$h.checkAbstract(new.target,Provider);defineReadOnly$1(this,"_isProvider",true)}getFeeData(){return __awaiter$6(this,void 0,void 0,function*(){const{block:block,gasPrice:gasPrice}=yield resolveProperties$1({block:this.getBlock("latest"),gasPrice:this.getGasPrice().catch(error=>null)});let lastBaseFeePerGas=null,maxFeePerGas=null,maxPriorityFeePerGas=null;if(block&&block.baseFeePerGas){lastBaseFeePerGas=block.baseFeePerGas;maxPriorityFeePerGas=BigNumber$1.from("1500000000");maxFeePerGas=block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas)}return{lastBaseFeePerGas:lastBaseFeePerGas,maxFeePerGas:maxFeePerGas,maxPriorityFeePerGas:maxPriorityFeePerGas,gasPrice:gasPrice}})}addListener(eventName,listener){return this.on(eventName,listener)}removeListener(eventName,listener){return this.off(eventName,listener)}static isProvider(value){return!!(value&&value._isProvider)}}const version$g="abstract-signer/5.8.0";var __awaiter$5=function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$g=new Logger$3(version$g);const allowedTransactionKeys$1=["accessList","ccipReadEnabled","chainId","customData","data","from","gasLimit","gasPrice","maxFeePerGas","maxPriorityFeePerGas","nonce","to","type","value"];const forwardErrors=[Logger$3.errors.INSUFFICIENT_FUNDS,Logger$3.errors.NONCE_EXPIRED,Logger$3.errors.REPLACEMENT_UNDERPRICED];class Signer2{constructor(){logger$g.checkAbstract(new.target,Signer2);defineReadOnly$1(this,"_isSigner",true)}getBalance(blockTag){return __awaiter$5(this,void 0,void 0,function*(){this._checkProvider("getBalance");return yield this.provider.getBalance(this.getAddress(),blockTag)})}getTransactionCount(blockTag){return __awaiter$5(this,void 0,void 0,function*(){this._checkProvider("getTransactionCount");return yield this.provider.getTransactionCount(this.getAddress(),blockTag)})}estimateGas(transaction){return __awaiter$5(this,void 0,void 0,function*(){this._checkProvider("estimateGas");const tx=yield resolveProperties$1(this.checkTransaction(transaction));return yield this.provider.estimateGas(tx)})}call(transaction,blockTag){return __awaiter$5(this,void 0,void 0,function*(){this._checkProvider("call");const tx=yield resolveProperties$1(this.checkTransaction(transaction));return yield this.provider.call(tx,blockTag)})}sendTransaction(transaction){return __awaiter$5(this,void 0,void 0,function*(){this._checkProvider("sendTransaction");const tx=yield this.populateTransaction(transaction);const signedTx=yield this.signTransaction(tx);return yield this.provider.sendTransaction(signedTx)})}getChainId(){return __awaiter$5(this,void 0,void 0,function*(){this._checkProvider("getChainId");const network=yield this.provider.getNetwork();return network.chainId})}getGasPrice(){return __awaiter$5(this,void 0,void 0,function*(){this._checkProvider("getGasPrice");return yield this.provider.getGasPrice()})}getFeeData(){return __awaiter$5(this,void 0,void 0,function*(){this._checkProvider("getFeeData");return yield this.provider.getFeeData()})}resolveName(name){return __awaiter$5(this,void 0,void 0,function*(){this._checkProvider("resolveName");return yield this.provider.resolveName(name)})}checkTransaction(transaction){for(const key2 in transaction){if(allowedTransactionKeys$1.indexOf(key2)===-1){logger$g.throwArgumentError("invalid transaction key: "+key2,"transaction",transaction)}}const tx=shallowCopy(transaction);if(tx.from==null){tx.from=this.getAddress()}else{tx.from=Promise.all([Promise.resolve(tx.from),this.getAddress()]).then(result=>{if(result[0].toLowerCase()!==result[1].toLowerCase()){logger$g.throwArgumentError("from address mismatch","transaction",transaction)}return result[0]})}return tx}populateTransaction(transaction){return __awaiter$5(this,void 0,void 0,function*(){const tx=yield resolveProperties$1(this.checkTransaction(transaction));if(tx.to!=null){tx.to=Promise.resolve(tx.to).then(to=>__awaiter$5(this,void 0,void 0,function*(){if(to==null){return null}const address=yield this.resolveName(to);if(address==null){logger$g.throwArgumentError("provided ENS name resolves to null","tx.to",to)}return address}));tx.to.catch(error=>{})}const hasEip1559=tx.maxFeePerGas!=null||tx.maxPriorityFeePerGas!=null;if(tx.gasPrice!=null&&(tx.type===2||hasEip1559)){logger$g.throwArgumentError("eip-1559 transaction do not support gasPrice","transaction",transaction)}else if((tx.type===0||tx.type===1)&&hasEip1559){logger$g.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas","transaction",transaction)}if((tx.type===2||tx.type==null)&&(tx.maxFeePerGas!=null&&tx.maxPriorityFeePerGas!=null)){tx.type=2}else if(tx.type===0||tx.type===1){if(tx.gasPrice==null){tx.gasPrice=this.getGasPrice()}}else{const feeData=yield this.getFeeData();if(tx.type==null){if(feeData.maxFeePerGas!=null&&feeData.maxPriorityFeePerGas!=null){tx.type=2;if(tx.gasPrice!=null){const gasPrice=tx.gasPrice;delete tx.gasPrice;tx.maxFeePerGas=gasPrice;tx.maxPriorityFeePerGas=gasPrice}else{if(tx.maxFeePerGas==null){tx.maxFeePerGas=feeData.maxFeePerGas}if(tx.maxPriorityFeePerGas==null){tx.maxPriorityFeePerGas=feeData.maxPriorityFeePerGas}}}else if(feeData.gasPrice!=null){if(hasEip1559){logger$g.throwError("network does not support EIP-1559",Logger$3.errors.UNSUPPORTED_OPERATION,{operation:"populateTransaction"})}if(tx.gasPrice==null){tx.gasPrice=feeData.gasPrice}tx.type=0}else{logger$g.throwError("failed to get consistent fee data",Logger$3.errors.UNSUPPORTED_OPERATION,{operation:"signer.getFeeData"})}}else if(tx.type===2){if(tx.maxFeePerGas==null){tx.maxFeePerGas=feeData.maxFeePerGas}if(tx.maxPriorityFeePerGas==null){tx.maxPriorityFeePerGas=feeData.maxPriorityFeePerGas}}}if(tx.nonce==null){tx.nonce=this.getTransactionCount("pending")}if(tx.gasLimit==null){tx.gasLimit=this.estimateGas(tx).catch(error=>{if(forwardErrors.indexOf(error.code)>=0){throw error}return logger$g.throwError("cannot estimate gas; transaction may fail or may require manual gas limit",Logger$3.errors.UNPREDICTABLE_GAS_LIMIT,{error:error,tx:tx})})}if(tx.chainId==null){tx.chainId=this.getChainId()}else{tx.chainId=Promise.all([Promise.resolve(tx.chainId),this.getChainId()]).then(results=>{if(results[1]!==0&&results[0]!==results[1]){logger$g.throwArgumentError("chainId address mismatch","transaction",transaction)}return results[0]})}return yield resolveProperties$1(tx)})}_checkProvider(operation){if(!this.provider){logger$g.throwError("missing provider",Logger$3.errors.UNSUPPORTED_OPERATION,{operation:operation||"_checkProvider"})}}static isSigner(value){return!!(value&&value._isSigner)}}class BaseX{constructor(alphabet){defineReadOnly$1(this,"alphabet",alphabet);defineReadOnly$1(this,"base",alphabet.length);defineReadOnly$1(this,"_alphabetMap",{});defineReadOnly$1(this,"_leader",alphabet.charAt(0));for(let i=0;i<alphabet.length;i++){this._alphabetMap[alphabet.charAt(i)]=i}}encode(value){let source=arrayify$1(value);if(source.length===0){return""}let digits=[0];for(let i=0;i<source.length;++i){let carry=source[i];for(let j=0;j<digits.length;++j){carry+=digits[j]<<8;digits[j]=carry%this.base;carry=carry/this.base|0}while(carry>0){digits.push(carry%this.base);carry=carry/this.base|0}}let string="";for(let k=0;source[k]===0&&k<source.length-1;++k){string+=this._leader}for(let q=digits.length-1;q>=0;--q){string+=this.alphabet[digits[q]]}return string}decode(value){if(typeof value!=="string"){throw new TypeError("Expected String")}let bytes2=[];if(value.length===0){return new Uint8Array(bytes2)}bytes2.push(0);for(let i=0;i<value.length;i++){let byte=this._alphabetMap[value[i]];if(byte===void 0){throw new Error("Non-base"+this.base+" character")}let carry=byte;for(let j=0;j<bytes2.length;++j){carry+=bytes2[j]*this.base;bytes2[j]=carry&255;carry>>=8}while(carry>0){bytes2.push(carry&255);carry>>=8}}for(let k=0;value[k]===this._leader&&k<value.length-1;++k){bytes2.push(0)}return arrayify$1(new Uint8Array(bytes2.reverse()))}}new BaseX("abcdefghijklmnopqrstuvwxyz234567");const Base58=new BaseX("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");var hash$1={};var utils={};var minimalisticAssert$2;var hasRequiredMinimalisticAssert;function requireMinimalisticAssert(){if(hasRequiredMinimalisticAssert)return minimalisticAssert$2;hasRequiredMinimalisticAssert=1;minimalisticAssert$2=assert2;function assert2(val,msg){if(!val)throw new Error(msg||"Assertion failed")}assert2.equal=function assertEqual3(l,r,msg){if(l!=r)throw new Error(msg||"Assertion failed: "+l+" != "+r)};return minimalisticAssert$2}var inherits_browser$2={exports:{}};var hasRequiredInherits_browser;function requireInherits_browser(){if(hasRequiredInherits_browser)return inherits_browser$2.exports;hasRequiredInherits_browser=1;if(typeof Object.create==="function"){inherits_browser$2.exports=function inherits2(ctor,superCtor){if(superCtor){ctor.super_=superCtor;ctor.prototype=Object.create(superCtor.prototype,{constructor:{value:ctor,enumerable:false,writable:true,configurable:true}})}}}else{inherits_browser$2.exports=function inherits2(ctor,superCtor){if(superCtor){ctor.super_=superCtor;var TempCtor=function(){};TempCtor.prototype=superCtor.prototype;ctor.prototype=new TempCtor;ctor.prototype.constructor=ctor}}}return inherits_browser$2.exports}var hasRequiredUtils;function requireUtils(){if(hasRequiredUtils)return utils;hasRequiredUtils=1;var assert2=requireMinimalisticAssert();var inherits2=requireInherits_browser();utils.inherits=inherits2;function isSurrogatePair(msg,i){if((msg.charCodeAt(i)&64512)!==55296){return false}if(i<0||i+1>=msg.length){return false}return(msg.charCodeAt(i+1)&64512)===56320}function toArray2(msg,enc){if(Array.isArray(msg))return msg.slice();if(!msg)return[];var res=[];if(typeof msg==="string"){if(!enc){var p=0;for(var i=0;i<msg.length;i++){var c=msg.charCodeAt(i);if(c<128){res[p++]=c}else if(c<2048){res[p++]=c>>6|192;res[p++]=c&63|128}else if(isSurrogatePair(msg,i)){c=65536+((c&1023)<<10)+(msg.charCodeAt(++i)&1023);res[p++]=c>>18|240;res[p++]=c>>12&63|128;res[p++]=c>>6&63|128;res[p++]=c&63|128}else{res[p++]=c>>12|224;res[p++]=c>>6&63|128;res[p++]=c&63|128}}}else if(enc==="hex"){msg=msg.replace(/[^a-z0-9]+/gi,"");if(msg.length%2!==0)msg="0"+msg;for(i=0;i<msg.length;i+=2)res.push(parseInt(msg[i]+msg[i+1],16))}}else{for(i=0;i<msg.length;i++)res[i]=msg[i]|0}return res}utils.toArray=toArray2;function toHex2(msg){var res="";for(var i=0;i<msg.length;i++)res+=zero2(msg[i].toString(16));return res}utils.toHex=toHex2;function htonl(w){var res=w>>>24|w>>>8&65280|w<<8&16711680|(w&255)<<24;return res>>>0}utils.htonl=htonl;function toHex32(msg,endian){var res="";for(var i=0;i<msg.length;i++){var w=msg[i];if(endian==="little")w=htonl(w);res+=zero8(w.toString(16))}return res}utils.toHex32=toHex32;function zero2(word){if(word.length===1)return"0"+word;else return word}utils.zero2=zero2;function zero8(word){if(word.length===7)return"0"+word;else if(word.length===6)return"00"+word;else if(word.length===5)return"000"+word;else if(word.length===4)return"0000"+word;else if(word.length===3)return"00000"+word;else if(word.length===2)return"000000"+word;else if(word.length===1)return"0000000"+word;else return word}utils.zero8=zero8;function join32(msg,start,end,endian){var len=end-start;assert2(len%4===0);var res=new Array(len/4);for(var i=0,k=start;i<res.length;i++,k+=4){var w;if(endian==="big")w=msg[k]<<24|msg[k+1]<<16|msg[k+2]<<8|msg[k+3];else w=msg[k+3]<<24|msg[k+2]<<16|msg[k+1]<<8|msg[k];res[i]=w>>>0}return res}utils.join32=join32;function split32(msg,endian){var res=new Array(msg.length*4);for(var i=0,k=0;i<msg.length;i++,k+=4){var m=msg[i];if(endian==="big"){res[k]=m>>>24;res[k+1]=m>>>16&255;res[k+2]=m>>>8&255;res[k+3]=m&255}else{res[k+3]=m>>>24;res[k+2]=m>>>16&255;res[k+1]=m>>>8&255;res[k]=m&255}}return res}utils.split32=split32;function rotr32(w,b2){return w>>>b2|w<<32-b2}utils.rotr32=rotr32;function rotl32(w,b2){return w<<b2|w>>>32-b2}utils.rotl32=rotl32;function sum32(a,b2){return a+b2>>>0}utils.sum32=sum32;function sum32_3(a,b2,c){return a+b2+c>>>0}utils.sum32_3=sum32_3;function sum32_4(a,b2,c,d){return a+b2+c+d>>>0}utils.sum32_4=sum32_4;function sum32_5(a,b2,c,d,e){return a+b2+c+d+e>>>0}utils.sum32_5=sum32_5;function sum64(buf,pos,ah,al){var bh=buf[pos];var bl=buf[pos+1];var lo=al+bl>>>0;var hi=(lo<al?1:0)+ah+bh;buf[pos]=hi>>>0;buf[pos+1]=lo}utils.sum64=sum64;function sum64_hi(ah,al,bh,bl){var lo=al+bl>>>0;var hi=(lo<al?1:0)+ah+bh;return hi>>>0}utils.sum64_hi=sum64_hi;function sum64_lo(ah,al,bh,bl){var lo=al+bl;return lo>>>0}utils.sum64_lo=sum64_lo;function sum64_4_hi(ah,al,bh,bl,ch,cl,dh,dl){var carry=0;var lo=al;lo=lo+bl>>>0;carry+=lo<al?1:0;lo=lo+cl>>>0;carry+=lo<cl?1:0;lo=lo+dl>>>0;carry+=lo<dl?1:0;var hi=ah+bh+ch+dh+carry;return hi>>>0}utils.sum64_4_hi=sum64_4_hi;function sum64_4_lo(ah,al,bh,bl,ch,cl,dh,dl){var lo=al+bl+cl+dl;return lo>>>0}utils.sum64_4_lo=sum64_4_lo;function sum64_5_hi(ah,al,bh,bl,ch,cl,dh,dl,eh,el){var carry=0;var lo=al;lo=lo+bl>>>0;carry+=lo<al?1:0;lo=lo+cl>>>0;carry+=lo<cl?1:0;lo=lo+dl>>>0;carry+=lo<dl?1:0;lo=lo+el>>>0;carry+=lo<el?1:0;var hi=ah+bh+ch+dh+eh+carry;return hi>>>0}utils.sum64_5_hi=sum64_5_hi;function sum64_5_lo(ah,al,bh,bl,ch,cl,dh,dl,eh,el){var lo=al+bl+cl+dl+el;return lo>>>0}utils.sum64_5_lo=sum64_5_lo;function rotr64_hi(ah,al,num){var r=al<<32-num|ah>>>num;return r>>>0}utils.rotr64_hi=rotr64_hi;function rotr64_lo(ah,al,num){var r=ah<<32-num|al>>>num;return r>>>0}utils.rotr64_lo=rotr64_lo;function shr64_hi(ah,al,num){return ah>>>num}utils.shr64_hi=shr64_hi;function shr64_lo(ah,al,num){var r=ah<<32-num|al>>>num;return r>>>0}utils.shr64_lo=shr64_lo;return utils}var common$1={};var hasRequiredCommon$1;function requireCommon$1(){if(hasRequiredCommon$1)return common$1;hasRequiredCommon$1=1;var utils2=requireUtils();var assert2=requireMinimalisticAssert();function BlockHash(){this.pending=null;this.pendingTotal=0;this.blockSize=this.constructor.blockSize;this.outSize=this.constructor.outSize;this.hmacStrength=this.constructor.hmacStrength;this.padLength=this.constructor.padLength/8;this.endian="big";this._delta8=this.blockSize/8;this._delta32=this.blockSize/32}common$1.BlockHash=BlockHash;BlockHash.prototype.update=function update3(msg,enc){msg=utils2.toArray(msg,enc);if(!this.pending)this.pending=msg;else this.pending=this.pending.concat(msg);this.pendingTotal+=msg.length;if(this.pending.length>=this._delta8){msg=this.pending;var r=msg.length%this._delta8;this.pending=msg.slice(msg.length-r,msg.length);if(this.pending.length===0)this.pending=null;msg=utils2.join32(msg,0,msg.length-r,this.endian);for(var i=0;i<msg.length;i+=this._delta32)this._update(msg,i,i+this._delta32)}return this};BlockHash.prototype.digest=function digest(enc){this.update(this._pad());assert2(this.pending===null);return this._digest(enc)};BlockHash.prototype._pad=function pad(){var len=this.pendingTotal;var bytes2=this._delta8;var k=bytes2-(len+this.padLength)%bytes2;var res=new Array(k+this.padLength);res[0]=128;for(var i=1;i<k;i++)res[i]=0;len<<=3;if(this.endian==="big"){for(var t=8;t<this.padLength;t++)res[i++]=0;res[i++]=0;res[i++]=0;res[i++]=0;res[i++]=0;res[i++]=len>>>24&255;res[i++]=len>>>16&255;res[i++]=len>>>8&255;res[i++]=len&255}else{res[i++]=len&255;res[i++]=len>>>8&255;res[i++]=len>>>16&255;res[i++]=len>>>24&255;res[i++]=0;res[i++]=0;res[i++]=0;res[i++]=0;for(t=8;t<this.padLength;t++)res[i++]=0}return res};return common$1}var sha={};var common={};var hasRequiredCommon;function requireCommon(){if(hasRequiredCommon)return common;hasRequiredCommon=1;var utils2=requireUtils();var rotr32=utils2.rotr32;function ft_1(s,x,y,z){if(s===0)return ch32(x,y,z);if(s===1||s===3)return p32(x,y,z);if(s===2)return maj32(x,y,z)}common.ft_1=ft_1;function ch32(x,y,z){return x&y^~x&z}common.ch32=ch32;function maj32(x,y,z){return x&y^x&z^y&z}common.maj32=maj32;function p32(x,y,z){return x^y^z}common.p32=p32;function s0_256(x){return rotr32(x,2)^rotr32(x,13)^rotr32(x,22)}common.s0_256=s0_256;function s1_256(x){return rotr32(x,6)^rotr32(x,11)^rotr32(x,25)}common.s1_256=s1_256;function g0_256(x){return rotr32(x,7)^rotr32(x,18)^x>>>3}common.g0_256=g0_256;function g1_256(x){return rotr32(x,17)^rotr32(x,19)^x>>>10}common.g1_256=g1_256;return common}var _1;var hasRequired_1;function require_1(){if(hasRequired_1)return _1;hasRequired_1=1;var utils2=requireUtils();var common2=requireCommon$1();var shaCommon=requireCommon();var rotl32=utils2.rotl32;var sum32=utils2.sum32;var sum32_5=utils2.sum32_5;var ft_1=shaCommon.ft_1;var BlockHash=common2.BlockHash;var sha1_K=[1518500249,1859775393,2400959708,3395469782];function SHA1(){if(!(this instanceof SHA1))return new SHA1;BlockHash.call(this);this.h=[1732584193,4023233417,2562383102,271733878,3285377520];this.W=new Array(80)}utils2.inherits(SHA1,BlockHash);_1=SHA1;SHA1.blockSize=512;SHA1.outSize=160;SHA1.hmacStrength=80;SHA1.padLength=64;SHA1.prototype._update=function _update(msg,start){var W=this.W;for(var i=0;i<16;i++)W[i]=msg[start+i];for(;i<W.length;i++)W[i]=rotl32(W[i-3]^W[i-8]^W[i-14]^W[i-16],1);var a=this.h[0];var b2=this.h[1];var c=this.h[2];var d=this.h[3];var e=this.h[4];for(i=0;i<W.length;i++){var s=~~(i/20);var t=sum32_5(rotl32(a,5),ft_1(s,b2,c,d),e,W[i],sha1_K[s]);e=d;d=c;c=rotl32(b2,30);b2=a;a=t}this.h[0]=sum32(this.h[0],a);this.h[1]=sum32(this.h[1],b2);this.h[2]=sum32(this.h[2],c);this.h[3]=sum32(this.h[3],d);this.h[4]=sum32(this.h[4],e)};SHA1.prototype._digest=function digest(enc){if(enc==="hex")return utils2.toHex32(this.h,"big");else return utils2.split32(this.h,"big")};return _1}var _256;var hasRequired_256;function require_256(){if(hasRequired_256)return _256;hasRequired_256=1;var utils2=requireUtils();var common2=requireCommon$1();var shaCommon=requireCommon();var assert2=requireMinimalisticAssert();var sum32=utils2.sum32;var sum32_4=utils2.sum32_4;var sum32_5=utils2.sum32_5;var ch32=shaCommon.ch32;var maj32=shaCommon.maj32;var s0_256=shaCommon.s0_256;var s1_256=shaCommon.s1_256;var g0_256=shaCommon.g0_256;var g1_256=shaCommon.g1_256;var BlockHash=common2.BlockHash;var sha256_K=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function SHA2562(){if(!(this instanceof SHA2562))return new SHA2562;BlockHash.call(this);this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225];this.k=sha256_K;this.W=new Array(64)}utils2.inherits(SHA2562,BlockHash);_256=SHA2562;SHA2562.blockSize=512;SHA2562.outSize=256;SHA2562.hmacStrength=192;SHA2562.padLength=64;SHA2562.prototype._update=function _update(msg,start){var W=this.W;for(var i=0;i<16;i++)W[i]=msg[start+i];for(;i<W.length;i++)W[i]=sum32_4(g1_256(W[i-2]),W[i-7],g0_256(W[i-15]),W[i-16]);var a=this.h[0];var b2=this.h[1];var c=this.h[2];var d=this.h[3];var e=this.h[4];var f2=this.h[5];var g=this.h[6];var h=this.h[7];assert2(this.k.length===W.length);for(i=0;i<W.length;i++){var T12=sum32_5(h,s1_256(e),ch32(e,f2,g),this.k[i],W[i]);var T22=sum32(s0_256(a),maj32(a,b2,c));h=g;g=f2;f2=e;e=sum32(d,T12);d=c;c=b2;b2=a;a=sum32(T12,T22)}this.h[0]=sum32(this.h[0],a);this.h[1]=sum32(this.h[1],b2);this.h[2]=sum32(this.h[2],c);this.h[3]=sum32(this.h[3],d);this.h[4]=sum32(this.h[4],e);this.h[5]=sum32(this.h[5],f2);this.h[6]=sum32(this.h[6],g);this.h[7]=sum32(this.h[7],h)};SHA2562.prototype._digest=function digest(enc){if(enc==="hex")return utils2.toHex32(this.h,"big");else return utils2.split32(this.h,"big")};return _256}var _224;var hasRequired_224;function require_224(){if(hasRequired_224)return _224;hasRequired_224=1;var utils2=requireUtils();var SHA2562=require_256();function SHA224(){if(!(this instanceof SHA224))return new SHA224;SHA2562.call(this);this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]}utils2.inherits(SHA224,SHA2562);_224=SHA224;SHA224.blockSize=512;SHA224.outSize=224;SHA224.hmacStrength=192;SHA224.padLength=64;SHA224.prototype._digest=function digest(enc){if(enc==="hex")return utils2.toHex32(this.h.slice(0,7),"big");else return utils2.split32(this.h.slice(0,7),"big")};return _224}var _512;var hasRequired_512;function require_512(){if(hasRequired_512)return _512;hasRequired_512=1;var utils2=requireUtils();var common2=requireCommon$1();var assert2=requireMinimalisticAssert();var rotr64_hi=utils2.rotr64_hi;var rotr64_lo=utils2.rotr64_lo;var shr64_hi=utils2.shr64_hi;var shr64_lo=utils2.shr64_lo;var sum64=utils2.sum64;var sum64_hi=utils2.sum64_hi;var sum64_lo=utils2.sum64_lo;var sum64_4_hi=utils2.sum64_4_hi;var sum64_4_lo=utils2.sum64_4_lo;var sum64_5_hi=utils2.sum64_5_hi;var sum64_5_lo=utils2.sum64_5_lo;var BlockHash=common2.BlockHash;var sha512_K=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function SHA5122(){if(!(this instanceof SHA5122))return new SHA5122;BlockHash.call(this);this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209];this.k=sha512_K;this.W=new Array(160)}utils2.inherits(SHA5122,BlockHash);_512=SHA5122;SHA5122.blockSize=1024;SHA5122.outSize=512;SHA5122.hmacStrength=192;SHA5122.padLength=128;SHA5122.prototype._prepareBlock=function _prepareBlock(msg,start){var W=this.W;for(var i=0;i<32;i++)W[i]=msg[start+i];for(;i<W.length;i+=2){var c0_hi=g1_512_hi(W[i-4],W[i-3]);var c0_lo=g1_512_lo(W[i-4],W[i-3]);var c1_hi=W[i-14];var c1_lo=W[i-13];var c2_hi=g0_512_hi(W[i-30],W[i-29]);var c2_lo=g0_512_lo(W[i-30],W[i-29]);var c3_hi=W[i-32];var c3_lo=W[i-31];W[i]=sum64_4_hi(c0_hi,c0_lo,c1_hi,c1_lo,c2_hi,c2_lo,c3_hi,c3_lo);W[i+1]=sum64_4_lo(c0_hi,c0_lo,c1_hi,c1_lo,c2_hi,c2_lo,c3_hi,c3_lo)}};SHA5122.prototype._update=function _update(msg,start){this._prepareBlock(msg,start);var W=this.W;var ah=this.h[0];var al=this.h[1];var bh=this.h[2];var bl=this.h[3];var ch=this.h[4];var cl=this.h[5];var dh=this.h[6];var dl=this.h[7];var eh=this.h[8];var el=this.h[9];var fh=this.h[10];var fl=this.h[11];var gh=this.h[12];var gl=this.h[13];var hh=this.h[14];var hl=this.h[15];assert2(this.k.length===W.length);for(var i=0;i<W.length;i+=2){var c0_hi=hh;var c0_lo=hl;var c1_hi=s1_512_hi(eh,el);var c1_lo=s1_512_lo(eh,el);var c2_hi=ch64_hi(eh,el,fh,fl,gh);var c2_lo=ch64_lo(eh,el,fh,fl,gh,gl);var c3_hi=this.k[i];var c3_lo=this.k[i+1];var c4_hi=W[i];var c4_lo=W[i+1];var T1_hi=sum64_5_hi(c0_hi,c0_lo,c1_hi,c1_lo,c2_hi,c2_lo,c3_hi,c3_lo,c4_hi,c4_lo);var T1_lo=sum64_5_lo(c0_hi,c0_lo,c1_hi,c1_lo,c2_hi,c2_lo,c3_hi,c3_lo,c4_hi,c4_lo);c0_hi=s0_512_hi(ah,al);c0_lo=s0_512_lo(ah,al);c1_hi=maj64_hi(ah,al,bh,bl,ch);c1_lo=maj64_lo(ah,al,bh,bl,ch,cl);var T2_hi=sum64_hi(c0_hi,c0_lo,c1_hi,c1_lo);var T2_lo=sum64_lo(c0_hi,c0_lo,c1_hi,c1_lo);hh=gh;hl=gl;gh=fh;gl=fl;fh=eh;fl=el;eh=sum64_hi(dh,dl,T1_hi,T1_lo);el=sum64_lo(dl,dl,T1_hi,T1_lo);dh=ch;dl=cl;ch=bh;cl=bl;bh=ah;bl=al;ah=sum64_hi(T1_hi,T1_lo,T2_hi,T2_lo);al=sum64_lo(T1_hi,T1_lo,T2_hi,T2_lo)}sum64(this.h,0,ah,al);sum64(this.h,2,bh,bl);sum64(this.h,4,ch,cl);sum64(this.h,6,dh,dl);sum64(this.h,8,eh,el);sum64(this.h,10,fh,fl);sum64(this.h,12,gh,gl);sum64(this.h,14,hh,hl)};SHA5122.prototype._digest=function digest(enc){if(enc==="hex")return utils2.toHex32(this.h,"big");else return utils2.split32(this.h,"big")};function ch64_hi(xh,xl,yh,yl,zh){var r=xh&yh^~xh&zh;if(r<0)r+=4294967296;return r}function ch64_lo(xh,xl,yh,yl,zh,zl){var r=xl&yl^~xl&zl;if(r<0)r+=4294967296;return r}function maj64_hi(xh,xl,yh,yl,zh){var r=xh&yh^xh&zh^yh&zh;if(r<0)r+=4294967296;return r}function maj64_lo(xh,xl,yh,yl,zh,zl){var r=xl&yl^xl&zl^yl&zl;if(r<0)r+=4294967296;return r}function s0_512_hi(xh,xl){var c0_hi=rotr64_hi(xh,xl,28);var c1_hi=rotr64_hi(xl,xh,2);var c2_hi=rotr64_hi(xl,xh,7);var r=c0_hi^c1_hi^c2_hi;if(r<0)r+=4294967296;return r}function s0_512_lo(xh,xl){var c0_lo=rotr64_lo(xh,xl,28);var c1_lo=rotr64_lo(xl,xh,2);var c2_lo=rotr64_lo(xl,xh,7);var r=c0_lo^c1_lo^c2_lo;if(r<0)r+=4294967296;return r}function s1_512_hi(xh,xl){var c0_hi=rotr64_hi(xh,xl,14);var c1_hi=rotr64_hi(xh,xl,18);var c2_hi=rotr64_hi(xl,xh,9);var r=c0_hi^c1_hi^c2_hi;if(r<0)r+=4294967296;return r}function s1_512_lo(xh,xl){var c0_lo=rotr64_lo(xh,xl,14);var c1_lo=rotr64_lo(xh,xl,18);var c2_lo=rotr64_lo(xl,xh,9);var r=c0_lo^c1_lo^c2_lo;if(r<0)r+=4294967296;return r}function g0_512_hi(xh,xl){var c0_hi=rotr64_hi(xh,xl,1);var c1_hi=rotr64_hi(xh,xl,8);var c2_hi=shr64_hi(xh,xl,7);var r=c0_hi^c1_hi^c2_hi;if(r<0)r+=4294967296;return r}function g0_512_lo(xh,xl){var c0_lo=rotr64_lo(xh,xl,1);var c1_lo=rotr64_lo(xh,xl,8);var c2_lo=shr64_lo(xh,xl,7);var r=c0_lo^c1_lo^c2_lo;if(r<0)r+=4294967296;return r}function g1_512_hi(xh,xl){var c0_hi=rotr64_hi(xh,xl,19);var c1_hi=rotr64_hi(xl,xh,29);var c2_hi=shr64_hi(xh,xl,6);var r=c0_hi^c1_hi^c2_hi;if(r<0)r+=4294967296;return r}function g1_512_lo(xh,xl){var c0_lo=rotr64_lo(xh,xl,19);var c1_lo=rotr64_lo(xl,xh,29);var c2_lo=shr64_lo(xh,xl,6);var r=c0_lo^c1_lo^c2_lo;if(r<0)r+=4294967296;return r}return _512}var _384;var hasRequired_384;function require_384(){if(hasRequired_384)return _384;hasRequired_384=1;var utils2=requireUtils();var SHA5122=require_512();function SHA384(){if(!(this instanceof SHA384))return new SHA384;SHA5122.call(this);this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]}utils2.inherits(SHA384,SHA5122);_384=SHA384;SHA384.blockSize=1024;SHA384.outSize=384;SHA384.hmacStrength=192;SHA384.padLength=128;SHA384.prototype._digest=function digest(enc){if(enc==="hex")return utils2.toHex32(this.h.slice(0,12),"big");else return utils2.split32(this.h.slice(0,12),"big")};return _384}var hasRequiredSha;function requireSha(){if(hasRequiredSha)return sha;hasRequiredSha=1;sha.sha1=require_1();sha.sha224=require_224();sha.sha256=require_256();sha.sha384=require_384();sha.sha512=require_512();return sha}var ripemd={};var hasRequiredRipemd;function requireRipemd(){if(hasRequiredRipemd)return ripemd;hasRequiredRipemd=1;var utils2=requireUtils();var common2=requireCommon$1();var rotl32=utils2.rotl32;var sum32=utils2.sum32;var sum32_3=utils2.sum32_3;var sum32_4=utils2.sum32_4;var BlockHash=common2.BlockHash;function RIPEMD1602(){if(!(this instanceof RIPEMD1602))return new RIPEMD1602;BlockHash.call(this);this.h=[1732584193,4023233417,2562383102,271733878,3285377520];this.endian="little"}utils2.inherits(RIPEMD1602,BlockHash);ripemd.ripemd160=RIPEMD1602;RIPEMD1602.blockSize=512;RIPEMD1602.outSize=160;RIPEMD1602.hmacStrength=192;RIPEMD1602.padLength=64;RIPEMD1602.prototype._update=function update3(msg,start){var A=this.h[0];var B=this.h[1];var C=this.h[2];var D=this.h[3];var E=this.h[4];var Ah=A;var Bh=B;var Ch=C;var Dh=D;var Eh=E;for(var j=0;j<80;j++){var T=sum32(rotl32(sum32_4(A,f2(j,B,C,D),msg[r[j]+start],K(j)),s[j]),E);A=E;E=D;D=rotl32(C,10);C=B;B=T;T=sum32(rotl32(sum32_4(Ah,f2(79-j,Bh,Ch,Dh),msg[rh[j]+start],Kh(j)),sh[j]),Eh);Ah=Eh;Eh=Dh;Dh=rotl32(Ch,10);Ch=Bh;Bh=T}T=sum32_3(this.h[1],C,Dh);this.h[1]=sum32_3(this.h[2],D,Eh);this.h[2]=sum32_3(this.h[3],E,Ah);this.h[3]=sum32_3(this.h[4],A,Bh);this.h[4]=sum32_3(this.h[0],B,Ch);this.h[0]=T};RIPEMD1602.prototype._digest=function digest(enc){if(enc==="hex")return utils2.toHex32(this.h,"little");else return utils2.split32(this.h,"little")};function f2(j,x,y,z){if(j<=15)return x^y^z;else if(j<=31)return x&y|~x&z;else if(j<=47)return(x|~y)^z;else if(j<=63)return x&z|y&~z;else return x^(y|~z)}function K(j){if(j<=15)return 0;else if(j<=31)return 1518500249;else if(j<=47)return 1859775393;else if(j<=63)return 2400959708;else return 2840853838}function Kh(j){if(j<=15)return 1352829926;else if(j<=31)return 1548603684;else if(j<=47)return 1836072691;else if(j<=63)return 2053994217;else return 0}var r=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13];var rh=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11];var s=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6];var sh=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11];return ripemd}var hmac;var hasRequiredHmac;function requireHmac(){if(hasRequiredHmac)return hmac;hasRequiredHmac=1;var utils2=requireUtils();var assert2=requireMinimalisticAssert();function Hmac(hash2,key2,enc){if(!(this instanceof Hmac))return new Hmac(hash2,key2,enc);this.Hash=hash2;this.blockSize=hash2.blockSize/8;this.outSize=hash2.outSize/8;this.inner=null;this.outer=null;this._init(utils2.toArray(key2,enc))}hmac=Hmac;Hmac.prototype._init=function init4(key2){if(key2.length>this.blockSize)key2=(new this.Hash).update(key2).digest();assert2(key2.length<=this.blockSize);for(var i=key2.length;i<this.blockSize;i++)key2.push(0);for(i=0;i<key2.length;i++)key2[i]^=54;this.inner=(new this.Hash).update(key2);for(i=0;i<key2.length;i++)key2[i]^=106;this.outer=(new this.Hash).update(key2)};Hmac.prototype.update=function update3(msg,enc){this.inner.update(msg,enc);return this};Hmac.prototype.digest=function digest(enc){this.outer.update(this.inner.digest());return this.outer.digest(enc)};return hmac}var hasRequiredHash;function requireHash(){if(hasRequiredHash)return hash$1;hasRequiredHash=1;(function(exports2){var hash2=exports2;hash2.utils=requireUtils();hash2.common=requireCommon$1();hash2.sha=requireSha();hash2.ripemd=requireRipemd();hash2.hmac=requireHmac();hash2.sha1=hash2.sha.sha1;hash2.sha256=hash2.sha.sha256;hash2.sha224=hash2.sha.sha224;hash2.sha384=hash2.sha.sha384;hash2.sha512=hash2.sha.sha512;hash2.ripemd160=hash2.ripemd.ripemd160})(hash$1);return hash$1}var hashExports=requireHash();const hash=getDefaultExportFromCjs(hashExports);var SupportedAlgorithm;(function(SupportedAlgorithm2){SupportedAlgorithm2["sha256"]="sha256";SupportedAlgorithm2["sha512"]="sha512"})(SupportedAlgorithm||(SupportedAlgorithm={}));const version$f="sha2/5.8.0";const logger$f=new Logger$3(version$f);function ripemd160(data){return"0x"+hash.ripemd160().update(arrayify$1(data)).digest("hex")}function sha256(data){return"0x"+hash.sha256().update(arrayify$1(data)).digest("hex")}function computeHmac(algorithm,key2,data){if(!SupportedAlgorithm[algorithm]){logger$f.throwError("unsupported algorithm "+algorithm,Logger$3.errors.UNSUPPORTED_OPERATION,{operation:"hmac",algorithm:algorithm})}return"0x"+hash.hmac(hash[algorithm],arrayify$1(key2)).update(arrayify$1(data)).digest("hex")}function pbkdf2$1(password,salt,iterations,keylen,hashAlgorithm){password=arrayify$1(password);salt=arrayify$1(salt);let hLen;let l=1;const DK=new Uint8Array(keylen);const block1=new Uint8Array(salt.length+4);block1.set(salt);let r;let T;for(let i=1;i<=l;i++){block1[salt.length]=i>>24&255;block1[salt.length+1]=i>>16&255;block1[salt.length+2]=i>>8&255;block1[salt.length+3]=i&255;let U=arrayify$1(computeHmac(hashAlgorithm,password,block1));if(!hLen){hLen=U.length;T=new Uint8Array(hLen);l=Math.ceil(keylen/hLen);r=keylen-(l-1)*hLen}T.set(U);for(let j=1;j<iterations;j++){U=arrayify$1(computeHmac(hashAlgorithm,password,U));for(let k=0;k<hLen;k++)T[k]^=U[k]}const destPos=(i-1)*hLen;const len=i===l?r:hLen;DK.set(arrayify$1(T).slice(0,len),destPos)}return hexlify$1(DK)}function createCommonjsModule$1(fn,basedir,module2){return module2={path:basedir,exports:{},require:function(path,base2){return commonjsRequire$1(path,base2===void 0||base2===null?module2.path:base2)}},fn(module2,module2.exports),module2.exports}function commonjsRequire$1(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}var minimalisticAssert$1=assert$6;function assert$6(val,msg){if(!val)throw new Error(msg||"Assertion failed")}assert$6.equal=function assertEqual(l,r,msg){if(l!=r)throw new Error(msg||"Assertion failed: "+l+" != "+r)};var utils_1$2=createCommonjsModule$1(function(module2,exports2){var utils2=exports2;function toArray2(msg,enc){if(Array.isArray(msg))return msg.slice();if(!msg)return[];var res=[];if(typeof msg!=="string"){for(var i=0;i<msg.length;i++)res[i]=msg[i]|0;return res}if(enc==="hex"){msg=msg.replace(/[^a-z0-9]+/gi,"");if(msg.length%2!==0)msg="0"+msg;for(var i=0;i<msg.length;i+=2)res.push(parseInt(msg[i]+msg[i+1],16))}else{for(var i=0;i<msg.length;i++){var c=msg.charCodeAt(i);var hi=c>>8;var lo=c&255;if(hi)res.push(hi,lo);else res.push(lo)}}return res}utils2.toArray=toArray2;function zero2(word){if(word.length===1)return"0"+word;else return word}utils2.zero2=zero2;function toHex2(msg){var res="";for(var i=0;i<msg.length;i++)res+=zero2(msg[i].toString(16));return res}utils2.toHex=toHex2;utils2.encode=function encode4(arr,enc){if(enc==="hex")return toHex2(arr);else return arr}});var utils_1$1$1=createCommonjsModule$1(function(module2,exports2){var utils2=exports2;utils2.assert=minimalisticAssert$1;utils2.toArray=utils_1$2.toArray;utils2.zero2=utils_1$2.zero2;utils2.toHex=utils_1$2.toHex;utils2.encode=utils_1$2.encode;function getNAF2(num,w,bits){var naf=new Array(Math.max(num.bitLength(),bits)+1);var i;for(i=0;i<naf.length;i+=1){naf[i]=0}var ws=1<<w+1;var k=num.clone();for(i=0;i<naf.length;i++){var z;var mod2=k.andln(ws-1);if(k.isOdd()){if(mod2>(ws>>1)-1)z=(ws>>1)-mod2;else z=mod2;k.isubn(z)}else{z=0}naf[i]=z;k.iushrn(1)}return naf}utils2.getNAF=getNAF2;function getJSF2(k1,k2){var jsf=[[],[]];k1=k1.clone();k2=k2.clone();var d1=0;var d2=0;var m8;while(k1.cmpn(-d1)>0||k2.cmpn(-d2)>0){var m14=k1.andln(3)+d1&3;var m24=k2.andln(3)+d2&3;if(m14===3)m14=-1;if(m24===3)m24=-1;var u1;if((m14&1)===0){u1=0}else{m8=k1.andln(7)+d1&7;if((m8===3||m8===5)&&m24===2)u1=-m14;else u1=m14}jsf[0].push(u1);var u2;if((m24&1)===0){u2=0}else{m8=k2.andln(7)+d2&7;if((m8===3||m8===5)&&m14===2)u2=-m24;else u2=m24}jsf[1].push(u2);if(2*d1===u1+1)d1=1-d1;if(2*d2===u2+1)d2=1-d2;k1.iushrn(1);k2.iushrn(1)}return jsf}utils2.getJSF=getJSF2;function cachedProperty(obj,name,computer){var key2="_"+name;obj.prototype[name]=function cachedProperty2(){return this[key2]!==void 0?this[key2]:this[key2]=computer.call(this)}}utils2.cachedProperty=cachedProperty;function parseBytes(bytes2){return typeof bytes2==="string"?utils2.toArray(bytes2,"hex"):bytes2}utils2.parseBytes=parseBytes;function intFromLE(bytes2){return new BN$3(bytes2,"hex","le")}utils2.intFromLE=intFromLE});var getNAF$1=utils_1$1$1.getNAF;var getJSF$1=utils_1$1$1.getJSF;var assert$1$1=utils_1$1$1.assert;function BaseCurve$1(type,conf){this.type=type;this.p=new BN$3(conf.p,16);this.red=conf.prime?BN$3.red(conf.prime):BN$3.mont(this.p);this.zero=new BN$3(0).toRed(this.red);this.one=new BN$3(1).toRed(this.red);this.two=new BN$3(2).toRed(this.red);this.n=conf.n&&new BN$3(conf.n,16);this.g=conf.g&&this.pointFromJSON(conf.g,conf.gRed);this._wnafT1=new Array(4);this._wnafT2=new Array(4);this._wnafT3=new Array(4);this._wnafT4=new Array(4);this._bitLength=this.n?this.n.bitLength():0;var adjustCount=this.n&&this.p.div(this.n);if(!adjustCount||adjustCount.cmpn(100)>0){this.redN=null}else{this._maxwellTrick=true;this.redN=this.n.toRed(this.red)}}var base$1=BaseCurve$1;BaseCurve$1.prototype.point=function point(){throw new Error("Not implemented")};BaseCurve$1.prototype.validate=function validate(){throw new Error("Not implemented")};BaseCurve$1.prototype._fixedNafMul=function _fixedNafMul(p,k){assert$1$1(p.precomputed);var doubles=p._getDoubles();var naf=getNAF$1(k,1,this._bitLength);var I=(1<<doubles.step+1)-(doubles.step%2===0?2:1);I/=3;var repr=[];var j;var nafW;for(j=0;j<naf.length;j+=doubles.step){nafW=0;for(var l=j+doubles.step-1;l>=j;l--)nafW=(nafW<<1)+naf[l];repr.push(nafW)}var a=this.jpoint(null,null,null);var b2=this.jpoint(null,null,null);for(var i=I;i>0;i--){for(j=0;j<repr.length;j++){nafW=repr[j];if(nafW===i)b2=b2.mixedAdd(doubles.points[j]);else if(nafW===-i)b2=b2.mixedAdd(doubles.points[j].neg())}a=a.add(b2)}return a.toP()};BaseCurve$1.prototype._wnafMul=function _wnafMul(p,k){var w=4;var nafPoints=p._getNAFPoints(w);w=nafPoints.wnd;var wnd=nafPoints.points;var naf=getNAF$1(k,w,this._bitLength);var acc=this.jpoint(null,null,null);for(var i=naf.length-1;i>=0;i--){for(var l=0;i>=0&&naf[i]===0;i--)l++;if(i>=0)l++;acc=acc.dblp(l);if(i<0)break;var z=naf[i];assert$1$1(z!==0);if(p.type==="affine"){if(z>0)acc=acc.mixedAdd(wnd[z-1>>1]);else acc=acc.mixedAdd(wnd[-z-1>>1].neg())}else{if(z>0)acc=acc.add(wnd[z-1>>1]);else acc=acc.add(wnd[-z-1>>1].neg())}}return p.type==="affine"?acc.toP():acc};BaseCurve$1.prototype._wnafMulAdd=function _wnafMulAdd(defW,points,coeffs,len,jacobianResult){var wndWidth=this._wnafT1;var wnd=this._wnafT2;var naf=this._wnafT3;var max=0;var i;var j;var p;for(i=0;i<len;i++){p=points[i];var nafPoints=p._getNAFPoints(defW);wndWidth[i]=nafPoints.wnd;wnd[i]=nafPoints.points}for(i=len-1;i>=1;i-=2){var a=i-1;var b2=i;if(wndWidth[a]!==1||wndWidth[b2]!==1){naf[a]=getNAF$1(coeffs[a],wndWidth[a],this._bitLength);naf[b2]=getNAF$1(coeffs[b2],wndWidth[b2],this._bitLength);max=Math.max(naf[a].length,max);max=Math.max(naf[b2].length,max);continue}var comb=[points[a],null,null,points[b2]];if(points[a].y.cmp(points[b2].y)===0){comb[1]=points[a].add(points[b2]);comb[2]=points[a].toJ().mixedAdd(points[b2].neg())}else if(points[a].y.cmp(points[b2].y.redNeg())===0){comb[1]=points[a].toJ().mixedAdd(points[b2]);comb[2]=points[a].add(points[b2].neg())}else{comb[1]=points[a].toJ().mixedAdd(points[b2]);comb[2]=points[a].toJ().mixedAdd(points[b2].neg())}var index=[-3,-1,-5,-7,0,7,5,1,3];var jsf=getJSF$1(coeffs[a],coeffs[b2]);max=Math.max(jsf[0].length,max);naf[a]=new Array(max);naf[b2]=new Array(max);for(j=0;j<max;j++){var ja=jsf[0][j]|0;var jb=jsf[1][j]|0;naf[a][j]=index[(ja+1)*3+(jb+1)];naf[b2][j]=0;wnd[a]=comb}}var acc=this.jpoint(null,null,null);var tmp=this._wnafT4;for(i=max;i>=0;i--){var k=0;while(i>=0){var zero=true;for(j=0;j<len;j++){tmp[j]=naf[j][i]|0;if(tmp[j]!==0)zero=false}if(!zero)break;k++;i--}if(i>=0)k++;acc=acc.dblp(k);if(i<0)break;for(j=0;j<len;j++){var z=tmp[j];if(z===0)continue;else if(z>0)p=wnd[j][z-1>>1];else if(z<0)p=wnd[j][-z-1>>1].neg();if(p.type==="affine")acc=acc.mixedAdd(p);else acc=acc.add(p)}}for(i=0;i<len;i++)wnd[i]=null;if(jacobianResult)return acc;else return acc.toP()};function BasePoint$1(curve,type){this.curve=curve;this.type=type;this.precomputed=null}BaseCurve$1.BasePoint=BasePoint$1;BasePoint$1.prototype.eq=function eq(){throw new Error("Not implemented")};BasePoint$1.prototype.validate=function validate2(){return this.curve.validate(this)};BaseCurve$1.prototype.decodePoint=function decodePoint(bytes2,enc){bytes2=utils_1$1$1.toArray(bytes2,enc);var len=this.p.byteLength();if((bytes2[0]===4||bytes2[0]===6||bytes2[0]===7)&&bytes2.length-1===2*len){if(bytes2[0]===6)assert$1$1(bytes2[bytes2.length-1]%2===0);else if(bytes2[0]===7)assert$1$1(bytes2[bytes2.length-1]%2===1);var res=this.point(bytes2.slice(1,1+len),bytes2.slice(1+len,1+2*len));return res}else if((bytes2[0]===2||bytes2[0]===3)&&bytes2.length-1===len){return this.pointFromX(bytes2.slice(1,1+len),bytes2[0]===3)}throw new Error("Unknown point format")};BasePoint$1.prototype.encodeCompressed=function encodeCompressed(enc){return this.encode(enc,true)};BasePoint$1.prototype._encode=function _encode(compact){var len=this.curve.p.byteLength();var x=this.getX().toArray("be",len);if(compact)return[this.getY().isEven()?2:3].concat(x);return[4].concat(x,this.getY().toArray("be",len))};BasePoint$1.prototype.encode=function encode(enc,compact){return utils_1$1$1.encode(this._encode(compact),enc)};BasePoint$1.prototype.precompute=function precompute(power){if(this.precomputed)return this;var precomputed={doubles:null,naf:null,beta:null};precomputed.naf=this._getNAFPoints(8);precomputed.doubles=this._getDoubles(4,power);precomputed.beta=this._getBeta();this.precomputed=precomputed;return this};BasePoint$1.prototype._hasDoubles=function _hasDoubles(k){if(!this.precomputed)return false;var doubles=this.precomputed.doubles;if(!doubles)return false;return doubles.points.length>=Math.ceil((k.bitLength()+1)/doubles.step)};BasePoint$1.prototype._getDoubles=function _getDoubles(step,power){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;var doubles=[this];var acc=this;for(var i=0;i<power;i+=step){for(var j=0;j<step;j++)acc=acc.dbl();doubles.push(acc)}return{step:step,points:doubles}};BasePoint$1.prototype._getNAFPoints=function _getNAFPoints(wnd){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;var res=[this];var max=(1<<wnd)-1;var dbl5=max===1?null:this.dbl();for(var i=1;i<max;i++)res[i]=res[i-1].add(dbl5);return{wnd:wnd,points:res}};BasePoint$1.prototype._getBeta=function _getBeta(){return null};BasePoint$1.prototype.dblp=function dblp(k){var r=this;for(var i=0;i<k;i++)r=r.dbl();return r};var inherits_browser$1=createCommonjsModule$1(function(module2){if(typeof Object.create==="function"){module2.exports=function inherits2(ctor,superCtor){if(superCtor){ctor.super_=superCtor;ctor.prototype=Object.create(superCtor.prototype,{constructor:{value:ctor,enumerable:false,writable:true,configurable:true}})}}}else{module2.exports=function inherits2(ctor,superCtor){if(superCtor){ctor.super_=superCtor;var TempCtor=function(){};TempCtor.prototype=superCtor.prototype;ctor.prototype=new TempCtor;ctor.prototype.constructor=ctor}}}});var assert$2$1=utils_1$1$1.assert;function ShortCurve$1(conf){base$1.call(this,"short",conf);this.a=new BN$3(conf.a,16).toRed(this.red);this.b=new BN$3(conf.b,16).toRed(this.red);this.tinv=this.two.redInvm();this.zeroA=this.a.fromRed().cmpn(0)===0;this.threeA=this.a.fromRed().sub(this.p).cmpn(-3)===0;this.endo=this._getEndomorphism(conf);this._endoWnafT1=new Array(4);this._endoWnafT2=new Array(4)}inherits_browser$1(ShortCurve$1,base$1);var short_1$1=ShortCurve$1;ShortCurve$1.prototype._getEndomorphism=function _getEndomorphism(conf){if(!this.zeroA||!this.g||!this.n||this.p.modn(3)!==1)return;var beta;var lambda;if(conf.beta){beta=new BN$3(conf.beta,16).toRed(this.red)}else{var betas=this._getEndoRoots(this.p);beta=betas[0].cmp(betas[1])<0?betas[0]:betas[1];beta=beta.toRed(this.red)}if(conf.lambda){lambda=new BN$3(conf.lambda,16)}else{var lambdas=this._getEndoRoots(this.n);if(this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta))===0){lambda=lambdas[0]}else{lambda=lambdas[1];assert$2$1(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta))===0)}}var basis;if(conf.basis){basis=conf.basis.map(function(vec){return{a:new BN$3(vec.a,16),b:new BN$3(vec.b,16)}})}else{basis=this._getEndoBasis(lambda)}return{beta:beta,lambda:lambda,basis:basis}};ShortCurve$1.prototype._getEndoRoots=function _getEndoRoots(num){var red=num===this.p?this.red:BN$3.mont(num);var tinv=new BN$3(2).toRed(red).redInvm();var ntinv=tinv.redNeg();var s=new BN$3(3).toRed(red).redNeg().redSqrt().redMul(tinv);var l1=ntinv.redAdd(s).fromRed();var l2=ntinv.redSub(s).fromRed();return[l1,l2]};ShortCurve$1.prototype._getEndoBasis=function _getEndoBasis(lambda){var aprxSqrt=this.n.ushrn(Math.floor(this.n.bitLength()/2));var u=lambda;var v=this.n.clone();var x1=new BN$3(1);var y1=new BN$3(0);var x2=new BN$3(0);var y2=new BN$3(1);var a0;var b0;var a1;var b1;var a2;var b2;var prevR;var i=0;var r;var x;while(u.cmpn(0)!==0){var q=v.div(u);r=v.sub(q.mul(u));x=x2.sub(q.mul(x1));var y=y2.sub(q.mul(y1));if(!a1&&r.cmp(aprxSqrt)<0){a0=prevR.neg();b0=x1;a1=r.neg();b1=x}else if(a1&&++i===2){break}prevR=r;v=u;u=r;x2=x1;x1=x;y2=y1;y1=y}a2=r.neg();b2=x;var len1=a1.sqr().add(b1.sqr());var len2=a2.sqr().add(b2.sqr());if(len2.cmp(len1)>=0){a2=a0;b2=b0}if(a1.negative){a1=a1.neg();b1=b1.neg()}if(a2.negative){a2=a2.neg();b2=b2.neg()}return[{a:a1,b:b1},{a:a2,b:b2}]};ShortCurve$1.prototype._endoSplit=function _endoSplit(k){var basis=this.endo.basis;var v1=basis[0];var v2=basis[1];var c1=v2.b.mul(k).divRound(this.n);var c2=v1.b.neg().mul(k).divRound(this.n);var p1=c1.mul(v1.a);var p2=c2.mul(v2.a);var q1=c1.mul(v1.b);var q2=c2.mul(v2.b);var k1=k.sub(p1).sub(p2);var k2=q1.add(q2).neg();return{k1:k1,k2:k2}};ShortCurve$1.prototype.pointFromX=function pointFromX(x,odd){x=new BN$3(x,16);if(!x.red)x=x.toRed(this.red);var y2=x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);var y=y2.redSqrt();if(y.redSqr().redSub(y2).cmp(this.zero)!==0)throw new Error("invalid point");var isOdd=y.fromRed().isOdd();if(odd&&!isOdd||!odd&&isOdd)y=y.redNeg();return this.point(x,y)};ShortCurve$1.prototype.validate=function validate3(point5){if(point5.inf)return true;var x=point5.x;var y=point5.y;var ax=this.a.redMul(x);var rhs=x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);return y.redSqr().redISub(rhs).cmpn(0)===0};ShortCurve$1.prototype._endoWnafMulAdd=function _endoWnafMulAdd(points,coeffs,jacobianResult){var npoints=this._endoWnafT1;var ncoeffs=this._endoWnafT2;for(var i=0;i<points.length;i++){var split2=this._endoSplit(coeffs[i]);var p=points[i];var beta=p._getBeta();if(split2.k1.negative){split2.k1.ineg();p=p.neg(true)}if(split2.k2.negative){split2.k2.ineg();beta=beta.neg(true)}npoints[i*2]=p;npoints[i*2+1]=beta;ncoeffs[i*2]=split2.k1;ncoeffs[i*2+1]=split2.k2}var res=this._wnafMulAdd(1,npoints,ncoeffs,i*2,jacobianResult);for(var j=0;j<i*2;j++){npoints[j]=null;ncoeffs[j]=null}return res};function Point$1(curve,x,y,isRed){base$1.BasePoint.call(this,curve,"affine");if(x===null&&y===null){this.x=null;this.y=null;this.inf=true}else{this.x=new BN$3(x,16);this.y=new BN$3(y,16);if(isRed){this.x.forceRed(this.curve.red);this.y.forceRed(this.curve.red)}if(!this.x.red)this.x=this.x.toRed(this.curve.red);if(!this.y.red)this.y=this.y.toRed(this.curve.red);this.inf=false}}inherits_browser$1(Point$1,base$1.BasePoint);ShortCurve$1.prototype.point=function point2(x,y,isRed){return new Point$1(this,x,y,isRed)};ShortCurve$1.prototype.pointFromJSON=function pointFromJSON(obj,red){return Point$1.fromJSON(this,obj,red)};Point$1.prototype._getBeta=function _getBeta2(){if(!this.curve.endo)return;var pre=this.precomputed;if(pre&&pre.beta)return pre.beta;var beta=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(pre){var curve=this.curve;var endoMul=function(p){return curve.point(p.x.redMul(curve.endo.beta),p.y)};pre.beta=beta;beta.precomputed={beta:null,naf:pre.naf&&{wnd:pre.naf.wnd,points:pre.naf.points.map(endoMul)},doubles:pre.doubles&&{step:pre.doubles.step,points:pre.doubles.points.map(endoMul)}}}return beta};Point$1.prototype.toJSON=function toJSON2(){if(!this.precomputed)return[this.x,this.y];return[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]};Point$1.fromJSON=function fromJSON(curve,obj,red){if(typeof obj==="string")obj=JSON.parse(obj);var res=curve.point(obj[0],obj[1],red);if(!obj[2])return res;function obj2point(obj2){return curve.point(obj2[0],obj2[1],red)}var pre=obj[2];res.precomputed={beta:null,doubles:pre.doubles&&{step:pre.doubles.step,points:[res].concat(pre.doubles.points.map(obj2point))},naf:pre.naf&&{wnd:pre.naf.wnd,points:[res].concat(pre.naf.points.map(obj2point))}};return res};Point$1.prototype.inspect=function inspect(){if(this.isInfinity())return"<EC Point Infinity>";return"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+">"};Point$1.prototype.isInfinity=function isInfinity(){return this.inf};Point$1.prototype.add=function add2(p){if(this.inf)return p;if(p.inf)return this;if(this.eq(p))return this.dbl();if(this.neg().eq(p))return this.curve.point(null,null);if(this.x.cmp(p.x)===0)return this.curve.point(null,null);var c=this.y.redSub(p.y);if(c.cmpn(0)!==0)c=c.redMul(this.x.redSub(p.x).redInvm());var nx=c.redSqr().redISub(this.x).redISub(p.x);var ny=c.redMul(this.x.redSub(nx)).redISub(this.y);return this.curve.point(nx,ny)};Point$1.prototype.dbl=function dbl(){if(this.inf)return this;var ys1=this.y.redAdd(this.y);if(ys1.cmpn(0)===0)return this.curve.point(null,null);var a=this.curve.a;var x2=this.x.redSqr();var dyinv=ys1.redInvm();var c=x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);var nx=c.redSqr().redISub(this.x.redAdd(this.x));var ny=c.redMul(this.x.redSub(nx)).redISub(this.y);return this.curve.point(nx,ny)};Point$1.prototype.getX=function getX(){return this.x.fromRed()};Point$1.prototype.getY=function getY(){return this.y.fromRed()};Point$1.prototype.mul=function mul(k){k=new BN$3(k,16);if(this.isInfinity())return this;else if(this._hasDoubles(k))return this.curve._fixedNafMul(this,k);else if(this.curve.endo)return this.curve._endoWnafMulAdd([this],[k]);else return this.curve._wnafMul(this,k)};Point$1.prototype.mulAdd=function mulAdd(k1,p2,k2){var points=[this,p2];var coeffs=[k1,k2];if(this.curve.endo)return this.curve._endoWnafMulAdd(points,coeffs);else return this.curve._wnafMulAdd(1,points,coeffs,2)};Point$1.prototype.jmulAdd=function jmulAdd(k1,p2,k2){var points=[this,p2];var coeffs=[k1,k2];if(this.curve.endo)return this.curve._endoWnafMulAdd(points,coeffs,true);else return this.curve._wnafMulAdd(1,points,coeffs,2,true)};Point$1.prototype.eq=function eq2(p){return this===p||this.inf===p.inf&&(this.inf||this.x.cmp(p.x)===0&&this.y.cmp(p.y)===0)};Point$1.prototype.neg=function neg(_precompute){if(this.inf)return this;var res=this.curve.point(this.x,this.y.redNeg());if(_precompute&&this.precomputed){var pre=this.precomputed;var negate=function(p){return p.neg()};res.precomputed={naf:pre.naf&&{wnd:pre.naf.wnd,points:pre.naf.points.map(negate)},doubles:pre.doubles&&{step:pre.doubles.step,points:pre.doubles.points.map(negate)}}}return res};Point$1.prototype.toJ=function toJ(){if(this.inf)return this.curve.jpoint(null,null,null);var res=this.curve.jpoint(this.x,this.y,this.curve.one);return res};function JPoint$1(curve,x,y,z){base$1.BasePoint.call(this,curve,"jacobian");if(x===null&&y===null&&z===null){this.x=this.curve.one;this.y=this.curve.one;this.z=new BN$3(0)}else{this.x=new BN$3(x,16);this.y=new BN$3(y,16);this.z=new BN$3(z,16)}if(!this.x.red)this.x=this.x.toRed(this.curve.red);if(!this.y.red)this.y=this.y.toRed(this.curve.red);if(!this.z.red)this.z=this.z.toRed(this.curve.red);this.zOne=this.z===this.curve.one}inherits_browser$1(JPoint$1,base$1.BasePoint);ShortCurve$1.prototype.jpoint=function jpoint(x,y,z){return new JPoint$1(this,x,y,z)};JPoint$1.prototype.toP=function toP(){if(this.isInfinity())return this.curve.point(null,null);var zinv=this.z.redInvm();var zinv2=zinv.redSqr();var ax=this.x.redMul(zinv2);var ay=this.y.redMul(zinv2).redMul(zinv);return this.curve.point(ax,ay)};JPoint$1.prototype.neg=function neg2(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)};JPoint$1.prototype.add=function add3(p){if(this.isInfinity())return p;if(p.isInfinity())return this;var pz2=p.z.redSqr();var z2=this.z.redSqr();var u1=this.x.redMul(pz2);var u2=p.x.redMul(z2);var s1=this.y.redMul(pz2.redMul(p.z));var s2=p.y.redMul(z2.redMul(this.z));var h=u1.redSub(u2);var r=s1.redSub(s2);if(h.cmpn(0)===0){if(r.cmpn(0)!==0)return this.curve.jpoint(null,null,null);else return this.dbl()}var h2=h.redSqr();var h3=h2.redMul(h);var v=u1.redMul(h2);var nx=r.redSqr().redIAdd(h3).redISub(v).redISub(v);var ny=r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));var nz=this.z.redMul(p.z).redMul(h);return this.curve.jpoint(nx,ny,nz)};JPoint$1.prototype.mixedAdd=function mixedAdd(p){if(this.isInfinity())return p.toJ();if(p.isInfinity())return this;var z2=this.z.redSqr();var u1=this.x;var u2=p.x.redMul(z2);var s1=this.y;var s2=p.y.redMul(z2).redMul(this.z);var h=u1.redSub(u2);var r=s1.redSub(s2);if(h.cmpn(0)===0){if(r.cmpn(0)!==0)return this.curve.jpoint(null,null,null);else return this.dbl()}var h2=h.redSqr();var h3=h2.redMul(h);var v=u1.redMul(h2);var nx=r.redSqr().redIAdd(h3).redISub(v).redISub(v);var ny=r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));var nz=this.z.redMul(h);return this.curve.jpoint(nx,ny,nz)};JPoint$1.prototype.dblp=function dblp2(pow3){if(pow3===0)return this;if(this.isInfinity())return this;if(!pow3)return this.dbl();var i;if(this.curve.zeroA||this.curve.threeA){var r=this;for(i=0;i<pow3;i++)r=r.dbl();return r}var a=this.curve.a;var tinv=this.curve.tinv;var jx=this.x;var jy=this.y;var jz=this.z;var jz4=jz.redSqr().redSqr();var jyd=jy.redAdd(jy);for(i=0;i<pow3;i++){var jx2=jx.redSqr();var jyd2=jyd.redSqr();var jyd4=jyd2.redSqr();var c=jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));var t1=jx.redMul(jyd2);var nx=c.redSqr().redISub(t1.redAdd(t1));var t2=t1.redISub(nx);var dny=c.redMul(t2);dny=dny.redIAdd(dny).redISub(jyd4);var nz=jyd.redMul(jz);if(i+1<pow3)jz4=jz4.redMul(jyd4);jx=nx;jz=nz;jyd=dny}return this.curve.jpoint(jx,jyd.redMul(tinv),jz)};JPoint$1.prototype.dbl=function dbl2(){if(this.isInfinity())return this;if(this.curve.zeroA)return this._zeroDbl();else if(this.curve.threeA)return this._threeDbl();else return this._dbl()};JPoint$1.prototype._zeroDbl=function _zeroDbl(){var nx;var ny;var nz;if(this.zOne){var xx=this.x.redSqr();var yy=this.y.redSqr();var yyyy=yy.redSqr();var s=this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);s=s.redIAdd(s);var m=xx.redAdd(xx).redIAdd(xx);var t=m.redSqr().redISub(s).redISub(s);var yyyy8=yyyy.redIAdd(yyyy);yyyy8=yyyy8.redIAdd(yyyy8);yyyy8=yyyy8.redIAdd(yyyy8);nx=t;ny=m.redMul(s.redISub(t)).redISub(yyyy8);nz=this.y.redAdd(this.y)}else{var a=this.x.redSqr();var b2=this.y.redSqr();var c=b2.redSqr();var d=this.x.redAdd(b2).redSqr().redISub(a).redISub(c);d=d.redIAdd(d);var e=a.redAdd(a).redIAdd(a);var f2=e.redSqr();var c8=c.redIAdd(c);c8=c8.redIAdd(c8);c8=c8.redIAdd(c8);nx=f2.redISub(d).redISub(d);ny=e.redMul(d.redISub(nx)).redISub(c8);nz=this.y.redMul(this.z);nz=nz.redIAdd(nz)}return this.curve.jpoint(nx,ny,nz)};JPoint$1.prototype._threeDbl=function _threeDbl(){var nx;var ny;var nz;if(this.zOne){var xx=this.x.redSqr();var yy=this.y.redSqr();var yyyy=yy.redSqr();var s=this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);s=s.redIAdd(s);var m=xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);var t=m.redSqr().redISub(s).redISub(s);nx=t;var yyyy8=yyyy.redIAdd(yyyy);yyyy8=yyyy8.redIAdd(yyyy8);yyyy8=yyyy8.redIAdd(yyyy8);ny=m.redMul(s.redISub(t)).redISub(yyyy8);nz=this.y.redAdd(this.y)}else{var delta=this.z.redSqr();var gamma=this.y.redSqr();var beta=this.x.redMul(gamma);var alpha=this.x.redSub(delta).redMul(this.x.redAdd(delta));alpha=alpha.redAdd(alpha).redIAdd(alpha);var beta4=beta.redIAdd(beta);beta4=beta4.redIAdd(beta4);var beta8=beta4.redAdd(beta4);nx=alpha.redSqr().redISub(beta8);nz=this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);var ggamma8=gamma.redSqr();ggamma8=ggamma8.redIAdd(ggamma8);ggamma8=ggamma8.redIAdd(ggamma8);ggamma8=ggamma8.redIAdd(ggamma8);ny=alpha.redMul(beta4.redISub(nx)).redISub(ggamma8)}return this.curve.jpoint(nx,ny,nz)};JPoint$1.prototype._dbl=function _dbl(){var a=this.curve.a;var jx=this.x;var jy=this.y;var jz=this.z;var jz4=jz.redSqr().redSqr();var jx2=jx.redSqr();var jy2=jy.redSqr();var c=jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));var jxd4=jx.redAdd(jx);jxd4=jxd4.redIAdd(jxd4);var t1=jxd4.redMul(jy2);var nx=c.redSqr().redISub(t1.redAdd(t1));var t2=t1.redISub(nx);var jyd8=jy2.redSqr();jyd8=jyd8.redIAdd(jyd8);jyd8=jyd8.redIAdd(jyd8);jyd8=jyd8.redIAdd(jyd8);var ny=c.redMul(t2).redISub(jyd8);var nz=jy.redAdd(jy).redMul(jz);return this.curve.jpoint(nx,ny,nz)};JPoint$1.prototype.trpl=function trpl(){if(!this.curve.zeroA)return this.dbl().add(this);var xx=this.x.redSqr();var yy=this.y.redSqr();var zz=this.z.redSqr();var yyyy=yy.redSqr();var m=xx.redAdd(xx).redIAdd(xx);var mm=m.redSqr();var e=this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);e=e.redIAdd(e);e=e.redAdd(e).redIAdd(e);e=e.redISub(mm);var ee=e.redSqr();var t=yyyy.redIAdd(yyyy);t=t.redIAdd(t);t=t.redIAdd(t);t=t.redIAdd(t);var u=m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);var yyu4=yy.redMul(u);yyu4=yyu4.redIAdd(yyu4);yyu4=yyu4.redIAdd(yyu4);var nx=this.x.redMul(ee).redISub(yyu4);nx=nx.redIAdd(nx);nx=nx.redIAdd(nx);var ny=this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));ny=ny.redIAdd(ny);ny=ny.redIAdd(ny);ny=ny.redIAdd(ny);var nz=this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);return this.curve.jpoint(nx,ny,nz)};JPoint$1.prototype.mul=function mul2(k,kbase){k=new BN$3(k,kbase);return this.curve._wnafMul(this,k)};JPoint$1.prototype.eq=function eq3(p){if(p.type==="affine")return this.eq(p.toJ());if(this===p)return true;var z2=this.z.redSqr();var pz2=p.z.redSqr();if(this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0)!==0)return false;var z3=z2.redMul(this.z);var pz3=pz2.redMul(p.z);return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0)===0};JPoint$1.prototype.eqXToP=function eqXToP(x){var zs=this.z.redSqr();var rx=x.toRed(this.curve.red).redMul(zs);if(this.x.cmp(rx)===0)return true;var xc=x.clone();var t=this.curve.redN.redMul(zs);for(;;){xc.iadd(this.curve.n);if(xc.cmp(this.curve.p)>=0)return false;rx.redIAdd(t);if(this.x.cmp(rx)===0)return true}};JPoint$1.prototype.inspect=function inspect2(){if(this.isInfinity())return"<EC JPoint Infinity>";return"<EC JPoint x: "+this.x.toString(16,2)+" y: "+this.y.toString(16,2)+" z: "+this.z.toString(16,2)+">"};JPoint$1.prototype.isInfinity=function isInfinity2(){return this.z.cmpn(0)===0};var curve_1$1=createCommonjsModule$1(function(module2,exports2){var curve=exports2;curve.base=base$1;curve.short=short_1$1;curve.mont=null;curve.edwards=null});var curves_1$1=createCommonjsModule$1(function(module2,exports2){var curves=exports2;var assert2=utils_1$1$1.assert;function PresetCurve(options){if(options.type==="short")this.curve=new curve_1$1.short(options);else if(options.type==="edwards")this.curve=new curve_1$1.edwards(options);else this.curve=new curve_1$1.mont(options);this.g=this.curve.g;this.n=this.curve.n;this.hash=options.hash;assert2(this.g.validate(),"Invalid curve");assert2(this.g.mul(this.n).isInfinity(),"Invalid curve, G*N != O")}curves.PresetCurve=PresetCurve;function defineCurve(name,options){Object.defineProperty(curves,name,{configurable:true,enumerable:true,get:function(){var curve=new PresetCurve(options);Object.defineProperty(curves,name,{configurable:true,enumerable:true,value:curve});return curve}})}defineCurve("p192",{type:"short",prime:"p192",p:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",a:"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",b:"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",n:"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",hash:hash.sha256,gRed:false,g:["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012","07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]});defineCurve("p224",{type:"short",prime:"p224",p:"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",a:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",b:"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",n:"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",hash:hash.sha256,gRed:false,g:["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21","bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]});defineCurve("p256",{type:"short",prime:null,p:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",a:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",b:"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",n:"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",hash:hash.sha256,gRed:false,g:["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296","4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]});defineCurve("p384",{type:"short",prime:null,p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",a:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",b:"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",n:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",hash:hash.sha384,gRed:false,g:["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7","3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]});defineCurve("p521",{type:"short",prime:null,p:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",a:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",b:"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",n:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",hash:hash.sha512,gRed:false,g:["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66","00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]});defineCurve("curve25519",{type:"mont",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"76d06",b:"1",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:hash.sha256,gRed:false,g:["9"]});defineCurve("ed25519",{type:"edwards",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"-1",c:"1",d:"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:hash.sha256,gRed:false,g:["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a","6666666666666666666666666666666666666666666666666666666666666658"]});var pre;try{pre=null.crash()}catch(e){pre=void 0}defineCurve("secp256k1",{type:"short",prime:"k256",p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",a:"0",b:"7",n:"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",h:"1",hash:hash.sha256,beta:"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",lambda:"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",basis:[{a:"3086d221a7d46bcde86c90e49284eb15",b:"-e4437ed6010e88286f547fa90abfe4c3"},{a:"114ca50f7a8e2f3f657c1108d9d44cfd8",b:"3086d221a7d46bcde86c90e49284eb15"}],gRed:false,g:["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798","483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",pre]})});function HmacDRBG$1(options){if(!(this instanceof HmacDRBG$1))return new HmacDRBG$1(options);this.hash=options.hash;this.predResist=!!options.predResist;this.outLen=this.hash.outSize;this.minEntropy=options.minEntropy||this.hash.hmacStrength;this._reseed=null;this.reseedInterval=null;this.K=null;this.V=null;var entropy=utils_1$2.toArray(options.entropy,options.entropyEnc||"hex");var nonce=utils_1$2.toArray(options.nonce,options.nonceEnc||"hex");var pers=utils_1$2.toArray(options.pers,options.persEnc||"hex");minimalisticAssert$1(entropy.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits");this._init(entropy,nonce,pers)}var hmacDrbg$1=HmacDRBG$1;HmacDRBG$1.prototype._init=function init2(entropy,nonce,pers){var seed=entropy.concat(nonce).concat(pers);this.K=new Array(this.outLen/8);this.V=new Array(this.outLen/8);for(var i=0;i<this.V.length;i++){this.K[i]=0;this.V[i]=1}this._update(seed);this._reseed=1;this.reseedInterval=281474976710656};HmacDRBG$1.prototype._hmac=function hmac2(){return new hash.hmac(this.hash,this.K)};HmacDRBG$1.prototype._update=function update(seed){var kmac=this._hmac().update(this.V).update([0]);if(seed)kmac=kmac.update(seed);this.K=kmac.digest();this.V=this._hmac().update(this.V).digest();if(!seed)return;this.K=this._hmac().update(this.V).update([1]).update(seed).digest();this.V=this._hmac().update(this.V).digest()};HmacDRBG$1.prototype.reseed=function reseed(entropy,entropyEnc,add6,addEnc){if(typeof entropyEnc!=="string"){addEnc=add6;add6=entropyEnc;entropyEnc=null}entropy=utils_1$2.toArray(entropy,entropyEnc);add6=utils_1$2.toArray(add6,addEnc);minimalisticAssert$1(entropy.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits");this._update(entropy.concat(add6||[]));this._reseed=1};HmacDRBG$1.prototype.generate=function generate(len,enc,add6,addEnc){if(this._reseed>this.reseedInterval)throw new Error("Reseed is required");if(typeof enc!=="string"){addEnc=add6;add6=enc;enc=null}if(add6){add6=utils_1$2.toArray(add6,addEnc||"hex");this._update(add6)}var temp=[];while(temp.length<len){this.V=this._hmac().update(this.V).digest();temp=temp.concat(this.V)}var res=temp.slice(0,len);this._update(add6);this._reseed++;return utils_1$2.encode(res,enc)};var assert$3$1=utils_1$1$1.assert;function KeyPair$1(ec2,options){this.ec=ec2;this.priv=null;this.pub=null;if(options.priv)this._importPrivate(options.priv,options.privEnc);if(options.pub)this._importPublic(options.pub,options.pubEnc)}var key$1=KeyPair$1;KeyPair$1.fromPublic=function fromPublic(ec2,pub,enc){if(pub instanceof KeyPair$1)return pub;return new KeyPair$1(ec2,{pub:pub,pubEnc:enc})};KeyPair$1.fromPrivate=function fromPrivate(ec2,priv,enc){if(priv instanceof KeyPair$1)return priv;return new KeyPair$1(ec2,{priv:priv,privEnc:enc})};KeyPair$1.prototype.validate=function validate4(){var pub=this.getPublic();if(pub.isInfinity())return{result:false,reason:"Invalid public key"};if(!pub.validate())return{result:false,reason:"Public key is not a point"};if(!pub.mul(this.ec.curve.n).isInfinity())return{result:false,reason:"Public key * N != O"};return{result:true,reason:null}};KeyPair$1.prototype.getPublic=function getPublic(compact,enc){if(typeof compact==="string"){enc=compact;compact=null}if(!this.pub)this.pub=this.ec.g.mul(this.priv);if(!enc)return this.pub;return this.pub.encode(enc,compact)};KeyPair$1.prototype.getPrivate=function getPrivate(enc){if(enc==="hex")return this.priv.toString(16,2);else return this.priv};KeyPair$1.prototype._importPrivate=function _importPrivate(key2,enc){this.priv=new BN$3(key2,enc||16);this.priv=this.priv.umod(this.ec.curve.n)};KeyPair$1.prototype._importPublic=function _importPublic(key2,enc){if(key2.x||key2.y){if(this.ec.curve.type==="mont"){assert$3$1(key2.x,"Need x coordinate")}else if(this.ec.curve.type==="short"||this.ec.curve.type==="edwards"){assert$3$1(key2.x&&key2.y,"Need both x and y coordinate")}this.pub=this.ec.curve.point(key2.x,key2.y);return}this.pub=this.ec.curve.decodePoint(key2,enc)};KeyPair$1.prototype.derive=function derive(pub){if(!pub.validate()){assert$3$1(pub.validate(),"public point not validated")}return pub.mul(this.priv).getX()};KeyPair$1.prototype.sign=function sign(msg,enc,options){return this.ec.sign(msg,this,enc,options)};KeyPair$1.prototype.verify=function verify(msg,signature2,options){return this.ec.verify(msg,signature2,this,void 0,options)};KeyPair$1.prototype.inspect=function inspect3(){return"<Key priv: "+(this.priv&&this.priv.toString(16,2))+" pub: "+(this.pub&&this.pub.inspect())+" >"};var assert$4$1=utils_1$1$1.assert;function Signature$1(options,enc){if(options instanceof Signature$1)return options;if(this._importDER(options,enc))return;assert$4$1(options.r&&options.s,"Signature without r or s");this.r=new BN$3(options.r,16);this.s=new BN$3(options.s,16);if(options.recoveryParam===void 0)this.recoveryParam=null;else this.recoveryParam=options.recoveryParam}var signature$1=Signature$1;function Position$1(){this.place=0}function getLength$1(buf,p){var initial=buf[p.place++];if(!(initial&128)){return initial}var octetLen=initial&15;if(octetLen===0||octetLen>4){return false}if(buf[p.place]===0){return false}var val=0;for(var i=0,off=p.place;i<octetLen;i++,off++){val<<=8;val|=buf[off];val>>>=0}if(val<=127){return false}p.place=off;return val}function rmPadding$1(buf){var i=0;var len=buf.length-1;while(!buf[i]&&!(buf[i+1]&128)&&i<len){i++}if(i===0){return buf}return buf.slice(i)}Signature$1.prototype._importDER=function _importDER(data,enc){data=utils_1$1$1.toArray(data,enc);var p=new Position$1;if(data[p.place++]!==48){return false}var len=getLength$1(data,p);if(len===false){return false}if(len+p.place!==data.length){return false}if(data[p.place++]!==2){return false}var rlen=getLength$1(data,p);if(rlen===false){return false}if((data[p.place]&128)!==0){return false}var r=data.slice(p.place,rlen+p.place);p.place+=rlen;if(data[p.place++]!==2){return false}var slen=getLength$1(data,p);if(slen===false){return false}if(data.length!==slen+p.place){return false}if((data[p.place]&128)!==0){return false}var s=data.slice(p.place,slen+p.place);if(r[0]===0){if(r[1]&128){r=r.slice(1)}else{return false}}if(s[0]===0){if(s[1]&128){s=s.slice(1)}else{return false}}this.r=new BN$3(r);this.s=new BN$3(s);this.recoveryParam=null;return true};function constructLength$1(arr,len){if(len<128){arr.push(len);return}var octets=1+(Math.log(len)/Math.LN2>>>3);arr.push(octets|128);while(--octets){arr.push(len>>>(octets<<3)&255)}arr.push(len)}Signature$1.prototype.toDER=function toDER(enc){var r=this.r.toArray();var s=this.s.toArray();if(r[0]&128)r=[0].concat(r);if(s[0]&128)s=[0].concat(s);r=rmPadding$1(r);s=rmPadding$1(s);while(!s[0]&&!(s[1]&128)){s=s.slice(1)}var arr=[2];constructLength$1(arr,r.length);arr=arr.concat(r);arr.push(2);constructLength$1(arr,s.length);var backHalf=arr.concat(s);var res=[48];constructLength$1(res,backHalf.length);res=res.concat(backHalf);return utils_1$1$1.encode(res,enc)};var rand$1=function(){throw new Error("unsupported")};var assert$5$1=utils_1$1$1.assert;function EC$2(options){if(!(this instanceof EC$2))return new EC$2(options);if(typeof options==="string"){assert$5$1(Object.prototype.hasOwnProperty.call(curves_1$1,options),"Unknown curve "+options);options=curves_1$1[options]}if(options instanceof curves_1$1.PresetCurve)options={curve:options};this.curve=options.curve.curve;this.n=this.curve.n;this.nh=this.n.ushrn(1);this.g=this.curve.g;this.g=options.curve.g;this.g.precompute(options.curve.n.bitLength()+1);this.hash=options.hash||options.curve.hash}var ec$1=EC$2;EC$2.prototype.keyPair=function keyPair(options){return new key$1(this,options)};EC$2.prototype.keyFromPrivate=function keyFromPrivate(priv,enc){return key$1.fromPrivate(this,priv,enc)};EC$2.prototype.keyFromPublic=function keyFromPublic(pub,enc){return key$1.fromPublic(this,pub,enc)};EC$2.prototype.genKeyPair=function genKeyPair(options){if(!options)options={};var drbg=new hmacDrbg$1({hash:this.hash,pers:options.pers,persEnc:options.persEnc||"utf8",entropy:options.entropy||rand$1(this.hash.hmacStrength),entropyEnc:options.entropy&&options.entropyEnc||"utf8",nonce:this.n.toArray()});var bytes2=this.n.byteLength();var ns2=this.n.sub(new BN$3(2));for(;;){var priv=new BN$3(drbg.generate(bytes2));if(priv.cmp(ns2)>0)continue;priv.iaddn(1);return this.keyFromPrivate(priv)}};EC$2.prototype._truncateToN=function _truncateToN(msg,truncOnly,bitLength){var byteLength;if(BN$3.isBN(msg)||typeof msg==="number"){msg=new BN$3(msg,16);byteLength=msg.byteLength()}else if(typeof msg==="object"){byteLength=msg.length;msg=new BN$3(msg,16)}else{var str=msg.toString();byteLength=str.length+1>>>1;msg=new BN$3(str,16)}if(typeof bitLength!=="number"){bitLength=byteLength*8}var delta=bitLength-this.n.bitLength();if(delta>0)msg=msg.ushrn(delta);if(!truncOnly&&msg.cmp(this.n)>=0)return msg.sub(this.n);else return msg};EC$2.prototype.sign=function sign2(msg,key2,enc,options){if(typeof enc==="object"){options=enc;enc=null}if(!options)options={};if(typeof msg!=="string"&&typeof msg!=="number"&&!BN$3.isBN(msg)){assert$5$1(typeof msg==="object"&&msg&&typeof msg.length==="number","Expected message to be an array-like, a hex string, or a BN instance");assert$5$1(msg.length>>>0===msg.length);for(var i=0;i<msg.length;i++)assert$5$1((msg[i]&255)===msg[i])}key2=this.keyFromPrivate(key2,enc);msg=this._truncateToN(msg,false,options.msgBitLength);assert$5$1(!msg.isNeg(),"Can not sign a negative message");var bytes2=this.n.byteLength();var bkey=key2.getPrivate().toArray("be",bytes2);var nonce=msg.toArray("be",bytes2);assert$5$1(new BN$3(nonce).eq(msg),"Can not sign message");var drbg=new hmacDrbg$1({hash:this.hash,entropy:bkey,nonce:nonce,pers:options.pers,persEnc:options.persEnc||"utf8"});var ns1=this.n.sub(new BN$3(1));for(var iter=0;;iter++){var k=options.k?options.k(iter):new BN$3(drbg.generate(this.n.byteLength()));k=this._truncateToN(k,true);if(k.cmpn(1)<=0||k.cmp(ns1)>=0)continue;var kp=this.g.mul(k);if(kp.isInfinity())continue;var kpX=kp.getX();var r=kpX.umod(this.n);if(r.cmpn(0)===0)continue;var s=k.invm(this.n).mul(r.mul(key2.getPrivate()).iadd(msg));s=s.umod(this.n);if(s.cmpn(0)===0)continue;var recoveryParam=(kp.getY().isOdd()?1:0)|(kpX.cmp(r)!==0?2:0);if(options.canonical&&s.cmp(this.nh)>0){s=this.n.sub(s);recoveryParam^=1}return new signature$1({r:r,s:s,recoveryParam:recoveryParam})}};EC$2.prototype.verify=function verify2(msg,signature$1$1,key2,enc,options){if(!options)options={};msg=this._truncateToN(msg,false,options.msgBitLength);key2=this.keyFromPublic(key2,enc);signature$1$1=new signature$1(signature$1$1,"hex");var r=signature$1$1.r;var s=signature$1$1.s;if(r.cmpn(1)<0||r.cmp(this.n)>=0)return false;if(s.cmpn(1)<0||s.cmp(this.n)>=0)return false;var sinv=s.invm(this.n);var u1=sinv.mul(msg).umod(this.n);var u2=sinv.mul(r).umod(this.n);var p;if(!this.curve._maxwellTrick){p=this.g.mulAdd(u1,key2.getPublic(),u2);if(p.isInfinity())return false;return p.getX().umod(this.n).cmp(r)===0}p=this.g.jmulAdd(u1,key2.getPublic(),u2);if(p.isInfinity())return false;return p.eqXToP(r)};EC$2.prototype.recoverPubKey=function(msg,signature$1$1,j,enc){assert$5$1((3&j)===j,"The recovery param is more than two bits");signature$1$1=new signature$1(signature$1$1,enc);var n2=this.n;var e=new BN$3(msg);var r=signature$1$1.r;var s=signature$1$1.s;var isYOdd=j&1;var isSecondKey=j>>1;if(r.cmp(this.curve.p.umod(this.curve.n))>=0&&isSecondKey)throw new Error("Unable to find sencond key candinate");if(isSecondKey)r=this.curve.pointFromX(r.add(this.curve.n),isYOdd);else r=this.curve.pointFromX(r,isYOdd);var rInv=signature$1$1.r.invm(n2);var s1=n2.sub(e).mul(rInv).umod(n2);var s2=s.mul(rInv).umod(n2);return this.g.mulAdd(s1,r,s2)};EC$2.prototype.getKeyRecoveryParam=function(e,signature$1$1,Q,enc){signature$1$1=new signature$1(signature$1$1,enc);if(signature$1$1.recoveryParam!==null)return signature$1$1.recoveryParam;for(var i=0;i<4;i++){var Qprime;try{Qprime=this.recoverPubKey(e,signature$1$1,i)}catch(e2){continue}if(Qprime.eq(Q))return i}throw new Error("Unable to find valid recovery factor")};var elliptic_1$1=createCommonjsModule$1(function(module2,exports2){var elliptic=exports2;elliptic.version={version:"6.6.1"}.version;elliptic.utils=utils_1$1$1;elliptic.rand=function(){throw new Error("unsupported")};elliptic.curve=curve_1$1;elliptic.curves=curves_1$1;elliptic.ec=ec$1;elliptic.eddsa=null});var EC$1$1=elliptic_1$1.ec;const version$e="signing-key/5.8.0";const logger$e=new Logger$3(version$e);let _curve$1=null;function getCurve$1(){if(!_curve$1){_curve$1=new EC$1$1("secp256k1")}return _curve$1}let SigningKey$1=class SigningKey{constructor(privateKey){defineReadOnly$1(this,"curve","secp256k1");defineReadOnly$1(this,"privateKey",hexlify$1(privateKey));if(hexDataLength$1(this.privateKey)!==32){logger$e.throwArgumentError("invalid private key","privateKey","[[ REDACTED ]]")}const keyPair3=getCurve$1().keyFromPrivate(arrayify$1(this.privateKey));defineReadOnly$1(this,"publicKey","0x"+keyPair3.getPublic(false,"hex"));defineReadOnly$1(this,"compressedPublicKey","0x"+keyPair3.getPublic(true,"hex"));defineReadOnly$1(this,"_isSigningKey",true)}_addPoint(other){const p0=getCurve$1().keyFromPublic(arrayify$1(this.publicKey));const p1=getCurve$1().keyFromPublic(arrayify$1(other));return"0x"+p0.pub.add(p1.pub).encodeCompressed("hex")}signDigest(digest){const keyPair3=getCurve$1().keyFromPrivate(arrayify$1(this.privateKey));const digestBytes=arrayify$1(digest);if(digestBytes.length!==32){logger$e.throwArgumentError("bad digest length","digest",digest)}const signature2=keyPair3.sign(digestBytes,{canonical:true});return splitSignature$1({recoveryParam:signature2.recoveryParam,r:hexZeroPad$1("0x"+signature2.r.toString(16),32),s:hexZeroPad$1("0x"+signature2.s.toString(16),32)})}computeSharedSecret(otherKey){const keyPair3=getCurve$1().keyFromPrivate(arrayify$1(this.privateKey));const otherKeyPair=getCurve$1().keyFromPublic(arrayify$1(computePublicKey$1(otherKey)));return hexZeroPad$1("0x"+keyPair3.derive(otherKeyPair.getPublic()).toString(16),32)}static isSigningKey(value){return!!(value&&value._isSigningKey)}};function computePublicKey$1(key2,compressed){const bytes2=arrayify$1(key2);if(bytes2.length===32){const signingKey=new SigningKey$1(bytes2);return signingKey.publicKey}else if(bytes2.length===33){return"0x"+getCurve$1().keyFromPublic(bytes2).getPublic(false,"hex")}else if(bytes2.length===65){{return hexlify$1(bytes2)}}return logger$e.throwArgumentError("invalid public or private key","key","[REDACTED]")}const version$d="rlp/5.8.0";const logger$d=new Logger$3(version$d);function arrayifyInteger(value){const result=[];while(value){result.unshift(value&255);value>>=8}return result}function _encode2(object2){if(Array.isArray(object2)){let payload=[];object2.forEach(function(child){payload=payload.concat(_encode2(child))});if(payload.length<=55){payload.unshift(192+payload.length);return payload}const length2=arrayifyInteger(payload.length);length2.unshift(247+length2.length);return length2.concat(payload)}if(!isBytesLike$1(object2)){logger$d.throwArgumentError("RLP object must be BytesLike","object",object2)}const data=Array.prototype.slice.call(arrayify$1(object2));if(data.length===1&&data[0]<=127){return data}else if(data.length<=55){data.unshift(128+data.length);return data}const length=arrayifyInteger(data.length);length.unshift(183+length.length);return length.concat(data)}function encode$1(object2){return hexlify$1(_encode2(object2))}const version$c="address/5.8.0";const logger$c=new Logger$3(version$c);function getChecksumAddress(address){if(!isHexString$1(address,20)){logger$c.throwArgumentError("invalid address","address",address)}address=address.toLowerCase();const chars=address.substring(2).split("");const expanded=new Uint8Array(40);for(let i=0;i<40;i++){expanded[i]=chars[i].charCodeAt(0)}const hashed=arrayify$1(keccak256$1(expanded));for(let i=0;i<40;i+=2){if(hashed[i>>1]>>4>=8){chars[i]=chars[i].toUpperCase()}if((hashed[i>>1]&15)>=8){chars[i+1]=chars[i+1].toUpperCase()}}return"0x"+chars.join("")}const MAX_SAFE_INTEGER$2=9007199254740991;function log10(x){if(Math.log10){return Math.log10(x)}return Math.log(x)/Math.LN10}const ibanLookup={};for(let i=0;i<10;i++){ibanLookup[String(i)]=String(i)}for(let i=0;i<26;i++){ibanLookup[String.fromCharCode(65+i)]=String(10+i)}const safeDigits=Math.floor(log10(MAX_SAFE_INTEGER$2));function ibanChecksum(address){address=address.toUpperCase();address=address.substring(4)+address.substring(0,2)+"00";let expanded=address.split("").map(c=>ibanLookup[c]).join("");while(expanded.length>=safeDigits){let block=expanded.substring(0,safeDigits);expanded=parseInt(block,10)%97+expanded.substring(block.length)}let checksum2=String(98-parseInt(expanded,10)%97);while(checksum2.length<2){checksum2="0"+checksum2}return checksum2}function getAddress(address){let result=null;if(typeof address!=="string"){logger$c.throwArgumentError("invalid address","address",address)}if(address.match(/^(0x)?[0-9a-fA-F]{40}$/)){if(address.substring(0,2)!=="0x"){address="0x"+address}result=getChecksumAddress(address);if(address.match(/([A-F].*[a-f])|([a-f].*[A-F])/)&&result!==address){logger$c.throwArgumentError("bad address checksum","address",address)}}else if(address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)){if(address.substring(2,4)!==ibanChecksum(address)){logger$c.throwArgumentError("bad icap checksum","address",address)}result=_base36To16$1(address.substring(4));while(result.length<40){result="0"+result}result=getChecksumAddress("0x"+result)}else{logger$c.throwArgumentError("invalid address","address",address)}return result}const version$b="transactions/5.8.0";const logger$b=new Logger$3(version$b);var TransactionTypes;(function(TransactionTypes2){TransactionTypes2[TransactionTypes2["legacy"]=0]="legacy";TransactionTypes2[TransactionTypes2["eip2930"]=1]="eip2930";TransactionTypes2[TransactionTypes2["eip1559"]=2]="eip1559"})(TransactionTypes||(TransactionTypes={}));const transactionFields=[{name:"nonce",maxLength:32,numeric:true},{name:"gasPrice",maxLength:32,numeric:true},{name:"gasLimit",maxLength:32,numeric:true},{name:"to",length:20},{name:"value",maxLength:32,numeric:true},{name:"data"}];const allowedTransactionKeys={chainId:true,data:true,gasLimit:true,gasPrice:true,nonce:true,to:true,type:true,value:true};function computeAddress(key2){const publicKey=computePublicKey$1(key2);return getAddress(hexDataSlice$1(keccak256$1(hexDataSlice$1(publicKey,1)),12))}function formatNumber(value,name){const result=stripZeros$1(BigNumber$1.from(value).toHexString());if(result.length>32){logger$b.throwArgumentError("invalid length for "+name,"transaction:"+name,value)}return result}function accessSetify(addr,storageKeys){return{address:getAddress(addr),storageKeys:(storageKeys||[]).map((storageKey,index)=>{if(hexDataLength$1(storageKey)!==32){logger$b.throwArgumentError("invalid access list storageKey",`accessList[${addr}:${index}]`,storageKey)}return storageKey.toLowerCase()})}}function accessListify(value){if(Array.isArray(value)){return value.map((set,index)=>{if(Array.isArray(set)){if(set.length>2){logger$b.throwArgumentError("access list expected to be [ address, storageKeys[] ]",`value[${index}]`,set)}return accessSetify(set[0],set[1])}return accessSetify(set.address,set.storageKeys)})}const result=Object.keys(value).map(addr=>{const storageKeys=value[addr].reduce((accum,storageKey)=>{accum[storageKey]=true;return accum},{});return accessSetify(addr,Object.keys(storageKeys).sort())});result.sort((a,b2)=>a.address.localeCompare(b2.address));return result}function formatAccessList(value){return accessListify(value).map(set=>[set.address,set.storageKeys])}function _serializeEip1559(transaction,signature2){if(transaction.gasPrice!=null){const gasPrice=BigNumber$1.from(transaction.gasPrice);const maxFeePerGas=BigNumber$1.from(transaction.maxFeePerGas||0);if(!gasPrice.eq(maxFeePerGas)){logger$b.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas","tx",{gasPrice:gasPrice,maxFeePerGas:maxFeePerGas})}}const fields=[formatNumber(transaction.chainId||0,"chainId"),formatNumber(transaction.nonce||0,"nonce"),formatNumber(transaction.maxPriorityFeePerGas||0,"maxPriorityFeePerGas"),formatNumber(transaction.maxFeePerGas||0,"maxFeePerGas"),formatNumber(transaction.gasLimit||0,"gasLimit"),transaction.to!=null?getAddress(transaction.to):"0x",formatNumber(transaction.value||0,"value"),transaction.data||"0x",formatAccessList(transaction.accessList||[])];if(signature2){const sig=splitSignature$1(signature2);fields.push(formatNumber(sig.recoveryParam,"recoveryParam"));fields.push(stripZeros$1(sig.r));fields.push(stripZeros$1(sig.s))}return hexConcat$1(["0x02",encode$1(fields)])}function _serializeEip2930(transaction,signature2){const fields=[formatNumber(transaction.chainId||0,"chainId"),formatNumber(transaction.nonce||0,"nonce"),formatNumber(transaction.gasPrice||0,"gasPrice"),formatNumber(transaction.gasLimit||0,"gasLimit"),transaction.to!=null?getAddress(transaction.to):"0x",formatNumber(transaction.value||0,"value"),transaction.data||"0x",formatAccessList(transaction.accessList||[])];if(signature2){const sig=splitSignature$1(signature2);fields.push(formatNumber(sig.recoveryParam,"recoveryParam"));fields.push(stripZeros$1(sig.r));fields.push(stripZeros$1(sig.s))}return hexConcat$1(["0x01",encode$1(fields)])}function _serialize(transaction,signature2){checkProperties(transaction,allowedTransactionKeys);const raw=[];transactionFields.forEach(function(fieldInfo){let value=transaction[fieldInfo.name]||[];const options={};if(fieldInfo.numeric){options.hexPad="left"}value=arrayify$1(hexlify$1(value,options));if(fieldInfo.length&&value.length!==fieldInfo.length&&value.length>0){logger$b.throwArgumentError("invalid length for "+fieldInfo.name,"transaction:"+fieldInfo.name,value)}if(fieldInfo.maxLength){value=stripZeros$1(value);if(value.length>fieldInfo.maxLength){logger$b.throwArgumentError("invalid length for "+fieldInfo.name,"transaction:"+fieldInfo.name,value)}}raw.push(hexlify$1(value))});let chainId=0;if(transaction.chainId!=null){chainId=transaction.chainId;if(typeof chainId!=="number"){logger$b.throwArgumentError("invalid transaction.chainId","transaction",transaction)}}else if(signature2&&!isBytesLike$1(signature2)&&signature2.v>28){chainId=Math.floor((signature2.v-35)/2)}if(chainId!==0){raw.push(hexlify$1(chainId));raw.push("0x");raw.push("0x")}if(!signature2){return encode$1(raw)}const sig=splitSignature$1(signature2);let v=27+sig.recoveryParam;if(chainId!==0){raw.pop();raw.pop();raw.pop();v+=chainId*2+8;if(sig.v>28&&sig.v!==v){logger$b.throwArgumentError("transaction.chainId/signature.v mismatch","signature",signature2)}}else if(sig.v!==v){logger$b.throwArgumentError("transaction.chainId/signature.v mismatch","signature",signature2)}raw.push(hexlify$1(v));raw.push(stripZeros$1(arrayify$1(sig.r)));raw.push(stripZeros$1(arrayify$1(sig.s)));return encode$1(raw)}function serialize(transaction,signature2){if(transaction.type==null||transaction.type===0){if(transaction.accessList!=null){logger$b.throwArgumentError("untyped transactions do not support accessList; include type: 1","transaction",transaction)}return _serialize(transaction,signature2)}switch(transaction.type){case 1:return _serializeEip2930(transaction,signature2);case 2:return _serializeEip1559(transaction,signature2)}return logger$b.throwError(`unsupported transaction type: ${transaction.type}`,Logger$3.errors.UNSUPPORTED_OPERATION,{operation:"serializeTransaction",transactionType:transaction.type})}function id(text){return keccak256$1(toUtf8Bytes(text))}function decode(textData){textData=atob(textData);const data=[];for(let i=0;i<textData.length;i++){data.push(textData.charCodeAt(i))}return arrayify$1(data)}function encode2(data){data=arrayify$1(data);let textData="";for(let i=0;i<data.length;i++){textData+=String.fromCharCode(data[i])}return btoa(textData)}const version$a="wordlists/5.8.0";const logger$a=new Logger$3(version$a);class Wordlist2{constructor(locale){logger$a.checkAbstract(new.target,Wordlist2);defineReadOnly$1(this,"locale",locale)}split(mnemonic){return mnemonic.toLowerCase().split(/ +/g)}join(words2){return words2.join(" ")}static check(wordlist2){const words2=[];for(let i=0;i<2048;i++){const word=wordlist2.getWord(i);if(i!==wordlist2.getWordIndex(word)){return"0x"}words2.push(word)}return id(words2.join("\n")+"\n")}static register(lang,name){if(!name){name=lang.locale}}}const words="AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo";let wordlist=null;function loadWords(lang){if(wordlist!=null){return}wordlist=words.replace(/([A-Z])/g," $1").toLowerCase().substring(1).split(" ");if(Wordlist2.check(lang)!=="0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60"){wordlist=null;throw new Error("BIP39 Wordlist for en (English) FAILED")}}class LangEn2 extends Wordlist2{constructor(){super("en")}getWord(index){loadWords(this);return wordlist[index]}getWordIndex(word){loadWords(this);return wordlist.indexOf(word)}}const langEn=new LangEn2;Wordlist2.register(langEn);const wordlists={en:langEn};const version$9="hdnode/5.7.0";const logger$9=new Logger$3(version$9);const N$1=BigNumber$1.from("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141");const MasterSecret$1=toUtf8Bytes("Bitcoin seed");const HardenedBit$1=2147483648;function getUpperMask$1(bits){return(1<<bits)-1<<8-bits}function getLowerMask$1(bits){return(1<<bits)-1}function bytes32$1(value){return hexZeroPad$1(hexlify$1(value),32)}function base58check$1(data){return Base58.encode(concat$1([data,hexDataSlice$1(sha256(sha256(data)),0,4)]))}function getWordlist$1(wordlist2){if(wordlist2==null){return wordlists["en"]}if(typeof wordlist2==="string"){const words2=wordlists[wordlist2];if(words2==null){logger$9.throwArgumentError("unknown locale","wordlist",wordlist2)}return words2}return wordlist2}const _constructorGuard$1={};const defaultPath$1="m/44'/60'/0'/0/0";let HDNode$1=class HDNode{constructor(constructorGuard,privateKey,publicKey,parentFingerprint,chainCode,index,depth,mnemonicOrPath){if(constructorGuard!==_constructorGuard$1){throw new Error("HDNode constructor cannot be called directly")}if(privateKey){const signingKey=new SigningKey$1(privateKey);defineReadOnly$1(this,"privateKey",signingKey.privateKey);defineReadOnly$1(this,"publicKey",signingKey.compressedPublicKey)}else{defineReadOnly$1(this,"privateKey",null);defineReadOnly$1(this,"publicKey",hexlify$1(publicKey))}defineReadOnly$1(this,"parentFingerprint",parentFingerprint);defineReadOnly$1(this,"fingerprint",hexDataSlice$1(ripemd160(sha256(this.publicKey)),0,4));defineReadOnly$1(this,"address",computeAddress(this.publicKey));defineReadOnly$1(this,"chainCode",chainCode);defineReadOnly$1(this,"index",index);defineReadOnly$1(this,"depth",depth);if(mnemonicOrPath==null){defineReadOnly$1(this,"mnemonic",null);defineReadOnly$1(this,"path",null)}else if(typeof mnemonicOrPath==="string"){defineReadOnly$1(this,"mnemonic",null);defineReadOnly$1(this,"path",mnemonicOrPath)}else{defineReadOnly$1(this,"mnemonic",mnemonicOrPath);defineReadOnly$1(this,"path",mnemonicOrPath.path)}}get extendedKey(){if(this.depth>=256){throw new Error("Depth too large!")}return base58check$1(concat$1([this.privateKey!=null?"0x0488ADE4":"0x0488B21E",hexlify$1(this.depth),this.parentFingerprint,hexZeroPad$1(hexlify$1(this.index),4),this.chainCode,this.privateKey!=null?concat$1(["0x00",this.privateKey]):this.publicKey]))}neuter(){return new HDNode(_constructorGuard$1,null,this.publicKey,this.parentFingerprint,this.chainCode,this.index,this.depth,this.path)}_derive(index){if(index>4294967295){throw new Error("invalid index - "+String(index))}let path=this.path;if(path){path+="/"+(index&~HardenedBit$1)}const data=new Uint8Array(37);if(index&HardenedBit$1){if(!this.privateKey){throw new Error("cannot derive child of neutered node")}data.set(arrayify$1(this.privateKey),1);if(path){path+="'"}}else{data.set(arrayify$1(this.publicKey))}for(let i=24;i>=0;i-=8){data[33+(i>>3)]=index>>24-i&255}const I=arrayify$1(computeHmac(SupportedAlgorithm.sha512,this.chainCode,data));const IL=I.slice(0,32);const IR=I.slice(32);let ki=null;let Ki=null;if(this.privateKey){ki=bytes32$1(BigNumber$1.from(IL).add(this.privateKey).mod(N$1))}else{const ek=new SigningKey$1(hexlify$1(IL));Ki=ek._addPoint(this.publicKey)}let mnemonicOrPath=path;const srcMnemonic=this.mnemonic;if(srcMnemonic){mnemonicOrPath=Object.freeze({phrase:srcMnemonic.phrase,path:path,locale:srcMnemonic.locale||"en"})}return new HDNode(_constructorGuard$1,ki,Ki,this.fingerprint,bytes32$1(IR),index,this.depth+1,mnemonicOrPath)}derivePath(path){const components=path.split("/");if(components.length===0||components[0]==="m"&&this.depth!==0){throw new Error("invalid path - "+path)}if(components[0]==="m"){components.shift()}let result=this;for(let i=0;i<components.length;i++){const component=components[i];if(component.match(/^[0-9]+'$/)){const index=parseInt(component.substring(0,component.length-1));if(index>=HardenedBit$1){throw new Error("invalid path index - "+component)}result=result._derive(HardenedBit$1+index)}else if(component.match(/^[0-9]+$/)){const index=parseInt(component);if(index>=HardenedBit$1){throw new Error("invalid path index - "+component)}result=result._derive(index)}else{throw new Error("invalid path component - "+component)}}return result}static _fromSeed(seed,mnemonic){const seedArray=arrayify$1(seed);if(seedArray.length<16||seedArray.length>64){throw new Error("invalid seed")}const I=arrayify$1(computeHmac(SupportedAlgorithm.sha512,MasterSecret$1,seedArray));return new HDNode(_constructorGuard$1,bytes32$1(I.slice(0,32)),null,"0x00000000",bytes32$1(I.slice(32)),0,0,mnemonic)}static fromMnemonic(mnemonic,password,wordlist2){wordlist2=getWordlist$1(wordlist2);mnemonic=entropyToMnemonic$1(mnemonicToEntropy$1(mnemonic,wordlist2),wordlist2);return HDNode._fromSeed(mnemonicToSeed$1(mnemonic,password),{phrase:mnemonic,path:"m",locale:wordlist2.locale})}static fromSeed(seed){return HDNode._fromSeed(seed,null)}static fromExtendedKey(extendedKey){const bytes2=Base58.decode(extendedKey);if(bytes2.length!==82||base58check$1(bytes2.slice(0,78))!==extendedKey){logger$9.throwArgumentError("invalid extended key","extendedKey","[REDACTED]")}const depth=bytes2[4];const parentFingerprint=hexlify$1(bytes2.slice(5,9));const index=parseInt(hexlify$1(bytes2.slice(9,13)).substring(2),16);const chainCode=hexlify$1(bytes2.slice(13,45));const key2=bytes2.slice(45,78);switch(hexlify$1(bytes2.slice(0,4))){case"0x0488b21e":case"0x043587cf":return new HDNode(_constructorGuard$1,null,hexlify$1(key2),parentFingerprint,chainCode,index,depth,null);case"0x0488ade4":case"0x04358394 ":if(key2[0]!==0){break}return new HDNode(_constructorGuard$1,hexlify$1(key2.slice(1)),null,parentFingerprint,chainCode,index,depth,null)}return logger$9.throwArgumentError("invalid extended key","extendedKey","[REDACTED]")}};function mnemonicToSeed$1(mnemonic,password){if(!password){password=""}const salt=toUtf8Bytes("mnemonic"+password,UnicodeNormalizationForm.NFKD);return pbkdf2$1(toUtf8Bytes(mnemonic,UnicodeNormalizationForm.NFKD),salt,2048,64,"sha512")}function mnemonicToEntropy$1(mnemonic,wordlist2){wordlist2=getWordlist$1(wordlist2);logger$9.checkNormalize();const words2=wordlist2.split(mnemonic);if(words2.length%3!==0){throw new Error("invalid mnemonic")}const entropy=arrayify$1(new Uint8Array(Math.ceil(11*words2.length/8)));let offset=0;for(let i=0;i<words2.length;i++){let index=wordlist2.getWordIndex(words2[i].normalize("NFKD"));if(index===-1){throw new Error("invalid mnemonic")}for(let bit=0;bit<11;bit++){if(index&1<<10-bit){entropy[offset>>3]|=1<<7-offset%8}offset++}}const entropyBits=32*words2.length/3;const checksumBits=words2.length/3;const checksumMask=getUpperMask$1(checksumBits);const checksum2=arrayify$1(sha256(entropy.slice(0,entropyBits/8)))[0]&checksumMask;if(checksum2!==(entropy[entropy.length-1]&checksumMask)){throw new Error("invalid checksum")}return hexlify$1(entropy.slice(0,entropyBits/8))}function entropyToMnemonic$1(entropy,wordlist2){wordlist2=getWordlist$1(wordlist2);entropy=arrayify$1(entropy);if(entropy.length%4!==0||entropy.length<16||entropy.length>32){throw new Error("invalid entropy")}const indices=[0];let remainingBits=11;for(let i=0;i<entropy.length;i++){if(remainingBits>8){indices[indices.length-1]<<=8;indices[indices.length-1]|=entropy[i];remainingBits-=8}else{indices[indices.length-1]<<=remainingBits;indices[indices.length-1]|=entropy[i]>>8-remainingBits;indices.push(entropy[i]&getLowerMask$1(8-remainingBits));remainingBits+=3}}const checksumBits=entropy.length/4;const checksum2=arrayify$1(sha256(entropy))[0]&getUpperMask$1(checksumBits);indices[indices.length-1]<<=checksumBits;indices[indices.length-1]|=checksum2>>8-checksumBits;return wordlist2.join(indices.map(index=>wordlist2.getWord(index)))}const version$8="random/5.7.0";const logger$8=new Logger$3(version$8);function getGlobal$1(){if(typeof self!=="undefined"){return self}if(typeof window!=="undefined"){return window}if(typeof global!=="undefined"){return global}throw new Error("unable to locate global object")}const anyGlobal$1=getGlobal$1();let crypto$2=anyGlobal$1.crypto||anyGlobal$1.msCrypto;if(!crypto$2||!crypto$2.getRandomValues){logger$8.warn("WARNING: Missing strong random number source");crypto$2={getRandomValues:function(buffer){return logger$8.throwError("no secure random source avaialble",Logger$3.errors.UNSUPPORTED_OPERATION,{operation:"crypto.getRandomValues"})}}}function randomBytes$1(length){const result=new Uint8Array(length);crypto$2.getRandomValues(result);return arrayify$1(result)}function createCommonjsModule(fn,basedir,module2){return module2={path:basedir,exports:{},require:function(path,base2){return commonjsRequire(path,base2===void 0||base2===null?module2.path:base2)}},fn(module2,module2.exports),module2.exports}function commonjsRequire(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}var minimalisticAssert=assert;function assert(val,msg){if(!val)throw new Error(msg||"Assertion failed")}assert.equal=function assertEqual2(l,r,msg){if(l!=r)throw new Error(msg||"Assertion failed: "+l+" != "+r)};var utils_1=createCommonjsModule(function(module2,exports2){var utils2=exports2;function toArray2(msg,enc){if(Array.isArray(msg))return msg.slice();if(!msg)return[];var res=[];if(typeof msg!=="string"){for(var i=0;i<msg.length;i++)res[i]=msg[i]|0;return res}if(enc==="hex"){msg=msg.replace(/[^a-z0-9]+/gi,"");if(msg.length%2!==0)msg="0"+msg;for(var i=0;i<msg.length;i+=2)res.push(parseInt(msg[i]+msg[i+1],16))}else{for(var i=0;i<msg.length;i++){var c=msg.charCodeAt(i);var hi=c>>8;var lo=c&255;if(hi)res.push(hi,lo);else res.push(lo)}}return res}utils2.toArray=toArray2;function zero2(word){if(word.length===1)return"0"+word;else return word}utils2.zero2=zero2;function toHex2(msg){var res="";for(var i=0;i<msg.length;i++)res+=zero2(msg[i].toString(16));return res}utils2.toHex=toHex2;utils2.encode=function encode4(arr,enc){if(enc==="hex")return toHex2(arr);else return arr}});var utils_1$1=createCommonjsModule(function(module2,exports2){var utils2=exports2;utils2.assert=minimalisticAssert;utils2.toArray=utils_1.toArray;utils2.zero2=utils_1.zero2;utils2.toHex=utils_1.toHex;utils2.encode=utils_1.encode;function getNAF2(num,w,bits){var naf=new Array(Math.max(num.bitLength(),bits)+1);naf.fill(0);var ws=1<<w+1;var k=num.clone();for(var i=0;i<naf.length;i++){var z;var mod2=k.andln(ws-1);if(k.isOdd()){if(mod2>(ws>>1)-1)z=(ws>>1)-mod2;else z=mod2;k.isubn(z)}else{z=0}naf[i]=z;k.iushrn(1)}return naf}utils2.getNAF=getNAF2;function getJSF2(k1,k2){var jsf=[[],[]];k1=k1.clone();k2=k2.clone();var d1=0;var d2=0;var m8;while(k1.cmpn(-d1)>0||k2.cmpn(-d2)>0){var m14=k1.andln(3)+d1&3;var m24=k2.andln(3)+d2&3;if(m14===3)m14=-1;if(m24===3)m24=-1;var u1;if((m14&1)===0){u1=0}else{m8=k1.andln(7)+d1&7;if((m8===3||m8===5)&&m24===2)u1=-m14;else u1=m14}jsf[0].push(u1);var u2;if((m24&1)===0){u2=0}else{m8=k2.andln(7)+d2&7;if((m8===3||m8===5)&&m14===2)u2=-m24;else u2=m24}jsf[1].push(u2);if(2*d1===u1+1)d1=1-d1;if(2*d2===u2+1)d2=1-d2;k1.iushrn(1);k2.iushrn(1)}return jsf}utils2.getJSF=getJSF2;function cachedProperty(obj,name,computer){var key2="_"+name;obj.prototype[name]=function cachedProperty2(){return this[key2]!==void 0?this[key2]:this[key2]=computer.call(this)}}utils2.cachedProperty=cachedProperty;function parseBytes(bytes2){return typeof bytes2==="string"?utils2.toArray(bytes2,"hex"):bytes2}utils2.parseBytes=parseBytes;function intFromLE(bytes2){return new BN$1(bytes2,"hex","le")}utils2.intFromLE=intFromLE});var getNAF=utils_1$1.getNAF;var getJSF=utils_1$1.getJSF;var assert$1=utils_1$1.assert;function BaseCurve(type,conf){this.type=type;this.p=new BN$1(conf.p,16);this.red=conf.prime?BN$1.red(conf.prime):BN$1.mont(this.p);this.zero=new BN$1(0).toRed(this.red);this.one=new BN$1(1).toRed(this.red);this.two=new BN$1(2).toRed(this.red);this.n=conf.n&&new BN$1(conf.n,16);this.g=conf.g&&this.pointFromJSON(conf.g,conf.gRed);this._wnafT1=new Array(4);this._wnafT2=new Array(4);this._wnafT3=new Array(4);this._wnafT4=new Array(4);this._bitLength=this.n?this.n.bitLength():0;var adjustCount=this.n&&this.p.div(this.n);if(!adjustCount||adjustCount.cmpn(100)>0){this.redN=null}else{this._maxwellTrick=true;this.redN=this.n.toRed(this.red)}}var base=BaseCurve;BaseCurve.prototype.point=function point3(){throw new Error("Not implemented")};BaseCurve.prototype.validate=function validate5(){throw new Error("Not implemented")};BaseCurve.prototype._fixedNafMul=function _fixedNafMul2(p,k){assert$1(p.precomputed);var doubles=p._getDoubles();var naf=getNAF(k,1,this._bitLength);var I=(1<<doubles.step+1)-(doubles.step%2===0?2:1);I/=3;var repr=[];var j;var nafW;for(j=0;j<naf.length;j+=doubles.step){nafW=0;for(var l=j+doubles.step-1;l>=j;l--)nafW=(nafW<<1)+naf[l];repr.push(nafW)}var a=this.jpoint(null,null,null);var b2=this.jpoint(null,null,null);for(var i=I;i>0;i--){for(j=0;j<repr.length;j++){nafW=repr[j];if(nafW===i)b2=b2.mixedAdd(doubles.points[j]);else if(nafW===-i)b2=b2.mixedAdd(doubles.points[j].neg())}a=a.add(b2)}return a.toP()};BaseCurve.prototype._wnafMul=function _wnafMul2(p,k){var w=4;var nafPoints=p._getNAFPoints(w);w=nafPoints.wnd;var wnd=nafPoints.points;var naf=getNAF(k,w,this._bitLength);var acc=this.jpoint(null,null,null);for(var i=naf.length-1;i>=0;i--){for(var l=0;i>=0&&naf[i]===0;i--)l++;if(i>=0)l++;acc=acc.dblp(l);if(i<0)break;var z=naf[i];assert$1(z!==0);if(p.type==="affine"){if(z>0)acc=acc.mixedAdd(wnd[z-1>>1]);else acc=acc.mixedAdd(wnd[-z-1>>1].neg())}else{if(z>0)acc=acc.add(wnd[z-1>>1]);else acc=acc.add(wnd[-z-1>>1].neg())}}return p.type==="affine"?acc.toP():acc};BaseCurve.prototype._wnafMulAdd=function _wnafMulAdd2(defW,points,coeffs,len,jacobianResult){var wndWidth=this._wnafT1;var wnd=this._wnafT2;var naf=this._wnafT3;var max=0;var i;var j;var p;for(i=0;i<len;i++){p=points[i];var nafPoints=p._getNAFPoints(defW);wndWidth[i]=nafPoints.wnd;wnd[i]=nafPoints.points}for(i=len-1;i>=1;i-=2){var a=i-1;var b2=i;if(wndWidth[a]!==1||wndWidth[b2]!==1){naf[a]=getNAF(coeffs[a],wndWidth[a],this._bitLength);naf[b2]=getNAF(coeffs[b2],wndWidth[b2],this._bitLength);max=Math.max(naf[a].length,max);max=Math.max(naf[b2].length,max);continue}var comb=[points[a],null,null,points[b2]];if(points[a].y.cmp(points[b2].y)===0){comb[1]=points[a].add(points[b2]);comb[2]=points[a].toJ().mixedAdd(points[b2].neg())}else if(points[a].y.cmp(points[b2].y.redNeg())===0){comb[1]=points[a].toJ().mixedAdd(points[b2]);comb[2]=points[a].add(points[b2].neg())}else{comb[1]=points[a].toJ().mixedAdd(points[b2]);comb[2]=points[a].toJ().mixedAdd(points[b2].neg())}var index=[-3,-1,-5,-7,0,7,5,1,3];var jsf=getJSF(coeffs[a],coeffs[b2]);max=Math.max(jsf[0].length,max);naf[a]=new Array(max);naf[b2]=new Array(max);for(j=0;j<max;j++){var ja=jsf[0][j]|0;var jb=jsf[1][j]|0;naf[a][j]=index[(ja+1)*3+(jb+1)];naf[b2][j]=0;wnd[a]=comb}}var acc=this.jpoint(null,null,null);var tmp=this._wnafT4;for(i=max;i>=0;i--){var k=0;while(i>=0){var zero=true;for(j=0;j<len;j++){tmp[j]=naf[j][i]|0;if(tmp[j]!==0)zero=false}if(!zero)break;k++;i--}if(i>=0)k++;acc=acc.dblp(k);if(i<0)break;for(j=0;j<len;j++){var z=tmp[j];if(z===0)continue;else if(z>0)p=wnd[j][z-1>>1];else if(z<0)p=wnd[j][-z-1>>1].neg();if(p.type==="affine")acc=acc.mixedAdd(p);else acc=acc.add(p)}}for(i=0;i<len;i++)wnd[i]=null;if(jacobianResult)return acc;else return acc.toP()};function BasePoint(curve,type){this.curve=curve;this.type=type;this.precomputed=null}BaseCurve.BasePoint=BasePoint;BasePoint.prototype.eq=function eq4(){throw new Error("Not implemented")};BasePoint.prototype.validate=function validate6(){return this.curve.validate(this)};BaseCurve.prototype.decodePoint=function decodePoint2(bytes2,enc){bytes2=utils_1$1.toArray(bytes2,enc);var len=this.p.byteLength();if((bytes2[0]===4||bytes2[0]===6||bytes2[0]===7)&&bytes2.length-1===2*len){if(bytes2[0]===6)assert$1(bytes2[bytes2.length-1]%2===0);else if(bytes2[0]===7)assert$1(bytes2[bytes2.length-1]%2===1);var res=this.point(bytes2.slice(1,1+len),bytes2.slice(1+len,1+2*len));return res}else if((bytes2[0]===2||bytes2[0]===3)&&bytes2.length-1===len){return this.pointFromX(bytes2.slice(1,1+len),bytes2[0]===3)}throw new Error("Unknown point format")};BasePoint.prototype.encodeCompressed=function encodeCompressed2(enc){return this.encode(enc,true)};BasePoint.prototype._encode=function _encode3(compact){var len=this.curve.p.byteLength();var x=this.getX().toArray("be",len);if(compact)return[this.getY().isEven()?2:3].concat(x);return[4].concat(x,this.getY().toArray("be",len))};BasePoint.prototype.encode=function encode3(enc,compact){return utils_1$1.encode(this._encode(compact),enc)};BasePoint.prototype.precompute=function precompute2(power){if(this.precomputed)return this;var precomputed={doubles:null,naf:null,beta:null};precomputed.naf=this._getNAFPoints(8);precomputed.doubles=this._getDoubles(4,power);precomputed.beta=this._getBeta();this.precomputed=precomputed;return this};BasePoint.prototype._hasDoubles=function _hasDoubles2(k){if(!this.precomputed)return false;var doubles=this.precomputed.doubles;if(!doubles)return false;return doubles.points.length>=Math.ceil((k.bitLength()+1)/doubles.step)};BasePoint.prototype._getDoubles=function _getDoubles2(step,power){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;var doubles=[this];var acc=this;for(var i=0;i<power;i+=step){for(var j=0;j<step;j++)acc=acc.dbl();doubles.push(acc)}return{step:step,points:doubles}};BasePoint.prototype._getNAFPoints=function _getNAFPoints2(wnd){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;var res=[this];var max=(1<<wnd)-1;var dbl5=max===1?null:this.dbl();for(var i=1;i<max;i++)res[i]=res[i-1].add(dbl5);return{wnd:wnd,points:res}};BasePoint.prototype._getBeta=function _getBeta3(){return null};BasePoint.prototype.dblp=function dblp3(k){var r=this;for(var i=0;i<k;i++)r=r.dbl();return r};var inherits_browser=createCommonjsModule(function(module2){if(typeof Object.create==="function"){module2.exports=function inherits2(ctor,superCtor){if(superCtor){ctor.super_=superCtor;ctor.prototype=Object.create(superCtor.prototype,{constructor:{value:ctor,enumerable:false,writable:true,configurable:true}})}}}else{module2.exports=function inherits2(ctor,superCtor){if(superCtor){ctor.super_=superCtor;var TempCtor=function(){};TempCtor.prototype=superCtor.prototype;ctor.prototype=new TempCtor;ctor.prototype.constructor=ctor}}}});var assert$2=utils_1$1.assert;function ShortCurve(conf){base.call(this,"short",conf);this.a=new BN$1(conf.a,16).toRed(this.red);this.b=new BN$1(conf.b,16).toRed(this.red);this.tinv=this.two.redInvm();this.zeroA=this.a.fromRed().cmpn(0)===0;this.threeA=this.a.fromRed().sub(this.p).cmpn(-3)===0;this.endo=this._getEndomorphism(conf);this._endoWnafT1=new Array(4);this._endoWnafT2=new Array(4)}inherits_browser(ShortCurve,base);var short_1=ShortCurve;ShortCurve.prototype._getEndomorphism=function _getEndomorphism2(conf){if(!this.zeroA||!this.g||!this.n||this.p.modn(3)!==1)return;var beta;var lambda;if(conf.beta){beta=new BN$1(conf.beta,16).toRed(this.red)}else{var betas=this._getEndoRoots(this.p);beta=betas[0].cmp(betas[1])<0?betas[0]:betas[1];beta=beta.toRed(this.red)}if(conf.lambda){lambda=new BN$1(conf.lambda,16)}else{var lambdas=this._getEndoRoots(this.n);if(this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta))===0){lambda=lambdas[0]}else{lambda=lambdas[1];assert$2(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta))===0)}}var basis;if(conf.basis){basis=conf.basis.map(function(vec){return{a:new BN$1(vec.a,16),b:new BN$1(vec.b,16)}})}else{basis=this._getEndoBasis(lambda)}return{beta:beta,lambda:lambda,basis:basis}};ShortCurve.prototype._getEndoRoots=function _getEndoRoots2(num){var red=num===this.p?this.red:BN$1.mont(num);var tinv=new BN$1(2).toRed(red).redInvm();var ntinv=tinv.redNeg();var s=new BN$1(3).toRed(red).redNeg().redSqrt().redMul(tinv);var l1=ntinv.redAdd(s).fromRed();var l2=ntinv.redSub(s).fromRed();return[l1,l2]};ShortCurve.prototype._getEndoBasis=function _getEndoBasis2(lambda){var aprxSqrt=this.n.ushrn(Math.floor(this.n.bitLength()/2));var u=lambda;var v=this.n.clone();var x1=new BN$1(1);var y1=new BN$1(0);var x2=new BN$1(0);var y2=new BN$1(1);var a0;var b0;var a1;var b1;var a2;var b2;var prevR;var i=0;var r;var x;while(u.cmpn(0)!==0){var q=v.div(u);r=v.sub(q.mul(u));x=x2.sub(q.mul(x1));var y=y2.sub(q.mul(y1));if(!a1&&r.cmp(aprxSqrt)<0){a0=prevR.neg();b0=x1;a1=r.neg();b1=x}else if(a1&&++i===2){break}prevR=r;v=u;u=r;x2=x1;x1=x;y2=y1;y1=y}a2=r.neg();b2=x;var len1=a1.sqr().add(b1.sqr());var len2=a2.sqr().add(b2.sqr());if(len2.cmp(len1)>=0){a2=a0;b2=b0}if(a1.negative){a1=a1.neg();b1=b1.neg()}if(a2.negative){a2=a2.neg();b2=b2.neg()}return[{a:a1,b:b1},{a:a2,b:b2}]};ShortCurve.prototype._endoSplit=function _endoSplit2(k){var basis=this.endo.basis;var v1=basis[0];var v2=basis[1];var c1=v2.b.mul(k).divRound(this.n);var c2=v1.b.neg().mul(k).divRound(this.n);var p1=c1.mul(v1.a);var p2=c2.mul(v2.a);var q1=c1.mul(v1.b);var q2=c2.mul(v2.b);var k1=k.sub(p1).sub(p2);var k2=q1.add(q2).neg();return{k1:k1,k2:k2}};ShortCurve.prototype.pointFromX=function pointFromX2(x,odd){x=new BN$1(x,16);if(!x.red)x=x.toRed(this.red);var y2=x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);var y=y2.redSqrt();if(y.redSqr().redSub(y2).cmp(this.zero)!==0)throw new Error("invalid point");var isOdd=y.fromRed().isOdd();if(odd&&!isOdd||!odd&&isOdd)y=y.redNeg();return this.point(x,y)};ShortCurve.prototype.validate=function validate7(point5){if(point5.inf)return true;var x=point5.x;var y=point5.y;var ax=this.a.redMul(x);var rhs=x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);return y.redSqr().redISub(rhs).cmpn(0)===0};ShortCurve.prototype._endoWnafMulAdd=function _endoWnafMulAdd2(points,coeffs,jacobianResult){var npoints=this._endoWnafT1;var ncoeffs=this._endoWnafT2;for(var i=0;i<points.length;i++){var split2=this._endoSplit(coeffs[i]);var p=points[i];var beta=p._getBeta();if(split2.k1.negative){split2.k1.ineg();p=p.neg(true)}if(split2.k2.negative){split2.k2.ineg();beta=beta.neg(true)}npoints[i*2]=p;npoints[i*2+1]=beta;ncoeffs[i*2]=split2.k1;ncoeffs[i*2+1]=split2.k2}var res=this._wnafMulAdd(1,npoints,ncoeffs,i*2,jacobianResult);for(var j=0;j<i*2;j++){npoints[j]=null;ncoeffs[j]=null}return res};function Point(curve,x,y,isRed){base.BasePoint.call(this,curve,"affine");if(x===null&&y===null){this.x=null;this.y=null;this.inf=true}else{this.x=new BN$1(x,16);this.y=new BN$1(y,16);if(isRed){this.x.forceRed(this.curve.red);this.y.forceRed(this.curve.red)}if(!this.x.red)this.x=this.x.toRed(this.curve.red);if(!this.y.red)this.y=this.y.toRed(this.curve.red);this.inf=false}}inherits_browser(Point,base.BasePoint);ShortCurve.prototype.point=function point4(x,y,isRed){return new Point(this,x,y,isRed)};ShortCurve.prototype.pointFromJSON=function pointFromJSON2(obj,red){return Point.fromJSON(this,obj,red)};Point.prototype._getBeta=function _getBeta4(){if(!this.curve.endo)return;var pre=this.precomputed;if(pre&&pre.beta)return pre.beta;var beta=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(pre){var curve=this.curve;var endoMul=function(p){return curve.point(p.x.redMul(curve.endo.beta),p.y)};pre.beta=beta;beta.precomputed={beta:null,naf:pre.naf&&{wnd:pre.naf.wnd,points:pre.naf.points.map(endoMul)},doubles:pre.doubles&&{step:pre.doubles.step,points:pre.doubles.points.map(endoMul)}}}return beta};Point.prototype.toJSON=function toJSON3(){if(!this.precomputed)return[this.x,this.y];return[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]};Point.fromJSON=function fromJSON2(curve,obj,red){if(typeof obj==="string")obj=JSON.parse(obj);var res=curve.point(obj[0],obj[1],red);if(!obj[2])return res;function obj2point(obj2){return curve.point(obj2[0],obj2[1],red)}var pre=obj[2];res.precomputed={beta:null,doubles:pre.doubles&&{step:pre.doubles.step,points:[res].concat(pre.doubles.points.map(obj2point))},naf:pre.naf&&{wnd:pre.naf.wnd,points:[res].concat(pre.naf.points.map(obj2point))}};return res};Point.prototype.inspect=function inspect4(){if(this.isInfinity())return"<EC Point Infinity>";return"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+">"};Point.prototype.isInfinity=function isInfinity3(){return this.inf};Point.prototype.add=function add4(p){if(this.inf)return p;if(p.inf)return this;if(this.eq(p))return this.dbl();if(this.neg().eq(p))return this.curve.point(null,null);if(this.x.cmp(p.x)===0)return this.curve.point(null,null);var c=this.y.redSub(p.y);if(c.cmpn(0)!==0)c=c.redMul(this.x.redSub(p.x).redInvm());var nx=c.redSqr().redISub(this.x).redISub(p.x);var ny=c.redMul(this.x.redSub(nx)).redISub(this.y);return this.curve.point(nx,ny)};Point.prototype.dbl=function dbl3(){if(this.inf)return this;var ys1=this.y.redAdd(this.y);if(ys1.cmpn(0)===0)return this.curve.point(null,null);var a=this.curve.a;var x2=this.x.redSqr();var dyinv=ys1.redInvm();var c=x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);var nx=c.redSqr().redISub(this.x.redAdd(this.x));var ny=c.redMul(this.x.redSub(nx)).redISub(this.y);return this.curve.point(nx,ny)};Point.prototype.getX=function getX2(){return this.x.fromRed()};Point.prototype.getY=function getY2(){return this.y.fromRed()};Point.prototype.mul=function mul3(k){k=new BN$1(k,16);if(this.isInfinity())return this;else if(this._hasDoubles(k))return this.curve._fixedNafMul(this,k);else if(this.curve.endo)return this.curve._endoWnafMulAdd([this],[k]);else return this.curve._wnafMul(this,k)};Point.prototype.mulAdd=function mulAdd2(k1,p2,k2){var points=[this,p2];var coeffs=[k1,k2];if(this.curve.endo)return this.curve._endoWnafMulAdd(points,coeffs);else return this.curve._wnafMulAdd(1,points,coeffs,2)};Point.prototype.jmulAdd=function jmulAdd2(k1,p2,k2){var points=[this,p2];var coeffs=[k1,k2];if(this.curve.endo)return this.curve._endoWnafMulAdd(points,coeffs,true);else return this.curve._wnafMulAdd(1,points,coeffs,2,true)};Point.prototype.eq=function eq5(p){return this===p||this.inf===p.inf&&(this.inf||this.x.cmp(p.x)===0&&this.y.cmp(p.y)===0)};Point.prototype.neg=function neg3(_precompute){if(this.inf)return this;var res=this.curve.point(this.x,this.y.redNeg());if(_precompute&&this.precomputed){var pre=this.precomputed;var negate=function(p){return p.neg()};res.precomputed={naf:pre.naf&&{wnd:pre.naf.wnd,points:pre.naf.points.map(negate)},doubles:pre.doubles&&{step:pre.doubles.step,points:pre.doubles.points.map(negate)}}}return res};Point.prototype.toJ=function toJ2(){if(this.inf)return this.curve.jpoint(null,null,null);var res=this.curve.jpoint(this.x,this.y,this.curve.one);return res};function JPoint(curve,x,y,z){base.BasePoint.call(this,curve,"jacobian");if(x===null&&y===null&&z===null){this.x=this.curve.one;this.y=this.curve.one;this.z=new BN$1(0)}else{this.x=new BN$1(x,16);this.y=new BN$1(y,16);this.z=new BN$1(z,16)}if(!this.x.red)this.x=this.x.toRed(this.curve.red);if(!this.y.red)this.y=this.y.toRed(this.curve.red);if(!this.z.red)this.z=this.z.toRed(this.curve.red);this.zOne=this.z===this.curve.one}inherits_browser(JPoint,base.BasePoint);ShortCurve.prototype.jpoint=function jpoint2(x,y,z){return new JPoint(this,x,y,z)};JPoint.prototype.toP=function toP2(){if(this.isInfinity())return this.curve.point(null,null);var zinv=this.z.redInvm();var zinv2=zinv.redSqr();var ax=this.x.redMul(zinv2);var ay=this.y.redMul(zinv2).redMul(zinv);return this.curve.point(ax,ay)};JPoint.prototype.neg=function neg4(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)};JPoint.prototype.add=function add5(p){if(this.isInfinity())return p;if(p.isInfinity())return this;var pz2=p.z.redSqr();var z2=this.z.redSqr();var u1=this.x.redMul(pz2);var u2=p.x.redMul(z2);var s1=this.y.redMul(pz2.redMul(p.z));var s2=p.y.redMul(z2.redMul(this.z));var h=u1.redSub(u2);var r=s1.redSub(s2);if(h.cmpn(0)===0){if(r.cmpn(0)!==0)return this.curve.jpoint(null,null,null);else return this.dbl()}var h2=h.redSqr();var h3=h2.redMul(h);var v=u1.redMul(h2);var nx=r.redSqr().redIAdd(h3).redISub(v).redISub(v);var ny=r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));var nz=this.z.redMul(p.z).redMul(h);return this.curve.jpoint(nx,ny,nz)};JPoint.prototype.mixedAdd=function mixedAdd2(p){if(this.isInfinity())return p.toJ();if(p.isInfinity())return this;var z2=this.z.redSqr();var u1=this.x;var u2=p.x.redMul(z2);var s1=this.y;var s2=p.y.redMul(z2).redMul(this.z);var h=u1.redSub(u2);var r=s1.redSub(s2);if(h.cmpn(0)===0){if(r.cmpn(0)!==0)return this.curve.jpoint(null,null,null);else return this.dbl()}var h2=h.redSqr();var h3=h2.redMul(h);var v=u1.redMul(h2);var nx=r.redSqr().redIAdd(h3).redISub(v).redISub(v);var ny=r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));var nz=this.z.redMul(h);return this.curve.jpoint(nx,ny,nz)};JPoint.prototype.dblp=function dblp4(pow3){if(pow3===0)return this;if(this.isInfinity())return this;if(!pow3)return this.dbl();var i;if(this.curve.zeroA||this.curve.threeA){var r=this;for(i=0;i<pow3;i++)r=r.dbl();return r}var a=this.curve.a;var tinv=this.curve.tinv;var jx=this.x;var jy=this.y;var jz=this.z;var jz4=jz.redSqr().redSqr();var jyd=jy.redAdd(jy);for(i=0;i<pow3;i++){var jx2=jx.redSqr();var jyd2=jyd.redSqr();var jyd4=jyd2.redSqr();var c=jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));var t1=jx.redMul(jyd2);var nx=c.redSqr().redISub(t1.redAdd(t1));var t2=t1.redISub(nx);var dny=c.redMul(t2);dny=dny.redIAdd(dny).redISub(jyd4);var nz=jyd.redMul(jz);if(i+1<pow3)jz4=jz4.redMul(jyd4);jx=nx;jz=nz;jyd=dny}return this.curve.jpoint(jx,jyd.redMul(tinv),jz)};JPoint.prototype.dbl=function dbl4(){if(this.isInfinity())return this;if(this.curve.zeroA)return this._zeroDbl();else if(this.curve.threeA)return this._threeDbl();else return this._dbl()};JPoint.prototype._zeroDbl=function _zeroDbl2(){var nx;var ny;var nz;if(this.zOne){var xx=this.x.redSqr();var yy=this.y.redSqr();var yyyy=yy.redSqr();var s=this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);s=s.redIAdd(s);var m=xx.redAdd(xx).redIAdd(xx);var t=m.redSqr().redISub(s).redISub(s);var yyyy8=yyyy.redIAdd(yyyy);yyyy8=yyyy8.redIAdd(yyyy8);yyyy8=yyyy8.redIAdd(yyyy8);nx=t;ny=m.redMul(s.redISub(t)).redISub(yyyy8);nz=this.y.redAdd(this.y)}else{var a=this.x.redSqr();var b2=this.y.redSqr();var c=b2.redSqr();var d=this.x.redAdd(b2).redSqr().redISub(a).redISub(c);d=d.redIAdd(d);var e=a.redAdd(a).redIAdd(a);var f2=e.redSqr();var c8=c.redIAdd(c);c8=c8.redIAdd(c8);c8=c8.redIAdd(c8);nx=f2.redISub(d).redISub(d);ny=e.redMul(d.redISub(nx)).redISub(c8);nz=this.y.redMul(this.z);nz=nz.redIAdd(nz)}return this.curve.jpoint(nx,ny,nz)};JPoint.prototype._threeDbl=function _threeDbl2(){var nx;var ny;var nz;if(this.zOne){var xx=this.x.redSqr();var yy=this.y.redSqr();var yyyy=yy.redSqr();var s=this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);s=s.redIAdd(s);var m=xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);var t=m.redSqr().redISub(s).redISub(s);nx=t;var yyyy8=yyyy.redIAdd(yyyy);yyyy8=yyyy8.redIAdd(yyyy8);yyyy8=yyyy8.redIAdd(yyyy8);ny=m.redMul(s.redISub(t)).redISub(yyyy8);nz=this.y.redAdd(this.y)}else{var delta=this.z.redSqr();var gamma=this.y.redSqr();var beta=this.x.redMul(gamma);var alpha=this.x.redSub(delta).redMul(this.x.redAdd(delta));alpha=alpha.redAdd(alpha).redIAdd(alpha);var beta4=beta.redIAdd(beta);beta4=beta4.redIAdd(beta4);var beta8=beta4.redAdd(beta4);nx=alpha.redSqr().redISub(beta8);nz=this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);var ggamma8=gamma.redSqr();ggamma8=ggamma8.redIAdd(ggamma8);ggamma8=ggamma8.redIAdd(ggamma8);ggamma8=ggamma8.redIAdd(ggamma8);ny=alpha.redMul(beta4.redISub(nx)).redISub(ggamma8)}return this.curve.jpoint(nx,ny,nz)};JPoint.prototype._dbl=function _dbl2(){var a=this.curve.a;var jx=this.x;var jy=this.y;var jz=this.z;var jz4=jz.redSqr().redSqr();var jx2=jx.redSqr();var jy2=jy.redSqr();var c=jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));var jxd4=jx.redAdd(jx);jxd4=jxd4.redIAdd(jxd4);var t1=jxd4.redMul(jy2);var nx=c.redSqr().redISub(t1.redAdd(t1));var t2=t1.redISub(nx);var jyd8=jy2.redSqr();jyd8=jyd8.redIAdd(jyd8);jyd8=jyd8.redIAdd(jyd8);jyd8=jyd8.redIAdd(jyd8);var ny=c.redMul(t2).redISub(jyd8);var nz=jy.redAdd(jy).redMul(jz);return this.curve.jpoint(nx,ny,nz)};JPoint.prototype.trpl=function trpl2(){if(!this.curve.zeroA)return this.dbl().add(this);var xx=this.x.redSqr();var yy=this.y.redSqr();var zz=this.z.redSqr();var yyyy=yy.redSqr();var m=xx.redAdd(xx).redIAdd(xx);var mm=m.redSqr();var e=this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);e=e.redIAdd(e);e=e.redAdd(e).redIAdd(e);e=e.redISub(mm);var ee=e.redSqr();var t=yyyy.redIAdd(yyyy);t=t.redIAdd(t);t=t.redIAdd(t);t=t.redIAdd(t);var u=m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);var yyu4=yy.redMul(u);yyu4=yyu4.redIAdd(yyu4);yyu4=yyu4.redIAdd(yyu4);var nx=this.x.redMul(ee).redISub(yyu4);nx=nx.redIAdd(nx);nx=nx.redIAdd(nx);var ny=this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));ny=ny.redIAdd(ny);ny=ny.redIAdd(ny);ny=ny.redIAdd(ny);var nz=this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);return this.curve.jpoint(nx,ny,nz)};JPoint.prototype.mul=function mul4(k,kbase){k=new BN$1(k,kbase);return this.curve._wnafMul(this,k)};JPoint.prototype.eq=function eq6(p){if(p.type==="affine")return this.eq(p.toJ());if(this===p)return true;var z2=this.z.redSqr();var pz2=p.z.redSqr();if(this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0)!==0)return false;var z3=z2.redMul(this.z);var pz3=pz2.redMul(p.z);return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0)===0};JPoint.prototype.eqXToP=function eqXToP2(x){var zs=this.z.redSqr();var rx=x.toRed(this.curve.red).redMul(zs);if(this.x.cmp(rx)===0)return true;var xc=x.clone();var t=this.curve.redN.redMul(zs);for(;;){xc.iadd(this.curve.n);if(xc.cmp(this.curve.p)>=0)return false;rx.redIAdd(t);if(this.x.cmp(rx)===0)return true}};JPoint.prototype.inspect=function inspect5(){if(this.isInfinity())return"<EC JPoint Infinity>";return"<EC JPoint x: "+this.x.toString(16,2)+" y: "+this.y.toString(16,2)+" z: "+this.z.toString(16,2)+">"};JPoint.prototype.isInfinity=function isInfinity4(){return this.z.cmpn(0)===0};var curve_1=createCommonjsModule(function(module2,exports2){var curve=exports2;curve.base=base;curve.short=short_1;curve.mont=null;curve.edwards=null});var curves_1=createCommonjsModule(function(module2,exports2){var curves=exports2;var assert2=utils_1$1.assert;function PresetCurve(options){if(options.type==="short")this.curve=new curve_1.short(options);else if(options.type==="edwards")this.curve=new curve_1.edwards(options);else this.curve=new curve_1.mont(options);this.g=this.curve.g;this.n=this.curve.n;this.hash=options.hash;assert2(this.g.validate(),"Invalid curve");assert2(this.g.mul(this.n).isInfinity(),"Invalid curve, G*N != O")}curves.PresetCurve=PresetCurve;function defineCurve(name,options){Object.defineProperty(curves,name,{configurable:true,enumerable:true,get:function(){var curve=new PresetCurve(options);Object.defineProperty(curves,name,{configurable:true,enumerable:true,value:curve});return curve}})}defineCurve("p192",{type:"short",prime:"p192",p:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",a:"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",b:"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",n:"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",hash:hash.sha256,gRed:false,g:["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012","07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]});defineCurve("p224",{type:"short",prime:"p224",p:"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",a:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",b:"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",n:"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",hash:hash.sha256,gRed:false,g:["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21","bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]});defineCurve("p256",{type:"short",prime:null,p:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",a:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",b:"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",n:"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",hash:hash.sha256,gRed:false,g:["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296","4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]});defineCurve("p384",{type:"short",prime:null,p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",a:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",b:"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",n:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",hash:hash.sha384,gRed:false,g:["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7","3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]});defineCurve("p521",{type:"short",prime:null,p:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",a:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",b:"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",n:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",hash:hash.sha512,gRed:false,g:["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66","00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]});defineCurve("curve25519",{type:"mont",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"76d06",b:"1",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:hash.sha256,gRed:false,g:["9"]});defineCurve("ed25519",{type:"edwards",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"-1",c:"1",d:"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:hash.sha256,gRed:false,g:["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a","6666666666666666666666666666666666666666666666666666666666666658"]});var pre;try{pre=null.crash()}catch(e){pre=void 0}defineCurve("secp256k1",{type:"short",prime:"k256",p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",a:"0",b:"7",n:"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",h:"1",hash:hash.sha256,beta:"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",lambda:"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",basis:[{a:"3086d221a7d46bcde86c90e49284eb15",b:"-e4437ed6010e88286f547fa90abfe4c3"},{a:"114ca50f7a8e2f3f657c1108d9d44cfd8",b:"3086d221a7d46bcde86c90e49284eb15"}],gRed:false,g:["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798","483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",pre]})});function HmacDRBG(options){if(!(this instanceof HmacDRBG))return new HmacDRBG(options);this.hash=options.hash;this.predResist=!!options.predResist;this.outLen=this.hash.outSize;this.minEntropy=options.minEntropy||this.hash.hmacStrength;this._reseed=null;this.reseedInterval=null;this.K=null;this.V=null;var entropy=utils_1.toArray(options.entropy,options.entropyEnc||"hex");var nonce=utils_1.toArray(options.nonce,options.nonceEnc||"hex");var pers=utils_1.toArray(options.pers,options.persEnc||"hex");minimalisticAssert(entropy.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits");this._init(entropy,nonce,pers)}var hmacDrbg=HmacDRBG;HmacDRBG.prototype._init=function init3(entropy,nonce,pers){var seed=entropy.concat(nonce).concat(pers);this.K=new Array(this.outLen/8);this.V=new Array(this.outLen/8);for(var i=0;i<this.V.length;i++){this.K[i]=0;this.V[i]=1}this._update(seed);this._reseed=1;this.reseedInterval=281474976710656};HmacDRBG.prototype._hmac=function hmac3(){return new hash.hmac(this.hash,this.K)};HmacDRBG.prototype._update=function update2(seed){var kmac=this._hmac().update(this.V).update([0]);if(seed)kmac=kmac.update(seed);this.K=kmac.digest();this.V=this._hmac().update(this.V).digest();if(!seed)return;this.K=this._hmac().update(this.V).update([1]).update(seed).digest();this.V=this._hmac().update(this.V).digest()};HmacDRBG.prototype.reseed=function reseed2(entropy,entropyEnc,add6,addEnc){if(typeof entropyEnc!=="string"){addEnc=add6;add6=entropyEnc;entropyEnc=null}entropy=utils_1.toArray(entropy,entropyEnc);add6=utils_1.toArray(add6,addEnc);minimalisticAssert(entropy.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits");this._update(entropy.concat(add6||[]));this._reseed=1};HmacDRBG.prototype.generate=function generate2(len,enc,add6,addEnc){if(this._reseed>this.reseedInterval)throw new Error("Reseed is required");if(typeof enc!=="string"){addEnc=add6;add6=enc;enc=null}if(add6){add6=utils_1.toArray(add6,addEnc||"hex");this._update(add6)}var temp=[];while(temp.length<len){this.V=this._hmac().update(this.V).digest();temp=temp.concat(this.V)}var res=temp.slice(0,len);this._update(add6);this._reseed++;return utils_1.encode(res,enc)};var assert$3=utils_1$1.assert;function KeyPair(ec2,options){this.ec=ec2;this.priv=null;this.pub=null;if(options.priv)this._importPrivate(options.priv,options.privEnc);if(options.pub)this._importPublic(options.pub,options.pubEnc)}var key=KeyPair;KeyPair.fromPublic=function fromPublic2(ec2,pub,enc){if(pub instanceof KeyPair)return pub;return new KeyPair(ec2,{pub:pub,pubEnc:enc})};KeyPair.fromPrivate=function fromPrivate2(ec2,priv,enc){if(priv instanceof KeyPair)return priv;return new KeyPair(ec2,{priv:priv,privEnc:enc})};KeyPair.prototype.validate=function validate8(){var pub=this.getPublic();if(pub.isInfinity())return{result:false,reason:"Invalid public key"};if(!pub.validate())return{result:false,reason:"Public key is not a point"};if(!pub.mul(this.ec.curve.n).isInfinity())return{result:false,reason:"Public key * N != O"};return{result:true,reason:null}};KeyPair.prototype.getPublic=function getPublic2(compact,enc){if(typeof compact==="string"){enc=compact;compact=null}if(!this.pub)this.pub=this.ec.g.mul(this.priv);if(!enc)return this.pub;return this.pub.encode(enc,compact)};KeyPair.prototype.getPrivate=function getPrivate2(enc){if(enc==="hex")return this.priv.toString(16,2);else return this.priv};KeyPair.prototype._importPrivate=function _importPrivate2(key2,enc){this.priv=new BN$1(key2,enc||16);this.priv=this.priv.umod(this.ec.curve.n)};KeyPair.prototype._importPublic=function _importPublic2(key2,enc){if(key2.x||key2.y){if(this.ec.curve.type==="mont"){assert$3(key2.x,"Need x coordinate")}else if(this.ec.curve.type==="short"||this.ec.curve.type==="edwards"){assert$3(key2.x&&key2.y,"Need both x and y coordinate")}this.pub=this.ec.curve.point(key2.x,key2.y);return}this.pub=this.ec.curve.decodePoint(key2,enc)};KeyPair.prototype.derive=function derive2(pub){if(!pub.validate()){assert$3(pub.validate(),"public point not validated")}return pub.mul(this.priv).getX()};KeyPair.prototype.sign=function sign3(msg,enc,options){return this.ec.sign(msg,this,enc,options)};KeyPair.prototype.verify=function verify3(msg,signature2){return this.ec.verify(msg,signature2,this)};KeyPair.prototype.inspect=function inspect6(){return"<Key priv: "+(this.priv&&this.priv.toString(16,2))+" pub: "+(this.pub&&this.pub.inspect())+" >"};var assert$4=utils_1$1.assert;function Signature(options,enc){if(options instanceof Signature)return options;if(this._importDER(options,enc))return;assert$4(options.r&&options.s,"Signature without r or s");this.r=new BN$1(options.r,16);this.s=new BN$1(options.s,16);if(options.recoveryParam===void 0)this.recoveryParam=null;else this.recoveryParam=options.recoveryParam}var signature=Signature;function Position(){this.place=0}function getLength(buf,p){var initial=buf[p.place++];if(!(initial&128)){return initial}var octetLen=initial&15;if(octetLen===0||octetLen>4){return false}var val=0;for(var i=0,off=p.place;i<octetLen;i++,off++){val<<=8;val|=buf[off];val>>>=0}if(val<=127){return false}p.place=off;return val}function rmPadding(buf){var i=0;var len=buf.length-1;while(!buf[i]&&!(buf[i+1]&128)&&i<len){i++}if(i===0){return buf}return buf.slice(i)}Signature.prototype._importDER=function _importDER2(data,enc){data=utils_1$1.toArray(data,enc);var p=new Position;if(data[p.place++]!==48){return false}var len=getLength(data,p);if(len===false){return false}if(len+p.place!==data.length){return false}if(data[p.place++]!==2){return false}var rlen=getLength(data,p);if(rlen===false){return false}var r=data.slice(p.place,rlen+p.place);p.place+=rlen;if(data[p.place++]!==2){return false}var slen=getLength(data,p);if(slen===false){return false}if(data.length!==slen+p.place){return false}var s=data.slice(p.place,slen+p.place);if(r[0]===0){if(r[1]&128){r=r.slice(1)}else{return false}}if(s[0]===0){if(s[1]&128){s=s.slice(1)}else{return false}}this.r=new BN$1(r);this.s=new BN$1(s);this.recoveryParam=null;return true};function constructLength(arr,len){if(len<128){arr.push(len);return}var octets=1+(Math.log(len)/Math.LN2>>>3);arr.push(octets|128);while(--octets){arr.push(len>>>(octets<<3)&255)}arr.push(len)}Signature.prototype.toDER=function toDER2(enc){var r=this.r.toArray();var s=this.s.toArray();if(r[0]&128)r=[0].concat(r);if(s[0]&128)s=[0].concat(s);r=rmPadding(r);s=rmPadding(s);while(!s[0]&&!(s[1]&128)){s=s.slice(1)}var arr=[2];constructLength(arr,r.length);arr=arr.concat(r);arr.push(2);constructLength(arr,s.length);var backHalf=arr.concat(s);var res=[48];constructLength(res,backHalf.length);res=res.concat(backHalf);return utils_1$1.encode(res,enc)};var rand=function(){throw new Error("unsupported")};var assert$5=utils_1$1.assert;function EC(options){if(!(this instanceof EC))return new EC(options);if(typeof options==="string"){assert$5(Object.prototype.hasOwnProperty.call(curves_1,options),"Unknown curve "+options);options=curves_1[options]}if(options instanceof curves_1.PresetCurve)options={curve:options};this.curve=options.curve.curve;this.n=this.curve.n;this.nh=this.n.ushrn(1);this.g=this.curve.g;this.g=options.curve.g;this.g.precompute(options.curve.n.bitLength()+1);this.hash=options.hash||options.curve.hash}var ec=EC;EC.prototype.keyPair=function keyPair2(options){return new key(this,options)};EC.prototype.keyFromPrivate=function keyFromPrivate2(priv,enc){return key.fromPrivate(this,priv,enc)};EC.prototype.keyFromPublic=function keyFromPublic2(pub,enc){return key.fromPublic(this,pub,enc)};EC.prototype.genKeyPair=function genKeyPair2(options){if(!options)options={};var drbg=new hmacDrbg({hash:this.hash,pers:options.pers,persEnc:options.persEnc||"utf8",entropy:options.entropy||rand(this.hash.hmacStrength),entropyEnc:options.entropy&&options.entropyEnc||"utf8",nonce:this.n.toArray()});var bytes2=this.n.byteLength();var ns2=this.n.sub(new BN$1(2));for(;;){var priv=new BN$1(drbg.generate(bytes2));if(priv.cmp(ns2)>0)continue;priv.iaddn(1);return this.keyFromPrivate(priv)}};EC.prototype._truncateToN=function _truncateToN2(msg,truncOnly){var delta=msg.byteLength()*8-this.n.bitLength();if(delta>0)msg=msg.ushrn(delta);if(!truncOnly&&msg.cmp(this.n)>=0)return msg.sub(this.n);else return msg};EC.prototype.sign=function sign4(msg,key2,enc,options){if(typeof enc==="object"){options=enc;enc=null}if(!options)options={};key2=this.keyFromPrivate(key2,enc);msg=this._truncateToN(new BN$1(msg,16));var bytes2=this.n.byteLength();var bkey=key2.getPrivate().toArray("be",bytes2);var nonce=msg.toArray("be",bytes2);var drbg=new hmacDrbg({hash:this.hash,entropy:bkey,nonce:nonce,pers:options.pers,persEnc:options.persEnc||"utf8"});var ns1=this.n.sub(new BN$1(1));for(var iter=0;;iter++){var k=options.k?options.k(iter):new BN$1(drbg.generate(this.n.byteLength()));k=this._truncateToN(k,true);if(k.cmpn(1)<=0||k.cmp(ns1)>=0)continue;var kp=this.g.mul(k);if(kp.isInfinity())continue;var kpX=kp.getX();var r=kpX.umod(this.n);if(r.cmpn(0)===0)continue;var s=k.invm(this.n).mul(r.mul(key2.getPrivate()).iadd(msg));s=s.umod(this.n);if(s.cmpn(0)===0)continue;var recoveryParam=(kp.getY().isOdd()?1:0)|(kpX.cmp(r)!==0?2:0);if(options.canonical&&s.cmp(this.nh)>0){s=this.n.sub(s);recoveryParam^=1}return new signature({r:r,s:s,recoveryParam:recoveryParam})}};EC.prototype.verify=function verify4(msg,signature$12,key2,enc){msg=this._truncateToN(new BN$1(msg,16));key2=this.keyFromPublic(key2,enc);signature$12=new signature(signature$12,"hex");var r=signature$12.r;var s=signature$12.s;if(r.cmpn(1)<0||r.cmp(this.n)>=0)return false;if(s.cmpn(1)<0||s.cmp(this.n)>=0)return false;var sinv=s.invm(this.n);var u1=sinv.mul(msg).umod(this.n);var u2=sinv.mul(r).umod(this.n);var p;if(!this.curve._maxwellTrick){p=this.g.mulAdd(u1,key2.getPublic(),u2);if(p.isInfinity())return false;return p.getX().umod(this.n).cmp(r)===0}p=this.g.jmulAdd(u1,key2.getPublic(),u2);if(p.isInfinity())return false;return p.eqXToP(r)};EC.prototype.recoverPubKey=function(msg,signature$12,j,enc){assert$5((3&j)===j,"The recovery param is more than two bits");signature$12=new signature(signature$12,enc);var n2=this.n;var e=new BN$1(msg);var r=signature$12.r;var s=signature$12.s;var isYOdd=j&1;var isSecondKey=j>>1;if(r.cmp(this.curve.p.umod(this.curve.n))>=0&&isSecondKey)throw new Error("Unable to find sencond key candinate");if(isSecondKey)r=this.curve.pointFromX(r.add(this.curve.n),isYOdd);else r=this.curve.pointFromX(r,isYOdd);var rInv=signature$12.r.invm(n2);var s1=n2.sub(e).mul(rInv).umod(n2);var s2=s.mul(rInv).umod(n2);return this.g.mulAdd(s1,r,s2)};EC.prototype.getKeyRecoveryParam=function(e,signature$12,Q,enc){signature$12=new signature(signature$12,enc);if(signature$12.recoveryParam!==null)return signature$12.recoveryParam;for(var i=0;i<4;i++){var Qprime;try{Qprime=this.recoverPubKey(e,signature$12,i)}catch(e2){continue}if(Qprime.eq(Q))return i}throw new Error("Unable to find valid recovery factor")};var elliptic_1=createCommonjsModule(function(module2,exports2){var elliptic=exports2;elliptic.version={version:"6.5.4"}.version;elliptic.utils=utils_1$1;elliptic.rand=function(){throw new Error("unsupported")};elliptic.curve=curve_1;elliptic.curves=curves_1;elliptic.ec=ec;elliptic.eddsa=null});var EC$1=elliptic_1.ec;const version$7="signing-key/5.7.0";const logger$7=new Logger$3(version$7);let _curve=null;function getCurve(){if(!_curve){_curve=new EC$1("secp256k1")}return _curve}class SigningKey2{constructor(privateKey){defineReadOnly$1(this,"curve","secp256k1");defineReadOnly$1(this,"privateKey",hexlify(privateKey));if(hexDataLength(this.privateKey)!==32){logger$7.throwArgumentError("invalid private key","privateKey","[[ REDACTED ]]")}const keyPair3=getCurve().keyFromPrivate(arrayify(this.privateKey));defineReadOnly$1(this,"publicKey","0x"+keyPair3.getPublic(false,"hex"));defineReadOnly$1(this,"compressedPublicKey","0x"+keyPair3.getPublic(true,"hex"));defineReadOnly$1(this,"_isSigningKey",true)}_addPoint(other){const p0=getCurve().keyFromPublic(arrayify(this.publicKey));const p1=getCurve().keyFromPublic(arrayify(other));return"0x"+p0.pub.add(p1.pub).encodeCompressed("hex")}signDigest(digest){const keyPair3=getCurve().keyFromPrivate(arrayify(this.privateKey));const digestBytes=arrayify(digest);if(digestBytes.length!==32){logger$7.throwArgumentError("bad digest length","digest",digest)}const signature2=keyPair3.sign(digestBytes,{canonical:true});return splitSignature({recoveryParam:signature2.recoveryParam,r:hexZeroPad("0x"+signature2.r.toString(16),32),s:hexZeroPad("0x"+signature2.s.toString(16),32)})}computeSharedSecret(otherKey){const keyPair3=getCurve().keyFromPrivate(arrayify(this.privateKey));const otherKeyPair=getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));return hexZeroPad("0x"+keyPair3.derive(otherKeyPair.getPublic()).toString(16),32)}static isSigningKey(value){return!!(value&&value._isSigningKey)}}function recoverPublicKey(digest,signature2){const sig=splitSignature(signature2);const rs={r:arrayify(sig.r),s:arrayify(sig.s)};return"0x"+getCurve().recoverPubKey(arrayify(digest),rs,sig.recoveryParam).encode("hex",false)}function computePublicKey(key2,compressed){const bytes2=arrayify(key2);if(bytes2.length===32){const signingKey=new SigningKey2(bytes2);return signingKey.publicKey}else if(bytes2.length===33){return"0x"+getCurve().keyFromPublic(bytes2).getPublic(false,"hex")}else if(bytes2.length===65){{return hexlify(bytes2)}}return logger$7.throwArgumentError("invalid public or private key","key","[REDACTED]")}var aesJs={exports:{}};var hasRequiredAesJs;function requireAesJs(){if(hasRequiredAesJs)return aesJs.exports;hasRequiredAesJs=1;(function(module2,exports2){(function(root2){function checkInt(value){return parseInt(value)===value}function checkInts(arrayish){if(!checkInt(arrayish.length)){return false}for(var i=0;i<arrayish.length;i++){if(!checkInt(arrayish[i])||arrayish[i]<0||arrayish[i]>255){return false}}return true}function coerceArray(arg,copy2){if(arg.buffer&&ArrayBuffer.isView(arg)&&arg.name==="Uint8Array"){if(copy2){if(arg.slice){arg=arg.slice()}else{arg=Array.prototype.slice.call(arg)}}return arg}if(Array.isArray(arg)){if(!checkInts(arg)){throw new Error("Array contains invalid value: "+arg)}return new Uint8Array(arg)}if(checkInt(arg.length)&&checkInts(arg)){return new Uint8Array(arg)}throw new Error("unsupported array-like object")}function createArray(length){return new Uint8Array(length)}function copyArray(sourceArray,targetArray,targetStart,sourceStart,sourceEnd){if(sourceStart!=null||sourceEnd!=null){if(sourceArray.slice){sourceArray=sourceArray.slice(sourceStart,sourceEnd)}else{sourceArray=Array.prototype.slice.call(sourceArray,sourceStart,sourceEnd)}}targetArray.set(sourceArray,targetStart)}var convertUtf8=function(){function toBytes2(text){var result=[],i=0;text=encodeURI(text);while(i<text.length){var c=text.charCodeAt(i++);if(c===37){result.push(parseInt(text.substr(i,2),16));i+=2}else{result.push(c)}}return coerceArray(result)}function fromBytes(bytes2){var result=[],i=0;while(i<bytes2.length){var c=bytes2[i];if(c<128){result.push(String.fromCharCode(c));i++}else if(c>191&&c<224){result.push(String.fromCharCode((c&31)<<6|bytes2[i+1]&63));i+=2}else{result.push(String.fromCharCode((c&15)<<12|(bytes2[i+1]&63)<<6|bytes2[i+2]&63));i+=3}}return result.join("")}return{toBytes:toBytes2,fromBytes:fromBytes}}();var convertHex=function(){function toBytes2(text){var result=[];for(var i=0;i<text.length;i+=2){result.push(parseInt(text.substr(i,2),16))}return result}var Hex="0123456789abcdef";function fromBytes(bytes2){var result=[];for(var i=0;i<bytes2.length;i++){var v=bytes2[i];result.push(Hex[(v&240)>>4]+Hex[v&15])}return result.join("")}return{toBytes:toBytes2,fromBytes:fromBytes}}();var numberOfRounds2={16:10,24:12,32:14};var rcon2=[1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145];var S2=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22];var Si2=[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125];var T12=[3328402341,4168907908,4000806809,4135287693,4294111757,3597364157,3731845041,2445657428,1613770832,33620227,3462883241,1445669757,3892248089,3050821474,1303096294,3967186586,2412431941,528646813,2311702848,4202528135,4026202645,2992200171,2387036105,4226871307,1101901292,3017069671,1604494077,1169141738,597466303,1403299063,3832705686,2613100635,1974974402,3791519004,1033081774,1277568618,1815492186,2118074177,4126668546,2211236943,1748251740,1369810420,3521504564,4193382664,3799085459,2883115123,1647391059,706024767,134480908,2512897874,1176707941,2646852446,806885416,932615841,168101135,798661301,235341577,605164086,461406363,3756188221,3454790438,1311188841,2142417613,3933566367,302582043,495158174,1479289972,874125870,907746093,3698224818,3025820398,1537253627,2756858614,1983593293,3084310113,2108928974,1378429307,3722699582,1580150641,327451799,2790478837,3117535592,0,3253595436,1075847264,3825007647,2041688520,3059440621,3563743934,2378943302,1740553945,1916352843,2487896798,2555137236,2958579944,2244988746,3151024235,3320835882,1336584933,3992714006,2252555205,2588757463,1714631509,293963156,2319795663,3925473552,67240454,4269768577,2689618160,2017213508,631218106,1269344483,2723238387,1571005438,2151694528,93294474,1066570413,563977660,1882732616,4059428100,1673313503,2008463041,2950355573,1109467491,537923632,3858759450,4260623118,3218264685,2177748300,403442708,638784309,3287084079,3193921505,899127202,2286175436,773265209,2479146071,1437050866,4236148354,2050833735,3362022572,3126681063,840505643,3866325909,3227541664,427917720,2655997905,2749160575,1143087718,1412049534,999329963,193497219,2353415882,3354324521,1807268051,672404540,2816401017,3160301282,369822493,2916866934,3688947771,1681011286,1949973070,336202270,2454276571,201721354,1210328172,3093060836,2680341085,3184776046,1135389935,3294782118,965841320,831886756,3554993207,4068047243,3588745010,2345191491,1849112409,3664604599,26054028,2983581028,2622377682,1235855840,3630984372,2891339514,4092916743,3488279077,3395642799,4101667470,1202630377,268961816,1874508501,4034427016,1243948399,1546530418,941366308,1470539505,1941222599,2546386513,3421038627,2715671932,3899946140,1042226977,2521517021,1639824860,227249030,260737669,3765465232,2084453954,1907733956,3429263018,2420656344,100860677,4160157185,470683154,3261161891,1781871967,2924959737,1773779408,394692241,2579611992,974986535,664706745,3655459128,3958962195,731420851,571543859,3530123707,2849626480,126783113,865375399,765172662,1008606754,361203602,3387549984,2278477385,2857719295,1344809080,2782912378,59542671,1503764984,160008576,437062935,1707065306,3622233649,2218934982,3496503480,2185314755,697932208,1512910199,504303377,2075177163,2824099068,1841019862,739644986];var T22=[2781242211,2230877308,2582542199,2381740923,234877682,3184946027,2984144751,1418839493,1348481072,50462977,2848876391,2102799147,434634494,1656084439,3863849899,2599188086,1167051466,2636087938,1082771913,2281340285,368048890,3954334041,3381544775,201060592,3963727277,1739838676,4250903202,3930435503,3206782108,4149453988,2531553906,1536934080,3262494647,484572669,2923271059,1783375398,1517041206,1098792767,49674231,1334037708,1550332980,4098991525,886171109,150598129,2481090929,1940642008,1398944049,1059722517,201851908,1385547719,1699095331,1587397571,674240536,2704774806,252314885,3039795866,151914247,908333586,2602270848,1038082786,651029483,1766729511,3447698098,2682942837,454166793,2652734339,1951935532,775166490,758520603,3000790638,4004797018,4217086112,4137964114,1299594043,1639438038,3464344499,2068982057,1054729187,1901997871,2534638724,4121318227,1757008337,0,750906861,1614815264,535035132,3363418545,3988151131,3201591914,1183697867,3647454910,1265776953,3734260298,3566750796,3903871064,1250283471,1807470800,717615087,3847203498,384695291,3313910595,3617213773,1432761139,2484176261,3481945413,283769337,100925954,2180939647,4037038160,1148730428,3123027871,3813386408,4087501137,4267549603,3229630528,2315620239,2906624658,3156319645,1215313976,82966005,3747855548,3245848246,1974459098,1665278241,807407632,451280895,251524083,1841287890,1283575245,337120268,891687699,801369324,3787349855,2721421207,3431482436,959321879,1469301956,4065699751,2197585534,1199193405,2898814052,3887750493,724703513,2514908019,2696962144,2551808385,3516813135,2141445340,1715741218,2119445034,2872807568,2198571144,3398190662,700968686,3547052216,1009259540,2041044702,3803995742,487983883,1991105499,1004265696,1449407026,1316239930,504629770,3683797321,168560134,1816667172,3837287516,1570751170,1857934291,4014189740,2797888098,2822345105,2754712981,936633572,2347923833,852879335,1133234376,1500395319,3084545389,2348912013,1689376213,3533459022,3762923945,3034082412,4205598294,133428468,634383082,2949277029,2398386810,3913789102,403703816,3580869306,2297460856,1867130149,1918643758,607656988,4049053350,3346248884,1368901318,600565992,2090982877,2632479860,557719327,3717614411,3697393085,2249034635,2232388234,2430627952,1115438654,3295786421,2865522278,3633334344,84280067,33027830,303828494,2747425121,1600795957,4188952407,3496589753,2434238086,1486471617,658119965,3106381470,953803233,334231800,3005978776,857870609,3151128937,1890179545,2298973838,2805175444,3056442267,574365214,2450884487,550103529,1233637070,4289353045,2018519080,2057691103,2399374476,4166623649,2148108681,387583245,3664101311,836232934,3330556482,3100665960,3280093505,2955516313,2002398509,287182607,3413881008,4238890068,3597515707,975967766];var T32=[1671808611,2089089148,2006576759,2072901243,4061003762,1807603307,1873927791,3310653893,810573872,16974337,1739181671,729634347,4263110654,3613570519,2883997099,1989864566,3393556426,2191335298,3376449993,2106063485,4195741690,1508618841,1204391495,4027317232,2917941677,3563566036,2734514082,2951366063,2629772188,2767672228,1922491506,3227229120,3082974647,4246528509,2477669779,644500518,911895606,1061256767,4144166391,3427763148,878471220,2784252325,3845444069,4043897329,1905517169,3631459288,827548209,356461077,67897348,3344078279,593839651,3277757891,405286936,2527147926,84871685,2595565466,118033927,305538066,2157648768,3795705826,3945188843,661212711,2999812018,1973414517,152769033,2208177539,745822252,439235610,455947803,1857215598,1525593178,2700827552,1391895634,994932283,3596728278,3016654259,695947817,3812548067,795958831,2224493444,1408607827,3513301457,0,3979133421,543178784,4229948412,2982705585,1542305371,1790891114,3410398667,3201918910,961245753,1256100938,1289001036,1491644504,3477767631,3496721360,4012557807,2867154858,4212583931,1137018435,1305975373,861234739,2241073541,1171229253,4178635257,33948674,2139225727,1357946960,1011120188,2679776671,2833468328,1374921297,2751356323,1086357568,2408187279,2460827538,2646352285,944271416,4110742005,3168756668,3066132406,3665145818,560153121,271589392,4279952895,4077846003,3530407890,3444343245,202643468,322250259,3962553324,1608629855,2543990167,1154254916,389623319,3294073796,2817676711,2122513534,1028094525,1689045092,1575467613,422261273,1939203699,1621147744,2174228865,1339137615,3699352540,577127458,712922154,2427141008,2290289544,1187679302,3995715566,3100863416,339486740,3732514782,1591917662,186455563,3681988059,3762019296,844522546,978220090,169743370,1239126601,101321734,611076132,1558493276,3260915650,3547250131,2901361580,1655096418,2443721105,2510565781,3828863972,2039214713,3878868455,3359869896,928607799,1840765549,2374762893,3580146133,1322425422,2850048425,1823791212,1459268694,4094161908,3928346602,1706019429,2056189050,2934523822,135794696,3134549946,2022240376,628050469,779246638,472135708,2800834470,3032970164,3327236038,3894660072,3715932637,1956440180,522272287,1272813131,3185336765,2340818315,2323976074,1888542832,1044544574,3049550261,1722469478,1222152264,50660867,4127324150,236067854,1638122081,895445557,1475980887,3117443513,2257655686,3243809217,489110045,2662934430,3778599393,4162055160,2561878936,288563729,1773916777,3648039385,2391345038,2493985684,2612407707,505560094,2274497927,3911240169,3460925390,1442818645,678973480,3749357023,2358182796,2717407649,2306869641,219617805,3218761151,3862026214,1120306242,1756942440,1103331905,2578459033,762796589,252780047,2966125488,1425844308,3151392187,372911126];var T42=[1667474886,2088535288,2004326894,2071694838,4075949567,1802223062,1869591006,3318043793,808472672,16843522,1734846926,724270422,4278065639,3621216949,2880169549,1987484396,3402253711,2189597983,3385409673,2105378810,4210693615,1499065266,1195886990,4042263547,2913856577,3570689971,2728590687,2947541573,2627518243,2762274643,1920112356,3233831835,3082273397,4261223649,2475929149,640051788,909531756,1061110142,4160160501,3435941763,875846760,2779116625,3857003729,4059105529,1903268834,3638064043,825316194,353713962,67374088,3351728789,589522246,3284360861,404236336,2526454071,84217610,2593830191,117901582,303183396,2155911963,3806477791,3958056653,656894286,2998062463,1970642922,151591698,2206440989,741110872,437923380,454765878,1852748508,1515908788,2694904667,1381168804,993742198,3604373943,3014905469,690584402,3823320797,791638366,2223281939,1398011302,3520161977,0,3991743681,538992704,4244381667,2981218425,1532751286,1785380564,3419096717,3200178535,960056178,1246420628,1280103576,1482221744,3486468741,3503319995,4025428677,2863326543,4227536621,1128514950,1296947098,859002214,2240123921,1162203018,4193849577,33687044,2139062782,1347481760,1010582648,2678045221,2829640523,1364325282,2745433693,1077985408,2408548869,2459086143,2644360225,943212656,4126475505,3166494563,3065430391,3671750063,555836226,269496352,4294908645,4092792573,3537006015,3452783745,202118168,320025894,3974901699,1600119230,2543297077,1145359496,387397934,3301201811,2812801621,2122220284,1027426170,1684319432,1566435258,421079858,1936954854,1616945344,2172753945,1330631070,3705438115,572679748,707427924,2425400123,2290647819,1179044492,4008585671,3099120491,336870440,3739122087,1583276732,185277718,3688593069,3772791771,842159716,976899700,168435220,1229577106,101059084,606366792,1549591736,3267517855,3553849021,2897014595,1650632388,2442242105,2509612081,3840161747,2038008818,3890688725,3368567691,926374254,1835907034,2374863873,3587531953,1313788572,2846482505,1819063512,1448540844,4109633523,3941213647,1701162954,2054852340,2930698567,134748176,3132806511,2021165296,623210314,774795868,471606328,2795958615,3031746419,3334885783,3907527627,3722280097,1953799400,522133822,1263263126,3183336545,2341176845,2324333839,1886425312,1044267644,3048588401,1718004428,1212733584,50529542,4143317495,235803164,1633788866,892690282,1465383342,3115962473,2256965911,3250673817,488449850,2661202215,3789633753,4177007595,2560144171,286339874,1768537042,3654906025,2391705863,2492770099,2610673197,505291324,2273808917,3924369609,3469625735,1431699370,673740880,3755965093,2358021891,2711746649,2307489801,218961690,3217021541,3873845719,1111672452,1751693520,1094828930,2576986153,757954394,252645662,2964376443,1414855848,3149649517,370555436];var T52=[1374988112,2118214995,437757123,975658646,1001089995,530400753,2902087851,1273168787,540080725,2910219766,2295101073,4110568485,1340463100,3307916247,641025152,3043140495,3736164937,632953703,1172967064,1576976609,3274667266,2169303058,2370213795,1809054150,59727847,361929877,3211623147,2505202138,3569255213,1484005843,1239443753,2395588676,1975683434,4102977912,2572697195,666464733,3202437046,4035489047,3374361702,2110667444,1675577880,3843699074,2538681184,1649639237,2976151520,3144396420,4269907996,4178062228,1883793496,2403728665,2497604743,1383856311,2876494627,1917518562,3810496343,1716890410,3001755655,800440835,2261089178,3543599269,807962610,599762354,33778362,3977675356,2328828971,2809771154,4077384432,1315562145,1708848333,101039829,3509871135,3299278474,875451293,2733856160,92987698,2767645557,193195065,1080094634,1584504582,3178106961,1042385657,2531067453,3711829422,1306967366,2438237621,1908694277,67556463,1615861247,429456164,3602770327,2302690252,1742315127,2968011453,126454664,3877198648,2043211483,2709260871,2084704233,4169408201,0,159417987,841739592,504459436,1817866830,4245618683,260388950,1034867998,908933415,168810852,1750902305,2606453969,607530554,202008497,2472011535,3035535058,463180190,2160117071,1641816226,1517767529,470948374,3801332234,3231722213,1008918595,303765277,235474187,4069246893,766945465,337553864,1475418501,2943682380,4003061179,2743034109,4144047775,1551037884,1147550661,1543208500,2336434550,3408119516,3069049960,3102011747,3610369226,1113818384,328671808,2227573024,2236228733,3535486456,2935566865,3341394285,496906059,3702665459,226906860,2009195472,733156972,2842737049,294930682,1206477858,2835123396,2700099354,1451044056,573804783,2269728455,3644379585,2362090238,2564033334,2801107407,2776292904,3669462566,1068351396,742039012,1350078989,1784663195,1417561698,4136440770,2430122216,775550814,2193862645,2673705150,1775276924,1876241833,3475313331,3366754619,270040487,3902563182,3678124923,3441850377,1851332852,3969562369,2203032232,3868552805,2868897406,566021896,4011190502,3135740889,1248802510,3936291284,699432150,832877231,708780849,3332740144,899835584,1951317047,4236429990,3767586992,866637845,4043610186,1106041591,2144161806,395441711,1984812685,1139781709,3433712980,3835036895,2664543715,1282050075,3240894392,1181045119,2640243204,25965917,4203181171,4211818798,3009879386,2463879762,3910161971,1842759443,2597806476,933301370,1509430414,3943906441,3467192302,3076639029,3776767469,2051518780,2631065433,1441952575,404016761,1942435775,1408749034,1610459739,3745345300,2017778566,3400528769,3110650942,941896748,3265478751,371049330,3168937228,675039627,4279080257,967311729,135050206,3635733660,1683407248,2076935265,3576870512,1215061108,3501741890];var T62=[1347548327,1400783205,3273267108,2520393566,3409685355,4045380933,2880240216,2471224067,1428173050,4138563181,2441661558,636813900,4233094615,3620022987,2149987652,2411029155,1239331162,1730525723,2554718734,3781033664,46346101,310463728,2743944855,3328955385,3875770207,2501218972,3955191162,3667219033,768917123,3545789473,692707433,1150208456,1786102409,2029293177,1805211710,3710368113,3065962831,401639597,1724457132,3028143674,409198410,2196052529,1620529459,1164071807,3769721975,2226875310,486441376,2499348523,1483753576,428819965,2274680428,3075636216,598438867,3799141122,1474502543,711349675,129166120,53458370,2592523643,2782082824,4063242375,2988687269,3120694122,1559041666,730517276,2460449204,4042459122,2706270690,3446004468,3573941694,533804130,2328143614,2637442643,2695033685,839224033,1973745387,957055980,2856345839,106852767,1371368976,4181598602,1033297158,2933734917,1179510461,3046200461,91341917,1862534868,4284502037,605657339,2547432937,3431546947,2003294622,3182487618,2282195339,954669403,3682191598,1201765386,3917234703,3388507166,0,2198438022,1211247597,2887651696,1315723890,4227665663,1443857720,507358933,657861945,1678381017,560487590,3516619604,975451694,2970356327,261314535,3535072918,2652609425,1333838021,2724322336,1767536459,370938394,182621114,3854606378,1128014560,487725847,185469197,2918353863,3106780840,3356761769,2237133081,1286567175,3152976349,4255350624,2683765030,3160175349,3309594171,878443390,1988838185,3704300486,1756818940,1673061617,3403100636,272786309,1075025698,545572369,2105887268,4174560061,296679730,1841768865,1260232239,4091327024,3960309330,3497509347,1814803222,2578018489,4195456072,575138148,3299409036,446754879,3629546796,4011996048,3347532110,3252238545,4270639778,915985419,3483825537,681933534,651868046,2755636671,3828103837,223377554,2607439820,1649704518,3270937875,3901806776,1580087799,4118987695,3198115200,2087309459,2842678573,3016697106,1003007129,2802849917,1860738147,2077965243,164439672,4100872472,32283319,2827177882,1709610350,2125135846,136428751,3874428392,3652904859,3460984630,3572145929,3593056380,2939266226,824852259,818324884,3224740454,930369212,2801566410,2967507152,355706840,1257309336,4148292826,243256656,790073846,2373340630,1296297904,1422699085,3756299780,3818836405,457992840,3099667487,2135319889,77422314,1560382517,1945798516,788204353,1521706781,1385356242,870912086,325965383,2358957921,2050466060,2388260884,2313884476,4006521127,901210569,3990953189,1014646705,1503449823,1062597235,2031621326,3212035895,3931371469,1533017514,350174575,2256028891,2177544179,1052338372,741876788,1606591296,1914052035,213705253,2334669897,1107234197,1899603969,3725069491,2631447780,2422494913,1635502980,1893020342,1950903388,1120974935];var T72=[2807058932,1699970625,2764249623,1586903591,1808481195,1173430173,1487645946,59984867,4199882800,1844882806,1989249228,1277555970,3623636965,3419915562,1149249077,2744104290,1514790577,459744698,244860394,3235995134,1963115311,4027744588,2544078150,4190530515,1608975247,2627016082,2062270317,1507497298,2200818878,567498868,1764313568,3359936201,2305455554,2037970062,1047239e3,1910319033,1337376481,2904027272,2892417312,984907214,1243112415,830661914,861968209,2135253587,2011214180,2927934315,2686254721,731183368,1750626376,4246310725,1820824798,4172763771,3542330227,48394827,2404901663,2871682645,671593195,3254988725,2073724613,145085239,2280796200,2779915199,1790575107,2187128086,472615631,3029510009,4075877127,3802222185,4107101658,3201631749,1646252340,4270507174,1402811438,1436590835,3778151818,3950355702,3963161475,4020912224,2667994737,273792366,2331590177,104699613,95345982,3175501286,2377486676,1560637892,3564045318,369057872,4213447064,3919042237,1137477952,2658625497,1119727848,2340947849,1530455833,4007360968,172466556,266959938,516552836,0,2256734592,3980931627,1890328081,1917742170,4294704398,945164165,3575528878,958871085,3647212047,2787207260,1423022939,775562294,1739656202,3876557655,2530391278,2443058075,3310321856,547512796,1265195639,437656594,3121275539,719700128,3762502690,387781147,218828297,3350065803,2830708150,2848461854,428169201,122466165,3720081049,1627235199,648017665,4122762354,1002783846,2117360635,695634755,3336358691,4234721005,4049844452,3704280881,2232435299,574624663,287343814,612205898,1039717051,840019705,2708326185,793451934,821288114,1391201670,3822090177,376187827,3113855344,1224348052,1679968233,2361698556,1058709744,752375421,2431590963,1321699145,3519142200,2734591178,188127444,2177869557,3727205754,2384911031,3215212461,2648976442,2450346104,3432737375,1180849278,331544205,3102249176,4150144569,2952102595,2159976285,2474404304,766078933,313773861,2570832044,2108100632,1668212892,3145456443,2013908262,418672217,3070356634,2594734927,1852171925,3867060991,3473416636,3907448597,2614737639,919489135,164948639,2094410160,2997825956,590424639,2486224549,1723872674,3157750862,3399941250,3501252752,3625268135,2555048196,3673637356,1343127501,4130281361,3599595085,2957853679,1297403050,81781910,3051593425,2283490410,532201772,1367295589,3926170974,895287692,1953757831,1093597963,492483431,3528626907,1446242576,1192455638,1636604631,209336225,344873464,1015671571,669961897,3375740769,3857572124,2973530695,3747192018,1933530610,3464042516,935293895,3454686199,2858115069,1863638845,3683022916,4085369519,3292445032,875313188,1080017571,3279033885,621591778,1233856572,2504130317,24197544,3017672716,3835484340,3247465558,2220981195,3060847922,1551124588,1463996600];var T82=[4104605777,1097159550,396673818,660510266,2875968315,2638606623,4200115116,3808662347,821712160,1986918061,3430322568,38544885,3856137295,718002117,893681702,1654886325,2975484382,3122358053,3926825029,4274053469,796197571,1290801793,1184342925,3556361835,2405426947,2459735317,1836772287,1381620373,3196267988,1948373848,3764988233,3385345166,3263785589,2390325492,1480485785,3111247143,3780097726,2293045232,548169417,3459953789,3746175075,439452389,1362321559,1400849762,1685577905,1806599355,2174754046,137073913,1214797936,1174215055,3731654548,2079897426,1943217067,1258480242,529487843,1437280870,3945269170,3049390895,3313212038,923313619,679998e3,3215307299,57326082,377642221,3474729866,2041877159,133361907,1776460110,3673476453,96392454,878845905,2801699524,777231668,4082475170,2330014213,4142626212,2213296395,1626319424,1906247262,1846563261,562755902,3708173718,1040559837,3871163981,1418573201,3294430577,114585348,1343618912,2566595609,3186202582,1078185097,3651041127,3896688048,2307622919,425408743,3371096953,2081048481,1108339068,2216610296,0,2156299017,736970802,292596766,1517440620,251657213,2235061775,2933202493,758720310,265905162,1554391400,1532285339,908999204,174567692,1474760595,4002861748,2610011675,3234156416,3693126241,2001430874,303699484,2478443234,2687165888,585122620,454499602,151849742,2345119218,3064510765,514443284,4044981591,1963412655,2581445614,2137062819,19308535,1928707164,1715193156,4219352155,1126790795,600235211,3992742070,3841024952,836553431,1669664834,2535604243,3323011204,1243905413,3141400786,4180808110,698445255,2653899549,2989552604,2253581325,3252932727,3004591147,1891211689,2487810577,3915653703,4237083816,4030667424,2100090966,865136418,1229899655,953270745,3399679628,3557504664,4118925222,2061379749,3079546586,2915017791,983426092,2022837584,1607244650,2118541908,2366882550,3635996816,972512814,3283088770,1568718495,3499326569,3576539503,621982671,2895723464,410887952,2623762152,1002142683,645401037,1494807662,2595684844,1335535747,2507040230,4293295786,3167684641,367585007,3885750714,1865862730,2668221674,2960971305,2763173681,1059270954,2777952454,2724642869,1320957812,2194319100,2429595872,2815956275,77089521,3973773121,3444575871,2448830231,1305906550,4021308739,2857194700,2516901860,3518358430,1787304780,740276417,1699839814,1592394909,2352307457,2272556026,188821243,1729977011,3687994002,274084841,3594982253,3613494426,2701949495,4162096729,322734571,2837966542,1640576439,484830689,1202797690,3537852828,4067639125,349075736,3342319475,4157467219,4255800159,1030690015,1155237496,2951971274,1757691577,607398968,2738905026,499347990,3794078908,1011452712,227885567,2818666809,213114376,3034881240,1455525988,3414450555,850817237,1817998408,3092726480];var U12=[0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795];var U22=[0,185469197,370938394,487725847,741876788,657861945,975451694,824852259,1483753576,1400783205,1315723890,1164071807,1950903388,2135319889,1649704518,1767536459,2967507152,3152976349,2801566410,2918353863,2631447780,2547432937,2328143614,2177544179,3901806776,3818836405,4270639778,4118987695,3299409036,3483825537,3535072918,3652904859,2077965243,1893020342,1841768865,1724457132,1474502543,1559041666,1107234197,1257309336,598438867,681933534,901210569,1052338372,261314535,77422314,428819965,310463728,3409685355,3224740454,3710368113,3593056380,3875770207,3960309330,4045380933,4195456072,2471224067,2554718734,2237133081,2388260884,3212035895,3028143674,2842678573,2724322336,4138563181,4255350624,3769721975,3955191162,3667219033,3516619604,3431546947,3347532110,2933734917,2782082824,3099667487,3016697106,2196052529,2313884476,2499348523,2683765030,1179510461,1296297904,1347548327,1533017514,1786102409,1635502980,2087309459,2003294622,507358933,355706840,136428751,53458370,839224033,957055980,605657339,790073846,2373340630,2256028891,2607439820,2422494913,2706270690,2856345839,3075636216,3160175349,3573941694,3725069491,3273267108,3356761769,4181598602,4063242375,4011996048,3828103837,1033297158,915985419,730517276,545572369,296679730,446754879,129166120,213705253,1709610350,1860738147,1945798516,2029293177,1239331162,1120974935,1606591296,1422699085,4148292826,4233094615,3781033664,3931371469,3682191598,3497509347,3446004468,3328955385,2939266226,2755636671,3106780840,2988687269,2198438022,2282195339,2501218972,2652609425,1201765386,1286567175,1371368976,1521706781,1805211710,1620529459,2105887268,1988838185,533804130,350174575,164439672,46346101,870912086,954669403,636813900,788204353,2358957921,2274680428,2592523643,2441661558,2695033685,2880240216,3065962831,3182487618,3572145929,3756299780,3270937875,3388507166,4174560061,4091327024,4006521127,3854606378,1014646705,930369212,711349675,560487590,272786309,457992840,106852767,223377554,1678381017,1862534868,1914052035,2031621326,1211247597,1128014560,1580087799,1428173050,32283319,182621114,401639597,486441376,768917123,651868046,1003007129,818324884,1503449823,1385356242,1333838021,1150208456,1973745387,2125135846,1673061617,1756818940,2970356327,3120694122,2802849917,2887651696,2637442643,2520393566,2334669897,2149987652,3917234703,3799141122,4284502037,4100872472,3309594171,3460984630,3545789473,3629546796,2050466060,1899603969,1814803222,1730525723,1443857720,1560382517,1075025698,1260232239,575138148,692707433,878443390,1062597235,243256656,91341917,409198410,325965383,3403100636,3252238545,3704300486,3620022987,3874428392,3990953189,4042459122,4227665663,2460449204,2578018489,2226875310,2411029155,3198115200,3046200461,2827177882,2743944855];var U32=[0,218828297,437656594,387781147,875313188,958871085,775562294,590424639,1750626376,1699970625,1917742170,2135253587,1551124588,1367295589,1180849278,1265195639,3501252752,3720081049,3399941250,3350065803,3835484340,3919042237,4270507174,4085369519,3102249176,3051593425,2734591178,2952102595,2361698556,2177869557,2530391278,2614737639,3145456443,3060847922,2708326185,2892417312,2404901663,2187128086,2504130317,2555048196,3542330227,3727205754,3375740769,3292445032,3876557655,3926170974,4246310725,4027744588,1808481195,1723872674,1910319033,2094410160,1608975247,1391201670,1173430173,1224348052,59984867,244860394,428169201,344873464,935293895,984907214,766078933,547512796,1844882806,1627235199,2011214180,2062270317,1507497298,1423022939,1137477952,1321699145,95345982,145085239,532201772,313773861,830661914,1015671571,731183368,648017665,3175501286,2957853679,2807058932,2858115069,2305455554,2220981195,2474404304,2658625497,3575528878,3625268135,3473416636,3254988725,3778151818,3963161475,4213447064,4130281361,3599595085,3683022916,3432737375,3247465558,3802222185,4020912224,4172763771,4122762354,3201631749,3017672716,2764249623,2848461854,2331590177,2280796200,2431590963,2648976442,104699613,188127444,472615631,287343814,840019705,1058709744,671593195,621591778,1852171925,1668212892,1953757831,2037970062,1514790577,1463996600,1080017571,1297403050,3673637356,3623636965,3235995134,3454686199,4007360968,3822090177,4107101658,4190530515,2997825956,3215212461,2830708150,2779915199,2256734592,2340947849,2627016082,2443058075,172466556,122466165,273792366,492483431,1047239e3,861968209,612205898,695634755,1646252340,1863638845,2013908262,1963115311,1446242576,1530455833,1277555970,1093597963,1636604631,1820824798,2073724613,1989249228,1436590835,1487645946,1337376481,1119727848,164948639,81781910,331544205,516552836,1039717051,821288114,669961897,719700128,2973530695,3157750862,2871682645,2787207260,2232435299,2283490410,2667994737,2450346104,3647212047,3564045318,3279033885,3464042516,3980931627,3762502690,4150144569,4199882800,3070356634,3121275539,2904027272,2686254721,2200818878,2384911031,2570832044,2486224549,3747192018,3528626907,3310321856,3359936201,3950355702,3867060991,4049844452,4234721005,1739656202,1790575107,2108100632,1890328081,1402811438,1586903591,1233856572,1149249077,266959938,48394827,369057872,418672217,1002783846,919489135,567498868,752375421,209336225,24197544,376187827,459744698,945164165,895287692,574624663,793451934,1679968233,1764313568,2117360635,1933530610,1343127501,1560637892,1243112415,1192455638,3704280881,3519142200,3336358691,3419915562,3907448597,3857572124,4075877127,4294704398,3029510009,3113855344,2927934315,2744104290,2159976285,2377486676,2594734927,2544078150];var U42=[0,151849742,303699484,454499602,607398968,758720310,908999204,1059270954,1214797936,1097159550,1517440620,1400849762,1817998408,1699839814,2118541908,2001430874,2429595872,2581445614,2194319100,2345119218,3034881240,3186202582,2801699524,2951971274,3635996816,3518358430,3399679628,3283088770,4237083816,4118925222,4002861748,3885750714,1002142683,850817237,698445255,548169417,529487843,377642221,227885567,77089521,1943217067,2061379749,1640576439,1757691577,1474760595,1592394909,1174215055,1290801793,2875968315,2724642869,3111247143,2960971305,2405426947,2253581325,2638606623,2487810577,3808662347,3926825029,4044981591,4162096729,3342319475,3459953789,3576539503,3693126241,1986918061,2137062819,1685577905,1836772287,1381620373,1532285339,1078185097,1229899655,1040559837,923313619,740276417,621982671,439452389,322734571,137073913,19308535,3871163981,4021308739,4104605777,4255800159,3263785589,3414450555,3499326569,3651041127,2933202493,2815956275,3167684641,3049390895,2330014213,2213296395,2566595609,2448830231,1305906550,1155237496,1607244650,1455525988,1776460110,1626319424,2079897426,1928707164,96392454,213114376,396673818,514443284,562755902,679998e3,865136418,983426092,3708173718,3557504664,3474729866,3323011204,4180808110,4030667424,3945269170,3794078908,2507040230,2623762152,2272556026,2390325492,2975484382,3092726480,2738905026,2857194700,3973773121,3856137295,4274053469,4157467219,3371096953,3252932727,3673476453,3556361835,2763173681,2915017791,3064510765,3215307299,2156299017,2307622919,2459735317,2610011675,2081048481,1963412655,1846563261,1729977011,1480485785,1362321559,1243905413,1126790795,878845905,1030690015,645401037,796197571,274084841,425408743,38544885,188821243,3613494426,3731654548,3313212038,3430322568,4082475170,4200115116,3780097726,3896688048,2668221674,2516901860,2366882550,2216610296,3141400786,2989552604,2837966542,2687165888,1202797690,1320957812,1437280870,1554391400,1669664834,1787304780,1906247262,2022837584,265905162,114585348,499347990,349075736,736970802,585122620,972512814,821712160,2595684844,2478443234,2293045232,2174754046,3196267988,3079546586,2895723464,2777952454,3537852828,3687994002,3234156416,3385345166,4142626212,4293295786,3841024952,3992742070,174567692,57326082,410887952,292596766,777231668,660510266,1011452712,893681702,1108339068,1258480242,1343618912,1494807662,1715193156,1865862730,1948373848,2100090966,2701949495,2818666809,3004591147,3122358053,2235061775,2352307457,2535604243,2653899549,3915653703,3764988233,4219352155,4067639125,3444575871,3294430577,3746175075,3594982253,836553431,953270745,600235211,718002117,367585007,484830689,133361907,251657213,2041877159,1891211689,1806599355,1654886325,1568718495,1418573201,1335535747,1184342925];function convertToInt322(bytes2){var result=[];for(var i=0;i<bytes2.length;i+=4){result.push(bytes2[i]<<24|bytes2[i+1]<<16|bytes2[i+2]<<8|bytes2[i+3])}return result}var AES2=function(key2){if(!(this instanceof AES2)){throw Error("AES must be instanitated with `new`")}Object.defineProperty(this,"key",{value:coerceArray(key2,true)});this._prepare()};AES2.prototype._prepare=function(){var rounds=numberOfRounds2[this.key.length];if(rounds==null){throw new Error("invalid key size (must be 16, 24 or 32 bytes)")}this._Ke=[];this._Kd=[];for(var i=0;i<=rounds;i++){this._Ke.push([0,0,0,0]);this._Kd.push([0,0,0,0])}var roundKeyCount=(rounds+1)*4;var KC=this.key.length/4;var tk=convertToInt322(this.key);var index;for(var i=0;i<KC;i++){index=i>>2;this._Ke[index][i%4]=tk[i];this._Kd[rounds-index][i%4]=tk[i]}var rconpointer=0;var t=KC,tt;while(t<roundKeyCount){tt=tk[KC-1];tk[0]^=S2[tt>>16&255]<<24^S2[tt>>8&255]<<16^S2[tt&255]<<8^S2[tt>>24&255]^rcon2[rconpointer]<<24;rconpointer+=1;if(KC!=8){for(var i=1;i<KC;i++){tk[i]^=tk[i-1]}}else{for(var i=1;i<KC/2;i++){tk[i]^=tk[i-1]}tt=tk[KC/2-1];tk[KC/2]^=S2[tt&255]^S2[tt>>8&255]<<8^S2[tt>>16&255]<<16^S2[tt>>24&255]<<24;for(var i=KC/2+1;i<KC;i++){tk[i]^=tk[i-1]}}var i=0,r,c;while(i<KC&&t<roundKeyCount){r=t>>2;c=t%4;this._Ke[r][c]=tk[i];this._Kd[rounds-r][c]=tk[i++];t++}}for(var r=1;r<rounds;r++){for(var c=0;c<4;c++){tt=this._Kd[r][c];this._Kd[r][c]=U12[tt>>24&255]^U22[tt>>16&255]^U32[tt>>8&255]^U42[tt&255]}}};AES2.prototype.encrypt=function(plaintext){if(plaintext.length!=16){throw new Error("invalid plaintext size (must be 16 bytes)")}var rounds=this._Ke.length-1;var a=[0,0,0,0];var t=convertToInt322(plaintext);for(var i=0;i<4;i++){t[i]^=this._Ke[0][i]}for(var r=1;r<rounds;r++){for(var i=0;i<4;i++){a[i]=T12[t[i]>>24&255]^T22[t[(i+1)%4]>>16&255]^T32[t[(i+2)%4]>>8&255]^T42[t[(i+3)%4]&255]^this._Ke[r][i]}t=a.slice()}var result=createArray(16),tt;for(var i=0;i<4;i++){tt=this._Ke[rounds][i];result[4*i]=(S2[t[i]>>24&255]^tt>>24)&255;result[4*i+1]=(S2[t[(i+1)%4]>>16&255]^tt>>16)&255;result[4*i+2]=(S2[t[(i+2)%4]>>8&255]^tt>>8)&255;result[4*i+3]=(S2[t[(i+3)%4]&255]^tt)&255}return result};AES2.prototype.decrypt=function(ciphertext){if(ciphertext.length!=16){throw new Error("invalid ciphertext size (must be 16 bytes)")}var rounds=this._Kd.length-1;var a=[0,0,0,0];var t=convertToInt322(ciphertext);for(var i=0;i<4;i++){t[i]^=this._Kd[0][i]}for(var r=1;r<rounds;r++){for(var i=0;i<4;i++){a[i]=T52[t[i]>>24&255]^T62[t[(i+3)%4]>>16&255]^T72[t[(i+2)%4]>>8&255]^T82[t[(i+1)%4]&255]^this._Kd[r][i]}t=a.slice()}var result=createArray(16),tt;for(var i=0;i<4;i++){tt=this._Kd[rounds][i];result[4*i]=(Si2[t[i]>>24&255]^tt>>24)&255;result[4*i+1]=(Si2[t[(i+3)%4]>>16&255]^tt>>16)&255;result[4*i+2]=(Si2[t[(i+2)%4]>>8&255]^tt>>8)&255;result[4*i+3]=(Si2[t[(i+1)%4]&255]^tt)&255}return result};var ModeOfOperationECB=function(key2){if(!(this instanceof ModeOfOperationECB)){throw Error("AES must be instanitated with `new`")}this.description="Electronic Code Block";this.name="ecb";this._aes=new AES2(key2)};ModeOfOperationECB.prototype.encrypt=function(plaintext){plaintext=coerceArray(plaintext);if(plaintext.length%16!==0){throw new Error("invalid plaintext size (must be multiple of 16 bytes)")}var ciphertext=createArray(plaintext.length);var block=createArray(16);for(var i=0;i<plaintext.length;i+=16){copyArray(plaintext,block,0,i,i+16);block=this._aes.encrypt(block);copyArray(block,ciphertext,i)}return ciphertext};ModeOfOperationECB.prototype.decrypt=function(ciphertext){ciphertext=coerceArray(ciphertext);if(ciphertext.length%16!==0){throw new Error("invalid ciphertext size (must be multiple of 16 bytes)")}var plaintext=createArray(ciphertext.length);var block=createArray(16);for(var i=0;i<ciphertext.length;i+=16){copyArray(ciphertext,block,0,i,i+16);block=this._aes.decrypt(block);copyArray(block,plaintext,i)}return plaintext};var ModeOfOperationCBC=function(key2,iv){if(!(this instanceof ModeOfOperationCBC)){throw Error("AES must be instanitated with `new`")}this.description="Cipher Block Chaining";this.name="cbc";if(!iv){iv=createArray(16)}else if(iv.length!=16){throw new Error("invalid initialation vector size (must be 16 bytes)")}this._lastCipherblock=coerceArray(iv,true);this._aes=new AES2(key2)};ModeOfOperationCBC.prototype.encrypt=function(plaintext){plaintext=coerceArray(plaintext);if(plaintext.length%16!==0){throw new Error("invalid plaintext size (must be multiple of 16 bytes)")}var ciphertext=createArray(plaintext.length);var block=createArray(16);for(var i=0;i<plaintext.length;i+=16){copyArray(plaintext,block,0,i,i+16);for(var j=0;j<16;j++){block[j]^=this._lastCipherblock[j]}this._lastCipherblock=this._aes.encrypt(block);copyArray(this._lastCipherblock,ciphertext,i)}return ciphertext};ModeOfOperationCBC.prototype.decrypt=function(ciphertext){ciphertext=coerceArray(ciphertext);if(ciphertext.length%16!==0){throw new Error("invalid ciphertext size (must be multiple of 16 bytes)")}var plaintext=createArray(ciphertext.length);var block=createArray(16);for(var i=0;i<ciphertext.length;i+=16){copyArray(ciphertext,block,0,i,i+16);block=this._aes.decrypt(block);for(var j=0;j<16;j++){plaintext[i+j]=block[j]^this._lastCipherblock[j]}copyArray(ciphertext,this._lastCipherblock,0,i,i+16)}return plaintext};var ModeOfOperationCFB=function(key2,iv,segmentSize){if(!(this instanceof ModeOfOperationCFB)){throw Error("AES must be instanitated with `new`")}this.description="Cipher Feedback";this.name="cfb";if(!iv){iv=createArray(16)}else if(iv.length!=16){throw new Error("invalid initialation vector size (must be 16 size)")}if(!segmentSize){segmentSize=1}this.segmentSize=segmentSize;this._shiftRegister=coerceArray(iv,true);this._aes=new AES2(key2)};ModeOfOperationCFB.prototype.encrypt=function(plaintext){if(plaintext.length%this.segmentSize!=0){throw new Error("invalid plaintext size (must be segmentSize bytes)")}var encrypted=coerceArray(plaintext,true);var xorSegment;for(var i=0;i<encrypted.length;i+=this.segmentSize){xorSegment=this._aes.encrypt(this._shiftRegister);for(var j=0;j<this.segmentSize;j++){encrypted[i+j]^=xorSegment[j]}copyArray(this._shiftRegister,this._shiftRegister,0,this.segmentSize);copyArray(encrypted,this._shiftRegister,16-this.segmentSize,i,i+this.segmentSize)}return encrypted};ModeOfOperationCFB.prototype.decrypt=function(ciphertext){if(ciphertext.length%this.segmentSize!=0){throw new Error("invalid ciphertext size (must be segmentSize bytes)")}var plaintext=coerceArray(ciphertext,true);var xorSegment;for(var i=0;i<plaintext.length;i+=this.segmentSize){xorSegment=this._aes.encrypt(this._shiftRegister);for(var j=0;j<this.segmentSize;j++){plaintext[i+j]^=xorSegment[j]}copyArray(this._shiftRegister,this._shiftRegister,0,this.segmentSize);copyArray(ciphertext,this._shiftRegister,16-this.segmentSize,i,i+this.segmentSize)}return plaintext};var ModeOfOperationOFB=function(key2,iv){if(!(this instanceof ModeOfOperationOFB)){throw Error("AES must be instanitated with `new`")}this.description="Output Feedback";this.name="ofb";if(!iv){iv=createArray(16)}else if(iv.length!=16){throw new Error("invalid initialation vector size (must be 16 bytes)")}this._lastPrecipher=coerceArray(iv,true);this._lastPrecipherIndex=16;this._aes=new AES2(key2)};ModeOfOperationOFB.prototype.encrypt=function(plaintext){var encrypted=coerceArray(plaintext,true);for(var i=0;i<encrypted.length;i++){if(this._lastPrecipherIndex===16){this._lastPrecipher=this._aes.encrypt(this._lastPrecipher);this._lastPrecipherIndex=0}encrypted[i]^=this._lastPrecipher[this._lastPrecipherIndex++]}return encrypted};ModeOfOperationOFB.prototype.decrypt=ModeOfOperationOFB.prototype.encrypt;var Counter=function(initialValue){if(!(this instanceof Counter)){throw Error("Counter must be instanitated with `new`")}if(initialValue!==0&&!initialValue){initialValue=1}if(typeof initialValue==="number"){this._counter=createArray(16);this.setValue(initialValue)}else{this.setBytes(initialValue)}};Counter.prototype.setValue=function(value){if(typeof value!=="number"||parseInt(value)!=value){throw new Error("invalid counter value (must be an integer)")}for(var index=15;index>=0;--index){this._counter[index]=value%256;value=value>>8}};Counter.prototype.setBytes=function(bytes2){bytes2=coerceArray(bytes2,true);if(bytes2.length!=16){throw new Error("invalid counter bytes size (must be 16 bytes)")}this._counter=bytes2};Counter.prototype.increment=function(){for(var i=15;i>=0;i--){if(this._counter[i]===255){this._counter[i]=0}else{this._counter[i]++;break}}};var ModeOfOperationCTR=function(key2,counter){if(!(this instanceof ModeOfOperationCTR)){throw Error("AES must be instanitated with `new`")}this.description="Counter";this.name="ctr";if(!(counter instanceof Counter)){counter=new Counter(counter)}this._counter=counter;this._remainingCounter=null;this._remainingCounterIndex=16;this._aes=new AES2(key2)};ModeOfOperationCTR.prototype.encrypt=function(plaintext){var encrypted=coerceArray(plaintext,true);for(var i=0;i<encrypted.length;i++){if(this._remainingCounterIndex===16){this._remainingCounter=this._aes.encrypt(this._counter._counter);this._remainingCounterIndex=0;this._counter.increment()}encrypted[i]^=this._remainingCounter[this._remainingCounterIndex++]}return encrypted};ModeOfOperationCTR.prototype.decrypt=ModeOfOperationCTR.prototype.encrypt;function pkcs7pad(data){data=coerceArray(data,true);var padder=16-data.length%16;var result=createArray(data.length+padder);copyArray(data,result);for(var i=data.length;i<result.length;i++){result[i]=padder}return result}function pkcs7strip(data){data=coerceArray(data,true);if(data.length<16){throw new Error("PKCS#7 invalid length")}var padder=data[data.length-1];if(padder>16){throw new Error("PKCS#7 padding byte out of range")}var length=data.length-padder;for(var i=0;i<padder;i++){if(data[length+i]!==padder){throw new Error("PKCS#7 invalid padding byte")}}var result=createArray(length);copyArray(data,result,0,0,length);return result}var aesjs={AES:AES2,Counter:Counter,ModeOfOperation:{ecb:ModeOfOperationECB,cbc:ModeOfOperationCBC,cfb:ModeOfOperationCFB,ofb:ModeOfOperationOFB,ctr:ModeOfOperationCTR},utils:{hex:convertHex,utf8:convertUtf8},padding:{pkcs7:{pad:pkcs7pad,strip:pkcs7strip}},_arrayTest:{coerceArray:coerceArray,createArray:createArray,copyArray:copyArray}};{module2.exports=aesjs}})()})(aesJs);return aesJs.exports}var aesJsExports=requireAesJs();const aes=getDefaultExportFromCjs(aesJsExports);const version$6="json-wallets/5.7.0";function looseArrayify(hexString){if(typeof hexString==="string"&&hexString.substring(0,2)!=="0x"){hexString="0x"+hexString}return arrayify$1(hexString)}function zpad(value,length){value=String(value);while(value.length<length){value="0"+value}return value}function getPassword(password){if(typeof password==="string"){return toUtf8Bytes(password,UnicodeNormalizationForm.NFKC)}return arrayify$1(password)}function searchPath(object2,path){let currentChild=object2;const comps=path.toLowerCase().split("/");for(let i=0;i<comps.length;i++){let matchingChild=null;for(const key2 in currentChild){if(key2.toLowerCase()===comps[i]){matchingChild=currentChild[key2];break}}if(matchingChild===null){return null}currentChild=matchingChild}return currentChild}function uuidV4(randomBytes2){const bytes2=arrayify$1(randomBytes2);bytes2[6]=bytes2[6]&15|64;bytes2[8]=bytes2[8]&63|128;const value=hexlify$1(bytes2);return[value.substring(2,10),value.substring(10,14),value.substring(14,18),value.substring(18,22),value.substring(22,34)].join("-")}const logger$6=new Logger$3(version$6);class CrowdsaleAccount extends Description{isCrowdsaleAccount(value){return!!(value&&value._isCrowdsaleAccount)}}function decrypt$1(json,password){const data=JSON.parse(json);password=getPassword(password);const ethaddr=getAddress(searchPath(data,"ethaddr"));const encseed=looseArrayify(searchPath(data,"encseed"));if(!encseed||encseed.length%16!==0){logger$6.throwArgumentError("invalid encseed","json",json)}const key2=arrayify$1(pbkdf2$1(password,password,2e3,32,"sha256")).slice(0,16);const iv=encseed.slice(0,16);const encryptedSeed=encseed.slice(16);const aesCbc=new aes.ModeOfOperation.cbc(key2,iv);const seed=aes.padding.pkcs7.strip(arrayify$1(aesCbc.decrypt(encryptedSeed)));let seedHex="";for(let i=0;i<seed.length;i++){seedHex+=String.fromCharCode(seed[i])}const seedHexBytes=toUtf8Bytes(seedHex);const privateKey=keccak256$1(seedHexBytes);return new CrowdsaleAccount({_isCrowdsaleAccount:true,address:ethaddr,privateKey:privateKey})}function isCrowdsaleWallet(json){let data=null;try{data=JSON.parse(json)}catch(error){return false}return data.encseed&&data.ethaddr}function isKeystoreWallet(json){let data=null;try{data=JSON.parse(json)}catch(error){return false}if(!data.version||parseInt(data.version)!==data.version||parseInt(data.version)!==3){return false}return true}var scrypt$1={exports:{}};var hasRequiredScrypt;function requireScrypt(){if(hasRequiredScrypt)return scrypt$1.exports;hasRequiredScrypt=1;(function(module2,exports2){(function(root2){const MAX_VALUE=2147483647;function SHA2562(m){const K=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]);let h0=1779033703,h1=3144134277,h2=1013904242,h3=2773480762;let h4=1359893119,h5=2600822924,h6=528734635,h7=1541459225;const w=new Uint32Array(64);function blocks(p2){let off=0,len=p2.length;while(len>=64){let a=h0,b2=h1,c=h2,d=h3,e=h4,f2=h5,g=h6,h=h7,u,i2,j,t1,t2;for(i2=0;i2<16;i2++){j=off+i2*4;w[i2]=(p2[j]&255)<<24|(p2[j+1]&255)<<16|(p2[j+2]&255)<<8|p2[j+3]&255}for(i2=16;i2<64;i2++){u=w[i2-2];t1=(u>>>17|u<<32-17)^(u>>>19|u<<32-19)^u>>>10;u=w[i2-15];t2=(u>>>7|u<<32-7)^(u>>>18|u<<32-18)^u>>>3;w[i2]=(t1+w[i2-7]|0)+(t2+w[i2-16]|0)|0}for(i2=0;i2<64;i2++){t1=(((e>>>6|e<<32-6)^(e>>>11|e<<32-11)^(e>>>25|e<<32-25))+(e&f2^~e&g)|0)+(h+(K[i2]+w[i2]|0)|0)|0;t2=((a>>>2|a<<32-2)^(a>>>13|a<<32-13)^(a>>>22|a<<32-22))+(a&b2^a&c^b2&c)|0;h=g;g=f2;f2=e;e=d+t1|0;d=c;c=b2;b2=a;a=t1+t2|0}h0=h0+a|0;h1=h1+b2|0;h2=h2+c|0;h3=h3+d|0;h4=h4+e|0;h5=h5+f2|0;h6=h6+g|0;h7=h7+h|0;off+=64;len-=64}}blocks(m);let i,bytesLeft=m.length%64,bitLenHi=m.length/536870912|0,bitLenLo=m.length<<3,numZeros=bytesLeft<56?56:120,p=m.slice(m.length-bytesLeft,m.length);p.push(128);for(i=bytesLeft+1;i<numZeros;i++){p.push(0)}p.push(bitLenHi>>>24&255);p.push(bitLenHi>>>16&255);p.push(bitLenHi>>>8&255);p.push(bitLenHi>>>0&255);p.push(bitLenLo>>>24&255);p.push(bitLenLo>>>16&255);p.push(bitLenLo>>>8&255);p.push(bitLenLo>>>0&255);blocks(p);return[h0>>>24&255,h0>>>16&255,h0>>>8&255,h0>>>0&255,h1>>>24&255,h1>>>16&255,h1>>>8&255,h1>>>0&255,h2>>>24&255,h2>>>16&255,h2>>>8&255,h2>>>0&255,h3>>>24&255,h3>>>16&255,h3>>>8&255,h3>>>0&255,h4>>>24&255,h4>>>16&255,h4>>>8&255,h4>>>0&255,h5>>>24&255,h5>>>16&255,h5>>>8&255,h5>>>0&255,h6>>>24&255,h6>>>16&255,h6>>>8&255,h6>>>0&255,h7>>>24&255,h7>>>16&255,h7>>>8&255,h7>>>0&255]}function PBKDF2_HMAC_SHA256_OneIter(password,salt,dkLen){password=password.length<=64?password:SHA2562(password);const innerLen=64+salt.length+4;const inner=new Array(innerLen);const outerKey=new Array(64);let i;let dk=[];for(i=0;i<64;i++){inner[i]=54}for(i=0;i<password.length;i++){inner[i]^=password[i]}for(i=0;i<salt.length;i++){inner[64+i]=salt[i]}for(i=innerLen-4;i<innerLen;i++){inner[i]=0}for(i=0;i<64;i++)outerKey[i]=92;for(i=0;i<password.length;i++)outerKey[i]^=password[i];function incrementCounter(){for(let i2=innerLen-1;i2>=innerLen-4;i2--){inner[i2]++;if(inner[i2]<=255)return;inner[i2]=0}}while(dkLen>=32){incrementCounter();dk=dk.concat(SHA2562(outerKey.concat(SHA2562(inner))));dkLen-=32}if(dkLen>0){incrementCounter();dk=dk.concat(SHA2562(outerKey.concat(SHA2562(inner))).slice(0,dkLen))}return dk}function blockmix_salsa8(BY,Yi,r,x,_X){let i;arraycopy(BY,(2*r-1)*16,_X,0,16);for(i=0;i<2*r;i++){blockxor(BY,i*16,_X,16);salsa20_8(_X,x);arraycopy(_X,0,BY,Yi+i*16,16)}for(i=0;i<r;i++){arraycopy(BY,Yi+i*2*16,BY,i*16,16)}for(i=0;i<r;i++){arraycopy(BY,Yi+(i*2+1)*16,BY,(i+r)*16,16)}}function R(a,b2){return a<<b2|a>>>32-b2}function salsa20_8(B,x){arraycopy(B,0,x,0,16);for(let i=8;i>0;i-=2){x[4]^=R(x[0]+x[12],7);x[8]^=R(x[4]+x[0],9);x[12]^=R(x[8]+x[4],13);x[0]^=R(x[12]+x[8],18);x[9]^=R(x[5]+x[1],7);x[13]^=R(x[9]+x[5],9);x[1]^=R(x[13]+x[9],13);x[5]^=R(x[1]+x[13],18);x[14]^=R(x[10]+x[6],7);x[2]^=R(x[14]+x[10],9);x[6]^=R(x[2]+x[14],13);x[10]^=R(x[6]+x[2],18);x[3]^=R(x[15]+x[11],7);x[7]^=R(x[3]+x[15],9);x[11]^=R(x[7]+x[3],13);x[15]^=R(x[11]+x[7],18);x[1]^=R(x[0]+x[3],7);x[2]^=R(x[1]+x[0],9);x[3]^=R(x[2]+x[1],13);x[0]^=R(x[3]+x[2],18);x[6]^=R(x[5]+x[4],7);x[7]^=R(x[6]+x[5],9);x[4]^=R(x[7]+x[6],13);x[5]^=R(x[4]+x[7],18);x[11]^=R(x[10]+x[9],7);x[8]^=R(x[11]+x[10],9);x[9]^=R(x[8]+x[11],13);x[10]^=R(x[9]+x[8],18);x[12]^=R(x[15]+x[14],7);x[13]^=R(x[12]+x[15],9);x[14]^=R(x[13]+x[12],13);x[15]^=R(x[14]+x[13],18)}for(let i=0;i<16;++i){B[i]+=x[i]}}function blockxor(S2,Si2,D,len){for(let i=0;i<len;i++){D[i]^=S2[Si2+i]}}function arraycopy(src,srcPos,dest,destPos,length){while(length--){dest[destPos++]=src[srcPos++]}}function checkBufferish(o){if(!o||typeof o.length!=="number"){return false}for(let i=0;i<o.length;i++){const v=o[i];if(typeof v!=="number"||v%1||v<0||v>=256){return false}}return true}function ensureInteger(value,name){if(typeof value!=="number"||value%1){throw new Error("invalid "+name)}return value}function _scrypt(password,salt,N2,r,p,dkLen,callback){N2=ensureInteger(N2,"N");r=ensureInteger(r,"r");p=ensureInteger(p,"p");dkLen=ensureInteger(dkLen,"dkLen");if(N2===0||(N2&N2-1)!==0){throw new Error("N must be power of 2")}if(N2>MAX_VALUE/128/r){throw new Error("N too large")}if(r>MAX_VALUE/128/p){throw new Error("r too large")}if(!checkBufferish(password)){throw new Error("password must be an array or buffer")}password=Array.prototype.slice.call(password);if(!checkBufferish(salt)){throw new Error("salt must be an array or buffer")}salt=Array.prototype.slice.call(salt);let b2=PBKDF2_HMAC_SHA256_OneIter(password,salt,p*128*r);const B=new Uint32Array(p*32*r);for(let i=0;i<B.length;i++){const j=i*4;B[i]=(b2[j+3]&255)<<24|(b2[j+2]&255)<<16|(b2[j+1]&255)<<8|(b2[j+0]&255)<<0}const XY=new Uint32Array(64*r);const V=new Uint32Array(32*r*N2);const Yi=32*r;const x=new Uint32Array(16);const _X=new Uint32Array(16);const totalOps=p*N2*2;let currentOp=0;let lastPercent10=null;let stop=false;let state=0;let i0=0,i1;let Bi;const limit=callback?parseInt(1e3/r):4294967295;const nextTick2=typeof setImmediate!=="undefined"?setImmediate:setTimeout;const incrementalSMix=function(){if(stop){return callback(new Error("cancelled"),currentOp/totalOps)}let steps;switch(state){case 0:Bi=i0*32*r;arraycopy(B,Bi,XY,0,Yi);state=1;i1=0;case 1:steps=N2-i1;if(steps>limit){steps=limit}for(let i=0;i<steps;i++){arraycopy(XY,0,V,(i1+i)*Yi,Yi);blockmix_salsa8(XY,Yi,r,x,_X)}i1+=steps;currentOp+=steps;if(callback){const percent10=parseInt(1e3*currentOp/totalOps);if(percent10!==lastPercent10){stop=callback(null,currentOp/totalOps);if(stop){break}lastPercent10=percent10}}if(i1<N2){break}i1=0;state=2;case 2:steps=N2-i1;if(steps>limit){steps=limit}for(let i=0;i<steps;i++){const offset=(2*r-1)*16;const j=XY[offset]&N2-1;blockxor(V,j*Yi,XY,Yi);blockmix_salsa8(XY,Yi,r,x,_X)}i1+=steps;currentOp+=steps;if(callback){const percent10=parseInt(1e3*currentOp/totalOps);if(percent10!==lastPercent10){stop=callback(null,currentOp/totalOps);if(stop){break}lastPercent10=percent10}}if(i1<N2){break}arraycopy(XY,0,B,Bi,Yi);i0++;if(i0<p){state=0;break}b2=[];for(let i=0;i<B.length;i++){b2.push(B[i]>>0&255);b2.push(B[i]>>8&255);b2.push(B[i]>>16&255);b2.push(B[i]>>24&255)}const derivedKey=PBKDF2_HMAC_SHA256_OneIter(password,b2,dkLen);if(callback){callback(null,1,derivedKey)}return derivedKey}if(callback){nextTick2(incrementalSMix)}};if(!callback){while(true){const derivedKey=incrementalSMix();if(derivedKey!=void 0){return derivedKey}}}incrementalSMix()}const lib={scrypt:function(password,salt,N2,r,p,dkLen,progressCallback){return new Promise(function(resolve,reject){let lastProgress=0;if(progressCallback){progressCallback(0)}_scrypt(password,salt,N2,r,p,dkLen,function(error,progress,key2){if(error){reject(error)}else if(key2){if(progressCallback&&lastProgress!==1){progressCallback(1)}resolve(new Uint8Array(key2))}else if(progressCallback&&progress!==lastProgress){lastProgress=progress;return progressCallback(progress)}})})},syncScrypt:function(password,salt,N2,r,p,dkLen){return new Uint8Array(_scrypt(password,salt,N2,r,p,dkLen))}};{module2.exports=lib}})()})(scrypt$1);return scrypt$1.exports}var scryptExports=requireScrypt();const scrypt=getDefaultExportFromCjs(scryptExports);const version$5="hdnode/5.8.0";const logger$5=new Logger$3(version$5);const N=BigNumber$1.from("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141");const MasterSecret=toUtf8Bytes("Bitcoin seed");const HardenedBit=2147483648;function getUpperMask(bits){return(1<<bits)-1<<8-bits}function getLowerMask(bits){return(1<<bits)-1}function bytes32(value){return hexZeroPad$1(hexlify$1(value),32)}function base58check(data){return Base58.encode(concat$1([data,hexDataSlice$1(sha256(sha256(data)),0,4)]))}function getWordlist(wordlist2){if(wordlist2==null){return wordlists["en"]}if(typeof wordlist2==="string"){const words2=wordlists[wordlist2];if(words2==null){logger$5.throwArgumentError("unknown locale","wordlist",wordlist2)}return words2}return wordlist2}const _constructorGuard={};const defaultPath="m/44'/60'/0'/0/0";class HDNode2{constructor(constructorGuard,privateKey,publicKey,parentFingerprint,chainCode,index,depth,mnemonicOrPath){if(constructorGuard!==_constructorGuard){throw new Error("HDNode constructor cannot be called directly")}if(privateKey){const signingKey=new SigningKey$1(privateKey);defineReadOnly$1(this,"privateKey",signingKey.privateKey);defineReadOnly$1(this,"publicKey",signingKey.compressedPublicKey)}else{defineReadOnly$1(this,"privateKey",null);defineReadOnly$1(this,"publicKey",hexlify$1(publicKey))}defineReadOnly$1(this,"parentFingerprint",parentFingerprint);defineReadOnly$1(this,"fingerprint",hexDataSlice$1(ripemd160(sha256(this.publicKey)),0,4));defineReadOnly$1(this,"address",computeAddress(this.publicKey));defineReadOnly$1(this,"chainCode",chainCode);defineReadOnly$1(this,"index",index);defineReadOnly$1(this,"depth",depth);if(mnemonicOrPath==null){defineReadOnly$1(this,"mnemonic",null);defineReadOnly$1(this,"path",null)}else if(typeof mnemonicOrPath==="string"){defineReadOnly$1(this,"mnemonic",null);defineReadOnly$1(this,"path",mnemonicOrPath)}else{defineReadOnly$1(this,"mnemonic",mnemonicOrPath);defineReadOnly$1(this,"path",mnemonicOrPath.path)}}get extendedKey(){if(this.depth>=256){throw new Error("Depth too large!")}return base58check(concat$1([this.privateKey!=null?"0x0488ADE4":"0x0488B21E",hexlify$1(this.depth),this.parentFingerprint,hexZeroPad$1(hexlify$1(this.index),4),this.chainCode,this.privateKey!=null?concat$1(["0x00",this.privateKey]):this.publicKey]))}neuter(){return new HDNode2(_constructorGuard,null,this.publicKey,this.parentFingerprint,this.chainCode,this.index,this.depth,this.path)}_derive(index){if(index>4294967295){throw new Error("invalid index - "+String(index))}let path=this.path;if(path){path+="/"+(index&~HardenedBit)}const data=new Uint8Array(37);if(index&HardenedBit){if(!this.privateKey){throw new Error("cannot derive child of neutered node")}data.set(arrayify$1(this.privateKey),1);if(path){path+="'"}}else{data.set(arrayify$1(this.publicKey))}for(let i=24;i>=0;i-=8){data[33+(i>>3)]=index>>24-i&255}const I=arrayify$1(computeHmac(SupportedAlgorithm.sha512,this.chainCode,data));const IL=I.slice(0,32);const IR=I.slice(32);let ki=null;let Ki=null;if(this.privateKey){ki=bytes32(BigNumber$1.from(IL).add(this.privateKey).mod(N))}else{const ek=new SigningKey$1(hexlify$1(IL));Ki=ek._addPoint(this.publicKey)}let mnemonicOrPath=path;const srcMnemonic=this.mnemonic;if(srcMnemonic){mnemonicOrPath=Object.freeze({phrase:srcMnemonic.phrase,path:path,locale:srcMnemonic.locale||"en"})}return new HDNode2(_constructorGuard,ki,Ki,this.fingerprint,bytes32(IR),index,this.depth+1,mnemonicOrPath)}derivePath(path){const components=path.split("/");if(components.length===0||components[0]==="m"&&this.depth!==0){throw new Error("invalid path - "+path)}if(components[0]==="m"){components.shift()}let result=this;for(let i=0;i<components.length;i++){const component=components[i];if(component.match(/^[0-9]+'$/)){const index=parseInt(component.substring(0,component.length-1));if(index>=HardenedBit){throw new Error("invalid path index - "+component)}result=result._derive(HardenedBit+index)}else if(component.match(/^[0-9]+$/)){const index=parseInt(component);if(index>=HardenedBit){throw new Error("invalid path index - "+component)}result=result._derive(index)}else{throw new Error("invalid path component - "+component)}}return result}static _fromSeed(seed,mnemonic){const seedArray=arrayify$1(seed);if(seedArray.length<16||seedArray.length>64){throw new Error("invalid seed")}const I=arrayify$1(computeHmac(SupportedAlgorithm.sha512,MasterSecret,seedArray));return new HDNode2(_constructorGuard,bytes32(I.slice(0,32)),null,"0x00000000",bytes32(I.slice(32)),0,0,mnemonic)}static fromMnemonic(mnemonic,password,wordlist2){wordlist2=getWordlist(wordlist2);mnemonic=entropyToMnemonic(mnemonicToEntropy(mnemonic,wordlist2),wordlist2);return HDNode2._fromSeed(mnemonicToSeed(mnemonic,password),{phrase:mnemonic,path:"m",locale:wordlist2.locale})}static fromSeed(seed){return HDNode2._fromSeed(seed,null)}static fromExtendedKey(extendedKey){const bytes2=Base58.decode(extendedKey);if(bytes2.length!==82||base58check(bytes2.slice(0,78))!==extendedKey){logger$5.throwArgumentError("invalid extended key","extendedKey","[REDACTED]")}const depth=bytes2[4];const parentFingerprint=hexlify$1(bytes2.slice(5,9));const index=parseInt(hexlify$1(bytes2.slice(9,13)).substring(2),16);const chainCode=hexlify$1(bytes2.slice(13,45));const key2=bytes2.slice(45,78);switch(hexlify$1(bytes2.slice(0,4))){case"0x0488b21e":case"0x043587cf":return new HDNode2(_constructorGuard,null,hexlify$1(key2),parentFingerprint,chainCode,index,depth,null);case"0x0488ade4":case"0x04358394 ":if(key2[0]!==0){break}return new HDNode2(_constructorGuard,hexlify$1(key2.slice(1)),null,parentFingerprint,chainCode,index,depth,null)}return logger$5.throwArgumentError("invalid extended key","extendedKey","[REDACTED]")}}function mnemonicToSeed(mnemonic,password){if(!password){password=""}const salt=toUtf8Bytes("mnemonic"+password,UnicodeNormalizationForm.NFKD);return pbkdf2$1(toUtf8Bytes(mnemonic,UnicodeNormalizationForm.NFKD),salt,2048,64,"sha512")}function mnemonicToEntropy(mnemonic,wordlist2){wordlist2=getWordlist(wordlist2);logger$5.checkNormalize();const words2=wordlist2.split(mnemonic);if(words2.length%3!==0){throw new Error("invalid mnemonic")}const entropy=arrayify$1(new Uint8Array(Math.ceil(11*words2.length/8)));let offset=0;for(let i=0;i<words2.length;i++){let index=wordlist2.getWordIndex(words2[i].normalize("NFKD"));if(index===-1){throw new Error("invalid mnemonic")}for(let bit=0;bit<11;bit++){if(index&1<<10-bit){entropy[offset>>3]|=1<<7-offset%8}offset++}}const entropyBits=32*words2.length/3;const checksumBits=words2.length/3;const checksumMask=getUpperMask(checksumBits);const checksum2=arrayify$1(sha256(entropy.slice(0,entropyBits/8)))[0]&checksumMask;if(checksum2!==(entropy[entropy.length-1]&checksumMask)){throw new Error("invalid checksum")}return hexlify$1(entropy.slice(0,entropyBits/8))}function entropyToMnemonic(entropy,wordlist2){wordlist2=getWordlist(wordlist2);entropy=arrayify$1(entropy);if(entropy.length%4!==0||entropy.length<16||entropy.length>32){throw new Error("invalid entropy")}const indices=[0];let remainingBits=11;for(let i=0;i<entropy.length;i++){if(remainingBits>8){indices[indices.length-1]<<=8;indices[indices.length-1]|=entropy[i];remainingBits-=8}else{indices[indices.length-1]<<=remainingBits;indices[indices.length-1]|=entropy[i]>>8-remainingBits;indices.push(entropy[i]&getLowerMask(8-remainingBits));remainingBits+=3}}const checksumBits=entropy.length/4;const checksum2=arrayify$1(sha256(entropy))[0]&getUpperMask(checksumBits);indices[indices.length-1]<<=checksumBits;indices[indices.length-1]|=checksum2>>8-checksumBits;return wordlist2.join(indices.map(index=>wordlist2.getWord(index)))}const version$4="random/5.8.0";const logger$4=new Logger$3(version$4);function getGlobal(){if(typeof self!=="undefined"){return self}if(typeof window!=="undefined"){return window}if(typeof global!=="undefined"){return global}throw new Error("unable to locate global object")}const anyGlobal=getGlobal();let crypto$1=anyGlobal.crypto||anyGlobal.msCrypto;if(!crypto$1||!crypto$1.getRandomValues){logger$4.warn("WARNING: Missing strong random number source");crypto$1={getRandomValues:function(buffer){return logger$4.throwError("no secure random source avaialble",Logger$3.errors.UNSUPPORTED_OPERATION,{operation:"crypto.getRandomValues"})}}}function randomBytes(length){if(length<=0||length>1024||length%1||length!=length){logger$4.throwArgumentError("invalid length","length",length)}const result=new Uint8Array(length);crypto$1.getRandomValues(result);return arrayify$1(result)}var __awaiter$4=function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$3=new Logger$3(version$6);function hasMnemonic$1(value){return value!=null&&value.mnemonic&&value.mnemonic.phrase}class KeystoreAccount extends Description{isKeystoreAccount(value){return!!(value&&value._isKeystoreAccount)}}function _decrypt(data,key2,ciphertext){const cipher=searchPath(data,"crypto/cipher");if(cipher==="aes-128-ctr"){const iv=looseArrayify(searchPath(data,"crypto/cipherparams/iv"));const counter=new aes.Counter(iv);const aesCtr=new aes.ModeOfOperation.ctr(key2,counter);return arrayify$1(aesCtr.decrypt(ciphertext))}return null}function _getAccount(data,key2){const ciphertext=looseArrayify(searchPath(data,"crypto/ciphertext"));const computedMAC=hexlify$1(keccak256$1(concat$1([key2.slice(16,32),ciphertext]))).substring(2);if(computedMAC!==searchPath(data,"crypto/mac").toLowerCase()){throw new Error("invalid password")}const privateKey=_decrypt(data,key2.slice(0,16),ciphertext);if(!privateKey){logger$3.throwError("unsupported cipher",Logger$3.errors.UNSUPPORTED_OPERATION,{operation:"decrypt"})}const mnemonicKey=key2.slice(32,64);const address=computeAddress(privateKey);if(data.address){let check=data.address.toLowerCase();if(check.substring(0,2)!=="0x"){check="0x"+check}if(getAddress(check)!==address){throw new Error("address mismatch")}}const account={_isKeystoreAccount:true,address:address,privateKey:hexlify$1(privateKey)};if(searchPath(data,"x-ethers/version")==="0.1"){const mnemonicCiphertext=looseArrayify(searchPath(data,"x-ethers/mnemonicCiphertext"));const mnemonicIv=looseArrayify(searchPath(data,"x-ethers/mnemonicCounter"));const mnemonicCounter=new aes.Counter(mnemonicIv);const mnemonicAesCtr=new aes.ModeOfOperation.ctr(mnemonicKey,mnemonicCounter);const path=searchPath(data,"x-ethers/path")||defaultPath;const locale=searchPath(data,"x-ethers/locale")||"en";const entropy=arrayify$1(mnemonicAesCtr.decrypt(mnemonicCiphertext));try{const mnemonic=entropyToMnemonic(entropy,locale);const node=HDNode2.fromMnemonic(mnemonic,null,locale).derivePath(path);if(node.privateKey!=account.privateKey){throw new Error("mnemonic mismatch")}account.mnemonic=node.mnemonic}catch(error){if(error.code!==Logger$3.errors.INVALID_ARGUMENT||error.argument!=="wordlist"){throw error}}}return new KeystoreAccount(account)}function pbkdf2Sync(passwordBytes,salt,count,dkLen,prfFunc){return arrayify$1(pbkdf2$1(passwordBytes,salt,count,dkLen,prfFunc))}function pbkdf2(passwordBytes,salt,count,dkLen,prfFunc){return Promise.resolve(pbkdf2Sync(passwordBytes,salt,count,dkLen,prfFunc))}function _computeKdfKey(data,password,pbkdf2Func,scryptFunc,progressCallback){const passwordBytes=getPassword(password);const kdf=searchPath(data,"crypto/kdf");if(kdf&&typeof kdf==="string"){const throwError2=function(name,value){return logger$3.throwArgumentError("invalid key-derivation function parameters",name,value)};if(kdf.toLowerCase()==="scrypt"){const salt=looseArrayify(searchPath(data,"crypto/kdfparams/salt"));const N2=parseInt(searchPath(data,"crypto/kdfparams/n"));const r=parseInt(searchPath(data,"crypto/kdfparams/r"));const p=parseInt(searchPath(data,"crypto/kdfparams/p"));if(!N2||!r||!p){throwError2("kdf",kdf)}if((N2&N2-1)!==0){throwError2("N",N2)}const dkLen=parseInt(searchPath(data,"crypto/kdfparams/dklen"));if(dkLen!==32){throwError2("dklen",dkLen)}return scryptFunc(passwordBytes,salt,N2,r,p,64,progressCallback)}else if(kdf.toLowerCase()==="pbkdf2"){const salt=looseArrayify(searchPath(data,"crypto/kdfparams/salt"));let prfFunc=null;const prf=searchPath(data,"crypto/kdfparams/prf");if(prf==="hmac-sha256"){prfFunc="sha256"}else if(prf==="hmac-sha512"){prfFunc="sha512"}else{throwError2("prf",prf)}const count=parseInt(searchPath(data,"crypto/kdfparams/c"));const dkLen=parseInt(searchPath(data,"crypto/kdfparams/dklen"));if(dkLen!==32){throwError2("dklen",dkLen)}return pbkdf2Func(passwordBytes,salt,count,dkLen,prfFunc)}}return logger$3.throwArgumentError("unsupported key-derivation function","kdf",kdf)}function decryptSync(json,password){const data=JSON.parse(json);const key2=_computeKdfKey(data,password,pbkdf2Sync,scrypt.syncScrypt);return _getAccount(data,key2)}function decrypt(json,password,progressCallback){return __awaiter$4(this,void 0,void 0,function*(){const data=JSON.parse(json);const key2=yield _computeKdfKey(data,password,pbkdf2,scrypt.scrypt,progressCallback);return _getAccount(data,key2)})}function encrypt(account,password,options,progressCallback){try{if(getAddress(account.address)!==computeAddress(account.privateKey)){throw new Error("address/privateKey mismatch")}if(hasMnemonic$1(account)){const mnemonic=account.mnemonic;const node=HDNode2.fromMnemonic(mnemonic.phrase,null,mnemonic.locale).derivePath(mnemonic.path||defaultPath);if(node.privateKey!=account.privateKey){throw new Error("mnemonic mismatch")}}}catch(e){return Promise.reject(e)}if(typeof options==="function"&&!progressCallback){progressCallback=options;options={}}if(!options){options={}}const privateKey=arrayify$1(account.privateKey);const passwordBytes=getPassword(password);let entropy=null;let path=null;let locale=null;if(hasMnemonic$1(account)){const srcMnemonic=account.mnemonic;entropy=arrayify$1(mnemonicToEntropy(srcMnemonic.phrase,srcMnemonic.locale||"en"));path=srcMnemonic.path||defaultPath;locale=srcMnemonic.locale||"en"}let client=options.client;if(!client){client="ethers.js"}let salt=null;if(options.salt){salt=arrayify$1(options.salt)}else{salt=randomBytes(32)}let iv=null;if(options.iv){iv=arrayify$1(options.iv);if(iv.length!==16){throw new Error("invalid iv")}}else{iv=randomBytes(16)}let uuidRandom=null;if(options.uuid){uuidRandom=arrayify$1(options.uuid);if(uuidRandom.length!==16){throw new Error("invalid uuid")}}else{uuidRandom=randomBytes(16)}let N2=1<<17,r=8,p=1;if(options.scrypt){if(options.scrypt.N){N2=options.scrypt.N}if(options.scrypt.r){r=options.scrypt.r}if(options.scrypt.p){p=options.scrypt.p}}return scrypt.scrypt(passwordBytes,salt,N2,r,p,64,progressCallback).then(key2=>{key2=arrayify$1(key2);const derivedKey=key2.slice(0,16);const macPrefix=key2.slice(16,32);const mnemonicKey=key2.slice(32,64);const counter=new aes.Counter(iv);const aesCtr=new aes.ModeOfOperation.ctr(derivedKey,counter);const ciphertext=arrayify$1(aesCtr.encrypt(privateKey));const mac=keccak256$1(concat$1([macPrefix,ciphertext]));const data={address:account.address.substring(2).toLowerCase(),id:uuidV4(uuidRandom),version:3,crypto:{cipher:"aes-128-ctr",cipherparams:{iv:hexlify$1(iv).substring(2)},ciphertext:hexlify$1(ciphertext).substring(2),kdf:"scrypt",kdfparams:{salt:hexlify$1(salt).substring(2),n:N2,dklen:32,p:p,r:r},mac:mac.substring(2)}};if(entropy){const mnemonicIv=randomBytes(16);const mnemonicCounter=new aes.Counter(mnemonicIv);const mnemonicAesCtr=new aes.ModeOfOperation.ctr(mnemonicKey,mnemonicCounter);const mnemonicCiphertext=arrayify$1(mnemonicAesCtr.encrypt(entropy));const now=new Date;const timestamp=now.getUTCFullYear()+"-"+zpad(now.getUTCMonth()+1,2)+"-"+zpad(now.getUTCDate(),2)+"T"+zpad(now.getUTCHours(),2)+"-"+zpad(now.getUTCMinutes(),2)+"-"+zpad(now.getUTCSeconds(),2)+".0Z";data["x-ethers"]={client:client,gethFilename:"UTC--"+timestamp+"--"+data.address,mnemonicCounter:hexlify$1(mnemonicIv).substring(2),mnemonicCiphertext:hexlify$1(mnemonicCiphertext).substring(2),path:path,locale:locale,version:"0.1"}}return JSON.stringify(data)})}function decryptJsonWallet(json,password,progressCallback){if(isCrowdsaleWallet(json)){if(progressCallback){progressCallback(0)}const account=decrypt$1(json,password);if(progressCallback){progressCallback(1)}return Promise.resolve(account)}if(isKeystoreWallet(json)){return decrypt(json,password,progressCallback)}return Promise.reject(new Error("invalid JSON wallet"))}function decryptJsonWalletSync(json,password){if(isCrowdsaleWallet(json)){return decrypt$1(json,password)}if(isKeystoreWallet(json)){return decryptSync(json,password)}throw new Error("invalid JSON wallet")}const version$3="wallet/5.7.0";var __awaiter$3=function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$2=new Logger$3(version$3);function isAccount(value){return value!=null&&isHexString(value.privateKey,32)&&value.address!=null}function hasMnemonic(value){const mnemonic=value.mnemonic;return mnemonic&&mnemonic.phrase}let Wallet$2=class Wallet extends Signer2{constructor(privateKey,provider){super();if(isAccount(privateKey)){const signingKey=new SigningKey2(privateKey.privateKey);defineReadOnly$1(this,"_signingKey",()=>signingKey);defineReadOnly$1(this,"address",computeAddress(this.publicKey));if(this.address!==getAddress$1(privateKey.address)){logger$2.throwArgumentError("privateKey/address mismatch","privateKey","[REDACTED]")}if(hasMnemonic(privateKey)){const srcMnemonic=privateKey.mnemonic;defineReadOnly$1(this,"_mnemonic",()=>({phrase:srcMnemonic.phrase,path:srcMnemonic.path||defaultPath$1,locale:srcMnemonic.locale||"en"}));const mnemonic=this.mnemonic;const node=HDNode$1.fromMnemonic(mnemonic.phrase,null,mnemonic.locale).derivePath(mnemonic.path);if(computeAddress(node.privateKey)!==this.address){logger$2.throwArgumentError("mnemonic/address mismatch","privateKey","[REDACTED]")}}else{defineReadOnly$1(this,"_mnemonic",()=>null)}}else{if(SigningKey2.isSigningKey(privateKey)){if(privateKey.curve!=="secp256k1"){logger$2.throwArgumentError("unsupported curve; must be secp256k1","privateKey","[REDACTED]")}defineReadOnly$1(this,"_signingKey",()=>privateKey)}else{if(typeof privateKey==="string"){if(privateKey.match(/^[0-9a-f]*$/i)&&privateKey.length===64){privateKey="0x"+privateKey}}const signingKey=new SigningKey2(privateKey);defineReadOnly$1(this,"_signingKey",()=>signingKey)}defineReadOnly$1(this,"_mnemonic",()=>null);defineReadOnly$1(this,"address",computeAddress(this.publicKey))}if(provider&&!Provider.isProvider(provider)){logger$2.throwArgumentError("invalid provider","provider",provider)}defineReadOnly$1(this,"provider",provider||null)}get mnemonic(){return this._mnemonic()}get privateKey(){return this._signingKey().privateKey}get publicKey(){return this._signingKey().publicKey}getAddress(){return Promise.resolve(this.address)}connect(provider){return new Wallet(this,provider)}signTransaction(transaction){return resolveProperties$1(transaction).then(tx=>{if(tx.from!=null){if(getAddress$1(tx.from)!==this.address){logger$2.throwArgumentError("transaction from address mismatch","transaction.from",transaction.from)}delete tx.from}const signature2=this._signingKey().signDigest(keccak256$1(serialize(tx)));return serialize(tx,signature2)})}signMessage(message){return __awaiter$3(this,void 0,void 0,function*(){return joinSignature(this._signingKey().signDigest(hashMessage(message)))})}_signTypedData(domain,types,value){return __awaiter$3(this,void 0,void 0,function*(){const populated=yield TypedDataEncoder.resolveNames(domain,types,value,name=>{if(this.provider==null){logger$2.throwError("cannot resolve ENS names without a provider",Logger$3.errors.UNSUPPORTED_OPERATION,{operation:"resolveName",value:name})}return this.provider.resolveName(name)});return joinSignature(this._signingKey().signDigest(TypedDataEncoder.hash(populated.domain,types,populated.value)))})}encrypt(password,options,progressCallback){if(typeof options==="function"&&!progressCallback){progressCallback=options;options={}}if(progressCallback&&typeof progressCallback!=="function"){throw new Error("invalid callback")}if(!options){options={}}return encrypt(this,password,options,progressCallback)}static createRandom(options){let entropy=randomBytes$1(16);if(!options){options={}}if(options.extraEntropy){entropy=arrayify(hexDataSlice(keccak256$1(concat([entropy,options.extraEntropy])),0,16))}const mnemonic=entropyToMnemonic$1(entropy,options.locale);return Wallet.fromMnemonic(mnemonic,options.path,options.locale)}static fromEncryptedJson(json,password,progressCallback){return decryptJsonWallet(json,password,progressCallback).then(account=>new Wallet(account))}static fromEncryptedJsonSync(json,password){return new Wallet(decryptJsonWalletSync(json,password))}static fromMnemonic(mnemonic,path,wordlist2){if(!path){path=defaultPath$1}return new Wallet(HDNode$1.fromMnemonic(mnemonic,null,wordlist2).derivePath(path))}};var Network;(function(Network2){Network2["ETH_MAINNET"]="eth-mainnet";Network2["ETH_GOERLI"]="eth-goerli";Network2["ETH_SEPOLIA"]="eth-sepolia";Network2["ETH_HOLESKY"]="eth-holesky";Network2["ETH_HOODI"]="eth-hoodi";Network2["OPT_MAINNET"]="opt-mainnet";Network2["OPT_GOERLI"]="opt-goerli";Network2["OPT_SEPOLIA"]="opt-sepolia";Network2["ARB_MAINNET"]="arb-mainnet";Network2["ARB_GOERLI"]="arb-goerli";Network2["ARB_SEPOLIA"]="arb-sepolia";Network2["MATIC_MAINNET"]="polygon-mainnet";Network2["MATIC_MUMBAI"]="polygon-mumbai";Network2["MATIC_AMOY"]="polygon-amoy";Network2["ASTAR_MAINNET"]="astar-mainnet";Network2["POLYGONZKEVM_MAINNET"]="polygonzkevm-mainnet";Network2["POLYGONZKEVM_TESTNET"]="polygonzkevm-testnet";Network2["POLYGONZKEVM_CARDONA"]="polygonzkevm-cardona";Network2["BASE_MAINNET"]="base-mainnet";Network2["BASE_GOERLI"]="base-goerli";Network2["BASE_SEPOLIA"]="base-sepolia";Network2["ZKSYNC_MAINNET"]="zksync-mainnet";Network2["ZKSYNC_SEPOLIA"]="zksync-sepolia";Network2["SHAPE_MAINNET"]="shape-mainnet";Network2["SHAPE_SEPOLIA"]="shape-sepolia";Network2["LINEA_MAINNET"]="linea-mainnet";Network2["LINEA_SEPOLIA"]="linea-sepolia";Network2["FANTOM_MAINNET"]="fantom-mainnet";Network2["FANTOM_TESTNET"]="fantom-testnet";Network2["ZETACHAIN_MAINNET"]="zetachain-mainnet";Network2["ZETACHAIN_TESTNET"]="zetachain-testnet";Network2["ARBNOVA_MAINNET"]="arbnova-mainnet";Network2["BLAST_MAINNET"]="blast-mainnet";Network2["BLAST_SEPOLIA"]="blast-sepolia";Network2["MANTLE_MAINNET"]="mantle-mainnet";Network2["MANTLE_SEPOLIA"]="mantle-sepolia";Network2["SCROLL_MAINNET"]="scroll-mainnet";Network2["SCROLL_SEPOLIA"]="scroll-sepolia";Network2["GNOSIS_MAINNET"]="gnosis-mainnet";Network2["GNOSIS_CHIADO"]="gnosis-chiado";Network2["BNB_MAINNET"]="bnb-mainnet";Network2["BNB_TESTNET"]="bnb-testnet";Network2["AVAX_MAINNET"]="avax-mainnet";Network2["AVAX_FUJI"]="avax-fuji";Network2["CELO_MAINNET"]="celo-mainnet";Network2["CELO_ALFAJORES"]="celo-alfajores";Network2["CELO_BAKLAVA"]="celo-baklava";Network2["METIS_MAINNET"]="metis-mainnet";Network2["OPBNB_MAINNET"]="opbnb-mainnet";Network2["OPBNB_TESTNET"]="opbnb-testnet";Network2["BERACHAIN_BARTIO"]="berachain-bartio";Network2["BERACHAIN_MAINNET"]="berachain-mainnet";Network2["BERACHAIN_BEPOLIA"]="berachain-bepolia";Network2["SONEIUM_MAINNET"]="soneium-mainnet";Network2["SONEIUM_MINATO"]="soneium-minato";Network2["WORLDCHAIN_MAINNET"]="worldchain-mainnet";Network2["WORLDCHAIN_SEPOLIA"]="worldchain-sepolia";Network2["ROOTSTOCK_MAINNET"]="rootstock-mainnet";Network2["ROOTSTOCK_TESTNET"]="rootstock-testnet";Network2["FLOW_MAINNET"]="flow-mainnet";Network2["FLOW_TESTNET"]="flow-testnet";Network2["ZORA_MAINNET"]="zora-mainnet";Network2["ZORA_SEPOLIA"]="zora-sepolia";Network2["FRAX_MAINNET"]="frax-mainnet";Network2["FRAX_SEPOLIA"]="frax-sepolia";Network2["POLYNOMIAL_MAINNET"]="polynomial-mainnet";Network2["POLYNOMIAL_SEPOLIA"]="polynomial-sepolia";Network2["CROSSFI_MAINNET"]="crossfi-mainnet";Network2["CROSSFI_TESTNET"]="crossfi-testnet";Network2["APECHAIN_MAINNET"]="apechain-mainnet";Network2["APECHAIN_CURTIS"]="apechain-curtis";Network2["LENS_MAINNET"]="lens-mainnet";Network2["LENS_SEPOLIA"]="lens-sepolia";Network2["GEIST_MAINNET"]="geist-mainnet";Network2["GEIST_POLTER"]="geist-polter";Network2["LUMIA_PRISM"]="lumia-prism";Network2["LUMIA_TESTNET"]="lumia-testnet";Network2["UNICHAIN_MAINNET"]="unichain-mainnet";Network2["UNICHAIN_SEPOLIA"]="unichain-sepolia";Network2["SONIC_MAINNET"]="sonic-mainnet";Network2["SONIC_BLAZE"]="sonic-blaze";Network2["XMTP_TESTNET"]="xmtp-testnet";Network2["ABSTRACT_MAINNET"]="abstract-mainnet";Network2["ABSTRACT_TESTNET"]="abstract-testnet";Network2["DEGEN_MAINNET"]="degen-mainnet";Network2["INK_MAINNET"]="ink-mainnet";Network2["INK_SEPOLIA"]="ink-sepolia";Network2["SEI_MAINNET"]="sei-mainnet";Network2["SEI_TESTNET"]="sei-testnet";Network2["RONIN_MAINNET"]="ronin-mainnet";Network2["RONIN_SAIGON"]="ronin-saigon";Network2["MONAD_TESTNET"]="monad-testnet";Network2["SETTLUS_SEPTESTNET"]="settlus-septestnet";Network2["SETTLUS_MAINNET"]="settlus-mainnet";Network2["SOLANA_MAINNET"]="solana-mainnet";Network2["SOLANA_DEVNET"]="solana-devnet";Network2["GENSYN_TESTNET"]="gensyn-testnet";Network2["SUPERSEED_MAINNET"]="superseed-mainnet";Network2["SUPERSEED_SEPOLIA"]="superseed-sepolia";Network2["TEA_SEPOLIA"]="tea-sepolia";Network2["ANIME_MAINNET"]="anime-mainnet";Network2["ANIME_SEPOLIA"]="anime-sepolia";Network2["STORY_MAINNET"]="story-mainnet";Network2["STORY_AENEID"]="story-aeneid";Network2["MEGAETH_TESTNET"]="megaeth-testnet"})(Network||(Network={}));var TokenBalanceType;(function(TokenBalanceType2){TokenBalanceType2["DEFAULT_TOKENS"]="DEFAULT_TOKENS";TokenBalanceType2["ERC20"]="erc20"})(TokenBalanceType||(TokenBalanceType={}));var AssetTransfersCategory;(function(AssetTransfersCategory2){AssetTransfersCategory2["EXTERNAL"]="external";AssetTransfersCategory2["INTERNAL"]="internal";AssetTransfersCategory2["ERC20"]="erc20";AssetTransfersCategory2["ERC721"]="erc721";AssetTransfersCategory2["ERC1155"]="erc1155";AssetTransfersCategory2["SPECIALNFT"]="specialnft"})(AssetTransfersCategory||(AssetTransfersCategory={}));var GetTransfersForOwnerTransferType;(function(GetTransfersForOwnerTransferType2){GetTransfersForOwnerTransferType2["TO"]="TO";GetTransfersForOwnerTransferType2["FROM"]="FROM"})(GetTransfersForOwnerTransferType||(GetTransfersForOwnerTransferType={}));var SortingOrder;(function(SortingOrder2){SortingOrder2["ASCENDING"]="asc";SortingOrder2["DESCENDING"]="desc"})(SortingOrder||(SortingOrder={}));var OpenSeaSafelistRequestStatus;(function(OpenSeaSafelistRequestStatus2){OpenSeaSafelistRequestStatus2["VERIFIED"]="verified";OpenSeaSafelistRequestStatus2["APPROVED"]="approved";OpenSeaSafelistRequestStatus2["REQUESTED"]="requested";OpenSeaSafelistRequestStatus2["NOT_REQUESTED"]="not_requested"})(OpenSeaSafelistRequestStatus||(OpenSeaSafelistRequestStatus={}));var AlchemySubscription;(function(AlchemySubscription2){AlchemySubscription2["PENDING_TRANSACTIONS"]="alchemy_pendingTransactions";AlchemySubscription2["MINED_TRANSACTIONS"]="alchemy_minedTransactions"})(AlchemySubscription||(AlchemySubscription={}));var SimulateAssetType;(function(SimulateAssetType2){SimulateAssetType2["NATIVE"]="NATIVE";SimulateAssetType2["ERC20"]="ERC20";SimulateAssetType2["ERC721"]="ERC721";SimulateAssetType2["ERC1155"]="ERC1155";SimulateAssetType2["SPECIAL_NFT"]="SPECIAL_NFT"})(SimulateAssetType||(SimulateAssetType={}));var SimulateChangeType;(function(SimulateChangeType2){SimulateChangeType2["APPROVE"]="APPROVE";SimulateChangeType2["TRANSFER"]="TRANSFER"})(SimulateChangeType||(SimulateChangeType={}));var DecodingAuthority;(function(DecodingAuthority2){DecodingAuthority2["ETHERSCAN"]="ETHERSCAN"})(DecodingAuthority||(DecodingAuthority={}));var DebugCallType;(function(DebugCallType2){DebugCallType2["CREATE"]="CREATE";DebugCallType2["CALL"]="CALL";DebugCallType2["STATICCALL"]="STATICCALL";DebugCallType2["DELEGATECALL"]="DELEGATECALL"})(DebugCallType||(DebugCallType={}));var GasOptimizedTransactionStatus;(function(GasOptimizedTransactionStatus2){GasOptimizedTransactionStatus2["UNSPECIFIED"]="TRANSACTION_JOB_STATUS_UNSPECIFIED";GasOptimizedTransactionStatus2["IN_PROGRESS"]="IN_PROGRESS";GasOptimizedTransactionStatus2["COMPLETE"]="COMPLETE";GasOptimizedTransactionStatus2["ABANDONED"]="ABANDONED"})(GasOptimizedTransactionStatus||(GasOptimizedTransactionStatus={}));var WebhookVersion;(function(WebhookVersion2){WebhookVersion2["V1"]="V1";WebhookVersion2["V2"]="V2"})(WebhookVersion||(WebhookVersion={}));var WebhookType;(function(WebhookType2){WebhookType2["MINED_TRANSACTION"]="MINED_TRANSACTION";WebhookType2["DROPPED_TRANSACTION"]="DROPPED_TRANSACTION";WebhookType2["ADDRESS_ACTIVITY"]="ADDRESS_ACTIVITY";WebhookType2["NFT_ACTIVITY"]="NFT_ACTIVITY";WebhookType2["NFT_METADATA_UPDATE"]="NFT_METADATA_UPDATE";WebhookType2["GRAPHQL"]="GRAPHQL"})(WebhookType||(WebhookType={}));var CommitmentLevel;(function(CommitmentLevel2){CommitmentLevel2["PENDING"]="pending";CommitmentLevel2["LATEST"]="latest";CommitmentLevel2["SAFE"]="safe";CommitmentLevel2["FINALIZED"]="finalized";CommitmentLevel2["EARLIEST"]="earliest"})(CommitmentLevel||(CommitmentLevel={}));var DebugTracerType;(function(DebugTracerType2){DebugTracerType2["CALL_TRACER"]="callTracer";DebugTracerType2["PRESTATE_TRACER"]="prestateTracer"})(DebugTracerType||(DebugTracerType={}));var NftTokenType;(function(NftTokenType2){NftTokenType2["ERC721"]="ERC721";NftTokenType2["ERC1155"]="ERC1155";NftTokenType2["NO_SUPPORTED_NFT_STANDARD"]="NO_SUPPORTED_NFT_STANDARD";NftTokenType2["NOT_A_CONTRACT"]="NOT_A_CONTRACT";NftTokenType2["UNKNOWN"]="UNKNOWN"})(NftTokenType||(NftTokenType={}));var NftSpamClassification;(function(NftSpamClassification2){NftSpamClassification2["Erc721TooManyOwners"]="Erc721TooManyOwners";NftSpamClassification2["Erc721TooManyTokens"]="Erc721TooManyTokens";NftSpamClassification2["Erc721DishonestTotalSupply"]="Erc721DishonestTotalSupply";NftSpamClassification2["MostlyHoneyPotOwners"]="MostlyHoneyPotOwners";NftSpamClassification2["OwnedByMostHoneyPots"]="OwnedByMostHoneyPots";NftSpamClassification2["LowDistinctOwnersPercent"]="LowDistinctOwnersPercent";NftSpamClassification2["HighHoneyPotOwnerPercent"]="HighHoneyPotOwnerPercent";NftSpamClassification2["HighHoneyPotPercent"]="HighHoneyPotPercent";NftSpamClassification2["HoneyPotsOwnMultipleTokens"]="HoneyPotsOwnMultipleTokens";NftSpamClassification2["NoSalesActivity"]="NoSalesActivity";NftSpamClassification2["HighAirdropPercent"]="HighAirdropPercent";NftSpamClassification2["Unknown"]="Unknown"})(NftSpamClassification||(NftSpamClassification={}));var NftFilters;(function(NftFilters2){NftFilters2["SPAM"]="SPAM";NftFilters2["AIRDROPS"]="AIRDROPS"})(NftFilters||(NftFilters={}));var NftOrdering;(function(NftOrdering2){NftOrdering2["TRANSFERTIME"]="TRANSFERTIME"})(NftOrdering||(NftOrdering={}));var NftSaleMarketplace;(function(NftSaleMarketplace2){NftSaleMarketplace2["SEAPORT"]="seaport";NftSaleMarketplace2["LOOKSRARE"]="looksrare";NftSaleMarketplace2["X2Y2"]="x2y2";NftSaleMarketplace2["WYVERN"]="wyvern";NftSaleMarketplace2["CRYPTOPUNKS"]="cryptopunks";NftSaleMarketplace2["BLUR"]="blur";NftSaleMarketplace2["UNKNOWN"]="unknown"})(NftSaleMarketplace||(NftSaleMarketplace={}));var NftSaleTakerType;(function(NftSaleTakerType2){NftSaleTakerType2["BUYER"]="buyer";NftSaleTakerType2["SELLER"]="seller"})(NftSaleTakerType||(NftSaleTakerType={}));var NftRefreshState;(function(NftRefreshState2){NftRefreshState2["DOES_NOT_EXIST"]="does_not_exist";NftRefreshState2["ALREADY_QUEUED"]="already_queued";NftRefreshState2["IN_PROGRESS"]="in_progress";NftRefreshState2["FINISHED"]="finished";NftRefreshState2["QUEUED"]="queued";NftRefreshState2["QUEUE_FAILED"]="queue_failed"})(NftRefreshState||(NftRefreshState={}));var NftCollectionMarketplace;(function(NftCollectionMarketplace2){NftCollectionMarketplace2["OPENSEA"]="OpenSea"})(NftCollectionMarketplace||(NftCollectionMarketplace={}));var HistoricalPriceInterval;(function(HistoricalPriceInterval2){HistoricalPriceInterval2["FIVE_MINUTE"]="5m";HistoricalPriceInterval2["ONE_HOUR"]="1h";HistoricalPriceInterval2["ONE_DAY"]="1d"})(HistoricalPriceInterval||(HistoricalPriceInterval={}));
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */function __awaiter$1$1(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,[])).next())})}function __values(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o}}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.")}function __await(v){return this instanceof __await?(this.v=v,this):new __await(v)}function __asyncGenerator(thisArg,_arguments,generator){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var g=generator.apply(thisArg,_arguments||[]),i,q=[];return i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i;function verb(n2){if(g[n2])i[n2]=function(v){return new Promise(function(a,b2){q.push([n2,v,a,b2])>1||resume(n2,v)})}}function resume(n2,v){try{step(g[n2](v))}catch(e){settle2(q[0][3],e)}}function step(r){r.value instanceof __await?Promise.resolve(r.value.v).then(fulfill,reject):settle2(q[0][2],r)}function fulfill(value){resume("next",value)}function reject(value){resume("throw",value)}function settle2(f2,v){if(f2(v),q.shift(),q.length)resume(q[0][0],q[0][1])}}function __asyncValues(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var m=o[Symbol.asyncIterator],i;return m?m.call(o):(o=typeof __values==="function"?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n2){i[n2]=o[n2]&&function(v){return new Promise(function(resolve,reject){v=o[n2](v),settle2(resolve,reject,v.done,v.value)})}}function settle2(resolve,reject,d,v){Promise.resolve(v).then(function(v2){resolve({value:v2,done:d})},reject)}}const DEFAULT_ALCHEMY_API_KEY="demo";const DEFAULT_NETWORK=Network.ETH_MAINNET;const DEFAULT_MAX_RETRIES=5;const DEFAULT_REQUEST_TIMEOUT=0;function getAlchemyHttpUrl(network,apiKey){return`https://${network}.g.alchemy.com/v2/${apiKey}`}function getAlchemyNftHttpUrl(network,apiKey){return`https://${network}.g.alchemy.com/nft/v3/${apiKey}`}function getAlchemyWsUrl(network,apiKey){return`wss://${network}.g.alchemy.com/v2/${apiKey}`}function getAlchemyWebhookHttpUrl(){return"https://dashboard.alchemy.com/api"}function getPricesBaseUrl(apiKey){return`https://api.g.alchemy.com/prices/v1/${apiKey}`}function getDataBaseUrl(apiKey){return`https://api.g.alchemy.com/data/v1/${apiKey}`}var AlchemyApiType;(function(AlchemyApiType2){AlchemyApiType2[AlchemyApiType2["BASE"]=0]="BASE";AlchemyApiType2[AlchemyApiType2["NFT"]=1]="NFT";AlchemyApiType2[AlchemyApiType2["WEBHOOK"]=2]="WEBHOOK";AlchemyApiType2[AlchemyApiType2["PRICES"]=3]="PRICES";AlchemyApiType2[AlchemyApiType2["PORTFOLIO"]=4]="PORTFOLIO"})(AlchemyApiType||(AlchemyApiType={}));const EthersNetwork={[Network.ETH_MAINNET]:"mainnet",[Network.ETH_GOERLI]:"goerli",[Network.ETH_SEPOLIA]:"sepolia",[Network.ETH_HOLESKY]:"holesky",[Network.ETH_HOODI]:"hoodi",[Network.OPT_MAINNET]:"opt-mainnet",[Network.OPT_GOERLI]:"optimism-goerli",[Network.OPT_SEPOLIA]:"optimism-sepolia",[Network.ARB_MAINNET]:"arbitrum",[Network.ARB_GOERLI]:"arbitrum-goerli",[Network.ARB_SEPOLIA]:"arbitrum-sepolia",[Network.MATIC_MAINNET]:"matic",[Network.MATIC_MUMBAI]:"maticmum",[Network.MATIC_AMOY]:"maticamoy",[Network.SOLANA_MAINNET]:null,[Network.SOLANA_DEVNET]:null,[Network.ASTAR_MAINNET]:"astar-mainnet",[Network.POLYGONZKEVM_MAINNET]:"polygonzkevm-mainnet",[Network.POLYGONZKEVM_TESTNET]:"polygonzkevm-testnet",[Network.POLYGONZKEVM_CARDONA]:"polygonzkevm-cardona",[Network.BASE_MAINNET]:"base-mainnet",[Network.BASE_GOERLI]:"base-goerli",[Network.BASE_SEPOLIA]:"base-sepolia",[Network.ZKSYNC_MAINNET]:"zksync-mainnet",[Network.ZKSYNC_SEPOLIA]:"zksync-sepolia",[Network.SHAPE_MAINNET]:"shape-mainnet",[Network.SHAPE_SEPOLIA]:"shape-sepolia",[Network.LINEA_MAINNET]:"linea-mainnet",[Network.LINEA_SEPOLIA]:"linea-sepolia",[Network.FANTOM_MAINNET]:"fantom-mainnet",[Network.FANTOM_TESTNET]:"fantom-testnet",[Network.ZETACHAIN_MAINNET]:"zetachain-mainnet",[Network.ZETACHAIN_TESTNET]:"zetachain-testnet",[Network.ARBNOVA_MAINNET]:"arbnova-mainnet",[Network.BLAST_MAINNET]:"blast-mainnet",[Network.BLAST_SEPOLIA]:"blast-sepolia",[Network.MANTLE_MAINNET]:"mantle-mainnet",[Network.MANTLE_SEPOLIA]:"mantle-sepolia",[Network.SCROLL_MAINNET]:"scroll-mainnet",[Network.SCROLL_SEPOLIA]:"scroll-sepolia",[Network.GNOSIS_MAINNET]:"gnosis-mainnet",[Network.GNOSIS_CHIADO]:"gnosis-chiado",[Network.BNB_MAINNET]:"bnb-mainnet",[Network.BNB_TESTNET]:"bnb-testnet",[Network.AVAX_MAINNET]:"avax-mainnet",[Network.AVAX_FUJI]:"avax-fuji",[Network.CELO_MAINNET]:"celo-mainnet",[Network.CELO_ALFAJORES]:"celo-alfajores",[Network.CELO_BAKLAVA]:"celo-baklava",[Network.METIS_MAINNET]:"metis-mainnet",[Network.OPBNB_MAINNET]:"opbnb-mainnet",[Network.OPBNB_TESTNET]:"opbnb-testnet",[Network.BERACHAIN_BARTIO]:"berachain-bartio",[Network.BERACHAIN_MAINNET]:"berachain-mainnet",[Network.BERACHAIN_BEPOLIA]:"berachain-bepolia",[Network.SONEIUM_MAINNET]:"soneium-mainnet",[Network.SONEIUM_MINATO]:"soneium-minato",[Network.WORLDCHAIN_MAINNET]:"worldchain-mainnet",[Network.WORLDCHAIN_SEPOLIA]:"worldchain-sepolia",[Network.ROOTSTOCK_MAINNET]:"rootstock-mainnet",[Network.ROOTSTOCK_TESTNET]:"rootstock-testnet",[Network.FLOW_MAINNET]:"flow-mainnet",[Network.FLOW_TESTNET]:"flow-testnet",[Network.ZORA_MAINNET]:"zora-mainnet",[Network.ZORA_SEPOLIA]:"zora-sepolia",[Network.FRAX_MAINNET]:"frax-mainnet",[Network.FRAX_SEPOLIA]:"frax-sepolia",[Network.POLYNOMIAL_MAINNET]:"polynomial-mainnet",[Network.POLYNOMIAL_SEPOLIA]:"polynomial-sepolia",[Network.CROSSFI_MAINNET]:"crossfi-mainnet",[Network.CROSSFI_TESTNET]:"crossfi-testnet",[Network.APECHAIN_MAINNET]:"apechain-mainnet",[Network.APECHAIN_CURTIS]:"apechain-curtis",[Network.LENS_MAINNET]:"lens-mainnet",[Network.LENS_SEPOLIA]:"lens-sepolia",[Network.GEIST_MAINNET]:"geist-mainnet",[Network.GEIST_POLTER]:"geist-polter",[Network.LUMIA_PRISM]:"lumia-prism",[Network.LUMIA_TESTNET]:"lumia-testnet",[Network.UNICHAIN_MAINNET]:"unichain-mainnet",[Network.UNICHAIN_SEPOLIA]:"unichain-sepolia",[Network.SONIC_MAINNET]:"sonic-mainnet",[Network.SONIC_BLAZE]:"sonic-blaze",[Network.XMTP_TESTNET]:"xmtp-testnet",[Network.ABSTRACT_MAINNET]:"abstract-mainnet",[Network.ABSTRACT_TESTNET]:"abstract-testnet",[Network.DEGEN_MAINNET]:"degen-mainnet",[Network.INK_MAINNET]:"ink-mainnet",[Network.INK_SEPOLIA]:"ink-sepolia",[Network.SEI_MAINNET]:"sei-mainnet",[Network.SEI_TESTNET]:"sei-testnet",[Network.RONIN_MAINNET]:"ronin-mainnet",[Network.RONIN_SAIGON]:"ronin-saigon",[Network.MONAD_TESTNET]:"monad-testnet",[Network.SETTLUS_MAINNET]:"settlus-mainnet",[Network.SETTLUS_SEPTESTNET]:"settlus-septestnet",[Network.GENSYN_TESTNET]:"gensyn-testnet",[Network.SUPERSEED_MAINNET]:"superseed-mainnet",[Network.SUPERSEED_SEPOLIA]:"superseed-sepolia",[Network.TEA_SEPOLIA]:"tea-sepolia",[Network.ANIME_MAINNET]:"anime-mainnet",[Network.ANIME_SEPOLIA]:"anime-sepolia",[Network.STORY_MAINNET]:"story-mainnet",[Network.STORY_AENEID]:"story-aeneid",[Network.MEGAETH_TESTNET]:"megaeth-testnet"};const CustomNetworks={"arbitrum-goerli":{chainId:421613,name:"arbitrum-goerli"},"arbitrum-sepolia":{chainId:421614,name:"arbitrum-sepolia"},"astar-mainnet":{chainId:592,name:"astar-mainnet"},sepolia:{chainId:11155111,name:"sepolia"},holesky:{chainId:17e3,name:"holesky"},hoodi:{chainId:560048,name:"hoodi"},"opt-mainnet":{chainId:10,name:"opt-mainnet"},"optimism-sepolia":{chainId:11155420,name:"optimism-sepolia"},"polygonzkevm-mainnet":{chainId:1101,name:"polygonzkevm-mainnet"},"polygonzkevm-testnet":{chainId:1442,name:"polygonzkevm-testnet"},"polygonzkevm-cardona":{chainId:2442,name:"polygonzkevm-cardona"},"base-mainnet":{chainId:8453,name:"base-mainnet"},"base-goerli":{chainId:84531,name:"base-goerli"},"base-sepolia":{chainId:84532,name:"base-sepolia"},maticamoy:{chainId:80002,name:"maticamoy"},"zksync-mainnet":{chainId:324,name:"zksync-mainnet"},"zksync-sepolia":{chainId:300,name:"zksync-sepolia"},"shape-mainnet":{chainId:360,name:"shape-mainnet"},"shape-sepolia":{chainId:11011,name:"shape-sepolia"},"linea-mainnet":{chainId:59144,name:"linea-mainnet"},"linea-sepolia":{chainId:59141,name:"linea-sepolia"},"fantom-mainnet":{chainId:250,name:"fantom-mainnet"},"fantom-testnet":{chainId:4002,name:"fantom-testnet"},"zetachain-mainnet":{chainId:7e3,name:"zetachain-mainnet"},"zetachain-testnet":{chainId:7001,name:"zetachain-testnet"},"arbnova-mainnet":{chainId:42170,name:"arbnova-mainnet"},"blast-mainnet":{chainId:81457,name:"blast-mainnet"},"blast-sepolia":{chainId:168587773,name:"blast-sepolia"},"mantle-mainnet":{chainId:5e3,name:"mantle-mainnet"},"mantle-sepolia":{chainId:5003,name:"mantle-sepolia"},"scroll-mainnet":{chainId:534352,name:"scroll-mainnet"},"scroll-sepolia":{chainId:534351,name:"scroll-sepolia"},"gnosis-mainnet":{chainId:100,name:"gnosis-mainnet"},"gnosis-chiado":{chainId:10200,name:"gnosis-chiado"},"bnb-mainnet":{chainId:56,name:"bnb-mainnet"},"bnb-testnet":{chainId:97,name:"bnb-testnet"},"avax-mainnet":{chainId:43114,name:"avax-mainnet"},"avax-fuji":{chainId:43113,name:"avax-fuji"},"celo-mainnet":{chainId:42220,name:"celo-mainnet"},"celo-alfajores":{chainId:44787,name:"celo-alfajores"},"celo-baklava":{chainId:62320,name:"celo-baklava"},"metis-mainnet":{chainId:1088,name:"metis-mainnet"},"opbnb-mainnet":{chainId:204,name:"opbnb-mainnet"},"opbnb-testnet":{chainId:5611,name:"opbnb-testnet"},"berachain-bartio":{chainId:80084,name:"berachain-bartio"},"berachain-mainnet":{chainId:80094,name:"berachain-mainnet"},"berachain-bepolia":{chainId:80069,name:"berachain-bepolia"},"soneium-mainnet":{chainId:1868,name:"soneium-mainnet"},"soneium-minato":{chainId:1946,name:"soneium-minato"},"worldchain-mainnet":{chainId:480,name:"worldchain-mainnet"},"worldchain-sepolia":{chainId:4801,name:"worldchain-sepolia"},"rootstock-mainnet":{chainId:30,name:"rootstock-mainnet"},"rootstock-testnet":{chainId:31,name:"rootstock-testnet"},"flow-mainnet":{chainId:747,name:"flow-mainnet"},"flow-testnet":{chainId:545,name:"flow-testnet"},"zora-mainnet":{chainId:7777777,name:"zora-mainnet"},"zora-sepolia":{chainId:999999999,name:"zora-sepolia"},"frax-mainnet":{chainId:252,name:"frax-mainnet"},"frax-sepolia":{chainId:2522,name:"frax-sepolia"},"polynomial-mainnet":{chainId:8008,name:"polynomial-mainnet"},"polynomial-sepolia":{chainId:8009,name:"polynomial-sepolia"},"crossfi-mainnet":{chainId:4158,name:"crossfi-mainnet"},"crossfi-testnet":{chainId:4157,name:"crossfi-testnet"},"apechain-mainnet":{chainId:33139,name:"apechain-mainnet"},"apechain-curtis":{chainId:33111,name:"apechain-curtis"},"lens-mainnet":{chainId:232,name:"lens-mainnet"},"lens-sepolia":{chainId:37111,name:"lens-sepolia"},"geist-mainnet":{chainId:63157,name:"geist-mainnet"},"geist-polter":{chainId:631571,name:"geist-polter"},"lumia-prism":{chainId:994873017,name:"lumia-prism"},"lumia-testnet":{chainId:1952959480,name:"lumia-testnet"},"unichain-mainnet":{chainId:130,name:"unichain-mainnet"},"unichain-sepolia":{chainId:1301,name:"unichain-sepolia"},"sonic-mainnet":{chainId:146,name:"sonic-mainnet"},"sonic-blaze":{chainId:57054,name:"sonic-blaze"},"xmtp-testnet":{chainId:241320161,name:"xmtp-testnet"},"abstract-mainnet":{chainId:2741,name:"abstract-mainnet"},"abstract-testnet":{chainId:11124,name:"abstract-testnet"},"degen-mainnet":{chainId:666666666,name:"degen-mainnet"},"ink-mainnet":{chainId:57073,name:"ink-mainnet"},"ink-sepolia":{chainId:763373,name:"ink-sepolia"},"sei-mainnet":{chainId:1329,name:"sei-mainnet"},"sei-testnet":{chainId:1328,name:"sei-testnet"},"ronin-mainnet":{chainId:2020,name:"ronin-mainnet"},"ronin-saigon":{chainId:2021,name:"ronin-saigon"},"monad-testnet":{chainId:10143,name:"monad-testnet"},"settlus-mainnet":{chainId:5371,name:"settlus-mainnet"},"settlus-septestnet":{chainId:5373,name:"settlus-septestnet"},"gensyn-testnet":{chainId:685685,name:"gensyn-testnet"},"superseed-mainnet":{chainId:5330,name:"superseed-mainnet"},"superseed-sepolia":{chainId:53302,name:"superseed-sepolia"},"tea-sepolia":{chainId:10218,name:"tea-sepolia"},"anime-mainnet":{chainId:69e3,name:"anime-mainnet"},"anime-sepolia":{chainId:6900,name:"anime-sepolia"},"story-mainnet":{chainId:1514,name:"story-mainnet"},"story-aeneid":{chainId:1315,name:"story-aeneid"},"megaeth-testnet":{chainId:6342,name:"megaeth-testnet"}};function noop(){}const ETH_NULL_VALUE="0x";const ETH_NULL_ADDRESS="0x0000000000000000000000000000000000000000";class AlchemyConfig{constructor(config){this.apiKey=(config===null||config===void 0?void 0:config.apiKey)||DEFAULT_ALCHEMY_API_KEY;this.network=(config===null||config===void 0?void 0:config.network)||DEFAULT_NETWORK;this.maxRetries=(config===null||config===void 0?void 0:config.maxRetries)||DEFAULT_MAX_RETRIES;this.url=config===null||config===void 0?void 0:config.url;this.authToken=config===null||config===void 0?void 0:config.authToken;this.batchRequests=(config===null||config===void 0?void 0:config.batchRequests)||false;this.requestTimeout=(config===null||config===void 0?void 0:config.requestTimeout)||DEFAULT_REQUEST_TIMEOUT;this.connectionInfoOverrides=config===null||config===void 0?void 0:config.connectionInfoOverrides}_getRequestUrl(apiType){if(this.url!==void 0){return this.url}else if(apiType===AlchemyApiType.NFT){return getAlchemyNftHttpUrl(this.network,this.apiKey)}else if(apiType===AlchemyApiType.WEBHOOK){return getAlchemyWebhookHttpUrl()}else if(apiType===AlchemyApiType.PRICES){return getPricesBaseUrl(this.apiKey)}else if(apiType===AlchemyApiType.PORTFOLIO){return getDataBaseUrl(this.apiKey)}else{return getAlchemyHttpUrl(this.network,this.apiKey)}}getProvider(){if(!this._baseAlchemyProvider){this._baseAlchemyProvider=(()=>__awaiter$1$1(this,void 0,void 0,function*(){const{AlchemyProvider:AlchemyProvider}=yield __vitePreload(()=>import("./CFbi9Boi.js").then(n2=>n2.a),true?__vite__mapDeps([0,1]):void 0,import.meta.url);return new AlchemyProvider(this)}))()}return this._baseAlchemyProvider}getWebSocketProvider(){if(!this._baseAlchemyWssProvider){this._baseAlchemyWssProvider=(()=>__awaiter$1$1(this,void 0,void 0,function*(){const{AlchemyWebSocketProvider:AlchemyWebSocketProvider}=yield __vitePreload(()=>import("./yYzfI9LL.js"),true?__vite__mapDeps([2,1,0]):void 0,import.meta.url);return new AlchemyWebSocketProvider(this)}))()}return this._baseAlchemyWssProvider}}const version$1="logger/5.7.0";let _permanentCensorErrors=false;let _censorErrors=false;const LogLevels={debug:1,default:2,info:2,warning:3,error:4,off:5};let _logLevel=LogLevels["default"];let _globalLogger=null;function _checkNormalize(){try{const missing=[];["NFD","NFC","NFKD","NFKC"].forEach(form=>{try{if("test".normalize(form)!=="test"){throw new Error("bad normalize")}}catch(error){missing.push(form)}});if(missing.length){throw new Error("missing "+missing.join(", "))}if(String.fromCharCode(233).normalize("NFD")!==String.fromCharCode(101,769)){throw new Error("broken implementation")}}catch(error){return error.message}return null}const _normalizeError=_checkNormalize();var LogLevel$1;(function(LogLevel2){LogLevel2["DEBUG"]="DEBUG";LogLevel2["INFO"]="INFO";LogLevel2["WARNING"]="WARNING";LogLevel2["ERROR"]="ERROR";LogLevel2["OFF"]="OFF"})(LogLevel$1||(LogLevel$1={}));var ErrorCode;(function(ErrorCode2){ErrorCode2["UNKNOWN_ERROR"]="UNKNOWN_ERROR";ErrorCode2["NOT_IMPLEMENTED"]="NOT_IMPLEMENTED";ErrorCode2["UNSUPPORTED_OPERATION"]="UNSUPPORTED_OPERATION";ErrorCode2["NETWORK_ERROR"]="NETWORK_ERROR";ErrorCode2["SERVER_ERROR"]="SERVER_ERROR";ErrorCode2["TIMEOUT"]="TIMEOUT";ErrorCode2["BUFFER_OVERRUN"]="BUFFER_OVERRUN";ErrorCode2["NUMERIC_FAULT"]="NUMERIC_FAULT";ErrorCode2["MISSING_NEW"]="MISSING_NEW";ErrorCode2["INVALID_ARGUMENT"]="INVALID_ARGUMENT";ErrorCode2["MISSING_ARGUMENT"]="MISSING_ARGUMENT";ErrorCode2["UNEXPECTED_ARGUMENT"]="UNEXPECTED_ARGUMENT";ErrorCode2["CALL_EXCEPTION"]="CALL_EXCEPTION";ErrorCode2["INSUFFICIENT_FUNDS"]="INSUFFICIENT_FUNDS";ErrorCode2["NONCE_EXPIRED"]="NONCE_EXPIRED";ErrorCode2["REPLACEMENT_UNDERPRICED"]="REPLACEMENT_UNDERPRICED";ErrorCode2["UNPREDICTABLE_GAS_LIMIT"]="UNPREDICTABLE_GAS_LIMIT";ErrorCode2["TRANSACTION_REPLACED"]="TRANSACTION_REPLACED";ErrorCode2["ACTION_REJECTED"]="ACTION_REJECTED"})(ErrorCode||(ErrorCode={}));const HEX="0123456789abcdef";class Logger$1{constructor(version2){Object.defineProperty(this,"version",{enumerable:true,value:version2,writable:false})}_log(logLevel,args){const level=logLevel.toLowerCase();if(LogLevels[level]==null){this.throwArgumentError("invalid log level name","logLevel",logLevel)}if(_logLevel>LogLevels[level]){return}console.log.apply(console,args)}debug(...args){this._log(Logger$1.levels.DEBUG,args)}info(...args){this._log(Logger$1.levels.INFO,args)}warn(...args){this._log(Logger$1.levels.WARNING,args)}makeError(message,code,params){if(_censorErrors){return this.makeError("censored error",code,{})}if(!code){code=Logger$1.errors.UNKNOWN_ERROR}if(!params){params={}}const messageDetails=[];Object.keys(params).forEach(key2=>{const value=params[key2];try{if(value instanceof Uint8Array){let hex="";for(let i=0;i<value.length;i++){hex+=HEX[value[i]>>4];hex+=HEX[value[i]&15]}messageDetails.push(key2+"=Uint8Array(0x"+hex+")")}else{messageDetails.push(key2+"="+JSON.stringify(value))}}catch(error2){messageDetails.push(key2+"="+JSON.stringify(params[key2].toString()))}});messageDetails.push(`code=${code}`);messageDetails.push(`version=${this.version}`);const reason=message;let url="";switch(code){case ErrorCode.NUMERIC_FAULT:{url="NUMERIC_FAULT";const fault=message;switch(fault){case"overflow":case"underflow":case"division-by-zero":url+="-"+fault;break;case"negative-power":case"negative-width":url+="-unsupported";break;case"unbound-bitwise-result":url+="-unbound-result";break}break}case ErrorCode.CALL_EXCEPTION:case ErrorCode.INSUFFICIENT_FUNDS:case ErrorCode.MISSING_NEW:case ErrorCode.NONCE_EXPIRED:case ErrorCode.REPLACEMENT_UNDERPRICED:case ErrorCode.TRANSACTION_REPLACED:case ErrorCode.UNPREDICTABLE_GAS_LIMIT:url=code;break}if(url){message+=" [ See: https://links.ethers.org/v5-errors-"+url+" ]"}if(messageDetails.length){message+=" ("+messageDetails.join(", ")+")"}const error=new Error(message);error.reason=reason;error.code=code;Object.keys(params).forEach(function(key2){error[key2]=params[key2]});return error}throwError(message,code,params){throw this.makeError(message,code,params)}throwArgumentError(message,name,value){return this.throwError(message,Logger$1.errors.INVALID_ARGUMENT,{argument:name,value:value})}assert(condition,message,code,params){if(!!condition){return}this.throwError(message,code,params)}assertArgument(condition,message,name,value){if(!!condition){return}this.throwArgumentError(message,name,value)}checkNormalize(message){if(_normalizeError){this.throwError("platform missing String.prototype.normalize",Logger$1.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:_normalizeError})}}checkSafeUint53(value,message){if(typeof value!=="number"){return}if(message==null){message="value not safe"}if(value<0||value>=9007199254740991){this.throwError(message,Logger$1.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value:value})}if(value%1){this.throwError(message,Logger$1.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value:value})}}checkArgumentCount(count,expectedCount,message){if(message){message=": "+message}else{message=""}if(count<expectedCount){this.throwError("missing argument"+message,Logger$1.errors.MISSING_ARGUMENT,{count:count,expectedCount:expectedCount})}if(count>expectedCount){this.throwError("too many arguments"+message,Logger$1.errors.UNEXPECTED_ARGUMENT,{count:count,expectedCount:expectedCount})}}checkNew(target,kind){if(target===Object||target==null){this.throwError("missing new",Logger$1.errors.MISSING_NEW,{name:kind.name})}}checkAbstract(target,kind){if(target===kind){this.throwError("cannot instantiate abstract class "+JSON.stringify(kind.name)+" directly; use a sub-class",Logger$1.errors.UNSUPPORTED_OPERATION,{name:target.name,operation:"new"})}else if(target===Object||target==null){this.throwError("missing new",Logger$1.errors.MISSING_NEW,{name:kind.name})}}static globalLogger(){if(!_globalLogger){_globalLogger=new Logger$1(version$1)}return _globalLogger}static setCensorship(censorship,permanent){if(!censorship&&permanent){this.globalLogger().throwError("cannot permanently disable censorship",Logger$1.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}if(_permanentCensorErrors){if(!censorship){return}this.globalLogger().throwError("error censorship permanent",Logger$1.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}_censorErrors=!!censorship;_permanentCensorErrors=!!permanent}static setLogLevel(logLevel){const level=LogLevels[logLevel.toLowerCase()];if(level==null){Logger$1.globalLogger().warn("invalid log level - "+logLevel);return}_logLevel=level}static from(version2){return new Logger$1(version2)}}Logger$1.errors=ErrorCode;Logger$1.levels=LogLevel$1;const version$2="properties/5.7.0";var __awaiter$2=function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$1=new Logger$1(version$2);function defineReadOnly(object2,name,value){Object.defineProperty(object2,name,{enumerable:true,value:value,writable:false})}function resolveProperties(object2){return __awaiter$2(this,void 0,void 0,function*(){const promises=Object.keys(object2).map(key2=>{const value=object2[key2];return Promise.resolve(value).then(v=>({key:key2,value:v}))});const results=yield Promise.all(promises);return results.reduce((accum,result)=>{accum[result.key]=result.value;return accum},{})})}const opaque={bigint:true,boolean:true,function:true,number:true,string:true};function _isFrozen(object2){if(object2===void 0||object2===null||opaque[typeof object2]){return true}if(Array.isArray(object2)||typeof object2==="object"){if(!Object.isFrozen(object2)){return false}const keys2=Object.keys(object2);for(let i=0;i<keys2.length;i++){let value=null;try{value=object2[keys2[i]]}catch(error){continue}if(!_isFrozen(value)){return false}}return true}return logger$1.throwArgumentError(`Cannot deepCopy ${typeof object2}`,"object",object2)}function _deepCopy(object2){if(_isFrozen(object2)){return object2}if(Array.isArray(object2)){return Object.freeze(object2.map(item=>deepCopy(item)))}if(typeof object2==="object"){const result={};for(const key2 in object2){const value=object2[key2];if(value===void 0){continue}defineReadOnly(result,key2,deepCopy(value))}return result}return logger$1.throwArgumentError(`Cannot deepCopy ${typeof object2}`,"object",object2)}function deepCopy(object2){return _deepCopy(object2)}function fromHex(hexString){return BigNumber3.from(hexString).toNumber()}function toHex(num){return BigNumber3.from(num).toHexString()}function formatBlock(block){if(typeof block==="string"){return block}else if(Number.isInteger(block)){return toHex(block)}return block.toString()}function stringToEnum(x,enumb){return Object.values(enumb).includes(x)?x:null}function getNftContractForNftFromRaw(rawNftContract){return nullsToUndefined(Object.assign(Object.assign({},getNftContractFromRaw(rawNftContract)),{spamClassifications:rawNftContract.spamClassifications.map(parseNftSpamClassification)}))}function getNftContractsForOwnerFromRaw(rawNftContract){return nullsToUndefined(Object.assign(Object.assign({},getNftContractFromRaw(rawNftContract)),{displayNft:rawNftContract.displayNft,image:rawNftContract.image,totalBalance:rawNftContract.totalBalance,numDistinctTokensOwned:rawNftContract.numDistinctTokensOwned,isSpam:rawNftContract.isSpam}))}function getNftContractFromRaw(rawNftContract){var _a2;return nullsToUndefined(Object.assign(Object.assign({},rawNftContract),{tokenType:parseNftTokenType(rawNftContract.tokenType),openSeaMetadata:Object.assign(Object.assign({},rawNftContract.openSeaMetadata),{safelistRequestStatus:((_a2=rawNftContract.openSeaMetadata)===null||_a2===void 0?void 0:_a2.safelistRequestStatus)?stringToEnum(rawNftContract.openSeaMetadata.safelistRequestStatus,OpenSeaSafelistRequestStatus):null})}))}function getNftCollectionFromRaw(rawNftCollection){return nullsToUndefined(Object.assign(Object.assign({},rawNftCollection),{floorPrice:Object.assign(Object.assign({},rawNftCollection.floorPrice),{marketplace:parseNftCollectionMarketplace(rawNftCollection.floorPrice.marketplace)})}))}function getBaseNftFromRaw(rawBaseNft,contractAddress){return{contractAddress:contractAddress?contractAddress:rawBaseNft.contractAddress,tokenId:rawBaseNft.tokenId}}function getNftFromRaw(rawNft){return nullsToUndefined(Object.assign(Object.assign({},rawNft),{contract:getNftContractForNftFromRaw(rawNft.contract),tokenType:parseNftTokenType(rawNft.tokenType),acquiredAt:rawNft.acquiredAt,collection:rawNft.collection,mint:rawNft.mint}))}function getNftSalesFromRaw(rawNftSales){return nullsToUndefined({nftSales:rawNftSales.nftSales.map(rawNftSale=>Object.assign(Object.assign({},rawNftSale),{marketplace:parseNftSaleMarketplace(rawNftSale.marketplace),taker:parseNftTaker(rawNftSale.taker)})),validAt:rawNftSales.validAt,pageKey:rawNftSales.pageKey})}function parseNftSaleMarketplace(marketplace){switch(marketplace){case"looksrare":return NftSaleMarketplace.LOOKSRARE;case"seaport":return NftSaleMarketplace.SEAPORT;case"x2y2":return NftSaleMarketplace.X2Y2;case"wyvern":return NftSaleMarketplace.WYVERN;case"cryptopunks":return NftSaleMarketplace.CRYPTOPUNKS;case"blur":return NftSaleMarketplace.BLUR;default:return NftSaleMarketplace.UNKNOWN}}function parseNftCollectionMarketplace(marketplace){switch(marketplace){case"OpenSea":return NftCollectionMarketplace.OPENSEA;default:return void 0}}function parseNftTaker(taker){switch(taker.toLowerCase()){case"buyer":return NftSaleTakerType.BUYER;case"seller":return NftSaleTakerType.SELLER;default:throw new Error(`Unsupported NftSaleTakerType ${taker}`)}}function parseNftSpamClassification(s){const res=stringToEnum(s,NftSpamClassification);if(res==null){return NftSpamClassification.Unknown}return res}function parseNftTokenType(tokenType){switch(tokenType){case"erc721":case"ERC721":return NftTokenType.ERC721;case"erc1155":case"ERC1155":return NftTokenType.ERC1155;case"no_supported_nft_standard":case"NO_SUPPORTED_NFT_STANDARD":return NftTokenType.NO_SUPPORTED_NFT_STANDARD;case"not_a_contract":case"NOT_A_CONTRACT":return NftTokenType.NOT_A_CONTRACT;default:return NftTokenType.UNKNOWN}}const IS_BROWSER=typeof window!=="undefined"&&window!==null;function nullsToUndefined(obj){if(obj===null||obj===void 0){return void 0}if(obj.constructor.name==="Object"||Array.isArray(obj)){for(const key2 in obj){obj[key2]=nullsToUndefined(obj[key2])}}return obj}function getAssetTransfers(config,params,srcMethod="getAssetTransfers"){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield config.getProvider();if(params.fromAddress){params.fromAddress=yield provider._getAddress(params.fromAddress)}if(params.toAddress){params.toAddress=yield provider._getAddress(params.toAddress)}return provider._send("alchemy_getAssetTransfers",[Object.assign(Object.assign({},params),{fromBlock:params.fromBlock!=null?formatBlock(params.fromBlock):void 0,toBlock:params.toBlock!=null?formatBlock(params.toBlock):void 0,maxCount:params.maxCount!=null?toHex(params.maxCount):void 0})],srcMethod)})}function getTransactionReceipts(config,params,srcMethod="getTransactionReceipts"){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield config.getProvider();return provider._send("alchemy_getTransactionReceipts",[params],srcMethod)})}function getLogs(config,filter2){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield config.getProvider();yield provider.getNetwork();const params=yield resolveProperties({filter:getFilter(config,filter2)});const logs=yield provider.send("eth_getLogs",[params.filter]);logs.forEach(log2=>{if(log2.removed==null){log2.removed=false}});return arrayOf(provider.formatter.filterLog.bind(provider.formatter))(logs)})}function getFilter(config,filter2){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield config.getProvider();const resolvedFilter=yield filter2;let result={};["blockHash","topics"].forEach(key2=>{if(resolvedFilter[key2]==null){return}result[key2]=resolvedFilter[key2]});["fromBlock","toBlock"].forEach(key2=>{if(resolvedFilter[key2]==null){return}result[key2]=provider._getBlockTag(resolvedFilter[key2])});result=provider.formatter.filter(yield resolveProperties(result));if(Array.isArray(resolvedFilter.address)){result.address=yield Promise.all(resolvedFilter.address.map(address=>__awaiter$1$1(this,void 0,void 0,function*(){return provider._getAddress(address)})))}else if(resolvedFilter.address!=null){result.address=yield provider._getAddress(resolvedFilter.address)}return result})}function arrayOf(format){return function(array){if(!Array.isArray(array)){throw new Error("not an array")}const result=[];array.forEach(value=>{result.push(format(value))});return result}}class CoreNamespace{constructor(config){this.config=config}getBalance(addressOrName,blockTag){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();return provider.getBalance(addressOrName,blockTag)})}isContractAddress(address){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();const code=yield provider.getCode(address);return code!=="0x"})}getCode(addressOrName,blockTag){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();return provider.getCode(addressOrName,blockTag)})}getStorageAt(addressOrName,position,blockTag){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();return provider.getStorageAt(addressOrName,position,blockTag)})}getTransactionCount(addressOrName,blockTag){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();return provider.getTransactionCount(addressOrName,blockTag)})}getBlock(blockHashOrBlockTag){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();return provider.getBlock(blockHashOrBlockTag)})}getBlockWithTransactions(blockHashOrBlockTag){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();return provider.getBlockWithTransactions(blockHashOrBlockTag)})}getNetwork(){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();return provider.getNetwork()})}getBlockNumber(){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();return provider.getBlockNumber()})}getGasPrice(){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();return provider.getGasPrice()})}getFeeData(){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();return provider.getFeeData()})}ready(){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();return provider.ready})}call(transaction,blockTag){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();return provider.call(transaction,blockTag)})}estimateGas(transaction){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();return provider.estimateGas(transaction)})}getTransaction(transactionHash){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();return provider.getTransaction(transactionHash)})}getTransactionReceipt(transactionHash){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();return provider.getTransactionReceipt(transactionHash)})}sendTransaction(signedTransaction){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();return provider.sendTransaction(signedTransaction)})}waitForTransaction(transactionHash,confirmations,timeout){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();return provider.waitForTransaction(transactionHash,confirmations,timeout)})}getLogs(filter2){return __awaiter$1$1(this,void 0,void 0,function*(){return getLogs(this.config,filter2)})}send(method,params){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();return provider.send(method,params)})}findContractDeployer(contractAddress){var _a2;return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();const currentBlockNum=yield provider.getBlockNumber();if((yield provider.getCode(contractAddress,currentBlockNum))===ETH_NULL_VALUE){throw new Error(`Contract '${contractAddress}' does not exist`)}const firstBlock=yield binarySearchFirstBlock(0,currentBlockNum+1,contractAddress,this.config);const txReceipts=yield getTransactionReceipts(this.config,{blockNumber:toHex(firstBlock)},"findContractDeployer");const matchingReceipt=(_a2=txReceipts.receipts)===null||_a2===void 0?void 0:_a2.find(receipt=>receipt.contractAddress===contractAddress.toLowerCase());return{deployerAddress:matchingReceipt===null||matchingReceipt===void 0?void 0:matchingReceipt.from,blockNumber:firstBlock}})}getTokenBalances(addressOrName,contractAddressesOrOptions){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();const address=yield provider._getAddress(addressOrName);if(Array.isArray(contractAddressesOrOptions)){if(contractAddressesOrOptions.length>1500){throw new Error("You cannot pass in more than 1500 contract addresses to getTokenBalances()")}if(contractAddressesOrOptions.length===0){throw new Error("getTokenBalances() requires at least one contractAddress when using an array")}return provider._send("alchemy_getTokenBalances",[address,contractAddressesOrOptions],"getTokenBalances")}else{const tokenType=contractAddressesOrOptions===void 0?TokenBalanceType.ERC20:contractAddressesOrOptions.type;const params=[address,tokenType];if((contractAddressesOrOptions===null||contractAddressesOrOptions===void 0?void 0:contractAddressesOrOptions.type)===TokenBalanceType.ERC20&&contractAddressesOrOptions.pageKey){params.push({pageKey:contractAddressesOrOptions.pageKey})}return provider._send("alchemy_getTokenBalances",params,"getTokenBalances")}})}getTokensForOwner(addressOrName,options){var _a2;return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();const address=yield provider._getAddress(addressOrName);const params=[address,(_a2=options===null||options===void 0?void 0:options.contractAddresses)!==null&&_a2!==void 0?_a2:TokenBalanceType.ERC20];if(options===null||options===void 0?void 0:options.pageKey){params.push({pageKey:options.pageKey})}const response=yield provider._send("alchemy_getTokenBalances",params,"getTokensForOwner");const formattedBalances=response.tokenBalances.map(balance=>({contractAddress:balance.contractAddress,rawBalance:BigNumber3.from(balance.tokenBalance).toString()}));const metadataPromises=yield Promise.allSettled(response.tokenBalances.map(token=>provider._send("alchemy_getTokenMetadata",[token.contractAddress],"getTokensForOwner")));const metadata=metadataPromises.map(p=>p.status==="fulfilled"?p.value:{name:null,symbol:null,decimals:null,logo:null});const ownedTokens=formattedBalances.map((balance,index)=>Object.assign(Object.assign(Object.assign({},balance),metadata[index]),{balance:metadata[index].decimals!==null?formatUnits(balance.rawBalance,metadata[index].decimals):void 0}));return{tokens:ownedTokens.map(t=>nullsToUndefined(t)),pageKey:response.pageKey}})}getTokenMetadata(address){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();return provider._send("alchemy_getTokenMetadata",[address],"getTokenMetadata")})}getAssetTransfers(params){return __awaiter$1$1(this,void 0,void 0,function*(){return getAssetTransfers(this.config,params)})}getTransactionReceipts(params){return __awaiter$1$1(this,void 0,void 0,function*(){return getTransactionReceipts(this.config,params)})}resolveName(name){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();return provider.resolveName(name)})}lookupAddress(address){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();return provider.lookupAddress(address)})}}function binarySearchFirstBlock(start,end,address,config){return __awaiter$1$1(this,void 0,void 0,function*(){if(start>=end){return end}const mid=Math.floor((start+end)/2);const provider=yield config.getProvider();const code=yield provider.getCode(address,mid);if(code===ETH_NULL_VALUE){return binarySearchFirstBlock(mid+1,end,address,config)}return binarySearchFirstBlock(start,mid,address,config)})}class DebugNamespace{constructor(config){this.config=config}traceCall(transaction,blockIdentifier,tracer){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();const params=[transaction,blockIdentifier,parseTracerParams(tracer)];return provider._send("debug_traceCall",params,"traceCall")})}traceTransaction(transactionHash,tracer,timeout){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();const params=[transactionHash,parseTracerParams(tracer,timeout)];return provider._send("debug_traceTransaction",params,"traceTransaction")})}traceBlock(blockIdentifier,tracer){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();let method;let params;if(isHexString(blockIdentifier,32)){method="debug_traceBlockByHash";params=[blockIdentifier,parseTracerParams(tracer)]}else{method="debug_traceBlockByNumber";const block=typeof blockIdentifier==="number"?hexStripZeros(hexValue(blockIdentifier)):blockIdentifier;params=[block,parseTracerParams(tracer)]}return provider._send(method,params,"traceBlock")})}}function parseTracerParams(tracer,timeout){return Object.assign({tracer:tracer.type},tracer.onlyTopCall!==void 0&&{tracerConfig:{onlyTopCall:tracer.onlyTopCall,timeout:timeout}})}function sanitizeTokenType(tokenType){if(tokenType===NftTokenType.ERC1155||tokenType===NftTokenType.ERC721){return tokenType}return void 0}var LogLevel;(function(LogLevel2){LogLevel2[LogLevel2["DEBUG"]=0]="DEBUG";LogLevel2[LogLevel2["INFO"]=1]="INFO";LogLevel2[LogLevel2["WARN"]=2]="WARN";LogLevel2[LogLevel2["ERROR"]=3]="ERROR";LogLevel2[LogLevel2["SILENT"]=4]="SILENT"})(LogLevel||(LogLevel={}));({debug:LogLevel.DEBUG,info:LogLevel.INFO,warn:LogLevel.WARN,error:LogLevel.ERROR,silent:LogLevel.SILENT});const logLevelToConsoleFn={[LogLevel.DEBUG]:"log",[LogLevel.INFO]:"info",[LogLevel.WARN]:"warn",[LogLevel.ERROR]:"error"};const DEFAULT_LOG_LEVEL=LogLevel.INFO;function logDebug(message,...args){loggerClient.debug(message,args)}function logInfo(message,...args){loggerClient.info(message,args)}function logWarn(message,...args){loggerClient.warn(message,args)}class Logger3{constructor(){this._logLevel=DEFAULT_LOG_LEVEL}get logLevel(){return this._logLevel}set logLevel(val){if(!(val in LogLevel)){throw new TypeError(`Invalid value "${val}" assigned to \`logLevel\``)}this._logLevel=val}debug(...args){this._log(LogLevel.DEBUG,...args)}info(...args){this._log(LogLevel.INFO,...args)}warn(...args){this._log(LogLevel.WARN,...args)}error(...args){this._log(LogLevel.ERROR,...args)}_log(logLevel,...args){if(logLevel<this._logLevel){return}const now=(new Date).toISOString();const method=logLevelToConsoleFn[logLevel];if(method){console[method](`[${now}] Alchemy:`,...args.map(stringify))}else{throw new Error(`Logger received an invalid logLevel (value: ${logLevel})`)}}}function stringify(obj){if(typeof obj==="string"){return obj}else{try{return JSON.stringify(obj)}catch(e){return obj}}}const loggerClient=new Logger3;const VERSION="3.6.0";function sendAxiosRequest(baseUrl,restApiName,methodName,params,overrides){var _a2;const requestUrl=baseUrl+"/"+restApiName;const config=Object.assign(Object.assign({},overrides),{headers:Object.assign(Object.assign(Object.assign({},overrides===null||overrides===void 0?void 0:overrides.headers),!IS_BROWSER&&{"Accept-Encoding":"gzip"}),{"Alchemy-Ethers-Sdk-Version":VERSION,"Alchemy-Ethers-Sdk-Method":methodName}),method:(_a2=overrides===null||overrides===void 0?void 0:overrides.method)!==null&&_a2!==void 0?_a2:"GET",url:requestUrl,params:params});return axios(config)}const DEFAULT_BACKOFF_INITIAL_DELAY_MS=1e3;const DEFAULT_BACKOFF_MULTIPLIER=1.5;const DEFAULT_BACKOFF_MAX_DELAY_MS=30*1e3;const DEFAULT_BACKOFF_MAX_ATTEMPTS=5;class ExponentialBackoff{constructor(maxAttempts=DEFAULT_BACKOFF_MAX_ATTEMPTS){this.maxAttempts=maxAttempts;this.initialDelayMs=DEFAULT_BACKOFF_INITIAL_DELAY_MS;this.backoffMultiplier=DEFAULT_BACKOFF_MULTIPLIER;this.maxDelayMs=DEFAULT_BACKOFF_MAX_DELAY_MS;this.numAttempts=0;this.currentDelayMs=0;this.isInBackoff=false}backoff(){if(this.numAttempts>=this.maxAttempts){return Promise.reject(new Error(`Exceeded maximum number of attempts: ${this.maxAttempts}`))}if(this.isInBackoff){return Promise.reject(new Error("A backoff operation is already in progress"))}const backoffDelayWithJitterMs=this.withJitterMs(this.currentDelayMs);if(backoffDelayWithJitterMs>0){logDebug("ExponentialBackoff.backoff",`Backing off for ${backoffDelayWithJitterMs}ms`)}this.currentDelayMs*=this.backoffMultiplier;this.currentDelayMs=Math.max(this.currentDelayMs,this.initialDelayMs);this.currentDelayMs=Math.min(this.currentDelayMs,this.maxDelayMs);this.numAttempts+=1;return new Promise(resolve=>{this.isInBackoff=true;setTimeout(()=>{this.isInBackoff=false;resolve()},backoffDelayWithJitterMs)})}withJitterMs(delayMs){return Math.min(delayMs+(Math.random()-.5)*delayMs,this.maxDelayMs)}}function requestHttpWithBackoff(config,apiType,restApiName,methodName,params,overrides){return __awaiter$1$1(this,void 0,void 0,function*(){let lastError=void 0;const backoff=new ExponentialBackoff(config.maxRetries);for(let attempt=0;attempt<config.maxRetries+1;attempt++){try{if(lastError!==void 0){logInfo("requestHttp",`Retrying after error: ${lastError.message}`)}try{yield backoff.backoff()}catch(err){break}const response=yield sendAxiosRequest(config._getRequestUrl(apiType),restApiName,methodName,params,Object.assign(Object.assign({},overrides),{timeout:config.requestTimeout}));if(response.status===200){logDebug(restApiName,`Successful request: ${restApiName}`);return response.data}else{logInfo(restApiName,`Request failed: ${restApiName}, ${response.status}, ${response.data}`);lastError=new Error(response.status+": "+response.data)}}catch(err){if(!axios.isAxiosError(err)||err.response===void 0){throw err}lastError=new Error(err.response.status+": "+JSON.stringify(err.response.data));if(!isRetryableHttpError(err,apiType)){break}}}return Promise.reject(lastError)})}function isRetryableHttpError(err,apiType){const retryableCodes=apiType===AlchemyApiType.WEBHOOK?[429,500]:[429];return err.response!==void 0&&retryableCodes.includes(err.response.status)}function paginateEndpoint(config,apiType,restApiName,methodName,reqPageKey,resPageKey,params){return __asyncGenerator(this,arguments,function*paginateEndpoint_1(){let hasNext=true;const requestParams=Object.assign({},params);while(hasNext){const response=yield __await(requestHttpWithBackoff(config,apiType,restApiName,methodName,requestParams));yield yield __await(response);if(response[resPageKey]!==null){requestParams[reqPageKey]=response[resPageKey]}else{hasNext=false}}})}function getNftMetadata(config,contractAddress,tokenId,options,srcMethod="getNftMetadata"){return __awaiter$1$1(this,void 0,void 0,function*(){const response=yield requestHttpWithBackoff(config,AlchemyApiType.NFT,"getNFTMetadata",srcMethod,{contractAddress:contractAddress,tokenId:BigNumber3.from(tokenId).toString(),tokenType:sanitizeTokenType(options===null||options===void 0?void 0:options.tokenType),tokenUriTimeoutInMs:options===null||options===void 0?void 0:options.tokenUriTimeoutInMs,refreshCache:options===null||options===void 0?void 0:options.refreshCache});return getNftFromRaw(response)})}function getNftMetadataBatch(config,tokens2,options){return __awaiter$1$1(this,void 0,void 0,function*(){const data={tokens:tokens2,tokenUriTimeoutInMs:options===null||options===void 0?void 0:options.tokenUriTimeoutInMs,refreshCache:options===null||options===void 0?void 0:options.refreshCache};const response=yield requestHttpWithBackoff(config,AlchemyApiType.NFT,"getNFTMetadataBatch","getNftMetadataBatch",{},{method:"POST",data:data});return{nfts:response.nfts.map(nft=>getNftFromRaw(nft))}})}function getContractMetadata(config,contractAddress,srcMethod="getContractMetadata"){return __awaiter$1$1(this,void 0,void 0,function*(){const response=yield requestHttpWithBackoff(config,AlchemyApiType.NFT,"getContractMetadata",srcMethod,{contractAddress:contractAddress});return getNftContractFromRaw(response)})}function getContractMetadataBatch(config,contractAddresses){return __awaiter$1$1(this,void 0,void 0,function*(){const response=yield requestHttpWithBackoff(config,AlchemyApiType.NFT,"getContractMetadataBatch","getContractMetadataBatch",{},{method:"POST",data:{contractAddresses:contractAddresses}});return{contracts:response.contracts.map(getNftContractFromRaw)}})}function getCollectionMetadata(config,collectionSlug,srcMethod="getCollectionMetadata"){return __awaiter$1$1(this,void 0,void 0,function*(){const response=yield requestHttpWithBackoff(config,AlchemyApiType.NFT,"getCollectionMetadata",srcMethod,{collectionSlug:collectionSlug});return getNftCollectionFromRaw(response)})}function getNftsForOwnerIterator(config,owner,options,srcMethod="getNftsForOwnerIterator"){return __asyncGenerator(this,arguments,function*getNftsForOwnerIterator_1(){var e_1,_a2;const withMetadata=omitMetadataToWithMetadata(options===null||options===void 0?void 0:options.omitMetadata);try{for(var _b2=__asyncValues(paginateEndpoint(config,AlchemyApiType.NFT,"getNFTsForOwner",srcMethod,"pageKey","pageKey",{contractAddresses:options===null||options===void 0?void 0:options.contractAddresses,pageKey:options===null||options===void 0?void 0:options.pageKey,excludeFilters:options===null||options===void 0?void 0:options.excludeFilters,includeFilters:options===null||options===void 0?void 0:options.includeFilters,owner:owner,withMetadata:withMetadata,tokenUriTimeoutInMs:options===null||options===void 0?void 0:options.tokenUriTimeoutInMs,orderBy:options===null||options===void 0?void 0:options.orderBy})),_c2;_c2=yield __await(_b2.next()),!_c2.done;){const response=_c2.value;for(const ownedNft of response.ownedNfts){yield yield __await(Object.assign(Object.assign({},nftFromGetNftResponse(ownedNft)),{balance:ownedNft.balance}))}}}catch(e_1_1){e_1={error:e_1_1}}finally{try{if(_c2&&!_c2.done&&(_a2=_b2.return))yield __await(_a2.call(_b2))}finally{if(e_1)throw e_1.error}}})}function getNftsForOwner(config,owner,options,srcMethod="getNftsForOwner"){return __awaiter$1$1(this,void 0,void 0,function*(){const withMetadata=omitMetadataToWithMetadata(options===null||options===void 0?void 0:options.omitMetadata);const response=yield requestHttpWithBackoff(config,AlchemyApiType.NFT,"getNFTsForOwner",srcMethod,{contractAddresses:options===null||options===void 0?void 0:options.contractAddresses,pageKey:options===null||options===void 0?void 0:options.pageKey,excludeFilters:options===null||options===void 0?void 0:options.excludeFilters,includeFilters:options===null||options===void 0?void 0:options.includeFilters,owner:owner,pageSize:options===null||options===void 0?void 0:options.pageSize,withMetadata:withMetadata,tokenUriTimeoutInMs:options===null||options===void 0?void 0:options.tokenUriTimeoutInMs,orderBy:options===null||options===void 0?void 0:options.orderBy});if(withMetadata){return nullsToUndefined({ownedNfts:response.ownedNfts.map(res=>Object.assign(Object.assign({},getNftFromRaw(res)),{balance:res.balance})),pageKey:response.pageKey,totalCount:response.totalCount,validAt:response.validAt})}return nullsToUndefined({ownedNfts:response.ownedNfts.map(res=>Object.assign(Object.assign({},getBaseNftFromRaw(res)),{balance:res.balance})),pageKey:response.pageKey,totalCount:response.totalCount,validAt:response.validAt})})}function getNftsForContract(config,contractAddress,options,srcMethod="getNftsForContract"){var _a2;return __awaiter$1$1(this,void 0,void 0,function*(){const withMetadata=omitMetadataToWithMetadata(options===null||options===void 0?void 0:options.omitMetadata);const response=yield requestHttpWithBackoff(config,AlchemyApiType.NFT,"getNFTsForContract",srcMethod,{contractAddress:contractAddress,pageKey:options===null||options===void 0?void 0:options.pageKey,withMetadata:withMetadata,limit:(_a2=options===null||options===void 0?void 0:options.pageSize)!==null&&_a2!==void 0?_a2:void 0,tokenUriTimeoutInMs:options===null||options===void 0?void 0:options.tokenUriTimeoutInMs});if(withMetadata){return nullsToUndefined({nfts:response.nfts.map(res=>getNftFromRaw(res)),pageKey:response.pageKey})}return nullsToUndefined({nfts:response.nfts.map(res=>getBaseNftFromRaw(res,contractAddress)),pageKey:response.pageKey})})}function getNftsForContractIterator(config,contractAddress,options,srcMethod="getNftsForContractIterator"){return __asyncGenerator(this,arguments,function*getNftsForContractIterator_1(){var e_2,_a2;const withMetadata=omitMetadataToWithMetadata(options===null||options===void 0?void 0:options.omitMetadata);try{for(var _b2=__asyncValues(paginateEndpoint(config,AlchemyApiType.NFT,"getNFTsForContract",srcMethod,"pageKey","pageKey",{contractAddress:contractAddress,pageKey:options===null||options===void 0?void 0:options.pageKey,withMetadata:withMetadata})),_c2;_c2=yield __await(_b2.next()),!_c2.done;){const response=_c2.value;for(const nft of response.nfts){yield yield __await(nftFromGetNftContractResponse(nft,contractAddress))}}}catch(e_2_1){e_2={error:e_2_1}}finally{try{if(_c2&&!_c2.done&&(_a2=_b2.return))yield __await(_a2.call(_b2))}finally{if(e_2)throw e_2.error}}})}function getOwnersForContract(config,contractAddress,options,srcMethod="getOwnersForContract"){return __awaiter$1$1(this,void 0,void 0,function*(){const response=yield requestHttpWithBackoff(config,AlchemyApiType.NFT,"getOwnersForContract",srcMethod,Object.assign(Object.assign({},options),{contractAddress:contractAddress}));if(options===null||options===void 0?void 0:options.withTokenBalances){return nullsToUndefined({owners:response.owners,pageKey:response.pageKey})}return nullsToUndefined({owners:response.owners,pageKey:response.pageKey})})}function getContractsForOwner(config,owner,options,srcMethod="getContractsForOwner"){return __awaiter$1$1(this,void 0,void 0,function*(){const response=yield requestHttpWithBackoff(config,AlchemyApiType.NFT,"getContractsForOwner",srcMethod,{owner:owner,excludeFilters:options===null||options===void 0?void 0:options.excludeFilters,includeFilters:options===null||options===void 0?void 0:options.includeFilters,pageKey:options===null||options===void 0?void 0:options.pageKey,pageSize:options===null||options===void 0?void 0:options.pageSize,orderBy:options===null||options===void 0?void 0:options.orderBy});return nullsToUndefined({contracts:response.contracts.map(getNftContractsForOwnerFromRaw),pageKey:response.pageKey,totalCount:response.totalCount})})}function getOwnersForNft(config,contractAddress,tokenId,options,srcMethod="getOwnersForNft"){return __awaiter$1$1(this,void 0,void 0,function*(){return requestHttpWithBackoff(config,AlchemyApiType.NFT,"getOwnersForNFT",srcMethod,Object.assign({contractAddress:contractAddress,tokenId:BigNumber3.from(tokenId).toString()},options))})}function getMintedNfts(config,owner,options){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield config.getProvider();const ownerAddress=yield provider._getAddress(owner);const category=nftTokenTypeToCategory(options===null||options===void 0?void 0:options.tokenType);const params={fromBlock:"0x0",fromAddress:ETH_NULL_ADDRESS,toAddress:ownerAddress,excludeZeroValue:true,contractAddresses:options===null||options===void 0?void 0:options.contractAddresses,category:category,maxCount:100,pageKey:options===null||options===void 0?void 0:options.pageKey};const response=yield getAssetTransfers(config,params,"getMintedNfts");return getNftsForTransfers(config,response)})}function getTransfersForOwner(config,owner,transferType,options){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield config.getProvider();const ownerAddress=yield provider._getAddress(owner);const category=nftTokenTypeToCategory(options===null||options===void 0?void 0:options.tokenType);const params={fromBlock:"0x0",excludeZeroValue:true,contractAddresses:options===null||options===void 0?void 0:options.contractAddresses,category:category,maxCount:100,pageKey:options===null||options===void 0?void 0:options.pageKey};if(transferType===GetTransfersForOwnerTransferType.TO){params.toAddress=ownerAddress}else{params.fromAddress=ownerAddress}const transfersResponse=yield getAssetTransfers(config,params,"getTransfersForOwner");return getNftsForTransfers(config,transfersResponse)})}function getTransfersForContract(config,contract,options){return __awaiter$1$1(this,void 0,void 0,function*(){const category=[AssetTransfersCategory.ERC721,AssetTransfersCategory.ERC1155,AssetTransfersCategory.SPECIALNFT];const provider=yield config.getProvider();const fromBlock=(options===null||options===void 0?void 0:options.fromBlock)?provider.formatter.blockTag(yield provider._getBlockTag(options.fromBlock)):"0x0";const toBlock=(options===null||options===void 0?void 0:options.toBlock)?provider.formatter.blockTag(yield provider._getBlockTag(options.toBlock)):void 0;const params={fromBlock:fromBlock,toBlock:toBlock,excludeZeroValue:true,contractAddresses:[contract],order:options===null||options===void 0?void 0:options.order,category:category,maxCount:100,pageKey:options===null||options===void 0?void 0:options.pageKey};const transfersResponse=yield getAssetTransfers(config,params,"getTransfersForContract");return getNftsForTransfers(config,transfersResponse)})}function nftTokenTypeToCategory(tokenType){switch(tokenType){case NftTokenType.ERC721:return[AssetTransfersCategory.ERC721];case NftTokenType.ERC1155:return[AssetTransfersCategory.ERC1155];default:return[AssetTransfersCategory.ERC721,AssetTransfersCategory.ERC1155,AssetTransfersCategory.SPECIALNFT]}}function parse1155Transfer(transfer){return transfer.erc1155Metadata.map(metadata=>({contractAddress:transfer.rawContract.address,tokenId:metadata.tokenId,tokenType:NftTokenType.ERC1155}))}function verifyNftOwnership(config,owner,contractAddresses,srcMethod="verifyNftOwnership"){return __awaiter$1$1(this,void 0,void 0,function*(){if(typeof contractAddresses==="string"){const response=yield getNftsForOwner(config,owner,{contractAddresses:[contractAddresses],omitMetadata:true},srcMethod);return response.ownedNfts.length>0}else{if(contractAddresses.length===0){throw new Error("Must provide at least one contract address")}const response=yield getNftsForOwner(config,owner,{contractAddresses:contractAddresses,omitMetadata:true},srcMethod);const result=contractAddresses.reduce((acc,curr)=>{acc[curr]=false;return acc},{});for(const nft of response.ownedNfts){result[nft.contractAddress]=true}return result}})}function isSpamContract(config,contractAddress,srcMethod="isSpamContract"){return __awaiter$1$1(this,void 0,void 0,function*(){return requestHttpWithBackoff(config,AlchemyApiType.NFT,"isSpamContract",srcMethod,{contractAddress:contractAddress})})}function getSpamContracts(config,srcMethod="getSpamContracts"){return __awaiter$1$1(this,void 0,void 0,function*(){return requestHttpWithBackoff(config,AlchemyApiType.NFT,"getSpamContracts",srcMethod,void 0)})}function reportSpam(config,contractAddress,srcMethod="reportSpam"){return __awaiter$1$1(this,void 0,void 0,function*(){void requestHttpWithBackoff(config,AlchemyApiType.NFT,"reportSpam",srcMethod,{contractAddress:contractAddress})})}function isAirdropNft(config,contractAddress,tokenId,srcMethod="isAirdropNft"){return __awaiter$1$1(this,void 0,void 0,function*(){return requestHttpWithBackoff(config,AlchemyApiType.NFT,"isAirdropNFT",srcMethod,{contractAddress:contractAddress,tokenId:tokenId})})}function getFloorPrice(config,contractAddress,srcMethod="getFloorPrice"){return __awaiter$1$1(this,void 0,void 0,function*(){const response=yield requestHttpWithBackoff(config,AlchemyApiType.NFT,"getFloorPrice",srcMethod,{contractAddress:contractAddress});return nullsToUndefined(response)})}function getNftSales(config,options={},srcMethod="getNftSales"){return __awaiter$1$1(this,void 0,void 0,function*(){const params=Object.assign({},options);const response=yield requestHttpWithBackoff(config,AlchemyApiType.NFT,"getNFTSales",srcMethod,{fromBlock:params===null||params===void 0?void 0:params.fromBlock,toBlock:params===null||params===void 0?void 0:params.toBlock,order:params===null||params===void 0?void 0:params.order,marketplace:params===null||params===void 0?void 0:params.marketplace,contractAddress:params===null||params===void 0?void 0:params.contractAddress,tokenId:(params===null||params===void 0?void 0:params.tokenId)?BigNumber3.from(params===null||params===void 0?void 0:params.tokenId).toString():void 0,sellerAddress:params===null||params===void 0?void 0:params.sellerAddress,buyerAddress:params===null||params===void 0?void 0:params.buyerAddress,taker:params===null||params===void 0?void 0:params.taker,limit:params===null||params===void 0?void 0:params.limit,pageKey:params===null||params===void 0?void 0:params.pageKey});return getNftSalesFromRaw(response)})}function computeRarity(config,contractAddress,tokenId,srcMethod="computeRarity"){return __awaiter$1$1(this,void 0,void 0,function*(){const response=yield requestHttpWithBackoff(config,AlchemyApiType.NFT,"computeRarity",srcMethod,{contractAddress:contractAddress,tokenId:BigNumber3.from(tokenId).toString()});return nullsToUndefined(response)})}function searchContractMetadata(config,query,srcMethod="searchContractMetadata"){return __awaiter$1$1(this,void 0,void 0,function*(){const response=yield requestHttpWithBackoff(config,AlchemyApiType.NFT,"searchContractMetadata",srcMethod,{query:query});return{contracts:response.contracts.map(getNftContractFromRaw)}})}function summarizeNftAttributes(config,contractAddress,srcMethod="summarizeNftAttributes"){return __awaiter$1$1(this,void 0,void 0,function*(){return requestHttpWithBackoff(config,AlchemyApiType.NFT,"summarizeNFTAttributes",srcMethod,{contractAddress:contractAddress})})}function refreshNftMetadata(config,contractAddress,tokenId,srcMethod="refreshNftMetadata"){return __awaiter$1$1(this,void 0,void 0,function*(){const tokenIdString=BigNumber3.from(tokenId).toString();const first=yield getNftMetadata(config,contractAddress,tokenIdString,void 0,srcMethod);const second=yield refresh(config,contractAddress,tokenIdString,srcMethod);return first.timeLastUpdated!==second.timeLastUpdated})}function refreshContract(config,contractAddress,srcMethod="refreshContract"){return __awaiter$1$1(this,void 0,void 0,function*(){const response=yield requestHttpWithBackoff(config,AlchemyApiType.NFT,"reingestContract",srcMethod,{contractAddress:contractAddress});return{contractAddress:response.contractAddress,refreshState:parseReingestionState(response.reingestionState),progress:response.progress}})}function refresh(config,contractAddress,tokenId,srcMethod){return __awaiter$1$1(this,void 0,void 0,function*(){const response=yield requestHttpWithBackoff(config,AlchemyApiType.NFT,"getNFTMetadata",srcMethod,{contractAddress:contractAddress,tokenId:BigNumber3.from(tokenId).toString(),refreshCache:true});return getNftFromRaw(response)})}function nftFromGetNftResponse(ownedNft){if(isNftWithMetadata(ownedNft)){return getNftFromRaw(ownedNft)}else{return getBaseNftFromRaw(ownedNft)}}function nftFromGetNftContractResponse(ownedNft,contractAddress){if(isNftWithMetadata(ownedNft)){return getNftFromRaw(ownedNft)}else{return getBaseNftFromRaw(ownedNft,contractAddress)}}function isNftWithMetadata(response){return response.name!==void 0}function getNftsForTransfers(config,response){return __awaiter$1$1(this,void 0,void 0,function*(){const metadataTransfers=response.transfers.filter(transfer=>transfer.rawContract.address!==null).flatMap(transfer=>{var _a2;const tokens2=getTokensFromTransfer(transfer);const metadata={from:transfer.from,to:(_a2=transfer.to)!==null&&_a2!==void 0?_a2:void 0,transactionHash:transfer.hash,blockNumber:transfer.blockNum};return tokens2.map(token=>({metadata:metadata,token:token}))});if(metadataTransfers.length===0){return{nfts:[]}}const batchSize=100;const requestBatches=[];for(let i=0;i<metadataTransfers.length;i+=batchSize){requestBatches.push(metadataTransfers.slice(i,i+batchSize))}const responseBatches=yield Promise.all(requestBatches.map(batch=>getNftMetadataBatch(config,batch.map(transfer=>transfer.token))));const nfts=responseBatches.map(r=>r.nfts).flat();const nftsByTokenId=new Map;nfts.forEach(nft=>{const key2=`${nft.contract.address.toLowerCase()}-${BigNumber3.from(nft.tokenId).toString()}`;nftsByTokenId.set(key2,nft)});const transferredNfts=metadataTransfers.map(t=>{const key2=`${t.token.contractAddress.toLowerCase()}-${BigNumber3.from(t.token.tokenId).toString()}`;return Object.assign(Object.assign({},nftsByTokenId.get(key2)),t.metadata)});return{nfts:transferredNfts,pageKey:response.pageKey}})}function getTokensFromTransfer(transfer){if(transfer.category===AssetTransfersCategory.ERC1155){return parse1155Transfer(transfer)}else{return[{contractAddress:transfer.rawContract.address,tokenId:transfer.tokenId,tokenType:transfer.category===AssetTransfersCategory.ERC721?NftTokenType.ERC721:void 0}]}}function omitMetadataToWithMetadata(omitMetadata){return omitMetadata===void 0?true:!omitMetadata}function parseReingestionState(reingestionState){switch(reingestionState){case"does_not_exist":return NftRefreshState.DOES_NOT_EXIST;case"already_queued":return NftRefreshState.ALREADY_QUEUED;case"in_progress":return NftRefreshState.IN_PROGRESS;case"finished":return NftRefreshState.FINISHED;case"queued":return NftRefreshState.QUEUED;case"queue_failed":return NftRefreshState.QUEUE_FAILED;default:throw new Error("Unknown reingestion state: "+reingestionState)}}class NftNamespace{constructor(config){this.config=config}getNftMetadata(contractAddress,tokenId,optionsOrTokenType,tokenUriTimeoutInMs){let options;if(typeof optionsOrTokenType==="object"){options={tokenType:optionsOrTokenType.tokenType,tokenUriTimeoutInMs:optionsOrTokenType.tokenUriTimeoutInMs,refreshCache:optionsOrTokenType.refreshCache}}else{options={tokenType:optionsOrTokenType,tokenUriTimeoutInMs:tokenUriTimeoutInMs}}return getNftMetadata(this.config,contractAddress,tokenId,options)}getNftMetadataBatch(tokens2,options){return getNftMetadataBatch(this.config,tokens2,options)}getContractMetadata(contractAddress){return getContractMetadata(this.config,contractAddress)}getContractMetadataBatch(contractAddresses){return getContractMetadataBatch(this.config,contractAddresses)}getCollectionMetadata(collectionSlug){return getCollectionMetadata(this.config,collectionSlug)}getNftsForOwnerIterator(owner,options){return getNftsForOwnerIterator(this.config,owner,options)}getNftsForOwner(owner,options){return getNftsForOwner(this.config,owner,options)}getNftsForContract(contractAddress,options){return getNftsForContract(this.config,contractAddress,options)}getNftsForContractIterator(contractAddress,options){return getNftsForContractIterator(this.config,contractAddress,options)}getOwnersForContract(contractAddress,options){return getOwnersForContract(this.config,contractAddress,options)}getOwnersForNft(contractAddress,tokenId,options){return getOwnersForNft(this.config,contractAddress,tokenId,options)}getContractsForOwner(owner,options){return getContractsForOwner(this.config,owner,options)}getTransfersForOwner(owner,category,options){return getTransfersForOwner(this.config,owner,category,options)}getTransfersForContract(contract,options){return getTransfersForContract(this.config,contract,options)}getMintedNfts(owner,options){return __awaiter$1$1(this,void 0,void 0,function*(){return getMintedNfts(this.config,owner,options)})}verifyNftOwnership(owner,contractAddress){return verifyNftOwnership(this.config,owner,contractAddress)}isSpamContract(contractAddress){return isSpamContract(this.config,contractAddress)}getSpamContracts(){return getSpamContracts(this.config)}reportSpam(contractAddress){return reportSpam(this.config,contractAddress)}isAirdropNft(contractAddress,tokenId){return isAirdropNft(this.config,contractAddress,tokenId)}getFloorPrice(contractAddress){return getFloorPrice(this.config,contractAddress)}getNftSales(options){return getNftSales(this.config,options)}computeRarity(contractAddress,tokenId){return computeRarity(this.config,contractAddress,tokenId)}searchContractMetadata(query){return searchContractMetadata(this.config,query)}summarizeNftAttributes(contractAddress){return summarizeNftAttributes(this.config,contractAddress)}refreshNftMetadata(contractAddress,tokenId){return refreshNftMetadata(this.config,contractAddress,tokenId)}refreshContract(contractAddress){return refreshContract(this.config,contractAddress)}}class NotifyNamespace{constructor(config){this.config=config}getAllWebhooks(){return __awaiter$1$1(this,void 0,void 0,function*(){this.verifyConfig();const response=yield this.sendWebhookRequest("team-webhooks","getAllWebhooks",{});return{webhooks:parseRawWebhookResponse(response),totalCount:response.data.length}})}getAddresses(webhookOrId,options){return __awaiter$1$1(this,void 0,void 0,function*(){this.verifyConfig();const webhookId=typeof webhookOrId==="string"?webhookOrId:webhookOrId.id;const response=yield this.sendWebhookRequest("webhook-addresses","getAddresses",{webhook_id:webhookId,limit:options===null||options===void 0?void 0:options.limit,after:options===null||options===void 0?void 0:options.pageKey});return parseRawAddressActivityResponse(response)})}getGraphqlQuery(webhookOrId){return __awaiter$1$1(this,void 0,void 0,function*(){this.verifyConfig();const webhookId=typeof webhookOrId==="string"?webhookOrId:webhookOrId.id;const response=yield this.sendWebhookRequest("dashboard-webhook-graphql-query","getGraphqlQuery",{webhook_id:webhookId});return parseRawCustomGraphqlWebhookResponse(response)})}getNftFilters(webhookOrId,options){return __awaiter$1$1(this,void 0,void 0,function*(){this.verifyConfig();const webhookId=typeof webhookOrId==="string"?webhookOrId:webhookOrId.id;const response=yield this.sendWebhookRequest("webhook-nft-filters","getNftFilters",{webhook_id:webhookId,limit:options===null||options===void 0?void 0:options.limit,after:options===null||options===void 0?void 0:options.pageKey});return parseRawNftFiltersResponse(response)})}updateWebhook(webhookOrId,update3){return __awaiter$1$1(this,void 0,void 0,function*(){const webhookId=typeof webhookOrId==="string"?webhookOrId:webhookOrId.id;let restApiName;let methodName;let method;let data;if("isActive"in update3){restApiName="update-webhook";methodName="updateWebhook";method="PUT";data={webhook_id:webhookId,is_active:update3.isActive}}else if("addFilters"in update3||"removeFilters"in update3){restApiName="update-webhook-nft-filters";methodName="updateWebhookNftFilters";method="PATCH";data={webhook_id:webhookId,nft_filters_to_add:update3.addFilters?update3.addFilters.map(nftFilterToParam):[],nft_filters_to_remove:update3.removeFilters?update3.removeFilters.map(nftFilterToParam):[]}}else if("addMetadataFilters"in update3||"removeMetadataFilters"in update3){restApiName="update-webhook-nft-metadata-filters";methodName="updateWebhookNftMetadataFilters";method="PATCH";data={webhook_id:webhookId,nft_metadata_filters_to_add:update3.addMetadataFilters?update3.addMetadataFilters.map(nftFilterToParam):[],nft_metadata_filters_to_remove:update3.removeMetadataFilters?update3.removeMetadataFilters.map(nftFilterToParam):[]}}else if("addAddresses"in update3||"removeAddresses"in update3){restApiName="update-webhook-addresses";methodName="webhook:updateWebhookAddresses";method="PATCH";data={webhook_id:webhookId,addresses_to_add:yield this.resolveAddresses(update3.addAddresses),addresses_to_remove:yield this.resolveAddresses(update3.removeAddresses)}}else if("newAddresses"in update3){restApiName="update-webhook-addresses";methodName="webhook:updateWebhookAddress";method="PUT";data={webhook_id:webhookId,addresses:yield this.resolveAddresses(update3.newAddresses)}}else{throw new Error("Invalid `update` param passed into `updateWebhook`")}yield this.sendWebhookRequest(restApiName,methodName,{},{method:method,data:data})})}createWebhook(url,type,params){return __awaiter$1$1(this,void 0,void 0,function*(){let appId;if(type===WebhookType.MINED_TRANSACTION||type===WebhookType.DROPPED_TRANSACTION||type===WebhookType.GRAPHQL){if(!("appId"in params)){throw new Error("Transaction and GraphQL Webhooks require an app id.")}appId=params.appId}let network=NETWORK_TO_WEBHOOK_NETWORK.get(this.config.network);let nftFilterObj;let addresses;let graphqlQuery;let skipEmptyMessages;if(type===WebhookType.NFT_ACTIVITY||type===WebhookType.NFT_METADATA_UPDATE){if(!("filters"in params)||params.filters.length===0){throw new Error("Nft Activity Webhooks require a non-empty array input.")}network=params.network?NETWORK_TO_WEBHOOK_NETWORK.get(params.network):network;const filters=params.filters.map(filter2=>filter2.tokenId?{contract_address:filter2.contractAddress,token_id:BigNumber3.from(filter2.tokenId).toString()}:{contract_address:filter2.contractAddress});nftFilterObj=type===WebhookType.NFT_ACTIVITY?{nft_filters:filters}:{nft_metadata_filters:filters}}else if(type===WebhookType.ADDRESS_ACTIVITY){if(params===void 0||!("addresses"in params)||params.addresses.length===0){throw new Error("Address Activity Webhooks require a non-empty array input.")}network=params.network?NETWORK_TO_WEBHOOK_NETWORK.get(params.network):network;addresses=yield this.resolveAddresses(params.addresses)}else if(type==WebhookType.GRAPHQL){if(params===void 0||!("graphqlQuery"in params)||params.graphqlQuery.length===0){throw new Error("Custom Webhooks require a non-empty graphql query.")}network=params.network?NETWORK_TO_WEBHOOK_NETWORK.get(params.network):network;graphqlQuery=params.graphqlQuery;skipEmptyMessages=params.skipEmptyMessages}const data=Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({network:network,webhook_type:type,webhook_url:url},appId&&{app_id:appId}),params.name&&{name:params.name}),nftFilterObj),addresses&&{addresses:addresses}),graphqlQuery&&{graphql_query:{query:graphqlQuery,skip_empty_messages:!!skipEmptyMessages}});const response=yield this.sendWebhookRequest("create-webhook","createWebhook",{},{method:"POST",data:data});return parseRawWebhook(response.data)})}deleteWebhook(webhookOrId){return __awaiter$1$1(this,void 0,void 0,function*(){this.verifyConfig();const webhookId=typeof webhookOrId==="string"?webhookOrId:webhookOrId.id;const response=yield this.sendWebhookRequest("delete-webhook","deleteWebhook",{webhook_id:webhookId},{method:"DELETE"});if("message"in response){throw new Error(`Webhook not found. Failed to delete webhook: ${webhookId}`)}})}verifyConfig(){if(this.config.authToken===void 0){throw new Error("Using the Notify API requires setting the Alchemy Auth Token in the settings object when initializing Alchemy.")}}sendWebhookRequest(restApiName,methodName,params,overrides){return requestHttpWithBackoff(this.config,AlchemyApiType.WEBHOOK,restApiName,methodName,params,Object.assign(Object.assign({},overrides),{headers:Object.assign({"X-Alchemy-Token":this.config.authToken},overrides===null||overrides===void 0?void 0:overrides.headers)}))}resolveAddresses(addresses){return __awaiter$1$1(this,void 0,void 0,function*(){if(addresses===void 0){return[]}const resolvedAddresses=[];const provider=yield this.config.getProvider();for(const address of addresses){const rawAddress=yield provider.resolveName(address);if(rawAddress===null){throw new Error(`Unable to resolve the ENS address: ${address}`)}resolvedAddresses.push(rawAddress)}return resolvedAddresses})}}const WEBHOOK_NETWORK_TO_NETWORK=Object.fromEntries(Object.entries(Network));const NETWORK_TO_WEBHOOK_NETWORK=Object.keys(Network).reduce((map,key2)=>{if(key2 in WEBHOOK_NETWORK_TO_NETWORK){map.set(WEBHOOK_NETWORK_TO_NETWORK[key2],key2)}return map},new Map);function parseRawWebhookResponse(response){return response.data.map(parseRawWebhook)}function parseRawWebhook(rawWebhook){return Object.assign(Object.assign({id:rawWebhook.id,network:WEBHOOK_NETWORK_TO_NETWORK[rawWebhook.network],type:rawWebhook.webhook_type,url:rawWebhook.webhook_url,isActive:rawWebhook.is_active,timeCreated:new Date(rawWebhook.time_created).toISOString(),signingKey:rawWebhook.signing_key,version:rawWebhook.version},rawWebhook.app_id!==void 0&&{appId:rawWebhook.app_id}),rawWebhook.name!==void 0&&{name:rawWebhook.name})}function parseRawAddressActivityResponse(response){return{addresses:response.data,totalCount:response.pagination.total_count,pageKey:response.pagination.cursors.after}}function parseRawCustomGraphqlWebhookResponse(response){return{graphqlQuery:response.data.graphql_query}}function parseRawNftFiltersResponse(response){return{filters:response.data.map(f2=>f2.token_id?{contractAddress:f2.contract_address,tokenId:BigNumber3.from(f2.token_id).toString()}:{contractAddress:f2.contract_address}),totalCount:response.pagination.total_count,pageKey:response.pagination.cursors.after}}function nftFilterToParam(filter2){return filter2.tokenId?{contract_address:filter2.contractAddress,token_id:BigNumber3.from(filter2.tokenId).toString()}:{contract_address:filter2.contractAddress}}function getTokensByWallet(config,addresses,withMetadata=true,withPrices=true,includeNativeTokens=true,srcMethod="getTokensByWallet"){return __awaiter$1$1(this,void 0,void 0,function*(){const data={addresses:addresses,withMetadata:withMetadata,withPrices:withPrices,includeNativeTokens:includeNativeTokens};const response=yield requestHttpWithBackoff(config,AlchemyApiType.PORTFOLIO,"assets/tokens/by-address",srcMethod,{},{data:data,method:"POST"});return nullsToUndefined(response)})}function getTokenBalancesByWallet(config,addresses,includeNativeTokens=true,srcMethod="getTokenBalancesByWallet"){return __awaiter$1$1(this,void 0,void 0,function*(){const data={addresses:addresses,includeNativeTokens:includeNativeTokens};const response=yield requestHttpWithBackoff(config,AlchemyApiType.PORTFOLIO,"assets/tokens/balances/by-address",srcMethod,{},{method:"POST",data:data});return nullsToUndefined(response)})}function getNftsByWallet(config,addresses,withMetadata=true,pageKey=void 0,pageSize=void 0,srcMethod="getNftsByWallet"){return __awaiter$1$1(this,void 0,void 0,function*(){const data={addresses:addresses,withMetadata:withMetadata,pageKey:pageKey,pageSize:pageSize};const response=yield requestHttpWithBackoff(config,AlchemyApiType.PORTFOLIO,"assets/nfts/by-address",srcMethod,{},{method:"POST",data:data});return nullsToUndefined(response)})}function getNftCollectionsByWallet(config,addresses,withMetadata=true,pageKey=void 0,pageSize=void 0,srcMethod="getNftCollectionsByWallet"){return __awaiter$1$1(this,void 0,void 0,function*(){const data={addresses:addresses,pageKey:pageKey,pageSize:pageSize,withMetadata:withMetadata};const response=yield requestHttpWithBackoff(config,AlchemyApiType.PORTFOLIO,"assets/nfts/contracts/by-address",srcMethod,{},{method:"POST",data:data});return nullsToUndefined(response)})}function getTransactionsByWallet(config,addresses,before=void 0,after=void 0,limit=void 0,srcMethod="getTransactionsByWallet"){return __awaiter$1$1(this,void 0,void 0,function*(){const data={addresses:addresses,before:before,after:after,limit:limit};const response=yield requestHttpWithBackoff(config,AlchemyApiType.PORTFOLIO,"transactions/history/by-address",srcMethod,{},{method:"POST",data:data});return nullsToUndefined(response)})}class PortfolioNamespace{constructor(config){this.config=config}getTokensByWallet(addresses,withMetadata=true,withPrices=true,includeNativeTokens=true){return getTokensByWallet(this.config,addresses,withMetadata,withPrices,includeNativeTokens)}getTokenBalancesByWallet(addresses,includeNativeTokens=true){return getTokenBalancesByWallet(this.config,addresses,includeNativeTokens)}getNftsByWallet(addresses,withMetadata=true,pageKey,pageSize){return getNftsByWallet(this.config,addresses,withMetadata,pageKey,pageSize)}getNftCollectionsByWallet(addresses,withMetadata=true,pageKey,pageSize){return getNftCollectionsByWallet(this.config,addresses,withMetadata,pageKey,pageSize)}getTransactionsByWallet(addresses,before,after,limit){return getTransactionsByWallet(this.config,addresses,before,after,limit)}}function getTokenPriceByAddress(config,addresses,srcMethod="getTokenPriceByAddress"){return __awaiter$1$1(this,void 0,void 0,function*(){const response=yield requestHttpWithBackoff(config,AlchemyApiType.PRICES,"tokens/by-address",srcMethod,{},{method:"POST",data:{addresses:addresses}});return nullsToUndefined(response)})}function getTokenPriceBySymbol(config,symbols,srcMethod="getTokenPriceBySymbol"){return __awaiter$1$1(this,void 0,void 0,function*(){const response=yield requestHttpWithBackoff(config,AlchemyApiType.PRICES,"tokens/by-symbol",srcMethod,{symbols:symbols},{paramsSerializer:params=>{const searchParams=new URLSearchParams;Object.entries(params).forEach(([key2,value])=>{value.forEach(v=>searchParams.append(key2,v))});return searchParams.toString()}});return nullsToUndefined(response)})}function getHistoricalPriceBySymbol(config,symbol,startTime,endTime,interval,srcMethod="getHistoricalPriceBySymbol"){return __awaiter$1$1(this,void 0,void 0,function*(){const response=yield requestHttpWithBackoff(config,AlchemyApiType.PRICES,"tokens/historical",srcMethod,{},{method:"POST",data:{symbol:symbol,startTime:startTime,endTime:endTime,interval:interval}});return nullsToUndefined(response)})}function getHistoricalPriceByAddress(config,network,address,startTime,endTime,interval,srcMethod="getHistoricalPriceByAddress"){return __awaiter$1$1(this,void 0,void 0,function*(){const response=yield requestHttpWithBackoff(config,AlchemyApiType.PRICES,"tokens/historical",srcMethod,{},{method:"POST",data:{network:network,address:address,startTime:startTime,endTime:endTime,interval:interval}});return nullsToUndefined(response)})}class PricesNamespace{constructor(config){this.config=config}getTokenPriceByAddress(addresses){return getTokenPriceByAddress(this.config,addresses)}getTokenPriceBySymbol(symbols){return getTokenPriceBySymbol(this.config,symbols)}getHistoricalPriceBySymbol(symbol,startTime,endTime,interval){return getHistoricalPriceBySymbol(this.config,symbol,startTime,endTime,interval)}getHistoricalPriceByAddress(network,address,startTime,endTime,interval){return getHistoricalPriceByAddress(this.config,network,address,startTime,endTime,interval)}}const GAS_OPTIMIZED_TX_FEE_MULTIPLES=[.9,1,1.1,1.2,1.3];class TransactNamespace{constructor(config){this.config=config}sendPrivateTransaction(signedTransaction,maxBlockNumber,options){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();const hexBlockNumber=maxBlockNumber?toHex(maxBlockNumber):void 0;return provider._send("eth_sendPrivateTransaction",[{tx:signedTransaction,maxBlockNumber:hexBlockNumber,preferences:options}],"sendPrivateTransaction")})}cancelPrivateTransaction(transactionHash){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();return provider._send("eth_cancelPrivateTransaction",[{txHash:transactionHash}],"cancelPrivateTransaction")})}simulateAssetChangesBundle(transactions,blockIdentifier){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();const params=blockIdentifier!==void 0?[transactions,blockIdentifier]:[transactions];const res=yield provider._send("alchemy_simulateAssetChangesBundle",params,"simulateAssetChangesBundle");return nullsToUndefined(res)})}simulateAssetChanges(transaction,blockIdentifier){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();const params=blockIdentifier!==void 0?[transaction,blockIdentifier]:[transaction];const res=yield provider._send("alchemy_simulateAssetChanges",params,"simulateAssetChanges");return nullsToUndefined(res)})}simulateExecutionBundle(transactions,blockIdentifier){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();const params=blockIdentifier!==void 0?[transactions,blockIdentifier]:[transactions];const res=provider._send("alchemy_simulateExecutionBundle",params,"simulateExecutionBundle");return nullsToUndefined(res)})}simulateExecution(transaction,blockIdentifier){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();const params=blockIdentifier!==void 0?[transaction,blockIdentifier]:[transaction];const res=provider._send("alchemy_simulateExecution",params,"simulateExecution");return nullsToUndefined(res)})}getTransaction(transactionHash){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();return provider.getTransaction(transactionHash)})}sendTransaction(signedTransaction){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();return provider.sendTransaction(signedTransaction)})}estimateGas(transaction){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();return provider.estimateGas(transaction)})}getMaxPriorityFeePerGas(){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();const feeHex=yield provider._send("eth_maxPriorityFeePerGas",[],"getMaxPriorityFeePerGas");return fromHex(feeHex)})}waitForTransaction(transactionHash,confirmations,timeout){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();return provider.waitForTransaction(transactionHash,confirmations,timeout)})}sendGasOptimizedTransaction(transactionOrSignedTxs,wallet2){return __awaiter$1$1(this,void 0,void 0,function*(){if(Array.isArray(transactionOrSignedTxs)){return this._sendGasOptimizedTransaction(transactionOrSignedTxs,"sendGasOptimizedTransactionPreSigned")}let gasLimit;let priorityFee;let baseFee;const provider=yield this.config.getProvider();try{gasLimit=yield this.estimateGas(transactionOrSignedTxs);priorityFee=yield this.getMaxPriorityFeePerGas();const currentBlock=yield provider.getBlock("latest");baseFee=currentBlock.baseFeePerGas.toNumber()}catch(e){throw new Error(`Failed to estimate gas for transaction: ${e}`)}const gasSpreadTransactions=generateGasSpreadTransactions(transactionOrSignedTxs,gasLimit.toNumber(),baseFee,priorityFee);const signedTransactions=yield Promise.all(gasSpreadTransactions.map(tx=>wallet2.signTransaction(tx)));return this._sendGasOptimizedTransaction(signedTransactions,"sendGasOptimizedTransactionGenerated")})}getGasOptimizedTransactionStatus(trackingId){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();return provider._send("alchemy_getGasOptimizedTransactionStatus",[trackingId],"getGasOptimizedTransactionStatus")})}_sendGasOptimizedTransaction(signedTransactions,methodName){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();return provider._send("alchemy_sendGasOptimizedTransaction",[{rawTransactions:signedTransactions}],methodName)})}}function generateGasSpreadTransactions(transaction,gasLimit,baseFee,priorityFee){return GAS_OPTIMIZED_TX_FEE_MULTIPLES.map(feeMultiplier=>Object.assign(Object.assign({},transaction),{gasLimit:gasLimit,maxFeePerGas:Math.round(baseFee*feeMultiplier+priorityFee*feeMultiplier),maxPriorityFeePerGas:Math.round(feeMultiplier*priorityFee)}))}const ALCHEMY_PENDING_TRANSACTIONS_EVENT_TYPE="alchemy-pending-transactions";const ALCHEMY_MINED_TRANSACTIONS_EVENT_TYPE="alchemy-mined-transactions";const ALCHEMY_EVENT_TYPES=[ALCHEMY_PENDING_TRANSACTIONS_EVENT_TYPE,ALCHEMY_MINED_TRANSACTIONS_EVENT_TYPE];let Event$1=class Event2{constructor(tag,listener,once){this.listener=listener;this.tag=tag;this.once=once;this._lastBlockNumber=-2;this._inflight=false}get event(){switch(this.type){case"tx":return this.hash;case"filter":return this.filter;default:return this.tag}}get type(){return this.tag.split(":")[0]}get hash(){const comps=this.tag.split(":");if(comps[0]!=="tx"){throw new Error("Not a transaction event")}return comps[1]}get filter(){const comps=this.tag.split(":");if(comps[0]!=="filter"){throw new Error("Not a transaction event")}const address=comps[1];const topics=deserializeTopics(comps[2]);const filter2={};if(topics.length>0){filter2.topics=topics}if(address&&address!=="*"){filter2.address=address}return filter2}pollable(){const PollableEvents=["block","network","pending","poll"];return this.tag.indexOf(":")>=0||PollableEvents.indexOf(this.tag)>=0}};class EthersEvent extends Event$1{get fromAddress(){const comps=this.tag.split(":");if(comps[0]!==ALCHEMY_PENDING_TRANSACTIONS_EVENT_TYPE){return void 0}if(comps[1]&&comps[1]!=="*"){return deserializeAddressField(comps[1])}else{return void 0}}get toAddress(){const comps=this.tag.split(":");if(comps[0]!==ALCHEMY_PENDING_TRANSACTIONS_EVENT_TYPE){return void 0}if(comps[2]&&comps[2]!=="*"){return deserializeAddressField(comps[2])}else{return void 0}}get hashesOnly(){const comps=this.tag.split(":");if(!ALCHEMY_EVENT_TYPES.includes(comps[0])){return void 0}if(comps[3]&&comps[3]!=="*"){return comps[3]==="true"}else{return void 0}}get includeRemoved(){const comps=this.tag.split(":");if(comps[0]!==ALCHEMY_MINED_TRANSACTIONS_EVENT_TYPE){return void 0}if(comps[2]&&comps[2]!=="*"){return comps[2]==="true"}else{return void 0}}get addresses(){const comps=this.tag.split(":");if(comps[0]!==ALCHEMY_MINED_TRANSACTIONS_EVENT_TYPE){return void 0}if(comps[1]&&comps[1]!=="*"){return deserializeAddressesField(comps[1])}else{return void 0}}}function isAlchemyEvent(event){return typeof event==="object"&&"method"in event}function getAlchemyEventTag(event){if(!isAlchemyEvent(event)){throw new Error("Event tag requires AlchemyEventType")}if(event.method===AlchemySubscription.PENDING_TRANSACTIONS){return serializePendingTransactionsEvent(event)}else if(event.method===AlchemySubscription.MINED_TRANSACTIONS){return serializeMinedTransactionsEvent(event)}else{throw new Error(`Unrecognized AlchemyFilterEvent: ${event}`)}}function verifyAlchemyEventName(eventName){if(!Object.values(AlchemySubscription).includes(eventName.method)){throw new Error(`Invalid method name ${eventName.method}. Accepted method names: ${Object.values(AlchemySubscription)}`)}}function serializePendingTransactionsEvent(event){const fromAddress=serializeAddressField(event.fromAddress);const toAddress=serializeAddressField(event.toAddress);const hashesOnly=serializeBooleanField(event.hashesOnly);return ALCHEMY_PENDING_TRANSACTIONS_EVENT_TYPE+":"+fromAddress+":"+toAddress+":"+hashesOnly}function serializeMinedTransactionsEvent(event){const addresses=serializeAddressesField(event.addresses);const includeRemoved=serializeBooleanField(event.includeRemoved);const hashesOnly=serializeBooleanField(event.hashesOnly);return ALCHEMY_MINED_TRANSACTIONS_EVENT_TYPE+":"+addresses+":"+includeRemoved+":"+hashesOnly}function serializeAddressesField(addresses){if(addresses===void 0){return"*"}return addresses.map(filter2=>serializeAddressField(filter2.to)+","+serializeAddressField(filter2.from)).join("|")}function serializeAddressField(field){if(field===void 0){return"*"}else if(Array.isArray(field)){return field.join("|")}else{return field}}function serializeBooleanField(field){if(field===void 0){return"*"}else{return field.toString()}}function deserializeTopics(data){if(data===""){return[]}return data.split(/&/g).map(topic=>{if(topic===""){return[]}const comps=topic.split("|").map(topic2=>topic2==="null"?null:topic2);return comps.length===1?comps[0]:comps})}function deserializeAddressField(data){if(data===""){return void 0}const addresses=data.split("|");return addresses.length===1?addresses[0]:addresses}function deserializeAddressesField(data){if(data===""){return void 0}return data.split("|").map(addressStr=>addressStr.split(",")).map(addressPair=>Object.assign(Object.assign({},addressPair[0]!=="*"&&{to:addressPair[0]}),addressPair[1]!=="*"&&{from:addressPair[1]}))}class WebSocketNamespace{constructor(config){this.config=config}on(eventName,listener){void(()=>__awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getWebSocketProvider();const processedEvent=yield this._resolveEnsAlchemyEvent(eventName);provider.on(processedEvent,listener)}))();return this}once(eventName,listener){void(()=>__awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getWebSocketProvider();const processedEvent=yield this._resolveEnsAlchemyEvent(eventName);provider.once(processedEvent,listener)}))();return this}off(eventName,listener){void(()=>__awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getWebSocketProvider();const processedEvent=yield this._resolveEnsAlchemyEvent(eventName);return provider.off(processedEvent,listener)}))();return this}removeAllListeners(eventName){void(()=>__awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getWebSocketProvider();const processedEvent=eventName?yield this._resolveEnsAlchemyEvent(eventName):void 0;provider.removeAllListeners(processedEvent)}))();return this}listenerCount(eventName){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getWebSocketProvider();const processedEvent=eventName?yield this._resolveEnsAlchemyEvent(eventName):void 0;return provider.listenerCount(processedEvent)})}listeners(eventName){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getWebSocketProvider();const processedEvent=eventName?yield this._resolveEnsAlchemyEvent(eventName):void 0;return provider.listeners(processedEvent)})}_resolveEnsAlchemyEvent(eventName){return __awaiter$1$1(this,void 0,void 0,function*(){if(!isAlchemyEvent(eventName)){return eventName}if(eventName.method===AlchemySubscription.MINED_TRANSACTIONS&&eventName.addresses){const processedAddresses=[];for(const address of eventName.addresses){if(address.to){address.to=yield this._resolveNameOrError(address.to)}if(address.from){address.from=yield this._resolveNameOrError(address.from)}processedAddresses.push(address)}eventName.addresses=processedAddresses}else if(eventName.method===AlchemySubscription.PENDING_TRANSACTIONS){if(eventName.fromAddress){if(typeof eventName.fromAddress==="string"){eventName.fromAddress=yield this._resolveNameOrError(eventName.fromAddress)}else{eventName.fromAddress=yield Promise.all(eventName.fromAddress.map(address=>this._resolveNameOrError(address)))}}if(eventName.toAddress){if(typeof eventName.toAddress==="string"){eventName.toAddress=yield this._resolveNameOrError(eventName.toAddress)}else{eventName.toAddress=yield Promise.all(eventName.toAddress.map(address=>this._resolveNameOrError(address)))}}}return eventName})}_resolveNameOrError(name){return __awaiter$1$1(this,void 0,void 0,function*(){const provider=yield this.config.getProvider();const resolved=yield provider.resolveName(name);if(resolved===null){throw new Error(`Unable to resolve the ENS address: ${name}`)}return resolved})}}let Alchemy$1=class Alchemy{constructor(settings){this.config=new AlchemyConfig(settings);this.core=new CoreNamespace(this.config);this.nft=new NftNamespace(this.config);this.ws=new WebSocketNamespace(this.config);this.transact=new TransactNamespace(this.config);this.notify=new NotifyNamespace(this.config);this.debug=new DebugNamespace(this.config);this.prices=new PricesNamespace(this.config);this.portfolio=new PortfolioNamespace(this.config)}};let Wallet$1=class Wallet2 extends Wallet$2{constructor(privateKey,alchemyOrProvider){let superProvider;if(alchemyOrProvider&&Provider.isProvider(alchemyOrProvider)){superProvider=alchemyOrProvider}super(privateKey,superProvider);if(alchemyOrProvider&&!Provider.isProvider(alchemyOrProvider)){this.alchemyProviderPromise=alchemyOrProvider.config.getProvider()}}getBalance(blockTag){return this.getWallet().then(wallet2=>wallet2.getBalance(blockTag))}getTransactionCount(blockTag){return this.getWallet().then(wallet2=>wallet2.getTransactionCount(blockTag))}estimateGas(transaction){return this.getWallet().then(wallet2=>wallet2.estimateGas(transaction))}call(transaction,blockTag){return this.getWallet().then(wallet2=>wallet2.call(transaction,blockTag))}populateTransaction(transaction){return this.getWallet().then(wallet2=>wallet2.populateTransaction(transaction))}sendTransaction(transaction){return this.getWallet().then(wallet2=>wallet2.sendTransaction(transaction))}getChainId(){return this.getWallet().then(wallet2=>wallet2.getChainId())}getGasPrice(){return this.getWallet().then(wallet2=>wallet2.getGasPrice())}getFeeData(){return this.getWallet().then(wallet2=>wallet2.getFeeData())}resolveName(name){return this.getWallet().then(wallet2=>wallet2.resolveName(name))}getWallet(){return __awaiter$1$1(this,void 0,void 0,function*(){if(!this.alchemyProviderPromise){return this.connect(this.provider)}return this.connect(yield this.alchemyProviderPromise)})}};class EthersConverter{static toEthersHex(value){if(value===null||value===void 0)return null;if(typeof value==="string"&&value.startsWith("0x"))return value;return"0x"+BigInt(value.toString()).toString(16)}static transactionToEthersTransaction(transaction){var _a2;return{to:transaction.to??void 0,from:transaction.from??void 0,nonce:transaction.nonce===-1?void 0:transaction.nonce,gasLimit:this.toEthersHex(transaction.gasLimit),gasPrice:this.toEthersHex(transaction.gasPrice),maxPriorityFeePerGas:this.toEthersHex(transaction.maxPriorityFeePerGas),maxFeePerGas:this.toEthersHex(transaction.maxFeePerGas),data:((_a2=transaction.data)==null?void 0:_a2.toString())??void 0,value:this.toEthersHex(transaction.quantity),chainId:this.toEthersHex(transaction.chainId)??void 0,accessList:transaction.accessList??void 0,customData:transaction.customData,type:transaction.type}}static async ethersTransactionResponseToTransactionResponse(tx){return{hash:tx.hash,to:tx.to??"",from:tx.from,nonce:tx.nonce,gasLimit:tx.gasLimit,gasPrice:tx.gasPrice,data:tx.data,quantity:tx.value,chainId:tx.chainId,blockNumber:tx.blockNumber??void 0,blockHash:tx.blockHash??void 0,timestamp:(new Date).getTime(),confirmations:await tx.confirmations(),type:tx.type??void 0,accessList:tx.accessList??void 0,maxPriorityFeePerGas:tx.maxPriorityFeePerGas,maxFeePerGas:tx.maxFeePerGas,wait:async confirmations=>{const receipt=await tx.wait(confirmations);if(!receipt){throw new Error("Transaction receipt is null")}return this.ethersTransactionReceiptToTransactionReceipt(receipt)}}}static async ethersTransactionReceiptToTransactionReceipt(receipt){return{to:receipt.to??"",from:receipt.from,contractAddress:receipt.contractAddress??void 0,transactionIndex:receipt.index,root:receipt.root??void 0,gasUsed:receipt.gasUsed,logsBloom:receipt.logsBloom,blockHash:receipt.blockHash,transactionHash:receipt.hash,logs:receipt.logs.map(this.ethersLogToLog),blockNumber:receipt.blockNumber,confirmations:await receipt.confirmations(),cumulativeGasUsed:receipt.cumulativeGasUsed,effectiveGasPrice:receipt.gasPrice??void 0,byzantium:true,type:receipt.type,status:receipt.status!==null?receipt.status:void 0}}static ethersLogToLog(log2){return{blockNumber:log2.blockNumber,blockHash:log2.blockHash,transactionIndex:log2.transactionIndex,removed:log2.removed,address:log2.address,data:log2.data,topics:[...log2.topics],transactionHash:log2.transactionHash,logIndex:log2.index}}static ethersTransactionRequestToTransactionRequest(tx){try{if(!tx)return null;return{to:tx.to,from:tx.from,nonce:tx.nonce,gasLimit:tx.gasLimit?BigInt(tx.gasLimit.toString()):void 0,gasPrice:tx.gasPrice?BigInt(tx.gasPrice.toString()):void 0,maxPriorityFeePerGas:tx.maxPriorityFeePerGas?BigInt(tx.maxPriorityFeePerGas.toString()):void 0,maxFeePerGas:tx.maxFeePerGas?BigInt(tx.maxFeePerGas.toString()):void 0,data:tx.data,quantity:tx.value?BigInt(tx.value.toString()):null,chainId:tx.chainId,accessList:this.convertAccessList(tx.accessList),customData:tx.customData,type:tx.type}}catch(error){log$1.error("Error converting ethers transaction request to transaction request:",false,error);return null}}static convertAccessList(accessList){if(!accessList)return void 0;if(Array.isArray(accessList)){return accessList.map(item=>{if(Array.isArray(item)){return{address:item[0],storageKeys:item[1]}}else{return{address:item.address,storageKeys:item.storageKeys}}})}return Object.entries(accessList).map(([address,storageKeys])=>({address:address,storageKeys:storageKeys}))}}const log={debug:()=>{},debugStack:()=>{},warn:()=>{},errorStack:()=>{},info:()=>{},infoStack:()=>{},trace:()=>{},error:log$1.error.bind(log$1),setLevel:log$1.setLevel.bind(log$1),setLogFilterEnabled:log$1.setLogFilterEnabled.bind(log$1),setLogFilterRegex:log$1.setLogFilterRegex.bind(log$1),setStackIndex:log$1.setStackIndex.bind(log$1),setBackend:log$1.setBackend.bind(log$1),clearPersistedLogs:log$1.clearPersistedLogs.bind(log$1),getPersistedLogs:log$1.getPersistedLogs.bind(log$1)};const loggerWrapper=Object.freeze(Object.defineProperty({__proto__:null,LogLevel:LogLevel$4,LogLevelDirection:LogLevelDirection,log:log},Symbol.toStringTag,{value:"Module"}));class RPCBase{constructor(options){__publicField(this,"baseURL");__publicField(this,"apiKey");__publicField(this,"headers");__publicField(this,"maxRetries");__publicField(this,"timeout");this.baseURL=options.baseURL;this.apiKey=options.apiKey;this.headers=options.headers||{"Content-Type":"application/json"};this.maxRetries=options.maxRetries??3;this.timeout=options.timeout??1e4}async fetchWithRetry(body,headers={},retries=this.maxRetries,backoffMs=500){const url=this.apiKey?`${this.baseURL}/${this.apiKey}`:this.baseURL;const options={method:"POST",headers:headers||this.headers,body:JSON.stringify(body)};for(let attempt=1;attempt<=retries;attempt++){try{const controller=new AbortController;const timeout=setTimeout(()=>controller.abort(),this.timeout);const response=await fetch(url,{...options,signal:controller.signal});clearTimeout(timeout);if(!response.ok){const errorText=await response.text();log.error(`[RPCBase] Non-OK HTTP status`,false,{status:response.status,errorText:errorText});throw new Error(`HTTP error! status: ${response.status}`)}const json=await response.json();if(json.error){log.error(`[RPCBase] JSON-RPC error`,false,json.error);throw new Error(json.error.message||"Unknown JSON-RPC error")}return json.result}catch(err){if(attempt===retries){log.error(`[RPCBase] Failed after ${attempt} attempts`,false,err);throw err}const delay=backoffMs*2**(attempt-1);log.warn(`[RPCBase] Retry ${attempt}/${retries} after error: ${err}. Waiting ${delay}ms...`);await new Promise(res=>setTimeout(res,delay))}}}async request(method,params=[],headers={},retries=this.maxRetries,backoffMs=500){const payload={jsonrpc:"2.0",id:Date.now(),method:method,params:params};log.info(`[RPCBase] Sending request:`,false,{method:method,params:params});return this.fetchWithRetry(payload,headers)}}class RPCAlchemy extends RPCBase{constructor(apiKey,options){const baseOptions={baseURL:`https://eth-mainnet.g.alchemy.com/v2/${apiKey}`,apiKey:apiKey,timeout:8e3,...options};super(baseOptions);__publicField(this,"requestQueue",[]);__publicField(this,"processingQueue",false);__publicField(this,"lastRequestTime",0);__publicField(this,"minRequestInterval",100);__publicField(this,"maxRetries",3);__publicField(this,"retryDelay",1e3)}async processQueue(){if(this.processingQueue||this.requestQueue.length===0)return;this.processingQueue=true;while(this.requestQueue.length>0){const now=Date.now();const timeSinceLastRequest=now-this.lastRequestTime;if(timeSinceLastRequest<this.minRequestInterval){await new Promise(resolve=>setTimeout(resolve,this.minRequestInterval-timeSinceLastRequest))}const request=this.requestQueue.shift();if(request){try{await request()}catch(error){log.error("[RPCAlchemy] Error processing request",false,error)}}this.lastRequestTime=Date.now()}this.processingQueue=false}async makeRequestWithRetry(method,params){let lastError;for(let attempt=0;attempt<this.maxRetries;attempt++){try{const result=await this.request(method,params);return result}catch(error){lastError=error;if(error.code===429){const delay=this.retryDelay*Math.pow(2,attempt);log.warn(`[RPCAlchemy] Rate limited, retrying in ${delay}ms`,false,{attempt:attempt,method:method});await new Promise(resolve=>setTimeout(resolve,delay));continue}throw error}}throw lastError}async getBlock(blockTag="latest"){try{log.info("[RPCAlchemy] Fetching block",false,{blockTag:blockTag});return await this.request("eth_getBlockByNumber",[blockTag,false])}catch(error){log.error("[RPCAlchemy] Error fetching block",false,error);throw error}}async getTransaction(txHash){try{log.info("[RPCAlchemy] Fetching transaction",false,{txHash:txHash});return await this.request("eth_getTransactionByHash",[txHash])}catch(error){log.error("[RPCAlchemy] Error fetching transaction",false,error);throw error}}async getBalance(address,blockTag="latest"){try{log.info("[RPCAlchemy] Fetching balance",false,{address:address,blockTag:blockTag});return new Promise((resolve,reject)=>{const timeoutId=setTimeout(()=>{reject(new Error("Balance request timeout after 10 seconds"))},1e4);this.requestQueue.push(async()=>{try{const result=await this.makeRequestWithRetry("eth_getBalance",[address,blockTag]);clearTimeout(timeoutId);resolve(result)}catch(error){clearTimeout(timeoutId);log.warn("[RPCAlchemy] Balance request failed, returning 0",false,{address:address,error:error instanceof Error?error.message:error});resolve("0x0")}});this.processQueue()})}catch(error){log.error("[RPCAlchemy] Error fetching balance",false,error);return"0x0"}}async getCode(address,blockTag="latest"){try{log.info("[RPCAlchemy] Fetching code",false,{address:address,blockTag:blockTag});return await this.request("eth_getCode",[address,blockTag])}catch(error){log.error("[RPCAlchemy] Error fetching code",false,error);throw error}}async estimateGas(params){try{log.info("[RPCAlchemy] Estimating gas",false,{params:params});const txParams=Array.isArray(params)?params[0]:params;const tx={from:txParams.from,to:txParams.to,data:txParams.data||txParams.input};if(txParams.value!==void 0){tx.value=txParams.value}if(txParams.gas!==void 0){tx.gas=txParams.gas}if(txParams.gasPrice!==void 0){tx.gasPrice=txParams.gasPrice}if(txParams.maxFeePerGas!==void 0){tx.maxFeePerGas=txParams.maxFeePerGas}if(txParams.maxPriorityFeePerGas!==void 0){tx.maxPriorityFeePerGas=txParams.maxPriorityFeePerGas}if(txParams.nonce!==void 0){tx.nonce=txParams.nonce}log.debug("[RPCAlchemy] Sending gas estimation request",false,{tx:tx});const result=await this.request("eth_estimateGas",[tx]);log.debug("[RPCAlchemy] Gas estimation result",false,{result:result});return result}catch(error){log.error("[RPCAlchemy] Error estimating gas",false,error);throw error}}async ethCall(transaction,blockTag="latest"){var _a2,_b2,_c2,_d2;try{log.info("[RPCAlchemy] Making eth_call",false,{transaction:transaction,blockTag:blockTag});const tx={from:transaction.from,to:transaction.to,data:transaction.data,quantity:(_a2=transaction.value)==null?void 0:_a2.toString(),gasLimit:(_b2=transaction.gas)==null?void 0:_b2.toString(),gasPrice:(_c2=transaction.gasPrice)==null?void 0:_c2.toString(),nonce:(_d2=transaction.nonce)==null?void 0:_d2.toString()};return await this.request("eth_call",[tx,blockTag])}catch(error){log.error("[RPCAlchemy] Error in eth_call",false,error);throw error}}async getGasPrice(){try{log.info("[RPCAlchemy] Getting gas price",false);const result=await this.request("eth_gasPrice");return EthereumBigNumber.from(result)}catch(error){log.error("[RPCAlchemy] Error getting gas price",false,error);throw error}}async getNonce(address,blockTag="latest"){try{log.info("[RPCAlchemy] Getting nonce",false,{address:address,blockTag:blockTag});return await this.request("eth_getTransactionCount",[address,blockTag])}catch(error){log.error("[RPCAlchemy] Error getting nonce",false,error);throw error}}async getTransactionReceipt(txHash){try{log.info("[RPCAlchemy] Getting transaction receipt",false,{txHash:txHash});return await this.request("eth_getTransactionReceipt",[txHash])}catch(error){log.error("[RPCAlchemy] Error getting transaction receipt",false,error);throw error}}async getLogs(filter2){try{log.info("[RPCAlchemy] Getting logs",false,{filter:filter2});return await this.request("eth_getLogs",[filter2])}catch(error){log.error("[RPCAlchemy] Error getting logs",false,error);throw error}}}var define_process_env_default={DEV_MODE:"true",NODE_ENV:'"development"'};class Alchemy2 extends AbstractProvider{constructor(options={}){super("Alchemy",options.blockchains||["Ethereum","Solana","Optimism","Polygon","Base","Arbitrum","Avalanche","Celo"],options.chainIds||[1,10,69,137,80001,42161,421611,11155111],options.blockchain||"Ethereum",options.chainId||1,null);__publicField(this,"config");__publicField(this,"alchemy",null);this.chainId=options.chainId||1;this.alchemy=null;this.setChainId(this.chainId)}async connect(blockchain,chainId){this.blockchain=blockchain;this.chainId=chainId;await this.getAlchemy(chainId)}async getAlchemy(chainId=1){this.config=getConfig(chainId);if(!this.config){throw new Error(`Invalid chain ID: ${chainId}`)}const isBackgroundContext=typeof window==="undefined"||!window.document;if(isBackgroundContext){const url=`https://eth-mainnet.g.alchemy.com/v2/${this.config.apiKey}`;this.provider=new JsonRpcProvider(url);return null}if(this.alchemy){this.alchemy=null}this.alchemy=new Alchemy$1(this.config);return this.alchemy}async getProviderURL(){const isBackgroundContext=typeof window==="undefined"||!window.document;if(isBackgroundContext){const config=getConfig(this.chainId);if(!(config==null?void 0:config.apiKey)){throw new Error("No Alchemy API key found")}return`https://eth-mainnet.g.alchemy.com/v2/${config.apiKey}`}await this.getAlchemy(this.chainId);if(!this.alchemy){throw new Error("No Alchemy set")}const provider=await this.alchemy.config.getProvider();if(provider){return provider.connection.url}else{return""}}async initializeProvider(){if(this.provider){return this.provider}const url=await this.getProviderURL();if(!url){throw new Error("No URL set")}this.provider=new JsonRpcProvider(url);return this.provider}getProvider(){if(!this.provider){return null}return this.provider}async call(transaction,blockTag="latest"){try{await this.getAlchemy(this.chainId);if(!this.alchemy){throw new Error("No Alchemy set")}const resolvedTransaction=await this.resolveDeferredTransaction(transaction);const resolvedBlockTag=await blockTag;const ethersTransaction=EthersConverter.transactionToEthersTransaction(resolvedTransaction);const result=await this.alchemy.core.call(ethersTransaction,resolvedBlockTag);eventManager.emit("call",{transaction:resolvedTransaction,blockTag:resolvedBlockTag,result:result});return result}catch(error){eventManager.emit("error",{provider:this.name,method:"call",error:error});throw error}}async estimateGas(transaction){var _a2,_b2,_c2,_d2;try{const resolvedTransaction=await this.resolveDeferredTransaction(transaction);const isBackgroundContext=typeof window==="undefined"||!window.document;if(isBackgroundContext){const config=getConfig(this.chainId);if(!(config==null?void 0:config.apiKey)){throw new Error("No Alchemy API key found")}const rpcAlchemy=new RPCAlchemy(config.apiKey);const rpcTransaction={from:resolvedTransaction.from,to:resolvedTransaction.to,gas:(_a2=resolvedTransaction.gasLimit)==null?void 0:_a2.toString(),gasPrice:(_b2=resolvedTransaction.gasPrice)==null?void 0:_b2.toString(),value:(_c2=resolvedTransaction.quantity)==null?void 0:_c2.toString(),data:(_d2=resolvedTransaction.data)==null?void 0:_d2.toString()};const result=await rpcAlchemy.estimateGas(rpcTransaction);const gasEstimate2=BigInt(result);eventManager.emit("estimateGas",{transaction:resolvedTransaction,gasEstimate:gasEstimate2});return gasEstimate2}await this.getAlchemy(this.chainId);if(!this.alchemy){throw new Error("No Alchemy set")}const ethersTransaction=EthersConverter.transactionToEthersTransaction(resolvedTransaction);const gasEstimate=await this.alchemy.core.estimateGas(ethersTransaction);eventManager.emit("estimateGas",{transaction:resolvedTransaction,gasEstimate:gasEstimate});return BigInt(gasEstimate.toString())}catch(error){eventManager.emit("error",{provider:this.name,method:"estimateGas",error:error});throw error}}async resolveDeferredTransaction(transaction){const resolved={};for(const[key2,value]of Object.entries(transaction)){if(value instanceof Promise){resolved[key2]=await value}else{resolved[key2]=value}}return resolved}async getBlockNumber(){try{const result=await this.makeRpcCall("eth_blockNumber",[]);const blockNumber=parseInt(result,16);eventManager.emit("blockNumber",{blockNumber:blockNumber});return blockNumber}catch(error){eventManager.emit("error",{provider:this.name,method:"getBlockNumber",error:error});throw error}}async getGasPrice(){try{const result=await this.makeRpcCall("eth_gasPrice",[]);const price=BigInt(result);eventManager.emit("gasPrice",{price:price});return price}catch(error){eventManager.emit("error",{provider:this.name,method:"getGasPrice",error:error});throw error}}async getFeeData(){try{await this.getAlchemy();if(!this.alchemy){throw new Error("No Alchemy set")}const feeData=await this.alchemy.core.getFeeData();eventManager.emit("feeData",{feeData:feeData});return feeData}catch(error){eventManager.emit("error",{provider:this.name,method:"getFeeData",error:error});throw error}}async getBalance(addressOrName,blockTag="latest"){try{const resolvedBlockTag=await blockTag;const blockTagStr=typeof resolvedBlockTag==="bigint"?resolvedBlockTag.toString():resolvedBlockTag;const isBackgroundContext=typeof window==="undefined"||!window.document;if(isBackgroundContext){const config=getConfig(this.chainId);if(!(config==null?void 0:config.apiKey)){throw new Error("No Alchemy API key found")}const rpcAlchemy=new RPCAlchemy(config.apiKey);const result2=await rpcAlchemy.getBalance(addressOrName,blockTagStr);const balance2=BigInt(result2);eventManager.emit("balanceFetched",{address:addressOrName,balance:balance2});return balance2}await this.getAlchemy(this.chainId);if(!this.alchemy){throw new Error("No Alchemy set")}const result=await this.alchemy.core.getBalance(addressOrName,resolvedBlockTag);const balance=BigInt(result.toString());eventManager.emit("balanceFetched",{address:addressOrName,balance:balance});return balance}catch(error){eventManager.emit("error",{provider:this.name,method:"getBalance",error:error});throw error}}async getCode(addressOrName,blockTag="latest"){try{const resolvedBlockTag=await blockTag;const blockTagStr=typeof resolvedBlockTag==="bigint"?resolvedBlockTag.toString():resolvedBlockTag;const isBackgroundContext=typeof window==="undefined"||!window.document;if(isBackgroundContext){const config=getConfig(this.chainId);if(!(config==null?void 0:config.apiKey)){throw new Error("No Alchemy API key found")}const rpcAlchemy=new RPCAlchemy(config.apiKey);return await rpcAlchemy.getCode(addressOrName,blockTagStr)}await this.getAlchemy(this.chainId);if(!this.alchemy){throw new Error("No Alchemy set")}return await this.alchemy.core.getCode(addressOrName,resolvedBlockTag)}catch(error){eventManager.emit("error",{provider:this.name,method:"getCode",error:error});throw error}}async getStorageAt(addressOrName,position,blockTag="latest"){try{await this.getAlchemy(this.chainId);if(!this.alchemy){throw new Error("No Alchemy set")}const resolvedBlockTag=await blockTag;const storage=await this.alchemy.core.getStorageAt(addressOrName,EthersConverter.toEthersHex(position)||"0x0",resolvedBlockTag);eventManager.emit("getStorageAt",{addressOrName:addressOrName,position:position,blockTag:resolvedBlockTag,storage:storage});return storage}catch(error){eventManager.emit("error",{provider:this.name,method:"getStorageAt",error:error});throw error}}async sendRawTransaction(signedTransaction){try{await this.getAlchemy(this.chainId);if(!this.alchemy){throw new Error("No Alchemy set")}const response=await this.alchemy.transact.sendTransaction(signedTransaction);eventManager.emit("sendRawTransaction",{signedTransaction:signedTransaction,response:response});return response}catch(error){eventManager.emit("error",{provider:this.name,method:"sendRawTransaction",error:error});throw error}}async sendTransaction(transaction){try{await this.getAlchemy(this.chainId);if(!this.alchemy){throw new Error("No Alchemy set")}if(transaction.nonce===void 0||transaction.nonce<0){transaction.nonce=await this.alchemy.core.getTransactionCount(transaction.from)}if(!this.signer){const signer=this.getSigner();if(signer){this.setSigner(signer)}else{throw new Error("No signer set")}}if(!this.signer){throw new Error("No signer set")}const signedTransaction=await this.signer.signTransaction(transaction);const response=await this.alchemy.transact.sendTransaction(signedTransaction);eventManager.emit("sendTransaction",{signedTransaction:signedTransaction,response:response});return response}catch(error){eventManager.emit("error",{provider:this.name,method:"sendTransaction",error:error});throw error}}async getBlock(blockHashOrBlockTag="latest"){try{log$1.info("getBlock",false,{blockHashOrBlockTag:blockHashOrBlockTag});await this.getAlchemy(this.chainId);if(!this.alchemy){throw new Error("No Alchemy set")}const blockTagish=BigNumber$2.from(await blockHashOrBlockTag).toHex();const block=await this.alchemy.core.getBlock(blockTagish);eventManager.emit("block",{blockTagish:blockTagish,block:block});return block}catch(error){eventManager.emit("error",{provider:this.name,method:"getBlock",error:error});throw error}}async getBlockWithTransactions(blockHashOrBlockTag="latest"){try{await this.getAlchemy(this.chainId);if(!this.alchemy){throw new Error("No Alchemy set")}const blockTagish=BigNumber$2.from(await blockHashOrBlockTag).toHex();const block=await this.alchemy.core.getBlockWithTransactions(blockTagish);eventManager.emit("blockWithTransactions",{blockTagish:blockTagish,block:block});return block}catch(error){eventManager.emit("error",{provider:this.name,method:"getBlockWithTransactions",error:error});throw error}}async getTransaction(transactionHash){try{await this.getAlchemy(this.chainId);if(!this.alchemy){throw new Error("No Alchemy set")}const trans=await this.alchemy.core.getTransaction(transactionHash);return trans}catch(error){eventManager.emit("error",{provider:this.name,method:"getTransaction",error:error});throw error}}async getTransactionCount(addressOrName,blockTag="latest"){try{await this.getAlchemy(this.chainId);if(!this.alchemy){throw new Error("No Alchemy set")}const blockTagish=BigNumber$2.from(await blockTag).toHex();const count=await this.alchemy.core.getTransactionCount(addressOrName,blockTagish);return count}catch(error){eventManager.emit("error",{provider:this.name,method:"getTransactionCount",error:error});throw error}}async getTransactionHistory(transactionHash){try{await this.getAlchemy(this.chainId);if(!this.alchemy){throw new Error("No Alchemy set")}const trans=await this.alchemy.core.getTransaction(transactionHash);return trans}catch(error){eventManager.emit("error",{provider:this.name,method:"getTransactionHistory",error:error});throw error}}async getTransactionReceipt(transactionHash){try{await this.getAlchemy(this.chainId);if(!this.alchemy){throw new Error("No Alchemy set")}const receipt=await this.alchemy.core.getTransactionReceipt(transactionHash);return receipt}catch(error){eventManager.emit("error",{provider:this.name,method:"getTransactionReceipt",error:error});throw error}}async getLogs(filter2){try{await this.getAlchemy(this.chainId);if(!this.alchemy){throw new Error("No Alchemy set")}const alchemyFilter={address:filter2.address,topics:filter2.topics};if(filter2.fromBlock){alchemyFilter.fromBlock=this.convertToAlchemyBlockTag(filter2.fromBlock)}if(filter2.toBlock){alchemyFilter.toBlock=this.convertToAlchemyBlockTag(filter2.toBlock)}const logs=await this.alchemy.core.getLogs(alchemyFilter);const convertedLogs=logs.map(log2=>this.convertAlchemyLogToCustomLog(log2));eventManager.emit("getLogs",{filter:filter2,logs:convertedLogs});return convertedLogs}catch(error){eventManager.emit("error",{provider:this.name,method:"getLogs",error:error});throw error}}convertToAlchemyBlockTag(blockTag){if(typeof blockTag==="string"){if(blockTag==="latest"||blockTag==="pending"||blockTag==="earliest"){return blockTag}return parseInt(blockTag,16)}if(typeof blockTag==="number"||typeof blockTag==="bigint"){return Number(blockTag)}throw new Error(`Invalid block tag: ${blockTag}`)}convertAlchemyLogToCustomLog(log2){return{blockNumber:log2.blockNumber,blockHash:log2.blockHash,transactionIndex:log2.transactionIndex,removed:log2.removed,address:log2.address,data:log2.data,topics:log2.topics,transactionHash:log2.transactionHash,logIndex:log2.logIndex}}async resolveName(name){try{await this.getAlchemy(this.chainId);if(!this.alchemy){throw new Error("No Alchemy set")}const address=await this.alchemy.core.resolveName(name);eventManager.emit("resolveName",{name:name,address:address});return address}catch(error){eventManager.emit("error",{provider:this.name,method:"resolveName",error:error});throw error}}async lookupAddress(address){try{await this.getAlchemy(this.chainId);if(!this.alchemy){throw new Error("No Alchemy set")}const name=await this.alchemy.core.lookupAddress(address);eventManager.emit("lookupAddress",{address:address,name:name});return name}catch(error){eventManager.emit("error",{provider:this.name,method:"lookupAddress",error:error});throw error}}async request(method,params){try{await this.getAlchemy(this.chainId);const isBackgroundContext=typeof window==="undefined"||!window.document;if(isBackgroundContext){if(!this.provider){throw new Error("No provider set")}const result2=await this.provider.send(method,params);eventManager.emit("requestMade",{provider:this.name,method:method,params:params,result:result2});return result2}if(!this.alchemy){throw new Error("No Alchemy set")}const result=await this.alchemy.core.send(method,params);eventManager.emit("requestMade",{provider:this.name,method:method,params:params,result:result});return result}catch(error){eventManager.emit("error",{provider:this.name,method:method,error:error});throw error}}setSigner(signer){if(!signer){throw new Error("Invalid signer")}this.signer=signer}async setChainId(chainId){if(this.chainId===chainId){return}this.chainId=chainId}isBackgroundContext(){return typeof window==="undefined"||!window.document}async ensureProvider(){if(this.isBackgroundContext()){if(!this.provider){const url=await this.getProviderURL();this.provider=new JsonRpcProvider(url)}}else{await this.getAlchemy(this.chainId);if(!this.alchemy){throw new Error("No Alchemy set")}}}async makeRpcCall(method,params){await this.ensureProvider();if(this.isBackgroundContext()){if(!this.provider){throw new Error("No provider set")}return this.provider.send(method,params)}else{if(!this.alchemy){throw new Error("No Alchemy set")}return this.alchemy.core.send(method,params)}}}function getConfig(chainId,kval=void 0){try{const apiKey=define_process_env_default.ALCHEMY_API_KEY_PROD||define_process_env_default.VITE_ALCHEMY_API_KEY_PROD||"pBm4VA9q8Laz9x3bmXTNZ9m-ArxczEWk";let api=kval??apiKey;let network=Network.ETH_MAINNET;switch(chainId){case 11155111:api=kval??apiKey;network=Network.ETH_SEPOLIA;break;case 1:default:api=kval??apiKey;network=Network.ETH_MAINNET;break}return{apiKey:api,network:network}}catch(e){log$1.error(e);return void 0}}class ProviderFactory{static createProvider(options){const{name:name,apiKey:apiKey,chainId:chainId}=options;let provider;switch(name){case"Alchemy":provider=new Alchemy2({apiKey:apiKey,chainId:chainId});provider.initializeProvider();return provider;default:throw new Error(`Unsupported provider: ${name}`)}}}class BaseFeeManager{constructor(){__publicField(this,"providers");__publicField(this,"initializationPromise");this.providers=new Map;this.initializationPromise=Promise.resolve()}async addProvider(providerPromise){const provider=await providerPromise;this.providers.set(provider.getName(),provider)}removeProvider(providerName){this.providers.delete(providerName)}getProviders(){return Array.from(this.providers.keys())}async getGasEstimate(transaction){await this.initializationPromise;if(this.providers.size===0){throw new Error("No gas providers available")}const estimates=await Promise.all(Array.from(this.providers.values()).map(async provider=>provider.getGasEstimate(transaction).catch(error=>{console.log(`Failed to get gas estimate from ${provider.getName()}:`,false,error);return null}))).then(estimates2=>estimates2.filter(estimate=>estimate!==null));const gasLimits=estimates.map(e=>BigNumber$2.from(e.gasLimit)).sort((a,b2)=>a.compare(b2));const baseFees=estimates.map(e=>BigNumber$2.from(e.feeEstimate.baseFee)).sort((a,b2)=>a.compare(b2));const priorityFees=estimates.map(e=>BigNumber$2.from(e.feeEstimate.priorityFee)).sort((a,b2)=>a.compare(b2));const medianGasLimit=gasLimits[Math.floor(gasLimits.length/2)];const medianBaseFee=baseFees[Math.floor(baseFees.length/2)];const medianPriorityFee=priorityFees[Math.floor(priorityFees.length/2)];const feeEstimate={baseFee:medianBaseFee.toString(),priorityFee:medianPriorityFee.toString(),totalFee:medianBaseFee.add(medianPriorityFee).toString()};return{gasLimit:medianGasLimit.toString(),feeEstimate:feeEstimate}}async getHistoricalGasData(duration){if(this.providers.size===0){throw new Error("No gas providers available")}const allHistoricalData=await Promise.all(Array.from(this.providers.values()).map(provider=>provider.getHistoricalGasData(duration)));const aggregatedData=new Map;allHistoricalData.flat().forEach(data=>{if(!aggregatedData.has(data.timestamp)){aggregatedData.set(data.timestamp,{...data,count:1})}else{const existing=aggregatedData.get(data.timestamp);existing.baseFee=BigNumber$2.from(existing.baseFee).add(BigNumber$2.from(data.baseFee)).toString();existing.priorityFee=BigNumber$2.from(existing.priorityFee).add(BigNumber$2.from(data.priorityFee)).toString();existing.count++}});return Array.from(aggregatedData.values()).map(data=>({timestamp:data.timestamp,baseFee:BigNumber$2.from(data.baseFee).div(BigNumber$2.from(data.count)).toString(),priorityFee:BigNumber$2.from(data.priorityFee).div(BigNumber$2.from(data.count)).toString()}))}async predictFutureFees(duration){if(this.providers.size===0){throw new Error("No gas providers available")}const allPredictions=await Promise.all(Array.from(this.providers.values()).map(provider=>provider.predictFutureFees(duration)));const aggregatedPredictions=new Map;allPredictions.flat().forEach(prediction=>{if(!aggregatedPredictions.has(prediction.timestamp)){aggregatedPredictions.set(prediction.timestamp,{...prediction,count:1})}else{const existing=aggregatedPredictions.get(prediction.timestamp);existing.estimatedBaseFee=BigNumber$2.from(existing.estimatedBaseFee).add(BigNumber$2.from(prediction.estimatedBaseFee)).toString();existing.estimatedPriorityFee=BigNumber$2.from(existing.estimatedPriorityFee).add(BigNumber$2.from(prediction.estimatedPriorityFee)).toString();existing.count++}});return Array.from(aggregatedPredictions.values()).map(prediction=>({timestamp:prediction.timestamp,estimatedBaseFee:BigNumber$2.from(prediction.estimatedBaseFee).div(BigNumber$2.from(prediction.count)).toString(),estimatedPriorityFee:BigNumber$2.from(prediction.estimatedPriorityFee).div(BigNumber$2.from(prediction.count)).toString()}))}setPriorityOrder(providerNames){const orderedProviders=new Map;providerNames.forEach(name=>{if(this.providers.has(name)){orderedProviders.set(name,this.providers.get(name))}});this.providers=orderedProviders}setDefaultProvider(providerName){if(this.providers.has(providerName)){const defaultProvider=this.providers.get(providerName);this.providers.delete(providerName);this.providers=new Map([[providerName,defaultProvider],...this.providers])}}}var TransactionSpeed=(TransactionSpeed2=>{TransactionSpeed2["SLOW"]="SLOW";TransactionSpeed2["NORMAL"]="NORMAL";TransactionSpeed2["FAST"]="FAST";return TransactionSpeed2})(TransactionSpeed||{});const EOA_FALLBACK_GAS={LIMITS:{BASE:21000n},GWEI:{SLOW:{PRIORITY_FEE:1n,MAX_FEE:35n},NORMAL:{PRIORITY_FEE:2n,MAX_FEE:50n},FAST:{PRIORITY_FEE:3n,MAX_FEE:70n}}};var Web3Provider=(Web3Provider2=>{Web3Provider2["ALCHEMY"]="alchemy";Web3Provider2["INFURA"]="infura";Web3Provider2["CLOUDFLARE"]="cloudflare";Web3Provider2["QUICKNODE"]="quicknode";Web3Provider2["CUSTOM"]="custom";return Web3Provider2})(Web3Provider||{});class AnalyticsBase{constructor(provider,web3Provider,chainId,networkName){__publicField(this,"networkInfo");__publicField(this,"provider");this.provider=provider;this.networkInfo={provider:web3Provider,chainId:chainId,networkName:networkName}}}class EthereumAnalytics extends AnalyticsBase{constructor(provider,web3Provider,chainId,networkName){super(provider,web3Provider,chainId,networkName);__publicField(this,"gasEstimates",[]);__publicField(this,"swapEstimates",[]);__publicField(this,"MAX_STORED_ENTRIES",1e3);__publicField(this,"providerStats",new Map);__publicField(this,"lastNetworkCheck",0);__publicField(this,"NETWORK_CHECK_INTERVAL",6e4);this.initializeProviderStats()}static async create(provider,web3Provider,chainId,networkName){const analytics=new EthereumAnalytics(provider,web3Provider,chainId,networkName);await analytics.initializeNetworkInfo();return analytics}initializeProviderStats(){this.providerStats.set(this.networkInfo.provider,{totalCalls:0,failedCalls:0,averageLatency:0})}async initializeNetworkInfo(){try{const startTime=Date.now();const blockNumber=await this.provider.getBlockNumber();const latency=Date.now()-startTime;this.networkInfo={...this.networkInfo,blockNumber:blockNumber,rpcLatency:latency,providerUrl:this.maskProviderUrl(await this.provider.getProviderURL())};this.updateProviderStats("initializeNetworkInfo",true,latency)}catch(error){log.error("Failed to initialize network info:",false,false,error)}}maskProviderUrl(url){if(!url)return"unknown";try{const urlObj=new URL(url);return`${urlObj.protocol}//${urlObj.hostname}/*****`}catch{return"invalid-url"}}updateProviderStats(method,success,latency,error){const stats=this.providerStats.get(this.networkInfo.provider)||{totalCalls:0,failedCalls:0,averageLatency:0};stats.totalCalls++;if(!success){stats.failedCalls++;stats.lastError=error==null?void 0:error.message;stats.lastErrorTime=Date.now()}stats.averageLatency=(stats.averageLatency*(stats.totalCalls-1)+latency)/stats.totalCalls;this.providerStats.set(this.networkInfo.provider,stats)}async trackGasEstimate(data){await this.checkAndUpdateNetworkInfo();const enrichedData={...data,timestamp:Date.now(),networkInfo:{...this.networkInfo}};this.gasEstimates.push(enrichedData);if(this.gasEstimates.length>this.MAX_STORED_ENTRIES){this.gasEstimates.shift()}this.updateProviderStats(data.methodName||"gasEstimate",data.success,this.networkInfo.rpcLatency||0);if(!data.success){log.warn(`Gas estimation failed for ${data.methodName}:`,false,data.errorMessage)}if(data.estimateType==="fallback"){log.info(`Using fallback gas estimation for ${data.methodName}:`,false,data.fallbackReason)}}async trackSwapEstimate(data){await this.checkAndUpdateNetworkInfo();const enrichedData={...data,timestamp:Date.now(),networkInfo:{...this.networkInfo}};this.swapEstimates.push(enrichedData);if(this.swapEstimates.length>this.MAX_STORED_ENTRIES){this.swapEstimates.shift()}this.updateProviderStats(`swap_${data.swapType}`,data.success,this.networkInfo.rpcLatency||0)}async checkAndUpdateNetworkInfo(){const now=Date.now();if(now-this.lastNetworkCheck>this.NETWORK_CHECK_INTERVAL){await this.initializeNetworkInfo();this.lastNetworkCheck=now}}async getAnalyticsSummary(){await this.checkAndUpdateNetworkInfo();return{gasStats:this.calculateGasStats(this.gasEstimates),swapStats:this.calculateSwapStats(this.swapEstimates),providerHealth:this.providerStats,networkInfo:this.networkInfo}}calculateGasStats(estimates){var _a2,_b2;const timeWindow={start:((_a2=estimates[0])==null?void 0:_a2.timestamp)||Date.now(),end:((_b2=estimates[estimates.length-1])==null?void 0:_b2.timestamp)||Date.now()};const commonErrors=new Map;const methodUsage=new Map;let totalGasPrice=0n;let totalLatency=0;estimates.forEach(e=>{if(e.errorMessage){commonErrors.set(e.errorMessage,(commonErrors.get(e.errorMessage)||0)+1)}if(e.methodName){methodUsage.set(e.methodName,(methodUsage.get(e.methodName)||0)+1)}totalGasPrice+=BigInt(e.maxFee);totalLatency+=e.networkInfo.rpcLatency||0});return{total:estimates.length,successful:estimates.filter(e=>e.success).length,fallbackUsed:estimates.filter(e=>e.estimateType==="fallback").length,averageGasPrice:estimates.length?totalGasPrice/BigInt(estimates.length):0n,averageLatency:estimates.length?totalLatency/estimates.length:0,commonErrors:commonErrors,methodUsage:methodUsage,lastBlockNumber:this.networkInfo.blockNumber||0,timeWindow:timeWindow}}calculateSwapStats(estimates){const baseStats=this.calculateGasStats(estimates);const popularPairs=new Map;let totalHops=0;estimates.forEach(e=>{const pair=`${e.tokenInSymbol}/${e.tokenOutSymbol}`;popularPairs.set(pair,(popularPairs.get(pair)||0)+1);totalHops+=e.routeHops||1});return{...baseStats,averageHops:estimates.length?totalHops/estimates.length:0,popularPairs:popularPairs}}getProviderHealth(){const stats=this.providerStats.get(this.networkInfo.provider);if(!stats)return"Unknown";const successRate=(stats.totalCalls-stats.failedCalls)/stats.totalCalls;const latency=stats.averageLatency;if(successRate>.99&&latency<500)return"Excellent";if(successRate>.95&&latency<1e3)return"Good";if(successRate>.9&&latency<2e3)return"Fair";return"Poor"}}class EthereumGasProvider{constructor(provider,blockchain,priceProvider,analytics){__publicField(this,"provider");__publicField(this,"blockchain");__publicField(this,"priceProvider");__publicField(this,"analytics");__publicField(this,"PRIORITY_FEE_MULTIPLIERS",{[TransactionSpeed.SLOW]:1n,[TransactionSpeed.NORMAL]:2n,[TransactionSpeed.FAST]:3n});__publicField(this,"BASE_FEE_MULTIPLIERS",{[TransactionSpeed.SLOW]:1.2,[TransactionSpeed.NORMAL]:1.5,[TransactionSpeed.FAST]:2});__publicField(this,"FALLBACK_MULTIPLIERS",{[TransactionSpeed.SLOW]:.8,[TransactionSpeed.NORMAL]:1,[TransactionSpeed.FAST]:1.5});__publicField(this,"SAFE_FALLBACK_VALUES",{BASE_PRIORITY_FEE:1n,MAX_TOTAL_GWEI:100n,MIN_TOTAL_GWEI:25n});__publicField(this,"MIN_PRIORITY_FEE",1n);this.provider=provider;this.blockchain=blockchain;this.priceProvider=priceProvider;this.analytics=analytics}static async create(provider,blockchain,priceProvider){const web3ProviderType=await this.determineProviderType(provider);const network=blockchain.getNetwork();const analytics=await EthereumAnalytics.create(provider,web3ProviderType,network.chainId,network.name);return new EthereumGasProvider(provider,blockchain,priceProvider,analytics)}static async determineProviderType(provider){const providerUrl=await provider.getProviderURL()||"";if(providerUrl.includes("alchemy"))return Web3Provider.ALCHEMY;if(providerUrl.includes("infura"))return Web3Provider.INFURA;if(providerUrl.includes("cloudflare"))return Web3Provider.CLOUDFLARE;if(providerUrl.includes("quiknode"))return Web3Provider.QUICKNODE;return Web3Provider.CUSTOM}getName(){return"EthereumGasProvider"}async getFallbackGasPrice(speed=TransactionSpeed.NORMAL){try{const recentGasPrice=await this.provider.getGasPrice();const multiplier=this.FALLBACK_MULTIPLIERS[speed];return BigInt(Number(recentGasPrice)*multiplier)}catch(error){const errorMessage=error instanceof Error?error.message:"Unknown error";this.analytics.trackGasEstimate({estimateType:"fallback",gasLimit:"0",priorityFee:"0",maxFee:"0",success:false,methodName:"getFallbackGasPrice",errorMessage:errorMessage,networkInfo:this.analytics.networkInfo,timestamp:Date.now(),fallbackReason:"Gas price fetch failed"});return EOA_FALLBACK_GAS.GWEI[speed].MAX_FEE*BigInt(1e9)}}async getOptimizedGasFees(gasLimit,options={}){try{const speed=options.speed||TransactionSpeed.NORMAL;const feeData=await this.provider.getFeeData();let priorityFeePerGas;if(options.customPriorityFee){priorityFeePerGas=options.customPriorityFee}else{const basePriorityFee=BigInt(Math.max(Number(feeData.maxPriorityFeePerGas||this.MIN_PRIORITY_FEE),Number(this.MIN_PRIORITY_FEE)));priorityFeePerGas=basePriorityFee*this.PRIORITY_FEE_MULTIPLIERS[speed]}let maxFeePerGas;if(options.customMaxFee){maxFeePerGas=options.customMaxFee}else{const baseFee=feeData.lastBaseFeePerGas||0n;const multiplier=this.BASE_FEE_MULTIPLIERS[speed];maxFeePerGas=baseFee*BigInt(multiplier*10)/10n+priorityFeePerGas}const estimatedCostWei=gasLimit*maxFeePerGas;const estimatedCostEth=formatEther$1(estimatedCostWei);const ethPrice=await this.getEthPrice();const estimatedCostUsd=(Number(estimatedCostEth)*ethPrice).toFixed(2);const result={maxPriorityFeePerGas:priorityFeePerGas,maxFeePerGas:maxFeePerGas,estimatedCostWei:estimatedCostWei,estimatedCostEth:estimatedCostEth,estimatedCostUsd:`$${estimatedCostUsd}`};this.analytics.trackGasEstimate({estimateType:"optimized",gasLimit:gasLimit.toString(),priorityFee:priorityFeePerGas.toString(),maxFee:maxFeePerGas.toString(),success:true,methodName:"getOptimizedGasFees",networkInfo:this.analytics.networkInfo,timestamp:Date.now()});return result}catch(error){const errorMessage=error instanceof Error?error.message:"Unknown error";this.analytics.trackGasEstimate({estimateType:"fallback",gasLimit:gasLimit.toString(),priorityFee:"0",maxFee:"0",success:false,methodName:"getOptimizedGasFees",errorMessage:errorMessage,networkInfo:this.analytics.networkInfo,timestamp:Date.now(),fallbackReason:"Optimization failed"});throw error}}async getGasEstimate(transaction,options={}){try{const gasLimit=await this.provider.estimateGas(transaction);const optimizedFees=await this.getOptimizedGasFees(gasLimit,options);const result={gasLimit:gasLimit.toString(),feeEstimate:{baseFee:(optimizedFees.maxFeePerGas-optimizedFees.maxPriorityFeePerGas).toString(),priorityFee:optimizedFees.maxPriorityFeePerGas.toString(),totalFee:optimizedFees.maxFeePerGas.toString(),estimatedCostEth:optimizedFees.estimatedCostEth,estimatedCostUsd:optimizedFees.estimatedCostUsd}};this.analytics.trackGasEstimate({estimateType:"normal",gasLimit:gasLimit.toString(),priorityFee:optimizedFees.maxPriorityFeePerGas.toString(),maxFee:optimizedFees.maxFeePerGas.toString(),success:true,methodName:"getGasEstimate",networkInfo:this.analytics.networkInfo,timestamp:Date.now()});return result}catch(error){const errorMessage=error instanceof Error?error.message:"Unknown error";this.analytics.trackGasEstimate({estimateType:"fallback",gasLimit:"0",priorityFee:"0",maxFee:"0",success:false,methodName:"getGasEstimate",errorMessage:errorMessage,networkInfo:this.analytics.networkInfo,timestamp:Date.now(),fallbackReason:"Estimation failed"});throw error}}async getSafeGasEstimate(to,value,options={}){try{const estimate=await this.getEOATransferGasEstimate(to,value,options);const totalGwei=EthereumBigNumber.from(estimate.feeEstimate.totalFee).toBigInt();if(totalGwei>this.SAFE_FALLBACK_VALUES.MAX_TOTAL_GWEI){throw new Error("Gas estimate too high")}if(totalGwei<this.SAFE_FALLBACK_VALUES.MIN_TOTAL_GWEI){throw new Error("Gas estimate too low")}return estimate}catch(error){const baseGasPrice=await this.getFallbackGasPrice(options.speed);const priorityFee=this.SAFE_FALLBACK_VALUES.BASE_PRIORITY_FEE*BigInt(1e9);const maxFee=baseGasPrice+priorityFee;const errorMessage=error instanceof Error?error.message:"Unknown error";this.analytics.trackGasEstimate({estimateType:"fallback",gasLimit:"21000",priorityFee:priorityFee.toString(),maxFee:maxFee.toString(),success:false,methodName:"getSafeGasEstimate",errorMessage:errorMessage,networkInfo:this.analytics.networkInfo,timestamp:Date.now(),fallbackReason:"Safe estimate bounds exceeded"});return{gasLimit:"21000",feeEstimate:{baseFee:baseGasPrice.toString(),priorityFee:priorityFee.toString(),totalFee:maxFee.toString(),estimatedCostEth:formatEther$1(21000n*maxFee),estimatedCostUsd:"Using fallback values"}}}}async getEOATransferGasEstimate(to,value,options={}){const transaction={to:to,quantity:value,from:"0x0000000000000000000000000000000000000000",chainId:this.blockchain.getChainId()};return this.getGasEstimate(transaction,options)}async getEOATransferGasEstimateWithFallback(to,value,options={}){try{return await this.getEOATransferGasEstimate(to,value,options)}catch(error){const errorMessage=error instanceof Error?error.message:"Unknown error";log.error("Gas estimation failed, using fallback values:",false,errorMessage);const speed=options.speed||TransactionSpeed.NORMAL;const fallbackValues=EOA_FALLBACK_GAS.GWEI[speed];this.analytics.trackGasEstimate({estimateType:"fallback",gasLimit:EOA_FALLBACK_GAS.LIMITS.BASE.toString(),priorityFee:fallbackValues.PRIORITY_FEE.toString(),maxFee:fallbackValues.MAX_FEE.toString(),success:false,methodName:"getEOATransferGasEstimateWithFallback",errorMessage:errorMessage,networkInfo:this.analytics.networkInfo,timestamp:Date.now(),fallbackReason:"Estimation failed, using fallback"});return{gasLimit:EOA_FALLBACK_GAS.LIMITS.BASE.toString(),feeEstimate:{baseFee:(fallbackValues.MAX_FEE-fallbackValues.PRIORITY_FEE).toString(),priorityFee:fallbackValues.PRIORITY_FEE.toString(),totalFee:fallbackValues.MAX_FEE.toString(),estimatedCostEth:formatEther$1(EOA_FALLBACK_GAS.LIMITS.BASE*fallbackValues.MAX_FEE*BigInt(1e9)),estimatedCostUsd:"Fallback estimate"}}}}async getHistoricalGasData(duration){try{const response=await fetch("https://api.example.com/historical-gas-data");const data=await response.json();const historicalData=data.map(item=>({timestamp:item.timestamp,baseFee:item.baseFeePerGas,priorityFee:item.priorityFeePerGas}));this.analytics.trackGasEstimate({estimateType:"historical",gasLimit:"0",priorityFee:"0",maxFee:"0",success:true,methodName:"getHistoricalGasData",networkInfo:this.analytics.networkInfo,timestamp:Date.now()});return historicalData}catch(error){const errorMessage=error instanceof Error?error.message:"Unknown error";log.error("Error fetching historical gas data:",false,errorMessage);this.analytics.trackGasEstimate({estimateType:"historical",gasLimit:"0",priorityFee:"0",maxFee:"0",success:false,methodName:"getHistoricalGasData",errorMessage:errorMessage,networkInfo:this.analytics.networkInfo,timestamp:Date.now()});throw error}}async predictFutureFees(duration){try{const historicalData=await this.getHistoricalGasData(duration);const predictions=historicalData.map(item=>({timestamp:item.timestamp+duration,estimatedBaseFee:item.baseFee,estimatedPriorityFee:item.priorityFee}));this.analytics.trackGasEstimate({estimateType:"prediction",gasLimit:"0",priorityFee:"0",maxFee:"0",success:true,methodName:"predictFutureFees",networkInfo:this.analytics.networkInfo,timestamp:Date.now()});return predictions}catch(error){const errorMessage=error instanceof Error?error.message:"Unknown error";log.error("Error predicting future gas fees:",false,errorMessage);this.analytics.trackGasEstimate({estimateType:"prediction",gasLimit:"0",priorityFee:"0",maxFee:"0",success:false,methodName:"predictFutureFees",errorMessage:errorMessage,networkInfo:this.analytics.networkInfo,timestamp:Date.now()});throw error}}async estimateSwapGasFee(tokenIn,tokenOut,fromAmount,slippageTolerance,deadline,swapManager,fee=3e3){var _a2;try{const BASE_SWAP_GAS=150000n;const APPROVAL_GAS=46000n;let totalGasUnits=BASE_SWAP_GAS;if(!tokenIn.isNative){totalGasUnits+=APPROVAL_GAS}const feeData=await this.provider.getFeeData();const maxFeePerGas=feeData.maxFeePerGas||feeData.gasPrice;if(!maxFeePerGas)throw new Error("Could not get gas price");const gasCostWei=totalGasUnits*BigInt(maxFeePerGas.toString());const gasCostEth=EthereumBigNumber.fromWei(gasCostWei.toString()).toEtherString();const ethPrice=await this.getEthPrice();const gasCostUsd=parseFloat(gasCostEth)*ethPrice;this.analytics.trackSwapEstimate({estimateType:"normal",gasLimit:totalGasUnits.toString(),priorityFee:((_a2=feeData.maxPriorityFeePerGas)==null?void 0:_a2.toString())||"0",maxFee:maxFeePerGas.toString(),success:true,methodName:"estimateSwapGasFee",networkInfo:this.analytics.networkInfo,timestamp:Date.now(),tokenInSymbol:tokenIn.symbol,tokenOutSymbol:tokenOut.symbol,amount:fromAmount.toString(),isMultiHop:false,swapType:"exactIn",dexUsed:"Uniswap V3"});return`$${gasCostUsd.toFixed(2)} (${gasCostEth} ETH)`}catch(error){const errorMessage=error instanceof Error?error.message:"Unknown error";log.error("Gas estimation error:",false,errorMessage);this.analytics.trackSwapEstimate({estimateType:"fallback",gasLimit:"0",priorityFee:"0",maxFee:"0",success:false,methodName:"estimateSwapGasFee",errorMessage:errorMessage,networkInfo:this.analytics.networkInfo,timestamp:Date.now(),tokenInSymbol:tokenIn.symbol,tokenOutSymbol:tokenOut.symbol,amount:fromAmount.toString(),isMultiHop:false,swapType:"exactIn",dexUsed:"Uniswap V3"});return"Unable to estimate gas"}}async getEthPrice(){try{log.debug("getEthPrice - priceProvider",false,this.priceProvider);const marketPrice=this.priceProvider.getMarketPrice("ETH-USD");return(await marketPrice).price}catch(error){log.error("Error fetching ETH price:",false,false,error);return 0}}async getCurrentGasPriceInGwei(factor=1){const gasPrice=await this.provider.getGasPrice();return Number(formatUnits$1(gasPrice,"gwei"))*factor}async getGasPriceFromEtherscan(apiKey){const response=await fetch(`https://api.etherscan.io/api?module=gastracker&action=gasoracle&apikey=${apiKey}`);const data=await response.json();return Number(data.result.ProposeGasPrice)}async getFormattedGasEstimates(gasEstimate,factor=1.5,gasPriceInGwei=0,ethPriceInUsd=0){if(!gasEstimate){throw new Error("Gas estimate must be provided")}const gasEstimateBigInt=BigNumber$2.from(gasEstimate).toBigInt();if(gasEstimateBigInt<=0n){return 0}if(factor<=0){factor=1;log.warn("Factor must be greater than 0 - set to 1")}if(gasPriceInGwei<0){gasPriceInGwei=0;log.warn("Gas price must be greater than or equal to 0 - set to 0")}if(ethPriceInUsd<=0){ethPriceInUsd=0;log.warn("ETH price must be greater than 0 - set to 0")}if(gasPriceInGwei===0){gasPriceInGwei=await this.getCurrentGasPriceInGwei(factor)}if(ethPriceInUsd===0){ethPriceInUsd=await this.getEthPrice()}const gasPriceInEth=gasPriceInGwei*1e-9;const gasEstimateInEth=Number(gasEstimate)*gasPriceInEth;const gasEstimateInUsd=gasEstimateInEth*ethPriceInUsd;return gasEstimateInUsd}setPriceProvider(priceProvider){this.priceProvider=priceProvider}}const version="web/5.8.0";var __awaiter$1=function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};function getUrl(href,options){return __awaiter$1(this,void 0,void 0,function*(){if(options==null){options={}}const request={method:options.method||"GET",headers:options.headers||{},body:options.body||void 0};if(options.skipFetchSetup!==true){request.mode="cors";request.cache="no-cache";request.credentials="same-origin";request.redirect="follow";request.referrer="client"}if(options.fetchOptions!=null){const opts=options.fetchOptions;if(opts.mode){request.mode=opts.mode}if(opts.cache){request.cache=opts.cache}if(opts.credentials){request.credentials=opts.credentials}if(opts.redirect){request.redirect=opts.redirect}if(opts.referrer){request.referrer=opts.referrer}}const response=yield fetch(href,request);const body=yield response.arrayBuffer();const headers={};if(response.headers.forEach){response.headers.forEach((value,key2)=>{headers[key2.toLowerCase()]=value})}else{response.headers.keys().forEach(key2=>{headers[key2.toLowerCase()]=response.headers.get(key2)})}return{headers:headers,statusCode:response.status,statusMessage:response.statusText,body:arrayify$1(new Uint8Array(body))}})}var __awaiter=function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger=new Logger$3(version);function staller(duration){return new Promise(resolve=>{setTimeout(resolve,duration)})}function bodyify(value,type){if(value==null){return null}if(typeof value==="string"){return value}if(isBytesLike$1(value)){if(type&&(type.split("/")[0]==="text"||type.split(";")[0].trim()==="application/json")){try{return toUtf8String(value)}catch(error){}}return hexlify$1(value)}return value}function unpercent(value){return toUtf8Bytes(value.replace(/%([0-9a-f][0-9a-f])/gi,(all3,code)=>String.fromCharCode(parseInt(code,16))))}function _fetchData(connection,body,processFunc){const attemptLimit=typeof connection==="object"&&connection.throttleLimit!=null?connection.throttleLimit:12;logger.assertArgument(attemptLimit>0&&attemptLimit%1===0,"invalid connection throttle limit","connection.throttleLimit",attemptLimit);const throttleCallback=typeof connection==="object"?connection.throttleCallback:null;const throttleSlotInterval=typeof connection==="object"&&typeof connection.throttleSlotInterval==="number"?connection.throttleSlotInterval:100;logger.assertArgument(throttleSlotInterval>0&&throttleSlotInterval%1===0,"invalid connection throttle slot interval","connection.throttleSlotInterval",throttleSlotInterval);const errorPassThrough=typeof connection==="object"?!!connection.errorPassThrough:false;const headers={};let url=null;const options={method:"GET"};let allow304=false;let timeout=2*60*1e3;if(typeof connection==="string"){url=connection}else if(typeof connection==="object"){if(connection==null||connection.url==null){logger.throwArgumentError("missing URL","connection.url",connection)}url=connection.url;if(typeof connection.timeout==="number"&&connection.timeout>0){timeout=connection.timeout}if(connection.headers){for(const key2 in connection.headers){headers[key2.toLowerCase()]={key:key2,value:String(connection.headers[key2])};if(["if-none-match","if-modified-since"].indexOf(key2.toLowerCase())>=0){allow304=true}}}options.allowGzip=!!connection.allowGzip;if(connection.user!=null&&connection.password!=null){if(url.substring(0,6)!=="https:"&&connection.allowInsecureAuthentication!==true){logger.throwError("basic authentication requires a secure https url",Logger$3.errors.INVALID_ARGUMENT,{argument:"url",url:url,user:connection.user,password:"[REDACTED]"})}const authorization=connection.user+":"+connection.password;headers["authorization"]={key:"Authorization",value:"Basic "+encode2(toUtf8Bytes(authorization))}}if(connection.skipFetchSetup!=null){options.skipFetchSetup=!!connection.skipFetchSetup}if(connection.fetchOptions!=null){options.fetchOptions=shallowCopy(connection.fetchOptions)}}const reData2=new RegExp("^data:([^;:]*)?(;base64)?,(.*)$","i");const dataMatch=url?url.match(reData2):null;if(dataMatch){try{const response={statusCode:200,statusMessage:"OK",headers:{"content-type":dataMatch[1]||"text/plain"},body:dataMatch[2]?decode(dataMatch[3]):unpercent(dataMatch[3])};let result=response.body;if(processFunc){result=processFunc(response.body,response)}return Promise.resolve(result)}catch(error){logger.throwError("processing response error",Logger$3.errors.SERVER_ERROR,{body:bodyify(dataMatch[1],dataMatch[2]),error:error,requestBody:null,requestMethod:"GET",url:url})}}if(body){options.method="POST";options.body=body;if(headers["content-type"]==null){headers["content-type"]={key:"Content-Type",value:"application/octet-stream"}}if(headers["content-length"]==null){headers["content-length"]={key:"Content-Length",value:String(body.length)}}}const flatHeaders={};Object.keys(headers).forEach(key2=>{const header=headers[key2];flatHeaders[header.key]=header.value});options.headers=flatHeaders;const runningTimeout=function(){let timer=null;const promise=new Promise(function(resolve,reject){if(timeout){timer=setTimeout(()=>{if(timer==null){return}timer=null;reject(logger.makeError("timeout",Logger$3.errors.TIMEOUT,{requestBody:bodyify(options.body,flatHeaders["content-type"]),requestMethod:options.method,timeout:timeout,url:url}))},timeout)}});const cancel=function(){if(timer==null){return}clearTimeout(timer);timer=null};return{promise:promise,cancel:cancel}}();const runningFetch=function(){return __awaiter(this,void 0,void 0,function*(){for(let attempt=0;attempt<attemptLimit;attempt++){let response=null;try{response=yield getUrl(url,options);if(attempt<attemptLimit){if(response.statusCode===301||response.statusCode===302){const location=response.headers.location||"";if(options.method==="GET"&&location.match(/^https:/)){url=response.headers.location;continue}}else if(response.statusCode===429){let tryAgain=true;if(throttleCallback){tryAgain=yield throttleCallback(attempt,url)}if(tryAgain){let stall2=0;const retryAfter=response.headers["retry-after"];if(typeof retryAfter==="string"&&retryAfter.match(/^[1-9][0-9]*$/)){stall2=parseInt(retryAfter)*1e3}else{stall2=throttleSlotInterval*parseInt(String(Math.random()*Math.pow(2,attempt)))}yield staller(stall2);continue}}}}catch(error){response=error.response;if(response==null){runningTimeout.cancel();logger.throwError("missing response",Logger$3.errors.SERVER_ERROR,{requestBody:bodyify(options.body,flatHeaders["content-type"]),requestMethod:options.method,serverError:error,url:url})}}let body2=response.body;if(allow304&&response.statusCode===304){body2=null}else if(!errorPassThrough&&(response.statusCode<200||response.statusCode>=300)){runningTimeout.cancel();logger.throwError("bad response",Logger$3.errors.SERVER_ERROR,{status:response.statusCode,headers:response.headers,body:bodyify(body2,response.headers?response.headers["content-type"]:null),requestBody:bodyify(options.body,flatHeaders["content-type"]),requestMethod:options.method,url:url})}if(processFunc){try{const result=yield processFunc(body2,response);runningTimeout.cancel();return result}catch(error){if(error.throttleRetry&&attempt<attemptLimit){let tryAgain=true;if(throttleCallback){tryAgain=yield throttleCallback(attempt,url)}if(tryAgain){const timeout2=throttleSlotInterval*parseInt(String(Math.random()*Math.pow(2,attempt)));yield staller(timeout2);continue}}runningTimeout.cancel();logger.throwError("processing response error",Logger$3.errors.SERVER_ERROR,{body:bodyify(body2,response.headers?response.headers["content-type"]:null),error:error,requestBody:bodyify(options.body,flatHeaders["content-type"]),requestMethod:options.method,url:url})}}runningTimeout.cancel();return body2}return logger.throwError("failed response",Logger$3.errors.SERVER_ERROR,{requestBody:bodyify(options.body,flatHeaders["content-type"]),requestMethod:options.method,url:url})})}();return Promise.race([runningTimeout.promise,runningFetch])}function fetchJson(connection,json,processFunc){let processJsonFunc=(value,response)=>{let result=null;if(value!=null){try{result=JSON.parse(toUtf8String(value))}catch(error){logger.throwError("invalid JSON",Logger$3.errors.SERVER_ERROR,{body:value,error:error})}}if(processFunc){result=processFunc(result,response)}return result};let body=null;if(json!=null){body=toUtf8Bytes(json);const updated=typeof connection==="string"?{url:connection}:shallowCopy(connection);if(updated.headers){const hasContentType=Object.keys(updated.headers).filter(k=>k.toLowerCase()==="content-type").length!==0;if(!hasContentType){updated.headers=shallowCopy(updated.headers);updated.headers["content-type"]="application/json"}}else{updated.headers={"content-type":"application/json"}}connection=updated}return _fetchData(connection,body,processJsonFunc)}function poll(func,options){if(!options){options={}}options=shallowCopy(options);if(options.floor==null){options.floor=0}if(options.ceiling==null){options.ceiling=1e4}if(options.interval==null){options.interval=250}return new Promise(function(resolve,reject){let timer=null;let done=false;const cancel=()=>{if(done){return false}done=true;if(timer){clearTimeout(timer)}return true};if(options.timeout){timer=setTimeout(()=>{if(cancel()){reject(new Error("timeout"))}},options.timeout)}const retryLimit=options.retryLimit;let attempt=0;function check(){return func().then(function(result){if(result!==void 0){if(cancel()){resolve(result)}}else if(options.oncePoll){options.oncePoll.once("poll",check)}else if(options.onceBlock){options.onceBlock.once("block",check)}else if(!done){attempt++;if(attempt>retryLimit){if(cancel()){reject(new Error("retry limit reached"))}return}let timeout=options.interval*parseInt(String(Math.random()*Math.pow(2,attempt)));if(timeout<options.floor){timeout=options.floor}if(timeout>options.ceiling){timeout=options.ceiling}setTimeout(check,timeout)}return null},function(error){if(cancel()){reject(error)}})}check()})}class CoinbasePriceProvider{getAPIKey(){return""}getName(){return"Coinbase"}async getMarketPrice(pair){try{if(!pair){return{provider:this.getName(),price:0,lastUpdated:new Date,status:404,message:`Invalid pair - ${pair}`}}pair=await this.getProviderPairFormat(pair);const[tokenIn,tokenOut]=pair.split("-");if(!tokenIn||!tokenOut){return{provider:this.getName(),price:0,lastUpdated:new Date,status:404,message:`Invalid pair - ${pair}`}}if(tokenIn==="USDC"){return{provider:this.getName(),price:parseFloat("1.00"),lastUpdated:new Date,currency:tokenOut,status:0,message:""}}if(tokenIn==="WETH"){pair=`ETH-${tokenOut}`}if(tokenIn==="WBTC"){pair=`BTC-${tokenOut}`}const json=await fetchJson(`https://api.coinbase.com/api/v3/brokerage/market/products?limit=1&product_ids=${pair}`);if(json.num_products<=0){return{provider:this.getName(),price:0,lastUpdated:new Date,status:404,message:`No data found for - ${pair}`}}return{provider:this.getName(),price:parseFloat(json.products[0].price),lastUpdated:new Date,currency:tokenOut,status:0,message:""}}catch(e){log$1.error("CoinbasePriceProvider - getPrice - error",e);let status=404;let message=`Error - ${e}`;if(e.response&&e.response.status===429){status=429;message="Too Many Requests - Rate limit exceeded"}return{provider:this.getName(),price:0,lastUpdated:new Date,status:status,message:message}}}async getProviderPairFormat(pair){return pair}}class AbstractBlockchain{constructor(name,chainId,providers,networks2,symbol,icon,options={}){__publicField(this,"provider");__publicField(this,"providers",[]);__publicField(this,"chainId");__publicField(this,"networks",[]);__publicField(this,"network");__publicField(this,"symbol");__publicField(this,"icon");__publicField(this,"name");__publicField(this,"options");__publicField(this,"feeManager");this.name=name;this.providers=providers;if(providers.length===0)throw new Error("Providers list cannot be empty");this.chainId=chainId;this.networks=networks2;this.options=options;this.symbol=symbol;this.icon=icon;this.network=this.getNetwork();if(!this.isNetworkAndChainIdValid(chainId))throw new Error("Unsupported network and chain. Please check the chain ID and/or networks");if(!this.providers||this.providers.length===0)throw new Error("Providers list cannot be empty");this.provider=providers[0];this.feeManager=new BaseFeeManager;this.initializeBlockchain().catch(error=>{log$1.error("Failed to initialize blockchain:",false,error)})}async initializeBlockchain(){try{if(!this.provider){throw new Error("Provider not initialized")}const gasProvider=await EthereumGasProvider.create(this.provider,this,new CoinbasePriceProvider);await this.feeManager.addProvider(gasProvider)}catch(error){log$1.error("Failed to initialize blockchain:",false,false,error)}}async isInitialized(){try{const providers=this.feeManager.getProviders();return providers.length>0}catch{return false}}async ensureInitialized(){const providers=this.feeManager.getProviders();if(!this.feeManager||providers.length===0){throw new Error("Blockchain not properly initialized")}}async getGasEstimate(transaction){if(!(await this.isInitialized())){throw new Error("Gas provider not initialized")}return this.feeManager.getGasEstimate(transaction)}async getHistoricalGasData(duration){if(!this.feeManager||!duration)throw new Error("Fee manager or duration not set");return await this.feeManager.getHistoricalGasData(duration)}async predictFutureFees(duration){if(!this.feeManager||!duration)throw new Error("Fee manager or duration not set");return await this.feeManager.predictFutureFees(duration)}async call(transaction,blockTag){if(!transaction)throw new Error("Transaction not set");try{return await this.provider.call(transaction,blockTag)}catch(e){throw new Error(`Error calling - call: ${e}`)}}connect(provider,chainId){if(!this.providers||!this.providers.includes(provider))throw new Error("Provider(s) not supported");if(!this.isNetworkAndChainIdValid(chainId))throw new Error("Unsupported network and chain");this.provider=provider;this.chainId=chainId}getBlockchainName(){return this.name}getChainId(){return this.chainId}getNetwork(){this.network=this.networks.find(network=>network.chainId===this.chainId)||this.networks[0];return this.network}getNetworkByChainId(chainId){if(!chainId)throw new Error("Chain ID not set");if(!this.isNetworkAndChainIdValid(chainId))throw new Error("Unsupported network and chain");return this.networks.find(network=>network.chainId===chainId)||this.networks[0]}getIcon(){return this.icon}getNetworks(){log$1.info("Blockchain networks",false,this.networks);return this.networks}getSymbol(){return this.symbol}async setChainId(chainId){if(!chainId)throw new Error("Chain ID not set");if(!this.isNetworkAndChainIdValid(chainId))throw new Error("Unsupported network and chain");if(this.chainId===chainId){return}if(chainId<=0){throw new Error("Invalid chain ID")}if(this.provider.getChainIds()&&!this.provider.getChainIds().includes(chainId)){throw new Error("Provider does not support chain ID")}if(this.networks.find(network=>network.chainId===chainId)===void 0){throw new Error("Blockchain does not support chain ID")}this.network=this.getNetworkByChainId(chainId);this.chainId=chainId}setNetwork(network){if(!network)throw new Error("Network not set");try{if(!this.networks.includes(network)){return this.network}const oldNetwork=this.network;this.network=network;return oldNetwork}catch(e){throw new Error(`Error calling - switchNetwork: ${e}`)}}setNetworkByChainId(chainId){if(!chainId)throw new Error("Chain ID not set");try{const network=this.getNetworkByChainId(chainId);return this.setNetwork(network)}catch(e){throw new Error(`Error calling - switchNetwork: ${e}`)}}async getBalance(address){try{if(!address)return 0n;return await this.provider.getBalance(address)}catch(e){throw new Error(`Error calling - getBalance: ${e}`)}}getOptions(blockchain){if(!blockchain)throw new Error("Blockchain not set");return this.options[blockchain]}getProvider(){return this.provider}getSigner(){return this.provider.getSigner()}getSignerNative(){return this.provider.getSignerNative()}getProviders(){return this.providers}getProviderList(){return this.providers.map(provider=>provider.name)}isNetworkAndChainIdValid(chainId){if(!chainId)throw new Error("Chain ID not set");return this.networks.find(network=>network.chainId===chainId)!==void 0}isSmartContractSupported(){return false}async request(method,params){try{return await this.provider.request(method,params)}catch(e){throw new Error(`Error calling - request - ${method}: ${e}`)}}async sendRawTransaction(signedTransaction){try{return await this.provider.sendRawTransaction(signedTransaction)}catch(e){throw new Error(`Error calling - sendTransaction: ${e}`)}}setProvider(provider,chainId){if(!this.providers.includes(provider)){throw new Error("Provider not supported")}this.provider=provider;this.chainId=chainId}_updateOptions(newOptions,overrideAll=false){if(overrideAll){this.options=newOptions}else{this.options={...this.options,...newOptions}}}}class AbstractContract{constructor(address,abi,provider){__publicField(this,"address");__publicField(this,"abi");__publicField(this,"provider");if(!address||!abi||!provider)throw new Error("Invalid parameters");this.address=address;this.abi=abi;this.provider=provider}isSigner(value){if(!value)return false;return"signMessage"in value&&typeof value.signMessage==="function"}}class EthereumContract extends AbstractContract{constructor(address,abi,provider){super(address,abi,provider);__publicField(this,"contract");__publicField(this,"interface");this.contract=new Contract(address,abi,provider.getSignerNative());if(!this.contract){throw new Error("Invalid contract")}this.interface=new Interface(abi);if(!this.interface){throw new Error("Invalid interface")}}async call(functionName,...args){try{if(!functionName||!this.interface)throw new Error("Invalid function name or invalid interface");if(!this.interface.getFunction(functionName))throw new Error(`Function ${functionName} does not exist on contract`);return await this.contract[functionName](...args)}catch(error){log$1.error(`Error calling ${functionName}:`,false,error);throw error}}async estimateGas(functionName,...args){try{if(!functionName||!this.interface)throw new Error("Invalid function name or invalid interface");if(!this.interface.getFunction(functionName))throw new Error(`Function ${functionName} does not exist on contract`);const contractFunction=this.contract[functionName];if(typeof contractFunction!=="function"){throw new Error(`${functionName} is not a function`)}const estimation=await contractFunction.estimateGas(...args);return BigInt(estimation.toString())}catch(error){log$1.error(`Error estimating gas for ${functionName}:`,false,error);throw error}}async populateTransaction(functionName,...args){try{if(!functionName||!this.interface)throw new Error("Invalid function name or invalid interface");if(!this.interface.getFunction(functionName))throw new Error(`Function ${functionName} does not exist on contract`);const contractFunction=this.contract[functionName];if(typeof contractFunction!=="function"){throw new Error(`${functionName} is not a function`)}const tx=await contractFunction.populateTransaction(...args);if(!tx)throw new Error("Invalid transaction from populate transaction");return EthersConverter.ethersTransactionRequestToTransactionRequest(tx)}catch(error){log$1.error(`Error populating transaction for ${functionName}:`,false,error);throw error}}async sendTransaction(functionName,...args){try{if(!this.interface.getFunction(functionName)){throw new Error(`Function ${functionName} does not exist on contract`)}const tx=await this.contract[functionName](...args);if(!tx)throw new Error("Invalid transaction from send transaction");return EthersConverter.ethersTransactionResponseToTransactionResponse(tx)}catch(error){log$1.error(`Error sending transaction for ${functionName}:`,false,error);throw error}}encodeFunctionData(functionName,args=[]){if(!this.interface.getFunction(functionName)){throw new Error(`Function ${functionName} does not exist on contract`)}return this.interface.encodeFunctionData(functionName,args)}on(eventName,listener){this.contract.on(eventName,listener)}off(eventName,listener){this.contract.off(eventName,listener)}once(eventName,listener){this.contract.once(eventName,listener)}getFunctions(){const functions={};const functionFragments=Object.values(Object.fromEntries(Object.entries(this.interface.fragments).filter(([_,fragment])=>fragment.type==="function")));functionFragments.forEach(fragment=>{functions[fragment.name]=(...args)=>this.call(fragment.name,...args)});return functions}getEvents(){const eventFragments=Object.values(Object.fromEntries(Object.entries(this.interface.fragments).filter(([_,fragment])=>fragment.type==="event")));return eventFragments.map(event=>event.name)}}const networks=[{blockchain:"Ethereum",name:"Mainnet",chainId:1,symbol:"ETH",type:NetworkType.MAINNET,explorer:"https://etherscan.io",decimals:18},{blockchain:"Ethereum",name:"Sepolia",chainId:11155111,symbol:"ETH",type:NetworkType.TESTNET,explorer:"https://sepolia.etherscan.io",decimals:18},{blockchain:"Unichain",name:"Sepolia",chainId:1301,symbol:"ETH",type:NetworkType.TESTNET,explorer:"https://sepolia.uniscan.xyz/",decimals:18}];class Ethereum extends AbstractBlockchain{constructor(providers,chainId=1,options={},overrideAll=false){super("Ethereum",chainId,providers,networks,"ETH","/images/ethereum_icon_purple.svg");__publicField(this,"_options");this.chainId=chainId;this.options=options;this._updateOptions(options,overrideAll);this._options=this.getOptions("ethereum")}async createAccount(accountToDeriveFrom=null,accountInfo){if(!accountInfo)throw new Error("Account info is missing");if(accountToDeriveFrom===null){return this.createPrimaryAccount(accountInfo)}else{if(!accountInfo.path)throw new Error("Derive Path is missing from the account info");return this.createSubAccount(accountToDeriveFrom,accountInfo.path)}}async estimateGas(transaction){if(!transaction)throw new Error("Transaction is missing");return await this.provider.estimateGas(transaction)}async getBalance(addressOrName,blockTag){if(!addressOrName)throw new Error("Address is missing");return await this.provider.getBalance(addressOrName,blockTag!==void 0?blockTag:"latest")}async getBlock(blockHashOrBlockTag){if(!blockHashOrBlockTag)throw new Error("Block hash or tag is missing");throw new Error("Method not implemented.")}async getBlockNumber(){throw new Error("Method not implemented.")}async getBlockWithTransactions(blockHashOrBlockTag){if(!blockHashOrBlockTag)throw new Error("Block hash or tag is missing");throw new Error("Method not implemented.")}async getCode(addressOrName,blockTag){if(!addressOrName)throw new Error("Address is missing");throw new Error("Method not implemented.")}async getFeeData(){return await this.provider.getFeeData()}async getGasPrice(){throw new Error("Method not implemented.")}async getLogs(filter2){if(!filter2)throw new Error("Filter is missing");throw new Error("Method not implemented.")}async getStorageAt(addressOrName,position,blockTag){if(!addressOrName)throw new Error("Address is missing");throw new Error("Method not implemented.")}async signTypedData(transction){if(!transction)throw new Error("Transaction is missing");throw new Error("Method not implemented.")}async getTransaction(transactionHash){if(!transactionHash)throw new Error("Transaction hash is missing");return await this.provider.getTransaction(transactionHash)}async getTransactionCount(addressOrName,blockTag){if(!addressOrName)throw new Error("Address is missing");return await this.provider.getTransactionCount(addressOrName,blockTag)}async getTransactionHistory(address){if(!address)throw new Error("Address is missing");return await this.provider.getTransactionHistory(address)}async getTransactionReceipt(transactionHash){if(!transactionHash)throw new Error("Transaction hash is missing");return await this.provider.getTransactionReceipt(transactionHash)}isAddress(address){const returnValue=isAddress(address);return returnValue}async isSmartContract(address){if(!this.isAddress(address))return false;let contractCode;try{contractCode=await this.provider.getCode(address)}catch(e){contractCode=null}return contractCode&&contractCode!=="0x"&&contractCode!=="0x0"}isSmartContractSupported(){return true}async request(method,params){return await this.provider.request(method,params)}async sendTransaction(transaction){return await this.provider.sendTransaction(transaction)}async sendRawTransaction(signedTransaction){return await this.provider.sendRawTransaction(signedTransaction)}async signTransaction(transaction){return await this.provider.signTransaction(transaction)}async signMessage(message){return await this.provider.signMessage(message)}async createPrimaryAccount(accountInfo){var _a2,_b2,_c2;const entropy=randomBytes$2(32);if(!entropy)throw new Error("Error generating entropy for the mnemonic");const randomMnemonic=Mnemonic.fromEntropy(entropy);if(!randomMnemonic)throw new Error("Error generating mnemonic from entropy");const ethWallet=HDNodeWallet.fromMnemonic(randomMnemonic,accountInfo.path);if(!ethWallet)throw new Error("Error creating wallet from mnemonic");({extendedKey:ethWallet.extendedKey,privateKey:ethWallet.privateKey,publicKey:ethWallet.publicKey,publicKeyUncompressed:ethWallet.publicKey,path:ethWallet.path?ethWallet.path:accountInfo.path,pathIndex:accountInfo.index,fingerPrint:ethWallet.fingerprint,parentFingerPrint:ethWallet.parentFingerprint,chainCode:ethWallet.chainCode});({id:accountInfo.id,index:accountInfo.index,address:ethWallet.address,accountType:AccountTypeCategory.PRIMARY,name:!accountInfo.accountName?`Portfolio Level Account ${accountInfo.index+1}`:accountInfo.accountName,createDate:dateString(),updateDate:dateString()});const primaryAccountData={extendedKey:ethWallet.extendedKey,privateKey:ethWallet.privateKey,publicKey:ethWallet.publicKey,publicKeyUncompressed:ethWallet.publicKey,path:ethWallet.path?ethWallet.path:accountInfo.path,pathIndex:accountInfo.index,fingerPrint:ethWallet.fingerprint,parentFingerPrint:ethWallet.parentFingerprint,chainCode:ethWallet.chainCode,mnemonic:randomMnemonic.phrase,entropy:entropy,password:(_a2=ethWallet.mnemonic)==null?void 0:_a2.password,wordCount:((_b2=ethWallet.mnemonic)==null?void 0:_b2.phrase.split(" ").length)||24,wordListLocale:((_c2=ethWallet.mnemonic)==null?void 0:_c2.wordlist.locale)||"en"};const primaryAccount={id:accountInfo.id,name:"Primary Account",address:ethWallet.address,quantity:0n,index:0,data:primaryAccountData,account:{},subIndex:0,subAccounts:[],version:VERSION$3,createDate:dateString(),updateDate:dateString()};return primaryAccount}async createSubAccount(primaryAccount,derivedPath){const mnemonic=primaryAccount.data.mnemonic;if(!mnemonic)throw new Error("Mnemonic is missing from the primary account data");const ethWallet=HDNodeWallet.fromPhrase(mnemonic,void 0,derivedPath);if(!ethWallet)throw new Error("Error deriving sub account from primary account");const accountData={extendedKey:ethWallet.extendedKey,privateKey:ethWallet.privateKey,publicKey:ethWallet.publicKey,publicKeyUncompressed:ethWallet.publicKey,path:ethWallet.path,pathIndex:primaryAccount.subIndex+1,fingerPrint:ethWallet.fingerprint,parentFingerPrint:primaryAccount.data.fingerPrint,chainCode:"",assignedTo:[]};const subAccount={id:"1",index:primaryAccount.subIndex+1,blockchain:"Ethereum",smartContract:false,address:ethWallet.address,alias:"New Sub Account",accountType:AccountTypeCategory.SUB,name:"Sub Account Name",description:"Description of the sub account",primaryAccount:primaryAccount,data:accountData,quantity:0n,class:"standard",level:"L1",isSigner:true,avatar:"default-avatar.png",tags:[],includeInPortfolio:true,connectedDomains:[],version:"1.0",createDate:(new Date).toISOString(),updateDate:(new Date).toISOString()};return subAccount}async resolveName(name){if(!name)return null;return await this.provider.resolveName(name)}async lookupAddress(address){if(!address)return null;return await this.provider.lookupAddress(address)}createContract(address,abi){if(!address||!abi)return null;return new EthereumContract(address,abi,this.provider)}}class BlockchainFactory{static createBlockchain(name,providers){switch(name){case"Ethereum":return new Ethereum(providers);default:throw new Error(`Unsupported blockchain: ${name}`)}}}class EthereumSigner extends Signer$1{constructor(privateKey,provider){super();__publicField(this,"wallet");__publicField(this,"provider",null);if(!privateKey){throw new Error("Private key not provided to signer")}if(!privateKey.startsWith("0x")){privateKey="0x"+privateKey}if(privateKey.length!==66){throw new Error(`Invalid private key length. Instead it is ${privateKey.length}`)}this.provider=provider;const providerNative=provider?provider.getProvider():null;this.wallet=new Wallet$3(privateKey,providerNative?providerNative:provider)}toEthersHex(value){if(value instanceof EthereumBigNumber){return value.toHex()}if(typeof value==="bigint"){return"0x"+value.toString(16)}if(typeof value==="number"){return"0x"+BigInt(value).toString(16)}if(typeof value==="string"){return value}if(value&&typeof value==="object"&&"_hex"in value){return value._hex}return null}async signTransaction(transaction){const tx=this.transactionToEthersTransaction(transaction);return await this.wallet.signTransaction(tx)}async signMessage(message){return await this.wallet.signMessage(message)}async signTypedData(domain,types,value){return await this.wallet.signTypedData(domain,types,value)}async verifySigner(signerAddress,messageToVerify,signature2){try{const value=recoverAddress(hashMessage$1(messageToVerify),signature2)===signerAddress;return value}catch(e){log$1.error(e);return false}}async getAddress(){return this.wallet.address}getSigner(){if(!this.wallet)return null;return this.wallet}setSigner(provider){if(!provider)throw new Error("Provider is not provided");this.wallet=new Wallet$3(this.wallet.privateKey,provider.getProvider())}async sendTransaction(transaction){const tx=await this.wallet.sendTransaction(this.transactionToEthersTransaction(transaction));return this.ethersTransactionResponseToTransactionResponse(tx)}transactionToEthersTransaction(transaction){var _a2;return{to:transaction.to??void 0,from:transaction.from??void 0,nonce:transaction.nonce===-1?void 0:transaction.nonce,gasLimit:this.toEthersHex(transaction.gasLimit),gasPrice:this.toEthersHex(transaction.gasPrice),maxPriorityFeePerGas:this.toEthersHex(transaction.maxPriorityFeePerGas),maxFeePerGas:this.toEthersHex(transaction.maxFeePerGas),data:((_a2=transaction.data)==null?void 0:_a2.toString())??void 0,value:this.toEthersHex(transaction.quantity),chainId:this.toEthersHex(transaction.chainId)??void 0,accessList:transaction.accessList??void 0,customData:transaction.customData,enableCcipRead:transaction.ccipReadEnabled,blobVersionedHashes:transaction.blobVersionedHashes??void 0,maxFeePerBlobGas:this.toEthersHex(transaction.maxFeePerBlobGas),blobs:transaction.blobs??void 0,kzg:transaction.kzg??void 0}}async ethersTransactionResponseToTransactionResponse(tx){return{hash:tx.hash,to:tx.to??"",from:tx.from,nonce:tx.nonce,gasLimit:tx.gasLimit,gasPrice:tx.gasPrice,data:tx.data,quantity:tx.value,chainId:tx.chainId,blockNumber:tx.blockNumber??void 0,blockHash:tx.blockHash??void 0,timestamp:(new Date).getTime(),confirmations:await tx.confirmations(),raw:void 0,type:tx.type??void 0,accessList:tx.accessList??void 0,maxPriorityFeePerGas:tx.maxPriorityFeePerGas,maxFeePerGas:tx.maxFeePerGas,wait:async confirmations=>{const receipt=await tx.wait(confirmations);if(!receipt){throw new Error("Transaction receipt is null")}return this.ethersTransactionReceiptToTransactionReceipt(receipt)}}}async ethersTransactionReceiptToTransactionReceipt(receipt){return{to:receipt.to??"",from:receipt.from,contractAddress:receipt.contractAddress??void 0,transactionIndex:receipt.index,root:receipt.root??void 0,gasUsed:receipt.gasUsed,logsBloom:receipt.logsBloom,blockHash:receipt.blockHash,transactionHash:receipt.hash,logs:receipt.logs.map(log2=>({blockNumber:log2.blockNumber,blockHash:log2.blockHash,transactionIndex:log2.transactionIndex,removed:log2.removed,address:log2.address,data:log2.data,topics:[...log2.topics],transactionHash:log2.transactionHash,logIndex:log2.index})),blockNumber:receipt.blockNumber,confirmations:await receipt.confirmations(),cumulativeGasUsed:receipt.cumulativeGasUsed,effectiveGasPrice:receipt.gasPrice??void 0,byzantium:true,type:receipt.type,status:receipt.status?receipt.status:void 0}}}const ERC20_ABI=[{constant:true,inputs:[],name:"name",outputs:[{name:"",type:"string"}],type:"function"},{constant:true,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],type:"function"},{constant:true,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],type:"function"},{constant:true,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],type:"function"},{constant:true,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],type:"function"},{constant:false,inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transfer",outputs:[{name:"success",type:"bool"}],type:"function"},{constant:false,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"success",type:"bool"}],type:"function"},{constant:true,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"remaining",type:"uint256"}],type:"function"},{anonymous:false,inputs:[{indexed:true,name:"_from",type:"address"},{indexed:true,name:"_to",type:"address"},{indexed:false,name:"_value",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:false,inputs:[{indexed:true,name:"_owner",type:"address"},{indexed:true,name:"_spender",type:"address"},{indexed:false,name:"_value",type:"uint256"}],name:"Approval",type:"event"}];const ABIs={ERC20:ERC20_ABI};const ADDRESSES={YAKKL:"0x2B64822cf4bbDd77d386F51AA2B40c5cdbeb80b5",UNISWAP_FACTORY:"0x1F98431c8aD98523631AE4a59f267346ea31F984",UNISWAP_FACTORY_SEPOLIA:"0x0227628f3F023bb0B980b67D528571c95c6DaC1c",UNISWAP_V3_ROUTER:"0xE592427A0AEce92De3Edee1F18E0157C05861564",UNISWAP_V3_ROUTER_SEPOLIA:"0x3bFA4769FB09eefC5a80d6E87c3B9C650f7Ae48E",UNISWAP_V3_QUOTER:"0x61fFE014bA17989E743c5F6cB21bF9697530B21e",UNISWAP_V3_QUOTER_SEPOLIA:"0xEd1f6473345F45b75F8179591dd5bA1888cf2FB3",UNISWAP_UNIVERSAL_ROUTER:"0xEf1c6E67703c7BD7107eed8303Fbe6EC2554BF6B",UNISWAP_UNIVERSAL_ROUTER_SEPOLIA:"0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD",SUSHISWAP_FACTORY:"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac",SUSHISWAP_FACTORY_SEPOLIA:"0x...",WETH:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",WETH_SEPOLIA:"0xfFf9976782d46cc05630D1f6EbAB18B2324d6B14",WBTC:"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",USDC:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",USDT:"0xdAC17F958D2ee523a2206206994597C13D831ec7",DAI:"0x6B175474E89094C44Da98b954EedeAC495271d0F"};var freeGlobal=typeof global=="object"&&global&&global.Object===Object&&global;var freeSelf=typeof self=="object"&&self&&self.Object===Object&&self;var root=freeGlobal||freeSelf||Function("return this")();var Symbol$1=root.Symbol;var objectProto$b=Object.prototype;var hasOwnProperty$8=objectProto$b.hasOwnProperty;var nativeObjectToString$1=objectProto$b.toString;var symToStringTag$1=Symbol$1?Symbol$1.toStringTag:void 0;function getRawTag(value){var isOwn=hasOwnProperty$8.call(value,symToStringTag$1),tag=value[symToStringTag$1];try{value[symToStringTag$1]=void 0;var unmasked=true}catch(e){}var result=nativeObjectToString$1.call(value);if(unmasked){if(isOwn){value[symToStringTag$1]=tag}else{delete value[symToStringTag$1]}}return result}var objectProto$a=Object.prototype;var nativeObjectToString=objectProto$a.toString;function objectToString(value){return nativeObjectToString.call(value)}var nullTag="[object Null]",undefinedTag="[object Undefined]";var symToStringTag=Symbol$1?Symbol$1.toStringTag:void 0;function baseGetTag(value){if(value==null){return value===void 0?undefinedTag:nullTag}return symToStringTag&&symToStringTag in Object(value)?getRawTag(value):objectToString(value)}function isObjectLike(value){return value!=null&&typeof value=="object"}var isArray=Array.isArray;function isObject(value){var type=typeof value;return value!=null&&(type=="object"||type=="function")}var asyncTag="[object AsyncFunction]",funcTag$1="[object Function]",genTag="[object GeneratorFunction]",proxyTag="[object Proxy]";function isFunction(value){if(!isObject(value)){return false}var tag=baseGetTag(value);return tag==funcTag$1||tag==genTag||tag==asyncTag||tag==proxyTag}var coreJsData=root["__core-js_shared__"];var maskSrcKey=function(){var uid=/[^.]+$/.exec(coreJsData&&coreJsData.keys&&coreJsData.keys.IE_PROTO||"");return uid?"Symbol(src)_1."+uid:""}();function isMasked(func){return!!maskSrcKey&&maskSrcKey in func}var funcProto$1=Function.prototype;var funcToString$1=funcProto$1.toString;function toSource(func){if(func!=null){try{return funcToString$1.call(func)}catch(e){}try{return func+""}catch(e){}}return""}var reRegExpChar=/[\\^$.*+?()[\]{}|]/g;var reIsHostCtor=/^\[object .+?Constructor\]$/;var funcProto=Function.prototype,objectProto$9=Object.prototype;var funcToString=funcProto.toString;var hasOwnProperty$7=objectProto$9.hasOwnProperty;var reIsNative=RegExp("^"+funcToString.call(hasOwnProperty$7).replace(reRegExpChar,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function baseIsNative(value){if(!isObject(value)||isMasked(value)){return false}var pattern=isFunction(value)?reIsNative:reIsHostCtor;return pattern.test(toSource(value))}function getValue(object2,key2){return object2==null?void 0:object2[key2]}function getNative(object2,key2){var value=getValue(object2,key2);return baseIsNative(value)?value:void 0}var WeakMap$1=getNative(root,"WeakMap");var MAX_SAFE_INTEGER$1=9007199254740991;var reIsUint=/^(?:0|[1-9]\d*)$/;function isIndex(value,length){var type=typeof value;length=length==null?MAX_SAFE_INTEGER$1:length;return!!length&&(type=="number"||type!="symbol"&&reIsUint.test(value))&&(value>-1&&value%1==0&&value<length)}function eq7(value,other){return value===other||value!==value&&other!==other}var MAX_SAFE_INTEGER=9007199254740991;function isLength(value){return typeof value=="number"&&value>-1&&value%1==0&&value<=MAX_SAFE_INTEGER}function isArrayLike(value){return value!=null&&isLength(value.length)&&!isFunction(value)}var objectProto$8=Object.prototype;function isPrototype(value){var Ctor=value&&value.constructor,proto=typeof Ctor=="function"&&Ctor.prototype||objectProto$8;return value===proto}function baseTimes(n2,iteratee){var index=-1,result=Array(n2);while(++index<n2){result[index]=iteratee(index)}return result}var argsTag$2="[object Arguments]";function baseIsArguments(value){return isObjectLike(value)&&baseGetTag(value)==argsTag$2}var objectProto$7=Object.prototype;var hasOwnProperty$6=objectProto$7.hasOwnProperty;var propertyIsEnumerable$1=objectProto$7.propertyIsEnumerable;var isArguments=baseIsArguments(function(){return arguments}())?baseIsArguments:function(value){return isObjectLike(value)&&hasOwnProperty$6.call(value,"callee")&&!propertyIsEnumerable$1.call(value,"callee")};function stubFalse(){return false}var freeExports$1=typeof exports=="object"&&exports&&!exports.nodeType&&exports;var freeModule$1=freeExports$1&&typeof module=="object"&&module&&!module.nodeType&&module;var moduleExports$1=freeModule$1&&freeModule$1.exports===freeExports$1;var Buffer2=moduleExports$1?root.Buffer:void 0;var nativeIsBuffer=Buffer2?Buffer2.isBuffer:void 0;var isBuffer=nativeIsBuffer||stubFalse;var argsTag$1="[object Arguments]",arrayTag$1="[object Array]",boolTag$1="[object Boolean]",dateTag$1="[object Date]",errorTag$1="[object Error]",funcTag="[object Function]",mapTag$2="[object Map]",numberTag$1="[object Number]",objectTag$2="[object Object]",regexpTag$1="[object RegExp]",setTag$2="[object Set]",stringTag$1="[object String]",weakMapTag$1="[object WeakMap]";var arrayBufferTag$1="[object ArrayBuffer]",dataViewTag$2="[object DataView]",float32Tag="[object Float32Array]",float64Tag="[object Float64Array]",int8Tag="[object Int8Array]",int16Tag="[object Int16Array]",int32Tag="[object Int32Array]",uint8Tag="[object Uint8Array]",uint8ClampedTag="[object Uint8ClampedArray]",uint16Tag="[object Uint16Array]",uint32Tag="[object Uint32Array]";var typedArrayTags={};typedArrayTags[float32Tag]=typedArrayTags[float64Tag]=typedArrayTags[int8Tag]=typedArrayTags[int16Tag]=typedArrayTags[int32Tag]=typedArrayTags[uint8Tag]=typedArrayTags[uint8ClampedTag]=typedArrayTags[uint16Tag]=typedArrayTags[uint32Tag]=true;typedArrayTags[argsTag$1]=typedArrayTags[arrayTag$1]=typedArrayTags[arrayBufferTag$1]=typedArrayTags[boolTag$1]=typedArrayTags[dataViewTag$2]=typedArrayTags[dateTag$1]=typedArrayTags[errorTag$1]=typedArrayTags[funcTag]=typedArrayTags[mapTag$2]=typedArrayTags[numberTag$1]=typedArrayTags[objectTag$2]=typedArrayTags[regexpTag$1]=typedArrayTags[setTag$2]=typedArrayTags[stringTag$1]=typedArrayTags[weakMapTag$1]=false;function baseIsTypedArray(value){return isObjectLike(value)&&isLength(value.length)&&!!typedArrayTags[baseGetTag(value)]}function baseUnary(func){return function(value){return func(value)}}var freeExports=typeof exports=="object"&&exports&&!exports.nodeType&&exports;var freeModule=freeExports&&typeof module=="object"&&module&&!module.nodeType&&module;var moduleExports=freeModule&&freeModule.exports===freeExports;var freeProcess=moduleExports&&freeGlobal.process;var nodeUtil=function(){try{var types=freeModule&&freeModule.require&&freeModule.require("util").types;if(types){return types}return freeProcess&&freeProcess.binding&&freeProcess.binding("util")}catch(e){}}();var nodeIsTypedArray=nodeUtil&&nodeUtil.isTypedArray;var isTypedArray=nodeIsTypedArray?baseUnary(nodeIsTypedArray):baseIsTypedArray;var objectProto$6=Object.prototype;var hasOwnProperty$5=objectProto$6.hasOwnProperty;function arrayLikeKeys(value,inherited){var isArr=isArray(value),isArg=!isArr&&isArguments(value),isBuff=!isArr&&!isArg&&isBuffer(value),isType=!isArr&&!isArg&&!isBuff&&isTypedArray(value),skipIndexes=isArr||isArg||isBuff||isType,result=skipIndexes?baseTimes(value.length,String):[],length=result.length;for(var key2 in value){if(hasOwnProperty$5.call(value,key2)&&!(skipIndexes&&(key2=="length"||isBuff&&(key2=="offset"||key2=="parent")||isType&&(key2=="buffer"||key2=="byteLength"||key2=="byteOffset")||isIndex(key2,length)))){result.push(key2)}}return result}function overArg(func,transform){return function(arg){return func(transform(arg))}}var nativeKeys=overArg(Object.keys,Object);var objectProto$5=Object.prototype;var hasOwnProperty$4=objectProto$5.hasOwnProperty;function baseKeys(object2){if(!isPrototype(object2)){return nativeKeys(object2)}var result=[];for(var key2 in Object(object2)){if(hasOwnProperty$4.call(object2,key2)&&key2!="constructor"){result.push(key2)}}return result}function keys(object2){return isArrayLike(object2)?arrayLikeKeys(object2):baseKeys(object2)}var nativeCreate=getNative(Object,"create");function hashClear(){this.__data__=nativeCreate?nativeCreate(null):{};this.size=0}function hashDelete(key2){var result=this.has(key2)&&delete this.__data__[key2];this.size-=result?1:0;return result}var HASH_UNDEFINED$2="__lodash_hash_undefined__";var objectProto$4=Object.prototype;var hasOwnProperty$3=objectProto$4.hasOwnProperty;function hashGet(key2){var data=this.__data__;if(nativeCreate){var result=data[key2];return result===HASH_UNDEFINED$2?void 0:result}return hasOwnProperty$3.call(data,key2)?data[key2]:void 0}var objectProto$3=Object.prototype;var hasOwnProperty$2=objectProto$3.hasOwnProperty;function hashHas(key2){var data=this.__data__;return nativeCreate?data[key2]!==void 0:hasOwnProperty$2.call(data,key2)}var HASH_UNDEFINED$1="__lodash_hash_undefined__";function hashSet(key2,value){var data=this.__data__;this.size+=this.has(key2)?0:1;data[key2]=nativeCreate&&value===void 0?HASH_UNDEFINED$1:value;return this}function Hash2(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1])}}Hash2.prototype.clear=hashClear;Hash2.prototype["delete"]=hashDelete;Hash2.prototype.get=hashGet;Hash2.prototype.has=hashHas;Hash2.prototype.set=hashSet;function listCacheClear(){this.__data__=[];this.size=0}function assocIndexOf(array,key2){var length=array.length;while(length--){if(eq7(array[length][0],key2)){return length}}return-1}var arrayProto=Array.prototype;var splice=arrayProto.splice;function listCacheDelete(key2){var data=this.__data__,index=assocIndexOf(data,key2);if(index<0){return false}var lastIndex=data.length-1;if(index==lastIndex){data.pop()}else{splice.call(data,index,1)}--this.size;return true}function listCacheGet(key2){var data=this.__data__,index=assocIndexOf(data,key2);return index<0?void 0:data[index][1]}function listCacheHas(key2){return assocIndexOf(this.__data__,key2)>-1}function listCacheSet(key2,value){var data=this.__data__,index=assocIndexOf(data,key2);if(index<0){++this.size;data.push([key2,value])}else{data[index][1]=value}return this}function ListCache(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1])}}ListCache.prototype.clear=listCacheClear;ListCache.prototype["delete"]=listCacheDelete;ListCache.prototype.get=listCacheGet;ListCache.prototype.has=listCacheHas;ListCache.prototype.set=listCacheSet;var Map$1=getNative(root,"Map");function mapCacheClear(){this.size=0;this.__data__={hash:new Hash2,map:new(Map$1||ListCache),string:new Hash2}}function isKeyable(value){var type=typeof value;return type=="string"||type=="number"||type=="symbol"||type=="boolean"?value!=="__proto__":value===null}function getMapData(map,key2){var data=map.__data__;return isKeyable(key2)?data[typeof key2=="string"?"string":"hash"]:data.map}function mapCacheDelete(key2){var result=getMapData(this,key2)["delete"](key2);this.size-=result?1:0;return result}function mapCacheGet(key2){return getMapData(this,key2).get(key2)}function mapCacheHas(key2){return getMapData(this,key2).has(key2)}function mapCacheSet(key2,value){var data=getMapData(this,key2),size=data.size;data.set(key2,value);this.size+=data.size==size?0:1;return this}function MapCache(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1])}}MapCache.prototype.clear=mapCacheClear;MapCache.prototype["delete"]=mapCacheDelete;MapCache.prototype.get=mapCacheGet;MapCache.prototype.has=mapCacheHas;MapCache.prototype.set=mapCacheSet;function arrayPush(array,values){var index=-1,length=values.length,offset=array.length;while(++index<length){array[offset+index]=values[index]}return array}function stackClear(){this.__data__=new ListCache;this.size=0}function stackDelete(key2){var data=this.__data__,result=data["delete"](key2);this.size=data.size;return result}function stackGet(key2){return this.__data__.get(key2)}function stackHas(key2){return this.__data__.has(key2)}var LARGE_ARRAY_SIZE=200;function stackSet(key2,value){var data=this.__data__;if(data instanceof ListCache){var pairs=data.__data__;if(!Map$1||pairs.length<LARGE_ARRAY_SIZE-1){pairs.push([key2,value]);this.size=++data.size;return this}data=this.__data__=new MapCache(pairs)}data.set(key2,value);this.size=data.size;return this}function Stack(entries){var data=this.__data__=new ListCache(entries);this.size=data.size}Stack.prototype.clear=stackClear;Stack.prototype["delete"]=stackDelete;Stack.prototype.get=stackGet;Stack.prototype.has=stackHas;Stack.prototype.set=stackSet;function arrayFilter(array,predicate){var index=-1,length=array==null?0:array.length,resIndex=0,result=[];while(++index<length){var value=array[index];if(predicate(value,index,array)){result[resIndex++]=value}}return result}function stubArray(){return[]}var objectProto$2=Object.prototype;var propertyIsEnumerable=objectProto$2.propertyIsEnumerable;var nativeGetSymbols=Object.getOwnPropertySymbols;var getSymbols=!nativeGetSymbols?stubArray:function(object2){if(object2==null){return[]}object2=Object(object2);return arrayFilter(nativeGetSymbols(object2),function(symbol){return propertyIsEnumerable.call(object2,symbol)})};function baseGetAllKeys(object2,keysFunc,symbolsFunc){var result=keysFunc(object2);return isArray(object2)?result:arrayPush(result,symbolsFunc(object2))}function getAllKeys(object2){return baseGetAllKeys(object2,keys,getSymbols)}var DataView$1=getNative(root,"DataView");var Promise$1=getNative(root,"Promise");var Set$1=getNative(root,"Set");var mapTag$1="[object Map]",objectTag$1="[object Object]",promiseTag="[object Promise]",setTag$1="[object Set]",weakMapTag="[object WeakMap]";var dataViewTag$1="[object DataView]";var dataViewCtorString=toSource(DataView$1),mapCtorString=toSource(Map$1),promiseCtorString=toSource(Promise$1),setCtorString=toSource(Set$1),weakMapCtorString=toSource(WeakMap$1);var getTag=baseGetTag;if(DataView$1&&getTag(new DataView$1(new ArrayBuffer(1)))!=dataViewTag$1||Map$1&&getTag(new Map$1)!=mapTag$1||Promise$1&&getTag(Promise$1.resolve())!=promiseTag||Set$1&&getTag(new Set$1)!=setTag$1||WeakMap$1&&getTag(new WeakMap$1)!=weakMapTag){getTag=function(value){var result=baseGetTag(value),Ctor=result==objectTag$1?value.constructor:void 0,ctorString=Ctor?toSource(Ctor):"";if(ctorString){switch(ctorString){case dataViewCtorString:return dataViewTag$1;case mapCtorString:return mapTag$1;case promiseCtorString:return promiseTag;case setCtorString:return setTag$1;case weakMapCtorString:return weakMapTag}}return result}}var Uint8Array$1=root.Uint8Array;var HASH_UNDEFINED="__lodash_hash_undefined__";function setCacheAdd(value){this.__data__.set(value,HASH_UNDEFINED);return this}function setCacheHas(value){return this.__data__.has(value)}function SetCache(values){var index=-1,length=values==null?0:values.length;this.__data__=new MapCache;while(++index<length){this.add(values[index])}}SetCache.prototype.add=SetCache.prototype.push=setCacheAdd;SetCache.prototype.has=setCacheHas;function arraySome(array,predicate){var index=-1,length=array==null?0:array.length;while(++index<length){if(predicate(array[index],index,array)){return true}}return false}function cacheHas(cache,key2){return cache.has(key2)}var COMPARE_PARTIAL_FLAG$3=1,COMPARE_UNORDERED_FLAG$1=2;function equalArrays(array,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG$3,arrLength=array.length,othLength=other.length;if(arrLength!=othLength&&!(isPartial&&othLength>arrLength)){return false}var arrStacked=stack.get(array);var othStacked=stack.get(other);if(arrStacked&&othStacked){return arrStacked==other&&othStacked==array}var index=-1,result=true,seen2=bitmask&COMPARE_UNORDERED_FLAG$1?new SetCache:void 0;stack.set(array,other);stack.set(other,array);while(++index<arrLength){var arrValue=array[index],othValue=other[index];if(customizer){var compared=isPartial?customizer(othValue,arrValue,index,other,array,stack):customizer(arrValue,othValue,index,array,other,stack)}if(compared!==void 0){if(compared){continue}result=false;break}if(seen2){if(!arraySome(other,function(othValue2,othIndex){if(!cacheHas(seen2,othIndex)&&(arrValue===othValue2||equalFunc(arrValue,othValue2,bitmask,customizer,stack))){return seen2.push(othIndex)}})){result=false;break}}else if(!(arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack))){result=false;break}}stack["delete"](array);stack["delete"](other);return result}function mapToArray(map){var index=-1,result=Array(map.size);map.forEach(function(value,key2){result[++index]=[key2,value]});return result}function setToArray(set){var index=-1,result=Array(set.size);set.forEach(function(value){result[++index]=value});return result}var COMPARE_PARTIAL_FLAG$2=1,COMPARE_UNORDERED_FLAG=2;var boolTag="[object Boolean]",dateTag="[object Date]",errorTag="[object Error]",mapTag="[object Map]",numberTag="[object Number]",regexpTag="[object RegExp]",setTag="[object Set]",stringTag="[object String]",symbolTag="[object Symbol]";var arrayBufferTag="[object ArrayBuffer]",dataViewTag="[object DataView]";var symbolProto=Symbol$1?Symbol$1.prototype:void 0,symbolValueOf=symbolProto?symbolProto.valueOf:void 0;function equalByTag(object2,other,tag,bitmask,customizer,equalFunc,stack){switch(tag){case dataViewTag:if(object2.byteLength!=other.byteLength||object2.byteOffset!=other.byteOffset){return false}object2=object2.buffer;other=other.buffer;case arrayBufferTag:if(object2.byteLength!=other.byteLength||!equalFunc(new Uint8Array$1(object2),new Uint8Array$1(other))){return false}return true;case boolTag:case dateTag:case numberTag:return eq7(+object2,+other);case errorTag:return object2.name==other.name&&object2.message==other.message;case regexpTag:case stringTag:return object2==other+"";case mapTag:var convert=mapToArray;case setTag:var isPartial=bitmask&COMPARE_PARTIAL_FLAG$2;convert||(convert=setToArray);if(object2.size!=other.size&&!isPartial){return false}var stacked=stack.get(object2);if(stacked){return stacked==other}bitmask|=COMPARE_UNORDERED_FLAG;stack.set(object2,other);var result=equalArrays(convert(object2),convert(other),bitmask,customizer,equalFunc,stack);stack["delete"](object2);return result;case symbolTag:if(symbolValueOf){return symbolValueOf.call(object2)==symbolValueOf.call(other)}}return false}var COMPARE_PARTIAL_FLAG$1=1;var objectProto$1=Object.prototype;var hasOwnProperty$1=objectProto$1.hasOwnProperty;function equalObjects(object2,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG$1,objProps=getAllKeys(object2),objLength=objProps.length,othProps=getAllKeys(other),othLength=othProps.length;if(objLength!=othLength&&!isPartial){return false}var index=objLength;while(index--){var key2=objProps[index];if(!(isPartial?key2 in other:hasOwnProperty$1.call(other,key2))){return false}}var objStacked=stack.get(object2);var othStacked=stack.get(other);if(objStacked&&othStacked){return objStacked==other&&othStacked==object2}var result=true;stack.set(object2,other);stack.set(other,object2);var skipCtor=isPartial;while(++index<objLength){key2=objProps[index];var objValue=object2[key2],othValue=other[key2];if(customizer){var compared=isPartial?customizer(othValue,objValue,key2,other,object2,stack):customizer(objValue,othValue,key2,object2,other,stack)}if(!(compared===void 0?objValue===othValue||equalFunc(objValue,othValue,bitmask,customizer,stack):compared)){result=false;break}skipCtor||(skipCtor=key2=="constructor")}if(result&&!skipCtor){var objCtor=object2.constructor,othCtor=other.constructor;if(objCtor!=othCtor&&("constructor"in object2&&"constructor"in other)&&!(typeof objCtor=="function"&&objCtor instanceof objCtor&&typeof othCtor=="function"&&othCtor instanceof othCtor)){result=false}}stack["delete"](object2);stack["delete"](other);return result}var COMPARE_PARTIAL_FLAG=1;var argsTag="[object Arguments]",arrayTag="[object Array]",objectTag="[object Object]";var objectProto=Object.prototype;var hasOwnProperty=objectProto.hasOwnProperty;function baseIsEqualDeep(object2,other,bitmask,customizer,equalFunc,stack){var objIsArr=isArray(object2),othIsArr=isArray(other),objTag=objIsArr?arrayTag:getTag(object2),othTag=othIsArr?arrayTag:getTag(other);objTag=objTag==argsTag?objectTag:objTag;othTag=othTag==argsTag?objectTag:othTag;var objIsObj=objTag==objectTag,othIsObj=othTag==objectTag,isSameTag=objTag==othTag;if(isSameTag&&isBuffer(object2)){if(!isBuffer(other)){return false}objIsArr=true;objIsObj=false}if(isSameTag&&!objIsObj){stack||(stack=new Stack);return objIsArr||isTypedArray(object2)?equalArrays(object2,other,bitmask,customizer,equalFunc,stack):equalByTag(object2,other,objTag,bitmask,customizer,equalFunc,stack)}if(!(bitmask&COMPARE_PARTIAL_FLAG)){var objIsWrapped=objIsObj&&hasOwnProperty.call(object2,"__wrapped__"),othIsWrapped=othIsObj&&hasOwnProperty.call(other,"__wrapped__");if(objIsWrapped||othIsWrapped){var objUnwrapped=objIsWrapped?object2.value():object2,othUnwrapped=othIsWrapped?other.value():other;stack||(stack=new Stack);return equalFunc(objUnwrapped,othUnwrapped,bitmask,customizer,stack)}}if(!isSameTag){return false}stack||(stack=new Stack);return equalObjects(object2,other,bitmask,customizer,equalFunc,stack)}function baseIsEqual(value,other,bitmask,customizer,stack){if(value===other){return true}if(value==null||other==null||!isObjectLike(value)&&!isObjectLike(other)){return value!==value&&other!==other}return baseIsEqualDeep(value,other,bitmask,customizer,baseIsEqual,stack)}function isEqual(value,other){return baseIsEqual(value,other)}async function getTokenBalance(token,userAddress,provider){var _a2;try{if(!isAddress(token.address)){log$1.error(`Invalid token address: ${token.address}`);return void 0}if(token.isNative){const balance=await provider.getBalance(userAddress);const{balanceCacheManager:balanceCacheManager}=await __vitePreload(async()=>{const{balanceCacheManager:balanceCacheManager2}=await import("./DpKLkluw.js");return{balanceCacheManager:balanceCacheManager2}},true?__vite__mapDeps([3,1]):void 0,import.meta.url);const{yakklPricingStore:yakklPricingStore2}=await __vitePreload(async()=>{const{yakklPricingStore:yakklPricingStore3}=await Promise.resolve().then(()=>stores);return{yakklPricingStore:yakklPricingStore3}},true?void 0:void 0,import.meta.url);const{get:getStore}=await __vitePreload(async()=>{const{get:getStore2}=await import("./BOosul_h.js").then(n2=>n2.i);return{get:getStore2}},true?__vite__mapDeps([4,5,6]):void 0,import.meta.url);const currentPrice=(_a2=getStore(yakklPricingStore2))==null?void 0:_a2.price;if(currentPrice){balanceCacheManager.setCachedBalance(userAddress,balance,currentPrice);log$1.debug("[tokens] Updated cache for native token balance")}return formatUnits$1(balance,18)}const tokenContract=new Contract(token.address,["function balanceOf(address owner) view returns (uint256)","function decimals() view returns (uint8)"],provider);try{const balance=await tokenContract.balanceOf(userAddress);const decimals=await tokenContract.decimals();return formatUnits$1(balance,decimals)}catch{log$1.error("The contract does not implement balanceOf or it reverted.");return void 0}}catch(error){log$1.error(`Failed to get balance for token: ${token.name}`,false,error);return void 0}}async function updateTokenBalances(userAddress,provider){try{const[defaultTokens,customTokens]=await Promise.all([updateTokenDataBalances(userAddress,provider),updateTokenDataCustomBalances(userAddress,provider)]);updateCombinedTokenStore()}catch(error){log$1.error("Error updating token balances:",false,error)}}async function updateTokenDataBalances(userAddress,provider){try{const tokens2=get(yakklTokenDataStore);if(!tokens2||tokens2.length===0){log$1.warn("No tokens available to update balances");return[]}const updatedTokens=await Promise.all(tokens2.map(async token=>{try{const balance=await getTokenBalance(token,userAddress,provider);return{...token,sidepanel:token.sidepanel??true,balance:balance!==void 0?balance:token.balance,value:0}}catch(balanceError){log$1.error(`Error fetching balance for token ${token.symbol}:`,false,balanceError);return token}}));const currentTokens=get(yakklTokenDataStore);if(!isEqual(currentTokens,updatedTokens)){await setYakklTokenDataStorage(updatedTokens)}return updatedTokens}catch(error){log$1.error("Error updating token balances:",false,error);return[]}}async function updateTokenDataCustomBalances(userAddress,provider){try{const customTokens=get(yakklTokenDataCustomStore);if(!customTokens||customTokens.length===0){log$1.warn("No custom tokens available to update balances");return[]}const updatedCustomTokens=await Promise.all(customTokens.map(async token=>{try{const balance=await getTokenBalance(token,userAddress,provider);return{...token,sidepanel:token.sidepanel??true,balance:balance!==void 0?balance:token.balance,value:0}}catch(balanceError){log$1.error(`Error fetching balance for custom token ${token.symbol}:`,false,balanceError);return token}}));const currentCustomTokens=get(yakklTokenDataCustomStore);if(!isEqual(currentCustomTokens,updatedCustomTokens)){await setYakklTokenDataCustomStorage(updatedCustomTokens)}return updatedCustomTokens}catch(error){log$1.error("Error updating custom token balances:",false,error);return[]}}class TokenService{constructor(blockchain=null){__publicField(this,"blockchain",null);this.blockchain=blockchain}getTokenContract(tokenAddress){if(!tokenAddress)return null;return this.blockchain?this.blockchain.createContract(tokenAddress,ABIs.ERC20):null}async getTokenInfo(tokenAddress){if(!tokenAddress)return{name:"",symbol:"",decimals:0,totalSupply:0n};try{const contract=this.getTokenContract(tokenAddress);if(!contract)return{name:"",symbol:"",decimals:0,totalSupply:0n};const[name,symbol,decimals,totalSupply]=await Promise.all([contract.call("name"),contract.call("symbol"),contract.call("decimals"),contract.call("totalSupply")]);return{name:name,symbol:symbol,decimals:decimals,totalSupply:totalSupply}}catch(error){log$1.error("Contract - getTokenInfo:",false,error);return{name:"",symbol:"",decimals:0,totalSupply:0n}}}async getBalance(tokenAddress,userAddress){try{if(!tokenAddress||!userAddress)return 0n;const contract=this.getTokenContract(tokenAddress);if(!contract)return 0n;return await contract.call("balanceOf",userAddress)}catch(error){log$1.error("Contract - getBalance - error",false,error);return 0n}}async updateTokenBalances(userAddress){var _a2,_b2;try{if(!userAddress)throw new Error("Invalid parameters");updateTokenBalances(userAddress,((_b2=(_a2=this.blockchain)==null?void 0:_a2.getProvider())==null?void 0:_b2.getProvider())??void 0)}catch(error){log$1.error("Error updating token balances:",false,error)}}async transfer(tokenAddress,toAddress,amount){try{if(!tokenAddress||!toAddress||!amount)throw new Error("Invalid parameters");const contract=this.getTokenContract(tokenAddress);if(!contract)throw new Error("Invalid contract");const gasEstimate=await contract.estimateGas("transfer",toAddress,amount);const tx=await contract.populateTransaction("transfer",toAddress,amount);if(!tx)throw new Error("Invalid transaction");tx.gasLimit=gasEstimate;return await this.blockchain.sendTransaction(tx)}catch(error){log$1.error("Contract - transfer - error",false,error);throw new Error(`Error transferring tokens: ${error}`)}}}const walletStore=writable(null);class Wallet3{constructor(providerNames=["Alchemy"],blockchainNames=["Ethereum"],chainId=1,apiKey=null,privateKey=null){__publicField(this,"provider",null);__publicField(this,"blockchain",null);__publicField(this,"signer",null);__publicField(this,"portfolio",[]);__publicField(this,"currentToken",null);__publicField(this,"accounts",[]);__publicField(this,"apiKey",null);__publicField(this,"chainId");__publicField(this,"privateKey",null);__publicField(this,"tokenService",null);this.providerNames=providerNames;this.blockchainNames=blockchainNames;this.apiKey=apiKey;this.chainId=chainId;this.setChainId(chainId);this.privateKey=privateKey;this.initialize();Wallet3.setInstance(this);if(browserSvelte){browser_ext.runtime.sendMessage({type:"YAKKL_STATE_CHANGE",data:{chainId:chainId}}).catch(error=>{log.error("Error sending initial chain change message",true,error)})}}initialize(){if(this.providerNames.length>0){const providers=this.providerNames.map(name=>ProviderFactory.createProvider({name:name,apiKey:this.apiKey,chainId:this.chainId}));this.provider=providers[0];const blockchainName=this.getBlockchainFromChainId(this.chainId);this.blockchain=BlockchainFactory.createBlockchain(blockchainName,providers);this.tokenService=new TokenService(this.blockchain)}this.setupEventListeners();if(this.privateKey){this.setSigner(this.privateKey)}Wallet3.setInstance(this)}static setInstance(instance){walletStore.set(instance)}addTokenToPortfolio(token){this.portfolio.push(token);Wallet3.setInstance(this)}async createAccount(accountToDeriveFrom=null,accountInfo){if(!this.blockchain){throw new Error("Blockchain not initialized")}const newAccount=await this.blockchain.createAccount(accountToDeriveFrom,accountInfo);if(isYakklPrimaryAccount(newAccount)){this.addAccount(newAccount)}else{this.addAccount(newAccount)}Wallet3.setInstance(this);return newAccount}async estimateGas(transaction){if(!this.blockchain){throw new Error("Blockchain not initialized")}return await this.blockchain.estimateGas(transaction)}async getBalance(address){if(!this.blockchain){throw new Error("Blockchain not initialized")}return await this.blockchain.getBalance(address)}getBlockchain(){switch(this.chainId){case 1:case 11155111:default:return this.blockchain}}getBlockchainFromChainId(chainId){switch(chainId){case 137:return"Polygon";case 43114:return"Avalanche";case 42161:return"Arbitrum";case 250:return"Optimism";case 1:case 11155111:default:return"Ethereum"}}getTokenService(){return this.tokenService}getChainId(){return this.chainId}getCurrentToken(){return this.currentToken}getPortfolio(){return this.portfolio}getProvider(){return this.provider}async getTransactionHistory(address){if(!this.blockchain){throw new Error("Blockchain not initialized")}return await this.blockchain.getTransactionHistory(address)}onProviderConnected(data){Wallet3.setInstance(this)}onBalanceFetched(data){Wallet3.setInstance(this)}onProviderSwitched(data){Wallet3.setInstance(this)}onError(data){Wallet3.setInstance(this)}onRequestMade(data){Wallet3.setInstance(this)}async setChainId(chainId){var _a2,_b2;this.chainId=chainId;(_a2=this.blockchain)==null?void 0:_a2.setChainId(chainId);(_b2=this.provider)==null?void 0:_b2.setChainId(chainId);Wallet3.setInstance(this);if(browserSvelte){browser_ext.runtime.sendMessage({type:"YAKKL_STATE_CHANGE",data:{chainId:chainId}}).catch(error=>{log.error("Error sending chain change message",true,error)})}}setAPIKey(apiKey){this.apiKey=apiKey;Wallet3.setInstance(this)}setCurrentToken(tokenAddress){const token=this.portfolio.find(t=>t.address===tokenAddress);if(!token){throw new Error(`Token with address ${tokenAddress} not found in portfolio`)}this.currentToken=token;this.provider=token.provider;this.blockchain=token.blockchain;Wallet3.setInstance(this)}setupEventListeners(){eventManager.on("balanceFetched",this.onBalanceFetched.bind(this));eventManager.on("error",this.onError.bind(this));eventManager.on("providerConnected",this.onProviderConnected.bind(this));eventManager.on("providerSwitched",this.onProviderSwitched.bind(this));eventManager.on("requestMade",this.onRequestMade.bind(this));Wallet3.setInstance(this)}setSigner(privateKey){try{if(!this.blockchain){log.warn("Blockchain is not initialized yet");return null}if(!this.provider){log.warn("Provider is not initialized yet");return null}if(!privateKey&&!this.privateKey){log.warn("No private key provided yet");return null}switch(this.blockchain.name){case"Ethereum":this.signer=new EthereumSigner(privateKey,this.provider);break;default:throw new Error(`Unsupported blockchain: ${this.blockchain.name}`)}if(this.signer){this.privateKey=privateKey;Wallet3.setInstance(this);this.provider.setSigner(this.signer);return Promise.resolve(this.signer)}else{throw new Error("Signer could not be created")}}catch(error){log.error("Error setting signer:",false,error);return Promise.reject(error)}}getSigner(){return this.signer}switchProvider(){if(!this.blockchain||!this.provider){throw new Error("Blockchain or Provider not initialized")}const availableProviders=this.providerNames.map(name=>ProviderFactory.createProvider({name:name,apiKey:this.privateKey,chainId:this.chainId})).filter(provider=>provider.blockchains.includes(this.blockchain.name));const newProvider=availableProviders.find(provider=>provider!==this.provider);if(newProvider){const chainId=this.provider.chainId;const oldProviderName=this.provider.name;this.provider=newProvider;this.blockchain.connect(newProvider,chainId);eventManager.emit("providerSwitched",{oldProvider:oldProviderName,newProvider:newProvider.name});Wallet3.setInstance(this)}}switchToProvider(providerOrName){var _a2;if(!this.blockchain){throw new Error("Blockchain not initialized")}let newProvider=null;if(typeof providerOrName==="string"){const availableProviders=this.providerNames.map(name=>ProviderFactory.createProvider({name:name,apiKey:this.privateKey,chainId:this.chainId})).filter(provider=>provider.blockchains.includes(this.blockchain.name));if(!availableProviders.length){throw new Error("No available providers for this blockchain")}newProvider=availableProviders.find(provider=>provider!==this.provider);if(!newProvider){newProvider=ProviderFactory.createProvider({name:providerOrName})}}else{newProvider=providerOrName}if(!newProvider){throw new Error(`Provider ${typeof providerOrName==="string"?providerOrName:"unknown"} could not be created or is invalid.`)}if(!newProvider.blockchains.includes(this.blockchain.name)){throw new Error(`Provider ${newProvider.name} does not support blockchain ${this.blockchain.name}`)}if(newProvider!==this.provider){const chainId=((_a2=this.provider)==null?void 0:_a2.chainId)||this.blockchain.chainId;const oldProvider=this.provider;this.provider=newProvider;this.blockchain.connect(newProvider,chainId);eventManager.emit("providerSwitched",{oldProvider:oldProvider==null?void 0:oldProvider.name,newProvider:newProvider.name});Wallet3.setInstance(this)}}async sendTransaction(transaction){if(!this.signer){if(!this.privateKey){throw new Error("Private key not set")}else{await this.setSigner(this.privateKey)}}if(!this.blockchain||!this.provider||!this.signer){throw new Error("Blockchain or Provider or Signer not initialized")}return await this.blockchain.sendTransaction(transaction)}async signTypedData(domain,types,value){if(!this.signer){throw new Error("Signer not initialized")}if(typeof this.signer.signTypedData==="function"){return await this.signer.signTypedData(domain,types,value)}else{throw new Error("signTypedData is not supported for the current blockchain signer")}}addAccount(account){if(isYakklPrimaryAccount(account)){this.accounts.push(account.account)}else{this.accounts.push(account)}Wallet3.setInstance(this)}getAccount(address){return this.accounts.find(account=>account.address===address)}removeAccount(address){this.accounts=this.accounts.filter(account=>account.address!==address);Wallet3.setInstance(this)}async getGasEstimate(transaction){if(!this.blockchain){throw new Error("Blockchain not initialized")}return await this.blockchain.getGasEstimate(transaction)}async getHistoricalGasData(duration){if(!this.blockchain){throw new Error("Blockchain not initialized")}return await this.blockchain.getHistoricalGasData(duration)}async predictFutureFees(duration){if(!this.blockchain){throw new Error("Blockchain not initialized")}return await this.blockchain.predictFutureFees(duration)}}let crypto;if(typeof window!=="undefined"&&window.crypto){crypto=window.crypto}else if(typeof global!=="undefined"&&(global==null?void 0:global.crypto)){crypto=global.crypto}else if(typeof require!=="undefined"){crypto=require("crypto").webcrypto}else{throw new Error("No crypto support found")}function bufferToBase64(array){return Buffer$1$1.from(array).toString("base64")}function bufferForCrypto(base64){const binaryString=atob(base64);const bytes2=new Uint8Array(binaryString.length);for(let i=0;i<binaryString.length;i++){bytes2[i]=binaryString.charCodeAt(i)}return bytes2.buffer}async function generateSalt(){const saltBuffer=crypto.getRandomValues(new Uint8Array(64));return bufferToBase64(saltBuffer)}async function digestMessage(message){const encoder=new TextEncoder;const data=encoder.encode(message);const hashBuffer=await crypto.subtle.digest("SHA-256",data);const hashArray=Array.from(new Uint8Array(hashBuffer));const hashHex=hashArray.map(b2=>b2.toString(16).padStart(2,"0")).join("");return hashHex}async function deriveKeyFromPassword(password,existingSalt){const salt=existingSalt||await generateSalt();const encoder=new TextEncoder;const derivationKey=await crypto.subtle.importKey("raw",encoder.encode(password),{name:"PBKDF2"},false,["deriveKey"]);const key2=await crypto.subtle.deriveKey({name:"PBKDF2",salt:encoder.encode(salt),iterations:1e6,hash:"SHA-256"},derivationKey,{name:"AES-GCM",length:256},false,["encrypt","decrypt"]);return{key:key2,salt:salt}}function encodeJSON(obj){return JSON.stringify(obj,(_,value)=>{if(typeof value==="bigint"){return value.toString()}return value})}async function encryptData(data,passwordOrSaltedKey){try{if(!data){throw new Error("Missing data to encrypt")}if(!passwordOrSaltedKey){throw new Error("Missing password or key to encrypt data")}const{key:key2,salt:salt}=typeof passwordOrSaltedKey==="string"?await deriveKeyFromPassword(passwordOrSaltedKey):passwordOrSaltedKey;const encoder=new TextEncoder;const iv=crypto.getRandomValues(new Uint8Array(16));const encodedData=encoder.encode(encodeJSON(data));const cipherData=await crypto.subtle.encrypt({name:"AES-GCM",iv:iv},key2,encodedData);return{data:bufferToBase64(new Uint8Array(cipherData)),iv:bufferToBase64(iv),salt:salt}}catch(error){log$1.error("Error encrypting data:",false,error);throw error}}async function decryptData(encryptedData,passwordOrSaltedKey){try{if(!passwordOrSaltedKey){throw new Error("Missing password or key to decrypt data")}const{data:data,iv:iv,salt:salt}=encryptedData;const{key:key2}=typeof passwordOrSaltedKey==="string"?await deriveKeyFromPassword(passwordOrSaltedKey,salt):passwordOrSaltedKey;const plaintext=await crypto.subtle.decrypt({name:"AES-GCM",iv:bufferForCrypto(iv)},key2,bufferForCrypto(data));const txtDecoder=(new TextDecoder).decode(plaintext);return JSON.parse(txtDecoder)}catch(error){log$1.error("Error decrypting data:",false,error);throw error}}const tokens=writable([]);const preferredTokenSymbols=writable(["ETH","WETH","USDC","USDT","WBTC"]);const sortedTokens=derived([tokens,preferredTokenSymbols],([$tokens,$preferredTokenSymbols])=>{const preferredTokens=$tokens.filter(token=>$preferredTokenSymbols.includes(token.symbol));const nonPreferredTokens=$tokens.filter(token=>!$preferredTokenSymbols.includes(token.symbol)&&token.chainId===1);let eth={chainId:1,address:ADDRESSES.WETH,name:"Ethereum",symbol:"ETH",decimals:18,isNative:true,isStablecoin:false,logoURI:"/images/ethereum.svg"};preferredTokens.unshift(eth);return[...preferredTokens,...nonPreferredTokens]});async function loadTokens(){var _a2;try{const response=await fetch("/data/uniswap.json");const data=await response.json();const tokensData=data.tokens||((_a2=data==null?void 0:data.data)==null?void 0:_a2.tokens)||data;const loadedTokens=tokensData.map(token=>({...token,isStablecoin:["USDC","USDT","DAI","BUSD"].includes(token.symbol)}));tokens.set(loadedTokens)}catch(error){log$1.error("Error loading tokens:",false,error)}}const prerender=false;const alert=writable({msg:"Welcome to the YAKKL® Smart Wallet!",icon:1,color:{background:"bg-indigo-400",text:"text-indigo-800"},opacity:.5,ms:3e3});async function loadCheckCurrentlySelectedStore(){try{const currentlySelected=getYakklCurrentlySelectedStore();const miscStore=getMiscStore();if(miscStore&&currentlySelected!==null){if(isEncryptedData(currentlySelected.data)){decryptData(currentlySelected.data,miscStore).then(result=>{currentlySelected.data=result;return currentlySelected})}else{return currentlySelected}}return null}catch(error){log$1.error("Error in loadCheckCurrentlySelectedStore:",false,error);throw error}}async function verifyEncryption(value){try{const miscStore=getMiscStore();if(miscStore){const processItem=async item=>{if(!isEncryptedData(item.data)){const result=await encryptData(item.data,miscStore);item.data=result}return item};if(Array.isArray(value)){return Promise.all(value.map(processItem))}else{return processItem(value)}}return value}catch(error){log$1.error("Error in verifyEncryption:",false,error);throw error}}const yakklPreferencesStore=writable(yakklPreferences);const yakklSettingsStore=writable(yakklSettings);const profileStore=writable(profile);const yakklCurrentlySelectedStore=writable(yakklCurrentlySelected);const yakklContactsStore=writable(yakklContacts);const yakklChatsStore=writable(yakklChats);const yakklAccountsStore=writable(yakklAccounts);const yakklPrimaryAccountsStore=writable(yakklPrimaryAccounts);const yakklWatchListStore=writable(yakklWatchList);const yakklBlockedListStore=writable(yakklBlockedList);const yakklConnectedDomainsStore=writable(void 0);const yakklMiscStore=writable(void 0);const yakklVeryStore=writable(void 0);const yakklVersionStore=writable(void 0);const yakklUserNameStore=writable(void 0);const yakklPricingStore=writable(void 0);const yakklGasTransStore=writable(void 0);const yakklContactStore=writable(void 0);const yakklAccountStore=writable(void 0);const yakklWalletProvidersStore=writable([]);const yakklWalletBlockchainsStore=writable([]);const yakklTokenDataStore=writable([]);const yakklTokenDataCustomStore=writable([]);const yakklCombinedTokenStore=writable([]);const yakklInstancesStore=writable([null,null,null,null]);const yakklGPTRunningStore=writable(false);const yakklGPTKeyStore=writable(void 0);const yakklConnectionStore=writable(true);const yakklDappConnectRequestStore=writable(null);const priceStore=writable(null);const sessionInitialized=writable(false);const activeTabBackgroundStore=writable(null);const activeTabUIStore=writable(null);const backgroundUIConnectedStore=writable(false);const wallet=writable(null);const yakklContractStore=writable({address:"",abi:"",functions:[]});const yakklContextTypeStore=writable(void 0);const yakklBookmarkedArticlesStore=writable([]);function resetStores(){try{setPreferencesStore(yakklPreferences);setSettingsStore(yakklSettings);setProfileStore(profile);setYakklCurrentlySelectedStore(yakklCurrentlySelected);setYakklWatchListStore(yakklWatchList);setYakklBlockedListStore(yakklBlockedList);setYakklContactsStore(yakklContacts);setYakklChatsStore(yakklChats);setYakklAccountsStore(yakklAccounts);setYakklPrimaryAccountsStore(yakklPrimaryAccounts);setYakklTokenDataStore([]);setYakklTokenDataCustomStore([]);setYakklCombinedTokenStore([]);setYakklWalletBlockchainsStore([]);setYakklWalletProvidersStore([]);setYakklConnectedDomainsStore([]);yakklMiscStore.set(void 0);yakklContextTypeStore.set(void 0);yakklVeryStore.set(void 0);yakklVersionStore.set(void 0);yakklUserNameStore.set(void 0);yakklPricingStore.set(void 0);yakklGasTransStore.set(void 0);yakklContactStore.set(void 0);yakklAccountStore.set(void 0);yakklWalletProvidersStore.set([]);yakklWalletBlockchainsStore.set([]);yakklTokenDataStore.set([]);yakklTokenDataCustomStore.set([]);yakklCombinedTokenStore.set([]);yakklInstancesStore.set([null,null,null,null]);yakklGPTRunningStore.set(false);yakklGPTKeyStore.set(void 0);yakklConnectionStore.set(true);yakklDappConnectRequestStore.set(null);wallet.set(null);yakklContractStore.set({address:"",abi:"",functions:[]});tokens.set([]);walletStore.set(null);priceStore.set(null)}catch(error){log$1.error(error);throw error}}function onError(e){log$1.error(e)}function storageChange(changes){try{if(changes.yakklPreferences){setPreferencesStore(changes.yakklPreferences.newValue)}if(changes.yakklSettings){setSettingsStore(changes.yakklSettings.newValue)}if(changes.profile){setProfileStore(changes.profile.newValue)}if(changes.yakklCurrentlySelected){setYakklCurrentlySelectedStore(changes.yakklCurrentlySelected.newValue)}if(changes.yakklWatchList){setYakklWatchListStore(changes.yakklWatchList.newValue)}if(changes.yakklAccounts){setYakklAccountsStore(changes.yakklAccounts.newValue)}if(changes.yakklPrimaryAccounts){setYakklPrimaryAccountsStore(changes.yakklPrimaryAccounts.newValue)}if(changes.yakklContacts){setYakklContactsStore(changes.yakklContacts.newValue)}if(changes.yakklChats){setYakklChatsStore(changes.yakklChats.newValue)}if(changes.yakklConnectedDomains){setYakklConnectedDomainsStore(changes.yakklConnectedDomains.newValue)}if(changes.yakklBlockedList){setYakklBlockedListStore(changes.yakklBlockedList.newValue)}}catch(error){log$1.error(error);throw error}}async function syncStorageToStore(){try{const[preferences,settings,profileLocal,yakklCurrentlySelectedLocal,yakklWatchList2,yakklBlockedList2,yakklAccounts2,yakklPrimaryAccounts2,yakklContacts2,yakklChats2,yakklTokenData,yakklTokenDataCustom,yakklConnectedDomains]=await Promise.all([getPreferences(),getSettings(),getProfile(),getYakklCurrentlySelected(),getYakklWatchList(),getYakklBlockedList(),getYakklAccounts(),getYakklPrimaryAccounts(),getYakklContacts(),getYakklChats(),getYakklTokenData(),getYakklTokenDataCustom(),getYakklConnectedDomains()]);setPreferencesStore(preferences??yakklPreferences);setSettingsStore(settings??yakklSettings);setProfileStore(profileLocal??profile);setYakklCurrentlySelectedStore(yakklCurrentlySelectedLocal??yakklCurrentlySelected);setYakklWatchListStore(yakklWatchList2);setYakklBlockedListStore(yakklBlockedList2);setYakklAccountsStore(yakklAccounts2);setYakklPrimaryAccountsStore(yakklPrimaryAccounts2);setYakklContactsStore(yakklContacts2);setYakklChatsStore(yakklChats2);setYakklTokenDataStore(yakklTokenData);setYakklTokenDataCustomStore(yakklTokenDataCustom);setYakklConnectedDomainsStore(yakklConnectedDomains)}catch(error){log$1.error("Error syncing stores:",false,error);throw error}}async function setSettings(settings){return await setSettingsStorage(settings)}function getYakklPreferenceStore(){const store=get(yakklPreferencesStore);return store}function getSettingsStore(){const store=get(yakklSettingsStore);return store}function getProfileStore(values){const store=get(profileStore);profileStore.set(values);return store}function getYakklCurrentlySelectedStore(){const store=get(yakklCurrentlySelectedStore);return store}function getYakklWatchListStore(){const store=get(yakklWatchListStore);return store}function getYakklBlockedListStore(){const store=get(yakklBlockedListStore);return store}function getYakklAccountsStore(){const store=get(yakklAccountsStore);return store}function getYakklPrimaryAccountsStore(){const store=get(yakklPrimaryAccountsStore);return store}function getYakklContactsStore(){const store=get(yakklContactsStore);return store}function getYakklTokenDataStore(){const store=get(yakklTokenDataStore);return store}function getYakklTokenDataCustomStore(){const store=get(yakklTokenDataCustomStore);return store}function getYakklCombinedTokenStore(){const store=get(yakklCombinedTokenStore);return store}function getYakklChatsStore(){const store=get(yakklChatsStore);return store}function getYakklWalletBlockchainsStore(){const store=get(yakklWalletBlockchainsStore);return store}function getYakklWalletProvidersStore(){const store=get(yakklWalletProvidersStore);return store}function getYakklConnectedDomainsStore(){const store=get(yakklConnectedDomainsStore);return store}function getYakklContractStore(){return get(yakklContractStore)}function getMiscStore(){const store=get(yakklMiscStore);return store}function getContextTypeStore(){const store=get(yakklContextTypeStore);return store}function getVeryStore(){const store=get(yakklVeryStore);return store}function getDappConnectRequestStore(){const store=get(yakklDappConnectRequestStore);return store}function getContactStore(){const store=get(yakklContactStore);return store}function getAccountStore(){const store=get(yakklAccountStore);return store}function getVersionStore(){const store=get(yakklVersionStore);return store}function getUserNameStore(){const store=get(yakklUserNameStore);return store}function getYakklGPTKeyStore(){const store=get(yakklGPTKeyStore);return store}function getYakklConnectionStore(){const store=get(yakklConnectionStore);return store}function getYakklInstancesStore(){const store=get(yakklInstancesStore);return store}function setPreferencesStore(values){const store=get(yakklPreferencesStore);yakklPreferencesStore.set(values===null?yakklPreferences:values);return store}function setSettingsStore(values){const store=get(yakklSettingsStore);yakklSettingsStore.set(values===null?yakklSettings:values);return store}function setProfileStore(values){const store=get(profileStore);profileStore.set(values===null?profile:values);return store}function setYakklCurrentlySelectedStore(values){const store=get(yakklCurrentlySelectedStore);yakklCurrentlySelectedStore.set(values!==null?values:null);return store}function setYakklWatchListStore(values){const store=get(yakklWatchListStore);yakklWatchListStore.set(values);return store}function setYakklBlockedListStore(values){const store=get(yakklBlockedListStore);yakklBlockedListStore.set(values);return store}function setYakklContactsStore(values){const store=get(yakklContactsStore);yakklContactsStore.set(values);return store}function setYakklTokenDataStore(values){const store=get(yakklTokenDataStore);yakklTokenDataStore.set(values);return store}function setYakklTokenDataCustomStore(values){const store=get(yakklTokenDataCustomStore);yakklTokenDataCustomStore.set(values);return store}function setYakklCombinedTokenStore(values){const store=get(yakklCombinedTokenStore);yakklCombinedTokenStore.set(values);return store}function setYakklChatsStore(values){const store=get(yakklChatsStore);yakklChatsStore.set(values);return store}function setYakklWalletBlockchainsStore(values){const store=get(yakklWalletBlockchainsStore);yakklWalletBlockchainsStore.set(values);return store}function setYakklWalletProvidersStore(values){const store=get(yakklWalletProvidersStore);yakklWalletProvidersStore.set(values);return store}function setYakklConnectedDomainsStore(values){const store=get(yakklConnectedDomainsStore);yakklConnectedDomainsStore.set(values);return store}function setYakklAccountsStore(values){const store=get(yakklAccountsStore);yakklAccountsStore.set(values);return store}function setYakklPrimaryAccountsStore(values){const store=get(yakklPrimaryAccountsStore);yakklPrimaryAccountsStore.set(values);return store}function setMiscStore(values){const store=get(yakklMiscStore);yakklMiscStore.set(values);return store}function setContextTypeStore(values){const store=get(yakklContextTypeStore);yakklContextTypeStore.set(values);return store}function setVeryStore(values){const store=get(yakklVeryStore);yakklVeryStore.set(values);return store}function setDappConnectRequestStore(values){const store=get(yakklDappConnectRequestStore);yakklDappConnectRequestStore.set(values);return store}function setContactStore(values){const store=get(yakklContactStore);yakklContactStore.set(values);return store}function setAccountStore(values){const store=get(yakklAccountStore);yakklAccountStore.set(values);return store}function setVersionStore(values){const store=get(yakklVersionStore);yakklVersionStore.set(values);return store}function setUserNameStore(values){const store=get(yakklUserNameStore);yakklUserNameStore.set(values);return store}function setYakklGPTKeyStore(values){const store=get(yakklGPTKeyStore);yakklGPTKeyStore.set(values);return store}function setYakklConnectionStore(values){const store=get(yakklConnectionStore);yakklConnectionStore.set(values);return store}function setYakklContractStore(values){const store=get(yakklContractStore);yakklContractStore.set(values);return store}function setYakklInstancesStore(values){const store=get(yakklInstancesStore);yakklInstancesStore.set(values);return store}async function getYakklRegisteredData(id2,persona){try{const value=await getObjectFromLocalStorage(STORAGE_YAKKL_REGISTERED_DATA);if(typeof value==="string"){throw new Error("Unexpected string value received from local storage")}if(id2&&persona){}return value||null}catch(error){log$1.error("Error in getYakklRegisteredData:",false,error);throw error}}async function getYakklContacts(id2,persona){try{const value=await getObjectFromLocalStorage(STORAGE_YAKKL_CONTACTS);if(typeof value==="string"){throw new Error("Unexpected string value received from local storage")}if(id2&&persona){}return value||[]}catch(error){log$1.error("Error in getYakklContacts:",false,error);throw error}}async function getYakklTokenData(id2,persona){try{const value=await getObjectFromLocalStorage(STORAGE_YAKKL_TOKENDATA);if(typeof value==="string"){throw new Error("Unexpected string value received from local storage")}if(id2&&persona){}if(value)setYakklTokenDataStore(value);return value||[]}catch(error){log$1.error("Error in getYakklTokenData:",false,error);throw error}}async function getYakklTokenDataCustom(id2,persona){try{const value=await getObjectFromLocalStorage(STORAGE_YAKKL_TOKENDATA_CUSTOM);if(typeof value==="string"){throw new Error("Unexpected string value received from local storage")}if(id2&&persona){}if(value)setYakklTokenDataCustomStore(value);return value||[]}catch(error){log$1.error("Error in getYakklTokenDataCustom:",false,error);throw error}}async function getYakklCombinedToken(id2,persona){try{const value=await getObjectFromLocalStorage(STORAGE_YAKKL_COMBINED_TOKENS);if(typeof value==="string"){throw new Error("Unexpected string value received from local storage")}if(id2&&persona){}if(value)setYakklCombinedTokenStore(value);return value||[]}catch(error){log$1.error("Error in getYakklCombinedToken:",false,error);throw error}}async function getYakklChats(id2,persona){try{let value=await getObjectFromLocalStorage(STORAGE_YAKKL_CHATS);if(typeof value==="string"){value=[];setYakklChatsStorage(value)}if(id2&&persona){}if(value&&typeof value==="object"&&!Array.isArray(value)){value=Object.values(value)}return value||[]}catch(error){log$1.error("Error in getYakklChats:",false,error);return[]}}async function getYakklWalletBlockchains(){try{let value=await getObjectFromLocalStorage(STORAGE_YAKKL_WALLET_BLOCKCHAINS);if(typeof value==="string"){value=[];setYakklWalletBlockchainsStorage(value)}return value||[]}catch(error){log$1.error("Error in getYakklWalletBlockchains:",false,error);throw error}}async function getYakklWalletProviders(){try{let value=await getObjectFromLocalStorage(STORAGE_YAKKL_WALLET_PROVIDERS);if(typeof value==="string"){value=[];setYakklWalletProvidersStorage(value)}return value||[]}catch(error){log$1.error("Error in getYakklWalletProviders:",false,error);throw error}}async function getYakklConnectedDomains(id2,persona){try{const value=await getObjectFromLocalStorage(STORAGE_YAKKL_CONNECTED_DOMAINS);log$1.info("getYakklConnectedDomains - value:",false,value);if(typeof value==="string"){throw new Error("Unexpected string value received from local storage")}if(id2&&persona){return value.filter(d=>d.id===id2&&d.persona===persona)||[]}return value||[]}catch(error){log$1.error("Error in getYakklConnectedDomains:",false,error);throw error}}async function getPreferences(id2,persona){try{const value=await getObjectFromLocalStorage(STORAGE_YAKKL_PREFERENCES);if(typeof value==="string"){throw new Error("Unexpected string value received from local storage")}if(id2&&persona){}return value}catch(error){log$1.error("Error in getPreferences:",false,error);throw error}}async function getSettings(id2,persona){try{const value=await getObjectFromLocalStorage(STORAGE_YAKKL_SETTINGS);if(typeof value==="string"){throw new Error("Unexpected string value received from local storage")}if(id2&&persona){}return value}catch(error){log$1.error("Error in getSettings:",false,error);throw error}}async function getProfile(id2,persona){try{const value=await getObjectFromLocalStorage(STORAGE_YAKKL_PROFILE);if(typeof value==="string"){throw new Error("Unexpected string value received from local storage")}if(id2&&persona){}return value}catch(error){log$1.error("Error in getProfile:",false,error);throw error}}async function getYakklCurrentlySelected(id2,persona){try{const value=await getObjectFromLocalStorage(STORAGE_YAKKL_CURRENTLY_SELECTED);if(id2&&persona){}if(!value||typeof value==="string"){log$1.warn("No currently selected Yakkl found, using defaults",false,value);return{id:"",shortcuts:{quantity:0n,accountType:AccountTypeCategory.PRIMARY,accountName:"YAKKL_ZERO_ACCOUNT",smartContract:false,address:"",alias:"",primary:null,init:false,legal:false,isLocked:true,showTestNetworks:false,profile:{userName:"",name:null,email:""},gasLimit:21e3,networks:[{blockchain:"Ethereum",name:"Mainnet",chainId:1,symbol:"ETH",type:NetworkType.MAINNET,explorer:"https://etherscan.io",decimals:18}],network:{blockchain:"Ethereum",name:"Mainnet",chainId:1,symbol:"ETH",type:NetworkType.MAINNET,explorer:"https://etherscan.io",decimals:18},blockchain:"Ethereum",type:NetworkType.MAINNET,chainId:1,symbol:"ETH",explorer:"https://etherscan.io"},preferences:{locale:"en_US",currency:{code:"USD",symbol:"$"}},data:{},version:"1.0.0",createDate:(new Date).toISOString(),updateDate:(new Date).toISOString()}}return value}catch(error){log$1.error("Error in getYakklCurrentlySelected:",false,error);throw error}}async function getYakklWatchList(id2,persona){try{const value=await getObjectFromLocalStorage(STORAGE_YAKKL_WATCHLIST);if(typeof value==="string"){throw new Error("Unexpected string value received from local storage")}if(id2&&persona){}return value||[]}catch(error){log$1.error("Error in getYakklWatchList:",false,error);throw error}}async function getYakklBlockedList(id2,persona){try{const value=await getObjectFromLocalStorage(STORAGE_YAKKL_BLOCKEDLIST);if(typeof value==="string"){throw new Error("Unexpected string value received from local storage")}if(id2&&persona){}return value||[]}catch(error){log$1.error("Error in getYakklBlockedList:",false,error);throw error}}async function getYakklAccounts(id2,persona){try{const value=await getObjectFromLocalStorage(STORAGE_YAKKL_ACCOUNTS);if(typeof value==="string"){throw new Error("Unexpected string value received from local storage")}if(id2&&persona){}return value||[]}catch(error){log$1.error("Error in getYakklAccounts:",false,error);throw error}}async function getYakklPrimaryAccounts(id2,persona){try{const value=await getObjectFromLocalStorage(STORAGE_YAKKL_PRIMARY_ACCOUNTS);if(typeof value==="string"){throw new Error("Unexpected string value received from local storage")}if(id2&&persona){}return value||[]}catch(error){log$1.error("Error in getYakklPrimaryAccounts:",false,error);throw error}}async function setYakklContactsStorage(values){try{yakklContactsStore.set(values);await setObjectInLocalStorage("yakklContacts",values)}catch(error){log$1.error("Error in setYakklContactsStorage:",false,error);throw error}}async function setYakklTokenDataStorage(values){try{yakklTokenDataStore.set(values);await setObjectInLocalStorage("yakklTokenData",values)}catch(error){log$1.error("Error in setYakklTokenDataStorage:",false,error);throw error}}async function setYakklTokenDataCustomStorage(values){try{yakklTokenDataCustomStore.set(values);await setObjectInLocalStorage("yakklTokenDataCustom",values)}catch(error){log$1.error("Error in setYakklTokenDataCustomStorage:",false,error);throw error}}async function setYakklCombinedTokenStorage(values){try{yakklCombinedTokenStore.set(values);await setObjectInLocalStorage("yakklCombinedTokens",values)}catch(error){log$1.error("Error in setYakklCombinedTokenStorage:",false,error);throw error}}async function setYakklChatsStorage(values){try{yakklChatsStore.set(values);await setObjectInLocalStorage("yakklChats",values)}catch(error){log$1.error("Error in setYakklChatsStorage:",false,error);throw error}}async function setYakklWalletBlockchainsStorage(values){try{yakklWalletBlockchainsStore.set(values);await setObjectInLocalStorage("yakklWalletBlockchains",values)}catch(error){log$1.error("Error in setYakklWalletBlockchainsStorage:",false,error);throw error}}async function setYakklWalletProvidersStorage(values){try{yakklWalletProvidersStore.set(values);await setObjectInLocalStorage("yakklWalletProviders",values)}catch(error){log$1.error("Error in setYakklWalletProvidersStorage:",false,error);throw error}}async function setYakklConnectedDomainsStorage(values){try{const current=get(yakklConnectedDomainsStore);if(!isEqual(current,values)){yakklConnectedDomainsStore.set(values);await setObjectInLocalStorage("yakklConnectedDomains",values)}}catch(error){log$1.error("Error in setYakklConnectedDomainsStorage:",false,error);throw error}}async function setSettingsStorage(values){try{yakklSettingsStore.set(values);await setObjectInLocalStorage("settings",values)}catch(error){log$1.error("Error in setSettingsStorage:",false,error);throw new Error("Error in setSettingsStorage: false",error)}}async function setPreferencesStorage(values){try{yakklPreferencesStore.set(values);await setObjectInLocalStorage("preferences",values)}catch(error){log$1.error("Error in setPreferencesStorage:",false,error);throw new Error("Error in setPreferencesStorage: false",error)}}async function setProfileStorage(values){try{profileStore.set(values);await setObjectInLocalStorage("profile",values)}catch(error){log$1.error("Error in setProfileStorage:",false,error);throw new Error("Error in setProfileStorage: false",error)}}async function setYakklCurrentlySelectedStorage(values){try{if(values.shortcuts.address.trim().length===0||values.shortcuts.accountName.trim().length===0){throw new Error("Attempting to save yakklCurrentlySelected with no address or no account name. Select a default account and retry.")}const newValues=await verifyEncryption(values);setYakklCurrentlySelectedStore(newValues);await setObjectInLocalStorage("yakklCurrentlySelected",newValues)}catch(error){log$1.error("Error in setYakklCurrentlySelectedStorage:",false,error);throw error}}async function setYakklWatchListStorage(values){try{yakklWatchListStore.set(values);await setObjectInLocalStorage("yakklWatchList",values)}catch(error){log$1.error("Error in setYakklWatchListStorage:",false,error);throw error}}async function setYakklBlockedListStorage(values){try{yakklBlockedListStore.set(values);await setObjectInLocalStorage("yakklBlockedList",values)}catch(error){log$1.error("Error in setYakklBlockedListStorage:",false,error);throw error}}async function setYakklAccountsStorage(values){try{const newValues=await verifyEncryption(values);yakklAccountsStore.set(newValues);await setObjectInLocalStorage("yakklAccounts",newValues)}catch(error){log$1.error("Error in setYakklAccountsStorage:",false,error);throw error}}async function setYakklPrimaryAccountsStorage(values){try{const newValues=await verifyEncryption(values);yakklPrimaryAccountsStore.set(newValues);await setObjectInLocalStorage("yakklPrimaryAccounts",newValues)}catch(error){log$1.error("Error in setYakklPrimaryAccountsStorage:",false,error);throw error}}async function updateYakklTokenData(updater){try{const currentData=get(yakklTokenDataStore);const updatedData=currentData.map(token=>updater(token));yakklTokenDataStore.set(updatedData);await setObjectInLocalStorage("yakklTokenData",updatedData)}catch(error){log$1.error("Error updating token data:",false,error);throw error}}async function updateYakklTokenDataCustom(updater){try{const currentData=get(yakklTokenDataCustomStore);const updatedData=currentData.map(token=>updater(token));yakklTokenDataCustomStore.set(updatedData);await setObjectInLocalStorage("yakklTokenDataCustom",updatedData)}catch(error){log$1.error("Error updating custom token data:",false,error);throw error}}function updateCombinedTokenStore(){const combinedTokens=[...get(yakklTokenDataStore),...get(yakklTokenDataCustomStore)];yakklCombinedTokenStore.set(combinedTokens)}async function getYakklBookmarkedArticles(){try{const result=await getObjectFromLocalStorage("yakklBookmarkedArticles");const articles=result||[];yakklBookmarkedArticlesStore.set(articles);return articles}catch(error){console.error("Error getting bookmarked articles:",error);return[]}}async function setYakklBookmarkedArticles(articles){try{await setObjectInLocalStorage("yakklBookmarkedArticles",articles);yakklBookmarkedArticlesStore.set(articles)}catch(error){console.error("Error setting bookmarked articles:",error)}}getYakklBookmarkedArticles().then(articles=>{yakklBookmarkedArticlesStore.set(articles)});const stores=Object.freeze(Object.defineProperty({__proto__:null,activeTabBackgroundStore:activeTabBackgroundStore,activeTabUIStore:activeTabUIStore,alert:alert,backgroundUIConnectedStore:backgroundUIConnectedStore,getAccountStore:getAccountStore,getContactStore:getContactStore,getContextTypeStore:getContextTypeStore,getDappConnectRequestStore:getDappConnectRequestStore,getMiscStore:getMiscStore,getPreferences:getPreferences,getProfile:getProfile,getProfileStore:getProfileStore,getSettings:getSettings,getSettingsStore:getSettingsStore,getUserNameStore:getUserNameStore,getVersionStore:getVersionStore,getVeryStore:getVeryStore,getYakklAccounts:getYakklAccounts,getYakklAccountsStore:getYakklAccountsStore,getYakklBlockedList:getYakklBlockedList,getYakklBlockedListStore:getYakklBlockedListStore,getYakklBookmarkedArticles:getYakklBookmarkedArticles,getYakklChats:getYakklChats,getYakklChatsStore:getYakklChatsStore,getYakklCombinedToken:getYakklCombinedToken,getYakklCombinedTokenStore:getYakklCombinedTokenStore,getYakklConnectedDomains:getYakklConnectedDomains,getYakklConnectedDomainsStore:getYakklConnectedDomainsStore,getYakklConnectionStore:getYakklConnectionStore,getYakklContacts:getYakklContacts,getYakklContactsStore:getYakklContactsStore,getYakklContractStore:getYakklContractStore,getYakklCurrentlySelected:getYakklCurrentlySelected,getYakklCurrentlySelectedStore:getYakklCurrentlySelectedStore,getYakklGPTKeyStore:getYakklGPTKeyStore,getYakklInstancesStore:getYakklInstancesStore,getYakklPreferenceStore:getYakklPreferenceStore,getYakklPrimaryAccounts:getYakklPrimaryAccounts,getYakklPrimaryAccountsStore:getYakklPrimaryAccountsStore,getYakklRegisteredData:getYakklRegisteredData,getYakklTokenData:getYakklTokenData,getYakklTokenDataCustom:getYakklTokenDataCustom,getYakklTokenDataCustomStore:getYakklTokenDataCustomStore,getYakklTokenDataStore:getYakklTokenDataStore,getYakklWalletBlockchains:getYakklWalletBlockchains,getYakklWalletBlockchainsStore:getYakklWalletBlockchainsStore,getYakklWalletProviders:getYakklWalletProviders,getYakklWalletProvidersStore:getYakklWalletProvidersStore,getYakklWatchList:getYakklWatchList,getYakklWatchListStore:getYakklWatchListStore,loadCheckCurrentlySelectedStore:loadCheckCurrentlySelectedStore,onError:onError,prerender:prerender,priceStore:priceStore,profileStore:profileStore,resetStores:resetStores,sessionInitialized:sessionInitialized,setAccountStore:setAccountStore,setContactStore:setContactStore,setContextTypeStore:setContextTypeStore,setDappConnectRequestStore:setDappConnectRequestStore,setMiscStore:setMiscStore,setPreferencesStorage:setPreferencesStorage,setPreferencesStore:setPreferencesStore,setProfileStorage:setProfileStorage,setProfileStore:setProfileStore,setSettings:setSettings,setSettingsStorage:setSettingsStorage,setSettingsStore:setSettingsStore,setUserNameStore:setUserNameStore,setVersionStore:setVersionStore,setVeryStore:setVeryStore,setYakklAccountsStorage:setYakklAccountsStorage,setYakklAccountsStore:setYakklAccountsStore,setYakklBlockedListStorage:setYakklBlockedListStorage,setYakklBlockedListStore:setYakklBlockedListStore,setYakklBookmarkedArticles:setYakklBookmarkedArticles,setYakklChatsStorage:setYakklChatsStorage,setYakklChatsStore:setYakklChatsStore,setYakklCombinedTokenStorage:setYakklCombinedTokenStorage,setYakklCombinedTokenStore:setYakklCombinedTokenStore,setYakklConnectedDomainsStorage:setYakklConnectedDomainsStorage,setYakklConnectedDomainsStore:setYakklConnectedDomainsStore,setYakklConnectionStore:setYakklConnectionStore,setYakklContactsStorage:setYakklContactsStorage,setYakklContactsStore:setYakklContactsStore,setYakklContractStore:setYakklContractStore,setYakklCurrentlySelectedStorage:setYakklCurrentlySelectedStorage,setYakklCurrentlySelectedStore:setYakklCurrentlySelectedStore,setYakklGPTKeyStore:setYakklGPTKeyStore,setYakklInstancesStore:setYakklInstancesStore,setYakklPrimaryAccountsStorage:setYakklPrimaryAccountsStorage,setYakklPrimaryAccountsStore:setYakklPrimaryAccountsStore,setYakklTokenDataCustomStorage:setYakklTokenDataCustomStorage,setYakklTokenDataCustomStore:setYakklTokenDataCustomStore,setYakklTokenDataStorage:setYakklTokenDataStorage,setYakklTokenDataStore:setYakklTokenDataStore,setYakklWalletBlockchainsStorage:setYakklWalletBlockchainsStorage,setYakklWalletBlockchainsStore:setYakklWalletBlockchainsStore,setYakklWalletProvidersStorage:setYakklWalletProvidersStorage,setYakklWalletProvidersStore:setYakklWalletProvidersStore,setYakklWatchListStorage:setYakklWatchListStorage,setYakklWatchListStore:setYakklWatchListStore,storageChange:storageChange,syncStorageToStore:syncStorageToStore,updateCombinedTokenStore:updateCombinedTokenStore,updateYakklTokenData:updateYakklTokenData,updateYakklTokenDataCustom:updateYakklTokenDataCustom,verifyEncryption:verifyEncryption,wallet:wallet,yakklAccountStore:yakklAccountStore,yakklAccountsStore:yakklAccountsStore,yakklBlockedListStore:yakklBlockedListStore,yakklBookmarkedArticlesStore:yakklBookmarkedArticlesStore,yakklChatsStore:yakklChatsStore,yakklCombinedTokenStore:yakklCombinedTokenStore,yakklConnectedDomainsStore:yakklConnectedDomainsStore,yakklConnectionStore:yakklConnectionStore,yakklContactStore:yakklContactStore,yakklContactsStore:yakklContactsStore,yakklContextTypeStore:yakklContextTypeStore,yakklContractStore:yakklContractStore,yakklCurrentlySelectedStore:yakklCurrentlySelectedStore,yakklDappConnectRequestStore:yakklDappConnectRequestStore,yakklGPTKeyStore:yakklGPTKeyStore,yakklGPTRunningStore:yakklGPTRunningStore,yakklGasTransStore:yakklGasTransStore,yakklInstancesStore:yakklInstancesStore,yakklMiscStore:yakklMiscStore,yakklPreferencesStore:yakklPreferencesStore,yakklPricingStore:yakklPricingStore,yakklPrimaryAccountsStore:yakklPrimaryAccountsStore,yakklSettingsStore:yakklSettingsStore,yakklTokenDataCustomStore:yakklTokenDataCustomStore,yakklTokenDataStore:yakklTokenDataStore,yakklUserNameStore:yakklUserNameStore,yakklVersionStore:yakklVersionStore,yakklVeryStore:yakklVeryStore,yakklWalletBlockchainsStore:yakklWalletBlockchainsStore,yakklWalletProvidersStore:yakklWalletProvidersStore,yakklWatchListStore:yakklWatchListStore},Symbol.toStringTag,{value:"Module"}));export{yakklPricingStore as $,AccessSourceType as A,setMiscStore as B,getYakklCurrentlySelected as C,DEFAULT_POPUP_HEIGHT as D,getContextTypeStore as E,walletStore as F,isProfileData as G,yakklMiscStore as H,Wallet$1 as I,YEAR as J,PATH_LEGAL as K,PATH_REGISTER as L,PATH_ACCOUNTS_ETHEREUM_CREATE_PRIMARY as M,NUM_OF_SPLASH_IMAGES as N,YAKKL_ZERO_ADDRESS as O,PATH_LOGIN as P,PATH_ACCOUNTS_ETHEREUM_CREATE_DERIVED as Q,encryptData as R,PromoClassificationType as S,TIMER_CHECK_GAS_PRICE_INTERVAL_TIME as T,ETH_BASE_SCA_GAS_UNITS as U,VERSION$3 as V,Wallet3 as W,ETH_BASE_EOA_GAS_UNITS as X,YAKKL_DAPP as Y,yakklCurrentlySelectedStore as Z,__vitePreload as _,DEFAULT_POPUP_WIDTH as a,getYakklTokenData as a$,BigNumber$2 as a0,EthereumBigNumber as a1,toHex$3 as a2,EOA_FALLBACK_GAS as a3,parseJsonRpcError as a4,yakklContactsStore as a5,getYakklContacts as a6,Ethereum as a7,yakklSettingsStore as a8,getObjectFromLocalStorage as a9,isMetaData as aA,isString$1 as aB,randomBytes$2 as aC,Mnemonic as aD,DEFAULT_PERSONA as aE,yakklRegisteredData as aF,setYakklContactsStorage as aG,yakklPreferencesStore as aH,setPreferencesStorage as aI,yakklChatsStore as aJ,setYakklChatsStorage as aK,yakklAccountsStore as aL,yakklPrimaryAccountsStore as aM,yakklWatchListStore as aN,setYakklWatchListStorage as aO,yakklBlockedListStore as aP,setYakklBlockedListStorage as aQ,setYakklConnectedDomainsStorage as aR,setYakklTokenDataStorage as aS,yakklWalletProvidersStore as aT,setYakklWalletProvidersStorage as aU,yakklWalletBlockchainsStore as aV,setYakklWalletBlockchainsStorage as aW,getPreferences as aX,getYakklChats as aY,getYakklWatchList as aZ,getYakklBlockedList as a_,STORAGE_YAKKL_SETTINGS as aa,dateString as ab,setObjectInLocalStorage as ac,STORAGE_YAKKL_CURRENTLY_SELECTED as ad,PATH_WELCOME as ae,setYakklTokenDataCustomStorage as af,resetStores as ag,yakklTokenDataCustomStore as ah,yakklTokenDataStore as ai,yakklCombinedTokenStore as aj,setYakklCurrentlySelectedStorage as ak,profileStore as al,setProfileStorage as am,DEFAULT_TITLE as an,getYakklConnectedDomains as ao,fetchJson as ap,CoinbasePriceProvider as aq,TIMER_CHECK_PRICE_INTERVAL_TIME as ar,TIMER_TOKEN_PRICE_CYCLE_TIME as as,setYakklCombinedTokenStorage as at,DEFAULT_DERIVED_PATH_ETH as au,HDNodeWallet as av,AccountTypeCategory as aw,setYakklPrimaryAccountsStorage as ax,NetworkType as ay,setYakklAccountsStorage as az,yakklDappConnectRequestStore as b,arrayify as b$,getYakklTokenDataCustom as b0,getYakklCombinedToken as b1,getYakklWalletProviders as b2,getYakklWalletBlockchains as b3,STORAGE_YAKKL_CONNECTED_DOMAINS as b4,STORAGE_YAKKL_ACCOUNTS as b5,YAKKL_INTERNAL as b6,activeTabUIStore as b7,FOUNDING_MEMBER_DEADLINE as b8,EARLY_ADOPTER_DEADLINES as b9,ALCHEMY_EVENT_TYPES as bA,DEFAULT_ALCHEMY_API_KEY as bB,ALCHEMY_PENDING_TRANSACTIONS_EVENT_TYPE as bC,AlchemySubscription as bD,ALCHEMY_MINED_TRANSACTIONS_EVENT_TYPE as bE,fromHex as bF,toHex as bG,TIMER_PRICE_INTERVAL_TIME as bH,priceStore as bI,formatDate as bJ,TokenService as bK,SystemTheme as bL,parseEther as bM,id$2 as bN,AbiCoder as bO,formatEther$1 as bP,isAddress as bQ,arrayify$1 as bR,toUtf8CodePoints as bS,keccak256$1 as bT,concat as bU,hexlify as bV,version$n as bW,toUtf8Bytes as bX,BigNumber$1 as bY,getAddress$1 as bZ,hexDataLength as b_,yakklAccount as ba,encodeJSON$1 as bb,formatEther as bc,YAKKL_FEE_BASIS_POINTS_DIVISOR as bd,TIMELINES as be,loadTokens as bf,setContextTypeStore as bg,requireDist as bh,yakklVersionStore as bi,profile as bj,YAKKL_ZERO_ACCOUNT_NAME as bk,yakklCurrentlySelected as bl,yakklSettings as bm,yakklPreferences as bn,Logger$3 as bo,defineReadOnly$1 as bp,BigNumber3 as bq,VERSION as br,EthersNetwork as bs,__awaiter$1$1 as bt,noop as bu,CustomNetworks as bv,isAlchemyEvent as bw,verifyAlchemyEventName as bx,EthersEvent as by,getAlchemyEventTag as bz,syncStorageToStore as c,YAKKL_GAS_ESTIMATE_MULTIHOP_SWAP_DEFAULT as c$,decode$1 as c0,hexZeroPad as c1,encode$4 as c2,recoverPublicKey as c3,computePublicKey as c4,hexDataSlice as c5,splitSignature as c6,stripZeros as c7,hexConcat as c8,hash as c9,concat$2 as cA,getBytes as cB,toUtf8Bytes$1 as cC,getAddress$2 as cD,toTwos as cE,zeroPadValue as cF,toBeArray as cG,dataLength as cH,zeroPadBytes as cI,JsonRpcProvider as cJ,Network$1 as cK,defineProperties as cL,resolveProperties$2 as cM,assert$7 as cN,FetchRequest as cO,isObjectLike as cP,baseGetTag as cQ,isObject as cR,root as cS,sortedTokens as cT,toBigInt$1 as cU,YAKKL_FEE_BASIS_POINTS as cV,ABIs as cW,Contract as cX,ADDRESSES as cY,ZeroAddress as cZ,YAKKL_GAS_ESTIMATE_MIN_USD as c_,shallowCopy as ca,isHexString as cb,getContractAddress as cc,hexValue as cd,Provider as ce,getStatic as cf,poll as cg,resolveProperties$1 as ch,toUtf8String as ci,ForkEvent as cj,deepCopy$1 as ck,checkProperties as cl,Signer2 as cm,TypedDataEncoder as cn,DEFAULT_NETWORK as co,Network as cp,getAlchemyHttpUrl as cq,getAlchemyWsUrl as cr,IS_BROWSER as cs,logWarn as ct,deepCopy as cu,sessionInitialized as cv,PATH_ACCOUNTS as cw,PATH_SECURITY as cx,assertArgument as cy,hexlify$2 as cz,PATH_DAPP_ACCOUNTS as d,YAKKL_GAS_ESTIMATE_MULTIPLIER_BASIS_POINTS as d0,EthersConverter as d1,safeConvertToBigInt as d2,TIMER_SWAP_FETCH_PRICES_TIME as d3,ETH_BASE_SWAP_GAS_UNITS as d4,yakklBookmarkedArticlesStore as d5,setYakklBookmarkedArticles as d6,updateCombinedTokenStore as d7,requireInherits_browser as d8,MessageType as d9,getYakklGPTKeyStore as da,yakklGPTRunningStore as db,yakklGPTKeyStore as dc,formatTimestamp as dd,PATH_ETHEREUM_TRANSACTIONS_SEND as de,loggerWrapper as df,stores as dg,yakklConnectedDomainsStore as e,YAKKL_SPLASH as f,getSettings as g,getMiscStore as h,PATH_LOGOUT as i,TIMER_GAS_PRICE_CHECK as j,yakklConnectionStore as k,log as l,yakklGasTransStore as m,PlanType as n,getYakklAccounts as o,getYakklPrimaryAccounts as p,PRO_ELIGIBLE_PROMO_TYPES as q,formatUnits$1 as r,setSettings as s,parseUnits$1 as t,setSettingsStorage as u,getProfile as v,digestMessage as w,isEncryptedData as x,yakklUserNameStore as y,decryptData as z};
//# sourceMappingURL=Cb2naUpm.js.map
