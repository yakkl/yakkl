import{c as check_target,l as legacy_api}from"./BXFaAXnq.js";import{p as push,h as tag,o as onMount,f as first_child,t as template_effect,a as pop,e as set,i as state,g as get,s as sibling,c as child,F as FILENAME,r as reset,j as next,b as strict_equals}from"./BaS8d5lg.js";import{a as assign}from"./CbeU9pgp.js";import{a as add_locations}from"./3AhEABF_.js";import{s as set_text}from"./Cmwrv3PW.js";import{c as create_ownership_validator}from"./COgMMZ9C.js";import{i as if_block}from"./Q1yPWpQ-.js";import{e as each,i as index}from"./DraJ8LN-.js";import{a as append,f as from_html}from"./Cm3jf07C.js";import{w as wrap_snippet}from"./d5hrMixo.js";import{s as set_attribute,r as remove_input_defaults,b as bind_select_value}from"./DTBsVM-c.js";import{s as set_class}from"./DX_EEhpR.js";import{d as delegate,e as event,b as apply}from"./DiU70Is3.js";import{a as bind_checked}from"./B6q982nR.js";import{p as prop}from"./BYboeQtC.js";import{s as setup_stores,a as store_get}from"./CViNpZsE.js";import{v as validate_store}from"./Dv9a3G0k.js";import{b as browserSvelte}from"./CgCfpVku.js";import{c as createForm}from"./CEKklR__.js";import"./Doq7snb5.js";import{c as create$3,a as create$6}from"./B4Ku5_Cd.js";import{au as DEFAULT_DERIVED_PATH_ETH,av as HDNodeWallet,V as VERSION,ab as dateString,aw as AccountTypeCategory,R as encryptData,v as getProfile,ax as setYakklPrimaryAccountsStorage,am as setProfileStorage,g as getSettings,x as isEncryptedData,z as decryptData,aD as Mnemonic,p as getYakklPrimaryAccounts,o as getYakklAccounts,az as setYakklAccountsStorage,u as setSettingsStorage,aE as DEFAULT_PERSONA,ak as setYakklCurrentlySelectedStorage,H as yakklMiscStore,n as PlanType}from"./Cb2naUpm.js";import{l as log}from"./WDN37msH.js";import{b as addressExist}from"./BgnL0Zd7.js";import"./z-nmOEXa.js";import{k as incrementProperty,d as deepCopy,j as getSymbol}from"./CnIbzB-6.js";import{g as getWallet}from"./Bsa3XR3h.js";import"./Dw28gLPr.js";import"./D-aJ6pD4.js";import{P as PincodeVerify}from"./Fc_LhyTR.js";import{M as Modal}from"./UU1vCwIM.js";import{s as shouldShowProFeatures}from"./lYZBmhZM.js";import{S as SimpleTooltip}from"./De3JWpHf.js";ImportPhrase[FILENAME]="src/lib/components/ImportPhrase.svelte";function handleSubaccounts(__1,subAccounts){set(subAccounts,!get(subAccounts))}var root_2$1=add_locations(from_html(`<div class="flex items-center"><span class="w-8 text-sm text-gray-700 dark:text-gray-200"></span> <input type="password" class="flex-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"/></div>`),ImportPhrase[FILENAME],[[464,7,[[465,8],[466,8]]]]);var root_3$1=add_locations(from_html(`<p class="mt-4 text-sm text-red-600"> </p>`),ImportPhrase[FILENAME],[[521,4]]);var root_1$1=add_locations(from_html(`<div class="p-6 text-gray-700 dark:text-gray-200"><p class="text-sm text-red-500 mb-4">Please be careful! <strong>This Secret Recovery Phrase is important!</strong> A bad actor could take the content of your wallet if they have access to your Private Key or\n\t\t\t\tSecret Recovery Phrase! This process will restore all of the accounts that were created by YAKKL\n\t\t\t\tonly! If you imported existing private keys from another wallet then you will need to do so again.</p> <form class="space-y-4"><div><label for="words" class="block text-sm font-medium text-gray-700 dark:text-gray-200">Secret Recovery Phrase Length</label> <select id="words" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"><option>12 Word Secret Phrase</option><option>15 Word Secret Phrase</option><option>18 Word Secret Phrase</option><option>21 Word Secret Phrase</option><option selected>24 Word Secret Phrase</option></select></div> <div><label class="block text-sm font-medium text-gray-700 dark:text-gray-200">Secret Recovery Phrase Words</label> <div class="mt-1 grid grid-cols-2 gap-2"></div></div> <div class="flex items-center"><input type="checkbox" id="showWords" class="h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded"/> <label for="showWords" class="ml-2 block text-sm text-gray-700 dark:text-gray-200">Show Secret Recovery Phrase Words</label></div> <div class="flex items-center"><input type="checkbox" id="subaccounts" class="h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded"/> <label for="subaccounts" class="ml-2 block text-sm text-gray-700 dark:text-gray-200">Recover Subportfolio Accounts</label></div> <div class="pt-5"><div class="flex justify-end space-x-4"><button type="button" class="rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">Cancel</button> <button type="button" class="rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">Reset</button> <button type="submit" class="rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">Import</button></div></div></form> <!></div>`),ImportPhrase[FILENAME],[[432,2,[[433,3,[[434,23]]],[439,3,[[440,4,[[441,5],[444,5,[[450,6],[451,6],[452,6],[453,6],[454,6]]]]],[457,4,[[459,5],[462,5]]],[477,4,[[478,5],[484,5]]],[488,4,[[489,5],[496,5]]],[500,4,[[501,5,[[502,6],[507,6],[512,6]]]]]]]]]]);var root$1=add_locations(from_html(`<!> <div><!></div>`,1),ImportPhrase[FILENAME],[[430,0]]);function ImportPhrase($$anchor,$$props){check_target(new.target);push($$props,true,ImportPhrase);var $$ownership_validator=create_ownership_validator($$props);const[$$stores,$$cleanup]=setup_stores();const $yakklMiscStore=()=>(validate_store(yakklMiscStore,"yakklMiscStore"),store_get(yakklMiscStore,"$yakklMiscStore",$$stores));let show=prop($$props,"show",15,false),className=prop($$props,"className",3,"text-gray-600 z-[999]"),onComplete=prop($$props,"onComplete",3,()=>{set(showPincodeModal,false);show(false)}),onCancel=prop($$props,"onCancel",11,()=>{set(showPincodeModal,false);show(false)});let currentlySelected;let error=tag(state(""),"error");let elements;let selected=tag(state("24"),"selected");let subAccounts=tag(state(true),"subAccounts");let showPincodeModal=tag(state(false),"showPincodeModal");let index$1=0;async function processSecretPhraseRecovery(secretPhrase){if(browserSvelte){try{const selectedWords=secretPhrase.split(" ").slice(0,parseInt(get(selected)));const yakklPrimaryAccount=await createPortfolioAccount(selectedWords.join(" "));onComplete()();if(get(subAccounts)){let derivedIndex=0;while(true){const dPath=`${DEFAULT_DERIVED_PATH_ETH}${index$1}'/0/${derivedIndex}`;const randomMnemonic=yakklPrimaryAccount.data.mnemonic;const ethWallet=HDNodeWallet.fromPhrase(randomMnemonic,dPath);const wallet=getWallet(ethWallet.privateKey);const balance=await wallet.getBalance();if(balance.isZero()){break}let addressDerived=wallet.address;incrementProperty(yakklPrimaryAccount,"subIndex");let yakklAccount={id:yakklPrimaryAccount.id,index:yakklPrimaryAccount.subIndex??0>0?(yakklPrimaryAccount.subIndex??1)-1:0,blockchain:currentlySelected.shortcuts.network.blockchain,smartContract:false,address:addressDerived,alias:"",accountType:AccountTypeCategory.SUB,name:`Account ${yakklPrimaryAccount.subIndex}`,description:"",primaryAccount:yakklPrimaryAccount,data:{extendedKey:ethWallet.extendedKey,privateKey:ethWallet.privateKey,publicKey:ethWallet.publicKey,publicKeyUncompressed:ethWallet.publicKey,path:dPath,pathIndex:ethWallet.index,fingerPrint:ethWallet.fingerprint,parentFingerPrint:ethWallet.parentFingerprint,chainCode:ethWallet.chainCode,assignedTo:[]},quantity:balance,class:"Default",level:"L1",isSigner:true,avatar:"",tags:[currentlySelected.shortcuts.network.blockchain,"sub"],includeInPortfolio:true,connectedDomains:[],createDate:dateString(),updateDate:dateString(),version:VERSION};let yakklAccountEnc=deepCopy(yakklAccount);await encryptData(yakklAccount.data,$yakklMiscStore()).then(result=>{yakklAccountEnc.data=result});if(yakklPrimaryAccount.subAccounts){yakklPrimaryAccount.subAccounts.push(yakklAccountEnc)}let profile=await getProfile();if(profile){profile.data.primaryAccounts=profile.data.primaryAccounts||[];profile.data.primaryAccounts[yakklPrimaryAccount.index]=yakklPrimaryAccount;await setYakklPrimaryAccountsStorage(profile.data.primaryAccounts);let profileEnc=deepCopy(profile);await encryptData(profile.data,$yakklMiscStore()).then(result=>{profileEnc.data=result});await setProfileStorage(profileEnc)}derivedIndex++}}show(false)}catch(e){set(error,`Your Wallet did not initialize for the following reason: ${e}`)}}}async function createPortfolioAccount(mnemonic){var _a,_b,_c,_d;try{if(browserSvelte){let yakklSettings=await getSettings();if(!yakklSettings){throw"The settings data has not been initialized. This could be due to not yet registered or data could be incomplete which requires registering again. If unable to re-register then uninstall and reinstall. No Ethereum data will be impacted."}let profile=await getProfile();if(!profile){throw"Profile was not found."}if(!profile.data||!$yakklMiscStore()){throw"Profile data does not appear to be encrypted. Please register or re-register. Thank you."}if(isEncryptedData(profile.data)){await decryptData(profile.data,$yakklMiscStore()).then(result=>{profile.data=result})}profile.data.meta={};let preferences=profile.preferences;index$1=profile.data.accountIndex??0;let derivedPath=`${DEFAULT_DERIVED_PATH_ETH}${index$1}'/0/0`;const mnemonicObject=Mnemonic.fromPhrase(mnemonic);const ethWallet=HDNodeWallet.fromMnemonic(mnemonicObject,derivedPath);const{exists:exists,table:table}=await addressExist(ethWallet.address);if(exists){throw`The Ethereum Wallet (Portfolio Account) was not able to be created. Address already exists in ${table}. Please try again.`}if(!ethWallet){throw"The Ethereum Wallet (Portfolio Account) was not able to be created. Please try again."}let currentDate=dateString();profile.data.accountIndex=index$1+1;let yakklAccount={id:profile.id,index:index$1,blockchain:currentlySelected.shortcuts.network.blockchain,smartContract:false,address:ethWallet.address,alias:"",accountType:AccountTypeCategory.PRIMARY,name:`Top Level Account ${index$1+1}`,description:"",primaryAccount:null,data:{extendedKey:ethWallet.extendedKey,privateKey:ethWallet.privateKey,publicKey:ethWallet.publicKey,publicKeyUncompressed:ethWallet.publicKey,path:ethWallet.path?ethWallet.path:derivedPath,pathIndex:index$1,fingerPrint:ethWallet.fingerprint,parentFingerPrint:ethWallet.parentFingerprint,chainCode:ethWallet.chainCode,assignedTo:[]},quantity:0n,class:"Default",level:"L1",isSigner:true,avatar:"",tags:[currentlySelected.shortcuts.network.blockchain,"primary"],includeInPortfolio:true,connectedDomains:[],createDate:currentDate,updateDate:currentDate,version:VERSION};let yakklPrimaryAccount={id:yakklAccount.id,name:yakklAccount.name,address:yakklAccount.address,quantity:yakklAccount.quantity,index:index$1,data:{privateKey:ethWallet.privateKey,publicKey:ethWallet.publicKey,path:ethWallet.path?ethWallet.path:derivedPath,pathIndex:index$1,fingerPrint:ethWallet.fingerprint,parentFingerPrint:ethWallet.parentFingerprint,chainCode:ethWallet.chainCode,extendedKey:ethWallet.extendedKey,mnemonic:(_a=ethWallet.mnemonic)==null?void 0:_a.phrase,entropy:void 0,password:(_b=ethWallet.mnemonic)==null?void 0:_b.password,publicKeyUncompressed:ethWallet.publicKey,wordCount:(_c=ethWallet.mnemonic)==null?void 0:_c.phrase.split(" ").length,wordListLocale:(_d=ethWallet.mnemonic)==null?void 0:_d.wordlist.locale},account:yakklAccount,subIndex:0,subAccounts:[],createDate:yakklAccount.createDate,updateDate:yakklAccount.updateDate,version:VERSION};let yakklPrimaryAccountEnc=deepCopy(yakklPrimaryAccount);await encryptData(yakklPrimaryAccount.data,$yakklMiscStore()).then(result=>{yakklPrimaryAccountEnc.data=result});yakklPrimaryAccountEnc.account=yakklAccount;await encryptData(yakklAccount.data,$yakklMiscStore()).then(result=>{yakklPrimaryAccountEnc.account.data=result});let yakklPrimaryAccounts=[];let primaryAccountsStorage=await getYakklPrimaryAccounts();if((primaryAccountsStorage==null?void 0:primaryAccountsStorage.length)>0){yakklPrimaryAccounts=primaryAccountsStorage}if(yakklPrimaryAccountEnc){yakklPrimaryAccounts.push(yakklPrimaryAccountEnc);await setYakklPrimaryAccountsStorage(yakklPrimaryAccounts)}let yakklAccounts=[];let accountsStorage=await getYakklAccounts();if((accountsStorage==null?void 0:accountsStorage.length)>0){yakklAccounts=accountsStorage}yakklPrimaryAccountEnc.account.primaryAccount=null;yakklAccounts.push(yakklPrimaryAccountEnc.account);await setYakklAccountsStorage(yakklAccounts);await ethWallet.signMessage($yakklMiscStore()).then(result=>{profile.data.sig=result});let profileEnc=deepCopy(profile);await encryptData(profileEnc.data,$yakklMiscStore()).then(result=>{profileEnc.data=result});if(profileEnc){await setProfileStorage(profileEnc);yakklSettings.init=assign(currentlySelected.shortcuts,"init",true,"src/​lib/​components/​ImportPhrase.svelte:265:29");yakklSettings.isLocked=assign(currentlySelected.shortcuts,"isLocked",false,"src/​lib/​components/​ImportPhrase.svelte:266:33");await setSettingsStorage(yakklSettings);let accountName=yakklAccount.name;let yakklCurrentlySelected=currentlySelected;yakklCurrentlySelected.version=VERSION;yakklCurrentlySelected.id=profile.id;yakklCurrentlySelected.persona=(profile==null?void 0:profile.persona)||DEFAULT_PERSONA;yakklCurrentlySelected.preferences.locale=preferences.locale;yakklCurrentlySelected.preferences.currency=preferences.currency;yakklCurrentlySelected.shortcuts.blockchain=yakklAccount.blockchain;yakklCurrentlySelected.shortcuts.symbol=getSymbol(yakklAccount.blockchain);yakklCurrentlySelected.shortcuts.isLocked=false;yakklCurrentlySelected.shortcuts.showTestNetworks=preferences.showTestNetworks;yakklCurrentlySelected.shortcuts.profile.name=profile.data.name;yakklCurrentlySelected.shortcuts.profile.email=profile.data.email;yakklCurrentlySelected.shortcuts.primary=yakklPrimaryAccountEnc;yakklCurrentlySelected.shortcuts.address=yakklAccount.address;yakklCurrentlySelected.shortcuts.accountName=accountName;yakklCurrentlySelected.shortcuts.accountType=AccountTypeCategory.PRIMARY;yakklCurrentlySelected.shortcuts.alias=yakklAccount.alias;yakklCurrentlySelected.shortcuts.smartContract=false;yakklCurrentlySelected.data.primaryAccount=yakklPrimaryAccountEnc;yakklCurrentlySelected.data.account=yakklAccount;yakklCurrentlySelected.createDate=yakklAccount.createDate;yakklCurrentlySelected.updateDate=yakklAccount.updateDate;let currentDeepCopy=deepCopy(yakklCurrentlySelected);await setYakklCurrentlySelectedStorage(yakklCurrentlySelected);currentlySelected=currentDeepCopy;return yakklPrimaryAccountEnc}else{throw new Error("Failed to create profile encryption")}}else{throw new Error("Browser environment not available")}}catch(e){log.error(`Your Wallet did not initialize for the following reason: ${e}`);throw e}}const{handleSubmit:handleSubmit,updateInitialValues:updateInitialValues}=createForm({initialValues:{secretPhrase:""},validationSchema:create$3().shape({secretPhrase:create$6().required("Please enter your secret recovery phrase")}),onSubmit:data=>{try{const elements2=document.querySelectorAll("[data-id]");let secretPhrase="";if(elements2){elements2.forEach(el=>{secretPhrase+=el.value+" "});secretPhrase=secretPhrase.trim();const selectedWords=secretPhrase.split(" ").slice(0,parseInt(get(selected)));processSecretPhraseRecovery(selectedWords.join(" "))}else{throw new Error("Your Secret Phrase does not seem to be correct. Check the formatting. You can enter each word and it MUST BE IN ORDER -OR- paste the whole phrase after copying from your backup into any field.")}}catch(e){log.error(e);set(error,String(e),true);resetForm()}}});function resetForm(){updateInitialValues({secretPhrase:""});const elements2=document.querySelectorAll("[data-id]");elements2.forEach(el=>{el.value=""})}function hideShowWords(){let count=parseInt(get(selected));let element;let element_text;for(let wordCount=13;wordCount<=24;wordCount++){element_text=document.getElementById(`word_text_${wordCount}`);element=document.getElementById(`word_${wordCount}`);if(element_text&&element){element_text.style.display="block";element.style.display="block"}}for(let wordCount=24;wordCount>count;wordCount--){element_text=document.getElementById(`word_text_${wordCount}`);element=document.getElementById(`word_${wordCount}`);if(element_text&&element){if(strict_equals(element_text.style.display,"none")){element_text.style.display="block"}else{element_text.style.display="none"}if(strict_equals(element.style.display,"none")){element.style.display="block"}else{element.style.display="none"}}}}function toggleWordsVisibility(){elements=document.querySelectorAll("[data-id]");elements.forEach(el=>{if(strict_equals(el.type,"password")){el.type="text"}else{el.type="password"}})}function handlePaste(e){var _a;const data=(_a=e.clipboardData)==null?void 0:_a.getData("Text");const words=data==null?void 0:data.split(" ");if(words&&words.length>1){e.preventDefault();const nodes=document.querySelectorAll("[data-id]");nodes.forEach((node,index2)=>{node.value=words[index2]||""})}}onMount(()=>{hideShowWords()});async function verifyPincode(pincode){set(showPincodeModal,false);show(true)}var fragment=root$1();var node_1=first_child(fragment);PincodeVerify(node_1,{onVerified:verifyPincode,get show(){return get(showPincodeModal)},set show($$value){set(showPincodeModal,$$value,true)}});var div=sibling(node_1,2);var node_2=child(div);{$$ownership_validator.binding("show",Modal,show);Modal(node_2,{onCancel:onCancel(),title:"Import - Secret Recovery Phrase",get className(){return className()},get show(){return show()},set show($$value){show($$value)},children:wrap_snippet(ImportPhrase,($$anchor2,$$slotProps)=>{var div_1=root_1$1();var form_1=sibling(child(div_1),2);var div_2=child(form_1);var select=sibling(child(div_2),2);select.__change=hideShowWords;var option=child(select);option.value=option.__value="12";var option_1=sibling(option);option_1.value=option_1.__value="15";var option_2=sibling(option_1);option_2.value=option_2.__value="18";var option_3=sibling(option_2);option_3.value=option_3.__value="21";var option_4=sibling(option_3);option_4.value=option_4.__value="24";reset(select);reset(div_2);var div_3=sibling(div_2,2);var div_4=sibling(child(div_3),2);each(div_4,21,()=>Array(parseInt(get(selected))),index,($$anchor3,_,index2,$$array)=>{var div_5=root_2$1();var span=child(div_5);span.textContent=`${index2+1}.`;var input=sibling(span,2);set_attribute(input,"data-id",index2+1);set_attribute(input,"aria-label",`Word ${index2+1}`);reset(div_5);event("paste",input,handlePaste);append($$anchor3,div_5)});reset(div_4);reset(div_3);var div_6=sibling(div_3,2);var input_1=child(div_6);input_1.__click=toggleWordsVisibility;next(2);reset(div_6);var div_7=sibling(div_6,2);var input_2=child(div_7);remove_input_defaults(input_2);input_2.__change=[handleSubaccounts,subAccounts];next(2);reset(div_7);var div_8=sibling(div_7,2);var div_9=child(div_8);var button=child(div_9);button.__click=function(...$$args){apply(onCancel,this,$$args,ImportPhrase,[505,16])};var button_1=sibling(button,2);button_1.__click=resetForm;next(2);reset(div_9);reset(div_8);reset(form_1);var node_3=sibling(form_1,2);{var consequent=$$anchor3=>{var p=root_3$1();var text=child(p,true);reset(p);template_effect(()=>set_text(text,get(error)));append($$anchor3,p)};if_block(node_3,$$render=>{if(get(error))$$render(consequent)})}reset(div_1);event("submit",form_1,function(...$$args){apply(()=>handleSubmit,this,$$args,ImportPhrase,[439,19])});bind_select_value(select,()=>get(selected),$$value=>set(selected,$$value));bind_checked(input_2,()=>get(subAccounts),$$value=>set(subAccounts,$$value));append($$anchor2,div_1)}),$$slots:{default:true}})}reset(div);template_effect(()=>set_class(div,1,`relative ${className()??""}`));append($$anchor,fragment);var $$pop=pop({...legacy_api()});$$cleanup();return $$pop}delegate(["change","click"]);ImportOption[FILENAME]="src/lib/components/ImportOption.svelte";function handleRestore(_,isProUser,$$props){if(!get(isProUser))return;$$props.onRestore()}var root_1=add_locations(from_html(`<li>Import a single watch-only address</li>`),ImportOption[FILENAME],[[41,4]]);var root_2=add_locations(from_html(`<button class="w-full py-2 px-4 bg-amber-600 text-white font-semibold rounded-lg shadow-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-opacity-75 transition duration-200 ease-in-out">Import Watch-Only Address</button>`),ImportOption[FILENAME],[[58,3]]);var root_3=add_locations(from_html(`<button class="w-full py-2 px-4 bg-red-600 text-white font-semibold rounded-lg shadow-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-400 focus:ring-opacity-75 transition duration-200 ease-in-out flex items-center justify-center gap-2"><svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24"><path d="M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4M12,6A6,6 0 0,0 6,12A6,6 0 0,0 12,18A6,6 0 0,0 18,12A6,6 0 0,0 12,6M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8Z"></path></svg> Restore all from Emergency Kit</button>`),ImportOption[FILENAME],[[76,3,[[80,4,[[81,5]]]]]]);var root_5=add_locations(from_html(`<button disabled class="w-full py-2 px-4 bg-gray-400 text-gray-200 font-semibold rounded-lg shadow-md cursor-not-allowed transition duration-200 ease-in-out flex items-center justify-center gap-2 relative"><svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24"><path d="M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4M12,6A6,6 0 0,0 6,12A6,6 0 0,0 12,18A6,6 0 0,0 18,12A6,6 0 0,0 12,6M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8Z"></path></svg> Restore all from Emergency Kit <div class="absolute -top-1 -right-1 w-4 h-4 bg-gradient-to-r from-indigo-400 to-purple-400 rounded-full flex items-center justify-center"><svg class="w-2.5 h-2.5 text-white" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path></svg></div></button>`),ImportOption[FILENAME],[[87,4,[[91,5,[[92,6]]],[95,5,[[96,6,[[97,7]]]]]]]]);var root=add_locations(from_html(`<div class="bg-surface-light dark:bg-surface-dark text-primary-light dark:text-primary-dark rounded-lg p-6 shadow-md"><h1 class="text-2xl font-bold text-center text-primary-light dark:text-primary-dark mb-4"> </h1> <div class="space-y-4 mb-6"><p class="text-secondary-light dark:text-secondary-dark text-center">Choose an option to import or restore your wallet:</p> <ul class="list-disc list-inside text-secondary-light dark:text-secondary-dark space-y-2"><li>Import a single account using a private key</li> <li>Import a single account using a secret phrase (12-24 words)</li> <!> <li>Restore everything from a YAKKL Emergency Kit (recover your whole wallet)</li></ul></div> <div class="space-y-3"><button class="w-full py-2 px-4 bg-blue-600 text-white font-semibold rounded-lg shadow-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-opacity-75 transition duration-200 ease-in-out">Import using Private Key</button> <!> <button class="w-full py-2 px-4 bg-green-600 text-white font-semibold rounded-lg shadow-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-400 focus:ring-opacity-75 transition duration-200 ease-in-out">Import using Secret Phrase</button> <!></div></div>`),ImportOption[FILENAME],[[26,0,[[29,1],[33,1,[[34,2],[37,2,[[38,3],[39,3],[43,3]]]]],[47,1,[[49,2],[67,2]]]]]]);function ImportOption($$anchor,$$props){check_target(new.target);push($$props,true,ImportOption);let showImportWatch=prop($$props,"showImportWatch",3,false),title=prop($$props,"title",3,"Importing/Restoring Options");let settings=tag(state(null),"settings");let isProUser=tag(state(false),"isProUser");onMount(async()=>{var _a,_b;set(settings,await getSettings(),true);set(isProUser,shouldShowProFeatures(((_b=(_a=get(settings))==null?void 0:_a.plan)==null?void 0:_b.type)||PlanType.BASIC_MEMBER),true)});var div=root();var h1=child(div);var text=child(h1,true);reset(h1);var div_1=sibling(h1,2);var ul=sibling(child(div_1),2);var node=sibling(child(ul),4);{var consequent=$$anchor2=>{var li=root_1();append($$anchor2,li)};if_block(node,$$render=>{if(showImportWatch())$$render(consequent)})}next(2);reset(ul);reset(div_1);var div_2=sibling(div_1,2);var button=child(div_2);button.__click=function(...$$args){apply(()=>$$props.onImportKey,this,$$args,ImportOption,[50,12])};var node_1=sibling(button,2);{var consequent_1=$$anchor2=>{var button_1=root_2();button_1.__click=function(...$$args){apply(()=>$$props.onImportWatch,this,$$args,ImportOption,[59,13])};append($$anchor2,button_1)};if_block(node_1,$$render=>{if(showImportWatch())$$render(consequent_1)})}var button_2=sibling(node_1,2);button_2.__click=function(...$$args){apply(()=>$$props.onImportPhrase,this,$$args,ImportOption,[68,12])};var node_2=sibling(button_2,2);{var consequent_2=$$anchor2=>{var button_3=root_3();button_3.__click=[handleRestore,isProUser,$$props];append($$anchor2,button_3)};var alternate=$$anchor2=>{SimpleTooltip($$anchor2,{content:"Upgrade to Pro for full Emergency Kit features",children:wrap_snippet(ImportOption,($$anchor3,$$slotProps)=>{var button_4=root_5();append($$anchor3,button_4)}),$$slots:{default:true}})};if_block(node_2,$$render=>{if(get(isProUser))$$render(consequent_2);else $$render(alternate,false)})}reset(div_2);reset(div);template_effect(()=>set_text(text,title()));append($$anchor,div);return pop({...legacy_api()})}delegate(["click"]);ImportOptionModal[FILENAME]="src/lib/components/ImportOptionModal.svelte";function ImportOptionModal($$anchor,$$props){check_target(new.target);push($$props,true,ImportOptionModal);var $$ownership_validator=create_ownership_validator($$props);let show=prop($$props,"show",15,false),showImportWatch=prop($$props,"showImportWatch",3,false),onCancel=prop($$props,"onCancel",11,()=>{show(false)}),onClose=prop($$props,"onClose",11,()=>{show(false)}),onImportKey=prop($$props,"onImportKey",3,()=>{show(false)}),onImportPhrase=prop($$props,"onImportPhrase",3,()=>{show(false)}),onImportWatch=prop($$props,"onImportWatch",3,()=>{show(false)}),onRestore=prop($$props,"onRestore",3,()=>{show(false)});{$$ownership_validator.binding("show",Modal,show);Modal($$anchor,{onCancel:onCancel(),onClose:onClose(),title:"Import or Restore Wallet",get show(){return show()},set show($$value){show($$value)},children:wrap_snippet(ImportOptionModal,($$anchor2,$$slotProps)=>{ImportOption($$anchor2,{get showImportWatch(){return showImportWatch()},onImportKey:onImportKey(),onImportPhrase:onImportPhrase(),onImportWatch:onImportWatch(),onRestore:onRestore()})}),$$slots:{default:true}})}return pop({...legacy_api()})}export{ImportOptionModal as I,ImportPhrase as a};
//# sourceMappingURL=OUz8be-y.js.map
