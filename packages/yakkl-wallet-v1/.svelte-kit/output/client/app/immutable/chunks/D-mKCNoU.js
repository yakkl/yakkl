const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./ByX4oUvk.js","./B2gA1VsD.js","./BaS8d5lg.js"])))=>i.map(i=>d[i]);
var __defProp=Object.defineProperty;var __defNormalProp=(obj,key,value)=>key in obj?__defProp(obj,key,{enumerable:true,configurable:true,writable:true,value:value}):obj[key]=value;var __publicField=(obj,key,value)=>__defNormalProp(obj,typeof key!=="symbol"?key+"":key,value);import{l as log$1,b7 as activeTabUIStore,_ as __vitePreload}from"./Cb2naUpm.js";import{b as browserSvelte,a as browser_ext,i as isBrowserEnv}from"./CgCfpVku.js";import{s as stopCheckPrices,a as startCheckPrices}from"./Ch26qbWO.js";import{h as handleLockDown}from"./CZieKDFj.js";import{g as globalListenerManager}from"./B7s-nLfi.js";import{N as NotificationService}from"./Bmr6hs4q.js";import{l as log}from"./WDN37msH.js";import{s as safeLogout}from"./COpD6KvM.js";import{p as protectedContexts}from"./D59oTG1g.js";import{UnifiedTimerManager}from"./z-nmOEXa.js";class ListenerManager{constructor(context){__publicField(this,"listeners",new Set);__publicField(this,"context");this.context=context}add(event,handler){const wrappedHandler=async(...args)=>{const[message]=args;if(message.targetContext&&message.targetContext!==this.context){return false}return await handler(...args)};if(event.hasListener(wrappedHandler)){event.removeListener(wrappedHandler)}event.addListener(wrappedHandler);this.listeners.add({event:event,handler:wrappedHandler})}remove(event,handler){if(event.hasListener(handler)){event.removeListener(handler);this.listeners.delete({event:event,handler:handler})}}removeAll(context){this.listeners.forEach(({event:event,handler:handler})=>{event.removeListener(handler)});this.listeners.clear()}}function handleOnRemoveWindow(windowId){if(browserSvelte){if(windowId===browser_ext.windows.WINDOW_ID_CURRENT){handleLockDown()}}}function handleBeforeUnload(){handleLockDown()}function addWindowListeners(){if(!browserSvelte)return;try{if(!window.fencedFrameConfig){window.removeEventListener("beforeunload",handleBeforeUnload);window.addEventListener("beforeunload",handleBeforeUnload)}uiListenerManager.add(browser_ext.windows.onRemoved,handleOnRemoveWindow)}catch(e){log.warn("Error adding window listeners:",false,e)}}function removeWindowListeners(){if(!browserSvelte)return;try{if(!window.fencedFrameConfig){window.removeEventListener("beforeunload",handleBeforeUnload)}uiListenerManager.remove(browser_ext.windows.onRemoved,handleOnRemoveWindow)}catch(e){log.warn("Error removing window listeners:",false,e)}}function playBeep(frequency=800,duration=.2,volume=.3){try{if(typeof window==="undefined"||!window.AudioContext){return}const audioContext=new(window.AudioContext||window.webkitAudioContext);window.__yakklAudioContext=audioContext;const oscillator=audioContext.createOscillator();const gainNode=audioContext.createGain();oscillator.connect(gainNode);gainNode.connect(audioContext.destination);oscillator.frequency.setValueAtTime(frequency,audioContext.currentTime);oscillator.type="sine";gainNode.gain.setValueAtTime(volume,audioContext.currentTime);gainNode.gain.exponentialRampToValueAtTime(.01,audioContext.currentTime+duration);oscillator.start(audioContext.currentTime);oscillator.stop(audioContext.currentTime+duration);const timerManager=UnifiedTimerManager.getInstance();timerManager.addTimeout("sound-cleanup",()=>{audioContext.close().catch(()=>{})},(duration+.1)*1e3);timerManager.startTimeout("sound-cleanup")}catch(error){log.error("[Sound] Failed to play beep:",false,error)}}const uiListenerManager=new ListenerManager("ui");globalListenerManager.registerContext("ui",uiListenerManager);let isClearing=false;let clearingPromise=null;function getCurrentContextType(){try{if(typeof window==="undefined")return"unknown";const pathname=window.location.pathname;const href=window.location.href;if(pathname.includes("sidepanel")||href.includes("sidepanel")){return"sidepanel"}else if(pathname.includes("index.html")||href.includes("index.html")||pathname==="/"||pathname===""){return"popup-wallet"}else if(pathname.includes("dapp/popups")||href.includes("dapp/popups")){return"popup-dapp"}else{return"popup-wallet"}}catch(error){return"unknown"}}function currentContextNeedsIdleProtection(){const contextType=getCurrentContextType();if(contextType==="unknown"&&typeof window!=="undefined"){const href=window.location.href;if(href.includes("chrome-extension://")&&(href.includes("index.html")||href.endsWith("/"))){return true}}return protectedContexts.includes(contextType)}function isMessageTargeted(message){if(!message.targetContextTypes||!Array.isArray(message.targetContextTypes)){return true}const currentContextType=getCurrentContextType();const effectiveContextType=currentContextType==="unknown"?"popup-wallet":currentContextType;log$1.debug(`[uiListeners] Message targeting check:`,false,{messageTargets:message.targetContextTypes,currentContext:currentContextType,effectiveContext:effectiveContextType,isTargeted:message.targetContextTypes.includes(effectiveContextType)});return message.targetContextTypes.includes(effectiveContextType)}async function performEnhancedCleanup(source="unknown"){if(isClearing){log$1.info(`[uiListeners] Already clearing alerts from ${source}, waiting for completion`);if(clearingPromise){await clearingPromise}return}isClearing=true;clearingPromise=_performCleanup(source);try{await clearingPromise}finally{isClearing=false;clearingPromise=null}}async function _performCleanup(source){var _a,_b,_c;try{log$1.info(`[uiListeners] Starting enhanced cleanup from: ${source}`);if((_a=browser_ext)==null?void 0:_a.action){try{await browser_ext.action.setBadgeText({text:""});await browser_ext.action.setIcon({path:{16:"/images/logoBullFav16x16.png",32:"/images/logoBullFav32x32.png",48:"/images/logoBullFav48x48.png",96:"/images/logoBullFav96x96.png",128:"/images/logoBullFav128x128.png"}});log$1.info("[uiListeners] Badge and icon cleared")}catch(error){log$1.warn("[uiListeners] Error clearing badge/icon:",false,error)}}if((_b=browser_ext)==null?void 0:_b.notifications){try{const notifications=await browser_ext.notifications.getAll();log$1.info(`[uiListeners] Found ${Object.keys(notifications).length} notifications to clear`);const clearPromises=Object.keys(notifications).map(id=>browser_ext.notifications.clear(id).catch(()=>{}));await Promise.all(clearPromises);log$1.info("[uiListeners] Browser notifications cleared")}catch(error){log$1.warn("[uiListeners] Error clearing notifications:",false,error)}}if(typeof window!=="undefined"){try{const audioContext=window.__yakklAudioContext;if(audioContext&&audioContext.state!=="closed"){await audioContext.close();window.__yakklAudioContext=null;log$1.info("[uiListeners] Audio context closed")}const audioElements=document.querySelectorAll("audio[data-yakkl-sound]");audioElements.forEach(audio=>{audio.pause();audio.remove()});if(audioElements.length>0){log$1.info(`[uiListeners] Cleared ${audioElements.length} audio elements`)}}catch(e){log$1.warn("Audio cleanup error (may be normal):",false,e)}}if(typeof window!=="undefined"){try{const{hideSecurityWarning:hideSecurityWarning}=await __vitePreload(async()=>{const{hideSecurityWarning:hideSecurityWarning2}=await import("./ByX4oUvk.js");return{hideSecurityWarning:hideSecurityWarning2}},true?__vite__mapDeps([0,1,2]):void 0,import.meta.url);hideSecurityWarning();log$1.info("[uiListeners] In-app security warning cleared")}catch(e){log$1.warn("Error clearing security warning:",false,e)}}if(typeof window!=="undefined"){try{if(window.__yakklTitleFlashInterval){clearInterval(window.__yakklTitleFlashInterval);window.__yakklTitleFlashInterval=null;log$1.info("[uiListeners] Title flash interval cleared")}if(window.__yakklOriginalTitle){document.title=window.__yakklOriginalTitle;window.__yakklOriginalTitle=null;log$1.info("[uiListeners] Original title restored")}else if(document.title.includes("ðŸš¨ URGENT")){document.title=document.title.replace(/ðŸš¨ URGENT[^!]*!/g,"").trim()||"YAKKL Wallet";log$1.info("[uiListeners] Title cleaned up (fallback)")}}catch(e){log$1.warn("Title cleanup error:",false,e)}}if(typeof window!=="undefined"){try{if(window.__yakklCountdownInterval){clearInterval(window.__yakklCountdownInterval);window.__yakklCountdownInterval=null;log$1.info("[uiListeners] Countdown interval cleared")}if(window.__yakklIntervals){const intervals=window.__yakklIntervals;intervals.forEach(id=>clearInterval(id));window.__yakklIntervals=[];log$1.info(`[uiListeners] Cleared ${intervals.length} stored intervals`)}}catch(e){log$1.warn("Interval cleanup error:",false,e)}}if((_c=browser_ext)==null?void 0:_c.alarms){try{await Promise.all([browser_ext.alarms.clear("yakkl-lock-alarm").catch(()=>{}),browser_ext.alarms.clear("yakkl-lock-notification").catch(()=>{})]);log$1.info("[uiListeners] Alarms cleared")}catch(error){log$1.debug("Alarm clearing error:",false,error)}}try{await NotificationService.clearAllAlertsEnhanced();log$1.info("[uiListeners] NotificationService cleanup completed")}catch(error){log$1.warn("[uiListeners] NotificationService cleanup error:",false,error)}log$1.info(`[uiListeners] Enhanced cleanup completed successfully from: ${source}`)}catch(error){log$1.warn(`[uiListeners] Enhanced cleanup failed from ${source}:`,false,error);throw error}}async function handleOnActiveTabUIChanged(message,sender,sendResponse){try{if(!browser_ext)return void 0;switch(message.type){case"setActiveTab":{try{activeTabUIStore.set(message.activeTab);sendResponse({success:true})}catch(error){log$1.warn("Error on active tab change:",true,error);sendResponse({success:false,error:error})}return true}default:{return false}}}catch(error){log$1.warn("Error handling setActiveTab message:",true,error);if(isBrowserEnv())sendResponse({success:false,error:(error==null?void 0:error.message)||"Unknown error occurred."});return true}}async function handleOnMessageForExtension(message,sender,sendResponse){try{if(!browser_ext)return void 0;log$1.info("[uiListeners] Received message:",false,{type:message.type,currentContext:getCurrentContextType(),needsProtection:currentContextNeedsIdleProtection(),isTargeted:isMessageTargeted(message),messageData:message});switch(message.type){case"lockdown":{log$1.info("[uiListeners] Processing LOCKDOWN message",false,{context:getCurrentContextType(),needsProtection:currentContextNeedsIdleProtection(),isTargeted:isMessageTargeted(message)});if(!currentContextNeedsIdleProtection()){log$1.info("[uiListeners] Ignoring lockdown - context does not need idle protection:",false,getCurrentContextType());return false}if(!isMessageTargeted(message)){log$1.info("[uiListeners] Ignoring lockdown - not targeted to this context type:",false,getCurrentContextType());return false}log$1.info("[uiListeners] EXECUTING lockdown for protected context:",false,getCurrentContextType());try{await Promise.all([browser_ext.runtime.sendMessage({type:"stopPricingChecks"}).catch(()=>{}),handleLockDown()]);await NotificationService.sendSecurityAlertEnhanced("YAKKL Wallet locked due to inactivity. \nTo prevent unauthorized transactions, your wallet has been locked and logged out.",{contextMessage:"Click extension icon to relaunch"});sendResponse({success:true,message:"Lockdown initiated."});setTimeout(()=>safeLogout(),50);return true}catch(error){log$1.warn("Lockdown failed:",false,error);sendResponse({success:false,error:error.message||"Lockdown failed"});return true}}case"lockdownImminent":{log$1.info("[uiListeners] Processing LOCKDOWN IMMINENT message",false,{context:getCurrentContextType(),needsProtection:currentContextNeedsIdleProtection(),isTargeted:isMessageTargeted(message),enhanced:message.enhanced,delayMs:message==null?void 0:message.delayMs});if(!currentContextNeedsIdleProtection()){log$1.info("[uiListeners] Ignoring lockdownImminent - context does not need idle protection:",false,getCurrentContextType());return false}if(!isMessageTargeted(message)){log$1.info("[uiListeners] Ignoring lockdownImminent - not targeted to this context type:",false,getCurrentContextType());return false}log$1.info("[uiListeners] EXECUTING lockdownImminent for protected context:",false,getCurrentContextType());try{if(message.enhanced){log$1.info("[uiListeners] Using ENHANCED lockdown warning with full attention features");await NotificationService.sendLockdownWarningEnhanced((message==null?void 0:message.delayMs)||3e4,{contextMessage:"Use YAKKL before timeout to stop lockdown"})}else{log$1.info("[uiListeners] Using standard lockdown warning");await NotificationService.sendLockdownWarning((message==null?void 0:message.delayMs)||3e4,{contextMessage:"Use YAKKL before timeout to stop lockdown"})}log$1.info("[uiListeners] NotificationService.sendLockdownWarning completed");sendResponse({success:true,message:"Imminent lockdown notification sent."});return true}catch(error){log$1.warn("[uiListeners] Lockdown imminent failed:",false,error);sendResponse({success:false,error:error.message||"Lockdown imminent failed"});return true}}case"LOCKDOWN_WARNING_ENHANCED":{log$1.info("[uiListeners] Processing ENHANCED LOCKDOWN WARNING message",false,{context:getCurrentContextType(),delayMs:message.delayMs,windowFocused:message.windowFocused});if(!currentContextNeedsIdleProtection()){log$1.info("[uiListeners] Ignoring enhanced lockdown warning - context does not need protection");return false}try{if(typeof window!=="undefined"){window.focus();const originalTitle=document.title;let flashCount=0;const flashInterval=setInterval(()=>{document.title=flashCount%2===0?"ðŸš¨ URGENT - YAKKL Security Alert!":originalTitle;flashCount++;if(flashCount>=10){clearInterval(flashInterval);document.title=originalTitle}},500);window.__yakklTitleFlashInterval=flashInterval;window.__yakklOriginalTitle=originalTitle}if(typeof window!=="undefined"){const{showSecurityWarning:showSecurityWarning}=await __vitePreload(async()=>{const{showSecurityWarning:showSecurityWarning2}=await import("./ByX4oUvk.js");return{showSecurityWarning:showSecurityWarning2}},true?__vite__mapDeps([0,1,2]):void 0,import.meta.url);showSecurityWarning(message.delaySeconds||Math.ceil(message.delayMs/1e3),()=>{log$1.info("[uiListeners] Enhanced security warning completed")})}log$1.info("[uiListeners] Enhanced lockdown warning processed");sendResponse({success:true,message:"Enhanced lockdown warning displayed."});return true}catch(error){log$1.warn("[uiListeners] Enhanced lockdown warning failed:",false,error);sendResponse({success:false,error:error.message});return true}}case"SECURITY_ALERT_ENHANCED":{log$1.info("[uiListeners] Processing ENHANCED SECURITY ALERT message");if(!currentContextNeedsIdleProtection()){return false}try{if(typeof window!=="undefined"){window.focus()}await NotificationService.sendSecurityAlert(message.message,message.options,message.id);log$1.info("[uiListeners] Enhanced security alert processed");sendResponse({success:true});return true}catch(error){log$1.warn("[uiListeners] Enhanced security alert failed:",false,error);sendResponse({success:false,error:error.message});return true}}case"PLAY_URGENT_SOUND":{try{if(typeof window!=="undefined"&&window.AudioContext){playBeep(800,.2,.3)}sendResponse({success:true});return true}catch(error){sendResponse({success:false,error:error.message});return true}}case"CLEAR_ALL_ENHANCED_ALERTS":{log$1.info("[uiListeners] Received CLEAR_ALL_ENHANCED_ALERTS message",false,{context:getCurrentContextType(),source:message.source,timestamp:message.timestamp});try{await performEnhancedCleanup(`message_${message.source||"unknown"}`);log$1.info("[uiListeners] All enhanced alerts cleared successfully");sendResponse({success:true});return true}catch(error){log$1.warn("[uiListeners] Failed to clear enhanced alerts:",false,error);sendResponse({success:false,error:error.message});return true}}case"CLEAR_NOTIFICATION":{log$1.info("[uiListeners] Handling CLEAR_NOTIFICATION:",false,message.notificationId);try{if(browser_ext.notifications&&message.notificationId){await browser_ext.notifications.clear(message.notificationId)}if(browser_ext.action){await browser_ext.action.setBadgeText({text:""});await browser_ext.action.setIcon({path:{16:"/images/logoBullFav16x16.png",32:"/images/logoBullFav32x32.png",48:"/images/logoBullFav48x48.png",96:"/images/logoBullFav96x96.png",128:"/images/logoBullFav128x128.png"}})}sendResponse({success:true,message:"Notification cleared from UI"})}catch(error){log$1.warn("[uiListeners] Error clearing notification:",false,error);sendResponse({success:false,error:error.message})}return true}case"CLEAR_NOTIFICATION_ENHANCED":{log$1.info("[uiListeners] Clearing enhanced notification:",false,message.notificationId);try{if(browser_ext.notifications&&message.notificationId){await browser_ext.notifications.clear(message.notificationId)}if(message.notificationId.includes("lockdown-warning")){await performEnhancedCleanup("enhanced_notification_clear")}log$1.info("[uiListeners] Enhanced notification cleared");sendResponse({success:true});return true}catch(error){log$1.warn("[uiListeners] Failed to clear enhanced notification:",false,error);sendResponse({success:false,error:error.message});return true}}case"focusWindow":{log$1.info("[uiListeners] Processing FOCUS WINDOW message");try{if(typeof window!=="undefined"){window.focus();if(document.hidden||document.visibilityState==="hidden"){if("requestIdleCallback"in window){requestIdleCallback(()=>{window.focus()})}const handleVisibilityChange=()=>{if(!document.hidden){window.focus();document.removeEventListener("visibilitychange",handleVisibilityChange)}};document.addEventListener("visibilitychange",handleVisibilityChange);setTimeout(()=>{document.removeEventListener("visibilitychange",handleVisibilityChange)},3e4)}const originalTitle=document.title;let flashCount=0;const flashInterval=setInterval(()=>{document.title=flashCount%2===0?"ðŸš¨ URGENT - YAKKL Security Alert!":originalTitle;flashCount++;if(flashCount>=10){clearInterval(flashInterval);document.title=originalTitle}},500);window.__yakklTitleFlashInterval=flashInterval;window.__yakklOriginalTitle=originalTitle;log$1.info("âœ… [uiListeners] Window focus and attention requested")}sendResponse({success:true,message:"Window focus requested."});return true}catch(error){log$1.warn("[uiListeners] Focus window failed:",false,error);sendResponse({success:false,error:error.message||"Focus window failed"});return true}}case"clearAllAlerts":{log$1.info("[uiListeners] Processing CLEAR ALL ALERTS message");try{await performEnhancedCleanup("clearAllAlerts_message");log$1.info("[uiListeners] All alerts cleared");sendResponse({success:true,message:"All alerts cleared."});return true}catch(error){log$1.warn("[uiListeners] Clear alerts failed:",false,error);sendResponse({success:false,error:error.message||"Clear alerts failed"});return true}}case"IDLE_STATUS_CHANGED":{log$1.info("[uiListeners] Processing IDLE STATUS CHANGED message",false,{state:message.state,context:getCurrentContextType(),needsProtection:currentContextNeedsIdleProtection(),isTargeted:isMessageTargeted(message),isClearing:isClearing});if(!currentContextNeedsIdleProtection()){log$1.debug("[uiListeners] Ignoring idle status change - context does not need idle protection:",false,getCurrentContextType());return false}if(!isMessageTargeted(message)){log$1.debug("[uiListeners] Ignoring idle status change - not targeted to this context type:",false,getCurrentContextType());return false}log$1.info(`[uiListeners] PROCESSING idle status changed to ${message.state} for protected context ${getCurrentContextType()}`);if(message.state==="active"){log$1.info("[uiListeners] Active state detected, performing centralized cleanup");try{await performEnhancedCleanup("idle_status_active");log$1.info("[uiListeners] Centralized cleanup completed for active state")}catch(error){log$1.warn("[uiListeners] Failed to perform centralized cleanup:",false,error)}}if(typeof window!=="undefined"){log$1.info("[uiListeners] Dispatching yakklIdleStateChanged event");window.dispatchEvent(new CustomEvent("yakklIdleStateChanged",{detail:{state:message.state,timestamp:message.timestamp}}))}return false}default:{log$1.debug(`[uiListeners] Unhandled message type: ${message.type}`);return false}}}catch(e){log$1.warn("[uiListeners] Error handling message:",false,e);if(isBrowserEnv())sendResponse({success:false,error:(e==null?void 0:e.message)||"Unknown error occurred."});return true}}function handleOnMessageForPricing(message,sender,sendResponse){if(!browser_ext)return false;try{switch(message.type){case"startPricingChecks":{startCheckPrices();sendResponse({success:true,message:"Price checks initiated."});return true}case"stopPricingChecks":{stopCheckPrices();sendResponse({success:true,message:"Stop price checks initiated."});return true}default:{return false}}}catch(e){log$1.warn("Error handling message:",e);if(isBrowserEnv())sendResponse({success:false,error:(e==null?void 0:e.message)||"Unknown error occurred."});return true}}function addUIListeners(){if(!browser_ext)return;log$1.info("[uiListeners] Adding UI listeners for context:",false,getCurrentContextType());uiListenerManager.add(browser_ext.runtime.onMessage,handleOnActiveTabUIChanged);uiListenerManager.add(browser_ext.runtime.onMessage,handleOnMessageForExtension);uiListenerManager.add(browser_ext.runtime.onMessage,handleOnMessageForPricing);addWindowListeners()}function removeUIListeners(){if(!browser_ext)return;log$1.info("[uiListeners] Removing UI listeners");uiListenerManager.removeAll();removeWindowListeners()}export{addUIListeners as a,handleOnMessageForPricing as h,removeUIListeners as r,uiListenerManager as u};
//# sourceMappingURL=D-mKCNoU.js.map
