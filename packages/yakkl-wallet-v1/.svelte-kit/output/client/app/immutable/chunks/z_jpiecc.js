import{v as getProfile,w as digestMessage,x as isEncryptedData,z as decryptData,B as setMiscStore,l as log,C as getYakklCurrentlySelected,h as getMiscStore}from"./Cb2naUpm.js";import{s as storeEncryptedHash,a as storeSessionToken}from"./CMG1aIle.js";async function verify(id){try{if(!id){return void 0}const profile=await getProfile();const digest=await digestMessage(id);if(!profile||!digest){return void 0}else{if(isEncryptedData(profile.data)){const profileData=await decryptData(profile.data,digest);if(profileData){setMiscStore(digest);const sessionToken=await storeEncryptedHash(digest);if(sessionToken){storeSessionToken(sessionToken.token,sessionToken.expiresAt)}log.info("verify - sessionToken",false,sessionToken)}else{throw"Verification failed!"}}return profile}}catch(e){log.error("Verification failed!",false,e);throw`Verification failed! - ${e}`}}async function getYakklCurrentlySelectedAccountKey(){var _a,_b,_c,_d,_e;try{const currentlySelected=await getYakklCurrentlySelected();const yakklMiscStore=getMiscStore();let accountKey=null;let address=null;let privateKey=null;if(!yakklMiscStore||!currentlySelected){return null}if(isEncryptedData(currentlySelected.data)){const result=await decryptData(currentlySelected.data,yakklMiscStore);const data=result;address=((_a=data==null?void 0:data.account)==null?void 0:_a.address)||null;if(isEncryptedData((_b=data==null?void 0:data.account)==null?void 0:_b.data)){const result2=await decryptData(data.account.data,yakklMiscStore);const accountData=result2;privateKey=accountData.privateKey}else{privateKey=data?(_c=data.account)==null?void 0:_c.data.privateKey:null}}else{privateKey=currentlySelected.data?((_e=(_d=currentlySelected.data.account)==null?void 0:_d.data)==null?void 0:_e.privateKey)??null:null}if(privateKey&&address){accountKey={address:address,privateKey:privateKey}}return accountKey}catch(e){log.errorStack(e);throw`Error getting account key - ${e}`}}export{getYakklCurrentlySelectedAccountKey as g,verify as v};
//# sourceMappingURL=z_jpiecc.js.map
