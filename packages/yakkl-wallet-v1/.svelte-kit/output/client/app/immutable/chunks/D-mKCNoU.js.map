{"version":3,"mappings":";m0BAQO,MAAMA,gBAIZ,WAAAC,CAAYC,SAHJC,cAAAC,KAAA,gBAAoCC,KACpCF,cAAAC,KAAA,WAGPA,KAAKF,QAAUA,OAAA,CAGhB,GAAAI,CAAIC,MAAYC,SACT,MAAAC,eAAiBC,SAAUC,QAC1B,MAACC,SAAWD,KAGlB,GAAIC,QAAQC,eAAiBD,QAAQC,gBAAkBT,KAAKF,QAAS,CAC7D,aAGD,aAAMM,WAAWG,OAGrB,GAAAJ,MAAMO,YAAYL,gBAAiB,CACtCF,MAAMQ,eAAeN,eAAc,CAEpCF,MAAMS,YAAYP,gBAClBL,KAAKa,UAAUX,IAAI,CAAEC,YAAOC,QAASC,gBAAgB,CAGtD,MAAAS,CAAOX,MAAYC,SACd,GAAAD,MAAMO,YAAYN,SAAU,CAC/BD,MAAMQ,eAAeP,SACrBJ,KAAKa,UAAUE,OAAO,CAAEZ,YAAOC,iBAAS,CACzC,CAGD,SAAAY,CAAUlB,SACTE,KAAKa,UAAUI,QAAQ,EAAGd,YAAOC,oBAChCD,MAAMQ,eAAeP,WAEtBJ,KAAKa,UAAUK,OAAM,ECzChB,SAASC,qBAAqBC,UACpC,GAAIC,cAAe,CACd,GAAAD,WAAaE,YAAYC,QAAQC,kBAAmB,CACxCC,gBAAA,CAChB,CAEF,CAGA,SAASC,qBACOD,gBAChB,CAGO,SAASE,qBACf,IAAKN,cAAe,OAEhB,IAEC,IAACO,OAAOC,kBAAmB,CACvBD,OAAAE,oBAAoB,eAAgBJ,oBACpCE,OAAAG,iBAAiB,eAAgBL,mBAAkB,CAI3DM,kBAAkB9B,IAAIoB,YAAYC,QAAQU,UAAWd,4BAC7Ce,GACJC,IAAAC,KAAK,iCAAkC,MAAOF,EAAC,CAErD,CAEO,SAASG,wBACf,IAAKhB,cAAe,OAEhB,IAEC,IAACO,OAAOC,kBAAmB,CACvBD,OAAAE,oBAAoB,eAAgBJ,mBAAkB,CAI9DM,kBAAkBlB,OAAOQ,YAAYC,QAAQU,UAAWd,4BAChDe,GACJC,IAAAC,KAAK,mCAAoC,MAAOF,EAAC,CAEvD,CCzCO,SAASI,SACfC,UAAoB,IACpBC,SAAmB,GACnBC,OAAiB,IAEb,IACH,UAAWb,SAAW,cAAgBA,OAAOc,aAAc,CAC1D,OAGD,MAAMC,aAAe,IAAKf,OAAOc,cAAiBd,OAAegB,oBAChEhB,OAAeiB,oBAAsBF,aAEhC,MAAAG,WAAaH,aAAaI,mBAC1B,MAAAC,SAAWL,aAAaM,aAE9BH,WAAWI,QAAQF,UACVA,SAAAE,QAAQP,aAAaQ,aAE9BL,WAAWP,UAAUa,eAAeb,UAAWI,aAAaU,aAC5DP,WAAWQ,KAAO,OAElBN,SAASO,KAAKH,eAAeX,OAAQE,aAAaU,aAClDL,SAASO,KAAKC,6BAA6B,IAAMb,aAAaU,YAAcb,UAEjEM,WAAAW,MAAMd,aAAaU,aACnBP,WAAAY,KAAKf,aAAaU,YAAcb,UAGrC,MAAAmB,aAAeC,oBAAoBC,cAC5BF,aAAAG,WACZ,gBACA,KACcnB,aAAAoB,QAAQC,MAAM,UAE3BxB,SAAW,IAAO,KAEpBmB,aAAaM,aAAa,uBAClBC,OACJ/B,IAAA+B,MAAM,+BAAgC,MAAOA,MAAK,CAExD,CCpCa,MAAAlC,kBAAoB,IAAIpC,gBAAgB,MAGrDuE,sBAAsBC,gBAAgB,KAAMpC,mBAG5C,IAAIqC,WAAa,MACjB,IAAIC,gBAAwC,KAG5C,SAASC,wBACJ,IACC,UAAO3C,SAAW,YAAoB,gBAEpC,MAAA4C,SAAW5C,OAAO6C,SAASD,SAC3B,MAAAE,KAAO9C,OAAO6C,SAASC,KAE7B,GAAIF,SAASG,SAAS,cAAgBD,KAAKC,SAAS,aAAc,CAC1D,iBAEP,SAAAH,SAASG,SAAS,eAClBD,KAAKC,SAAS,eACdH,WAAa,KACbA,WAAa,GACZ,CACM,6BACGA,SAASG,SAAS,gBAAkBD,KAAKC,SAAS,eAAgB,CACrE,uBACD,CACC,4BAEAT,OACD,gBAET,CAGA,SAASU,oCACR,MAAMC,YAAcN,wBAGpB,GAAIM,cAAgB,kBAAoBjD,SAAW,YAAa,CACzD,MAAA8C,KAAO9C,OAAO6C,SAASC,KAE5B,GAAAA,KAAKC,SAAS,yBACbD,KAAKC,SAAS,eAAiBD,KAAKI,SAAS,MAC7C,CACM,YACR,CAGM,OAAAC,kBAAkBJ,SAASE,YACnC,CAGA,SAASG,kBAAkBxE,SAEtB,IAACA,QAAQyE,qBAAuBC,MAAMC,QAAQ3E,QAAQyE,oBAAqB,CACvE,YAGR,MAAMG,mBAAqBb,wBAGrB,MAAAc,qBACLD,qBAAuB,UAAY,eAAiBA,mBAEjDE,MAAAC,MAAM,yCAA0C,MAAO,CAC1DC,eAAgBhF,QAAQyE,mBACxBQ,eAAgBL,mBAChBM,iBAAkBL,qBAClBM,WAAYnF,QAAQyE,mBAAmBN,SAASU,wBAG1C,OAAA7E,QAAQyE,mBAAmBN,SAASU,qBAC5C,CAKA/E,eAAesF,uBAAuBC,OAAiB,WAEtD,GAAIxB,WAAY,CACXiB,MAAAQ,KAAK,8CAA8CD,kCACvD,GAAIvB,gBAAiB,OACdA,eAAA,CAEP,OAGYD,WAAA,KACbC,gBAAkByB,gBAAgBF,QAE9B,UACGvB,eAAA,CACL,QACYD,WAAA,MACKC,gBAAA,KAEpB,CAKAhE,eAAeyF,gBAAgBF,qBAC1B,IACCP,MAAAQ,KAAK,iDAAiDD,UAG1D,IAAIG,gCAAaC,OAAQ,CACpB,UACG3E,YAAY2E,OAAOC,aAAa,CAAEC,KAAM,WACxC7E,YAAY2E,OAAOG,QAAQ,CAChCC,KAAM,CACL,GAAI,+BACJ,GAAI,+BACJ,GAAI,+BACJ,GAAI,+BACJ,IAAK,oCAGPlE,MAAI2D,KAAK,8CACD5B,OACJoB,MAAAlD,KAAK,2CAA4C,MAAO8B,MAAK,CAClE,CAID,IAAIoC,gCAAaC,cAAe,CAC3B,IACH,MAAMA,oBAAsBjF,YAAYiF,cAAcC,SACtDrE,MAAI2D,KAAK,uBAAuBW,OAAOC,KAAKH,eAAeI,iCAE3D,MAAMC,cAAgBH,OAAOC,KAAKH,eAAeM,IAAKC,IACrDxF,YAAYiF,cAAcrF,MAAM4F,IAAI9C,MAAM,eAErC+C,QAAQC,IAAIJ,eAClBzE,MAAI2D,KAAK,qDACD5B,OACJoB,MAAAlD,KAAK,8CAA+C,MAAO8B,MAAK,CACrE,CAIG,UAAOtC,SAAW,YAAa,CAC9B,IAEH,MAAMe,aAAgBf,OAAeiB,oBACjC,GAAAF,cAAgBA,aAAasE,QAAU,SAAU,OAC9CtE,aAAaoB,QAClBnC,OAAeiB,oBAAsB,KACtCV,MAAI2D,KAAK,qCAAoC,CAIxC,MAAAoB,cAAgBC,SAASC,iBAAiB,2BAClCF,cAAAjG,QAASoG,QACrBA,MAA2BC,QAC5BD,MAAMvG,WAGH,GAAAoG,cAAcP,OAAS,EAAG,CAC7BxE,MAAI2D,KAAK,yBAAyBoB,cAAcP,wBAAuB,QAEhEzE,GACJoD,MAAAlD,KAAK,uCAAwC,MAAOF,EAAC,CAC1D,CAIG,UAAON,SAAW,YAAa,CAC9B,IACH,MAAM2F,oBAAEA,2BAAwBC,cAAAlH,UAAA,MAAAiH,gDAAME,OAAO,iBAAoC,OAAAF,2CAAA,KAAAG,8BAAA,cAAAC,KAC7DJ,sBACpBpF,MAAI2D,KAAK,uDACD5D,GACJoD,MAAAlD,KAAK,mCAAoC,MAAOF,EAAC,CACtD,CAIG,UAAON,SAAW,YAAa,CAC9B,IAEH,GAAKA,OAAegG,0BAA2B,CAC9CC,cAAejG,OAAegG,2BAC7BhG,OAAegG,0BAA4B,KAC5CzF,MAAI2D,KAAK,6CAA4C,CAItD,GAAKlE,OAAekG,qBAAsB,CACzCX,SAASY,MAASnG,OAAekG,qBAChClG,OAAekG,qBAAuB,KACvC3F,MAAI2D,KAAK,wCACC,SAAAqB,SAASY,MAAMpD,SAAS,aAAc,CAEvCwC,SAAAY,MAAQZ,SAASY,MAAMC,QAAQ,mBAAoB,IAAIC,QAAU,eAC1E9F,MAAI2D,KAAK,4CAA2C,QAE7C5D,GACJoD,MAAAlD,KAAK,uBAAwB,MAAOF,EAAC,CAC1C,CAIG,UAAON,SAAW,YAAa,CAC9B,IAEH,GAAKA,OAAesG,yBAA0B,CAC7CL,cAAejG,OAAesG,0BAC7BtG,OAAesG,yBAA2B,KAC3C/F,MAAI2D,KAAK,2CAA0C,CAIpD,GAAKlE,OAAeuG,iBAAkB,CACrC,MAAMC,UAAaxG,OAAeuG,iBAClCC,UAAUnH,QAAS6F,IAAOe,cAAcf,KACvClF,OAAeuG,iBAAmB,GACnChG,MAAI2D,KAAK,yBAAyBsC,UAAUzB,0BAAyB,QAE9DzE,GACJoD,MAAAlD,KAAK,0BAA2B,MAAOF,EAAC,CAC7C,CAID,IAAImG,gCAAaC,OAAQ,CACpB,UACGvB,QAAQC,IAAI,CACjB1F,YAAYgH,OAAOpH,MAAM,oBAAoB8C,MAAM,QACnD1C,YAAYgH,OAAOpH,MAAM,2BAA2B8C,MAAM,UAE3D7B,MAAI2D,KAAK,sCACD5B,OACJoB,MAAAC,MAAM,wBAAyB,MAAOrB,MAAK,CAChD,CAIG,UACGqE,oBAAoBC,yBAC1BrG,MAAI2D,KAAK,6DACD5B,OACJoB,MAAAlD,KAAK,mDAAoD,MAAO8B,MAAK,CAGtEoB,MAAAQ,KAAK,+DAA+DD,gBAChE3B,OACR/B,MAAIC,KAAK,8CAA8CyD,UAAW,MAAO3B,OACnE,MAAAA,KAAA,CAER,CAEsB5D,eAAAmI,2BACrBjI,QACAkI,OACAC,cAEI,IACC,IAACrH,YAAoB,cACzB,OAAQd,QAAQ8C,MACf,IAAK,eAAgB,CAChB,IACcsF,iBAAAC,IAAIrI,QAAQsI,WAChBH,aAAA,CAAEI,QAAS,aAChB7E,OACJoB,MAAAlD,KAAK,8BAA+B,KAAM8B,OAC9CyE,aAAa,CAAEI,QAAS,MAAO7E,aAAc,CAEvC,YAER,QAAS,CACD,qBAGDA,OACJoB,MAAAlD,KAAK,uCAAwC,KAAM8B,OACvD,GAAI8E,eACHL,aAAa,CAAEI,QAAS,MAAO7E,OAAOA,OAAO,YAAAA,MAAA1D,UAAW,4BAClD,YAET,CAEsBF,eAAA2I,4BACrBzI,QACAkI,OACAC,cAEI,IACC,IAACrH,YAAoB,cAGrBgE,MAAAQ,KAAK,kCAAmC,MAAO,CAClDxC,KAAM9C,QAAQ8C,KACdmC,eAAgBlB,wBAChB2E,gBAAiBtE,oCACjBe,WAAYX,kBAAkBxE,SAC9B2I,YAAa3I,UAGd,OAAQA,QAAQ8C,MACf,IAAK,WAAY,CACZgC,MAAAQ,KAAK,4CAA6C,MAAO,CAC5DhG,QAASyE,wBACT2E,gBAAiBtE,oCACjBe,WAAYX,kBAAkBxE,WAI3B,IAACoE,oCAAqC,CACrCU,MAAAQ,KACH,2EACA,MACAvB,yBAEM,aAGJ,IAACS,kBAAkBxE,SAAU,CAC5B8E,MAAAQ,KACH,uEACA,MACAvB,yBAEM,aAGJe,MAAAQ,KACH,0DACA,MACAvB,yBAGG,UAEGwC,QAAQC,IAAI,CACjB1F,YAAY8H,QAAQC,YAAY,CAAE/F,KAAM,sBAAuBU,MAAM,QACrEvC,yBAIK8G,oBAAoBe,0BACzB,6HACA,CAAEC,eAAgB,qCAInBZ,aAAa,CAAEI,QAAS,KAAMvI,QAAS,wBAG5BgJ,WAAA,IAAMC,aAAc,IAGxB,kBACCvF,OACJoB,MAAAlD,KAAK,mBAAoB,MAAO8B,OACpCyE,aAAa,CAAEI,QAAS,MAAO7E,MAAOA,MAAM1D,SAAW,oBAChD,YACR,CAGD,IAAK,mBAAoB,CACpB8E,MAAAQ,KAAK,qDAAsD,MAAO,CACrEhG,QAASyE,wBACT2E,gBAAiBtE,oCACjBe,WAAYX,kBAAkBxE,SAC9BkJ,SAAUlJ,QAAQkJ,SAClBC,QAASnJ,SAAS,YAAAA,QAAAmJ,UAIf,IAAC/E,oCAAqC,CACrCU,MAAAQ,KACH,mFACA,MACAvB,yBAEM,aAGJ,IAACS,kBAAkBxE,SAAU,CAC5B8E,MAAAQ,KACH,+EACA,MACAvB,yBAEM,aAGJe,MAAAQ,KACH,kEACA,MACAvB,yBAGG,IAEH,GAAI/D,QAAQkJ,SAAU,CACrBvH,MAAI2D,KAAK,oFAGHyC,oBAAoBqB,6BAA4BpJ,SAAS,YAAAA,QAAAmJ,UAAW,IAAO,CAChFJ,eAAgB,6CAChB,KACK,CACNpH,MAAI2D,KAAK,uDAGHyC,oBAAoBsB,qBAAoBrJ,SAAS,YAAAA,QAAAmJ,UAAW,IAAO,CACxEJ,eAAgB,6CAChB,CAGFpH,MAAI2D,KAAK,mEACT6C,aAAa,CAAEI,QAAS,KAAMvI,QAAS,yCAChC,kBACC0D,OACJoB,MAAAlD,KAAK,0CAA2C,MAAO8B,OAC3DyE,aAAa,CAAEI,QAAS,MAAO7E,MAAOA,MAAM1D,SAAW,6BAChD,YACR,CAGD,IAAK,4BAA6B,CAC7B8E,MAAAQ,KAAK,6DAA8D,MAAO,CAC7EhG,QAASyE,wBACToF,QAASnJ,QAAQmJ,QACjBG,cAAetJ,QAAQsJ,gBAGpB,IAAClF,oCAAqC,CACrCU,MAAAQ,KACH,uFAEM,aAGJ,IAEC,UAAOlE,SAAW,YAAa,CAClCA,OAAOmI,QAGP,MAAMC,cAAgB7C,SAASY,MAC/B,IAAIkC,WAAa,EACX,MAAAC,cAAgBC,YAAY,KACjChD,SAASY,MACRkC,WAAa,IAAM,EAAI,oCAAsCD,cAC9DC,aAEA,GAAIA,YAAc,GAAI,CAErBpC,cAAcqC,eACd/C,SAASY,MAAQiC,aAAA,GAEhB,KAGFpI,OAAegG,0BAA4BsC,cAC3CtI,OAAekG,qBAAuBkC,aAAA,CAIpC,UAAOpI,SAAW,YAAa,CAClC,MAAMwI,oBAAEA,2BAA8B5C,cAAAlH,UAAA,MAAA8J,gDAAA3C,OAAO,iBAAoC,OAAA2C,2CAAA,KAAA1C,8BAAA,cAAAC,KAC7DyC,oBAAA5J,QAAQ6J,cAAgBC,KAAKC,KAAK/J,QAAQmJ,QAAU,KAAO,KAC9ExH,MAAI2D,KAAK,sDACT,CAGF3D,MAAI2D,KAAK,qDACT6C,aAAa,CAAEI,QAAS,KAAMvI,QAAS,yCAChC,kBACC0D,OACJoB,MAAAlD,KAAK,kDAAmD,MAAO8B,OACnEyE,aAAa,CAAEI,QAAS,MAAO7E,MAAOA,MAAM1D,UACrC,YACR,CAGD,IAAK,0BAA2B,CAC/B2B,MAAI2D,KAAK,4DAEL,IAAClB,oCAAqC,CAClC,aAGJ,IAEC,UAAOhD,SAAW,YAAa,CAClCA,OAAOmI,OAAM,OAIRxB,oBAAoBiC,kBAAkBhK,QAAQA,QAASA,QAAQiK,QAASjK,QAAQsG,IAEtF3E,MAAI2D,KAAK,mDACI6C,aAAA,CAAEI,QAAS,OACjB,kBACC7E,OACJoB,MAAAlD,KAAK,gDAAiD,MAAO8B,OACjEyE,aAAa,CAAEI,QAAS,MAAO7E,MAAOA,MAAM1D,UACrC,YACR,CAGD,IAAK,oBAAqB,CACrB,IACH,UAAWoB,SAAW,aAAeA,OAAOc,aAAc,CAChDJ,SAAA,IAAK,GAAK,GAAG,CAEVqG,aAAA,CAAEI,QAAS,OACjB,kBACC7E,OACRyE,aAAa,CAAEI,QAAS,MAAO7E,MAAOA,MAAM1D,UACrC,YACR,CAGD,IAAK,4BAA6B,CAC7B8E,MAAAQ,KAAK,2DAA4D,MAAO,CAC3EhG,QAASyE,wBACTsB,OAAQrF,QAAQqF,OAChB6E,UAAWlK,QAAQkK,YAGhB,UAEG9E,uBAAuB,WAAWpF,QAAQqF,QAAU,aAE1D1D,MAAI2D,KAAK,0DACI6C,aAAA,CAAEI,QAAS,OACjB,kBACC7E,OACJoB,MAAAlD,KAAK,iDAAkD,MAAO8B,OAClEyE,aAAa,CAAEI,QAAS,MAAO7E,MAAOA,MAAM1D,UACrC,YACR,CAGD,IAAK,qBAAsB,CAC1B2B,MAAI2D,KAAK,6CAA8C,MAAOtF,QAAQmK,gBAElE,IAEC,GAAArJ,YAAYiF,eAAiB/F,QAAQmK,eAAgB,OAClDrJ,YAAYiF,cAAcrF,MAAMV,QAAQmK,eAAc,CAI7D,GAAIrJ,YAAY2E,OAAQ,OACjB3E,YAAY2E,OAAOC,aAAa,CAAEC,KAAM,WACxC7E,YAAY2E,OAAOG,QAAQ,CAChCC,KAAM,CACL,GAAI,+BACJ,GAAI,+BACJ,GAAI,+BACJ,GAAI,+BACJ,IAAK,mCAEN,CAGFsC,aAAa,CAAEI,QAAS,KAAMvI,QAAS,uCAC/B0D,OACJoB,MAAAlD,KAAK,6CAA8C,MAAO8B,OAC9DyE,aAAa,CAAEI,QAAS,MAAO7E,MAAOA,MAAM1D,SAAS,CAE/C,YAGR,IAAK,8BAA+B,CACnC2B,MAAI2D,KAAK,gDAAiD,MAAOtF,QAAQmK,gBAErE,IAEC,GAAArJ,YAAYiF,eAAiB/F,QAAQmK,eAAgB,OAClDrJ,YAAYiF,cAAcrF,MAAMV,QAAQmK,eAAc,CAI7D,GAAInK,QAAQmK,eAAehG,SAAS,oBAAqB,OAClDiB,uBAAuB,8BAA6B,CAG3DzD,MAAI2D,KAAK,+CACI6C,aAAA,CAAEI,QAAS,OACjB,kBACC7E,OACJoB,MAAAlD,KAAK,uDAAwD,MAAO8B,OACxEyE,aAAa,CAAEI,QAAS,MAAO7E,MAAOA,MAAM1D,UACrC,YACR,CAGD,IAAK,cAAe,CACnB2B,MAAI2D,KAAK,iDAEL,IAEC,UAAOlE,SAAW,YAAa,CAClCA,OAAOmI,QAGP,GAAI5C,SAASyD,QAAUzD,SAAS0D,kBAAoB,SAAU,CAE7D,GAAI,wBAAyBjJ,OAAQ,CACpCkJ,oBAAoB,KACnBlJ,OAAOmI,SACP,CAIF,MAAMgB,uBAAyB,KAC1B,IAAC5D,SAASyD,OAAQ,CACrBhJ,OAAOmI,QACE5C,SAAArF,oBAAoB,mBAAoBiJ,uBAAsB,GAGhE5D,SAAApF,iBAAiB,mBAAoBgJ,wBAG9CvB,WAAW,KACDrC,SAAArF,oBAAoB,mBAAoBiJ,yBAC/C,IAAK,CAIT,MAAMf,cAAgB7C,SAASY,MAC/B,IAAIkC,WAAa,EACX,MAAAC,cAAgBC,YAAY,KACjChD,SAASY,MACRkC,WAAa,IAAM,EAAI,oCAAsCD,cAC9DC,aAEA,GAAIA,YAAc,GAAI,CAErBpC,cAAcqC,eACd/C,SAASY,MAAQiC,aAAA,GAEhB,KAGFpI,OAAegG,0BAA4BsC,cAC3CtI,OAAekG,qBAAuBkC,cAEvC7H,MAAI2D,KAAK,uDAAsD,CAGhE6C,aAAa,CAAEI,QAAS,KAAMvI,QAAS,4BAChC,kBACC0D,OACJoB,MAAAlD,KAAK,qCAAsC,MAAO8B,OACtDyE,aAAa,CAAEI,QAAS,MAAO7E,MAAOA,MAAM1D,SAAW,wBAChD,YACR,CAGD,IAAK,iBAAkB,CACtB2B,MAAI2D,KAAK,qDAEL,UAEGF,uBAAuB,0BAE7BzD,MAAI2D,KAAK,oCACT6C,aAAa,CAAEI,QAAS,KAAMvI,QAAS,wBAChC,kBACC0D,OACJoB,MAAAlD,KAAK,qCAAsC,MAAO8B,OACtDyE,aAAa,CAAEI,QAAS,MAAO7E,MAAOA,MAAM1D,SAAW,wBAChD,YACR,CAGD,IAAK,sBAAuB,CACvB8E,MAAAQ,KAAK,uDAAwD,MAAO,CACvEmB,MAAOzG,QAAQyG,MACfnH,QAASyE,wBACT2E,gBAAiBtE,oCACjBe,WAAYX,kBAAkBxE,SAC9B6D,wBAIG,IAACO,oCAAqC,CACrCU,MAAAC,MACH,qFACA,MACAhB,yBAEM,aAGJ,IAACS,kBAAkBxE,SAAU,CAC5B8E,MAAAC,MACH,iFACA,MACAhB,yBAEM,aAIJe,MAAAQ,KACH,mDAAmDtF,QAAQyG,+BAA+B1C,2BAIvF,GAAA/D,QAAQyG,QAAU,SAAU,CAC/B9E,MAAI2D,KAAK,uEAEL,UAEGF,uBAAuB,sBAC7BzD,MAAI2D,KAAK,sEACD5B,OACJoB,MAAAlD,KAAK,uDAAwD,MAAO8B,MAAK,CAC9E,CAIG,UAAOtC,SAAW,YAAa,CAClCO,MAAI2D,KAAK,yDACFlE,OAAAoJ,cACN,IAAIC,YAAY,wBAAyB,CACxCC,OAAQ,CACPjE,MAAOzG,QAAQyG,MACfyD,UAAWlK,QAAQkK,aAGtB,CAGM,aAGR,QAAS,CACRvI,MAAIoD,MAAM,yCAAyC/E,QAAQ8C,QACpD,qBAGDpB,GACJoD,MAAAlD,KAAK,wCAAyC,MAAOF,GACzD,GAAI8G,eACHL,aAAa,CAAEI,QAAS,MAAO7E,OAAOhC,GAAG,YAAAA,EAAA1B,UAAW,4BAC9C,YAET,CAGgB,SAAA2K,0BACf3K,QACAkI,OACAC,cAEI,IAACrH,YAAoB,aAErB,IACH,OAAQd,QAAQ8C,MACf,IAAK,qBAAsB,CACT8H,mBACjBzC,aAAa,CAAEI,QAAS,KAAMvI,QAAS,4BAChC,YAER,IAAK,oBAAqB,CACT6K,kBAChB1C,aAAa,CAAEI,QAAS,KAAMvI,QAAS,iCAChC,YAER,QAAS,CACD,qBAGD0B,GACJoD,MAAAlD,KAAK,0BAA2BF,GACpC,GAAI8G,eACHL,aAAa,CAAEI,QAAS,MAAO7E,OAAOhC,GAAG,YAAAA,EAAA1B,UAAW,4BAC9C,YAET,CAEO,SAAS8K,iBACf,IAAKhK,YAAa,OAElBa,MAAI2D,KAAK,iDAAkD,MAAOvB,yBAElEvC,kBAAkB9B,IAAIoB,YAAY8H,QAAQmC,UAAW9C,4BACrDzG,kBAAkB9B,IAAIoB,YAAY8H,QAAQmC,UAAWtC,6BACrDjH,kBAAkB9B,IAAIoB,YAAY8H,QAAQmC,UAAWJ,2BAElCxJ,oBACpB,CAEO,SAAS6J,oBACf,IAAKlK,YAAa,OAClBa,MAAI2D,KAAK,uCACT9D,kBAAkBhB,YACIqB,uBACvB","names":["ListenerManager","constructor","context","__publicField","this","Set","add","event","handler","wrappedHandler","async","args","message","targetContext","hasListener","removeListener","addListener","listeners","remove","delete","removeAll","forEach","clear","handleOnRemoveWindow","windowId","browserSvelte","browser_ext","windows","WINDOW_ID_CURRENT","handleLockDown","handleBeforeUnload","addWindowListeners","window","fencedFrameConfig","removeEventListener","addEventListener","uiListenerManager","onRemoved","e","log","warn","removeWindowListeners","playBeep","frequency","duration","volume","AudioContext","audioContext","webkitAudioContext","__yakklAudioContext","oscillator","createOscillator","gainNode","createGain","connect","destination","setValueAtTime","currentTime","type","gain","exponentialRampToValueAtTime","start","stop","timerManager","UnifiedTimerManager","getInstance","addTimeout","close","catch","startTimeout","error","globalListenerManager","registerContext","isClearing","clearingPromise","getCurrentContextType","pathname","location","href","includes","currentContextNeedsIdleProtection","contextType","endsWith","protectedContexts","isMessageTargeted","targetContextTypes","Array","isArray","currentContextType","effectiveContextType","log$1","debug","messageTargets","currentContext","effectiveContext","isTargeted","performEnhancedCleanup","source","info","_performCleanup","_a","action","setBadgeText","text","setIcon","path","_b","notifications","getAll","Object","keys","length","clearPromises","map","id","Promise","all","state","audioElements","document","querySelectorAll","audio","pause","hideSecurityWarning","__vitePreload","import","__VITE_PRELOAD__","url","__yakklTitleFlashInterval","clearInterval","__yakklOriginalTitle","title","replace","trim","__yakklCountdownInterval","__yakklIntervals","intervals","_c","alarms","NotificationService","clearAllAlertsEnhanced","handleOnActiveTabUIChanged","sender","sendResponse","activeTabUIStore","set","activeTab","success","isBrowserEnv","handleOnMessageForExtension","needsProtection","messageData","runtime","sendMessage","sendSecurityAlertEnhanced","contextMessage","setTimeout","safeLogout","enhanced","delayMs","sendLockdownWarningEnhanced","sendLockdownWarning","windowFocused","focus","originalTitle","flashCount","flashInterval","setInterval","showSecurityWarning","delaySeconds","Math","ceil","sendSecurityAlert","options","timestamp","notificationId","hidden","visibilityState","requestIdleCallback","handleVisibilityChange","dispatchEvent","CustomEvent","detail","handleOnMessageForPricing","startCheckPrices","stopCheckPrices","addUIListeners","onMessage","removeUIListeners"],"ignoreList":[],"sources":["../../../../../../src/lib/managers/ListenerManager.ts","../../../../../../src/lib/common/listeners/ui/windowListeners.ts","../../../../../../src/lib/common/sound.ts","../../../../../../src/lib/common/listeners/ui/uiListeners.ts"],"sourcesContent":["// ListenerManager.ts\nimport type { ListenerContext } from './GlobalListenerManager';\n\ntype ListenerEntry = {\n\tevent: any; // Event source (e.g., browser.runtime.onMessage)\n\thandler: Function; // Listener function\n};\n\nexport class ListenerManager {\n\tprivate listeners: Set<ListenerEntry> = new Set();\n\tprivate context: ListenerContext;\n\n\tconstructor(context: ListenerContext) {\n\t\tthis.context = context;\n\t}\n\n\tadd(event: any, handler: Function) {\n\t\tconst wrappedHandler = async (...args: any[]) => {\n\t\t\tconst [message] = args;\n\n\t\t\t// Check if message should be handled in this context\n\t\t\tif (message.targetContext && message.targetContext !== this.context) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn await handler(...args);\n\t\t};\n\n\t\tif (event.hasListener(wrappedHandler)) {\n\t\t\tevent.removeListener(wrappedHandler);\n\t\t}\n\t\tevent.addListener(wrappedHandler);\n\t\tthis.listeners.add({ event, handler: wrappedHandler });\n\t}\n\n\tremove(event: any, handler: Function) {\n\t\tif (event.hasListener(handler)) {\n\t\t\tevent.removeListener(handler);\n\t\t\tthis.listeners.delete({ event, handler });\n\t\t}\n\t}\n\n\tremoveAll(context?: string) {\n\t\tthis.listeners.forEach(({ event, handler }) => {\n\t\t\tevent.removeListener(handler);\n\t\t});\n\t\tthis.listeners.clear();\n\t}\n}\n","import { browser_ext, browserSvelte } from '../../environment';\nimport { handleLockDown } from '$lib/common/handlers';\nimport { log } from '$lib/managers/Logger';\nimport { uiListenerManager } from './uiListeners';\n\nexport function handleOnRemoveWindow(windowId: number) {\n\tif (browserSvelte) {\n\t\tif (windowId === browser_ext.windows.WINDOW_ID_CURRENT) {\n\t\t\thandleLockDown();\n\t\t}\n\t}\n}\n\n// Window-specific event handlers\nfunction handleBeforeUnload() {\n\thandleLockDown();\n}\n\n// Add these window-specific listeners to uiListenerManager\nexport function addWindowListeners() {\n\tif (!browserSvelte) return;\n\n\ttry {\n\t\t// @ts-ignore\n\t\tif (!window.fencedFrameConfig) {\n\t\t\twindow.removeEventListener('beforeunload', handleBeforeUnload);\n\t\t\twindow.addEventListener('beforeunload', handleBeforeUnload);\n\t\t}\n\n\t\t// Add window-specific browser extension listeners\n\t\tuiListenerManager.add(browser_ext.windows.onRemoved, handleOnRemoveWindow);\n\t} catch (e) {\n\t\tlog.warn('Error adding window listeners:', false, e);\n\t}\n}\n\nexport function removeWindowListeners() {\n\tif (!browserSvelte) return;\n\n\ttry {\n\t\t// @ts-ignore\n\t\tif (!window.fencedFrameConfig) {\n\t\t\twindow.removeEventListener('beforeunload', handleBeforeUnload);\n\t\t}\n\n\t\t// Remove window-specific browser extension listeners\n\t\tuiListenerManager.remove(browser_ext.windows.onRemoved, handleOnRemoveWindow);\n\t} catch (e) {\n\t\tlog.warn('Error removing window listeners:', false, e);\n\t}\n}\n","import { log } from '$lib/managers/Logger';\nimport { UnifiedTimerManager } from '$lib/managers/UnifiedTimerManager';\n\n/**\n * Play a beep sound immediately\n * @param frequency - Sound frequency in Hz (default: 800)\n * @param duration - Sound duration in seconds (default: 0.2)\n * @param volume - Sound volume 0-1 (default: 0.3)\n */\nexport function playBeep(\n\tfrequency: number = 800,\n\tduration: number = 0.2,\n\tvolume: number = 0.3\n): void {\n\ttry {\n\t\tif (typeof window === 'undefined' || !window.AudioContext) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n\t\t(window as any).__yakklAudioContext = audioContext;\n\n\t\tconst oscillator = audioContext.createOscillator();\n\t\tconst gainNode = audioContext.createGain();\n\n\t\toscillator.connect(gainNode);\n\t\tgainNode.connect(audioContext.destination);\n\n\t\toscillator.frequency.setValueAtTime(frequency, audioContext.currentTime);\n\t\toscillator.type = 'sine';\n\n\t\tgainNode.gain.setValueAtTime(volume, audioContext.currentTime);\n\t\tgainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + duration);\n\n\t\toscillator.start(audioContext.currentTime);\n\t\toscillator.stop(audioContext.currentTime + duration);\n\n\t\t// Clean up after sound finishes using UnifiedTimerManager\n\t\tconst timerManager = UnifiedTimerManager.getInstance();\n\t\ttimerManager.addTimeout(\n\t\t\t'sound-cleanup',\n\t\t\t() => {\n\t\t\t\taudioContext.close().catch(() => {});\n\t\t\t},\n\t\t\t(duration + 0.1) * 1000\n\t\t);\n\t\ttimerManager.startTimeout('sound-cleanup');\n\t} catch (error) {\n\t\tlog.error('[Sound] Failed to play beep:', false, error);\n\t}\n}\n","import { ListenerManager } from '$lib/managers/ListenerManager';\nimport { browser_ext, isBrowserEnv } from '$lib/common/environment'; // UI context only\nimport type { Runtime } from 'webextension-polyfill'; // Correct Type Import\nimport { startCheckPrices, stopCheckPrices } from '$lib/tokens/prices';\nimport { handleLockDown } from '$lib/common/handlers';\nimport { globalListenerManager } from '$lib/managers/GlobalListenerManager';\nimport { log } from '$lib/common/logger-wrapper';\nimport { NotificationService } from '$lib/common/notifications';\nimport { activeTabUIStore } from '$lib/common/stores';\nimport { addWindowListeners, removeWindowListeners } from './windowListeners';\nimport { safeLogout } from '$lib/common/safeNavigate';\nimport { protectedContexts } from '$lib/common/globals';\nimport { playBeep } from '$lib/common/sound';\n\nexport const uiListenerManager = new ListenerManager('ui');\n\n// Register uiListenerManager globally\nglobalListenerManager.registerContext('ui', uiListenerManager);\n\n// Track cleanup state to prevent race conditions\nlet isClearing = false;\nlet clearingPromise: Promise<void> | null = null;\n\n// Get current context type\nfunction getCurrentContextType(): string {\n\ttry {\n\t\tif (typeof window === 'undefined') return 'unknown';\n\n\t\tconst pathname = window.location.pathname;\n\t\tconst href = window.location.href;\n\n\t\tif (pathname.includes('sidepanel') || href.includes('sidepanel')) {\n\t\t\treturn 'sidepanel';\n\t\t} else if (\n\t\t\tpathname.includes('index.html') ||\n\t\t\thref.includes('index.html') ||\n\t\t\tpathname === '/' ||\n\t\t\tpathname === ''\n\t\t) {\n\t\t\treturn 'popup-wallet';\n\t\t} else if (pathname.includes('dapp/popups') || href.includes('dapp/popups')) {\n\t\t\treturn 'popup-dapp';\n\t\t} else {\n\t\t\treturn 'popup-wallet'; // Default to popup-wallet for main extension\n\t\t}\n\t} catch (error) {\n\t\treturn 'unknown';\n\t}\n}\n\n// Check if current context needs idle protection\nfunction currentContextNeedsIdleProtection(): boolean {\n\tconst contextType = getCurrentContextType();\n\n\t// If context is unknown but we're in an extension popup, assume it needs protection\n\tif (contextType === 'unknown' && typeof window !== 'undefined') {\n\t\tconst href = window.location.href;\n\t\tif (\n\t\t\thref.includes('chrome-extension://') &&\n\t\t\t(href.includes('index.html') || href.endsWith('/'))\n\t\t) {\n\t\t\treturn true; // Assume it's a popup-wallet\n\t\t}\n\t}\n\n\treturn protectedContexts.includes(contextType);\n}\n\n// Check if message is targeted to this context type - be more permissive\nfunction isMessageTargeted(message: any): boolean {\n\t// If no target context types specified, message is for all contexts\n\tif (!message.targetContextTypes || !Array.isArray(message.targetContextTypes)) {\n\t\treturn true;\n\t}\n\n\tconst currentContextType = getCurrentContextType();\n\n\t// If current context is unknown but we're in a popup, assume it's popup-wallet\n\tconst effectiveContextType =\n\t\tcurrentContextType === 'unknown' ? 'popup-wallet' : currentContextType;\n\n\tlog.debug(`[uiListeners] Message targeting check:`, false, {\n\t\tmessageTargets: message.targetContextTypes,\n\t\tcurrentContext: currentContextType,\n\t\teffectiveContext: effectiveContextType,\n\t\tisTargeted: message.targetContextTypes.includes(effectiveContextType)\n\t});\n\n\treturn message.targetContextTypes.includes(effectiveContextType);\n}\n\n/**\n * Centralized cleanup function to avoid race conditions\n */\nasync function performEnhancedCleanup(source: string = 'unknown'): Promise<void> {\n\t// Prevent multiple simultaneous cleanup operations\n\tif (isClearing) {\n\t\tlog.info(`[uiListeners] Already clearing alerts from ${source}, waiting for completion`);\n\t\tif (clearingPromise) {\n\t\t\tawait clearingPromise;\n\t\t}\n\t\treturn;\n\t}\n\n\tisClearing = true;\n\tclearingPromise = _performCleanup(source);\n\n\ttry {\n\t\tawait clearingPromise;\n\t} finally {\n\t\tisClearing = false;\n\t\tclearingPromise = null;\n\t}\n}\n\n/**\n * Internal cleanup implementation\n */\nasync function _performCleanup(source: string): Promise<void> {\n\ttry {\n\t\tlog.info(`[uiListeners] Starting enhanced cleanup from: ${source}`);\n\n\t\t// 1. Clear badge and reset icon FIRST (most visible to user)\n\t\tif (browser_ext?.action) {\n\t\t\ttry {\n\t\t\t\tawait browser_ext.action.setBadgeText({ text: '' });\n\t\t\t\tawait browser_ext.action.setIcon({\n\t\t\t\t\tpath: {\n\t\t\t\t\t\t16: '/images/logoBullFav16x16.png',\n\t\t\t\t\t\t32: '/images/logoBullFav32x32.png',\n\t\t\t\t\t\t48: '/images/logoBullFav48x48.png',\n\t\t\t\t\t\t96: '/images/logoBullFav96x96.png',\n\t\t\t\t\t\t128: '/images/logoBullFav128x128.png'\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tlog.info('[uiListeners] Badge and icon cleared');\n\t\t\t} catch (error) {\n\t\t\t\tlog.warn('[uiListeners] Error clearing badge/icon:', false, error);\n\t\t\t}\n\t\t}\n\n\t\t// 2. Clear any browser notifications\n\t\tif (browser_ext?.notifications) {\n\t\t\ttry {\n\t\t\t\tconst notifications = await browser_ext.notifications.getAll();\n\t\t\t\tlog.info(`[uiListeners] Found ${Object.keys(notifications).length} notifications to clear`);\n\n\t\t\t\tconst clearPromises = Object.keys(notifications).map((id) =>\n\t\t\t\t\tbrowser_ext.notifications.clear(id).catch(() => {})\n\t\t\t\t);\n\t\t\t\tawait Promise.all(clearPromises);\n\t\t\t\tlog.info('[uiListeners] Browser notifications cleared');\n\t\t\t} catch (error) {\n\t\t\t\tlog.warn('[uiListeners] Error clearing notifications:', false, error);\n\t\t\t}\n\t\t}\n\n\t\t// 3. Stop any playing sounds and close audio contexts\n\t\tif (typeof window !== 'undefined') {\n\t\t\ttry {\n\t\t\t\t// Close any audio contexts we might have created\n\t\t\t\tconst audioContext = (window as any).__yakklAudioContext;\n\t\t\t\tif (audioContext && audioContext.state !== 'closed') {\n\t\t\t\t\tawait audioContext.close();\n\t\t\t\t\t(window as any).__yakklAudioContext = null;\n\t\t\t\t\tlog.info('[uiListeners] Audio context closed');\n\t\t\t\t}\n\n\t\t\t\t// Clear any stored audio elements\n\t\t\t\tconst audioElements = document.querySelectorAll('audio[data-yakkl-sound]');\n\t\t\t\taudioElements.forEach((audio) => {\n\t\t\t\t\t(audio as HTMLAudioElement).pause();\n\t\t\t\t\taudio.remove();\n\t\t\t\t});\n\n\t\t\t\tif (audioElements.length > 0) {\n\t\t\t\t\tlog.info(`[uiListeners] Cleared ${audioElements.length} audio elements`);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tlog.warn('Audio cleanup error (may be normal):', false, e);\n\t\t\t}\n\t\t}\n\n\t\t// 4. Clear in-app security warning\n\t\tif (typeof window !== 'undefined') {\n\t\t\ttry {\n\t\t\t\tconst { hideSecurityWarning } = await import('$lib/common/stores/securityWarning');\n\t\t\t\thideSecurityWarning();\n\t\t\t\tlog.info('[uiListeners] In-app security warning cleared');\n\t\t\t} catch (e) {\n\t\t\t\tlog.warn('Error clearing security warning:', false, e);\n\t\t\t}\n\t\t}\n\n\t\t// 5. Clear title flash and restore original title\n\t\tif (typeof window !== 'undefined') {\n\t\t\ttry {\n\t\t\t\t// Clear any title flash intervals\n\t\t\t\tif ((window as any).__yakklTitleFlashInterval) {\n\t\t\t\t\tclearInterval((window as any).__yakklTitleFlashInterval);\n\t\t\t\t\t(window as any).__yakklTitleFlashInterval = null;\n\t\t\t\t\tlog.info('[uiListeners] Title flash interval cleared');\n\t\t\t\t}\n\n\t\t\t\t// Restore original title if it was changed\n\t\t\t\tif ((window as any).__yakklOriginalTitle) {\n\t\t\t\t\tdocument.title = (window as any).__yakklOriginalTitle;\n\t\t\t\t\t(window as any).__yakklOriginalTitle = null;\n\t\t\t\t\tlog.info('[uiListeners] Original title restored');\n\t\t\t\t} else if (document.title.includes('🚨 URGENT')) {\n\t\t\t\t\t// Fallback title restoration\n\t\t\t\t\tdocument.title = document.title.replace(/🚨 URGENT[^!]*!/g, '').trim() || 'YAKKL Wallet';\n\t\t\t\t\tlog.info('[uiListeners] Title cleaned up (fallback)');\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tlog.warn('Title cleanup error:', false, e);\n\t\t\t}\n\t\t}\n\n\t\t// 6. Clear any countdown timers and intervals\n\t\tif (typeof window !== 'undefined') {\n\t\t\ttry {\n\t\t\t\t// Clear countdown interval\n\t\t\t\tif ((window as any).__yakklCountdownInterval) {\n\t\t\t\t\tclearInterval((window as any).__yakklCountdownInterval);\n\t\t\t\t\t(window as any).__yakklCountdownInterval = null;\n\t\t\t\t\tlog.info('[uiListeners] Countdown interval cleared');\n\t\t\t\t}\n\n\t\t\t\t// Clear any other YAKKL-specific intervals\n\t\t\t\tif ((window as any).__yakklIntervals) {\n\t\t\t\t\tconst intervals = (window as any).__yakklIntervals as number[];\n\t\t\t\t\tintervals.forEach((id) => clearInterval(id));\n\t\t\t\t\t(window as any).__yakklIntervals = [];\n\t\t\t\t\tlog.info(`[uiListeners] Cleared ${intervals.length} stored intervals`);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tlog.warn('Interval cleanup error:', false, e);\n\t\t\t}\n\t\t}\n\n\t\t// 7. Clear any pending alarms\n\t\tif (browser_ext?.alarms) {\n\t\t\ttry {\n\t\t\t\tawait Promise.all([\n\t\t\t\t\tbrowser_ext.alarms.clear('yakkl-lock-alarm').catch(() => {}),\n\t\t\t\t\tbrowser_ext.alarms.clear('yakkl-lock-notification').catch(() => {})\n\t\t\t\t]);\n\t\t\t\tlog.info('[uiListeners] Alarms cleared');\n\t\t\t} catch (error) {\n\t\t\t\tlog.debug('Alarm clearing error:', false, error);\n\t\t\t}\n\t\t}\n\n\t\t// 8. Use NotificationService centralized cleanup\n\t\ttry {\n\t\t\tawait NotificationService.clearAllAlertsEnhanced();\n\t\t\tlog.info('[uiListeners] NotificationService cleanup completed');\n\t\t} catch (error) {\n\t\t\tlog.warn('[uiListeners] NotificationService cleanup error:', false, error);\n\t\t}\n\n\t\tlog.info(`[uiListeners] Enhanced cleanup completed successfully from: ${source}`);\n\t} catch (error) {\n\t\tlog.warn(`[uiListeners] Enhanced cleanup failed from ${source}:`, false, error);\n\t\tthrow error;\n\t}\n}\n\nexport async function handleOnActiveTabUIChanged(\n\tmessage: any,\n\tsender: Runtime.MessageSender,\n\tsendResponse: (response?: any) => void\n): Promise<any> {\n\ttry {\n\t\tif (!browser_ext) return undefined;\n\t\tswitch (message.type) {\n\t\t\tcase 'setActiveTab': {\n\t\t\t\ttry {\n\t\t\t\t\tactiveTabUIStore.set(message.activeTab);\n\t\t\t\t\tsendResponse({ success: true });\n\t\t\t\t} catch (error) {\n\t\t\t\t\tlog.warn('Error on active tab change:', true, error);\n\t\t\t\t\tsendResponse({ success: false, error: error });\n\t\t\t\t}\n\t\t\t\treturn true; // Indicate asynchronous response\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\treturn false; // Let other listeners handle it\n\t\t\t}\n\t\t}\n\t} catch (error: any) {\n\t\tlog.warn('Error handling setActiveTab message:', true, error);\n\t\tif (isBrowserEnv())\n\t\t\tsendResponse({ success: false, error: error?.message || 'Unknown error occurred.' });\n\t\treturn true; // Indicate asynchronous response\n\t}\n}\n\nexport async function handleOnMessageForExtension(\n\tmessage: any,\n\tsender: Runtime.MessageSender,\n\tsendResponse: (response?: any) => void\n): Promise<any> {\n\ttry {\n\t\tif (!browser_ext) return undefined;\n\n\t\t// Enhanced logging for ALL messages\n\t\tlog.info('[uiListeners] Received message:', false, {\n\t\t\ttype: message.type,\n\t\t\tcurrentContext: getCurrentContextType(),\n\t\t\tneedsProtection: currentContextNeedsIdleProtection(),\n\t\t\tisTargeted: isMessageTargeted(message),\n\t\t\tmessageData: message\n\t\t});\n\n\t\tswitch (message.type) {\n\t\t\tcase 'lockdown': {\n\t\t\t\tlog.info('[uiListeners] Processing LOCKDOWN message', false, {\n\t\t\t\t\tcontext: getCurrentContextType(),\n\t\t\t\t\tneedsProtection: currentContextNeedsIdleProtection(),\n\t\t\t\t\tisTargeted: isMessageTargeted(message)\n\t\t\t\t});\n\n\t\t\t\t// Only handle lockdown if this context needs protection AND message is targeted to us\n\t\t\t\tif (!currentContextNeedsIdleProtection()) {\n\t\t\t\t\tlog.info(\n\t\t\t\t\t\t'[uiListeners] Ignoring lockdown - context does not need idle protection:',\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\tgetCurrentContextType()\n\t\t\t\t\t);\n\t\t\t\t\treturn false; // Let other listeners handle it if any\n\t\t\t\t}\n\n\t\t\t\tif (!isMessageTargeted(message)) {\n\t\t\t\t\tlog.info(\n\t\t\t\t\t\t'[uiListeners] Ignoring lockdown - not targeted to this context type:',\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\tgetCurrentContextType()\n\t\t\t\t\t);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlog.info(\n\t\t\t\t\t'[uiListeners] EXECUTING lockdown for protected context:',\n\t\t\t\t\tfalse,\n\t\t\t\t\tgetCurrentContextType()\n\t\t\t\t);\n\n\t\t\t\ttry {\n\t\t\t\t\t// Execute all preliminary operations\n\t\t\t\t\tawait Promise.all([\n\t\t\t\t\t\tbrowser_ext.runtime.sendMessage({ type: 'stopPricingChecks' }).catch(() => {}),\n\t\t\t\t\t\thandleLockDown()\n\t\t\t\t\t]);\n\n\t\t\t\t\t// Use ENHANCED security alert for lockdown\n\t\t\t\t\tawait NotificationService.sendSecurityAlertEnhanced(\n\t\t\t\t\t\t'YAKKL Wallet locked due to inactivity. \\nTo prevent unauthorized transactions, your wallet has been locked and logged out.',\n\t\t\t\t\t\t{ contextMessage: 'Click extension icon to relaunch' }\n\t\t\t\t\t);\n\n\t\t\t\t\t// Send the response before logout\n\t\t\t\t\tsendResponse({ success: true, message: 'Lockdown initiated.' });\n\n\t\t\t\t\t// Delay logout slightly to ensure response is sent\n\t\t\t\t\tsetTimeout(() => safeLogout(), 50);\n\n\t\t\t\t\t// Return true to indicate we're using the sendResponse callback\n\t\t\t\t\treturn true;\n\t\t\t\t} catch (error: any) {\n\t\t\t\t\tlog.warn('Lockdown failed:', false, error);\n\t\t\t\t\tsendResponse({ success: false, error: error.message || 'Lockdown failed' });\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcase 'lockdownImminent': {\n\t\t\t\tlog.info('[uiListeners] Processing LOCKDOWN IMMINENT message', false, {\n\t\t\t\t\tcontext: getCurrentContextType(),\n\t\t\t\t\tneedsProtection: currentContextNeedsIdleProtection(),\n\t\t\t\t\tisTargeted: isMessageTargeted(message),\n\t\t\t\t\tenhanced: message.enhanced,\n\t\t\t\t\tdelayMs: message?.delayMs\n\t\t\t\t});\n\n\t\t\t\t// Only handle lockdown warning if this context needs protection AND message is targeted to us\n\t\t\t\tif (!currentContextNeedsIdleProtection()) {\n\t\t\t\t\tlog.info(\n\t\t\t\t\t\t'[uiListeners] Ignoring lockdownImminent - context does not need idle protection:',\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\tgetCurrentContextType()\n\t\t\t\t\t);\n\t\t\t\t\treturn false; // Let other listeners handle it if any\n\t\t\t\t}\n\n\t\t\t\tif (!isMessageTargeted(message)) {\n\t\t\t\t\tlog.info(\n\t\t\t\t\t\t'[uiListeners] Ignoring lockdownImminent - not targeted to this context type:',\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\tgetCurrentContextType()\n\t\t\t\t\t);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlog.info(\n\t\t\t\t\t'[uiListeners] EXECUTING lockdownImminent for protected context:',\n\t\t\t\t\tfalse,\n\t\t\t\t\tgetCurrentContextType()\n\t\t\t\t);\n\n\t\t\t\ttry {\n\t\t\t\t\t// Check if this is an enhanced lockdown warning request\n\t\t\t\t\tif (message.enhanced) {\n\t\t\t\t\t\tlog.info('[uiListeners] Using ENHANCED lockdown warning with full attention features');\n\n\t\t\t\t\t\t// Use the enhanced version with icon changes, badge countdown, focus, etc.\n\t\t\t\t\t\tawait NotificationService.sendLockdownWarningEnhanced(message?.delayMs || 30000, {\n\t\t\t\t\t\t\tcontextMessage: 'Use YAKKL before timeout to stop lockdown'\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlog.info('[uiListeners] Using standard lockdown warning');\n\n\t\t\t\t\t\t// Use the original version\n\t\t\t\t\t\tawait NotificationService.sendLockdownWarning(message?.delayMs || 30000, {\n\t\t\t\t\t\t\tcontextMessage: 'Use YAKKL before timeout to stop lockdown'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tlog.info('[uiListeners] NotificationService.sendLockdownWarning completed');\n\t\t\t\t\tsendResponse({ success: true, message: 'Imminent lockdown notification sent.' });\n\t\t\t\t\treturn true;\n\t\t\t\t} catch (error: any) {\n\t\t\t\t\tlog.warn('[uiListeners] Lockdown imminent failed:', false, error);\n\t\t\t\t\tsendResponse({ success: false, error: error.message || 'Lockdown imminent failed' });\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcase 'LOCKDOWN_WARNING_ENHANCED': {\n\t\t\t\tlog.info('[uiListeners] Processing ENHANCED LOCKDOWN WARNING message', false, {\n\t\t\t\t\tcontext: getCurrentContextType(),\n\t\t\t\t\tdelayMs: message.delayMs,\n\t\t\t\t\twindowFocused: message.windowFocused\n\t\t\t\t});\n\n\t\t\t\tif (!currentContextNeedsIdleProtection()) {\n\t\t\t\t\tlog.info(\n\t\t\t\t\t\t'[uiListeners] Ignoring enhanced lockdown warning - context does not need protection'\n\t\t\t\t\t);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\t// 1. Focus window and get attention\n\t\t\t\t\tif (typeof window !== 'undefined') {\n\t\t\t\t\t\twindow.focus();\n\n\t\t\t\t\t\t// Flash document title for attention\n\t\t\t\t\t\tconst originalTitle = document.title;\n\t\t\t\t\t\tlet flashCount = 0;\n\t\t\t\t\t\tconst flashInterval = setInterval(() => {\n\t\t\t\t\t\t\tdocument.title =\n\t\t\t\t\t\t\t\tflashCount % 2 === 0 ? '🚨 URGENT - YAKKL Security Alert!' : originalTitle;\n\t\t\t\t\t\t\tflashCount++;\n\n\t\t\t\t\t\t\tif (flashCount >= 10) {\n\t\t\t\t\t\t\t\t// Flash 5 times\n\t\t\t\t\t\t\t\tclearInterval(flashInterval);\n\t\t\t\t\t\t\t\tdocument.title = originalTitle;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 500);\n\n\t\t\t\t\t\t// Store for cleanup\n\t\t\t\t\t\t(window as any).__yakklTitleFlashInterval = flashInterval;\n\t\t\t\t\t\t(window as any).__yakklOriginalTitle = originalTitle;\n\t\t\t\t\t}\n\n\t\t\t\t\t// 2. Show enhanced in-app security warning\n\t\t\t\t\tif (typeof window !== 'undefined') {\n\t\t\t\t\t\tconst { showSecurityWarning } = await import('$lib/common/stores/securityWarning');\n\t\t\t\t\t\tshowSecurityWarning(message.delaySeconds || Math.ceil(message.delayMs / 1000), () => {\n\t\t\t\t\t\t\tlog.info('[uiListeners] Enhanced security warning completed');\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tlog.info('[uiListeners] Enhanced lockdown warning processed');\n\t\t\t\t\tsendResponse({ success: true, message: 'Enhanced lockdown warning displayed.' });\n\t\t\t\t\treturn true;\n\t\t\t\t} catch (error: any) {\n\t\t\t\t\tlog.warn('[uiListeners] Enhanced lockdown warning failed:', false, error);\n\t\t\t\t\tsendResponse({ success: false, error: error.message });\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcase 'SECURITY_ALERT_ENHANCED': {\n\t\t\t\tlog.info('[uiListeners] Processing ENHANCED SECURITY ALERT message');\n\n\t\t\t\tif (!currentContextNeedsIdleProtection()) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\t// Focus window\n\t\t\t\t\tif (typeof window !== 'undefined') {\n\t\t\t\t\t\twindow.focus();\n\t\t\t\t\t}\n\n\t\t\t\t\t// Show enhanced security alert using existing method\n\t\t\t\t\tawait NotificationService.sendSecurityAlert(message.message, message.options, message.id);\n\n\t\t\t\t\tlog.info('[uiListeners] Enhanced security alert processed');\n\t\t\t\t\tsendResponse({ success: true });\n\t\t\t\t\treturn true;\n\t\t\t\t} catch (error: any) {\n\t\t\t\t\tlog.warn('[uiListeners] Enhanced security alert failed:', false, error);\n\t\t\t\t\tsendResponse({ success: false, error: error.message });\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcase 'PLAY_URGENT_SOUND': {\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof window !== 'undefined' && window.AudioContext) {\n\t\t\t\t\t\tplayBeep(800, 0.2, 0.3);\n\t\t\t\t\t}\n\t\t\t\t\tsendResponse({ success: true });\n\t\t\t\t\treturn true;\n\t\t\t\t} catch (error: any) {\n\t\t\t\t\tsendResponse({ success: false, error: error.message });\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcase 'CLEAR_ALL_ENHANCED_ALERTS': {\n\t\t\t\tlog.info('[uiListeners] Received CLEAR_ALL_ENHANCED_ALERTS message', false, {\n\t\t\t\t\tcontext: getCurrentContextType(),\n\t\t\t\t\tsource: message.source,\n\t\t\t\t\ttimestamp: message.timestamp\n\t\t\t\t});\n\n\t\t\t\ttry {\n\t\t\t\t\t// Use centralized cleanup to avoid race conditions\n\t\t\t\t\tawait performEnhancedCleanup(`message_${message.source || 'unknown'}`);\n\n\t\t\t\t\tlog.info('[uiListeners] All enhanced alerts cleared successfully');\n\t\t\t\t\tsendResponse({ success: true });\n\t\t\t\t\treturn true;\n\t\t\t\t} catch (error: any) {\n\t\t\t\t\tlog.warn('[uiListeners] Failed to clear enhanced alerts:', false, error);\n\t\t\t\t\tsendResponse({ success: false, error: error.message });\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcase 'CLEAR_NOTIFICATION': {\n\t\t\t\tlog.info('[uiListeners] Handling CLEAR_NOTIFICATION:', false, message.notificationId);\n\n\t\t\t\ttry {\n\t\t\t\t\t// Clear the specific notification\n\t\t\t\t\tif (browser_ext.notifications && message.notificationId) {\n\t\t\t\t\t\tawait browser_ext.notifications.clear(message.notificationId);\n\t\t\t\t\t}\n\n\t\t\t\t\t// May not be needed - but clear badge just in case\n\t\t\t\t\tif (browser_ext.action) {\n\t\t\t\t\t\tawait browser_ext.action.setBadgeText({ text: '' });\n\t\t\t\t\t\tawait browser_ext.action.setIcon({\n\t\t\t\t\t\t\tpath: {\n\t\t\t\t\t\t\t\t16: '/images/logoBullFav16x16.png',\n\t\t\t\t\t\t\t\t32: '/images/logoBullFav32x32.png',\n\t\t\t\t\t\t\t\t48: '/images/logoBullFav48x48.png',\n\t\t\t\t\t\t\t\t96: '/images/logoBullFav96x96.png',\n\t\t\t\t\t\t\t\t128: '/images/logoBullFav128x128.png'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tsendResponse({ success: true, message: 'Notification cleared from UI' });\n\t\t\t\t} catch (error: any) {\n\t\t\t\t\tlog.warn('[uiListeners] Error clearing notification:', false, error);\n\t\t\t\t\tsendResponse({ success: false, error: error.message });\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tcase 'CLEAR_NOTIFICATION_ENHANCED': {\n\t\t\t\tlog.info('[uiListeners] Clearing enhanced notification:', false, message.notificationId);\n\n\t\t\t\ttry {\n\t\t\t\t\t// Clear the specific notification\n\t\t\t\t\tif (browser_ext.notifications && message.notificationId) {\n\t\t\t\t\t\tawait browser_ext.notifications.clear(message.notificationId);\n\t\t\t\t\t}\n\n\t\t\t\t\t// If it's a lockdown warning, clear enhanced features\n\t\t\t\t\tif (message.notificationId.includes('lockdown-warning')) {\n\t\t\t\t\t\tawait performEnhancedCleanup('enhanced_notification_clear');\n\t\t\t\t\t}\n\n\t\t\t\t\tlog.info('[uiListeners] Enhanced notification cleared');\n\t\t\t\t\tsendResponse({ success: true });\n\t\t\t\t\treturn true;\n\t\t\t\t} catch (error: any) {\n\t\t\t\t\tlog.warn('[uiListeners] Failed to clear enhanced notification:', false, error);\n\t\t\t\t\tsendResponse({ success: false, error: error.message });\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcase 'focusWindow': {\n\t\t\t\tlog.info('[uiListeners] Processing FOCUS WINDOW message');\n\n\t\t\t\ttry {\n\t\t\t\t\t// Try to focus the current window\n\t\t\t\t\tif (typeof window !== 'undefined') {\n\t\t\t\t\t\twindow.focus();\n\n\t\t\t\t\t\t// If the window is minimized or hidden, try to bring it to front\n\t\t\t\t\t\tif (document.hidden || document.visibilityState === 'hidden') {\n\t\t\t\t\t\t\t// Request user attention\n\t\t\t\t\t\t\tif ('requestIdleCallback' in window) {\n\t\t\t\t\t\t\t\trequestIdleCallback(() => {\n\t\t\t\t\t\t\t\t\twindow.focus();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Try to use the Page Visibility API to detect when visible\n\t\t\t\t\t\t\tconst handleVisibilityChange = () => {\n\t\t\t\t\t\t\t\tif (!document.hidden) {\n\t\t\t\t\t\t\t\t\twindow.focus();\n\t\t\t\t\t\t\t\t\tdocument.removeEventListener('visibilitychange', handleVisibilityChange);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tdocument.addEventListener('visibilitychange', handleVisibilityChange);\n\n\t\t\t\t\t\t\t// Clean up listener after 30 seconds\n\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\tdocument.removeEventListener('visibilitychange', handleVisibilityChange);\n\t\t\t\t\t\t\t}, 30000);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Flash the document title to get attention\n\t\t\t\t\t\tconst originalTitle = document.title;\n\t\t\t\t\t\tlet flashCount = 0;\n\t\t\t\t\t\tconst flashInterval = setInterval(() => {\n\t\t\t\t\t\t\tdocument.title =\n\t\t\t\t\t\t\t\tflashCount % 2 === 0 ? '🚨 URGENT - YAKKL Security Alert!' : originalTitle;\n\t\t\t\t\t\t\tflashCount++;\n\n\t\t\t\t\t\t\tif (flashCount >= 10) {\n\t\t\t\t\t\t\t\t// Flash 5 times\n\t\t\t\t\t\t\t\tclearInterval(flashInterval);\n\t\t\t\t\t\t\t\tdocument.title = originalTitle;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 500);\n\n\t\t\t\t\t\t// Store for cleanup\n\t\t\t\t\t\t(window as any).__yakklTitleFlashInterval = flashInterval;\n\t\t\t\t\t\t(window as any).__yakklOriginalTitle = originalTitle;\n\n\t\t\t\t\t\tlog.info('✅ [uiListeners] Window focus and attention requested');\n\t\t\t\t\t}\n\n\t\t\t\t\tsendResponse({ success: true, message: 'Window focus requested.' });\n\t\t\t\t\treturn true;\n\t\t\t\t} catch (error: any) {\n\t\t\t\t\tlog.warn('[uiListeners] Focus window failed:', false, error);\n\t\t\t\t\tsendResponse({ success: false, error: error.message || 'Focus window failed' });\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcase 'clearAllAlerts': {\n\t\t\t\tlog.info('[uiListeners] Processing CLEAR ALL ALERTS message');\n\n\t\t\t\ttry {\n\t\t\t\t\t// Use centralized cleanup\n\t\t\t\t\tawait performEnhancedCleanup('clearAllAlerts_message');\n\n\t\t\t\t\tlog.info('[uiListeners] All alerts cleared');\n\t\t\t\t\tsendResponse({ success: true, message: 'All alerts cleared.' });\n\t\t\t\t\treturn true;\n\t\t\t\t} catch (error: any) {\n\t\t\t\t\tlog.warn('[uiListeners] Clear alerts failed:', false, error);\n\t\t\t\t\tsendResponse({ success: false, error: error.message || 'Clear alerts failed' });\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcase 'IDLE_STATUS_CHANGED': {\n\t\t\t\tlog.info('[uiListeners] Processing IDLE STATUS CHANGED message', false, {\n\t\t\t\t\tstate: message.state,\n\t\t\t\t\tcontext: getCurrentContextType(),\n\t\t\t\t\tneedsProtection: currentContextNeedsIdleProtection(),\n\t\t\t\t\tisTargeted: isMessageTargeted(message),\n\t\t\t\t\tisClearing: isClearing\n\t\t\t\t});\n\n\t\t\t\t// Only handle idle status changes for protected contexts\n\t\t\t\tif (!currentContextNeedsIdleProtection()) {\n\t\t\t\t\tlog.debug(\n\t\t\t\t\t\t'[uiListeners] Ignoring idle status change - context does not need idle protection:',\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\tgetCurrentContextType()\n\t\t\t\t\t);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (!isMessageTargeted(message)) {\n\t\t\t\t\tlog.debug(\n\t\t\t\t\t\t'[uiListeners] Ignoring idle status change - not targeted to this context type:',\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\tgetCurrentContextType()\n\t\t\t\t\t);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// Handle idle status change for protected contexts\n\t\t\t\tlog.info(\n\t\t\t\t\t`[uiListeners] PROCESSING idle status changed to ${message.state} for protected context ${getCurrentContextType()}`\n\t\t\t\t);\n\n\t\t\t\t// If becoming active, clear all enhanced alerts\n\t\t\t\tif (message.state === 'active') {\n\t\t\t\t\tlog.info('[uiListeners] Active state detected, performing centralized cleanup');\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Use centralized cleanup to avoid race conditions\n\t\t\t\t\t\tawait performEnhancedCleanup('idle_status_active');\n\t\t\t\t\t\tlog.info('[uiListeners] Centralized cleanup completed for active state');\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tlog.warn('[uiListeners] Failed to perform centralized cleanup:', false, error);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Dispatch event for UI components\n\t\t\t\tif (typeof window !== 'undefined') {\n\t\t\t\t\tlog.info('[uiListeners] Dispatching yakklIdleStateChanged event');\n\t\t\t\t\twindow.dispatchEvent(\n\t\t\t\t\t\tnew CustomEvent('yakklIdleStateChanged', {\n\t\t\t\t\t\t\tdetail: {\n\t\t\t\t\t\t\t\tstate: message.state,\n\t\t\t\t\t\t\t\ttimestamp: message.timestamp\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn false; // Allow other listeners to process this message\n\t\t\t}\n\n\t\t\tdefault: {\n\t\t\t\tlog.debug(`[uiListeners] Unhandled message type: ${message.type}`);\n\t\t\t\treturn false; // Let other listeners handle it\n\t\t\t}\n\t\t}\n\t} catch (e: any) {\n\t\tlog.warn('[uiListeners] Error handling message:', false, e);\n\t\tif (isBrowserEnv())\n\t\t\tsendResponse({ success: false, error: e?.message || 'Unknown error occurred.' });\n\t\treturn true; // Indicate asynchronous response\n\t}\n}\n\n// Message handler for pricing checks\nexport function handleOnMessageForPricing(\n\tmessage: any,\n\tsender: Runtime.MessageSender,\n\tsendResponse: (response?: any) => void\n): boolean {\n\tif (!browser_ext) return false;\n\n\ttry {\n\t\tswitch (message.type) {\n\t\t\tcase 'startPricingChecks': {\n\t\t\t\tstartCheckPrices();\n\t\t\t\tsendResponse({ success: true, message: 'Price checks initiated.' });\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tcase 'stopPricingChecks': {\n\t\t\t\tstopCheckPrices();\n\t\t\t\tsendResponse({ success: true, message: 'Stop price checks initiated.' });\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\treturn false; // Let other listeners handle it\n\t\t\t}\n\t\t}\n\t} catch (e: any) {\n\t\tlog.warn('Error handling message:', e);\n\t\tif (isBrowserEnv())\n\t\t\tsendResponse({ success: false, error: e?.message || 'Unknown error occurred.' });\n\t\treturn true; // Indicate asynchronous response\n\t}\n}\n\nexport function addUIListeners() {\n\tif (!browser_ext) return;\n\n\tlog.info('[uiListeners] Adding UI listeners for context:', false, getCurrentContextType());\n\n\tuiListenerManager.add(browser_ext.runtime.onMessage, handleOnActiveTabUIChanged);\n\tuiListenerManager.add(browser_ext.runtime.onMessage, handleOnMessageForExtension);\n\tuiListenerManager.add(browser_ext.runtime.onMessage, handleOnMessageForPricing);\n\n\taddWindowListeners();\n}\n\nexport function removeUIListeners() {\n\tif (!browser_ext) return;\n\tlog.info('[uiListeners] Removing UI listeners');\n\tuiListenerManager.removeAll();\n\tremoveWindowListeners();\n}\n"],"file":"app/immutable/chunks/D-mKCNoU.js"}