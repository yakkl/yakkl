{"version":3,"file":"D-aJ6pD4.js","sources":["../../../../../../../../node_modules/.pnpm/ethereum-blockies-base64@1.0.2/node_modules/ethereum-blockies-base64/dist/main.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ethereum-blockies-base64\"] = factory();\n\telse\n\t\troot[\"ethereum-blockies-base64\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tconst pnglib = __webpack_require__(1);\n\tconst hsl2rgb = __webpack_require__(2);\n\n\t// The random number is a js implementation of the Xorshift PRNG\n\tconst randseed = new Array(4); // Xorshift: [x, y, z, w] 32 bit values\n\n\tfunction seedrand(seed) {\n\t  for (let i = 0; i < randseed.length; i++) {\n\t    randseed[i] = 0;\n\t  }\n\t  for (let i = 0; i < seed.length; i++) {\n\t    randseed[i % 4] = (randseed[i % 4] << 5) - randseed[i % 4] + seed.charCodeAt(i);\n\t  }\n\t}\n\n\tfunction rand() {\n\t  // based on Java's String.hashCode(), expanded to 4 32bit values\n\t  const t = randseed[0] ^ (randseed[0] << 11);\n\n\t  randseed[0] = randseed[1];\n\t  randseed[1] = randseed[2];\n\t  randseed[2] = randseed[3];\n\t  randseed[3] = randseed[3] ^ (randseed[3] >> 19) ^ t ^ (t >> 8);\n\n\t  return (randseed[3] >>> 0) / (1 << 31 >>> 0);\n\t}\n\n\tfunction createColor() {\n\t  //saturation is the whole color spectrum\n\t  const h = Math.floor(rand() * 360);\n\t  //saturation goes from 40 to 100, it avoids greyish colors\n\t  const s = rand() * 60 + 40;\n\t  //lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%\n\t  const l = (rand() + rand() + rand() + rand()) * 25 ;\n\n\t  return [h / 360, s / 100, l / 100];\n\t}\n\n\tfunction createImageData(size) {\n\t  const width = size; // Only support square icons for now\n\t  const height = size;\n\n\t  const dataWidth = Math.ceil(width / 2);\n\t  const mirrorWidth = width - dataWidth;\n\n\t  const data = [];\n\t  for (let y = 0; y < height; y++) {\n\t    let row = [];\n\t    for (let x = 0; x < dataWidth; x++) {\n\t      // this makes foreground and background color to have a 43% (1/2.3) probability\n\t      // spot color has 13% chance\n\t      row[x] = Math.floor(rand() * 2.3);\n\t    }\n\t    const r = row.slice(0, mirrorWidth).reverse();\n\t    row = row.concat(r);\n\n\t    for (let i = 0; i < row.length; i++) {\n\t      data.push(row[i]);\n\t    }\n\t  }\n\n\t  return data;\n\t}\n\n\t// Modifies the passed PNG to fill in a specified rectangle\n\tfunction fillRect(png, x, y, w, h, color) {\n\t  for(let i = 0; i < w; i++) {\n\t    for (let j = 0; j < h; j++) {\n\t      png.buffer[png.index(x + i, y + j)] = color;\n\t    }\n\t  }\n\t}\n\n\tfunction buildOpts(opts) {\n\t  if (!opts.seed) {\n\t    throw new Error('No seed provided');\n\t  }\n\n\t  seedrand(opts.seed);\n\n\t  return Object.assign({\n\t    size: 8,\n\t    scale: 16,\n\t    color: createColor(),\n\t    bgcolor: createColor(),\n\t    spotcolor: createColor(),\n\t  }, opts)\n\t}\n\n\tfunction makeBlockie(address) {\n\t  const opts = buildOpts({ seed: address.toLowerCase() });\n\n\t  const imageData = createImageData(opts.size);\n\t  const width = Math.sqrt(imageData.length);\n\n\t  const p = new pnglib(opts.size * opts.scale, opts.size * opts.scale, 3);\n\t  const bgcolor = p.color(...hsl2rgb(...opts.bgcolor));\n\t  const color = p.color(...hsl2rgb(...opts.color));\n\t  const spotcolor = p.color(...hsl2rgb(...opts.spotcolor));\n\n\t  for (let i = 0; i < imageData.length; i++) {\n\t    const row = Math.floor(i / width);\n\t    const col = i % width;\n\t    // if data is 0, leave the background\n\t    if (imageData[i]) {\n\t      // if data is 2, choose spot color, if 1 choose foreground\n\t      const pngColor = imageData[i] == 1 ? color : spotcolor;\n\t      fillRect(p, col * opts.scale, row * opts.scale, opts.scale, opts.scale, pngColor);\n\t    }\n\t  }\n\t  return `data:image/png;base64,${p.getBase64()}`;\n\t}\n\n\tmodule.exports = makeBlockie;\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/**\n\t * A handy class to calculate color values.\n\t *\n\t * @version 1.0\n\t * @author Robert Eisele <robert@xarg.org>\n\t * @copyright Copyright (c) 2010, Robert Eisele\n\t * @link http://www.xarg.org/2010/03/generate-client-side-png-files-using-javascript/\n\t * @license http://www.opensource.org/licenses/bsd-license.php BSD License\n\t *\n\t */\n\n\t// Modified by George Chan <gchan@21cn.com>\n\n\t// Further modified by Will O'B <@wbobeirne> to make it\n\t// UglifyJS and \"use strict\"; friendly\n\n\tmodule.exports = function(width,height,depth) {\n\n\n\t    // helper functions for that ctx\n\t    function write(buffer, offs) {\n\t        for (var i = 2; i < arguments.length; i++) {\n\t            for (var j = 0; j < arguments[i].length; j++) {\n\t                buffer[offs++] = arguments[i].charAt(j);\n\t            }\n\t        }\n\t    }\n\n\t    function byte2(w) {\n\t        return String.fromCharCode((w >> 8) & 255, w & 255);\n\t    }\n\n\t    function byte4(w) {\n\t        return String.fromCharCode((w >> 24) & 255, (w >> 16) & 255, (w >> 8) & 255, w & 255);\n\t    }\n\n\t    function byte2lsb(w) {\n\t        return String.fromCharCode(w & 255, (w >> 8) & 255);\n\t    }\n\n\t    this.width   = width;\n\t    this.height  = height;\n\t    this.depth   = depth;\n\n\t    // pixel data and row filter identifier size\n\t    this.pix_size = height * (width + 1);\n\n\t    // deflate header, pix_size, block headers, adler32 checksum\n\t    this.data_size = 2 + this.pix_size + 5 * Math.floor((0xfffe + this.pix_size) / 0xffff) + 4;\n\n\t    // offsets and sizes of Png chunks\n\t    this.ihdr_offs = 0; // IHDR offset and size\n\t    this.ihdr_size = 4 + 4 + 13 + 4;\n\t    this.plte_offs = this.ihdr_offs + this.ihdr_size; // PLTE offset and size\n\t    this.plte_size = 4 + 4 + 3 * depth + 4;\n\t    this.trns_offs = this.plte_offs + this.plte_size; // tRNS offset and size\n\t    this.trns_size = 4 + 4 + depth + 4;\n\t    this.idat_offs = this.trns_offs + this.trns_size; // IDAT offset and size\n\t    this.idat_size = 4 + 4 + this.data_size + 4;\n\t    this.iend_offs = this.idat_offs + this.idat_size; // IEND offset and size\n\t    this.iend_size = 4 + 4 + 4;\n\t    this.buffer_size  = this.iend_offs + this.iend_size; // total PNG size\n\n\t    this.buffer  = new Array();\n\t    this.palette = new Object();\n\t    this.pindex  = 0;\n\n\t    var _crc32 = new Array();\n\n\t    // initialize buffer with zero bytes\n\t    for (var i = 0; i < this.buffer_size; i++) {\n\t        this.buffer[i] = \"\\x00\";\n\t    }\n\n\t    // initialize non-zero elements\n\t    write(this.buffer, this.ihdr_offs, byte4(this.ihdr_size - 12), 'IHDR', byte4(width), byte4(height), \"\\x08\\x03\");\n\t    write(this.buffer, this.plte_offs, byte4(this.plte_size - 12), 'PLTE');\n\t    write(this.buffer, this.trns_offs, byte4(this.trns_size - 12), 'tRNS');\n\t    write(this.buffer, this.idat_offs, byte4(this.idat_size - 12), 'IDAT');\n\t    write(this.buffer, this.iend_offs, byte4(this.iend_size - 12), 'IEND');\n\n\t    // initialize deflate header\n\t    var header = ((8 + (7 << 4)) << 8) | (3 << 6);\n\t    header+= 31 - (header % 31);\n\n\t    write(this.buffer, this.idat_offs + 8, byte2(header));\n\n\t    // initialize deflate block headers\n\t    for (var i = 0; (i << 16) - 1 < this.pix_size; i++) {\n\t        var size, bits;\n\t        if (i + 0xffff < this.pix_size) {\n\t            size = 0xffff;\n\t            bits = \"\\x00\";\n\t        } else {\n\t            size = this.pix_size - (i << 16) - i;\n\t            bits = \"\\x01\";\n\t        }\n\t        write(this.buffer, this.idat_offs + 8 + 2 + (i << 16) + (i << 2), bits, byte2lsb(size), byte2lsb(~size));\n\t    }\n\n\t    /* Create crc32 lookup table */\n\t    for (var i = 0; i < 256; i++) {\n\t        var c = i;\n\t        for (var j = 0; j < 8; j++) {\n\t            if (c & 1) {\n\t                c = -306674912 ^ ((c >> 1) & 0x7fffffff);\n\t            } else {\n\t                c = (c >> 1) & 0x7fffffff;\n\t            }\n\t        }\n\t        _crc32[i] = c;\n\t    }\n\n\t    // compute the index into a png for a given pixel\n\t    this.index = function(x,y) {\n\t        var i = y * (this.width + 1) + x + 1;\n\t        var j = this.idat_offs + 8 + 2 + 5 * Math.floor((i / 0xffff) + 1) + i;\n\t        return j;\n\t    }\n\n\t    // convert a color and build up the palette\n\t    this.color = function(red, green, blue, alpha) {\n\n\t        alpha = alpha >= 0 ? alpha : 255;\n\t        var color = (((((alpha << 8) | red) << 8) | green) << 8) | blue;\n\n\t        if (typeof this.palette[color] == \"undefined\") {\n\t            if (this.pindex == this.depth) return \"\\x00\";\n\n\t            var ndx = this.plte_offs + 8 + 3 * this.pindex;\n\n\t            this.buffer[ndx + 0] = String.fromCharCode(red);\n\t            this.buffer[ndx + 1] = String.fromCharCode(green);\n\t            this.buffer[ndx + 2] = String.fromCharCode(blue);\n\t            this.buffer[this.trns_offs+8+this.pindex] = String.fromCharCode(alpha);\n\n\t            this.palette[color] = String.fromCharCode(this.pindex++);\n\t        }\n\t        return this.palette[color];\n\t    }\n\n\t    // output a PNG string, Base64 encoded\n\t    this.getBase64 = function() {\n\n\t        var s = this.getDump();\n\n\t        var ch = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\t        var c1, c2, c3, e1, e2, e3, e4;\n\t        var l = s.length;\n\t        var i = 0;\n\t        var r = \"\";\n\n\t        do {\n\t            c1 = s.charCodeAt(i);\n\t            e1 = c1 >> 2;\n\t            c2 = s.charCodeAt(i+1);\n\t            e2 = ((c1 & 3) << 4) | (c2 >> 4);\n\t            c3 = s.charCodeAt(i+2);\n\t            if (l < i+2) { e3 = 64; } else { e3 = ((c2 & 0xf) << 2) | (c3 >> 6); }\n\t            if (l < i+3) { e4 = 64; } else { e4 = c3 & 0x3f; }\n\t            r+= ch.charAt(e1) + ch.charAt(e2) + ch.charAt(e3) + ch.charAt(e4);\n\t        } while ((i+= 3) < l);\n\t        return r;\n\t    }\n\n\t    // output a PNG string\n\t    this.getDump = function() {\n\t        // compute adler32 of output pixels + row filter bytes\n\t        var BASE = 65521; /* largest prime smaller than 65536 */\n\t        var NMAX = 5552; /* NMAX is the largest n such that 255n(n+1)/2 + (n+1)(BASE-1) <= 2^32-1 */\n\t        var s1 = 1;\n\t        var s2 = 0;\n\t        var n = NMAX;\n\n\t        for (var y = 0; y < this.height; y++) {\n\t            for (var x = -1; x < this.width; x++) {\n\t                s1+= this.buffer[this.index(x, y)].charCodeAt(0);\n\t                s2+= s1;\n\t                if ((n-= 1) == 0) {\n\t                    s1%= BASE;\n\t                    s2%= BASE;\n\t                    n = NMAX;\n\t                }\n\t            }\n\t        }\n\t        s1%= BASE;\n\t        s2%= BASE;\n\t        write(this.buffer, this.idat_offs + this.idat_size - 8, byte4((s2 << 16) | s1));\n\n\t        // compute crc32 of the PNG chunks\n\t        function crc32(png, offs, size) {\n\t            var crc = -1;\n\t            for (var i = 4; i < size-4; i += 1) {\n\t                crc = _crc32[(crc ^ png[offs+i].charCodeAt(0)) & 0xff] ^ ((crc >> 8) & 0x00ffffff);\n\t            }\n\t            write(png, offs+size-4, byte4(crc ^ -1));\n\t        }\n\n\t        crc32(this.buffer, this.ihdr_offs, this.ihdr_size);\n\t        crc32(this.buffer, this.plte_offs, this.plte_size);\n\t        crc32(this.buffer, this.trns_offs, this.trns_size);\n\t        crc32(this.buffer, this.idat_offs, this.idat_size);\n\t        crc32(this.buffer, this.iend_offs, this.iend_size);\n\n\t        // convert PNG to string\n\t        return \"\\x89PNG\\r\\n\\x1a\\n\" + this.buffer.join('');\n\t    }\n\t};\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t// https://stackoverflow.com/questions/2353211/hsl-to-rgb-color-conversion\n\t/**\n\t * Converts an HSL color value to RGB. Conversion formula\n\t * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n\t * Assumes h, s, and l are contained in the set [0, 1] and\n\t * returns r, g, and b in the set [0, 255].\n\t *\n\t * @param   {number}  h       The hue\n\t * @param   {number}  s       The saturation\n\t * @param   {number}  l       The lightness\n\t * @return  {Array}           The RGB representation\n\t */\n\n\t function hue2rgb(p, q, t) {\n\t   if(t < 0) t += 1;\n\t   if(t > 1) t -= 1;\n\t   if(t < 1/6) return p + (q - p) * 6 * t;\n\t   if(t < 1/2) return q;\n\t   if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n\t   return p;\n\t }\n\n\tfunction hsl2rgb(h, s, l){\n\t  let r, g, b;\n\n\t  if (s == 0) {\n\t    r = g = b = l; // achromatic\n\t  } else {\n\t    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t    const p = 2 * l - q;\n\t    r = hue2rgb(p, q, h + 1/3);\n\t    g = hue2rgb(p, q, h);\n\t    b = hue2rgb(p, q, h - 1/3);\n\t  }\n\n\t  return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), 255];\n\t}\n\n\tmodule.exports = hsl2rgb;\n\n\n/***/ }\n/******/ ])\n});\n;"],"names":["webpackUniversalModuleDefinition","root","factory","module","exports","this","modules","installedModules","__webpack_require__","moduleId","id","loaded","call","m","c","p","pnglib","hsl2rgb","randseed","Array","seedrand","seed","i","length","charCodeAt","rand","t","createColor","h","Math","floor","s","l","createImageData","size","width","height","dataWidth","ceil","mirrorWidth","data","y","row","x","r","slice","reverse","concat","push","fillRect","png","w","color","j","buffer","index","buildOpts","opts","Error","Object","assign","scale","bgcolor","spotcolor","makeBlockie","address","toLowerCase","imageData","sqrt","col","pngColor","getBase64","depth","write","offs","arguments","charAt","byte2","String","fromCharCode","byte4","byte2lsb","pix_size","data_size","ihdr_offs","ihdr_size","plte_offs","plte_size","trns_offs","trns_size","idat_offs","idat_size","iend_offs","iend_size","buffer_size","palette","pindex","_crc32","header","bits","red","green","blue","alpha","ndx","getDump","ch","c1","c2","c3","e1","e2","e3","e4","BASE","NMAX","s1","s2","n","crc32","crc","join","hue2rgb","q","g","b","round"],"mappings":"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","x_google_ignoreList":[0]}