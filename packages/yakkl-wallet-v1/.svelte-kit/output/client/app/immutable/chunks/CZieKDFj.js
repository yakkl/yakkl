import{a as setIconLock}from"./CnIbzB-6.js";import{a9 as getObjectFromLocalStorage,aa as STORAGE_YAKKL_SETTINGS,ab as dateString,ac as setObjectInLocalStorage,Z as yakklCurrentlySelectedStore}from"./Cb2naUpm.js";import{a as browser_ext,i as isBrowserEnv}from"./CgCfpVku.js";import{l as log}from"./WDN37msH.js";import"./BaS8d5lg.js";import{g as getTimerManager}from"./BKVO1wI8.js";import"./Dw28gLPr.js";import"./D-aJ6pD4.js";import{g as get}from"./B2gA1VsD.js";async function stopLockIconTimer(){try{await setIconLock();const yakklSettings=await getObjectFromLocalStorage(STORAGE_YAKKL_SETTINGS);if(yakklSettings){getTimerManager().removeTimer("iconTimer_lockIcon");if(browser_ext){await browser_ext.runtime.sendMessage({type:"lockdown"})}}}catch(error){log.error("Error stopping lock icon timer:",false,error,error==null?void 0:error.stack)}}async function handleLockDown(){try{if(isBrowserEnv()){log.info("handleLockDown: Setting icon lock...",false);await setIconLock();const yakklSettings=await getObjectFromLocalStorage("settings");if(yakklSettings&&!yakklSettings.isLocked){yakklSettings.isLocked=true;yakklSettings.isLockedHow="window_exit";yakklSettings.updateDate=dateString();await setObjectInLocalStorage("settings",yakklSettings);const yakklCurrentlySelected=get(yakklCurrentlySelectedStore);yakklCurrentlySelected.shortcuts.isLocked=true;yakklCurrentlySelectedStore.set(yakklCurrentlySelected);stopLockIconTimer()}}else{log.info("handleLockDown: Does not believe to be in a browser environment.")}}catch(error){log.error("Error in lock down handler:",false,error)}}export{handleLockDown as h};
//# sourceMappingURL=CZieKDFj.js.map
