{"version":3,"file":"3fXJKFcU.js","sources":["../../../../../../src/lib/components/SkeletonBalance.svelte","../../../../../../src/lib/components/ImportPrivateKey.svelte","../../../../../../src/lib/components/ImportWatchAccount.svelte"],"sourcesContent":["<!-- SkeletonBalance.svelte - Loading placeholder for balance data -->\n<script lang=\"ts\">\n\tinterface Props {\n\t\tclassName?: string;\n\t\tshowLabel?: boolean;\n\t}\n\n\tlet { className = '', showLabel = true }: Props = $props();\n</script>\n\n<div class=\"animate-pulse {className}\">\n\t{#if showLabel}\n\t\t<div class=\"h-3 bg-gray-200 rounded w-16 mb-1\"></div>\n\t{/if}\n\t<div class=\"h-4 bg-gray-300 rounded w-20\"></div>\n</div>\n\n<style>\n\t@keyframes pulse {\n\t\t0%,\n\t\t100% {\n\t\t\topacity: 1;\n\t\t}\n\t\t50% {\n\t\t\topacity: 0.5;\n\t\t}\n\t}\n\n\t.animate-pulse {\n\t\tanimation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n\t}\n</style>\n","<!-- ImportPrivateKey.svelte -->\n<script lang=\"ts\">\n\timport { browserSvelte } from '$lib/common/environment';\n\timport {\n\t\tsetYakklAccountsStorage,\n\t\tsetYakklCurrentlySelectedStorage,\n\t\tsetProfileStorage,\n\t\tgetYakklAccounts,\n\t\tgetProfile,\n\t\tgetYakklCurrentlySelected,\n\t\tgetMiscStore\n\t} from '$lib/common/stores';\n\timport { yakklAccount as yakklAccountDefault } from '$lib/models/dataModels';\n\timport { getWallet } from '$lib/utilities/ethereum';\n\timport { encryptData, decryptData } from '$lib/common/encryption';\n\timport { deepCopy, getSymbol } from '$lib/utilities/utilities';\n\timport { DEFAULT_PERSONA, VERSION } from '$lib/common/constants';\n\timport { createForm } from 'svelte-forms-lib';\n\timport * as yup from 'yup';\n\t// import { Confetti } from 'svelte-confetti';\n\t// import { confetti } from '@neoconfetti/svelte';\n\timport {\n\t\tAccountTypeCategory,\n\t\taddressExist,\n\t\tisEncryptedData,\n\t\tNetworkType,\n\t\ttype AccountData,\n\t\ttype CurrentlySelectedData,\n\t\ttype Profile,\n\t\ttype ProfileData,\n\t\ttype YakklAccount,\n\t\ttype YakklCurrentlySelected\n\t} from '$lib/common';\n\timport WalletManager from '$lib/managers/WalletManager';\n\timport type { Wallet } from '$lib/managers/Wallet';\n\timport { onMount } from 'svelte';\n\timport { dateString } from '$lib/common/datetime';\n\timport Modal from './Modal.svelte';\n\timport { log } from '$lib/managers/Logger';\n\n\tlet wallet: Wallet;\n\tlet currentlySelected: YakklCurrentlySelected;\n\tlet yakklMiscStore: string;\n\tlet chainId: number = 1;\n\tlet error = $state('');\n\tlet showConfetti = $state(false);\n\n\tinterface Props {\n\t\tshow?: boolean;\n\t\tclassName?: string;\n\t\tonComplete?: (account: YakklAccount) => void;\n\t\tonCancel?: () => void;\n\t}\n\n\tlet {\n\t\tshow = $bindable(false),\n\t\tclassName = 'text-gray-600 z-[999]',\n\t\tonComplete = () => {\n\t\t\tshow = false;\n\t\t},\n\t\tonCancel = $bindable(() => {\n\t\t\tshow = false;\n\t\t})\n\t}: Props = $props();\n\n\tonMount(async () => {\n\t\ttry {\n\t\t\tyakklMiscStore = getMiscStore();\n\t\t\tif (yakklMiscStore) {\n\t\t\t\tcurrentlySelected = await getYakklCurrentlySelected();\n\t\t\t\twallet = WalletManager.getInstance(\n\t\t\t\t\t['Alchemy'],\n\t\t\t\t\t['Ethereum'],\n\t\t\t\t\tcurrentlySelected.shortcuts.chainId ?? 1,\n\t\t\t\t\timport.meta.env.VITE_ALCHEMY_API_KEY_PROD\n\t\t\t\t);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tlog.error(`Error decrypting data: ${e}`);\n\t\t}\n\t});\n\n\tconst { form, errors, handleChange, handleSubmit, updateInitialValues } = createForm({\n\t\tinitialValues: { accountName: '', alias: '', prvKey: '' },\n\t\tvalidationSchema: yup.object().shape({\n\t\t\taccountName: yup.string().required('Please enter your account name for the address'),\n\t\t\talias: yup.string(),\n\t\t\tprvKey: yup\n\t\t\t\t.string()\n\t\t\t\t.required('Please paste or enter your Private Key for the address you are importing')\n\t\t}),\n\t\tonSubmit: async (data) => {\n\t\t\ttry {\n\t\t\t\tawait handleImport(data.accountName, data.alias, data.prvKey);\n\t\t\t} catch (e) {\n\t\t\t\terror = `Following error occurred: ${e}`;\n\t\t\t\tlog.error(error);\n\t\t\t}\n\t\t}\n\t});\n\n\tasync function checkIfAccountExists(name: string, address: string, alias: string) {\n\t\tconst yakklAccounts = await getYakklAccounts();\n\t\t// Check if the address exists in the accounts table along with the name and alias\n\t\tconst result = yakklAccounts.find((x) => {\n\t\t\tif (x.address === address || x.name === name || (alias && x.alias === alias)) return true;\n\t\t});\n\t\tif (result) {\n\t\t\treturn true;\n\t\t}\n\t\t// Double check if the address exists in the accounts or primary accounts tables\n\t\tconst { exists, table } = await addressExist(address);\n\t\treturn exists;\n\t}\n\n\tasync function handleImport(accountName: string, alias: string, prvKey: string) {\n\t\tif (browserSvelte) {\n\t\t\tif (!prvKey.trim()) {\n\t\t\t\terror = 'Please enter a valid private key.';\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!accountName.trim()) {\n\t\t\t\terror = 'Please enter a valid account name.';\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// EVM private key\n\t\t\tif (prvKey.startsWith('0x')) {\n\t\t\t\tprvKey = prvKey.substring(2);\n\t\t\t}\n\n\t\t\tif (await checkIfAccountExists(accountName, await getWallet(prvKey).getAddress(), alias)) {\n\t\t\t\terror =\n\t\t\t\t\t'Account already exists. Please enter a different account name, alias, or private key.';\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tshowConfetti = true;\n\n\t\t\tif (!currentlySelected) currentlySelected = await getYakklCurrentlySelected();\n\t\t\tif (isEncryptedData(currentlySelected.data)) {\n\t\t\t\tawait decryptData(currentlySelected.data, yakklMiscStore).then((result) => {\n\t\t\t\t\tcurrentlySelected.data = result as CurrentlySelectedData;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet profile: Profile = (currentlySelected.data as CurrentlySelectedData).profile as Profile;\n\t\t\tconst yakklAccount = yakklAccountDefault;\n\n\t\t\tif (profile) {\n\t\t\t\tprofile = deepCopy((currentlySelected.data as CurrentlySelectedData).profile);\n\t\t\t} else {\n\t\t\t\tprofile = (await getProfile()) as Profile;\n\t\t\t\t(currentlySelected.data as CurrentlySelectedData).profile = profile;\n\t\t\t}\n\n\t\t\tif (isEncryptedData(profile.data)) {\n\t\t\t\tawait decryptData(profile.data, yakklMiscStore).then((result) => {\n\t\t\t\t\tprofile.data = result as ProfileData;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (profile.data !== undefined && (profile.data as ProfileData).meta) {\n\t\t\t\t(profile.data as ProfileData).meta = {}; // Clear meta data\n\t\t\t}\n\n\t\t\tcurrentlySelected.shortcuts.type = 'Mainnet'; // Force mainnet for provider\n\t\t\tcurrentlySelected.shortcuts.chainId = chainId; // Force mainnet for provider\n\n\t\t\t// Alchemy wallet\n\t\t\tconst walletNew = getWallet(prvKey);\n\n\t\t\tyakklAccount.id = currentlySelected.id;\n\t\t\tyakklAccount.persona = currentlySelected?.persona || DEFAULT_PERSONA;\n\t\t\tyakklAccount.blockchain = currentlySelected.shortcuts.network.blockchain;\n\n\t\t\t(yakklAccount.data as AccountData).privateKey = prvKey;\n\t\t\t(yakklAccount.data as AccountData).path = ''; // Imported accounts are not derived\n\t\t\tyakklAccount.quantity = 0n; // Default\n\t\t\tyakklAccount.address = await walletNew.getAddress();\n\t\t\tyakklAccount.name = accountName;\n\t\t\tyakklAccount.alias = alias;\n\t\t\tyakklAccount.description = 'Imported account using private key';\n\n\t\t\tawait wallet\n\t\t\t\t.getBalance(yakklAccount.address)\n\t\t\t\t.then((result) => {\n\t\t\t\t\tif (result) yakklAccount.quantity = result;\n\t\t\t\t})\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tlog.error(`Import: error getting balance: ${e}`);\n\t\t\t\t});\n\n\t\t\tyakklAccount.index = -1;\n\t\t\tyakklAccount.accountType = AccountTypeCategory.IMPORTED;\n\t\t\tyakklAccount.primaryAccount = null; // Imported accounts do not have primary accounts\n\t\t\tyakklAccount.class = 'Default';\n\t\t\tyakklAccount.includeInPortfolio = true;\n\t\t\tyakklAccount.createDate = dateString();\n\t\t\tyakklAccount.updateDate = dateString();\n\t\t\tyakklAccount.version = VERSION;\n\n\t\t\tif (!isEncryptedData(yakklAccount.data)) {\n\t\t\t\tawait encryptData(yakklAccount.data, yakklMiscStore)\n\t\t\t\t\t.then((result) => {\n\t\t\t\t\t\tyakklAccount.data = result;\n\t\t\t\t\t})\n\t\t\t\t\t.catch((e) => {\n\t\t\t\t\t\tlog.error(`Import: error encrypting account data: ${e}`);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\t(currentlySelected.data as CurrentlySelectedData).account = yakklAccount;\n\t\t\t(currentlySelected.data as CurrentlySelectedData).primaryAccount = null; // Imported accounts do not have a primary account\n\n\t\t\tlet yakklAccounts: YakklAccount[] = await getYakklAccounts();\n\n\t\t\tif (!Array.isArray(yakklAccounts)) {\n\t\t\t\tyakklAccounts = [];\n\t\t\t}\n\n\t\t\tif (profile.data) {\n\t\t\t\tif (\n\t\t\t\t\t(profile.data as ProfileData).importedAccounts === undefined ||\n\t\t\t\t\t(profile.data as ProfileData).importedAccounts === null ||\n\t\t\t\t\t!Array.isArray((profile.data as ProfileData).importedAccounts)\n\t\t\t\t) {\n\t\t\t\t\t(profile.data as ProfileData).importedAccounts = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t(profile.data as ProfileData).importedAccounts.push(yakklAccount);\n\n\t\t\tif (!isEncryptedData(profile.data)) {\n\t\t\t\tawait encryptData(profile.data, yakklMiscStore).then((result) => {\n\t\t\t\t\tprofile.data = result;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t(currentlySelected.data as CurrentlySelectedData).profile = profile;\n\n\t\t\tcurrentlySelected.shortcuts.quantity = !yakklAccount.quantity ? '0.0' : yakklAccount.quantity;\n\t\t\tcurrentlySelected.shortcuts.address = yakklAccount.address;\n\t\t\tcurrentlySelected.shortcuts.accountName = accountName;\n\t\t\tcurrentlySelected.shortcuts.alias = alias;\n\t\t\tcurrentlySelected.shortcuts.accountType = AccountTypeCategory.IMPORTED;\n\t\t\tcurrentlySelected.shortcuts.primary = null;\n\n\t\t\tcurrentlySelected.shortcuts.network.blockchain = yakklAccount.blockchain;\n\t\t\tcurrentlySelected.shortcuts.network.chainId = chainId; // Defaults to mainnet\n\t\t\tcurrentlySelected.shortcuts.network.name = 'Mainnet'; // Defaults to mainnet - should change to read from getNetworkName(chainId)\n\t\t\tcurrentlySelected.shortcuts.network.explorer = 'https://etherscan.io'; // Defaults to etherscan\n\t\t\tcurrentlySelected.shortcuts.network.type = NetworkType.MAINNET; // Defaults to mainnet\n\t\t\tcurrentlySelected.shortcuts.network.decimals = 18; // Defaults to 18\n\t\t\tcurrentlySelected.shortcuts.network.symbol = getSymbol(yakklAccount.blockchain);\n\n\t\t\tyakklAccounts.push(yakklAccount);\n\n\t\t\tawait setProfileStorage(profile);\n\t\t\tawait setYakklAccountsStorage(yakklAccounts);\n\t\t\tawait setYakklCurrentlySelectedStorage(currentlySelected);\n\n\t\t\tonComplete(yakklAccount);\n\n\t\t\tshow = false;\n\t\t}\n\t}\n\n\tfunction closeModal() {\n\t\tshow = false;\n\t}\n\n\tfunction resetForm() {\n\t\tupdateInitialValues({\n\t\t\taccountName: '',\n\t\t\talias: '',\n\t\t\tprvKey: ''\n\t\t});\n\t}\n</script>\n\n<!-- {#if showConfetti} -->\n<!-- <Confetti /> -->\n<!-- <div use:confetti></div> -->\n<!-- {/if} -->\n\n<div class=\"relative {className}\">\n\t<Modal bind:show title=\"Import Account\" onClose={closeModal} {onCancel} {className}>\n\t\t<div class=\"p-6 border-t border-gray-500 dark:border-gray-300\">\n\t\t\t<p class=\"text-sm text-red-500 dark:text-red-300 mb-4\">\n\t\t\t\tPlease be careful! <strong>This private key is important!</strong>\n\t\t\t\tA bad actor could take the content of your wallet if they have access to your private key!\n\t\t\t</p>\n\t\t\t<form onsubmit={handleSubmit} class=\"space-y-4\">\n\t\t\t\t<div>\n\t\t\t\t\t<label\n\t\t\t\t\t\tfor=\"accountName\"\n\t\t\t\t\t\tclass=\"block text-sm font-medium text-gray-700 dark:text-gray-200\">Account Name</label\n\t\t\t\t\t>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"accountName\"\n\t\t\t\t\t\tclass=\"mt-1 block w-full rounded-md border-gray-500 dark:border-gray-50 shadow-sm focus:border-indigo-500 focus:ring-indigo-700 sm:text-sm\"\n\t\t\t\t\t\tbind:value={$form.accountName}\n\t\t\t\t\t\tonchange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t{#if $errors.accountName}\n\t\t\t\t\t\t<p class=\"mt-2 text-sm text-red-600\">{$errors.accountName}</p>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label for=\"alias\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-200\"\n\t\t\t\t\t\t>Alias (Optional)</label\n\t\t\t\t\t>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"alias\"\n\t\t\t\t\t\tclass=\"mt-1 block w-full rounded-md border-gray-500 dark:border-gray-50 shadow-sm focus:border-indigo-500 focus:ring-indigo-700 sm:text-sm\"\n\t\t\t\t\t\tbind:value={$form.alias}\n\t\t\t\t\t\tonchange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label for=\"prvKey\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-200\"\n\t\t\t\t\t\t>Private Key</label\n\t\t\t\t\t>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tid=\"prvKey\"\n\t\t\t\t\t\trows=\"3\"\n\t\t\t\t\t\tclass=\"mt-1 block w-full rounded-md border-gray-500 dark:border-gray-50 shadow-sm focus:border-indigo-500 focus:ring-indigo-700 sm:text-sm\"\n\t\t\t\t\t\tbind:value={$form.prvKey}\n\t\t\t\t\t\tonchange={handleChange}\n\t\t\t\t\t></textarea>\n\t\t\t\t\t{#if $errors.prvKey}\n\t\t\t\t\t\t<p class=\"mt-2 text-sm text-red-600\">{$errors.prvKey}</p>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"pt-5\">\n\t\t\t\t\t<div class=\"flex justify-end space-x-4\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclass=\"rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n\t\t\t\t\t\t\tonclick={onCancel}>Cancel</button\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclass=\"rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n\t\t\t\t\t\t\tonclick={resetForm}>Reset</button\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tclass=\"rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n\t\t\t\t\t\t\t>Import</button\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t{#if error}\n\t\t\t\t<p class=\"mt-4 text-sm text-red-600\">{error}</p>\n\t\t\t{/if}\n\t\t</div>\n\t</Modal>\n</div>\n","<!-- ImportWatch.svelte -->\n<script lang=\"ts\">\n\timport { onMount } from 'svelte';\n\timport { VERSION } from '$lib/common/constants';\n\timport { createForm } from 'svelte-forms-lib';\n\timport * as yup from 'yup';\n\timport {\n\t\tsetProfileStorage,\n\t\tgetYakklWatchList,\n\t\tsetYakklWatchListStorage,\n\t\tsetYakklCurrentlySelectedStorage,\n\t\tgetYakklCurrentlySelected,\n\t\tgetMiscStore,\n\t\tgetSettings\n\t} from '$lib/common/stores';\n\timport { encryptData, decryptData } from '$lib/common/encryption';\n\timport { deepCopy } from '$lib/utilities/utilities';\n\timport {\n\t\tisEncryptedData,\n\t\ttype CurrentlySelectedData,\n\t\ttype Profile,\n\t\ttype ProfileData,\n\t\ttype Settings,\n\t\ttype YakklCurrentlySelected,\n\t\ttype YakklWatch\n\t} from '$lib/common';\n\timport { dateString } from '$lib/common/datetime';\n\timport Modal from '$components/Modal.svelte';\n\n\tinterface Props {\n\t\tshow?: boolean;\n\t\tclassName?: string;\n\t\tonCancel?: () => void;\n\t\tonComplete?: (watch: YakklWatch) => void;\n\t}\n\n\tlet {\n\t\tshow = $bindable(false),\n\t\tclassName = 'z-[999]',\n\t\tonCancel = () => {},\n\t\tonComplete = () => {}\n\t}: Props = $props();\n\n\tlet currentlySelected: YakklCurrentlySelected;\n\tlet yakklMiscStore: string;\n\tlet yakklWatchListStore: YakklWatch[];\n\tlet yakklSettingsStore: Settings | null;\n\tlet error = $state('');\n\n\tonMount(async () => {\n\t\tcurrentlySelected = await getYakklCurrentlySelected();\n\t\tyakklMiscStore = getMiscStore();\n\t\tyakklWatchListStore = await getYakklWatchList();\n\t\tyakklSettingsStore = await getSettings();\n\t});\n\n\tconst { form, errors, handleChange, handleSubmit, updateInitialValues } = createForm({\n\t\tinitialValues: {\n\t\t\tblockchain: 'Ethereum',\n\t\t\taddress: '',\n\t\t\taddressName: '',\n\t\t\tincludeInPortfolio: false,\n\t\t\taddressAlias: '',\n\t\t\turl: ''\n\t\t},\n\t\tvalidationSchema: yup.object().shape({\n\t\t\tblockchain: yup.string().required('Please enter the crypto account network (watch-only)'),\n\t\t\taddress: yup.string().required('Please enter the crypto account (watch-only)'),\n\t\t\taddressName: yup.string().required('Please enter the account name (e.g., address alias)'),\n\t\t\tincludeInPortfolio: yup\n\t\t\t\t.boolean()\n\t\t\t\t.required('Please select if you want to include this account in your portfolio totals'),\n\t\t\taddressAlias: yup.string().optional(),\n\t\t\turl: yup.string().optional()\n\t\t}),\n\t\tonSubmit: async (data) => {\n\t\t\ttry {\n\t\t\t\tawait handleAddWatch(data);\n\t\t\t} catch (e) {\n\t\t\t\terror = `Error adding watch-only account: ${e}`;\n\t\t\t}\n\t\t}\n\t});\n\n\tasync function handleAddWatch(data: any) {\n\t\tlet watchList: YakklWatch[] = [];\n\n\t\tif (isEncryptedData(currentlySelected.data)) {\n\t\t\tawait decryptData(currentlySelected.data, yakklMiscStore).then((result) => {\n\t\t\t\tcurrentlySelected.data = result as CurrentlySelectedData;\n\t\t\t});\n\t\t}\n\n\t\tlet profile: Profile = deepCopy((currentlySelected.data as CurrentlySelectedData).profile);\n\t\tif (isEncryptedData(profile.data)) {\n\t\t\tawait decryptData(profile.data, yakklMiscStore).then((result) => {\n\t\t\t\tprofile.data = result as ProfileData;\n\t\t\t});\n\t\t}\n\n\t\tif ((profile.data as ProfileData).watchList.length > 0) {\n\t\t\tif (\n\t\t\t\t(profile.data as ProfileData).watchList.find(\n\t\t\t\t\t(watch: YakklWatch) =>\n\t\t\t\t\t\twatch.address === data.address && watch.blockchain === data.blockchain\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\terror = 'This account already exists for the given profile.';\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst currentDate: string = dateString();\n\n\t\tconst watch: YakklWatch = {\n\t\t\tid: profile.id,\n\t\t\tblockchain: data.blockchain,\n\t\t\tname: data.addressName,\n\t\t\ttags: [],\n\t\t\tquantity: 0n,\n\t\t\tincludeInPortfolio: data.includeInPortfolio,\n\t\t\texplorer: data.url,\n\t\t\taddress: data.address,\n\t\t\taddressAlias: data.addressAlias,\n\t\t\tversion: VERSION,\n\t\t\tcreateDate: currentDate,\n\t\t\tupdateDate: currentDate\n\t\t};\n\n\t\t(profile.data as ProfileData).watchList.push(watch);\n\n\t\tawait encryptData(profile.data, yakklMiscStore).then(async (result) => {\n\t\t\tprofile.data = result;\n\t\t\tawait setProfileStorage(profile);\n\t\t});\n\n\t\t(currentlySelected.data as CurrentlySelectedData).profile = deepCopy(profile);\n\n\t\tawait setYakklCurrentlySelectedStorage(currentlySelected);\n\n\t\twatchList = await getYakklWatchList();\n\n\t\tif (watchList?.length > 0) {\n\t\t\tif (\n\t\t\t\twatchList.find(\n\t\t\t\t\t(account) => account.address === data.address && account.blockchain === data.blockchain\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\terror = 'This account already exists.';\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\twatchList.push({\n\t\t\tid: profile.id,\n\t\t\tname: data.addressName,\n\t\t\ttags: [],\n\t\t\tquantity: '0.0',\n\t\t\tincludeInPortfolio: data.includeInPortfolio,\n\t\t\texplorer: data.url,\n\t\t\taddress: data.address,\n\t\t\taddressAlias: data.addressAlias,\n\t\t\tblockchain: data.blockchain,\n\t\t\tversion: yakklSettingsStore !== null ? yakklSettingsStore.version : VERSION,\n\t\t\tcreateDate: currentDate,\n\t\t\tupdateDate: currentDate\n\t\t});\n\n\t\tawait setYakklWatchListStorage(watchList);\n\n\t\tonComplete(watch);\n\n\t\tresetForm();\n\t\tshow = false;\n\t}\n\n\tfunction closeModal() {\n\t\tonCancel();\n\t\tresetForm();\n\t\tshow = false;\n\t}\n\n\tfunction resetForm() {\n\t\tupdateInitialValues({\n\t\t\tblockchain: 'Ethereum',\n\t\t\taddress: '',\n\t\t\taddressName: '',\n\t\t\tincludeInPortfolio: false,\n\t\t\taddressAlias: '',\n\t\t\turl: ''\n\t\t});\n\t}\n</script>\n\n<div class=\"relative {className}\">\n\t<Modal bind:show title=\"Add Watch-Only Address\" onClose={closeModal}>\n\t\t<div class=\"p-6\">\n\t\t\t<p class=\"text-sm text-green-500 mb-4\">\n\t\t\t\tThis is a <strong>WATCH - ONLY address</strong>. This means that you will not be able to\n\t\t\t\tperform any transactions with this specific address in YAKKL. You can\n\t\t\t\t<strong>Import</strong>\n\t\t\t\tthis address if you have your private key using the Import option. This `watch-only` address\n\t\t\t\tallows you to keep track of <strong>ALL</strong> of your crypto in one wallet and have a complete\n\t\t\t\tportfolio view. For example, if you have an account with a centralized exchange like Coinbase,\n\t\t\t\tKraken, Binance, etc. You can also use this feature to keep track of addresses belonging to others\n\t\t\t\t(e.g, `whales`, `market makers`) and be alerted on activities (useful for staying aware of potential\n\t\t\t\tmarket moves).\n\t\t\t</p>\n\t\t\t<form onsubmit={handleSubmit} class=\"space-y-4\">\n\t\t\t\t<div>\n\t\t\t\t\t<label for=\"blockchain\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-200\"\n\t\t\t\t\t\t>Blockchain</label\n\t\t\t\t\t>\n\t\t\t\t\t<select\n\t\t\t\t\t\tid=\"blockchain\"\n\t\t\t\t\t\tclass=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n\t\t\t\t\t\tbind:value={$form.blockchain}\n\t\t\t\t\t\tonchange={handleChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"Ethereum\">Ethereum</option>\n\t\t\t\t\t\t<option value=\"Polygon\">Polygon</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label for=\"address\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-200\"\n\t\t\t\t\t\t>Address</label\n\t\t\t\t\t>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"address\"\n\t\t\t\t\t\tclass=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n\t\t\t\t\t\tbind:value={$form.address}\n\t\t\t\t\t\tonchange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t{#if $errors.address}\n\t\t\t\t\t\t<p class=\"mt-2 text-sm text-red-600\">{$errors.address}</p>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label\n\t\t\t\t\t\tfor=\"addressName\"\n\t\t\t\t\t\tclass=\"block text-sm font-medium text-gray-700 dark:text-gray-200\">Address Name</label\n\t\t\t\t\t>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"addressName\"\n\t\t\t\t\t\tclass=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n\t\t\t\t\t\tbind:value={$form.addressName}\n\t\t\t\t\t\tonchange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t{#if $errors.addressName}\n\t\t\t\t\t\t<p class=\"mt-2 text-sm text-red-600\">{$errors.addressName}</p>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"flex items-center\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tid=\"includeInPortfolio\"\n\t\t\t\t\t\tclass=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n\t\t\t\t\t\tbind:checked={$form.includeInPortfolio}\n\t\t\t\t\t\tonchange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<label\n\t\t\t\t\t\tfor=\"includeInPortfolio\"\n\t\t\t\t\t\tclass=\"ml-2 block text-sm text-gray-700 dark:text-gray-200\"\n\t\t\t\t\t\t>Include this account in your portfolio totals?</label\n\t\t\t\t\t>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label\n\t\t\t\t\t\tfor=\"addressAlias\"\n\t\t\t\t\t\tclass=\"block text-sm font-medium text-gray-700 dark:text-gray-200\"\n\t\t\t\t\t\t>Address Alias (optional)</label\n\t\t\t\t\t>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"addressAlias\"\n\t\t\t\t\t\tclass=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n\t\t\t\t\t\tbind:value={$form.addressAlias}\n\t\t\t\t\t\tonchange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label for=\"url\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-200\"\n\t\t\t\t\t\t>Explorer URL - checking address data (optional)</label\n\t\t\t\t\t>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"url\"\n\t\t\t\t\t\tclass=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n\t\t\t\t\t\tbind:value={$form.url}\n\t\t\t\t\t\tonchange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"pt-5\">\n\t\t\t\t\t<div class=\"flex justify-end space-x-4\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclass=\"rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n\t\t\t\t\t\t\tonclick={closeModal}>Cancel</button\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclass=\"rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n\t\t\t\t\t\t\tonclick={resetForm}>Reset</button\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tclass=\"rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n\t\t\t\t\t\t\t>Save</button\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t{#if error}\n\t\t\t\t<p class=\"mt-4 text-sm text-red-600\">{error}</p>\n\t\t\t{/if}\n\t\t</div>\n\t</Modal>\n</div>\n"],"names":["className","$.prop","$$props","showLabel","$$render","consequent","resetForm","_","updateInitialValues","accountName","alias","prvKey","wallet","currentlySelected","yakklMiscStore","chainId","error","$.tag","$.state","showConfetti","show","onComplete","onCancel","onMount","async","getMiscStore","getYakklCurrentlySelected","WalletManager","getInstance","shortcuts","e","log","form","errors","handleChange","handleSubmit","createForm","initialValues","validationSchema","yup.object","shape","yup.string","required","onSubmit","data","handleImport","set","checkIfAccountExists","name","address","yakklAccounts","getYakklAccounts","result","find","x","$.strict_equals","exists","table","addressExist","browserSvelte","trim","startsWith","substring","getWallet","getAddress","isEncryptedData","decryptData","then","profile","yakklAccount","yakklAccountDefault","deepCopy","getProfile","meta","type","walletNew","id","yakklAccount$1","persona","DEFAULT_PERSONA","blockchain","network","privateKey","path","quantity","description","getBalance","catch","index","accountType","AccountTypeCategory","IMPORTED","primaryAccount","class","includeInPortfolio","createDate","dateString","updateDate","version","VERSION","encryptData","account","Array","isArray","importedAccounts","push","primary","explorer","NetworkType","MAINNET","decimals","symbol","getSymbol","setProfileStorage","setYakklAccountsStorage","setYakklCurrentlySelectedStorage","closeModal","this","$$args","ImportPrivateKey","$.template_effect","$.set_text","text","$errors","text_1","consequent_1","consequent_2","$.bind_value","input","$form","$$value","$.store_mutate","$.untrack","input_1","textarea","yakklSettingsStore","getYakklWatchList","getSettings","addressName","addressAlias","url","yup.boolean","optional","handleAddWatch","watchList","length","watch","currentDate","tags","setYakklWatchListStorage","ImportWatchAccount","$.bind_select_value","select","$.bind_checked","input_2","input_3","input_4"],"mappings":"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"}