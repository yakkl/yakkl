{"version":3,"file":"COgMMZ9C.js","sources":["../../../../../../../../node_modules/.pnpm/svelte@5.34.3/node_modules/svelte/src/internal/client/dev/ownership.js"],"sourcesContent":["/** @typedef {{ file: string, line: number, column: number }} Location */\n\nimport { get_descriptor } from '../../shared/utils.js';\nimport { LEGACY_PROPS, STATE_SYMBOL } from '#client/constants';\nimport { FILENAME } from '../../../constants.js';\nimport { component_context } from '../context.js';\nimport * as w from '../warnings.js';\nimport { sanitize_location } from '../../../utils.js';\n\n/**\n * Sets up a validator that\n * - traverses the path of a prop to find out if it is allowed to be mutated\n * - checks that the binding chain is not interrupted\n * @param {Record<string, any>} props\n */\nexport function create_ownership_validator(props) {\n\tconst component = component_context?.function;\n\tconst parent = component_context?.p?.function;\n\n\treturn {\n\t\t/**\n\t\t * @param {string} prop\n\t\t * @param {any[]} path\n\t\t * @param {any} result\n\t\t * @param {number} line\n\t\t * @param {number} column\n\t\t */\n\t\tmutation: (prop, path, result, line, column) => {\n\t\t\tconst name = path[0];\n\t\t\tif (is_bound_or_unset(props, name) || !parent) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\t/** @type {any} */\n\t\t\tlet value = props;\n\n\t\t\tfor (let i = 0; i < path.length - 1; i++) {\n\t\t\t\tvalue = value[path[i]];\n\t\t\t\tif (!value?.[STATE_SYMBOL]) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst location = sanitize_location(`${component[FILENAME]}:${line}:${column}`);\n\n\t\t\tw.ownership_invalid_mutation(name, location, prop, parent[FILENAME]);\n\n\t\t\treturn result;\n\t\t},\n\t\t/**\n\t\t * @param {any} key\n\t\t * @param {any} child_component\n\t\t * @param {() => any} value\n\t\t */\n\t\tbinding: (key, child_component, value) => {\n\t\t\tif (!is_bound_or_unset(props, key) && parent && value()?.[STATE_SYMBOL]) {\n\t\t\t\tw.ownership_invalid_binding(\n\t\t\t\t\tcomponent[FILENAME],\n\t\t\t\t\tkey,\n\t\t\t\t\tchild_component[FILENAME],\n\t\t\t\t\tparent[FILENAME]\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Record<string, any>} props\n * @param {string} prop_name\n */\nfunction is_bound_or_unset(props, prop_name) {\n\t// Can be the case when someone does `mount(Component, props)` with `let props = $state({...})`\n\t// or `createClassComponent(Component, props)`\n\tconst is_entry_props = STATE_SYMBOL in props || LEGACY_PROPS in props;\n\treturn (\n\t\t!!get_descriptor(props, prop_name)?.set ||\n\t\t(is_entry_props && prop_name in props) ||\n\t\t!(prop_name in props)\n\t);\n}\n"],"names":["create_ownership_validator","props","component","_a","component_context","function","parent","_c","_b","p","mutation","prop","path","result","line","column","name","is_bound_or_unset","value","i","length","STATE_SYMBOL","location","sanitize_location","FILENAME","w.ownership_invalid_mutation","binding","key","child_component","w.ownership_invalid_binding","prop_name","is_entry_props","LEGACY_PROPS","get_descriptor","set"],"mappings":"yOAeO,SAASA,2BAA2BC,oBAC1C,MAAMC,WAAYC,GAAmBC,oBAAA,UAAA,EAAAD,GAAAE,SAC/B,MAAAC,QAASC,IAAmBC,GAAAJ,oBAAA,UAAA,EAAAI,GAAAC,IAAnB,UAAsB,EAAAF,GAAAF,SAE9B,MAAA,CAQNK,SAAU,CAACC,KAAMC,KAAMC,OAAQC,KAAMC,UAC9B,MAAAC,KAAOJ,KAAK,GAClB,GAAIK,kBAAkBhB,MAAOe,QAAUV,OAAQ,CACvC,OAAAO,MACX,CAGG,IAAIK,MAAQjB,MAEZ,IAAA,IAASkB,EAAI,EAAGA,EAAIP,KAAKQ,OAAS,EAAGD,IAAK,CACjCD,MAAAA,MAAMN,KAAKO,IACf,KAACD,yBAAQG,eAAe,CACpB,OAAAR,MACZ,CACA,CAES,MAAAS,SAAWC,kBAAkB,GAAGrB,UAAUsB,aAAaV,QAAQC,UAErEU,2BAA6BT,KAAMM,SAAUX,KAAML,OAAOkB,WAEnD,OAAAX,QAORa,QAAS,CAACC,IAAKC,gBAAiBV,iBAC3B,IAACD,kBAAkBhB,MAAO0B,MAAQrB,UAAUH,IAAAe,UAAA,UAAAf,EAAAA,IAAUkB,eAAe,CACxEQ,0BACC3B,UAAUsB,UACVG,IACAC,gBAAgBJ,UAChBlB,OAAOkB,UAEZ,GAGA,CAMA,SAASP,kBAAkBhB,MAAO6B,kBAG3B,MAAAC,eAAiBV,gBAAgBpB,OAAS+B,gBAAgB/B,MAChE,UACGE,GAAe8B,eAAAhC,MAAO6B,aAAtB,UAAkC,EAAA3B,GAAA+B,MACnCH,gBAAkBD,aAAa7B,SAC9B6B,aAAa7B,MAEjB","x_google_ignoreList":[0]}